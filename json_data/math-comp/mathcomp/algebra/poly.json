{
    "filename": "mathcomp/algebra/poly.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq div choice fintype.",
            "VernacRequire",
            "e665c6902e70ac801e5b749428ba09cedb8a2b75"
        ],
        [
            "From mathcomp Require Import bigop ssralg countalg binomial tuple.",
            "VernacRequire",
            "bb759a062981ff77c49344aebdc44b6f568f472f"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GRing.Theory.",
            "VernacImport",
            "a0fcf55540300b9b0e54bd28a113c5228ff530f4"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Reserved Notation \"{ 'poly' T }\" (at level 0, format \"{ 'poly' T }\").",
            "VernacSyntaxExtension",
            "0b8ca2317bf9e1fee2cfc36c2b26491afd8d44c3"
        ],
        [
            "Reserved Notation \"c %:P\" (at level 2, format \"c %:P\").",
            "VernacSyntaxExtension",
            "3d3cb954830ba2b5ff0800e017f517395f266792"
        ],
        [
            "Reserved Notation \"p ^:P\" (at level 2, format \"p ^:P\").",
            "VernacSyntaxExtension",
            "52e22ae5c2462e45c15d81c41ce5dcb84dea1abe"
        ],
        [
            "Reserved Notation \"'X\" (at level 0).",
            "VernacSyntaxExtension",
            "baa308f334c10e6f41e6fc2ca224bf00da3883b1"
        ],
        [
            "Reserved Notation \"''X^' n\" (at level 3, n at level 2, format \"''X^' n\").",
            "VernacSyntaxExtension",
            "df66bdeaf7e5fb05d853baafc2d230a1d62d9850"
        ],
        [
            "Reserved Notation \"\\poly_ ( i < n ) E\" (at level 36, E at level 36, i, n at level 50, format \"\\poly_ ( i < n ) E\").",
            "VernacSyntaxExtension",
            "cf882a71c46fcb3875fe5f721e52db3176544956"
        ],
        [
            "Reserved Notation \"p \\Po q\" (at level 50).",
            "VernacSyntaxExtension",
            "477b31ce2779a473fc734da3ece7ef35f061182b"
        ],
        [
            "Reserved Notation \"p ^`N ( n )\" (at level 8, format \"p ^`N ( n )\").",
            "VernacSyntaxExtension",
            "0e92564ea22d10c01eae7a814f059fb286f40c69"
        ],
        [
            "Reserved Notation \"n .-unity_root\" (at level 2, format \"n .-unity_root\").",
            "VernacSyntaxExtension",
            "21a69a8544cf774eb048d2702417caa9ddef82fe"
        ],
        [
            "Reserved Notation \"n .-primitive_root\" (at level 2, format \"n .-primitive_root\").",
            "VernacSyntaxExtension",
            "d4a607786c9c3797b578b72132d3364c3ed7d638"
        ],
        [
            "Local Notation simp := Monoid.simpm.",
            "VernacSyntacticDefinition",
            "377cb83857be8bbb2b92076c866dfea02d5a51c0"
        ],
        [
            "Section Polynomial.",
            "VernacBeginSection",
            "a19cebc9282b85b075cc73d5089b6251de93e087"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Record polynomial := Polynomial {polyseq :> seq R; _ : last 1 polyseq != 0}.",
            "VernacInductive",
            "f90b6ebe13af744f215862a197a74e5d35356913"
        ],
        [
            "Canonical polynomial_subType := Eval hnf in [subType for polyseq].",
            "VernacDefinition",
            "69d13ecd8c7cbeba179563f5df082d5cfa225e04"
        ],
        [
            "Definition polynomial_eqMixin := Eval hnf in [eqMixin of polynomial by <:].",
            "VernacDefinition",
            "4e00240759dea8e49ac9e08e377804f7d667fc34"
        ],
        [
            "Canonical polynomial_eqType := Eval hnf in EqType polynomial polynomial_eqMixin.",
            "VernacDefinition",
            "72c24e5dacd0a229754b8f0d8b4adcd75466f31b"
        ],
        [
            "Definition polynomial_choiceMixin := [choiceMixin of polynomial by <:].",
            "VernacDefinition",
            "07bac794848072a653327f2d0df358c43603aa9e"
        ],
        [
            "Canonical polynomial_choiceType := Eval hnf in ChoiceType polynomial polynomial_choiceMixin.",
            "VernacDefinition",
            "63ed4beb3d654deac0d3c843f9bf03ad58752914"
        ],
        [
            "Lemma poly_inj : injective polyseq.",
            "VernacStartTheoremProof",
            "e38f210e4c0b7ce771f2f0d28d5b3d6f50beec3f"
        ],
        [
            "exact: val_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition poly_of of phant R := polynomial.",
            "VernacDefinition",
            "e974d99fb960ba5e48c0c57774864973742c561b"
        ],
        [
            "Identity Coercion type_poly_of : poly_of >-> polynomial.",
            "VernacIdentityCoercion",
            "577204728607889db89f6c1e2a4eaf913e445550"
        ],
        [
            "Definition coefp_head h i (p : poly_of (Phant R)) := let: tt := h in p`_i.",
            "VernacDefinition",
            "26f77006748450c052653af6d17f281d5e78d58e"
        ],
        [
            "End Polynomial.",
            "VernacEndSegment",
            "fb43b51562d511c8e0b0dc73f910cebde5b18726"
        ],
        [
            "Bind Scope ring_scope with poly_of.",
            "VernacBindScope",
            "a6ee530c6dcdefaaae3947c4f71488af597f93c4"
        ],
        [
            "Bind Scope ring_scope with polynomial.",
            "VernacBindScope",
            "63bb55d37a0da74e22e125f6a086c63b7e0d3035"
        ],
        [
            "Arguments polyseq {R} p%R.",
            "VernacArguments",
            "ee6803f758f623d7fc8e30bd1c5380f2d59f5d78"
        ],
        [
            "Arguments poly_inj {R} [p1%R p2%R] : rename.",
            "VernacArguments",
            "b3fbc1e7577c33e7973cb66c8db40a455151c107"
        ],
        [
            "Arguments coefp_head {R} h i%N p%R.",
            "VernacArguments",
            "95623865eb1bdd3949c6b75f7d2625a64167d651"
        ],
        [
            "Notation \"{ 'poly' T }\" := (poly_of (Phant T)).",
            "VernacNotation",
            "2abac12aed5a9ce5c6ebeecc4c7b5a21f83cac12"
        ],
        [
            "Notation coefp i := (coefp_head tt i).",
            "VernacSyntacticDefinition",
            "204c35675042cb11fad4fe33b8f386949ce14279"
        ],
        [
            "Definition poly_countMixin (R : countRingType) := [countMixin of polynomial R by <:].",
            "VernacDefinition",
            "a2e6d8d26bae87c13598db17397922f31ec17720"
        ],
        [
            "Canonical polynomial_countType R := CountType _ (poly_countMixin R).",
            "VernacDefinition",
            "77e674e01acbef2d1f8e01eb0c214611ed4cda28"
        ],
        [
            "Canonical poly_countType (R : countRingType) := [countType of {poly R}].",
            "VernacDefinition",
            "2a318842f667fae24c63472980f1a403e3153994"
        ],
        [
            "Section PolynomialTheory.",
            "VernacBeginSection",
            "cfff6a5b6b5af9d2d2ef479e480da13c6806c6b2"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Types (a b c x y z : R) (p q r d : {poly R}).",
            "VernacReserve",
            "5f50b37a97feaccf09bcb14a086a20485c469b8c"
        ],
        [
            "Canonical poly_subType := Eval hnf in [subType of {poly R}].",
            "VernacDefinition",
            "17e4407d3de105f4a7278cf23d362756c7bd629c"
        ],
        [
            "Canonical poly_eqType := Eval hnf in [eqType of {poly R}].",
            "VernacDefinition",
            "4bec9a9f042690c965c80895e1af2073ced1e410"
        ],
        [
            "Canonical poly_choiceType := Eval hnf in [choiceType of {poly R}].",
            "VernacDefinition",
            "9418fab8cfa6fac607f1c68a47901ead41a4f310"
        ],
        [
            "Definition lead_coef p := p`_(size p).-1.",
            "VernacDefinition",
            "fdb7ec096a6ed4e004d3125106b8c3d4703b88e5"
        ],
        [
            "Lemma lead_coefE p : lead_coef p = p`_(size p).-1.",
            "VernacStartTheoremProof",
            "760c446ae2b28c860bb7a95b7343db6db10a5639"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition poly_nil := @Polynomial R [::] (oner_neq0 R).",
            "VernacDefinition",
            "857775f4b40e090ed6104a3756f1119440ec6ed5"
        ],
        [
            "Definition polyC c : {poly R} := insubd poly_nil [:: c].",
            "VernacDefinition",
            "024eca25db1767e4fa5841259dc4844d78503f59"
        ],
        [
            "Local Notation \"c %:P\" := (polyC c).",
            "VernacNotation",
            "0bb2db42d15e7fa7a5f19eca1f0e00d2a52c7dea"
        ],
        [
            "Lemma polyseqC c : c%:P = nseq (c != 0) c :> seq R.",
            "VernacStartTheoremProof",
            "db3a6ad71829cab3745eb3ec0ba4d7ebb55d5800"
        ],
        [
            "by rewrite val_insubd /=; case: (c == 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_polyC c : size c%:P = (c != 0).",
            "VernacStartTheoremProof",
            "2e6575b29d34a5b8f87a968686deb5910d897df9"
        ],
        [
            "by rewrite polyseqC size_nseq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefC c i : c%:P`_i = if i == 0%N then c else 0.",
            "VernacStartTheoremProof",
            "11c6b45d377cbb4ed1f678d891790eabc5f0a8df"
        ],
        [
            "by rewrite polyseqC; case: i => [|[]]; case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyCK : cancel polyC (coefp 0).",
            "VernacStartTheoremProof",
            "30f8bce0bea7be5ccfbaaacd34fa75379b864d4a"
        ],
        [
            "by move=> c; rewrite [coefp 0 _]coefC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyC_inj : injective polyC.",
            "VernacStartTheoremProof",
            "4ee10cfc241e8f39877f8c4abac8eb7ef237c38a"
        ],
        [
            "by move=> c1 c2 eqc12; have:= coefC c2 0; rewrite -eqc12 coefC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coefC c : lead_coef c%:P = c.",
            "VernacStartTheoremProof",
            "f4e05e2748a75f71b60bf514397e3efdd503db50"
        ],
        [
            "by rewrite /lead_coef polyseqC; case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyP p q : nth 0 p =1 nth 0 q <-> p = q.",
            "VernacStartTheoremProof",
            "d836263506e5fbba658ccc35539dbfc7721d99c1"
        ],
        [
            "split=> [eq_pq | -> //]; apply: poly_inj.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "without loss lt_pq: p q eq_pq / size p < size q.",
            "VernacExtend",
            "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
        ],
        [
            "move=> IH; case: (ltngtP (size p) (size q)); try by move/IH->.",
            "VernacExtend",
            "6274e9434bf54e75344de378505a0e39515ff88d"
        ],
        [
            "by move/(@eq_from_nth _ 0); apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: q => q nz_q /= in lt_pq eq_pq *; case/eqP: nz_q.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite (last_nth 0) -(subnKC lt_pq) /= -eq_pq nth_default ?leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size1_polyC p : size p <= 1 -> p = (p`_0)%:P.",
            "VernacStartTheoremProof",
            "dfe4a5ce31257226bf8712d39ffcbcee4483e74a"
        ],
        [
            "move=> le_p_1; apply/polyP=> i; rewrite coefC.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case: i => // i; rewrite nth_default // (leq_trans le_p_1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cons_poly c p : {poly R} := if p is Polynomial ((_ :: _) as s) ns then @Polynomial R (c :: s) ns else c%:P.",
            "VernacDefinition",
            "2f178fe8b7e8e4a4fd46df4283101bbaff975fc0"
        ],
        [
            "Lemma polyseq_cons c p : cons_poly c p = (if ~~ nilp p then c :: p else c%:P) :> seq R.",
            "VernacStartTheoremProof",
            "85edd2f48f06b638f00012aa26a6bf2ec92865c0"
        ],
        [
            "by case: p => [[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_cons_poly c p : size (cons_poly c p) = (if nilp p && (c == 0) then 0%N else (size p).+1).",
            "VernacStartTheoremProof",
            "4289a2294986a2e9af8b1e236d4f43d49ee4138b"
        ],
        [
            "by case: p => [[|c' s] _] //=; rewrite size_polyC; case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coef_cons c p i : (cons_poly c p)`_i = if i == 0%N then c else p`_i.-1.",
            "VernacStartTheoremProof",
            "135d00dc05f0514422b5d83d627898ee3194f8e3"
        ],
        [
            "by case: p i => [[|c' s] _] [] //=; rewrite polyseqC; case: eqP => //= _ [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Poly := foldr cons_poly 0%:P.",
            "VernacDefinition",
            "307003b81954ae16e0b1a619cd7134cbc27da827"
        ],
        [
            "Lemma PolyK c s : last c s != 0 -> Poly s = s :> seq R.",
            "VernacStartTheoremProof",
            "95a080a2d30dabc9a96d2c412b3dd01ba6408ee8"
        ],
        [
            "case: s => {c}/= [_ |c s]; first by rewrite polyseqC eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "elim: s c => /= [|a s IHs] c nz_c; rewrite polyseq_cons ?{}IHs //.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "by rewrite !polyseqC !eqxx nz_c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyseqK p : Poly p = p.",
            "VernacStartTheoremProof",
            "4fb3c6b03020105acc384a6193ec0e4542ba7887"
        ],
        [
            "by apply: poly_inj; apply: PolyK (valP p).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_Poly s : size (Poly s) <= size s.",
            "VernacStartTheoremProof",
            "a6fb0a1dff0817c3c1288a6444d9434e8f350ea1"
        ],
        [
            "elim: s => [|c s IHs] /=; first by rewrite polyseqC eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite polyseq_cons; case: ifP => // _; rewrite size_polyC; case: (~~ _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coef_Poly s i : (Poly s)`_i = s`_i.",
            "VernacStartTheoremProof",
            "c11010b42fcaabd13c0b1e84b57a904ab3c92e35"
        ],
        [
            "by elim: s i => [|c s IHs] /= [|i]; rewrite !(coefC, eqxx, coef_cons) /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition poly_expanded_def n E := Poly (mkseq E n).",
            "VernacDefinition",
            "56b7432dca3d9de80f96ee99dbb1c7f4b680e70b"
        ],
        [
            "Fact poly_key : unit.",
            "VernacStartTheoremProof",
            "4a63d735b27625d9e9ea832266afb6a155d231f8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition poly := locked_with poly_key poly_expanded_def.",
            "VernacDefinition",
            "34f274f57d6760185da0c7a13a7e36f1ffdcd429"
        ],
        [
            "Canonical poly_unlockable := [unlockable fun poly].",
            "VernacDefinition",
            "626e81d769a374941c9aec77fd226946a017098e"
        ],
        [
            "Local Notation \"\\poly_ ( i < n ) E\" := (poly n (fun i : nat => E)).",
            "VernacNotation",
            "c2b02c2cd933c6e4d3b8e9ef706d13396e5978f1"
        ],
        [
            "Lemma polyseq_poly n E : E n.-1 != 0 -> \\poly_(i < n) E i = mkseq [eta E] n :> seq R.",
            "VernacStartTheoremProof",
            "28f67c21188e611a622f8204c954b3832f2add97"
        ],
        [
            "rewrite unlock; case: n => [|n] nzEn; first by rewrite polyseqC eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (@PolyK 0) // -nth_last nth_mkseq size_mkseq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly n E : size (\\poly_(i < n) E i) <= n.",
            "VernacStartTheoremProof",
            "87446faaec1c17aa694a1c9e9dd37a4ec18470c9"
        ],
        [
            "by rewrite unlock (leq_trans (size_Poly _)) ?size_mkseq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly_eq n E : E n.-1 != 0 -> size (\\poly_(i < n) E i) = n.",
            "VernacStartTheoremProof",
            "a91a6b079c88e6dc8e96df73b4de56a08549a98d"
        ],
        [
            "by move/polyseq_poly->; apply: size_mkseq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coef_poly n E k : (\\poly_(i < n) E i)`_k = (if k < n then E k else 0).",
            "VernacStartTheoremProof",
            "a89c9c40896efeb6f5084383e745001e1a8f477e"
        ],
        [
            "rewrite unlock coef_Poly.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [lt_kn | le_nk] := ltnP k n; first by rewrite nth_mkseq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite nth_default // size_mkseq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_poly n E : n > 0 -> E n.-1 != 0 -> lead_coef (\\poly_(i < n) E i) = E n.-1.",
            "VernacStartTheoremProof",
            "3df04cea1c856acfa2187453a05d8cd21fb79604"
        ],
        [
            "by case: n => // n _ nzE; rewrite /lead_coef size_poly_eq // coef_poly leqnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefK p : \\poly_(i < size p) p`_i = p.",
            "VernacStartTheoremProof",
            "e65b776a09dc8ad56232bf65bf460aa20b2bfa86"
        ],
        [
            "by apply/polyP=> i; rewrite coef_poly; case: ltnP => // /(nth_default 0)->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition add_poly_def p q := \\poly_(i < maxn (size p) (size q)) (p`_i + q`_i).",
            "VernacDefinition",
            "432b2293486e6d50f3c40a0330f0f55a889dafa3"
        ],
        [
            "Fact add_poly_key : unit.",
            "VernacStartTheoremProof",
            "ce694583579aa918da7442e3c34ecbc57ce9228d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition add_poly := locked_with add_poly_key add_poly_def.",
            "VernacDefinition",
            "9120473f5bd3b704f97c2287ba2b413449237e02"
        ],
        [
            "Canonical add_poly_unlockable := [unlockable fun add_poly].",
            "VernacDefinition",
            "1ddccc9620f76a713071f806c24cf22a2101ccc8"
        ],
        [
            "Definition opp_poly_def p := \\poly_(i < size p) - p`_i.",
            "VernacDefinition",
            "3f8139697100797363bb7065941c2696a00b3f88"
        ],
        [
            "Fact opp_poly_key : unit.",
            "VernacStartTheoremProof",
            "d3c051b4296d2d7d0a01190331a9ac96c3d48dff"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition opp_poly := locked_with opp_poly_key opp_poly_def.",
            "VernacDefinition",
            "7b943e887a47660e58d5ecfe4604999c720aae6b"
        ],
        [
            "Canonical opp_poly_unlockable := [unlockable fun opp_poly].",
            "VernacDefinition",
            "4f92cf351490d91d9762829a912627604cb58add"
        ],
        [
            "Fact coef_add_poly p q i : (add_poly p q)`_i = p`_i + q`_i.",
            "VernacStartTheoremProof",
            "62398d3522a0ead21e33acc22e3070d1cce07e4a"
        ],
        [
            "rewrite unlock coef_poly; case: leqP => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite geq_max => /andP[le_p_i le_q_i]; rewrite !nth_default ?add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact coef_opp_poly p i : (opp_poly p)`_i = - p`_i.",
            "VernacStartTheoremProof",
            "ca20746d504b2f85bab60ba969a7b43da92a45ee"
        ],
        [
            "rewrite unlock coef_poly /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: leqP => // le_p_i; rewrite nth_default ?oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact add_polyA : associative add_poly.",
            "VernacStartTheoremProof",
            "008c97f4f6199737bc01204f3f4c102300283d44"
        ],
        [
            "by move=> p q r; apply/polyP=> i; rewrite !coef_add_poly addrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact add_polyC : commutative add_poly.",
            "VernacStartTheoremProof",
            "444e585f246f808e767fdf831a84ffa7c20879d7"
        ],
        [
            "by move=> p q; apply/polyP=> i; rewrite !coef_add_poly addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact add_poly0 : left_id 0%:P add_poly.",
            "VernacStartTheoremProof",
            "56dca7338668d8e7837c28f9dc8a8aeb292ea5b1"
        ],
        [
            "by move=> p; apply/polyP=> i; rewrite coef_add_poly coefC if_same add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact add_polyN : left_inverse 0%:P opp_poly add_poly.",
            "VernacStartTheoremProof",
            "a642e68bdcc3c8dc771e57a241eabc837baef55e"
        ],
        [
            "move=> p; apply/polyP=> i.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite coef_add_poly coef_opp_poly coefC if_same addNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition poly_zmodMixin := ZmodMixin add_polyA add_polyC add_poly0 add_polyN.",
            "VernacDefinition",
            "f3aeee20ed2b173ef9e0f539918d698329553707"
        ],
        [
            "Canonical poly_zmodType := Eval hnf in ZmodType {poly R} poly_zmodMixin.",
            "VernacDefinition",
            "c9f55de2ba6127352d198e62e1f7793202f0e91e"
        ],
        [
            "Canonical polynomial_zmodType := Eval hnf in ZmodType (polynomial R) poly_zmodMixin.",
            "VernacDefinition",
            "17920a98cc11de83a0e5aa5bb288974476567b79"
        ],
        [
            "Lemma polyC0 : 0%:P = 0 :> {poly R}.",
            "VernacStartTheoremProof",
            "72d3f9f82851b1d962bd1fbe33c5ec47c3f69b73"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyseq0 : (0 : {poly R}) = [::] :> seq R.",
            "VernacStartTheoremProof",
            "150efb5803fc1cb50546d0705339e4ee02ab34dc"
        ],
        [
            "by rewrite polyseqC eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly0 : size (0 : {poly R}) = 0%N.",
            "VernacStartTheoremProof",
            "bfdcd2c7afb11ced75460813241db44bee0103a2"
        ],
        [
            "by rewrite polyseq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coef0 i : (0 : {poly R})`_i = 0.",
            "VernacStartTheoremProof",
            "1bddfc31e0b9076a4d31c218e84f894bf9514a5e"
        ],
        [
            "by rewrite coefC if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef0 : lead_coef 0 = 0 :> R.",
            "VernacStartTheoremProof",
            "73d7a4e4e39cd1c7eab34bf942aa7cbb987b775b"
        ],
        [
            "exact: lead_coefC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly_eq0 p : (size p == 0%N) = (p == 0).",
            "VernacStartTheoremProof",
            "342313ec0b799fcb7fe8d3c62df26a6bc649e33b"
        ],
        [
            "by rewrite size_eq0 -polyseq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly_leq0 p : (size p <= 0) = (p == 0).",
            "VernacStartTheoremProof",
            "d3742f94d440083d86a5e116f2b23dc723bd074b"
        ],
        [
            "by rewrite leqn0 size_poly_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly_leq0P p : reflect (p = 0) (size p <= 0%N).",
            "VernacStartTheoremProof",
            "2ede2ce9421e52ee98b0c29f8575578525c6e360"
        ],
        [
            "by apply: (iffP idP); rewrite size_poly_leq0; move/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly_gt0 p : (0 < size p) = (p != 0).",
            "VernacStartTheoremProof",
            "9b8e4683c0d072c5eef9b49fc6bab56fd380d554"
        ],
        [
            "by rewrite lt0n size_poly_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt_size_poly_neq0 p n : (size p > n)%N -> p != 0.",
            "VernacStartTheoremProof",
            "6876f0d6de6ff1f38e456cd4e2e0b72699aa5b5b"
        ],
        [
            "by move=> /(leq_ltn_trans _) h; rewrite -size_poly_eq0 lt0n_neq0 ?h.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_poly p : nilp p = (p == 0).",
            "VernacStartTheoremProof",
            "348bc8aa28132862b960af00c7e2637a6ec3c347"
        ],
        [
            "exact: size_poly_eq0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly0Vpos p : {p = 0} + {size p > 0}.",
            "VernacStartTheoremProof",
            "c7b7b4381496f56c8927c0acd5d74f153e35e1fd"
        ],
        [
            "by rewrite lt0n size_poly_eq0; apply: eqVneq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polySpred p : p != 0 -> size p = (size p).-1.+1.",
            "VernacStartTheoremProof",
            "6a05cdb22d2d517f9173ed8ecf773041b01cd2b5"
        ],
        [
            "by rewrite -size_poly_eq0 -lt0n => /prednK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_eq0 p : (lead_coef p == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "fcb56a34614fc54019cb2361e5b17449de8a2b13"
        ],
        [
            "rewrite -nil_poly /lead_coef nth_last.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: p => [[|x s] /= /negbTE // _]; rewrite eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyC_eq0 (c : R) : (c%:P == 0) = (c == 0).",
            "VernacStartTheoremProof",
            "8724ce2c4c6f6fe5da1c6fbb87b1522e581c8c7f"
        ],
        [
            "by rewrite -nil_poly polyseqC; case: (c == 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly1P p : reflect (exists2 c, c != 0 & p = c%:P) (size p == 1%N).",
            "VernacStartTheoremProof",
            "e65aed882fc9c0b98b25975309aaef60eb4883b2"
        ],
        [
            "apply: (iffP eqP) => [pC | [c nz_c ->]]; last by rewrite size_polyC nz_c.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have def_p: p = (p`_0)%:P by rewrite -size1_polyC ?pC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists p`_0; rewrite // -polyC_eq0 -def_p -size_poly_eq0 pC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_polyC_leq1 (c : R) : (size c%:P <= 1)%N.",
            "VernacStartTheoremProof",
            "11a3e21a49e0339baabc673414d7316b39993ad3"
        ],
        [
            "by rewrite size_polyC; case: (c == 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_sizeP p i : reflect (forall j, i <= j -> p`_j = 0) (size p <= i).",
            "VernacStartTheoremProof",
            "800da701fb393f3e00172de458ed85834840d82b"
        ],
        [
            "apply: (iffP idP) => [hp j hij| hp].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: nth_default; apply: leq_trans hij.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case p0: (p == 0); first by rewrite (eqP p0) size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: (lead_coef_eq0 p); rewrite p0 leqNgt; move/negbT; apply: contra => hs.",
            "VernacExtend",
            "e1a7cfb266c750bddfc742b038f756fe615efe51"
        ],
        [
            "by apply/eqP; apply: hp; rewrite -ltnS (ltn_predK hs).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefD p q i : (p + q)`_i = p`_i + q`_i.",
            "VernacStartTheoremProof",
            "cbcc86a6196a1031e5077f962d6c148804894734"
        ],
        [
            "exact: coef_add_poly.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefN p i : (- p)`_i = - p`_i.",
            "VernacStartTheoremProof",
            "ed1c12a807d058460cde3ddd30d340a6c6f51019"
        ],
        [
            "exact: coef_opp_poly.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefB p q i : (p - q)`_i = p`_i - q`_i.",
            "VernacStartTheoremProof",
            "b96bee6612369d5675bfc0e9ea3a94388df4f92c"
        ],
        [
            "by rewrite coefD coefN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical coefp_additive i := Additive ((fun p => (coefB p)^~ i) : additive (coefp i)).",
            "VernacDefinition",
            "a471b9d864af62b9bfc2bcd3c80bfaf81365f31a"
        ],
        [
            "Lemma coefMn p n i : (p *+ n)`_i = p`_i *+ n.",
            "VernacStartTheoremProof",
            "9c2814f8113d730b88c22bca22f2c4502f1faa0c"
        ],
        [
            "exact: (raddfMn (coefp_additive i)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefMNn p n i : (p *- n)`_i = p`_i *- n.",
            "VernacStartTheoremProof",
            "b19f00ce5d81fd32788ab832d2b558afaa25f2af"
        ],
        [
            "by rewrite coefN coefMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coef_sum I (r : seq I) (P : pred I) (F : I -> {poly R}) k : (\\sum_(i <- r | P i) F i)`_k = \\sum_(i <- r | P i) (F i)`_k.",
            "VernacStartTheoremProof",
            "8a26afa69e9483709374361f387198cea8210742"
        ],
        [
            "exact: (raddf_sum (coefp_additive k)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyC_add : {morph polyC : a b / a + b}.",
            "VernacStartTheoremProof",
            "747ad1247369011094854cffdde7fcb889bc84c2"
        ],
        [
            "by move=> a b; apply/polyP=> [[|i]]; rewrite coefD !coefC ?addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyC_opp : {morph polyC : c / - c}.",
            "VernacStartTheoremProof",
            "c0a16aaac8bf1c1f9de2d2cdf6f23c0baf2cf078"
        ],
        [
            "by move=> c; apply/polyP=> [[|i]]; rewrite coefN !coefC ?oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyC_sub : {morph polyC : a b / a - b}.",
            "VernacStartTheoremProof",
            "1557f25f5f38d971a7f347098ca430943b4396da"
        ],
        [
            "by move=> a b; rewrite polyC_add polyC_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical polyC_additive := Additive polyC_sub.",
            "VernacDefinition",
            "c12c7b6af881d61d0c9a4a831ed2dcc2e1448434"
        ],
        [
            "Lemma polyC_muln n : {morph polyC : c / c *+ n}.",
            "VernacStartTheoremProof",
            "9602070487e17d6facbb0d1a43973ec2b2b417c0"
        ],
        [
            "exact: raddfMn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_opp p : size (- p) = size p.",
            "VernacStartTheoremProof",
            "948de1e9e792effa6628b86a5dba3684b79171dc"
        ],
        [
            "by apply/eqP; rewrite eqn_leq -{3}(opprK p) -[-%R]/opp_poly unlock !size_poly.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_opp p : lead_coef (- p) = - lead_coef p.",
            "VernacStartTheoremProof",
            "17bdbee68c03872fb74102fb5e5c3a1c3ae0b241"
        ],
        [
            "by rewrite /lead_coef size_opp coefN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_add p q : size (p + q) <= maxn (size p) (size q).",
            "VernacStartTheoremProof",
            "c63e8c029b6bd1d57b530d0e6bd954ae7b5de236"
        ],
        [
            "by rewrite -[+%R]/add_poly unlock; apply: size_poly.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_addl p q : size p > size q -> size (p + q) = size p.",
            "VernacStartTheoremProof",
            "ff5b5760c461e12ff1359e7216c592e98b1b2225"
        ],
        [
            "move=> ltqp; rewrite -[+%R]/add_poly unlock size_poly_eq (maxn_idPl (ltnW _))//.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite addrC nth_default ?simp ?nth_last //; case: p ltqp => [[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_sum I (r : seq I) (P : pred I) (F : I -> {poly R}) : size (\\sum_(i <- r | P i) F i) <= \\max_(i <- r | P i) size (F i).",
            "VernacStartTheoremProof",
            "0f0a93d1deabd8b10de14c027f2bcc148adf25c3"
        ],
        [
            "elim/big_rec2: _ => [|i p q _ IHp]; first by rewrite size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(maxn_idPr IHp) maxnA leq_max size_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coefDl p q : size p > size q -> lead_coef (p + q) = lead_coef p.",
            "VernacStartTheoremProof",
            "0340bb9875a8c6a00c4f21d677c8b8be894e8841"
        ],
        [
            "move=> ltqp; rewrite /lead_coef coefD size_addl //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite addrC nth_default ?simp // -ltnS (ltn_predK ltqp).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coefDr p q : size q > size p -> lead_coef (p + q) = lead_coef q.",
            "VernacStartTheoremProof",
            "33f10056db683fa6e729d10f4ec8302f980d3bac"
        ],
        [
            "by move/lead_coefDl<-; rewrite addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mul_poly_def p q := \\poly_(i < (size p + size q).-1) (\\sum_(j < i.+1) p`_j * q`_(i - j)).",
            "VernacDefinition",
            "fc537fc2af822919277f68135f0fb96525c86e7b"
        ],
        [
            "Fact mul_poly_key : unit.",
            "VernacStartTheoremProof",
            "48da338fc11c48cd7a48a0bff5f20a838d111cd8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mul_poly := locked_with mul_poly_key mul_poly_def.",
            "VernacDefinition",
            "dcff28c96682989029d4ab1fcf209260c6eced98"
        ],
        [
            "Canonical mul_poly_unlockable := [unlockable fun mul_poly].",
            "VernacDefinition",
            "ea41a59ec42c4130d7eb784f48ad17d6faacfe9d"
        ],
        [
            "Fact coef_mul_poly p q i : (mul_poly p q)`_i = \\sum_(j < i.+1) p`_j * q`_(i - j)%N.",
            "VernacStartTheoremProof",
            "7b8d2cee3e75010d9f0e44d78ade45e1b631d558"
        ],
        [
            "rewrite unlock coef_poly -subn1 ltn_subRL add1n; case: leqP => // le_pq_i1.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite big1 // => j _; have [lq_q_ij | gt_q_ij] := leqP (size q) (i - j).",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "by rewrite [q`__]nth_default ?mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite nth_default ?mul0r // -(leq_add2r (size q)) (leq_trans le_pq_i1) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -leq_subLR -subnSK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact coef_mul_poly_rev p q i : (mul_poly p q)`_i = \\sum_(j < i.+1) p`_(i - j)%N * q`_j.",
            "VernacStartTheoremProof",
            "1cc1422675c48b4a7ef89efc57ab7e33b69fa70f"
        ],
        [
            "rewrite coef_mul_poly (reindex_inj rev_ord_inj) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => j _; rewrite (sub_ordK j).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mul_polyA : associative mul_poly.",
            "VernacStartTheoremProof",
            "2b9d35d8c2e4213d9e387e08e0b322a4a4b1acb0"
        ],
        [
            "move=> p q r; apply/polyP=> i; rewrite coef_mul_poly coef_mul_poly_rev.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "pose coef3 j k := p`_j * (q`_(i - j - k)%N * r`_k).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "transitivity (\\sum_(j < i.+1) \\sum_(k < i.+1 | k <= i - j) coef3 j k).",
            "VernacExtend",
            "2fcfdd33c6c847bf64b70aaefce7048bda5795fd"
        ],
        [
            "apply: eq_bigr => /= j _; rewrite coef_mul_poly_rev big_distrr /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (big_ord_narrow_leq (leq_subr _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (exchange_big_dep predT) //=; apply: eq_bigr => k _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "transitivity (\\sum_(j < i.+1 | j <= i - k) coef3 j k).",
            "VernacExtend",
            "fbce16784625cf19ca78ca78eb4d85c93f3f3cf2"
        ],
        [
            "apply: eq_bigl => j; rewrite -ltnS -(ltnS j) -!subSn ?leq_ord //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -subn_gt0 -(subn_gt0 j) -!subnDA addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (big_ord_narrow_leq (leq_subr _ _)) coef_mul_poly big_distrl /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => j _; rewrite /coef3 -!subnDA addnC mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mul_1poly : left_id 1%:P mul_poly.",
            "VernacStartTheoremProof",
            "f3ea32ccff631abf667893d054092050f5894380"
        ],
        [
            "move=> p; apply/polyP => i; rewrite coef_mul_poly big_ord_recl subn0.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite big1 => [|j _]; rewrite coefC !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mul_poly1 : right_id 1%:P mul_poly.",
            "VernacStartTheoremProof",
            "95922a5a249f65917f58b9930253197d9af25444"
        ],
        [
            "move=> p; apply/polyP => i; rewrite coef_mul_poly_rev big_ord_recl subn0.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite big1 => [|j _]; rewrite coefC !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mul_polyDl : left_distributive mul_poly +%R.",
            "VernacStartTheoremProof",
            "31277d557f8737204a20bc4b34e3ee2fa12dba0b"
        ],
        [
            "move=> p q r; apply/polyP=> i; rewrite coefD !coef_mul_poly -big_split.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by apply: eq_bigr => j _; rewrite coefD mulrDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mul_polyDr : right_distributive mul_poly +%R.",
            "VernacStartTheoremProof",
            "f6eff34ca2c060a6dabcdcfc973497d04fc39c2e"
        ],
        [
            "move=> p q r; apply/polyP=> i; rewrite coefD !coef_mul_poly -big_split.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by apply: eq_bigr => j _; rewrite coefD mulrDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact poly1_neq0 : 1%:P != 0 :> {poly R}.",
            "VernacStartTheoremProof",
            "0c80e89647db37efa88c1e675b1689d414d1b020"
        ],
        [
            "by rewrite polyC_eq0 oner_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition poly_ringMixin := RingMixin mul_polyA mul_1poly mul_poly1 mul_polyDl mul_polyDr poly1_neq0.",
            "VernacDefinition",
            "1deb610f28855585085de94821d69c3836bb5f61"
        ],
        [
            "Canonical poly_ringType := Eval hnf in RingType {poly R} poly_ringMixin.",
            "VernacDefinition",
            "43cc230a622afa8c570a5ec2e2091e954fa7c7b2"
        ],
        [
            "Canonical polynomial_ringType := Eval hnf in RingType (polynomial R) poly_ringMixin.",
            "VernacDefinition",
            "501b041616d07b466a847214af59d892852ebd21"
        ],
        [
            "Lemma polyC1 : 1%:P = 1 :> {poly R}.",
            "VernacStartTheoremProof",
            "ce025e4ce9af47132ef762619e995d989f7dceb3"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyseq1 : (1 : {poly R}) = [:: 1] :> seq R.",
            "VernacStartTheoremProof",
            "1dd0a1f93677a25e21a4edce198c62c9faf0778f"
        ],
        [
            "by rewrite polyseqC oner_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_poly1 : size (1 : {poly R}) = 1%N.",
            "VernacStartTheoremProof",
            "1238b60db3a9057be14bcfd1cf2e03614f87e5b2"
        ],
        [
            "by rewrite polyseq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coef1 i : (1 : {poly R})`_i = (i == 0%N)%:R.",
            "VernacStartTheoremProof",
            "978b7d6872af6d705b6ba061923d6516432ef080"
        ],
        [
            "by case: i => [|i]; rewrite polyseq1 /= ?nth_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef1 : lead_coef 1 = 1 :> R.",
            "VernacStartTheoremProof",
            "844712bf6e087a8b0d3f7c51c9ba5565dcba8d2c"
        ],
        [
            "exact: lead_coefC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefM p q i : (p * q)`_i = \\sum_(j < i.+1) p`_j * q`_(i - j)%N.",
            "VernacStartTheoremProof",
            "85721bf719a7d17baf07c430d72acc561ce5107c"
        ],
        [
            "exact: coef_mul_poly.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefMr p q i : (p * q)`_i = \\sum_(j < i.+1) p`_(i - j)%N * q`_j.",
            "VernacStartTheoremProof",
            "cb632195183fdd81768fed6c3d0e8bb2b9b04287"
        ],
        [
            "exact: coef_mul_poly_rev.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_mul_leq p q : size (p * q) <= (size p + size q).-1.",
            "VernacStartTheoremProof",
            "5795f4cb5654e730d2fb925304870a2236155a82"
        ],
        [
            "by rewrite -[*%R]/mul_poly unlock size_poly.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_lead_coef p q : lead_coef p * lead_coef q = (p * q)`_(size p + size q).-2.",
            "VernacStartTheoremProof",
            "7cae9ab75627267a5b0b31a77b019bec9ee8f099"
        ],
        [
            "pose dp := (size p).-1; pose dq := (size q).-1.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0; first by rewrite lead_coef0 !mul0r coef0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [-> | nz_q] := eqVneq q 0; first by rewrite lead_coef0 !mulr0 coef0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have ->: (size p + size q).-2 = (dp + dq)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by do 2!rewrite polySpred // addSn addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have lt_p_pq: dp < (dp + dq).+1 by rewrite ltnS leq_addr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite coefM (bigD1 (Ordinal lt_p_pq)) ?big1 ?simp ?addKn //= => i.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -val_eqE neq_ltn /= => /orP[lt_i_p | gt_i_p]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite nth_default ?mul0r //; rewrite -polySpred in gt_i_p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite [q`__]nth_default ?mulr0 //= -subSS -{1}addnS -polySpred //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addnC -addnBA ?leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_proper_mul p q : lead_coef p * lead_coef q != 0 -> size (p * q) = (size p + size q).-1.",
            "VernacStartTheoremProof",
            "69bd8273627a6e394c9feaae0ccd74dbf204fb6f"
        ],
        [
            "apply: contraNeq; rewrite mul_lead_coef eqn_leq size_mul_leq -ltnNge => lt_pq.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite nth_default // -subn1 -(leq_add2l 1) -leq_subLR leq_sub2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_proper_mul p q : let c := lead_coef p * lead_coef q in c != 0 -> lead_coef (p * q) = c.",
            "VernacStartTheoremProof",
            "614d84edb459fc907f34a88dedd05b7e96d4d5c3"
        ],
        [
            "by move=> /= nz_c; rewrite mul_lead_coef -size_proper_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_prod_leq (I : finType) (P : pred I) (F : I -> {poly R}) : size (\\prod_(i | P i) F i) <= (\\sum_(i | P i) size (F i)).+1 - #|P|.",
            "VernacStartTheoremProof",
            "e14623991ea46ffa54d979d255e737ffb78f620e"
        ],
        [
            "rewrite -sum1_card.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim/big_rec3: _ => [|i n m p _ IHp]; first by rewrite size_poly1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0; first by rewrite mulr0 size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (leq_trans (size_mul_leq _ _)) // subnS -!subn1 leq_sub2r //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -addnS -addnBA ?leq_add2l // ltnW // -subn_gt0 (leq_trans _ IHp) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite polySpred.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefCM c p i : (c%:P * p)`_i = c * p`_i.",
            "VernacStartTheoremProof",
            "88124362980ab1e36c5735901fd7a4582f7c561a"
        ],
        [
            "rewrite coefM big_ord_recl subn0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite big1 => [|j _]; rewrite coefC !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefMC c p i : (p * c%:P)`_i = p`_i * c.",
            "VernacStartTheoremProof",
            "159f425afbc062023bcc54f1443dc4ef3be1c50a"
        ],
        [
            "rewrite coefMr big_ord_recl subn0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite big1 => [|j _]; rewrite coefC !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyC_mul : {morph polyC : a b / a * b}.",
            "VernacStartTheoremProof",
            "c72ba4bca7ab0d73b61a85b5feaf2af36b3cdb73"
        ],
        [
            "by move=> a b; apply/polyP=> [[|i]]; rewrite coefCM !coefC ?simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact polyC_multiplicative : multiplicative polyC.",
            "VernacStartTheoremProof",
            "71a0cdee35f9aaa441bbbad6340c87118f1b754a"
        ],
        [
            "by split; first apply: polyC_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical polyC_rmorphism := AddRMorphism polyC_multiplicative.",
            "VernacDefinition",
            "0caa84eaf1f95fe4460838a5de02df8ee70f636e"
        ],
        [
            "Lemma polyC_exp n : {morph polyC : c / c ^+ n}.",
            "VernacStartTheoremProof",
            "8b4be71b56050e8ec155c81af501feee1acb7f83"
        ],
        [
            "exact: rmorphX.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_exp_leq p n : size (p ^+ n) <= ((size p).-1 * n).+1.",
            "VernacStartTheoremProof",
            "d7dd2bb474e08768cb862ea4d2cd8d05ee726ba3"
        ],
        [
            "elim: n => [|n IHn]; first by rewrite size_poly1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [-> | nzp] := poly0Vpos p; first by rewrite exprS mul0r size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite exprS (leq_trans (size_mul_leq _ _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -{1}(prednK nzp) mulnS -addnS leq_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_Msign p n : size ((-1) ^+ n * p) = size p.",
            "VernacStartTheoremProof",
            "22f26857aae83d9aa49fe35e2cb046e3c2645246"
        ],
        [
            "by rewrite -signr_odd; case: (odd n); rewrite ?mul1r // mulN1r size_opp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact coefp0_multiplicative : multiplicative (coefp 0 : {poly R} -> R).",
            "VernacStartTheoremProof",
            "2f54541760c2ea17901825f8b4c4134b18e0cdce"
        ],
        [
            "split=> [p q|]; last by rewrite polyCK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite [coefp 0 _]coefM big_ord_recl big_ord0 addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical coefp0_rmorphism := AddRMorphism coefp0_multiplicative.",
            "VernacDefinition",
            "6a579a4f46d127352fbbee0d8aa477575f5ce427"
        ],
        [
            "Definition scale_poly_def a (p : {poly R}) := \\poly_(i < size p) (a * p`_i).",
            "VernacDefinition",
            "9cf4cdd1276b890b0e62a019e1ec014e66bdbc4b"
        ],
        [
            "Fact scale_poly_key : unit.",
            "VernacStartTheoremProof",
            "520980d004725d132284e0fc3a162efb37ec9ff8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition scale_poly := locked_with scale_poly_key scale_poly_def.",
            "VernacDefinition",
            "39553928d6a0be19dd223c0fa2092187d1e76985"
        ],
        [
            "Canonical scale_poly_unlockable := [unlockable fun scale_poly].",
            "VernacDefinition",
            "f0047462fd56130fe2b8ce156add2f92632f65d6"
        ],
        [
            "Fact scale_polyE a p : scale_poly a p = a%:P * p.",
            "VernacStartTheoremProof",
            "cc5a1004a0e678d12bc0f125e61bb92a2a986939"
        ],
        [
            "apply/polyP=> n; rewrite unlock coef_poly coefCM.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: leqP => // le_p_n; rewrite nth_default ?mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact scale_polyA a b p : scale_poly a (scale_poly b p) = scale_poly (a * b) p.",
            "VernacStartTheoremProof",
            "cfb221557d77c4c66b792b37cf77c3ac79cfd77f"
        ],
        [
            "by rewrite !scale_polyE mulrA polyC_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact scale_1poly : left_id 1 scale_poly.",
            "VernacStartTheoremProof",
            "d3382c104832dfdd80e4b7401b25e4da751f00f5"
        ],
        [
            "by move=> p; rewrite scale_polyE mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact scale_polyDr a : {morph scale_poly a : p q / p + q}.",
            "VernacStartTheoremProof",
            "ed08c7a621484b986de7375fabba4b0794d9f76a"
        ],
        [
            "by move=> p q; rewrite !scale_polyE mulrDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact scale_polyDl p : {morph scale_poly^~ p : a b / a + b}.",
            "VernacStartTheoremProof",
            "96434ab8a984d7e84d39412dcfb85fb697171333"
        ],
        [
            "by move=> a b /=; rewrite !scale_polyE raddfD mulrDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact scale_polyAl a p q : scale_poly a (p * q) = scale_poly a p * q.",
            "VernacStartTheoremProof",
            "a48731d2a33f8835dfeda591ec3136e547eeb302"
        ],
        [
            "by rewrite !scale_polyE mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition poly_lmodMixin := LmodMixin scale_polyA scale_1poly scale_polyDr scale_polyDl.",
            "VernacDefinition",
            "f83f65fa8402e40ed57b1b9d957afb9b797a6b73"
        ],
        [
            "Canonical poly_lmodType := Eval hnf in LmodType R {poly R} poly_lmodMixin.",
            "VernacDefinition",
            "ea3f0ce94ce5325328e214ad76010cb2ad251ea6"
        ],
        [
            "Canonical polynomial_lmodType := Eval hnf in LmodType R (polynomial R) poly_lmodMixin.",
            "VernacDefinition",
            "c8ecc91287d25e0d52065753c86e692c045dc4e2"
        ],
        [
            "Canonical poly_lalgType := Eval hnf in LalgType R {poly R} scale_polyAl.",
            "VernacDefinition",
            "eb05afc5a82c3afbae8565d9b3b69299818e8421"
        ],
        [
            "Canonical polynomial_lalgType := Eval hnf in LalgType R (polynomial R) scale_polyAl.",
            "VernacDefinition",
            "509a5297a5353d3cd70255af59e2bbff7f7d0c84"
        ],
        [
            "Lemma mul_polyC a p : a%:P * p = a *: p.",
            "VernacStartTheoremProof",
            "ac40dd3969ac3dac58527e9013ba6a080ef5a532"
        ],
        [
            "by rewrite -scale_polyE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alg_polyC a : a%:A = a%:P :> {poly R}.",
            "VernacStartTheoremProof",
            "6e58fa6910a5fc1f78b55b34e2bca256e6d12129"
        ],
        [
            "by rewrite -mul_polyC mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefZ a p i : (a *: p)`_i = a * p`_i.",
            "VernacStartTheoremProof",
            "ed5183264522b858b53b0b0f27f702af5943df03"
        ],
        [
            "rewrite -[*:%R]/scale_poly unlock coef_poly.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: leqP => // le_p_n; rewrite nth_default ?mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_scale_leq a p : size (a *: p) <= size p.",
            "VernacStartTheoremProof",
            "b6f24122e8c2b344920b76138978ed15b54ddea7"
        ],
        [
            "by rewrite -[*:%R]/scale_poly unlock size_poly.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical coefp_linear i : {scalar {poly R}} := AddLinear ((fun a => (coefZ a) ^~ i) : scalable_for *%R (coefp i)).",
            "VernacDefinition",
            "50012a9d2f303a947ff9f255282a41be6ead3fa3"
        ],
        [
            "Canonical coefp0_lrmorphism := [lrmorphism of coefp 0].",
            "VernacDefinition",
            "9ed290f527069761aad4637b373ab64ac5076ee4"
        ],
        [
            "Definition polyX_def := Poly [:: 0; 1].",
            "VernacDefinition",
            "0108c47f9174ab05c456e6be0edc114b8bd5514e"
        ],
        [
            "Fact polyX_key : unit.",
            "VernacStartTheoremProof",
            "257c83e012bc92469655a6d81f737895f3de62a0"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition polyX : {poly R} := locked_with polyX_key polyX_def.",
            "VernacDefinition",
            "a3966e87bfa8b8eecd678849eeb364244230ef09"
        ],
        [
            "Canonical polyX_unlockable := [unlockable of polyX].",
            "VernacDefinition",
            "1507dbfb48fb8a6104c3925e42cd2f935e6b4fe4"
        ],
        [
            "Local Notation \"'X\" := polyX.",
            "VernacNotation",
            "b05a2f351522d3401ac8e49f02bf8a9ab3a963d3"
        ],
        [
            "Lemma polyseqX : 'X = [:: 0; 1] :> seq R.",
            "VernacStartTheoremProof",
            "89a81d8f19b26c3c069c6f235af97e94bc739a46"
        ],
        [
            "by rewrite unlock !polyseq_cons nil_poly eqxx /= polyseq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_polyX : size 'X = 2.",
            "VernacStartTheoremProof",
            "63cf77fd5dd4834ea9d73f588287b41ebb2fe718"
        ],
        [
            "by rewrite polyseqX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyX_eq0 : ('X == 0) = false.",
            "VernacStartTheoremProof",
            "dd0a70d26b9bc443eb375027b6f2f69f7555c309"
        ],
        [
            "by rewrite -size_poly_eq0 size_polyX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefX i : 'X`_i = (i == 1%N)%:R.",
            "VernacStartTheoremProof",
            "08da1e88fc1ca085015a0a28d5bb859addc05b1d"
        ],
        [
            "by case: i => [|[|i]]; rewrite polyseqX //= nth_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coefX : lead_coef 'X = 1.",
            "VernacStartTheoremProof",
            "55eb93ec0f6b0828e5da483ec7ce0879121b6e3c"
        ],
        [
            "by rewrite /lead_coef polyseqX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma commr_polyX p : GRing.comm p 'X.",
            "VernacStartTheoremProof",
            "491e0e3d06da7af254ce660dc20ff2485bfb6eda"
        ],
        [
            "apply/polyP=> i; rewrite coefMr coefM.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_bigr => j _; rewrite coefX commr_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefMX p i : (p * 'X)`_i = (if (i == 0)%N then 0 else p`_i.-1).",
            "VernacStartTheoremProof",
            "c140f9974c1d2e81e4e070153958a75cf521c494"
        ],
        [
            "rewrite coefMr big_ord_recl coefX ?simp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: i => [|i]; rewrite ?big_ord0 //= big_ord_recl polyseqX subn1 /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite big1 ?simp // => j _; rewrite nth_nil !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefXM p i : ('X * p)`_i = (if (i == 0)%N then 0 else p`_i.-1).",
            "VernacStartTheoremProof",
            "2c5f1fc667fc4ba1d1bc9bfabe0ed4d181ada53f"
        ],
        [
            "by rewrite -commr_polyX coefMX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cons_poly_def p a : cons_poly a p = p * 'X + a%:P.",
            "VernacStartTheoremProof",
            "61b14033da39c63345d171f10ff019b294a7850a"
        ],
        [
            "apply/polyP=> i; rewrite coef_cons coefD coefMX coefC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: ifP; rewrite !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_ind (K : {poly R} -> Type) : K 0 -> (forall p c, K p -> K (p * 'X + c%:P)) -> (forall p, K p).",
            "VernacStartTheoremProof",
            "b2ed80571fa3af1dc78f0856c525cf9417217c56"
        ],
        [
            "move=> K0 Kcons p; rewrite -[p]polyseqK.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by elim: {p}(p : seq R) => //= p c IHp; rewrite cons_poly_def; apply: Kcons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyseqXsubC a : 'X - a%:P = [:: - a; 1] :> seq R.",
            "VernacStartTheoremProof",
            "294d10ec962a21273a8f0a097c409f378b1701b8"
        ],
        [
            "by rewrite -['X]mul1r -polyC_opp -cons_poly_def polyseq_cons polyseq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_XsubC a : size ('X - a%:P) = 2%N.",
            "VernacStartTheoremProof",
            "a297d26d38eca5b7ad8ea3025ee71dddae3b93f1"
        ],
        [
            "by rewrite polyseqXsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_XaddC b : size ('X + b%:P) = 2.",
            "VernacStartTheoremProof",
            "2bbe1a768e87341b38745d5c4f4a04d5df7b9314"
        ],
        [
            "by rewrite -[b]opprK rmorphN size_XsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coefXsubC a : lead_coef ('X - a%:P) = 1.",
            "VernacStartTheoremProof",
            "c905585b22f6ce6c50ef355d707c44d32a592cc4"
        ],
        [
            "by rewrite lead_coefE polyseqXsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyXsubC_eq0 a : ('X - a%:P == 0) = false.",
            "VernacStartTheoremProof",
            "920e88c0ad7d2a6b4c98df4b52d8581b42aa209e"
        ],
        [
            "by rewrite -nil_poly polyseqXsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_MXaddC p c : size (p * 'X + c%:P) = (if (p == 0) && (c == 0) then 0%N else (size p).+1).",
            "VernacStartTheoremProof",
            "8ec339dcdacc3332342a3915277f96fd5cc758c0"
        ],
        [
            "by rewrite -cons_poly_def size_cons_poly nil_poly.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyseqMX p : p != 0 -> p * 'X = 0 :: p :> seq R.",
            "VernacStartTheoremProof",
            "29ee59865b01462e903655aa4d37fd92751a6050"
        ],
        [
            "by move=> nz_p; rewrite -[p * _]addr0 -cons_poly_def polyseq_cons nil_poly nz_p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_mulX p : p != 0 -> size (p * 'X) = (size p).+1.",
            "VernacStartTheoremProof",
            "218eae33102e790930a6cf434c0866dbef877f84"
        ],
        [
            "by move/polyseqMX->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coefMX p : lead_coef (p * 'X) = lead_coef p.",
            "VernacStartTheoremProof",
            "528191ada13de6f5bf1bddd7a5852bbac21b9424"
        ],
        [
            "have [-> | nzp] := eqVneq p 0; first by rewrite mul0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /lead_coef !nth_last polyseqMX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_XmulC a : a != 0 -> size ('X * a%:P) = 2.",
            "VernacStartTheoremProof",
            "28d66d627d1ac5c578b30215d6926c14759794fb"
        ],
        [
            "by move=> nz_a; rewrite -commr_polyX size_mulX ?polyC_eq0 ?size_polyC nz_a.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation \"''X^' n\" := ('X ^+ n).",
            "VernacNotation",
            "f5c7c77b264f597930caf68d80b623bc608c80ed"
        ],
        [
            "Lemma coefXn n i : 'X^n`_i = (i == n)%:R.",
            "VernacStartTheoremProof",
            "83e293d84a131abc6d897034dad9a3ade0d74df4"
        ],
        [
            "by elim: n i => [|n IHn] [|i]; rewrite ?coef1 // exprS coefXM ?IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyseqXn n : 'X^n = rcons (nseq n 0) 1 :> seq R.",
            "VernacStartTheoremProof",
            "2cac7ae1037d5312807f6ded85eace2494da35e9"
        ],
        [
            "elim: n => [|n IHn]; rewrite ?polyseq1 // exprSr.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "by rewrite polyseqMX -?size_poly_eq0 IHn ?size_rcons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_polyXn n : size 'X^n = n.+1.",
            "VernacStartTheoremProof",
            "8a92c8139e36b2cb2f36a3c4aa3df878a13da50f"
        ],
        [
            "by rewrite polyseqXn size_rcons size_nseq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma commr_polyXn p n : GRing.comm p 'X^n.",
            "VernacStartTheoremProof",
            "01cb193c17227566c4420c66b255447dfbaef242"
        ],
        [
            "by apply: commrX; apply: commr_polyX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coefXn n : lead_coef 'X^n = 1.",
            "VernacStartTheoremProof",
            "9b8907aa4010a9b80b0b4d7ba224cc2c490ef195"
        ],
        [
            "by rewrite /lead_coef nth_last polyseqXn last_rcons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyseqMXn n p : p != 0 -> p * 'X^n = ncons n 0 p :> seq R.",
            "VernacStartTheoremProof",
            "81fcf24b8c17e796dd33982d37f3a0c6f5b4bc41"
        ],
        [
            "case: n => [|n] nz_p; first by rewrite mulr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "elim: n => [|n IHn]; first exact: polyseqMX.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprSr mulrA polyseqMX -?nil_poly IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefMXn n p i : (p * 'X^n)`_i = if i < n then 0 else p`_(i - n).",
            "VernacStartTheoremProof",
            "f283810288db381bbe1ab0e5823a6e53ee1ab51c"
        ],
        [
            "have [-> | /polyseqMXn->] := eqVneq p 0; last exact: nth_ncons.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mul0r !coef0 if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coefXnM n p i : ('X^n * p)`_i = if i < n then 0 else p`_(i - n).",
            "VernacStartTheoremProof",
            "668eddeb989d1f0555120832a0fc1fd261e8886c"
        ],
        [
            "by rewrite -commr_polyXn coefMXn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_def n E : \\poly_(i < n) E i = \\sum_(i < n) E i *: 'X^i.",
            "VernacStartTheoremProof",
            "fa62345e85b08c77309959b0c46d0a35cb54df45"
        ],
        [
            "rewrite unlock; elim: n => [|n IHn] in E *; first by rewrite big_ord0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite big_ord_recl /= cons_poly_def addrC expr0 alg_polyC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (_ + _); rewrite (iota_addl 1 0) -map_comp IHn big_distrl /=.",
            "VernacExtend",
            "90723b7805fdae0b93bd8b98ae215a5658363919"
        ],
        [
            "by apply: eq_bigr => i _; rewrite -scalerAl exprSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition monic := [qualify p | lead_coef p == 1].",
            "VernacDefinition",
            "ae68a9cf2e2fc504a54511e6330dd7c376bc4e66"
        ],
        [
            "Fact monic_key : pred_key monic.",
            "VernacStartTheoremProof",
            "baba389c0ec394eeaaafe4f43ae7d663d629ef9d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical monic_keyed := KeyedQualifier monic_key.",
            "VernacDefinition",
            "a955db17fc682e9aacf76cc2a93da21e4536a730"
        ],
        [
            "Lemma monicE p : (p \\is monic) = (lead_coef p == 1).",
            "VernacStartTheoremProof",
            "93788a18e3a6ec8f68483c2e586d4607de9a9b80"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monicP p : reflect (lead_coef p = 1) (p \\is monic).",
            "VernacStartTheoremProof",
            "e2ba8b84f43ee2573f49973adc36bc713e5175d4"
        ],
        [
            "exact: eqP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monic1 : 1 \\is monic.",
            "VernacStartTheoremProof",
            "e479196b1d30979657dba75189495c1d43d5eeac"
        ],
        [
            "exact/eqP/lead_coef1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monicX : 'X \\is monic.",
            "VernacStartTheoremProof",
            "69cf33ac4e173ec51a3998620efcc3d085b5266e"
        ],
        [
            "exact/eqP/lead_coefX.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monicXn n : 'X^n \\is monic.",
            "VernacStartTheoremProof",
            "41b8f35f18d8f7d6ff702810e292212cc56b553e"
        ],
        [
            "exact/eqP/lead_coefXn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monic_neq0 p : p \\is monic -> p != 0.",
            "VernacStartTheoremProof",
            "76602a228fac527d1974dd1b36d3574210a95fe2"
        ],
        [
            "by rewrite -lead_coef_eq0 => /eqP->; apply: oner_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_monicM p q : p \\is monic -> lead_coef (p * q) = lead_coef q.",
            "VernacStartTheoremProof",
            "fe0364e0098adf13e2c32c7c265ce42555853b33"
        ],
        [
            "have [-> | nz_q] := eqVneq q 0; first by rewrite mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/monicP=> mon_p; rewrite lead_coef_proper_mul mon_p mul1r ?lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_Mmonic p q : q \\is monic -> lead_coef (p * q) = lead_coef p.",
            "VernacStartTheoremProof",
            "c8156795dde11019c46c251041d0f06cbb046dbf"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0; first by rewrite mul0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/monicP=> mon_q; rewrite lead_coef_proper_mul mon_q mulr1 ?lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_monicM p q : p \\is monic -> q != 0 -> size (p * q) = (size p + size q).-1.",
            "VernacStartTheoremProof",
            "66c708118853f6897d78fc9ea36ecc67ff242ed7"
        ],
        [
            "move/monicP=> mon_p nz_q.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite size_proper_mul // mon_p mul1r lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_Mmonic p q : p != 0 -> q \\is monic -> size (p * q) = (size p + size q).-1.",
            "VernacStartTheoremProof",
            "1ad24faf262c7c93007ae6221951eae49b0dc364"
        ],
        [
            "move=> nz_p /monicP mon_q.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite size_proper_mul // mon_q mulr1 lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monicMl p q : p \\is monic -> (p * q \\is monic) = (q \\is monic).",
            "VernacStartTheoremProof",
            "ed9a026d7b9203c6a1cf4f5b6bfdc9be57df65f6"
        ],
        [
            "by move=> mon_p; rewrite !monicE lead_coef_monicM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monicMr p q : q \\is monic -> (p * q \\is monic) = (p \\is monic).",
            "VernacStartTheoremProof",
            "ff83f2d25dfd9bdaa138af6d8e979319e261db70"
        ],
        [
            "by move=> mon_q; rewrite !monicE lead_coef_Mmonic.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact monic_mulr_closed : mulr_closed monic.",
            "VernacStartTheoremProof",
            "86f3583cceb78b4934619383aa47802d2e872c94"
        ],
        [
            "by split=> [|p q mon_p]; rewrite (monic1, monicMl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical monic_mulrPred := MulrPred monic_mulr_closed.",
            "VernacDefinition",
            "90746785a84dd4336acea7496bd94020903926c8"
        ],
        [
            "Lemma monic_exp p n : p \\is monic -> p ^+ n \\is monic.",
            "VernacStartTheoremProof",
            "e3d6fd587f817db3c07c2af280debb6284cd17cc"
        ],
        [
            "exact: rpredX.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monic_prod I rI (P : pred I) (F : I -> {poly R}): (forall i, P i -> F i \\is monic) -> \\prod_(i <- rI | P i) F i \\is monic.",
            "VernacStartTheoremProof",
            "5be803e33f1582cc2189398825b98b6ab7b4c045"
        ],
        [
            "exact: rpred_prod.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monicXsubC c : 'X - c%:P \\is monic.",
            "VernacStartTheoremProof",
            "f511764dd81fb3430cb3af06a338bb6126789a09"
        ],
        [
            "exact/eqP/lead_coefXsubC.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monic_prod_XsubC I rI (P : pred I) (F : I -> R) : \\prod_(i <- rI | P i) ('X - (F i)%:P) \\is monic.",
            "VernacStartTheoremProof",
            "525bd77f5db7ae2860f99b7267da1b790505806e"
        ],
        [
            "by apply: monic_prod => i _; apply: monicXsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_prod_XsubC I rI (F : I -> R) : size (\\prod_(i <- rI) ('X - (F i)%:P)) = (size rI).+1.",
            "VernacStartTheoremProof",
            "7b68584723a1d97237e7d764dad0a21317fccaa1"
        ],
        [
            "elim: rI => [|i r /= <-]; rewrite ?big_nil ?size_poly1 // big_cons.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "rewrite size_monicM ?monicXsubC ?monic_neq0 ?monic_prod_XsubC //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite size_XsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_exp_XsubC n a : size (('X - a%:P) ^+ n) = n.+1.",
            "VernacStartTheoremProof",
            "26b938285d25ca36e4c8775c43e2b37b01bfb093"
        ],
        [
            "by rewrite -[n]card_ord -prodr_const size_prod_XsubC cardE enumT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lreg_lead p : GRing.lreg (lead_coef p) -> GRing.lreg p.",
            "VernacStartTheoremProof",
            "79faad6bec09133857c0aacb3addb2862d7abca6"
        ],
        [
            "move/mulrI_eq0=> reg_p; apply: mulrI0_lreg => q /eqP; apply: contraTeq => nz_q.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by rewrite -lead_coef_eq0 lead_coef_proper_mul reg_p lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rreg_lead p : GRing.rreg (lead_coef p) -> GRing.rreg p.",
            "VernacStartTheoremProof",
            "fd092081e056448f682b0bb6a440c5f855f0ed25"
        ],
        [
            "move/mulIr_eq0=> reg_p; apply: mulIr0_rreg => q /eqP; apply: contraTeq => nz_q.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by rewrite -lead_coef_eq0 lead_coef_proper_mul reg_p lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lreg_lead0 p : GRing.lreg (lead_coef p) -> p != 0.",
            "VernacStartTheoremProof",
            "5ca4b91fbc278242794a1bc6bbd85a712e397a8a"
        ],
        [
            "by move/lreg_neq0; rewrite lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rreg_lead0 p : GRing.rreg (lead_coef p) -> p != 0.",
            "VernacStartTheoremProof",
            "05d9f1f986eff77ff2b1e0232c8432f968a1abb1"
        ],
        [
            "by move/rreg_neq0; rewrite lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lreg_size c p : GRing.lreg c -> size (c *: p) = size p.",
            "VernacStartTheoremProof",
            "7a937843a2f30d76f890a6dbd42eecb1a0654f43"
        ],
        [
            "move=> reg_c; have [-> | nz_p] := eqVneq p 0; first by rewrite scaler0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -mul_polyC size_proper_mul; first by rewrite size_polyC lreg_neq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite lead_coefC mulrI_eq0 ?lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lreg_polyZ_eq0 c p : GRing.lreg c -> (c *: p == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "5056e7a67d775d28341bb1fb3c412de14402d013"
        ],
        [
            "by rewrite -!size_poly_eq0 => /lreg_size->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_lreg c p : GRing.lreg c -> lead_coef (c *: p) = c * lead_coef p.",
            "VernacStartTheoremProof",
            "4ec5180c1f5a8355e0d5e83024276efe4fe7014d"
        ],
        [
            "by move=> reg_c; rewrite !lead_coefE coefZ lreg_size.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rreg_size c p : GRing.rreg c -> size (p * c%:P) = size p.",
            "VernacStartTheoremProof",
            "91b92d88c6a7a1ba5f78e1cb7bd70b633d977151"
        ],
        [
            "move=> reg_c; have [-> | nz_p] := eqVneq p 0; first by rewrite mul0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite size_proper_mul; first by rewrite size_polyC rreg_neq0 ?addn1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite lead_coefC mulIr_eq0 ?lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rreg_polyMC_eq0 c p : GRing.rreg c -> (p * c%:P == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "b13fa4e2517b651a64c69be0174d0bd3befd68a1"
        ],
        [
            "by rewrite -!size_poly_eq0 => /rreg_size->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rreg_div0 q r d : GRing.rreg (lead_coef d) -> size r < size d -> (q * d + r == 0) = (q == 0) && (r == 0).",
            "VernacStartTheoremProof",
            "f39f6abb8b546125c64d44a657d2e5177a0dd992"
        ],
        [
            "move=> reg_d lt_r_d; rewrite addrC addr_eq0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have [-> | nz_q] := altP (q =P 0); first by rewrite mul0r oppr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: contraTF lt_r_d => /eqP->; rewrite -leqNgt size_opp.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite size_proper_mul ?mulIr_eq0 ?lead_coef_eq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (polySpred nz_q) leq_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monic_comreg p : p \\is monic -> GRing.comm p (lead_coef p)%:P /\\ GRing.rreg (lead_coef p).",
            "VernacStartTheoremProof",
            "b9eac0a2e566c32c6cb9576ab43f577804f11fca"
        ],
        [
            "by move/monicP->; split; [apply: commr1 | apply: rreg1].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Implicit Types s rs : seq R.",
            "VernacReserve",
            "0061324188f173137ca2ec32fb6551ae5ccaca8b"
        ],
        [
            "Fixpoint horner_rec s x := if s is a :: s' then horner_rec s' x * x + a else 0.",
            "VernacFixpoint",
            "5409eac3c2ecc367d7cb32f3d9566281ef6685fc"
        ],
        [
            "Definition horner p := horner_rec p.",
            "VernacDefinition",
            "bff792b078594117d156a0206dc208585bc4d757"
        ],
        [
            "Local Notation \"p .[ x ]\" := (horner p x) : ring_scope.",
            "VernacNotation",
            "83e859ff87f6c7c1fa18cd1b4ed55cab8f74cbf2"
        ],
        [
            "Lemma horner0 x : (0 : {poly R}).[x] = 0.",
            "VernacStartTheoremProof",
            "810d70c4cc80c34a1b24c7aeb9f2d43cd3133b72"
        ],
        [
            "by rewrite /horner polyseq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerC c x : (c%:P).[x] = c.",
            "VernacStartTheoremProof",
            "daeccfb85e47ccaab1954ea2a2c7e6b0708fdd97"
        ],
        [
            "by rewrite /horner polyseqC; case: eqP; rewrite /= ?simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerX x : 'X.[x] = x.",
            "VernacStartTheoremProof",
            "b9f70559b7a6db14bc35d6001b05ba9480d8e811"
        ],
        [
            "by rewrite /horner polyseqX /= !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_cons p c x : (cons_poly c p).[x] = p.[x] * x + c.",
            "VernacStartTheoremProof",
            "a6b51afc7c756f0c24199307cebdc38d1f7a2cea"
        ],
        [
            "rewrite /horner polyseq_cons; case: nilP => //= ->.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite !simp -/(_.[x]) hornerC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_coef0 p : p.[0] = p`_0.",
            "VernacStartTheoremProof",
            "cc726cd8497f122577dc70344fd5b91b469994e5"
        ],
        [
            "by rewrite /horner; case: (p : seq R) => //= c p'; rewrite !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerMXaddC p c x : (p * 'X + c%:P).[x] = p.[x] * x + c.",
            "VernacStartTheoremProof",
            "d7f179ab3ff34449d5beeacd6af9af882c70c177"
        ],
        [
            "by rewrite -cons_poly_def horner_cons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerMX p x : (p * 'X).[x] = p.[x] * x.",
            "VernacStartTheoremProof",
            "8e97d6eec45eb516c13f078f07a0761e0591e5b0"
        ],
        [
            "by rewrite -[p * 'X]addr0 hornerMXaddC addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_Poly s x : (Poly s).[x] = horner_rec s x.",
            "VernacStartTheoremProof",
            "137507fc6536316eccb46b14cf8452c5db8c148f"
        ],
        [
            "by elim: s => [|a s /= <-]; rewrite (horner0, horner_cons).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_coef p x : p.[x] = \\sum_(i < size p) p`_i * x ^+ i.",
            "VernacStartTheoremProof",
            "df2a5122b7be32151e7c594fad5e59f63ae804a7"
        ],
        [
            "rewrite /horner.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: {p}(p : seq R) => /= [|a s ->]; first by rewrite big_ord0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite big_ord_recl simp addrC big_distrl /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by congr (_ + _); apply: eq_bigr => i _; rewrite -mulrA exprSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_coef_wide n p x : size p <= n -> p.[x] = \\sum_(i < n) p`_i * x ^+ i.",
            "VernacStartTheoremProof",
            "0c93b964326780d2076c279669e406e22066e813"
        ],
        [
            "move=> le_p_n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite horner_coef (big_ord_widen n (fun i => p`_i * x ^+ i)) // big_mkcond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; case: ltnP => // le_p_i; rewrite nth_default ?simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_poly n E x : (\\poly_(i < n) E i).[x] = \\sum_(i < n) E i * x ^+ i.",
            "VernacStartTheoremProof",
            "cb594cb6515df2dc546c5ff84ff5981eda6e5e41"
        ],
        [
            "rewrite (@horner_coef_wide n) ?size_poly //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite coef_poly ltn_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerN p x : (- p).[x] = - p.[x].",
            "VernacStartTheoremProof",
            "dbd8247abc2e8ec16e8597c31c5369f860576d75"
        ],
        [
            "rewrite -[-%R]/opp_poly unlock horner_poly horner_coef -sumrN /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite mulNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerD p q x : (p + q).[x] = p.[x] + q.[x].",
            "VernacStartTheoremProof",
            "1579316740c75517c63e946ede63189cc1efb06b"
        ],
        [
            "rewrite -[+%R]/add_poly unlock horner_poly; set m := maxn _ _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "rewrite !(@horner_coef_wide m) ?leq_max ?leqnn ?orbT // -big_split /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite -mulrDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerXsubC a x : ('X - a%:P).[x] = x - a.",
            "VernacStartTheoremProof",
            "00dea3407eb40383a474410054824403067ae623"
        ],
        [
            "by rewrite hornerD hornerN hornerC hornerX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_sum I (r : seq I) (P : pred I) F x : (\\sum_(i <- r | P i) F i).[x] = \\sum_(i <- r | P i) (F i).[x].",
            "VernacStartTheoremProof",
            "15c41c0cad5ec0e7cd23c4de09674dc6db2f8871"
        ],
        [
            "by elim/big_rec2: _ => [|i _ p _ <-]; rewrite (horner0, hornerD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerCM a p x : (a%:P * p).[x] = a * p.[x].",
            "VernacStartTheoremProof",
            "17c2f5849c426f219ca7b6731da568559c371fe3"
        ],
        [
            "elim/poly_ind: p => [|p c IHp]; first by rewrite !(mulr0, horner0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mulrDr mulrA -polyC_mul !hornerMXaddC IHp mulrDr mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerZ c p x : (c *: p).[x] = c * p.[x].",
            "VernacStartTheoremProof",
            "143a014dd34fd57dda43c189b2d70eeeaad68541"
        ],
        [
            "by rewrite -mul_polyC hornerCM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerMn n p x : (p *+ n).[x] = p.[x] *+ n.",
            "VernacStartTheoremProof",
            "331d3759a16edf32c4c2ec09c31077489e6cc0a7"
        ],
        [
            "by elim: n => [| n IHn]; rewrite ?horner0 // !mulrS hornerD IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition comm_coef p x := forall i, p`_i * x = x * p`_i.",
            "VernacDefinition",
            "e110b28a55a95d6757c5ee0d76c97638da11a2b2"
        ],
        [
            "Definition comm_poly p x := x * p.[x] = p.[x] * x.",
            "VernacDefinition",
            "6de2e381575263392d0dd77b519e1d3f5f04cf71"
        ],
        [
            "Lemma comm_coef_poly p x : comm_coef p x -> comm_poly p x.",
            "VernacStartTheoremProof",
            "304d1aab31a52e94e7be9dc27a6ae03f1851b7cf"
        ],
        [
            "move=> cpx; rewrite /comm_poly !horner_coef big_distrl big_distrr /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: eq_bigr => i _; rewrite /= mulrA -cpx -!mulrA commrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comm_poly0 x : comm_poly 0 x.",
            "VernacStartTheoremProof",
            "a147ce47512069ce1e94860ffe49dc69d04d2aeb"
        ],
        [
            "by rewrite /comm_poly !horner0 !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comm_poly1 x : comm_poly 1 x.",
            "VernacStartTheoremProof",
            "477ea1287dcff4c22201bfb9e6bc6bd3e94e9058"
        ],
        [
            "by rewrite /comm_poly !hornerC !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comm_polyX x : comm_poly 'X x.",
            "VernacStartTheoremProof",
            "1cc07f1dac9a506acd124dda2fd3c25c5eb5c919"
        ],
        [
            "by rewrite /comm_poly !hornerX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerM_comm p q x : comm_poly q x -> (p * q).[x] = p.[x] * q.[x].",
            "VernacStartTheoremProof",
            "0a1a41ef4d4ca0470ddec0838b566dfe700ad0bd"
        ],
        [
            "move=> comm_qx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim/poly_ind: p => [|p c IHp]; first by rewrite !(simp, horner0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite mulrDl hornerD hornerCM -mulrA -commr_polyX mulrA hornerMX.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite {}IHp -mulrA -comm_qx mulrA -mulrDl hornerMXaddC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_exp_comm p x n : comm_poly p x -> (p ^+ n).[x] = p.[x] ^+ n.",
            "VernacStartTheoremProof",
            "cc9c69e449d6d77df0132de9b66370c20df1218a"
        ],
        [
            "move=> comm_px; elim: n => [|n IHn]; first by rewrite hornerC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !exprSr -IHn hornerM_comm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hornerXn x n : ('X^n).[x] = x ^+ n.",
            "VernacStartTheoremProof",
            "bb751f2b222b4bfa8bbd97e085c95cde24cd0698"
        ],
        [
            "by rewrite horner_exp_comm /comm_poly hornerX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition hornerE_comm := (hornerD, hornerN, hornerX, hornerC, horner_cons, simp, hornerCM, hornerZ, (fun p x => hornerM_comm p (comm_polyX x))).",
            "VernacDefinition",
            "52d244fe0ca1d3f22eea77aa34fc93e224838e94"
        ],
        [
            "Definition root p : pred R := fun x => p.[x] == 0.",
            "VernacDefinition",
            "6f2322cd0ff94d3a6a2b80d2445655c2dfd9ada4"
        ],
        [
            "Lemma mem_root p x : x \\in root p = (p.[x] == 0).",
            "VernacStartTheoremProof",
            "a0093028a9032009ad77f44223a0d0be7f102c1b"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootE p x : (root p x = (p.[x] == 0)) * ((x \\in root p) = (p.[x] == 0)).",
            "VernacStartTheoremProof",
            "9b6c250040d7022e1e4b4cf2c5d1e8d224eb6b33"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootP p x : reflect (p.[x] = 0) (root p x).",
            "VernacStartTheoremProof",
            "a7be141fec359c0dafe02c23b82022a70db8cd9e"
        ],
        [
            "exact: eqP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootPt p x : reflect (p.[x] == 0) (root p x).",
            "VernacStartTheoremProof",
            "02dabd71421921f714649a0398342478b1165b12"
        ],
        [
            "exact: idP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootPf p x : reflect ((p.[x] == 0) = false) (~~ root p x).",
            "VernacStartTheoremProof",
            "fb31e09af55d55c93dc94612e2cf14c3263e558e"
        ],
        [
            "exact: negPf.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootC a x : root a%:P x = (a == 0).",
            "VernacStartTheoremProof",
            "7a76351c7f078dc97903bba786379ca12392f925"
        ],
        [
            "by rewrite rootE hornerC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root0 x : root 0 x.",
            "VernacStartTheoremProof",
            "692f97fcb74acc060e15d4f0a6464621e1d24a44"
        ],
        [
            "by rewrite rootC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root1 x : ~~ root 1 x.",
            "VernacStartTheoremProof",
            "bbab7e741f687b02e73caa45c457c9437fe49d65"
        ],
        [
            "by rewrite rootC oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootX x : root 'X x = (x == 0).",
            "VernacStartTheoremProof",
            "ed703c7bb676d04f5ca26f935f62b73194438f45"
        ],
        [
            "by rewrite rootE hornerX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootN p x : root (- p) x = root p x.",
            "VernacStartTheoremProof",
            "c2aa110b6f6fbaed9ed9f5270cfc765fb7b826d2"
        ],
        [
            "by rewrite rootE hornerN oppr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_size_gt1 a p : p != 0 -> root p a -> 1 < size p.",
            "VernacStartTheoremProof",
            "4ca892900137b4d69e29564d4e70de534897f7dd"
        ],
        [
            "rewrite ltnNge => nz_p; apply: contraL => /size1_polyC Dp.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by rewrite Dp rootC -polyC_eq0 -Dp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_XsubC a x : root ('X - a%:P) x = (x == a).",
            "VernacStartTheoremProof",
            "594b79f3ed041d5d715b4889c793589a2d35dfa3"
        ],
        [
            "by rewrite rootE hornerXsubC subr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_XaddC a x : root ('X + a%:P) x = (x == - a).",
            "VernacStartTheoremProof",
            "4d2b636c04de787e5416a1e32b37fa8eee1ee60a"
        ],
        [
            "by rewrite -root_XsubC rmorphN opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem factor_theorem p a : reflect (exists q, p = q * ('X - a%:P)) (root p a).",
            "VernacStartTheoremProof",
            "bbb96821cf6e84e897d2cb38e7dc477b304b5945"
        ],
        [
            "apply: (iffP eqP) => [pa0 | [q ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite hornerM_comm /comm_poly hornerXsubC subrr ?simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (\\poly_(i < size p) horner_rec (drop i.+1 p) a).",
            "VernacExtend",
            "99140f25d7be734a84b26aff76493a41e48ca7a4"
        ],
        [
            "apply/polyP=> i; rewrite mulrBr coefB coefMX coefMC !coef_poly.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: canRL (addrK _) _; rewrite addrC; have [le_p_i | lt_i_p] := leqP.",
            "VernacExtend",
            "88e21057fc6b7102e6280fe7858222ef45ddbdf0"
        ],
        [
            "rewrite nth_default // !simp drop_oversize ?if_same //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: leq_trans (leqSpred _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "case: i => [|i] in lt_i_p *; last by rewrite ltnW // (drop_nth 0 lt_i_p).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite drop1 /= -{}pa0 /horner; case: (p : seq R) lt_i_p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multiplicity_XsubC p a : {m | exists2 q, (p != 0) ==> ~~ root q a & p = q * ('X - a%:P) ^+ m}.",
            "VernacStartTheoremProof",
            "954cd53510003031c0540d1bd11bbfdf99dc6169"
        ],
        [
            "elim: {p}(size p) {-2}p (eqxx (size p)) => [|n IHn] p.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite size_poly_eq0 => ->; exists 0%N, p; rewrite ?mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/sig_eqW[{p}p ->] sz_p | nz_pa] := altP (factor_theorem p a); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists 0%N, p; rewrite ?mulr1 ?nz_pa ?implybT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nz_p: p != 0 by apply: contraTneq sz_p => ->; rewrite mul0r size_poly0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite size_Mmonic ?monicXsubC // size_XsubC addn2 eqSS in sz_p.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [m /sig2_eqW[q nz_qa Dp]] := IHn p sz_p; rewrite nz_p /= in nz_qa.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by exists m.+1, q; rewrite ?nz_qa ?implybT // exprSr mulrA -Dp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_Xn_sub_1 n : n > 0 -> size ('X^n - 1 : {poly R}) = n.+1.",
            "VernacStartTheoremProof",
            "8b9ddf717196e4f87239d38550986310a98a01e5"
        ],
        [
            "by move=> n_gt0; rewrite size_addl size_polyXn // size_opp size_poly1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monic_Xn_sub_1 n : n > 0 -> 'X^n - 1 \\is monic.",
            "VernacStartTheoremProof",
            "f4e2e85e996cdbad74b20184ce33caa993c35612"
        ],
        [
            "move=> n_gt0; rewrite monicE lead_coefE size_Xn_sub_1 // coefB.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite coefXn coef1 eqxx eqn0Ngt n_gt0 subr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition root_of_unity n : pred R := root ('X^n - 1).",
            "VernacDefinition",
            "baa82992b9745f7f8cc06e509b6bb3492522808d"
        ],
        [
            "Local Notation \"n .-unity_root\" := (root_of_unity n) : ring_scope.",
            "VernacNotation",
            "9a6116e4798ef60341472d18b5d64bfe90898f29"
        ],
        [
            "Lemma unity_rootE n z : n.-unity_root z = (z ^+ n == 1).",
            "VernacStartTheoremProof",
            "f4d28ca3e2150d88e40c91d14016529363c9830b"
        ],
        [
            "by rewrite /root_of_unity rootE hornerD hornerN hornerXn hornerC subr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unity_rootP n z : reflect (z ^+ n = 1) (n.-unity_root z).",
            "VernacStartTheoremProof",
            "6547759cfe67362767076032bcaeb6c69b482bf0"
        ],
        [
            "by rewrite unity_rootE; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition primitive_root_of_unity n z := (n > 0) && [forall i : 'I_n, i.+1.-unity_root z == (i.+1 == n)].",
            "VernacDefinition",
            "7de79fce8a2d7a0814f9f892b57cd527a88a90ef"
        ],
        [
            "Local Notation \"n .-primitive_root\" := (primitive_root_of_unity n) : ring_scope.",
            "VernacNotation",
            "def557369a17ef6886258d59087a2fd46471e4d6"
        ],
        [
            "Lemma prim_order_exists n z : n > 0 -> z ^+ n = 1 -> {m | m.-primitive_root z & (m %| n)}.",
            "VernacStartTheoremProof",
            "cae4018e5a927eda24e82dc9aac3224a6027f8a1"
        ],
        [
            "move=> n_gt0 zn1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have: exists m, (m > 0) && (z ^+ m == 1) by exists n; rewrite n_gt0 /= zn1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/ex_minnP=> m /andP[m_gt0 /eqP zm1] m_min.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists m.",
            "VernacExtend",
            "9282a6b695b4daa97f27297bcc295a268a932fcd"
        ],
        [
            "apply/andP; split=> //; apply/eqfunP=> [[i]] /=.",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "rewrite leq_eqVlt unity_rootE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: eqP => [-> _ | _]; first by rewrite zm1 eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: contraTF => zi1; rewrite -leqNgt m_min.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: n %% m < m by rewrite ltn_mod.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraLR; rewrite -lt0n -leqNgt => nm_gt0; apply: m_min.",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "by rewrite nm_gt0 /= expr_mod ?zn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section OnePrimitive.",
            "VernacBeginSection",
            "55ca2510d8b0d84e701c89aae28a11a77df199a8"
        ],
        [
            "Variables (n : nat) (z : R).",
            "VernacAssumption",
            "cb44347178d12a226595b5e878694210d64a92e3"
        ],
        [
            "Hypothesis prim_z : n.-primitive_root z.",
            "VernacAssumption",
            "2ebc34201f460161ee867f5f26d9cfe23127b03c"
        ],
        [
            "Lemma prim_order_gt0 : n > 0.",
            "VernacStartTheoremProof",
            "09c1069085095448d53e64050451cbee3dafa48a"
        ],
        [
            "by case/andP: prim_z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let n_gt0 := prim_order_gt0.",
            "VernacDefinition",
            "14d53904ddffbd974955494ceb6017dc07a7749c"
        ],
        [
            "Lemma prim_expr_order : z ^+ n = 1.",
            "VernacStartTheoremProof",
            "88449d76811c1b3e7e28a9ab99cb42032710d951"
        ],
        [
            "case/andP: prim_z => _; rewrite -(prednK n_gt0) => /forallP/(_ ord_max).",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite unity_rootE eqxx eqb_id => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prim_expr_mod i : z ^+ (i %% n) = z ^+ i.",
            "VernacStartTheoremProof",
            "7e94e628a7f255a3afab9ce5ed42a43af105eaa8"
        ],
        [
            "exact: expr_mod prim_expr_order.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prim_order_dvd i : (n %| i) = (z ^+ i == 1).",
            "VernacStartTheoremProof",
            "7431add97f100173a3a8eb64025076a3234ab357"
        ],
        [
            "move: n_gt0; rewrite -prim_expr_mod /dvdn -(ltn_mod i).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: {i}(i %% n)%N => [|i] lt_i; first by rewrite !eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP: prim_z => _ /forallP/(_ (Ordinal (ltnW lt_i))).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by move/eqP; rewrite unity_rootE eqn_leq andbC leqNgt lt_i.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_prim_root_expr i j : (z ^+ i == z ^+ j) = (i == j %[mod n]).",
            "VernacStartTheoremProof",
            "396d34507980caffc350020a55c88564446983b2"
        ],
        [
            "wlog le_ji: i j / j <= i.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "move=> IH; case: (leqP j i); last move/ltnW; move/IH=> //.",
            "VernacExtend",
            "68562b11748d59f36330088ee2f3fb4c72801916"
        ],
        [
            "by rewrite eq_sym (eq_sym (j %% n)%N).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}(subnKC le_ji) exprD -prim_expr_mod eqn_mod_dvd //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite prim_order_dvd; apply/eqP/eqP=> [|->]; last by rewrite mulr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/(congr1 ( *%R (z ^+ (n - j %% n)))); rewrite mulrA -exprD.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite subnK ?prim_expr_order ?mul1r // ltnW ?ltn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exp_prim_root k : (n %/ gcdn k n).-primitive_root (z ^+ k).",
            "VernacStartTheoremProof",
            "744257bfa5e6dddf97535bccc12406159399c36d"
        ],
        [
            "set d := gcdn k n; have d_gt0: (0 < d)%N by rewrite gcdn_gt0 orbC n_gt0.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "have [d_dv_k d_dv_n]: (d %| k /\\ d %| n)%N by rewrite dvdn_gcdl dvdn_gcdr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "set q := (n %/ d)%N; rewrite /q.-primitive_root ltn_divRL // n_gt0.",
            "VernacExtend",
            "8460a73fe74726b8e94ff0752da65e8d48f68f26"
        ],
        [
            "apply/forallP=> i; rewrite unity_rootE -exprM -prim_order_dvd.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(divnK d_dv_n) -/q -(divnK d_dv_k) mulnAC dvdn_pmul2r //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/eqP; apply/idP/idP=> [|/eqP->]; last by rewrite dvdn_mull.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite Gauss_dvdr; first by rewrite eqn_leq ltn_ord; apply: dvdn_leq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /coprime gcdnC -(eqn_pmul2r d_gt0) mul1n muln_gcdl !divnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_prim_root m : (m %| n)%N -> m.-primitive_root (z ^+ (n %/ m)).",
            "VernacStartTheoremProof",
            "3cb82d321f5957d893ffff6c18ee7b132ee2193a"
        ],
        [
            "set k := (n %/ m)%N => m_dv_n; rewrite -{1}(mulKn m n_gt0) -divnA // -/k.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite -{1}(@gcdn_idPl k n _) ?exp_prim_root // -(divnK m_dv_n) dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OnePrimitive.",
            "VernacEndSegment",
            "b8d5b3e2ed5a3491074d06f1f962db6fd126c1e6"
        ],
        [
            "Lemma prim_root_exp_coprime n z k : n.-primitive_root z -> n.-primitive_root (z ^+ k) = coprime k n.",
            "VernacStartTheoremProof",
            "7b5c03ed08b7c864c66c2fb21242417f2a248a06"
        ],
        [
            "move=> prim_z; have n_gt0 := prim_order_gt0 prim_z.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/idP/idP=> [prim_zk | co_k_n].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "set d := gcdn k n; have dv_d_n: (d %| n)%N := dvdn_gcdr _ _.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "rewrite /coprime -/d -(eqn_pmul2r n_gt0) mul1n -{2}(gcdnMl n d).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{2}(divnK dv_d_n) (mulnC _ d) -muln_gcdr (gcdn_idPr _) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (prim_order_dvd prim_zk) -exprM -(prim_order_dvd prim_z).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite muln_divCA_gcd dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have zkn_1: z ^+ k ^+ n = 1 by rewrite exprAC (prim_expr_order prim_z) expr1n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{zkn_1} [m prim_zk dv_m_n]:= prim_order_exists n_gt0 zkn_1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices /eqP <-: m == n by [].",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite eqn_dvd dv_m_n -(@Gauss_dvdr n k m) 1?coprime_sym //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (prim_order_dvd prim_z) exprM (prim_expr_order prim_zk).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition polyOver (S : pred_class) := [qualify a p : {poly R} | all (mem S) p].",
            "VernacDefinition",
            "7f01a04b94fcc2c0c9a790cd84ae82185bc319f0"
        ],
        [
            "Fact polyOver_key S : pred_key (polyOver S).",
            "VernacStartTheoremProof",
            "e3a3131445fb0519ace98535b848f8d1a0c29de9"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical polyOver_keyed S := KeyedQualifier (polyOver_key S).",
            "VernacDefinition",
            "966f53ff2ab960693965afe5377cdcf052e8b790"
        ],
        [
            "Lemma polyOverS (S1 S2 : pred_class) : {subset S1 <= S2} -> {subset polyOver S1 <= polyOver S2}.",
            "VernacStartTheoremProof",
            "b040e84f59830b24c9a04e4b5ef32c4a6898fdf3"
        ],
        [
            "by move=> sS12 p /(all_nthP 0)S1p; apply/(all_nthP 0)=> i /S1p; apply: sS12.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyOver0 S : 0 \\is a polyOver S.",
            "VernacStartTheoremProof",
            "4659ce7526653eb99024592cfd50e609c3bf0a66"
        ],
        [
            "by rewrite qualifE polyseq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyOver_poly (S : pred_class) n E : (forall i, i < n -> E i \\in S) -> \\poly_(i < n) E i \\is a polyOver S.",
            "VernacStartTheoremProof",
            "385ba94c878859f3788439859d2420d6fdcd7fff"
        ],
        [
            "move=> S_E; apply/(all_nthP 0)=> i lt_i_p /=; rewrite coef_poly.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case: ifP => [/S_E// | /idP[]]; apply: leq_trans lt_i_p (size_poly n E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PolyOverAdd.",
            "VernacBeginSection",
            "54f2e4efab0cf3e9baa0814e0f265db38d2baf4c"
        ],
        [
            "Variables (S : predPredType R) (addS : addrPred S) (kS : keyed_pred addS).",
            "VernacAssumption",
            "a50f11769d391365868c8b21036b4b2bbf250722"
        ],
        [
            "Lemma polyOverP {p} : reflect (forall i, p`_i \\in kS) (p \\in polyOver kS).",
            "VernacStartTheoremProof",
            "ccaab677d2544017e0756ddc3df7d20fddbe0222"
        ],
        [
            "apply: (iffP (all_nthP 0)) => [Sp i | Sp i _]; last exact: Sp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have [/Sp // | /(nth_default 0)->] := ltnP i (size p); apply: rpred0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyOverC c : (c%:P \\in polyOver kS) = (c \\in kS).",
            "VernacStartTheoremProof",
            "05e6d1f4051d00bf4b280dad3bc89b2c0bcedd39"
        ],
        [
            "by rewrite qualifE polyseqC; case: eqP => [->|] /=; rewrite ?andbT ?rpred0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact polyOver_addr_closed : addr_closed (polyOver kS).",
            "VernacStartTheoremProof",
            "5a10ca20173e86122dec23cf5d44fd6ebedd5369"
        ],
        [
            "split=> [|p q Sp Sq]; first exact: polyOver0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/polyOverP=> i; rewrite coefD rpredD ?(polyOverP _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical polyOver_addrPred := AddrPred polyOver_addr_closed.",
            "VernacDefinition",
            "b693038e7c1361f13ac53239152999230b193e79"
        ],
        [
            "End PolyOverAdd.",
            "VernacEndSegment",
            "d249c77fb86347e140306101e973bd30871e982e"
        ],
        [
            "Fact polyOverNr S (addS : zmodPred S) (kS : keyed_pred addS) : oppr_closed (polyOver kS).",
            "VernacStartTheoremProof",
            "8500902b08123758f336753680919ad6e9b1d704"
        ],
        [
            "by move=> p /polyOverP Sp; apply/polyOverP=> i; rewrite coefN rpredN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical polyOver_opprPred S addS kS := OpprPred (@polyOverNr S addS kS).",
            "VernacDefinition",
            "45652bfacda37c995d36c0741bef3875960bd018"
        ],
        [
            "Canonical polyOver_zmodPred S addS kS := ZmodPred (@polyOverNr S addS kS).",
            "VernacDefinition",
            "7b9e08336e89b42660a2b24a9d07abd42d7c2d43"
        ],
        [
            "Section PolyOverSemiring.",
            "VernacBeginSection",
            "721b2753dca4e788cae5837b25b5a2d694e30d1f"
        ],
        [
            "Context (S : pred_class) (ringS : @semiringPred R S) (kS : keyed_pred ringS).",
            "VernacContext",
            "74d6cb9084cf31a46b3116821c28dd5f61f9e139"
        ],
        [
            "Fact polyOver_mulr_closed : mulr_closed (polyOver kS).",
            "VernacStartTheoremProof",
            "8ed9d2c6742c53206569dcce1ee4b5ea4734c1bd"
        ],
        [
            "split=> [|p q /polyOverP Sp /polyOverP Sq]; first by rewrite polyOverC rpred1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/polyOverP=> i; rewrite coefM rpred_sum // => j _; apply: rpredM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical polyOver_mulrPred := MulrPred polyOver_mulr_closed.",
            "VernacDefinition",
            "550e2dce7b15d6e6528aacd6e59677fb2c6f8c04"
        ],
        [
            "Canonical polyOver_semiringPred := SemiringPred polyOver_mulr_closed.",
            "VernacDefinition",
            "71baccd46e8c5bf1798c4919c9b816b91a545124"
        ],
        [
            "Lemma polyOverZ : {in kS & polyOver kS, forall c p, c *: p \\is a polyOver kS}.",
            "VernacStartTheoremProof",
            "d36ec2742cc0c420de26c204ae7f6e615ce5d6c4"
        ],
        [
            "by move=> c p Sc /polyOverP Sp; apply/polyOverP=> i; rewrite coefZ rpredM ?Sp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyOverX : 'X \\in polyOver kS.",
            "VernacStartTheoremProof",
            "521ea67d9d6602ee77fe3fa118e241aee1d24ac0"
        ],
        [
            "by rewrite qualifE polyseqX /= rpred0 rpred1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rpred_horner : {in polyOver kS & kS, forall p x, p.[x] \\in kS}.",
            "VernacStartTheoremProof",
            "c2eb09e9f8222b94858a8f86c796fed6a7aa7414"
        ],
        [
            "move=> p x /polyOverP Sp Sx; rewrite horner_coef rpred_sum // => i _.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite rpredM ?rpredX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolyOverSemiring.",
            "VernacEndSegment",
            "1ff138496f48741e5c70d740210907a825c53abe"
        ],
        [
            "Section PolyOverRing.",
            "VernacBeginSection",
            "cc0e33ac57ad9e59f456feac77f62321eb848a31"
        ],
        [
            "Context (S : pred_class) (ringS : @subringPred R S) (kS : keyed_pred ringS).",
            "VernacContext",
            "017fb3cfa6826ecc64c3093cb8ba31f4fb0ead25"
        ],
        [
            "Canonical polyOver_smulrPred := SmulrPred (polyOver_mulr_closed kS).",
            "VernacDefinition",
            "98119f8f7059ea20fe16fb1efe311a96ebe45614"
        ],
        [
            "Canonical polyOver_subringPred := SubringPred (polyOver_mulr_closed kS).",
            "VernacDefinition",
            "a0c53af5e454c4ccd946958937550c62476a0a2c"
        ],
        [
            "Lemma polyOverXsubC c : ('X - c%:P \\in polyOver kS) = (c \\in kS).",
            "VernacStartTheoremProof",
            "e136b0ce61b7536893d980d2d9eef504f8842f5d"
        ],
        [
            "by rewrite rpredBl ?polyOverX ?polyOverC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolyOverRing.",
            "VernacEndSegment",
            "f056c7a999be15f36221d2b6f9d779fe613c973c"
        ],
        [
            "Definition deriv p := \\poly_(i < (size p).-1) (p`_i.+1 *+ i.+1).",
            "VernacDefinition",
            "5c265e21d0326bc970f21eb607360cac437f837b"
        ],
        [
            "Local Notation \"a ^` ()\" := (deriv a).",
            "VernacNotation",
            "6035aab4773cccff731a2fda5cbe07f807816c9c"
        ],
        [
            "Lemma coef_deriv p i : p^`()`_i = p`_i.+1 *+ i.+1.",
            "VernacStartTheoremProof",
            "bba493f709fb77288735b544b9b2a53455076a5b"
        ],
        [
            "rewrite coef_poly -subn1 ltn_subRL.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: leqP => // /(nth_default 0) ->; rewrite mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyOver_deriv S (ringS : semiringPred S) (kS : keyed_pred ringS) : {in polyOver kS, forall p, p^`() \\is a polyOver kS}.",
            "VernacStartTheoremProof",
            "905ed03da7868c1ba6165feff52e3f06045400d5"
        ],
        [
            "by move=> p /polyOverP Kp; apply/polyOverP=> i; rewrite coef_deriv rpredMn ?Kp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivC c : c%:P^`() = 0.",
            "VernacStartTheoremProof",
            "4fe3eeebaaca988a7b4d5698834e0305344fecb9"
        ],
        [
            "by apply/polyP=> i; rewrite coef_deriv coef0 coefC mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivX : ('X)^`() = 1.",
            "VernacStartTheoremProof",
            "5538c9e86988343943c2eaed51e1529270c6b30e"
        ],
        [
            "by apply/polyP=> [[|i]]; rewrite coef_deriv coef1 coefX ?mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivXn n : 'X^n^`() = 'X^n.-1 *+ n.",
            "VernacStartTheoremProof",
            "08a8eadff63fc141d52fad727465fce40df335c9"
        ],
        [
            "case: n => [|n]; first exact: derivC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/polyP=> i; rewrite coef_deriv coefMn !coefXn eqSS.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: eqP => [-> // | _]; rewrite !mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact deriv_is_linear : linear deriv.",
            "VernacStartTheoremProof",
            "81af7a883f4f2382815558ff0e2592049a2d0307"
        ],
        [
            "move=> k p q; apply/polyP=> i.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite !(coef_deriv, coefD, coefZ) mulrnDl mulrnAr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical deriv_additive := Additive deriv_is_linear.",
            "VernacDefinition",
            "d79e9bd8afa9448de2c01c9cff319258aeaf67ff"
        ],
        [
            "Canonical deriv_linear := Linear deriv_is_linear.",
            "VernacDefinition",
            "e8c71310c22f8a43685353df81a6315d8d229708"
        ],
        [
            "Lemma deriv0 : 0^`() = 0.",
            "VernacStartTheoremProof",
            "c451747c2475e8affb4d8c5fa0630b0303d84397"
        ],
        [
            "exact: linear0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivD : {morph deriv : p q / p + q}.",
            "VernacStartTheoremProof",
            "7ffb36f7b1ddcb71683a7cf4e87f513b285e326f"
        ],
        [
            "exact: linearD.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivN : {morph deriv : p / - p}.",
            "VernacStartTheoremProof",
            "53a40bf474547b77b971bbdbfa1d16702d82926d"
        ],
        [
            "exact: linearN.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivB : {morph deriv : p q / p - q}.",
            "VernacStartTheoremProof",
            "5298c32f7c6f7f088196facadb7b5db167503959"
        ],
        [
            "exact: linearB.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivXsubC (a : R) : ('X - a%:P)^`() = 1.",
            "VernacStartTheoremProof",
            "91e5142c8c993b3b017327252e21d3b81df69021"
        ],
        [
            "by rewrite derivB derivX derivC subr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivMn n p : (p *+ n)^`() = p^`() *+ n.",
            "VernacStartTheoremProof",
            "bbd7f8fd8e950e7b6e211ebdcda63bf1b1448646"
        ],
        [
            "exact: linearMn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivMNn n p : (p *- n)^`() = p^`() *- n.",
            "VernacStartTheoremProof",
            "d1d6ae2ed700d606540b30d43cc64e09a8662160"
        ],
        [
            "exact: linearMNn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivZ c p : (c *: p)^`() = c *: p^`().",
            "VernacStartTheoremProof",
            "24c00f9279e9d8cebb72253a4d7f5569889659f9"
        ],
        [
            "by rewrite linearZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma deriv_mulC c p : (c%:P * p)^`() = c%:P * p^`().",
            "VernacStartTheoremProof",
            "521451f08f162bf4a94f7d39cb951392ca75cf83"
        ],
        [
            "by rewrite !mul_polyC derivZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivMXaddC p c : (p * 'X + c%:P)^`() = p + p^`() * 'X.",
            "VernacStartTheoremProof",
            "d76c3b837aa1973e4a111a21932521d8f1cbbe13"
        ],
        [
            "apply/polyP=> i; rewrite raddfD /= derivC addr0 coefD !(coefMX, coef_deriv).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: i; rewrite ?addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivM p q : (p * q)^`() = p^`() * q + p * q^`().",
            "VernacStartTheoremProof",
            "86de7661c72a146fc238b856128034e3add03f95"
        ],
        [
            "elim/poly_ind: p => [|p b IHp]; first by rewrite !(mul0r, add0r, derivC).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite mulrDl -mulrA -commr_polyX mulrA -[_ * 'X]addr0 raddfD /= !derivMXaddC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite deriv_mulC IHp !mulrDl -!mulrA !commr_polyX !addrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition derivE := Eval lazy beta delta [morphism_2 morphism_1] in (derivZ, deriv_mulC, derivC, derivX, derivMXaddC, derivXsubC, derivM, derivB, derivD, derivN, derivXn, derivM, derivMn).",
            "VernacDefinition",
            "2b9cedd4c7ad4dbfd5140a57d556f8b531ecfc56"
        ],
        [
            "Definition derivn n p := iter n deriv p.",
            "VernacDefinition",
            "1e5445ad5bcf506be011f9483d5757e1503cd134"
        ],
        [
            "Local Notation \"a ^` ( n )\" := (derivn n a) : ring_scope.",
            "VernacNotation",
            "6a50aeba78622fbdb5c4930d12b19971d99073d2"
        ],
        [
            "Lemma derivn0 p : p^`(0) = p.",
            "VernacStartTheoremProof",
            "af4f5e231f72b32c67fe2d75ae635bae92a43db3"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivn1 p : p^`(1) = p^`().",
            "VernacStartTheoremProof",
            "5d2ac4287018780a52aedaab648e4fee622c67d4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivnS p n : p^`(n.+1) = p^`(n)^`().",
            "VernacStartTheoremProof",
            "09727723d298f6d8a1fe0e198c9fb834c0723b4e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivSn p n : p^`(n.+1) = p^`()^`(n).",
            "VernacStartTheoremProof",
            "cdf12754b8953a89b3f513abeb37fb5d5c85697e"
        ],
        [
            "exact: iterSr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coef_derivn n p i : p^`(n)`_i = p`_(n + i) *+ (n + i) ^_ n.",
            "VernacStartTheoremProof",
            "cbbf731cd3a1a934fc729e4eeae404913f8b6788"
        ],
        [
            "elim: n i => [|n IHn] i; first by rewrite ffactn0 mulr1n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite derivnS coef_deriv IHn -mulrnA ffactnSr addSnnS addKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyOver_derivn S (ringS : semiringPred S) (kS : keyed_pred ringS) : {in polyOver kS, forall p n, p^`(n) \\is a polyOver kS}.",
            "VernacStartTheoremProof",
            "9805de1336b230290124b1102d978dcb44c6572a"
        ],
        [
            "move=> p /polyOverP Kp /= n; apply/polyOverP=> i.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite coef_derivn rpredMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact derivn_is_linear n : linear (derivn n).",
            "VernacStartTheoremProof",
            "db922bfbd9c11a74518a0701a04be700e5022da1"
        ],
        [
            "by elim: n => // n IHn a p q; rewrite derivnS IHn linearP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical derivn_additive n := Additive (derivn_is_linear n).",
            "VernacDefinition",
            "a0141f5ec0591d473e475030c52f1b8c2f797a4d"
        ],
        [
            "Canonical derivn_linear n := Linear (derivn_is_linear n).",
            "VernacDefinition",
            "9cabcf9854bc3c2baf1d06425818dff839e00683"
        ],
        [
            "Lemma derivnC c n : c%:P^`(n) = if n == 0%N then c%:P else 0.",
            "VernacStartTheoremProof",
            "3d11a1972d83331f2ef36d0ddf49000ccc745882"
        ],
        [
            "by case: n => // n; rewrite derivSn derivC linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivnD n : {morph derivn n : p q / p + q}.",
            "VernacStartTheoremProof",
            "56385a0930464c67de5561589ccf399d4fd7d1e5"
        ],
        [
            "exact: linearD.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivn_sub n : {morph derivn n : p q / p - q}.",
            "VernacStartTheoremProof",
            "dc399f4f6b41498254c843e06eee7fbed0add495"
        ],
        [
            "exact: linearB.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivnMn n m p : (p *+ m)^`(n) = p^`(n) *+ m.",
            "VernacStartTheoremProof",
            "4a61beca9e8d439699e6f32160666182db1d4550"
        ],
        [
            "exact: linearMn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivnMNn n m p : (p *- m)^`(n) = p^`(n) *- m.",
            "VernacStartTheoremProof",
            "8d3779af76affda2abfb397d69f1827162cb6c44"
        ],
        [
            "exact: linearMNn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivnN n : {morph derivn n : p / - p}.",
            "VernacStartTheoremProof",
            "86305053ee1681539d499c1bca67fc3da1f29ee8"
        ],
        [
            "exact: linearN.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivnZ n : scalable (derivn n).",
            "VernacStartTheoremProof",
            "7b8eeb2a5c9d45aed3537f5571c2da2b142fa77e"
        ],
        [
            "exact: linearZZ.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivnXn m n : 'X^m^`(n) = 'X^(m - n) *+ m ^_ n.",
            "VernacStartTheoremProof",
            "20ea3bcd1298b4860979a48c3cd605414468b443"
        ],
        [
            "apply/polyP=>i; rewrite coef_derivn coefMn !coefXn.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case: (ltnP m n) => [lt_m_n | le_m_n].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite eqn_leq leqNgt ltn_addr // mul0rn ffact_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -{1 3}(subnKC le_m_n) eqn_add2l; case: eqP => [->|]; rewrite ?mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivnMXaddC n p c : (p * 'X + c%:P)^`(n.+1) = p^`(n) *+ n.+1 + p^`(n.+1) * 'X.",
            "VernacStartTheoremProof",
            "0b8000b9c26436f478acb5a4f95011457c5e7b7f"
        ],
        [
            "elim: n => [|n IHn]; first by rewrite derivn1 derivMXaddC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite derivnS IHn derivD derivM derivX mulr1 derivMn -!derivnS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addrA addrAC -mulrSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivn_poly0 p n : size p <= n -> p^`(n) = 0.",
            "VernacStartTheoremProof",
            "5b0b2bef8cee262cc55bfe0fb56e164d53a4e431"
        ],
        [
            "move=> le_p_n; apply/polyP=> i; rewrite coef_derivn.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite nth_default; first by rewrite mul0rn coef0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: leq_trans le_p_n _; apply leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_size_deriv (p : {poly R}) : p != 0 -> size p^`() < size p.",
            "VernacStartTheoremProof",
            "0c8412bb4bbfb738e7a2d996c31ebd012334941d"
        ],
        [
            "by move=> /polySpred->; apply: size_poly.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nderivn n p := \\poly_(i < size p - n) (p`_(n + i) *+ 'C(n + i, n)).",
            "VernacDefinition",
            "5d737a5043a2f5bbad681dc9e7bf9f85dafb7749"
        ],
        [
            "Local Notation \"a ^`N ( n )\" := (nderivn n a) : ring_scope.",
            "VernacNotation",
            "efcbd56fa3ed30e20c108be0e1ad8667adc5e85e"
        ],
        [
            "Lemma coef_nderivn n p i : p^`N(n)`_i = p`_(n + i) *+ 'C(n + i, n).",
            "VernacStartTheoremProof",
            "25c078ca027fc907b7a460948a3cc9e3850856aa"
        ],
        [
            "rewrite coef_poly ltn_subRL; case: leqP => // le_p_ni.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite nth_default ?mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivn_def n p : p^`(n) = p^`N(n) *+ n`!.",
            "VernacStartTheoremProof",
            "9434cf60a5f9fcb8f9304903b38cc3c7e04b18ad"
        ],
        [
            "by apply/polyP=> i; rewrite coefMn coef_nderivn coef_derivn -mulrnA bin_ffact.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyOver_nderivn S (ringS : semiringPred S) (kS : keyed_pred ringS) : {in polyOver kS, forall p n, p^`N(n) \\in polyOver kS}.",
            "VernacStartTheoremProof",
            "8b5ce111e21e1e4624e3a4ec49c9574f6364eed7"
        ],
        [
            "move=> p /polyOverP Sp /= n; apply/polyOverP=> i.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite coef_nderivn rpredMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivn0 p : p^`N(0) = p.",
            "VernacStartTheoremProof",
            "2b76c693554cf326ef4315e625d11fb32e0d4799"
        ],
        [
            "by rewrite -[p^`N(0)](nderivn_def 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivn1 p : p^`N(1) = p^`().",
            "VernacStartTheoremProof",
            "ebcb9bc8af412f2f2cd39b6c540bdb6244919368"
        ],
        [
            "by rewrite -[p^`N(1)](nderivn_def 1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivnC c n : (c%:P)^`N(n) = if n == 0%N then c%:P else 0.",
            "VernacStartTheoremProof",
            "2ca33db2c46b7153cb11255f4a1923cb8821333c"
        ],
        [
            "apply/polyP=> i; rewrite coef_nderivn.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: n => [|n]; rewrite ?bin0 // coef0 coefC mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivnXn m n : 'X^m^`N(n) = 'X^(m - n) *+ 'C(m, n).",
            "VernacStartTheoremProof",
            "60aacff2d258f9bdcd3bdabd67dd70692905fee8"
        ],
        [
            "apply/polyP=> i; rewrite coef_nderivn coefMn !coefXn.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have [lt_m_n | le_n_m] := ltnP m n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite eqn_leq leqNgt ltn_addr // mul0rn bin_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -{1 3}(subnKC le_n_m) eqn_add2l; case: eqP => [->|]; rewrite ?mul0rn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact nderivn_is_linear n : linear (nderivn n).",
            "VernacStartTheoremProof",
            "f9507d0024dc7287cffd07d1dce05f2904556451"
        ],
        [
            "move=> k p q; apply/polyP=> i.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite !(coef_nderivn, coefD, coefZ) mulrnDl mulrnAr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical nderivn_additive n := Additive(nderivn_is_linear n).",
            "VernacDefinition",
            "28a972141fd1142f43798bb9cdf38cdb5c01065e"
        ],
        [
            "Canonical nderivn_linear n := Linear (nderivn_is_linear n).",
            "VernacDefinition",
            "6dbd28f8ccf35a36f8f94f65049c882c33545cb0"
        ],
        [
            "Lemma nderivnD n : {morph nderivn n : p q / p + q}.",
            "VernacStartTheoremProof",
            "86ad6d3c1e48b94ab87151fd0f70ffc59fd8b7d1"
        ],
        [
            "exact: linearD.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivnB n : {morph nderivn n : p q / p - q}.",
            "VernacStartTheoremProof",
            "550aed058a4b607e8a2ae629d946d72384130b2e"
        ],
        [
            "exact: linearB.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivnMn n m p : (p *+ m)^`N(n) = p^`N(n) *+ m.",
            "VernacStartTheoremProof",
            "b66230e3e5b51f8e4ea023f602efac262aab0e7b"
        ],
        [
            "exact: linearMn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivnMNn n m p : (p *- m)^`N(n) = p^`N(n) *- m.",
            "VernacStartTheoremProof",
            "0b0d414dc9b559d1173f5f8be9b0cb6b1f8912f7"
        ],
        [
            "exact: linearMNn.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivnN n : {morph nderivn n : p / - p}.",
            "VernacStartTheoremProof",
            "926daf82092afb4ae05740236b10ce4e9ab376c0"
        ],
        [
            "exact: linearN.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivnZ n : scalable (nderivn n).",
            "VernacStartTheoremProof",
            "055baad5124c88292eab986e8fbe0599e5781a2a"
        ],
        [
            "exact: linearZZ.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivnMXaddC n p c : (p * 'X + c%:P)^`N(n.+1) = p^`N(n) + p^`N(n.+1) * 'X.",
            "VernacStartTheoremProof",
            "39a5a194b76565594322b17f9f5b959f71d874d5"
        ],
        [
            "apply/polyP=> i; rewrite coef_nderivn !coefD !coefMX coefC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite !addSn /= !coef_nderivn addr0 binS mulrnDr addrC; congr (_ + _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite addSnnS; case: i; rewrite // addn0 bin_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivn_poly0 p n : size p <= n -> p^`N(n) = 0.",
            "VernacStartTheoremProof",
            "2a9443b03640cffbe1508fb4f8615c05ec00e0bb"
        ],
        [
            "move=> le_p_n; apply/polyP=> i; rewrite coef_nderivn.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite nth_default; first by rewrite mul0rn coef0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: leq_trans le_p_n _; apply leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderiv_taylor p x h : GRing.comm x h -> p.[x + h] = \\sum_(i < size p) p^`N(i).[x] * h ^+ i.",
            "VernacStartTheoremProof",
            "5343eb5f3845611669c81e91c9f0227a1c0eeca6"
        ],
        [
            "move/commrX=> cxh; elim/poly_ind: p => [|p c IHp].",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "by rewrite size_poly0 big_ord0 horner0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite hornerMXaddC size_MXaddC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [-> | nz_p] := altP (p =P 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite horner0 !simp; have [-> | _] := c =P 0; first by rewrite big_ord0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite size_poly0 big_ord_recl big_ord0 nderivn0 hornerC !simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite big_ord_recl nderivn0 !simp hornerMXaddC addrAC; congr (_ + _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite mulrDr {}IHp !big_distrl polySpred //= big_ord_recl /= mulr1 -addrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite nderivn0 /bump /(addn 1) /=; congr (_ + _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite !big_ord_recr /= nderivnMXaddC -mulrA -exprSr -polySpred // !addrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (_ + _); last by rewrite (nderivn_poly0 (leqnn _)) !simp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite addrC -big_split /=; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite nderivnMXaddC !hornerE_comm /= mulrDl -!mulrA -exprSr cxh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderiv_taylor_wide n p x h : GRing.comm x h -> size p <= n -> p.[x + h] = \\sum_(i < n) p^`N(i).[x] * h ^+ i.",
            "VernacStartTheoremProof",
            "88653c416ba222a5c53c9304e0bb297824105f1b"
        ],
        [
            "move/nderiv_taylor=> -> le_p_n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (big_ord_widen n (fun i => p^`N(i).[x] * h ^+ i)) // big_mkcond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => i _; case: leqP => // /nderivn_poly0->.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "by rewrite horner0 simp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolynomialTheory.",
            "VernacEndSegment",
            "dd618be9329a8830c089d52d33d6b34bcf7f1374"
        ],
        [
            "Prenex Implicits polyC polyCK Poly polyseqK lead_coef root horner polyOver.",
            "VernacExtend",
            "56056ecc89658beb627593dc0880828516e48b78"
        ],
        [
            "Arguments monic {R}.",
            "VernacArguments",
            "2c7204b1e071e774263dc5a18797312aa02e2003"
        ],
        [
            "Notation \"\\poly_ ( i < n ) E\" := (poly n (fun i => E)) : ring_scope.",
            "VernacNotation",
            "077b7b8f52b1acfc803d6617768d418674b009c8"
        ],
        [
            "Notation \"c %:P\" := (polyC c) : ring_scope.",
            "VernacNotation",
            "eeaa93f906bbfa9d6e977cf96a3308a368d426e4"
        ],
        [
            "Notation \"'X\" := (polyX _) : ring_scope.",
            "VernacNotation",
            "00cc75b0834f3c1584874b79dab52f4e251b252a"
        ],
        [
            "Notation \"''X^' n\" := ('X ^+ n) : ring_scope.",
            "VernacNotation",
            "f5cd93b00a5a7589c2c673f7c8b19d55712bd723"
        ],
        [
            "Notation \"p .[ x ]\" := (horner p x) : ring_scope.",
            "VernacNotation",
            "5a3fdda424ed5c06a33199498a71995e2812f570"
        ],
        [
            "Notation \"n .-unity_root\" := (root_of_unity n) : ring_scope.",
            "VernacNotation",
            "0738a5e0ba31a9b405841c63b1a1ffd7eb25274c"
        ],
        [
            "Notation \"n .-primitive_root\" := (primitive_root_of_unity n) : ring_scope.",
            "VernacNotation",
            "a1261e7bf1fe2ac8a4f42b41dbdc24d69f7f8739"
        ],
        [
            "Notation \"a ^` ()\" := (deriv a) : ring_scope.",
            "VernacNotation",
            "e9e8c95af2c47eba962bd30646715c3d95f8fb68"
        ],
        [
            "Notation \"a ^` ( n )\" := (derivn n a) : ring_scope.",
            "VernacNotation",
            "21e5d745f2dfe4c8f2570f4ca2e95e38d0ed2fec"
        ],
        [
            "Notation \"a ^`N ( n )\" := (nderivn n a) : ring_scope.",
            "VernacNotation",
            "b20d00f10c9d86ae00b61f50cffad37b9e3fc475"
        ],
        [
            "Arguments monicP {R p}.",
            "VernacArguments",
            "d83766bf8c173ec519320a50ad6d6fd76e182f68"
        ],
        [
            "Arguments rootP {R p x}.",
            "VernacArguments",
            "133cd194963525c11a765d5e5e31558f14d2784c"
        ],
        [
            "Arguments rootPf {R p x}.",
            "VernacArguments",
            "2f99b4352841229484ea2eaf6ce9537354e0f4b0"
        ],
        [
            "Arguments rootPt {R p x}.",
            "VernacArguments",
            "0059302f2eaaf971079ff81998ed49adf87d09d2"
        ],
        [
            "Arguments unity_rootP {R n z}.",
            "VernacArguments",
            "a5a22b7d7e42b8cd4624d34c676432ef39c0ac27"
        ],
        [
            "Arguments polyOverP {R S0 addS kS p}.",
            "VernacArguments",
            "cbb685a2b224f09371af92d2c339a260261758f6"
        ],
        [
            "Arguments polyC_inj {R} [x1 x2] eq_x12P.",
            "VernacArguments",
            "34104fc461d5142e6a62ffcb5b8601658e7dbcbf"
        ],
        [
            "Canonical polynomial_countZmodType (R : countRingType) := [countZmodType of polynomial R].",
            "VernacDefinition",
            "119d1d32dd8e8b755c6663ebf42fc09663ce78bc"
        ],
        [
            "Canonical poly_countZmodType (R : countRingType) := [countZmodType of {poly R}].",
            "VernacDefinition",
            "182472c6a57d48ecf0a4ec2c945ca972ea52aae2"
        ],
        [
            "Canonical polynomial_countRingType (R : countRingType) := [countRingType of polynomial R].",
            "VernacDefinition",
            "de5106d438a68878586fb35090c5d2c7547122f9"
        ],
        [
            "Canonical poly_countRingType (R : countRingType) := [countRingType of {poly R}].",
            "VernacDefinition",
            "1c3fb6700c0955b357c120d799c3c5aa9bd86a6b"
        ],
        [
            "Section MapPoly.",
            "VernacBeginSection",
            "31abd2d84bb941aace58dc514f3373f5e0679f2a"
        ],
        [
            "Section Definitions.",
            "VernacBeginSection",
            "44c8aeee6f7e234b1ae876a1cda441d352768d1b"
        ],
        [
            "Variables (aR rR : ringType) (f : aR -> rR).",
            "VernacAssumption",
            "3fb6681773e7bc041e35aafd1504ffa24cc34350"
        ],
        [
            "Definition map_poly (p : {poly aR}) := \\poly_(i < size p) f p`_i.",
            "VernacDefinition",
            "6316a0bd8886e462fb9037f857e0540954d57d97"
        ],
        [
            "Lemma map_polyE p : map_poly p = Poly (map f p).",
            "VernacStartTheoremProof",
            "bb1d5c7ec264a93450c64e22a697e00513fd5ac0"
        ],
        [
            "rewrite /map_poly unlock; congr Poly.",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "apply: (@eq_from_nth _ 0); rewrite size_mkseq ?size_map // => i lt_i_p.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite (nth_map 0) ?nth_mkseq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition commr_rmorph u := forall x, GRing.comm u (f x).",
            "VernacDefinition",
            "27897de808c68edccd8bf3739f8b67af537a1b01"
        ],
        [
            "Definition horner_morph u of commr_rmorph u := fun p => (map_poly p).[u].",
            "VernacDefinition",
            "02362c571fe8c2569db6b41c0e37ee1cfd7112c3"
        ],
        [
            "End Definitions.",
            "VernacEndSegment",
            "a9ff902ce1bf921ade03bc4535b4de21f2fcc02c"
        ],
        [
            "Variables aR rR : ringType.",
            "VernacAssumption",
            "2605bdced76c54516acd7507476f2cec93d49b2b"
        ],
        [
            "Section Combinatorial.",
            "VernacBeginSection",
            "230825c4c774e578ca0ebdae2abb29fac2288174"
        ],
        [
            "Variables (iR : ringType) (f : aR -> rR).",
            "VernacAssumption",
            "9313a982865e74daa4e24ffba27c1df3fea815e4"
        ],
        [
            "Local Notation \"p ^f\" := (map_poly f p) : ring_scope.",
            "VernacNotation",
            "c14b79639352dde330b182be50ae72e13930a45f"
        ],
        [
            "Lemma map_poly0 : 0^f = 0.",
            "VernacStartTheoremProof",
            "9b6c74ed87b435ae6d90ae3d64071f6fdfcb9091"
        ],
        [
            "by rewrite map_polyE polyseq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_map_poly (g : aR -> rR) : f =1 g -> map_poly f =1 map_poly g.",
            "VernacStartTheoremProof",
            "8bc10b355d014f92fefe2e66110dfa4fff2ff4a3"
        ],
        [
            "by move=> eq_fg p; rewrite !map_polyE (eq_map eq_fg).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_poly_id g (p : {poly iR}) : {in (p : seq iR), g =1 id} -> map_poly g p = p.",
            "VernacStartTheoremProof",
            "885bea002ed10b27cedce46bc4905e74c1ed32e6"
        ],
        [
            "by move=> g_id; rewrite map_polyE map_id_in ?polyseqK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coef_map_id0 p i : f 0 = 0 -> (p^f)`_i = f p`_i.",
            "VernacStartTheoremProof",
            "376141643554a3eea9893d1b2677dbd23eb00baf"
        ],
        [
            "by move=> f0; rewrite coef_poly; case: ltnP => // le_p_i; rewrite nth_default.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_Poly_id0 s : f 0 = 0 -> (Poly s)^f = Poly (map f s).",
            "VernacStartTheoremProof",
            "6b190371323c70e2ed97d3133174357ceadb2ab3"
        ],
        [
            "move=> f0; apply/polyP=> j; rewrite coef_map_id0 ?coef_Poly //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "have [/(nth_map 0 0)->// | le_s_j] := ltnP j (size s).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !nth_default ?size_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_poly_comp_id0 (g : iR -> aR) p : f 0 = 0 -> map_poly (f \\o g) p = (map_poly g p)^f.",
            "VernacStartTheoremProof",
            "fcedd903754604ebf6a0fe9df1ddb46c3d2ff917"
        ],
        [
            "by move=> f0; rewrite map_polyE map_comp -map_Poly_id0 -?map_polyE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_map_poly_id0 p : f (lead_coef p) != 0 -> size p^f = size p.",
            "VernacStartTheoremProof",
            "324b1c1db427c51062122df5af34e52340d460bb"
        ],
        [
            "by move=> nz_fp; apply: size_poly_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_poly_eq0_id0 p : f (lead_coef p) != 0 -> (p^f == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "4c394e05d452e8cfb24c5382af9ddcd0a2ac703d"
        ],
        [
            "by rewrite -!size_poly_eq0 => /size_map_poly_id0->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_map_id0 p : f 0 = 0 -> f (lead_coef p) != 0 -> lead_coef p^f = f (lead_coef p).",
            "VernacStartTheoremProof",
            "81f9872e448f0c1b60bfeafa1caaf51adb550bb0"
        ],
        [
            "by move=> f0 nz_fp; rewrite lead_coefE coef_map_id0 ?size_map_poly_id0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypotheses (inj_f : injective f) (f_0 : f 0 = 0).",
            "VernacAssumption",
            "2ffa6a1b868cdd6aefe0520f6f9faa1e4706eabd"
        ],
        [
            "Lemma size_map_inj_poly p : size p^f = size p.",
            "VernacStartTheoremProof",
            "a0cb433871b25c0fa2efbd9874938f6923373ca5"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0; first by rewrite map_poly0 !size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite size_map_poly_id0 // -f_0 (inj_eq inj_f) lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_inj_poly : injective (map_poly f).",
            "VernacStartTheoremProof",
            "c05b8ca51c662f5763a1ed6e26c5570a2e596002"
        ],
        [
            "move=> p q /polyP eq_pq; apply/polyP=> i; apply: inj_f.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by rewrite -!coef_map_id0 ?eq_pq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_map_inj p : lead_coef p^f = f (lead_coef p).",
            "VernacStartTheoremProof",
            "5d777e9d7bbbc4585dae8b023c5e8e6d854d69cf"
        ],
        [
            "by rewrite !lead_coefE size_map_inj_poly coef_map_id0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Combinatorial.",
            "VernacEndSegment",
            "761ba2a19ca8f2dd1bf88e392b1e5acef89e04de"
        ],
        [
            "Lemma map_polyK (f : aR -> rR) g : cancel g f -> f 0 = 0 -> cancel (map_poly g) (map_poly f).",
            "VernacStartTheoremProof",
            "bf30181c3871d92b239f6feecbcb3e10d9e2b9be"
        ],
        [
            "by move=> gK f_0 p; rewrite /= -map_poly_comp_id0 ?map_poly_id // => x _ //=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Additive.",
            "VernacBeginSection",
            "43f8d26641e00b8319e52fe8bc38a842d7056dc6"
        ],
        [
            "Variables (iR : ringType) (f : {additive aR -> rR}).",
            "VernacAssumption",
            "0b7dec300c432f9e3b38d86c790d6f0353f1a515"
        ],
        [
            "Local Notation \"p ^f\" := (map_poly (GRing.Additive.apply f) p) : ring_scope.",
            "VernacNotation",
            "69baaed3e5fb05a793ce144bbf9f0ccfe40c6df9"
        ],
        [
            "Lemma coef_map p i : p^f`_i = f p`_i.",
            "VernacStartTheoremProof",
            "336596422c1ced42bd5641b9cc7b2829dedc21ff"
        ],
        [
            "exact: coef_map_id0 (raddf0 f).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_Poly s : (Poly s)^f = Poly (map f s).",
            "VernacStartTheoremProof",
            "883be3ecb2a393c65e5170f046f96f02edbfbb6c"
        ],
        [
            "exact: map_Poly_id0 (raddf0 f).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_poly_comp (g : iR -> aR) p : map_poly (f \\o g) p = map_poly f (map_poly g p).",
            "VernacStartTheoremProof",
            "62911feeefa700fb0f6bf80914d7386135b44d88"
        ],
        [
            "exact: map_poly_comp_id0 (raddf0 f).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact map_poly_is_additive : additive (map_poly f).",
            "VernacStartTheoremProof",
            "d81397898cc0014a9d332f27d7fde1c7ffc6de44"
        ],
        [
            "by move=> p q; apply/polyP=> i; rewrite !(coef_map, coefB) raddfB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical map_poly_additive := Additive map_poly_is_additive.",
            "VernacDefinition",
            "203e950205ef1ceb86f509fe8d19eb428ce2059f"
        ],
        [
            "Lemma map_polyC a : (a%:P)^f = (f a)%:P.",
            "VernacStartTheoremProof",
            "4d7a88b6105cca2b553ba1917f4806b2e94398a9"
        ],
        [
            "by apply/polyP=> i; rewrite !(coef_map, coefC) -!mulrb raddfMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_map_eq p : f (lead_coef p) != 0 -> lead_coef p^f = f (lead_coef p).",
            "VernacStartTheoremProof",
            "66ea595e0631b69d050a31e06d5f45048209018a"
        ],
        [
            "exact: lead_coef_map_id0 (raddf0 f).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Additive.",
            "VernacEndSegment",
            "73bb5b1c75211ef95c10fea430b244ebd0815a16"
        ],
        [
            "Variable f : {rmorphism aR -> rR}.",
            "VernacAssumption",
            "f31aecb35904caec72d7d4bd769d3ddd5a8b66a4"
        ],
        [
            "Implicit Types p : {poly aR}.",
            "VernacReserve",
            "8c81f78cbc405805c1d2dc973c9ced865ff36646"
        ],
        [
            "Local Notation \"p ^f\" := (map_poly (GRing.RMorphism.apply f) p) : ring_scope.",
            "VernacNotation",
            "5bb728161cca89a3f0e9e327a15786070c1d2eb3"
        ],
        [
            "Fact map_poly_is_rmorphism : rmorphism (map_poly f).",
            "VernacStartTheoremProof",
            "ae185ec4f3cac8f006159c1e2e9de0a67de7b159"
        ],
        [
            "split; first exact: map_poly_is_additive.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split=> [p q|]; apply/polyP=> i; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !(coef_map, coef1) /= rmorph_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite coef_map /= !coefM /= !rmorph_sum; apply: eq_bigr => j _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !coef_map rmorphM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical map_poly_rmorphism := RMorphism map_poly_is_rmorphism.",
            "VernacDefinition",
            "60bfe82dd6a89804e650c92c4ff20f0c7d65533e"
        ],
        [
            "Lemma map_polyZ c p : (c *: p)^f = f c *: p^f.",
            "VernacStartTheoremProof",
            "b12e65731b760d890371d4aade13e74db687a27d"
        ],
        [
            "by apply/polyP=> i; rewrite !(coef_map, coefZ) /= rmorphM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical map_poly_linear := AddLinear (map_polyZ : scalable_for (f \\; *:%R) (map_poly f)).",
            "VernacDefinition",
            "fdbf3f950b0f2e607174c67028d53141e830d22e"
        ],
        [
            "Canonical map_poly_lrmorphism := [lrmorphism of map_poly f].",
            "VernacDefinition",
            "c9471927e279fa5601e4657b248906370330e9a3"
        ],
        [
            "Lemma map_polyX : ('X)^f = 'X.",
            "VernacStartTheoremProof",
            "0cd139222cbc3a1534b7f12420bc0729a9010e06"
        ],
        [
            "by apply/polyP=> i; rewrite coef_map !coefX /= rmorph_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_polyXn n : ('X^n)^f = 'X^n.",
            "VernacStartTheoremProof",
            "55b605296c2218ff305319fadf91ff7bc6ab030d"
        ],
        [
            "by rewrite rmorphX /= map_polyX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monic_map p : p \\is monic -> p^f \\is monic.",
            "VernacStartTheoremProof",
            "e39f819a5a5b745b68af85814dbe5c0178232171"
        ],
        [
            "move/monicP=> mon_p; rewrite monicE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite lead_coef_map_eq mon_p /= rmorph1 ?oner_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_map p x : p^f.[f x] = f p.[x].",
            "VernacStartTheoremProof",
            "315deb577d8afa5fc3323f0d0c8ad36c372f221d"
        ],
        [
            "elim/poly_ind: p => [|p c IHp]; first by rewrite !(rmorph0, horner0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite hornerMXaddC !rmorphD !rmorphM /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite map_polyX map_polyC hornerMXaddC IHp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_comm_poly p x : comm_poly p x -> comm_poly p^f (f x).",
            "VernacStartTheoremProof",
            "e19bc1bd4cdd130928c1c2538d3605f0f2d1900f"
        ],
        [
            "by rewrite /comm_poly horner_map -!rmorphM // => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_comm_coef p x : comm_coef p x -> comm_coef p^f (f x).",
            "VernacStartTheoremProof",
            "cf60e172d65836c7e94a29e8556ce9d9df9f5cae"
        ],
        [
            "by move=> cpx i; rewrite coef_map -!rmorphM ?cpx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmorph_root p x : root p x -> root p^f (f x).",
            "VernacStartTheoremProof",
            "55e8c1446d4b9f3f817957535383e872503d3360"
        ],
        [
            "by move/eqP=> px0; rewrite rootE horner_map px0 rmorph0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmorph_unity_root n z : n.-unity_root z -> n.-unity_root (f z).",
            "VernacStartTheoremProof",
            "6e1f5456c2808cf2798954766643a6b7dfcb0952"
        ],
        [
            "move/rmorph_root; rewrite rootE rmorphB hornerD hornerN.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite /= map_polyXn rmorph1 hornerC hornerXn subr_eq0 unity_rootE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section HornerMorph.",
            "VernacBeginSection",
            "13ff7d1ef2ea2088d80fed5ff2b57688907e07e6"
        ],
        [
            "Variable u : rR.",
            "VernacAssumption",
            "f4aa0b2390cee1fff4faab1aec7954b80fca7281"
        ],
        [
            "Hypothesis cfu : commr_rmorph f u.",
            "VernacAssumption",
            "2b468df5c212f7277aa3ae5d00c7d20e008d8862"
        ],
        [
            "Lemma horner_morphC a : horner_morph cfu a%:P = f a.",
            "VernacStartTheoremProof",
            "fa68298d123e4fa482d90c57ae2978bc8ff371af"
        ],
        [
            "by rewrite /horner_morph map_polyC hornerC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_morphX : horner_morph cfu 'X = u.",
            "VernacStartTheoremProof",
            "53869124592c634992364796adc5581f1c673ce4"
        ],
        [
            "by rewrite /horner_morph map_polyX hornerX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact horner_is_lrmorphism : lrmorphism_for (f \\; *%R) (horner_morph cfu).",
            "VernacStartTheoremProof",
            "95d22e68c6fe301414fb41b14a17c2c7b6f171f1"
        ],
        [
            "rewrite /horner_morph; split=> [|c p]; last by rewrite linearZ hornerZ.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split=> [p q|]; first by rewrite /horner_morph rmorphB hornerD hornerN.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split=> [p q|]; last by rewrite /horner_morph rmorph1 hornerC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /horner_morph rmorphM /= hornerM_comm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: comm_coef_poly => i; rewrite coef_map cfu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical horner_additive := Additive horner_is_lrmorphism.",
            "VernacDefinition",
            "44f6bcfe01f4283d8f7f06b039e4cd63fb25ea32"
        ],
        [
            "Canonical horner_rmorphism := RMorphism horner_is_lrmorphism.",
            "VernacDefinition",
            "47eddaa3a95467a22844555cafdb399e830bfca3"
        ],
        [
            "Canonical horner_linear := AddLinear horner_is_lrmorphism.",
            "VernacDefinition",
            "ef99dbb0070f5045bd18aeb4bb24d6b678eb8f13"
        ],
        [
            "Canonical horner_lrmorphism := [lrmorphism of horner_morph cfu].",
            "VernacDefinition",
            "83f7997b05c463f7caa257c49d2edff9095b327b"
        ],
        [
            "End HornerMorph.",
            "VernacEndSegment",
            "b6f5b8ae751c9c775dbb0227dd6fe93f313141ea"
        ],
        [
            "Lemma deriv_map p : p^f^`() = (p^`())^f.",
            "VernacStartTheoremProof",
            "291574597c61f855b6591765b48c3ca78598c4d1"
        ],
        [
            "by apply/polyP => i; rewrite !(coef_map, coef_deriv) //= rmorphMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivn_map p n : p^f^`(n) = (p^`(n))^f.",
            "VernacStartTheoremProof",
            "e966526274b39b8742cead647ce4b283b5274331"
        ],
        [
            "by apply/polyP => i; rewrite !(coef_map, coef_derivn) //= rmorphMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nderivn_map p n : p^f^`N(n) = (p^`N(n))^f.",
            "VernacStartTheoremProof",
            "7d199c3f750518ccf9be351e6632fc2dfdc1f2e7"
        ],
        [
            "by apply/polyP => i; rewrite !(coef_map, coef_nderivn) //= rmorphMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MapPoly.",
            "VernacEndSegment",
            "26612a4ba1342a607dad0757bfd38461d4c8f171"
        ],
        [
            "Section MorphPoly.",
            "VernacBeginSection",
            "dec4b6440a61db3f1eebe02cbc9b8f95a7c9c8b2"
        ],
        [
            "Variable (aR rR : ringType) (pf : {rmorphism {poly aR} -> rR}).",
            "VernacAssumption",
            "1b05311229bdc2561e7225c0bfca2a8d8e96006b"
        ],
        [
            "Lemma poly_morphX_comm : commr_rmorph (pf \\o polyC) (pf 'X).",
            "VernacStartTheoremProof",
            "637a56a6dcd8d2e42a9a5195a10c850b0f1394b0"
        ],
        [
            "by move=> a; rewrite /GRing.comm /= -!rmorphM // commr_polyX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_initial : pf =1 horner_morph poly_morphX_comm.",
            "VernacStartTheoremProof",
            "54f40aba7b98c16d1a0e4583e43d11d8a4d25462"
        ],
        [
            "apply: poly_ind => [|p a IHp]; first by rewrite !rmorph0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !rmorphD !rmorphM /= -{}IHp horner_morphC ?horner_morphX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MorphPoly.",
            "VernacEndSegment",
            "c680ad1ed4ff81458d8824884af0d626bd189808"
        ],
        [
            "Notation \"p ^:P\" := (map_poly polyC p) : ring_scope.",
            "VernacNotation",
            "54846b1b2dbe6f37103f8d74dfb52f61339a6ae5"
        ],
        [
            "Section PolyCompose.",
            "VernacBeginSection",
            "7c29fdec6575c05aa9318ae3331adb7be4490670"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Types p q : {poly R}.",
            "VernacReserve",
            "e955cd8bb2af797f65cbef5dadd14cef37523981"
        ],
        [
            "Definition comp_poly q p := p^:P.[q].",
            "VernacDefinition",
            "9bf5999fe0e738729583659a9143d3e05302bd7a"
        ],
        [
            "Local Notation \"p \\Po q\" := (comp_poly q p) : ring_scope.",
            "VernacNotation",
            "32ae2614e7f217e1fbdd89cfc3ff3115ab70d975"
        ],
        [
            "Lemma size_map_polyC p : size p^:P = size p.",
            "VernacStartTheoremProof",
            "255c4aa405906ecd5ddfca0f20d76c345474cace"
        ],
        [
            "exact/(size_map_inj_poly polyC_inj).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_polyC_eq0 p : (p^:P == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "733a6f344a99e037453e2bcea869946781ae5c92"
        ],
        [
            "by rewrite -!size_poly_eq0 size_map_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_polyC p x : root p^:P x%:P = root p x.",
            "VernacStartTheoremProof",
            "b3d4fa7550a61d8bd23c008818d80937bc4993c4"
        ],
        [
            "by rewrite rootE horner_map polyC_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_polyE p q : p \\Po q = \\sum_(i < size p) p`_i *: q^+i.",
            "VernacStartTheoremProof",
            "4cffdcd2d67a0fe7d2d52922ab7dec4521a28327"
        ],
        [
            "by rewrite [p \\Po q]horner_poly; apply: eq_bigr => i _; rewrite mul_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coef_comp_poly p q n : (p \\Po q)`_n = \\sum_(i < size p) p`_i * (q ^+ i)`_n.",
            "VernacStartTheoremProof",
            "28db0a62515eb4414ad2ae971dcb032078e758fe"
        ],
        [
            "by rewrite comp_polyE coef_sum; apply: eq_bigr => i; rewrite coefZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyOver_comp S (ringS : semiringPred S) (kS : keyed_pred ringS) : {in polyOver kS &, forall p q, p \\Po q \\in polyOver kS}.",
            "VernacStartTheoremProof",
            "8c9981a1b311e64c90ec2cc3794f8229fdefda68"
        ],
        [
            "move=> p q /polyOverP Sp Sq; rewrite comp_polyE rpred_sum // => i _.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite polyOverZ ?rpredX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_polyCr p c : p \\Po c%:P = p.[c]%:P.",
            "VernacStartTheoremProof",
            "539461e4c07d38c2ec61396cdeeee2733da46fdc"
        ],
        [
            "exact: horner_map.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_poly0r p : p \\Po 0 = (p`_0)%:P.",
            "VernacStartTheoremProof",
            "9de9b04327c0d942e1afc2db64d0a9929faad795"
        ],
        [
            "by rewrite comp_polyCr horner_coef0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_polyC c p : c%:P \\Po p = c%:P.",
            "VernacStartTheoremProof",
            "7f1f817ad21cc54ca3d6b0ffa854f5c78cecb0a5"
        ],
        [
            "by rewrite /(_ \\Po p) map_polyC hornerC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact comp_poly_is_linear p : linear (comp_poly p).",
            "VernacStartTheoremProof",
            "176b41ed8def6811665f2e9fe1dc95902b5a2db4"
        ],
        [
            "move=> a q r.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /comp_poly rmorphD /= map_polyZ !hornerE_comm mul_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical comp_poly_additive p := Additive (comp_poly_is_linear p).",
            "VernacDefinition",
            "a3d1a546380214b88672cdb7441c27f99d36d5a6"
        ],
        [
            "Canonical comp_poly_linear p := Linear (comp_poly_is_linear p).",
            "VernacDefinition",
            "32770af3c0c57a13c91394ca4ecaa691a9cc75f0"
        ],
        [
            "Lemma comp_poly0 p : 0 \\Po p = 0.",
            "VernacStartTheoremProof",
            "74ee500060234f8181aa404caaba1a395bfccba6"
        ],
        [
            "exact: raddf0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_polyD p q r : (p + q) \\Po r = (p \\Po r) + (q \\Po r).",
            "VernacStartTheoremProof",
            "6ca0336b54ab357ef07e5693df9d608541095c5a"
        ],
        [
            "exact: raddfD.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_polyB p q r : (p - q) \\Po r = (p \\Po r) - (q \\Po r).",
            "VernacStartTheoremProof",
            "61d9c3d6fbd5a2e43a16a2590c8b4b47919f32f7"
        ],
        [
            "exact: raddfB.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_polyZ c p q : (c *: p) \\Po q = c *: (p \\Po q).",
            "VernacStartTheoremProof",
            "1621c040920a500a50910e6c2d254f42bd83ea08"
        ],
        [
            "exact: linearZZ.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_polyXr p : p \\Po 'X = p.",
            "VernacStartTheoremProof",
            "06bbc918bd33c58f1f2ec70ea331418bcb79a479"
        ],
        [
            "by rewrite -{2}/(idfun p) poly_initial.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_polyX p : 'X \\Po p = p.",
            "VernacStartTheoremProof",
            "4115fef07e60dcd6957d81659b140acb52389d18"
        ],
        [
            "by rewrite /(_ \\Po p) map_polyX hornerX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_poly_MXaddC c p q : (p * 'X + c%:P) \\Po q = (p \\Po q) * q + c%:P.",
            "VernacStartTheoremProof",
            "4565f3b2766ef76c7fd696a334f20827bc360041"
        ],
        [
            "by rewrite /(_ \\Po q) rmorphD rmorphM /= map_polyX map_polyC hornerMXaddC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_polyXaddC_K p z : (p \\Po ('X + z%:P)) \\Po ('X - z%:P) = p.",
            "VernacStartTheoremProof",
            "3c4fa9bc2c5bae4c3c02ab40f2d8c558396d8f3d"
        ],
        [
            "have addzK: ('X + z%:P) \\Po ('X - z%:P) = 'X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite raddfD /= comp_polyC comp_polyX subrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim/poly_ind: p => [|p c IHp]; first by rewrite !comp_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite comp_poly_MXaddC linearD /= comp_polyC {1}/comp_poly rmorphM /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite hornerM_comm /comm_poly -!/(_ \\Po _) ?IHp ?addzK ?commr_polyX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_comp_poly_leq p q : size (p \\Po q) <= ((size p).-1 * (size q).-1).+1.",
            "VernacStartTheoremProof",
            "d04d14b7a9504f829d3b5b586c970b8dcf953367"
        ],
        [
            "rewrite comp_polyE (leq_trans (size_sum _ _ _)) //; apply/bigmax_leqP => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (leq_trans (size_scale_leq _ _)) // (leq_trans (size_exp_leq _ _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ltnS mulnC leq_mul // -{2}(subnKC (valP i)) leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolyCompose.",
            "VernacEndSegment",
            "a8ecca714063c04bfe85f7673d7f6ce5317338bd"
        ],
        [
            "Notation \"p \\Po q\" := (comp_poly q p) : ring_scope.",
            "VernacNotation",
            "9382e3755b1e2d12fd7ea4de61c40679c381a5a6"
        ],
        [
            "Lemma map_comp_poly (aR rR : ringType) (f : {rmorphism aR -> rR}) p q : map_poly f (p \\Po q) = map_poly f p \\Po map_poly f q.",
            "VernacStartTheoremProof",
            "fd3e5bd51fd808dabb7ee620e74e2cbcbf217dae"
        ],
        [
            "elim/poly_ind: p => [|p a IHp]; first by rewrite !raddf0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite comp_poly_MXaddC !rmorphD !rmorphM /= !map_polyC map_polyX.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite comp_poly_MXaddC -IHp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PolynomialComRing.",
            "VernacBeginSection",
            "1e70dafba351832d91a0e241a003ae2a9a4cd97b"
        ],
        [
            "Variable R : comRingType.",
            "VernacAssumption",
            "7f1904bb8d32aac32a2864c2db512ee3df1e5ee6"
        ],
        [
            "Implicit Types p q : {poly R}.",
            "VernacReserve",
            "e955cd8bb2af797f65cbef5dadd14cef37523981"
        ],
        [
            "Fact poly_mul_comm p q : p * q = q * p.",
            "VernacStartTheoremProof",
            "fdebe19b2db6b972b00ee4f980d72f36fa4bf012"
        ],
        [
            "apply/polyP=> i; rewrite coefM coefMr.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_bigr => j _; rewrite mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical poly_comRingType := Eval hnf in ComRingType {poly R} poly_mul_comm.",
            "VernacDefinition",
            "45c57889a7a30e070b1e916b3197b54d6fa6da5f"
        ],
        [
            "Canonical polynomial_comRingType := Eval hnf in ComRingType (polynomial R) poly_mul_comm.",
            "VernacDefinition",
            "f42c5ea174698576180e7faf598750e8dfe894ae"
        ],
        [
            "Canonical poly_algType := Eval hnf in CommAlgType R {poly R}.",
            "VernacDefinition",
            "0a8f118d53f4e63f1b036abec05c39b7cb93ca1b"
        ],
        [
            "Canonical polynomial_algType := Eval hnf in [algType R of polynomial R for poly_algType].",
            "VernacDefinition",
            "aeef036ce10e4bbf97a37d58a51524c68e3cb462"
        ],
        [
            "Lemma hornerM p q x : (p * q).[x] = p.[x] * q.[x].",
            "VernacStartTheoremProof",
            "934d998143d0e941db540a800b91553e1575b511"
        ],
        [
            "by rewrite hornerM_comm //; apply: mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_exp p x n : (p ^+ n).[x] = p.[x] ^+ n.",
            "VernacStartTheoremProof",
            "f8266c9b5b1662777fa3ae8621b12088e774c695"
        ],
        [
            "by rewrite horner_exp_comm //; apply: mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_prod I r (P : pred I) (F : I -> {poly R}) x : (\\prod_(i <- r | P i) F i).[x] = \\prod_(i <- r | P i) (F i).[x].",
            "VernacStartTheoremProof",
            "ede0d148be6a93a6347bd0000e79640650c935ca"
        ],
        [
            "by elim/big_rec2: _ => [|i _ p _ <-]; rewrite (hornerM, hornerC).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition hornerE := (hornerD, hornerN, hornerX, hornerC, horner_cons, simp, hornerCM, hornerZ, hornerM).",
            "VernacDefinition",
            "c25e243b6484d5963f19d5351b301692a23d8275"
        ],
        [
            "Definition horner_eval (x : R) := horner^~ x.",
            "VernacDefinition",
            "575bd79a61456dd51d49b8d9299f6883836d9fb5"
        ],
        [
            "Lemma horner_evalE x p : horner_eval x p = p.[x].",
            "VernacStartTheoremProof",
            "4a7c92e6366661e06b0c1b0b7d0970a2817fe6be"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact horner_eval_is_lrmorphism x : lrmorphism_for *%R (horner_eval x).",
            "VernacStartTheoremProof",
            "690b4bd87eff39447d806f981a38047ec0118917"
        ],
        [
            "have cxid: commr_rmorph idfun x by apply: mulrC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have evalE : horner_eval x =1 horner_morph cxid.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> p; congr _.[x]; rewrite map_poly_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> [|c p]; last by rewrite !evalE /= -linearZ.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by do 2?split=> [p q|]; rewrite !evalE (rmorphB, rmorphM, rmorph1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical horner_eval_additive x := Additive (horner_eval_is_lrmorphism x).",
            "VernacDefinition",
            "5346e822215b8b4785e14f26ed3da21fde7925c7"
        ],
        [
            "Canonical horner_eval_rmorphism x := RMorphism (horner_eval_is_lrmorphism x).",
            "VernacDefinition",
            "5848651f20a33d36288057c5a43f4deb93bf0a27"
        ],
        [
            "Canonical horner_eval_linear x := AddLinear (horner_eval_is_lrmorphism x).",
            "VernacDefinition",
            "551fd56074adad2b7ebc4d676263f749e7013268"
        ],
        [
            "Canonical horner_eval_lrmorphism x := [lrmorphism of horner_eval x].",
            "VernacDefinition",
            "c1e5a71634b6beff672ba1ac86f05565f25fa2bd"
        ],
        [
            "Fact comp_poly_multiplicative q : multiplicative (comp_poly q).",
            "VernacStartTheoremProof",
            "935f48311d98fd6da9e48315a8566e8569aede5b"
        ],
        [
            "split=> [p1 p2|]; last by rewrite comp_polyC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /comp_poly rmorphM hornerM_comm //; apply: mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical comp_poly_rmorphism q := AddRMorphism (comp_poly_multiplicative q).",
            "VernacDefinition",
            "d00f8797924aceb790b2e5f4b58734b08a122bb4"
        ],
        [
            "Canonical comp_poly_lrmorphism q := [lrmorphism of comp_poly q].",
            "VernacDefinition",
            "27179645c95e32819948cfa18bc111ca00c5e781"
        ],
        [
            "Lemma comp_polyM p q r : (p * q) \\Po r = (p \\Po r) * (q \\Po r).",
            "VernacStartTheoremProof",
            "55ac5aad2d47c8894d00a6d1bdab9eb095c95874"
        ],
        [
            "exact: rmorphM.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_polyA p q r : p \\Po (q \\Po r) = (p \\Po q) \\Po r.",
            "VernacStartTheoremProof",
            "6b3561ae1efa18c84f3e29d5eb664f279223762a"
        ],
        [
            "elim/poly_ind: p => [|p c IHp]; first by rewrite !comp_polyC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !comp_polyD !comp_polyM !comp_polyX IHp !comp_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma horner_comp p q x : (p \\Po q).[x] = p.[q.[x]].",
            "VernacStartTheoremProof",
            "8ea286ff7b04f6039325dc56ce45a33f79978606"
        ],
        [
            "by apply: polyC_inj; rewrite -!comp_polyCr comp_polyA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_comp p q x : root (p \\Po q) x = root p (q.[x]).",
            "VernacStartTheoremProof",
            "2c01df7e1fc23e6efc8a0753cf3a2efd437c4975"
        ],
        [
            "by rewrite !rootE horner_comp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma deriv_comp p q : (p \\Po q) ^`() = (p ^`() \\Po q) * q^`().",
            "VernacStartTheoremProof",
            "0166ecc8f235294b40e14c59a0dcaa0b055c6722"
        ],
        [
            "elim/poly_ind: p => [|p c IHp]; first by rewrite !(deriv0, comp_poly0) mul0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite comp_poly_MXaddC derivD derivC derivM IHp derivMXaddC comp_polyD.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite comp_polyM comp_polyX addr0 addrC mulrAC -mulrDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma deriv_exp p n : (p ^+ n)^`() = p^`() * p ^+ n.-1 *+ n.",
            "VernacStartTheoremProof",
            "7bdf2516b886f5cefada6f033c624dc2c4412a98"
        ],
        [
            "elim: n => [|n IHn]; first by rewrite expr0 mulr0n derivC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS derivM {}IHn (mulrC p) mulrnAl -mulrA -exprSr mulrS; case n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition derivCE := (derivE, deriv_exp).",
            "VernacDefinition",
            "6f2bd57b9bef160a0ce61badfb6ac7b580670dfa"
        ],
        [
            "End PolynomialComRing.",
            "VernacEndSegment",
            "8fc33e4b49ec0cf2f3fdfb52980a443886417043"
        ],
        [
            "Canonical polynomial_countComRingType (R : countComRingType) := [countComRingType of polynomial R].",
            "VernacDefinition",
            "17b6f22235b5f3ab2376746efa56482bffd32d2f"
        ],
        [
            "Canonical poly_countComRingType (R : countComRingType) := [countComRingType of {poly R}].",
            "VernacDefinition",
            "b19e9d4573a7684c30d962d81de69d5e3a09f40c"
        ],
        [
            "Section PolynomialIdomain.",
            "VernacBeginSection",
            "76889274ac649ccf8fb87740371b46104acd731c"
        ],
        [
            "Variable R : idomainType.",
            "VernacAssumption",
            "cbab1d9d04a0bef334944e593ca6e504cfbe949c"
        ],
        [
            "Implicit Types (a b x y : R) (p q r m : {poly R}).",
            "VernacReserve",
            "a04b17ada67e0991e1432381dce069aaf87ee407"
        ],
        [
            "Lemma size_mul p q : p != 0 -> q != 0 -> size (p * q) = (size p + size q).-1.",
            "VernacStartTheoremProof",
            "5bda8652e49ba981ee747fd3e6ff2fba3bff9e60"
        ],
        [
            "by move=> nz_p nz_q; rewrite -size_proper_mul ?mulf_neq0 ?lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact poly_idomainAxiom p q : p * q = 0 -> (p == 0) || (q == 0).",
            "VernacStartTheoremProof",
            "53144899d34ccbd841aa55d30bc027462da4d808"
        ],
        [
            "move=> pq0; apply/norP=> [[p_nz q_nz]]; move/eqP: (size_mul p_nz q_nz).",
            "VernacExtend",
            "dffee33afc6977d6aca43b282561ec7ced1503c9"
        ],
        [
            "by rewrite eq_sym pq0 size_poly0 (polySpred p_nz) (polySpred q_nz) addnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition poly_unit : pred {poly R} := fun p => (size p == 1%N) && (p`_0 \\in GRing.unit).",
            "VernacDefinition",
            "52f1975164389518fea53cabd4ac2a719f02e58e"
        ],
        [
            "Definition poly_inv p := if p \\in poly_unit then (p`_0)^-1%:P else p.",
            "VernacDefinition",
            "fa5d88876d0a1f00b51b4845caec372dec28036d"
        ],
        [
            "Fact poly_mulVp : {in poly_unit, left_inverse 1 poly_inv *%R}.",
            "VernacStartTheoremProof",
            "1e8c3cf74af525f583e8312d071b489cb0bc7336"
        ],
        [
            "move=> p Up; rewrite /poly_inv Up.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case/andP: Up => /size_poly1P[c _ ->]; rewrite coefC -polyC_mul => /mulVr->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact poly_intro_unit p q : q * p = 1 -> p \\in poly_unit.",
            "VernacStartTheoremProof",
            "43dac8f9ad266fc5a466003fe00ed7e41e5ccbd3"
        ],
        [
            "move=> pq1; apply/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/unitrP; exists q`_0.",
            "VernacExtend",
            "7b7f15d62da91febfaeb70d9c6ba79302af40b3f"
        ],
        [
            "by rewrite 2!mulrC -!/(coefp 0 _) -rmorphM pq1 rmorph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: size (q * p) == 1%N by rewrite pq1 size_poly1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0; first by rewrite mulr0 size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [-> | nz_q] := eqVneq q 0; first by rewrite mul0r size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite size_mul // (polySpred nz_p) (polySpred nz_q) addnS addSn !eqSS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addn_eq0 => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact poly_inv_out : {in [predC poly_unit], poly_inv =1 id}.",
            "VernacStartTheoremProof",
            "b794fcefb3501f5e642122386ee08e6b37d6cdb8"
        ],
        [
            "by rewrite /poly_inv => p /negbTE/= ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition poly_comUnitMixin := ComUnitRingMixin poly_mulVp poly_intro_unit poly_inv_out.",
            "VernacDefinition",
            "6235a8ba94f0607dffbc6afb967404b22e9b52c8"
        ],
        [
            "Canonical poly_unitRingType := Eval hnf in UnitRingType {poly R} poly_comUnitMixin.",
            "VernacDefinition",
            "1dafbef4bf0bdc35789259b07ad3ab7883da85f1"
        ],
        [
            "Canonical polynomial_unitRingType := Eval hnf in [unitRingType of polynomial R for poly_unitRingType].",
            "VernacDefinition",
            "1831ea19474c911ff3765798b0afafba77b400e9"
        ],
        [
            "Canonical poly_unitAlgType := Eval hnf in [unitAlgType R of {poly R}].",
            "VernacDefinition",
            "c31512701ba7d2cb23689f7024fbb8159daa8cf5"
        ],
        [
            "Canonical polynomial_unitAlgType := Eval hnf in [unitAlgType R of polynomial R].",
            "VernacDefinition",
            "ef65ddabad5ab92180ba2c72a61657d207e12012"
        ],
        [
            "Canonical poly_comUnitRingType := Eval hnf in [comUnitRingType of {poly R}].",
            "VernacDefinition",
            "b081a0e124c362b2cff058c7bd2190c89f5eb88f"
        ],
        [
            "Canonical polynomial_comUnitRingType := Eval hnf in [comUnitRingType of polynomial R].",
            "VernacDefinition",
            "73bd24f0cc7825b521d5bed4dce7cfe8f4272a03"
        ],
        [
            "Canonical poly_idomainType := Eval hnf in IdomainType {poly R} poly_idomainAxiom.",
            "VernacDefinition",
            "95ba0521f2559751e2838b64967eb250404bbb94"
        ],
        [
            "Canonical polynomial_idomainType := Eval hnf in [idomainType of polynomial R for poly_idomainType].",
            "VernacDefinition",
            "eb656676fa1521f90785ab35cdc1003201794795"
        ],
        [
            "Lemma poly_unitE p : (p \\in GRing.unit) = (size p == 1%N) && (p`_0 \\in GRing.unit).",
            "VernacStartTheoremProof",
            "583fafeb011c16afeeee0820c20cb72f64c22815"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_invE p : p ^-1 = if p \\in GRing.unit then (p`_0)^-1%:P else p.",
            "VernacStartTheoremProof",
            "b907565294b4a48a80c7d85acb35169340bd111b"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma polyC_inv c : c%:P^-1 = (c^-1)%:P.",
            "VernacStartTheoremProof",
            "713bb14f31555aa855b50f67f3caa66fa6c6642f"
        ],
        [
            "have [/rmorphV-> // | nUc] := boolP (c \\in GRing.unit).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !invr_out // poly_unitE coefC (negbTE nUc) andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootM p q x : root (p * q) x = root p x || root q x.",
            "VernacStartTheoremProof",
            "8c913fa2140932e02456f682a5195f7ebec45ca1"
        ],
        [
            "by rewrite !rootE hornerM mulf_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rootZ x a p : a != 0 -> root (a *: p) x = root p x.",
            "VernacStartTheoremProof",
            "68c68b9d4a0257750e284618151394fbd0c86a2a"
        ],
        [
            "by move=> nz_a; rewrite -mul_polyC rootM rootC (negPf nz_a).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_scale a p : a != 0 -> size (a *: p) = size p.",
            "VernacStartTheoremProof",
            "ffc91688ca08b064c7345f8e61779be7a100f4b2"
        ],
        [
            "by move/lregP/lreg_size->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_Cmul a p : a != 0 -> size (a%:P * p) = size p.",
            "VernacStartTheoremProof",
            "db3e73eb3ea3b90d54fbad657855c23e1638ec19"
        ],
        [
            "by rewrite mul_polyC => /size_scale->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coefM p q : lead_coef (p * q) = lead_coef p * lead_coef q.",
            "VernacStartTheoremProof",
            "3309f1f493a893b22fbdaaf851f249b6c7be7d7e"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0; first by rewrite !(mul0r, lead_coef0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [-> | nz_q] := eqVneq q 0; first by rewrite !(mulr0, lead_coef0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite lead_coef_proper_mul // mulf_neq0 ?lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coefZ a p : lead_coef (a *: p) = a * lead_coef p.",
            "VernacStartTheoremProof",
            "552223e78f332391fa96c1af76a456248c227577"
        ],
        [
            "by rewrite -mul_polyC lead_coefM lead_coefC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scale_poly_eq0 a p : (a *: p == 0) = (a == 0) || (p == 0).",
            "VernacStartTheoremProof",
            "9b5f759465ebea277690ea24d7727d11ce968d6c"
        ],
        [
            "by rewrite -mul_polyC mulf_eq0 polyC_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_prod (I : finType) (P : pred I) (F : I -> {poly R}) : (forall i, P i -> F i != 0) -> size (\\prod_(i | P i) F i) = ((\\sum_(i | P i) size (F i)).+1 - #|P|)%N.",
            "VernacStartTheoremProof",
            "1904e9080a42fc18a430d07c16d17df231233d82"
        ],
        [
            "move=> nzF; transitivity (\\sum_(i | P i) (size (F i)).-1).+1; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: canRL (addKn _) _; rewrite addnS -sum1_card -big_split /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by congr _.+1; apply: eq_bigr => i /nzF/polySpred.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim/big_rec2: _ => [|i d p /nzF nzFi IHp]; first by rewrite size_poly1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite size_mul // -?size_poly_eq0 IHp // addnS polySpred.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_prod_seq (I : eqType) (s : seq I) (F : I -> {poly R}) : (forall i, i \\in s -> F i != 0) -> size (\\prod_(i <- s) F i) = ((\\sum_(i <- s) size (F i)).+1 - size s)%N.",
            "VernacStartTheoremProof",
            "ef3465e568666af3275d46bbf18ef188e687db8c"
        ],
        [
            "move=> nzF; rewrite big_tnth size_prod; last by move=> i; rewrite nzF ?mem_tnth.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cardT /= size_enum_ord [in RHS]big_tnth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_mul_eq1 p q : (size (p * q) == 1%N) = ((size p == 1%N) && (size q == 1%N)).",
            "VernacStartTheoremProof",
            "111ab286124700b828df87c79a5c123df37f241d"
        ],
        [
            "have [->|pNZ] := eqVneq p 0; first by rewrite mul0r size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [->|qNZ] := eqVneq q 0; first by rewrite mulr0 size_poly0 andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite size_mul //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: pNZ qNZ; rewrite -!size_poly_gt0; (do 2 case: size) => //= n [|[|]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_prod_seq_eq1 (I : eqType) (s : seq I) (P : pred I) (F : I -> {poly R}) : reflect (forall i, P i && (i \\in s) -> size (F i) = 1%N) (size (\\prod_(i <- s | P i) F i) == 1%N).",
            "VernacStartTheoremProof",
            "b3099bcf34a43889002d860512f75ae65e6e05d1"
        ],
        [
            "have -> : (size (\\prod_(i <- s | P i) F i) == 1%N) = (all [pred i | P i ==> (size (F i) == 1%N)] s).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: s => [|a s IHs /=]; first by rewrite big_nil size_poly1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite big_cons; case: (P a) => //=; rewrite size_mul_eq1 IHs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (iffP allP) => /= [/(_ _ _)/implyP /(_ _)/eqP|] sF_eq1 i.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move=> /andP[Pi si]; rewrite sF_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> si; apply/implyP => Pi; rewrite sF_eq1 ?Pi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_prod_eq1 (I : finType) (P : pred I) (F : I -> {poly R}) : reflect (forall i, P i -> size (F i) = 1%N) (size (\\prod_(i | P i) F i) == 1%N).",
            "VernacStartTheoremProof",
            "a3509b953599a50606052bd8df15edf5de107e19"
        ],
        [
            "apply: (iffP (size_prod_seq_eq1 _ _ _)) => Hi i.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move=> Pi; apply: Hi; rewrite Pi /= mem_index_enum.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite mem_index_enum andbT; apply: Hi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_exp p n : (size (p ^+ n)).-1 = ((size p).-1 * n)%N.",
            "VernacStartTheoremProof",
            "6edaba96ffc522cae73033b9a34829ff58cf11df"
        ],
        [
            "elim: n => [|n IHn]; first by rewrite size_poly1 muln0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0; first by rewrite exprS mul0r size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite exprS size_mul ?expf_neq0 // mulnS -{}IHn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite polySpred // [size (p ^+ n)]polySpred ?expf_neq0 ?addnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_exp p n : lead_coef (p ^+ n) = lead_coef p ^+ n.",
            "VernacStartTheoremProof",
            "3234a64c221d97e6f12dac0817e67979ce47f3bd"
        ],
        [
            "elim: n => [|n IHn]; first by rewrite !expr0 lead_coef1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !exprS lead_coefM IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_prod_XsubC rs x : root (\\prod_(a <- rs) ('X - a%:P)) x = (x \\in rs).",
            "VernacStartTheoremProof",
            "9969783f4220c1f257f7f67e693c9ae28dc85c3e"
        ],
        [
            "elim: rs => [|a rs IHrs]; first by rewrite rootE big_nil hornerC oner_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite big_cons rootM IHrs root_XsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma root_exp_XsubC n a x : root (('X - a%:P) ^+ n.+1) x = (x == a).",
            "VernacStartTheoremProof",
            "2ef825919d6127b52047a873d6a8b5eebb26eb7e"
        ],
        [
            "by rewrite rootE horner_exp expf_eq0 [_ == 0]root_XsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_comp_poly p q : (size (p \\Po q)).-1 = ((size p).-1 * (size q).-1)%N.",
            "VernacStartTheoremProof",
            "91b99a9e1cb0234cbfd456bd6f6241d42b73d189"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0; first by rewrite comp_poly0 size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [/size1_polyC-> | nc_q] := leqP (size q) 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite comp_polyCr !size_polyC -!sub1b -!subnS muln0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nz_q: q != 0 by rewrite -size_poly_eq0 -(subnKC nc_q).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulnC comp_polyE (polySpred nz_p) /= big_ord_recr /= addrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite size_addl size_scale ?lead_coef_eq0 ?size_exp //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [X in _ < X]polySpred ?expf_neq0 // ltnS size_exp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (leq_trans (size_sum _ _ _)) //; apply/bigmax_leqP => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (leq_trans (size_scale_leq _ _)) // polySpred ?expf_neq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite size_exp -(subnKC nc_q) ltn_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_comp p q : size q > 1 -> lead_coef (p \\Po q) = (lead_coef p) * lead_coef q ^+ (size p).-1.",
            "VernacStartTheoremProof",
            "e959cddd8e081e4e78e4aeda6949dec37eee90a1"
        ],
        [
            "move=> q_gt1; rewrite !lead_coefE coef_comp_poly size_comp_poly.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have [->|nz_p] := eqVneq p 0; first by rewrite size_poly0 big_ord0 coef0 mul0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite polySpred //= big_ord_recr /= big1 ?add0r => [|i _].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -!lead_coefE -lead_coef_exp !lead_coefE size_exp mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite [X in _ * X]nth_default ?mulr0 ?(leq_trans (size_exp_leq _ _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulnC ltn_mul2r -subn1 subn_gt0 q_gt1 /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_poly_eq0 p q : size q > 1 -> (p \\Po q == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "b199d78da0e3ffe44ef86456807a8586dac3c570"
        ],
        [
            "move=> sq_gt1; rewrite -!lead_coef_eq0 lead_coef_comp //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite mulf_eq0 expf_eq0 !lead_coef_eq0 -[q == 0]size_poly_leq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [_ <= 0]leqNgt (leq_ltn_trans _ sq_gt1) ?andbF ?orbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_comp_poly2 p q : size q = 2 -> size (p \\Po q) = size p.",
            "VernacStartTheoremProof",
            "30c8cab22ed003a8548112e4a214ed66973c092d"
        ],
        [
            "move=> sq2; have [->|pN0] := eqVneq p 0; first by rewrite comp_polyC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite polySpred ?size_comp_poly ?comp_poly_eq0 ?sq2 // muln1 polySpred.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_poly2_eq0 p q : size q = 2 -> (p \\Po q == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "254d7a67640ea0575e62f8d741c9f4b5f2f31faa"
        ],
        [
            "by rewrite -!size_poly_eq0 => /size_comp_poly2->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem max_poly_roots p rs : p != 0 -> all (root p) rs -> uniq rs -> size rs < size p.",
            "VernacStartTheoremProof",
            "03e778c287fc2939f00377bea87b1a7d24f9b737"
        ],
        [
            "elim: rs p => [p pn0 _ _ | r rs ihrs p pn0] /=; first by rewrite size_poly_gt0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP => rpr arrs /andP [rnrs urs]; case/factor_theorem: rpr => q epq.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "case: (altP (q =P 0)) => [q0 | ?]; first by move: pn0; rewrite epq q0 mul0r eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have -> : size p = (size q).+1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite epq size_Mmonic ?monicXsubC // size_XsubC addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff /eq_in_all h : {in rs, root q =1 root p} by apply: ihrs => //; rewrite h.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "move=> x xrs; rewrite epq rootM root_XsubC orbC; case: (altP (x =P r)) => // exr.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by move: rnrs; rewrite -exr xrs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma roots_geq_poly_eq0 p (rs : seq R) : all (root p) rs -> uniq rs -> (size rs >= size p)%N -> p = 0.",
            "VernacStartTheoremProof",
            "071bb6b532dbccbbcf83cf34dbcf506c34b124bb"
        ],
        [
            "by move=> ??; apply: contraTeq => ?; rewrite leqNgt max_poly_roots.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PolynomialIdomain.",
            "VernacEndSegment",
            "9bdd7f5e7ea047567b7dcf1716058cfa22f2b29e"
        ],
        [
            "Canonical polynomial_countUnitRingType (R : countIdomainType) := [countUnitRingType of polynomial R].",
            "VernacDefinition",
            "88786876690523030e9766484b96d4f393976e0f"
        ],
        [
            "Canonical poly_countUnitRingType (R : countIdomainType) := [countUnitRingType of {poly R}].",
            "VernacDefinition",
            "6c8c5fe3a51f55d9a8af6bf7a5fae6374e58e27e"
        ],
        [
            "Canonical polynomial_countComUnitRingType (R : countIdomainType) := [countComUnitRingType of polynomial R].",
            "VernacDefinition",
            "d56929d093a1fad72aec892e76e9c78774681bc3"
        ],
        [
            "Canonical poly_countComUnitRingType (R : countIdomainType) := [countComUnitRingType of {poly R}].",
            "VernacDefinition",
            "160d0d357cddacaa37cae1dd0af53f7bb8badccd"
        ],
        [
            "Canonical polynomial_countIdomainType (R : countIdomainType) := [countIdomainType of polynomial R].",
            "VernacDefinition",
            "e642ff88fedf1241d0b21791b8b1da92cf89596e"
        ],
        [
            "Canonical poly_countIdomainType (R : countIdomainType) := [countIdomainType of {poly R}].",
            "VernacDefinition",
            "90428942db944edc61ec35004c42aaa1e7b1acae"
        ],
        [
            "Section MapFieldPoly.",
            "VernacBeginSection",
            "d191aa8da7b724d7090346c7367fb8dc34150a07"
        ],
        [
            "Variables (F : fieldType) (R : ringType) (f : {rmorphism F -> R}).",
            "VernacAssumption",
            "d7adc5b20783208da9ad92d3fc6fe6838d189754"
        ],
        [
            "Local Notation \"p ^f\" := (map_poly f p) : ring_scope.",
            "VernacNotation",
            "c14b79639352dde330b182be50ae72e13930a45f"
        ],
        [
            "Lemma size_map_poly p : size p^f = size p.",
            "VernacStartTheoremProof",
            "19c95e4a365a67e7b302bbda5228be7cffd26efc"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0; first by rewrite rmorph0 !size_poly0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite size_poly_eq // fmorph_eq0 // lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lead_coef_map p : lead_coef p^f = f (lead_coef p).",
            "VernacStartTheoremProof",
            "a207d5222b3d378d464f8a0acd348696bb4987c1"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0; first by rewrite !(rmorph0, lead_coef0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite lead_coef_map_eq // fmorph_eq0 // lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_poly_eq0 p : (p^f == 0) = (p == 0).",
            "VernacStartTheoremProof",
            "b1abfa1ff22785b1b2ededb741235c347b345dc6"
        ],
        [
            "by rewrite -!size_poly_eq0 size_map_poly.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_poly_inj : injective (map_poly f).",
            "VernacStartTheoremProof",
            "39d50a4c20b48388836d57633a2e0ff2104e18c8"
        ],
        [
            "move=> p q eqfpq; apply/eqP; rewrite -subr_eq0 -map_poly_eq0.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite rmorphB /= eqfpq subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_monic p : (p^f \\is monic) = (p \\is monic).",
            "VernacStartTheoremProof",
            "b60a96c660a78a8ff08921ffd7d4fbd6ec95f461"
        ],
        [
            "by rewrite monicE lead_coef_map fmorph_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_poly_com p x : comm_poly p^f (f x).",
            "VernacStartTheoremProof",
            "8f92ab3727e993203301b44b1e27de7817ae010f"
        ],
        [
            "exact: map_comm_poly (mulrC x _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmorph_root p x : root p^f (f x) = root p x.",
            "VernacStartTheoremProof",
            "8054a37683f36088be6d6c8d24416875ffc516cc"
        ],
        [
            "by rewrite rootE horner_map // fmorph_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmorph_unity_root n z : n.-unity_root (f z) = n.-unity_root z.",
            "VernacStartTheoremProof",
            "7354972b1db74c43f228ad9f2685fa1203618148"
        ],
        [
            "by rewrite !unity_rootE -(inj_eq (fmorph_inj f)) rmorphX ?rmorph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmorph_primitive_root n z : n.-primitive_root (f z) = n.-primitive_root z.",
            "VernacStartTheoremProof",
            "b7a601bb658790d56a2571fd0ea7adffd5a3a9af"
        ],
        [
            "by congr (_ && _); apply: eq_forallb => i; rewrite fmorph_unity_root.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MapFieldPoly.",
            "VernacEndSegment",
            "868a2032dc08c3fbb4eb34fe4e29e560e946ec32"
        ],
        [
            "Arguments map_poly_inj {F R} f [p1 p2] : rename.",
            "VernacArguments",
            "7b4997a940facc51829129e31f72a0b64cd7dac8"
        ],
        [
            "Section MaxRoots.",
            "VernacBeginSection",
            "00188d112a5d6304c0d0b93595ba0e40e7979e83"
        ],
        [
            "Variable R : unitRingType.",
            "VernacAssumption",
            "7091a2a91a14247c9bb358aacf762b043d2cb667"
        ],
        [
            "Implicit Types (x y : R) (rs : seq R) (p : {poly R}).",
            "VernacReserve",
            "396cfc372989971705b7bf818f3173142be00f07"
        ],
        [
            "Definition diff_roots (x y : R) := (x * y == y * x) && (y - x \\in GRing.unit).",
            "VernacDefinition",
            "26bb1a56b9dd71d0b44a1a129d50ae1d6c05c10d"
        ],
        [
            "Fixpoint uniq_roots rs := if rs is x :: rs' then all (diff_roots x) rs' && uniq_roots rs' else true.",
            "VernacFixpoint",
            "309fba9afc0ffd528d37b215704263d934af5e3b"
        ],
        [
            "Lemma uniq_roots_prod_XsubC p rs : all (root p) rs -> uniq_roots rs -> exists q, p = q * \\prod_(z <- rs) ('X - z%:P).",
            "VernacStartTheoremProof",
            "54930cd917d87d1261d62f3ff50de06d2bc9d711"
        ],
        [
            "elim: rs => [|z rs IHrs] /=; first by rewrite big_nil; exists p; rewrite mulr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=> rpz rprs /andP[drs urs]; case: IHrs => {urs rprs}// q def_p.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have [|q' def_q] := factor_theorem q z _; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists q'; rewrite big_cons mulrA -def_q.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {p}def_p in rpz.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim/last_ind: rs drs rpz => [|rs t IHrs] /=; first by rewrite big_nil mulr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite all_rcons => /andP[/andP[/eqP czt Uzt] /IHrs {IHrs}IHrs].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -cats1 big_cat big_seq1 /= mulrA rootE hornerM_comm; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /comm_poly hornerXsubC mulrBl mulrBr czt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite hornerXsubC -opprB mulrN oppr_eq0 -(mul0r (t - z)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (inj_eq (mulIr Uzt)) => /IHrs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem max_ring_poly_roots p rs : p != 0 -> all (root p) rs -> uniq_roots rs -> size rs < size p.",
            "VernacStartTheoremProof",
            "754dd5d837a93647c6019153b7612577c52700df"
        ],
        [
            "move=> nz_p _ /(@uniq_roots_prod_XsubC p)[// | q def_p]; rewrite def_p in nz_p *.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have nz_q: q != 0 by apply: contraNneq nz_p => ->; rewrite mul0r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite size_Mmonic ?monic_prod_XsubC // (polySpred nz_q) addSn /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite size_prod_XsubC leq_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_roots_prod_XsubC p rs : size p = (size rs).+1 -> all (root p) rs -> uniq_roots rs -> p = lead_coef p *: \\prod_(z <- rs) ('X - z%:P).",
            "VernacStartTheoremProof",
            "a07e0b8d30bf021fb22d0b1287781d5e7ee5f0b7"
        ],
        [
            "move=> size_p /uniq_roots_prod_XsubC def_p Urs.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case/def_p: Urs => q -> {p def_p} in size_p *.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [q0 | nz_q] := eqVneq q 0; first by rewrite q0 mul0r size_poly0 in size_p.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have{q nz_q size_p} /size_poly1P[c _ ->]: size q == 1%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(eqn_add2r (size rs)) add1n -size_p.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite size_Mmonic ?monic_prod_XsubC // size_prod_XsubC addnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite lead_coef_Mmonic ?monic_prod_XsubC // lead_coefC mul_polyC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MaxRoots.",
            "VernacEndSegment",
            "ad6c8f139e79ab3af7e9b134e827a1834c90b1a2"
        ],
        [
            "Section FieldRoots.",
            "VernacBeginSection",
            "62d3f92d1c759af999826319ce1a1e006d0ac469"
        ],
        [
            "Variable F : fieldType.",
            "VernacAssumption",
            "dfbeb3104cff90ac5c843c17124389867a4c6a4a"
        ],
        [
            "Implicit Types (p : {poly F}) (rs : seq F).",
            "VernacReserve",
            "32fd7497c42eec54d6ab3041d6e6f8d8d41ff050"
        ],
        [
            "Lemma poly2_root p : size p = 2 -> {r | root p r}.",
            "VernacStartTheoremProof",
            "6574be927b4bb711340233eb2454715d74c1d98b"
        ],
        [
            "case: p => [[|p0 [|p1 []]] //= nz_p1]; exists (- p0 / p1).",
            "VernacExtend",
            "94e75391bedd5a5237100f0029dabc4fdb54c671"
        ],
        [
            "by rewrite /root addr_eq0 /= mul0r add0r mulrC divfK ?opprK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniq_rootsE rs : uniq_roots rs = uniq rs.",
            "VernacStartTheoremProof",
            "e53e5df751e481a1b73b23e2fcaddf85c0f2d564"
        ],
        [
            "elim: rs => //= r rs ->; congr (_ && _); rewrite -has_pred1 -all_predC.",
            "VernacExtend",
            "5a65f2f452dc5f660f0d7e19f058a7f083f0f509"
        ],
        [
            "by apply: eq_all => t; rewrite /diff_roots mulrC eqxx unitfE subr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section UnityRoots.",
            "VernacBeginSection",
            "4496b7000250c52e9642aefa99747789f1456bdb"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Lemma max_unity_roots rs : n > 0 -> all n.-unity_root rs -> uniq rs -> size rs <= n.",
            "VernacStartTheoremProof",
            "13fd17b79278b11a9e656b9dcfe7ff70eac521ab"
        ],
        [
            "move=> n_gt0 rs_n_1 Urs; have szPn := size_Xn_sub_1 F n_gt0.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite -ltnS -szPn max_poly_roots -?size_poly_eq0 ?szPn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_unity_roots rs : n > 0 -> all n.-unity_root rs -> uniq rs -> size rs = n -> n.-unity_root =i rs.",
            "VernacStartTheoremProof",
            "cbe17757f8b84749a10a88a141daf039d510aab7"
        ],
        [
            "move=> n_gt0 rs_n_1 Urs sz_rs_n x; rewrite -topredE /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply/idP/idP=> xn1; last exact: (allP rs_n_1).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: contraFT (ltnn n) => not_rs_x.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -{1}sz_rs_n (@max_unity_roots (x :: rs)) //= ?xn1 ?not_rs_x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable z : F.",
            "VernacAssumption",
            "45f0da0e8904001da2a58d47b22d5e7b4bde7353"
        ],
        [
            "Hypothesis prim_z : n.-primitive_root z.",
            "VernacAssumption",
            "2ebc34201f460161ee867f5f26d9cfe23127b03c"
        ],
        [
            "Let zn := [seq z ^+ i | i <- index_iota 0 n].",
            "VernacDefinition",
            "a98182f576768bb295f7c0db27f91b309684d696"
        ],
        [
            "Lemma factor_Xn_sub_1 : \\prod_(0 <= i < n) ('X - (z ^+ i)%:P) = 'X^n - 1.",
            "VernacStartTheoremProof",
            "d95416b3cab7280094e80934bd96baafb763e788"
        ],
        [
            "transitivity (\\prod_(w <- zn) ('X - w%:P)); first by rewrite big_map.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have n_gt0: n > 0 := prim_order_gt0 prim_z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (@all_roots_prod_XsubC _ ('X^n - 1) zn); first 1 last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite size_Xn_sub_1 // size_map size_iota subn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/allP=> _ /mapP[i _ ->] /=; rewrite rootE !hornerE hornerXn.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite exprAC (prim_expr_order prim_z) expr1n subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite uniq_rootsE map_inj_in_uniq ?iota_uniq // => i j.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !mem_index_iota => ltin ltjn /eqP.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite (eq_prim_root_expr prim_z) !modn_small // => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite (monicP (monic_Xn_sub_1 F n_gt0)) scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prim_rootP x : x ^+ n = 1 -> {i : 'I_n | x = z ^+ i}.",
            "VernacStartTheoremProof",
            "7cdbe7791cbdc83b0921715bb2f50c9d4c5d49ab"
        ],
        [
            "move=> xn1; pose logx := [pred i : 'I_n | x == z ^+ i].",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "case: (pickP logx) => [i /eqP-> | no_i]; first by exists i.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: notF; suffices{no_i}: x \\in zn.",
            "VernacExtend",
            "d229520328a78430d3503dbb92bb8fe621f82ca4"
        ],
        [
            "case/mapP=> i; rewrite mem_index_iota => lt_i_n def_x.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite -(no_i (Ordinal lt_i_n)) /= -def_x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -root_prod_XsubC big_map factor_Xn_sub_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [root _ x]unity_rootE xn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UnityRoots.",
            "VernacEndSegment",
            "044c222cd54494a7f82a46d78842ee2571fc491a"
        ],
        [
            "End FieldRoots.",
            "VernacEndSegment",
            "bdff8d33ea3259057ba2694a1a3476e82b1319bb"
        ],
        [
            "Section MapPolyRoots.",
            "VernacBeginSection",
            "1c959f2e727f64828c1f8afda7a86cf47b898f2a"
        ],
        [
            "Variables (F : fieldType) (R : unitRingType) (f : {rmorphism F -> R}).",
            "VernacAssumption",
            "fdd2624f982109fc1a6847034c61ac9c7c2ca6ad"
        ],
        [
            "Lemma map_diff_roots x y : diff_roots (f x) (f y) = (x != y).",
            "VernacStartTheoremProof",
            "466779a6473af7a6fae99e840399ed247efc0f95"
        ],
        [
            "rewrite /diff_roots -rmorphB // fmorph_unit // subr_eq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite rmorph_comm // eqxx eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_uniq_roots s : uniq_roots (map f s) = uniq s.",
            "VernacStartTheoremProof",
            "ee3aa79de02525d911f2639ddc028ea459cd9018"
        ],
        [
            "elim: s => //= x s ->; congr (_ && _); elim: s => //= y s ->.",
            "VernacExtend",
            "ba16a1920ff36b5e8a13c07eade50afb2db7eef5"
        ],
        [
            "by rewrite map_diff_roots -negb_or.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MapPolyRoots.",
            "VernacEndSegment",
            "63183eef299fcdcf53e3728767ae3c821e31f251"
        ],
        [
            "Section AutPolyRoot.",
            "VernacBeginSection",
            "85781c784d8fee5673a7e18d87c7ee560a1e2347"
        ],
        [
            "Variable F : fieldType.",
            "VernacAssumption",
            "dfbeb3104cff90ac5c843c17124389867a4c6a4a"
        ],
        [
            "Implicit Types u v : {rmorphism F -> F}.",
            "VernacReserve",
            "33c80c25a6b9a0b1086f3030b9d2157c8d94eaf5"
        ],
        [
            "Lemma aut_prim_rootP u z n : n.-primitive_root z -> {k | coprime k n & u z = z ^+ k}.",
            "VernacStartTheoremProof",
            "535337b8d29426c7f2014263c3fa4d4c0c63a3f9"
        ],
        [
            "move=> prim_z; have:= prim_z; rewrite -(fmorph_primitive_root u) => prim_uz.",
            "VernacExtend",
            "607ef7ae8426c7af043bed1740cc4d7c951b3085"
        ],
        [
            "have [[k _] /= def_uz] := prim_rootP prim_z (prim_expr_order prim_uz).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists k; rewrite // -(prim_root_exp_coprime _ prim_z) -def_uz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aut_unity_rootP u z n : n > 0 -> z ^+ n = 1 -> {k | u z = z ^+ k}.",
            "VernacStartTheoremProof",
            "5a85e71b6ca318eeab32e3741ddb597042c37368"
        ],
        [
            "by move=> _ /prim_order_exists[// | m /(aut_prim_rootP u)[k]]; exists k.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aut_unity_rootC u v z n : n > 0 -> z ^+ n = 1 -> u (v z) = v (u z).",
            "VernacStartTheoremProof",
            "4374f7b80dc94126e7dbfdd8ac78e79b8c07ffc9"
        ],
        [
            "move=> n_gt0 /(aut_unity_rootP _ n_gt0) def_z.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [[i def_uz] [j def_vz]] := (def_z u, def_z v).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !(def_uz, def_vz, rmorphX) exprAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AutPolyRoot.",
            "VernacEndSegment",
            "5d5c89b0e080187b9c057d1c5a2c511d6b429325"
        ],
        [
            "Module UnityRootTheory.",
            "VernacDefineModule",
            "81816681a18b73c4c0a88e334432c926aa2303db"
        ],
        [
            "Notation \"n .-unity_root\" := (root_of_unity n) : unity_root_scope.",
            "VernacNotation",
            "ed8c7f94d3c72c2325dc283a5e779a210a0498c3"
        ],
        [
            "Notation \"n .-primitive_root\" := (primitive_root_of_unity n) : unity_root_scope.",
            "VernacNotation",
            "4376ebf154330e54ee572cde3b54d85ba1220df8"
        ],
        [
            "Open Scope unity_root_scope.",
            "VernacOpenCloseScope",
            "6e30fcdd3a3ae4e564a88abb98a1d958dd1e5f8a"
        ],
        [
            "Definition unity_rootE := unity_rootE.",
            "VernacDefinition",
            "9b712e2ee115f1ccf55ba9b61232a2385c8cd494"
        ],
        [
            "Definition unity_rootP := @unity_rootP.",
            "VernacDefinition",
            "f8a5d9e5f4461a0022654b03067560c18edcf9f9"
        ],
        [
            "Arguments unity_rootP {R n z}.",
            "VernacArguments",
            "a5a22b7d7e42b8cd4624d34c676432ef39c0ac27"
        ],
        [
            "Definition prim_order_exists := prim_order_exists.",
            "VernacDefinition",
            "2db17afc7861d03d564238b96e9e9774b2556daf"
        ],
        [
            "Notation prim_order_gt0 := prim_order_gt0.",
            "VernacSyntacticDefinition",
            "ee3687e9643e35a627e862f7f65ec50e3c6720ba"
        ],
        [
            "Notation prim_expr_order := prim_expr_order.",
            "VernacSyntacticDefinition",
            "9e7ef6cfc9b7da45d83a2289798d0e0907e5e32a"
        ],
        [
            "Definition prim_expr_mod := prim_expr_mod.",
            "VernacDefinition",
            "6f6d31c3ff31afb80a52e6f32f065676a0821fb1"
        ],
        [
            "Definition prim_order_dvd := prim_order_dvd.",
            "VernacDefinition",
            "767b0eda2ed57bbf76f0dc663948d2bb9379e45d"
        ],
        [
            "Definition eq_prim_root_expr := eq_prim_root_expr.",
            "VernacDefinition",
            "7562023ba51c5cfd26632d25eca677d54202296d"
        ],
        [
            "Definition rmorph_unity_root := rmorph_unity_root.",
            "VernacDefinition",
            "0c007534f0c11dde17a1afe75a48c198c12cb25e"
        ],
        [
            "Definition fmorph_unity_root := fmorph_unity_root.",
            "VernacDefinition",
            "74b9ba47f0e4eb78ecc2f98c04481fa4ca48efe5"
        ],
        [
            "Definition fmorph_primitive_root := fmorph_primitive_root.",
            "VernacDefinition",
            "9b9d5940c064a5d919a66f4c6f5cfe74f11500d8"
        ],
        [
            "Definition max_unity_roots := max_unity_roots.",
            "VernacDefinition",
            "0f5ef6586a27e8d73e6c82958dcd51f2e34a2566"
        ],
        [
            "Definition mem_unity_roots := mem_unity_roots.",
            "VernacDefinition",
            "ada0268ffa13192e840d98872fedfdc47f163ef7"
        ],
        [
            "Definition prim_rootP := prim_rootP.",
            "VernacDefinition",
            "8bfe2bc264e69545291c7d1a4c1ee5967e5ac0ee"
        ],
        [
            "End UnityRootTheory.",
            "VernacEndSegment",
            "fef89cad75b9f8c72885bc7353dc2bec3ae1ee52"
        ],
        [
            "Section DecField.",
            "VernacBeginSection",
            "63a9536089b7b1925b7ea266b3f3490bb7fc45cf"
        ],
        [
            "Variable F : decFieldType.",
            "VernacAssumption",
            "f6255a5bd3c15c78ce93297f324bf69e6be70322"
        ],
        [
            "Lemma dec_factor_theorem (p : {poly F}) : {s : seq F & {q : {poly F} | p = q * \\prod_(x <- s) ('X - x%:P) /\\ (q != 0 -> forall x, ~~ root q x)}}.",
            "VernacStartTheoremProof",
            "9cd837ad71ef20fd8d0ccaa50f5dca2a0f9be5fc"
        ],
        [
            "pose polyT (p : seq F) := (foldr (fun c f => f * 'X_0 + c%:T) (0%R)%:T p)%T.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have eval_polyT (q : {poly F}) x : GRing.eval [:: x] (polyT q) = q.[x].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /horner; elim: (val q) => //= ? ? ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: size {-2}p (leqnn (size p)) => {p} [p|n IHn p].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by move=> /size_poly_leq0P->; exists [::], 0; rewrite mul0r eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /decPcases /= := @satP F [::] ('exists 'X_0, polyT p == 0%T).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: ifP => [_ /sig_eqW[x]|_ noroot]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists [::], p; rewrite big_nil mulr1; split => // p_neq0 x.",
            "VernacExtend",
            "5a40b1a21a23ab0b6f0527c290fc1d06201e34a2"
        ],
        [
            "by apply/negP=> /rootP rpx; apply noroot; exists x; rewrite eval_polyT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eval_polyT => /rootP /factor_theorem /sig_eqW [q ->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [->|q_neq0] := eqVneq q 0; first by exists [::], 0; rewrite !mul0r eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite size_mul ?polyXsubC_eq0 // ?size_XsubC addn2 /= ltnS => sq_le_n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [] // := IHn q => s [r [-> nr]]; exists (s ++ [::x]), r.",
            "VernacExtend",
            "507ab80172f400285407e2ed9bfa684ed16df254"
        ],
        [
            "by rewrite big_cat /= big_seq1 mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DecField.",
            "VernacEndSegment",
            "0897b5626d92a5f7603871b50b0565bbb76b3aa4"
        ],
        [
            "Module PreClosedField.",
            "VernacDefineModule",
            "0d4085815e039b0ecda156281b56748373d6d504"
        ],
        [
            "Section UseAxiom.",
            "VernacBeginSection",
            "e33f6d1be5506553b9f766af618c93e5cb859ea8"
        ],
        [
            "Variable F : fieldType.",
            "VernacAssumption",
            "dfbeb3104cff90ac5c843c17124389867a4c6a4a"
        ],
        [
            "Hypothesis closedF : GRing.ClosedField.axiom F.",
            "VernacAssumption",
            "17216c7c65881b6090d40a3548558b8466854236"
        ],
        [
            "Implicit Type p : {poly F}.",
            "VernacReserve",
            "9ba3eba3ff853bf747a482b2bee2cdb3c1adbc2e"
        ],
        [
            "Lemma closed_rootP p : reflect (exists x, root p x) (size p != 1%N).",
            "VernacStartTheoremProof",
            "4371142b96cb1032648047cc95cea8bda505f966"
        ],
        [
            "have [-> | nz_p] := eqVneq p 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite size_poly0; left; exists 0; rewrite root0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite neq_ltn {1}polySpred //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: (iffP idP) => [p_gt1 | [a]]; last exact: root_size_gt1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose n := (size p).-1; have n_gt0: n > 0 by rewrite -ltnS -polySpred.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have [a Dan] := closedF (fun i => - p`_i / lead_coef p) n_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists a; apply/rootP; rewrite horner_coef polySpred // big_ord_recr /= -/n.",
            "VernacExtend",
            "261298f2d9addf233cbef8bfd1953fed7a848be9"
        ],
        [
            "rewrite {}Dan mulr_sumr -big_split big1 //= => i _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -!mulrA mulrCA mulNr mulVKf ?subrr ?lead_coef_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closed_nonrootP p : reflect (exists x, ~~ root p x) (p != 0).",
            "VernacStartTheoremProof",
            "40d89474a03092ef8540540f99ac726d3e56dd4d"
        ],
        [
            "apply: (iffP idP) => [nz_p | [x]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: contraNneq => ->; apply: root0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [[x /rootP p1x0]|] := altP (closed_rootP (p - 1)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists x; rewrite -[p](subrK 1) /root hornerD p1x0 add0r hornerC oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite negbK => /size_poly1P[c _ /(canRL (subrK 1)) Dp].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by exists 0; rewrite Dp -raddfD polyC_eq0 rootC in nz_p *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UseAxiom.",
            "VernacEndSegment",
            "1193f2c76320e81c7fc49a5aa0672200a873472c"
        ],
        [
            "End PreClosedField.",
            "VernacEndSegment",
            "88c299b9dbe6ce20b4509b1bc401b2803a42e4f7"
        ],
        [
            "Section ClosedField.",
            "VernacBeginSection",
            "7f2d9fbd3c0c8183e483d1329813bf2fc755f38b"
        ],
        [
            "Variable F : closedFieldType.",
            "VernacAssumption",
            "fd638bbd122fe7fca85649eafc49337e70b155c4"
        ],
        [
            "Implicit Type p : {poly F}.",
            "VernacReserve",
            "9ba3eba3ff853bf747a482b2bee2cdb3c1adbc2e"
        ],
        [
            "Let closedF := @solve_monicpoly F.",
            "VernacDefinition",
            "cc1003199fa133cbd27afba698329d97e6a92b71"
        ],
        [
            "Lemma closed_rootP p : reflect (exists x, root p x) (size p != 1%N).",
            "VernacStartTheoremProof",
            "4371142b96cb1032648047cc95cea8bda505f966"
        ],
        [
            "exact: PreClosedField.closed_rootP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closed_nonrootP p : reflect (exists x, ~~ root p x) (p != 0).",
            "VernacStartTheoremProof",
            "40d89474a03092ef8540540f99ac726d3e56dd4d"
        ],
        [
            "exact: PreClosedField.closed_nonrootP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closed_field_poly_normal p : {r : seq F | p = lead_coef p *: \\prod_(z <- r) ('X - z%:P)}.",
            "VernacStartTheoremProof",
            "b1510a96a55c85caa9fd9e4d6a19d8b1b7070a45"
        ],
        [
            "apply: sig_eqW; have [r [q [->]]] /= := dec_factor_theorem p.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "have [->|] := altP eqP; first by exists [::]; rewrite mul0r lead_coef0 scale0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [[x rqx ? /(_ isT x) /negP /(_ rqx)] //|] := altP (closed_rootP q).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite negbK => /size_poly1P [c c_neq0-> _ _]; exists r.",
            "VernacExtend",
            "c12ed0f0fc4929aecf58a3bfd58ebd00ef54534e"
        ],
        [
            "rewrite mul_polyC lead_coefZ (monicP _) ?mulr1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite monic_prod => // i; rewrite monicXsubC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ClosedField.",
            "VernacEndSegment",
            "cc7b395c5d4a2febf205a006b1ebc3411123c7c4"
        ]
    ],
    "proofs": [
        {
            "name": "poly_inj",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "exact: val_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coefE",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseqC",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "by rewrite val_insubd /=; case: (c == 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_polyC",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "by rewrite polyseqC size_nseq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefC",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "by rewrite polyseqC; case: i => [|[]]; case: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyCK",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "by move=> c; rewrite [coefp 0 _]coefC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_inj",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "by move=> c1 c2 eqc12; have:= coefC c2 0; rewrite -eqc12 coefC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coefC",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "by rewrite /lead_coef polyseqC; case: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size1_polyC",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "move=> le_p_1; apply/polyP=> i; rewrite coefC.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case: i => // i; rewrite nth_default // (leq_trans le_p_1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseq_cons",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "by case: p => [[]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_cons_poly",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "by case: p => [[|c' s] _] //=; rewrite size_polyC; case: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_cons",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "by case: p i => [[|c' s] _] [] //=; rewrite polyseqC; case: eqP => //= _ [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PolyK",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "case: s => {c}/= [_ |c s]; first by rewrite polyseqC eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "elim: s c => /= [|a s IHs] c nz_c; rewrite polyseq_cons ?{}IHs //.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "by rewrite !polyseqC !eqxx nz_c.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseqK",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "by apply: poly_inj; apply: PolyK (valP p).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_Poly",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "elim: s => [|c s IHs] /=; first by rewrite polyseqC eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite polyseq_cons; case: ifP => // _; rewrite size_polyC; case: (~~ _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_Poly",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "by elim: s i => [|c s IHs] /= [|i]; rewrite !(coefC, eqxx, coef_cons) /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_key",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseq_poly",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "rewrite unlock; case: n => [|n] nzEn; first by rewrite polyseqC eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (@PolyK 0) // -nth_last nth_mkseq size_mkseq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock (leq_trans (size_Poly _)) ?size_mkseq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly_eq",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "by move/polyseq_poly->; apply: size_mkseq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_poly",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "rewrite unlock coef_Poly.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [lt_kn | le_nk] := ltnP k n; first by rewrite nth_mkseq.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite nth_default // size_mkseq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_poly",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "by case: n => // n _ nzE; rewrite /lead_coef size_poly_eq // coef_poly leqnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefK",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "by apply/polyP=> i; rewrite coef_poly; case: ltnP => // /(nth_default 0)->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_poly_key",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_poly_key",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_add_poly",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "rewrite unlock coef_poly; case: leqP => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite geq_max => /andP[le_p_i le_q_i]; rewrite !nth_default ?add0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_opp_poly",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "rewrite unlock coef_poly /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: leqP => // le_p_i; rewrite nth_default ?oppr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_polyA",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "by move=> p q r; apply/polyP=> i; rewrite !coef_add_poly addrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_polyC",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "by move=> p q; apply/polyP=> i; rewrite !coef_add_poly addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_poly0",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "by move=> p; apply/polyP=> i; rewrite coef_add_poly coefC if_same add0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_polyN",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "move=> p; apply/polyP=> i.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite coef_add_poly coef_opp_poly coefC if_same addNr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC0",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseq0",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "by rewrite polyseqC eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly0",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "by rewrite polyseq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef0",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "by rewrite coefC if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef0",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "exact: lead_coefC.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly_eq0",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "by rewrite size_eq0 -polyseq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly_leq0",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "by rewrite leqn0 size_poly_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly_leq0P",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP idP); rewrite size_poly_leq0; move/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly_gt0",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "by rewrite lt0n size_poly_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_size_poly_neq0",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "by move=> /(leq_ltn_trans _) h; rewrite -size_poly_eq0 lt0n_neq0 ?h.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_poly",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "exact: size_poly_eq0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly0Vpos",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "by rewrite lt0n size_poly_eq0; apply: eqVneq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polySpred",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "by rewrite -size_poly_eq0 -lt0n => /prednK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_eq0",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "rewrite -nil_poly /lead_coef nth_last.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: p => [[|x s] /= /negbTE // _]; rewrite eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_eq0",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "by rewrite -nil_poly polyseqC; case: (c == 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly1P",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "apply: (iffP eqP) => [pC | [c nz_c ->]]; last by rewrite size_polyC nz_c.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have def_p: p = (p`_0)%:P by rewrite -size1_polyC ?pC.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists p`_0; rewrite // -polyC_eq0 -def_p -size_poly_eq0 pC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_polyC_leq1",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "by rewrite size_polyC; case: (c == 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_sizeP",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [hp j hij| hp].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply: nth_default; apply: leq_trans hij.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case p0: (p == 0); first by rewrite (eqP p0) size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move: (lead_coef_eq0 p); rewrite p0 leqNgt; move/negbT; apply: contra => hs.",
                        "VernacExtend",
                        "e1a7cfb266c750bddfc742b038f756fe615efe51"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; apply: hp; rewrite -ltnS (ltn_predK hs).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefD",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "exact: coef_add_poly.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefN",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "exact: coef_opp_poly.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefB",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "by rewrite coefD coefN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefMn",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "exact: (raddfMn (coefp_additive i)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefMNn",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "by rewrite coefN coefMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_sum",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "exact: (raddf_sum (coefp_additive k)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_add",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "by move=> a b; apply/polyP=> [[|i]]; rewrite coefD !coefC ?addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_opp",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "by move=> c; apply/polyP=> [[|i]]; rewrite coefN !coefC ?oppr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_sub",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "by move=> a b; rewrite polyC_add polyC_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_muln",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "exact: raddfMn.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_opp",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite eqn_leq -{3}(opprK p) -[-%R]/opp_poly unlock !size_poly.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_opp",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "by rewrite /lead_coef size_opp coefN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_add",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "by rewrite -[+%R]/add_poly unlock; apply: size_poly.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_addl",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "move=> ltqp; rewrite -[+%R]/add_poly unlock size_poly_eq (maxn_idPl (ltnW _))//.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite addrC nth_default ?simp ?nth_last //; case: p ltqp => [[]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_sum",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ => [|i p q _ IHp]; first by rewrite size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(maxn_idPr IHp) maxnA leq_max size_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coefDl",
            "line_nb": 287,
            "steps": [
                {
                    "command": [
                        "move=> ltqp; rewrite /lead_coef coefD size_addl //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite addrC nth_default ?simp // -ltnS (ltn_predK ltqp).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coefDr",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "by move/lead_coefDl<-; rewrite addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_poly_key",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_mul_poly",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "rewrite unlock coef_poly -subn1 ltn_subRL add1n; case: leqP => // le_pq_i1.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite big1 // => j _; have [lq_q_ij | gt_q_ij] := leqP (size q) (i - j).",
                        "VernacExtend",
                        "d2991b7607b6316c9d43d28c85f87ca601299ca6"
                    ]
                },
                {
                    "command": [
                        "by rewrite [q`__]nth_default ?mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_default ?mul0r // -(leq_add2r (size q)) (leq_trans le_pq_i1) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -leq_subLR -subnSK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_mul_poly_rev",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "rewrite coef_mul_poly (reindex_inj rev_ord_inj) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite (sub_ordK j).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_polyA",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "move=> p q r; apply/polyP=> i; rewrite coef_mul_poly coef_mul_poly_rev.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "pose coef3 j k := p`_j * (q`_(i - j - k)%N * r`_k).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "transitivity (\\sum_(j < i.+1) \\sum_(k < i.+1 | k <= i - j) coef3 j k).",
                        "VernacExtend",
                        "2fcfdd33c6c847bf64b70aaefce7048bda5795fd"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => /= j _; rewrite coef_mul_poly_rev big_distrr /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (big_ord_narrow_leq (leq_subr _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (exchange_big_dep predT) //=; apply: eq_bigr => k _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "transitivity (\\sum_(j < i.+1 | j <= i - k) coef3 j k).",
                        "VernacExtend",
                        "fbce16784625cf19ca78ca78eb4d85c93f3f3cf2"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigl => j; rewrite -ltnS -(ltnS j) -!subSn ?leq_ord //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -subn_gt0 -(subn_gt0 j) -!subnDA addnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (big_ord_narrow_leq (leq_subr _ _)) coef_mul_poly big_distrl /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite /coef3 -!subnDA addnC mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_1poly",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "move=> p; apply/polyP => i; rewrite coef_mul_poly big_ord_recl subn0.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite big1 => [|j _]; rewrite coefC !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_poly1",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "move=> p; apply/polyP => i; rewrite coef_mul_poly_rev big_ord_recl subn0.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite big1 => [|j _]; rewrite coefC !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_polyDl",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "move=> p q r; apply/polyP=> i; rewrite coefD !coef_mul_poly -big_split.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite coefD mulrDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_polyDr",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "move=> p q r; apply/polyP=> i; rewrite coefD !coef_mul_poly -big_split.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite coefD mulrDr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly1_neq0",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "by rewrite polyC_eq0 oner_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC1",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseq1",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "by rewrite polyseqC oner_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_poly1",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "by rewrite polyseq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef1",
            "line_nb": 355,
            "steps": [
                {
                    "command": [
                        "by case: i => [|i]; rewrite polyseq1 /= ?nth_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef1",
            "line_nb": 358,
            "steps": [
                {
                    "command": [
                        "exact: lead_coefC.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefM",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "exact: coef_mul_poly.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefMr",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "exact: coef_mul_poly_rev.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_mul_leq",
            "line_nb": 367,
            "steps": [
                {
                    "command": [
                        "by rewrite -[*%R]/mul_poly unlock size_poly.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_lead_coef",
            "line_nb": 370,
            "steps": [
                {
                    "command": [
                        "pose dp := (size p).-1; pose dq := (size q).-1.",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0; first by rewrite lead_coef0 !mul0r coef0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [-> | nz_q] := eqVneq q 0; first by rewrite lead_coef0 !mulr0 coef0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have ->: (size p + size q).-2 = (dp + dq)%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by do 2!rewrite polySpred // addSn addnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have lt_p_pq: dp < (dp + dq).+1 by rewrite ltnS leq_addr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite coefM (bigD1 (Ordinal lt_p_pq)) ?big1 ?simp ?addKn //= => i.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -val_eqE neq_ltn /= => /orP[lt_i_p | gt_i_p]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite nth_default ?mul0r //; rewrite -polySpred in gt_i_p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite [q`__]nth_default ?mulr0 //= -subSS -{1}addnS -polySpred //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addnC -addnBA ?leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_proper_mul",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "apply: contraNeq; rewrite mul_lead_coef eqn_leq size_mul_leq -ltnNge => lt_pq.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite nth_default // -subn1 -(leq_add2l 1) -leq_subLR leq_sub2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_proper_mul",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "by move=> /= nz_c; rewrite mul_lead_coef -size_proper_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_prod_leq",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "rewrite -sum1_card.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim/big_rec3: _ => [|i n m p _ IHp]; first by rewrite size_poly1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0; first by rewrite mulr0 size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite (leq_trans (size_mul_leq _ _)) // subnS -!subn1 leq_sub2r //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -addnS -addnBA ?leq_add2l // ltnW // -subn_gt0 (leq_trans _ IHp) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite polySpred.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefCM",
            "line_nb": 398,
            "steps": [
                {
                    "command": [
                        "rewrite coefM big_ord_recl subn0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite big1 => [|j _]; rewrite coefC !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefMC",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "rewrite coefMr big_ord_recl subn0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite big1 => [|j _]; rewrite coefC !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_mul",
            "line_nb": 406,
            "steps": [
                {
                    "command": [
                        "by move=> a b; apply/polyP=> [[|i]]; rewrite coefCM !coefC ?simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_multiplicative",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "by split; first apply: polyC_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_exp",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "exact: rmorphX.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_exp_leq",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn]; first by rewrite size_poly1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [-> | nzp] := poly0Vpos p; first by rewrite exprS mul0r size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite exprS (leq_trans (size_mul_leq _ _)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}(prednK nzp) mulnS -addnS leq_add2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_Msign",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "by rewrite -signr_odd; case: (odd n); rewrite ?mul1r // mulN1r size_opp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefp0_multiplicative",
            "line_nb": 425,
            "steps": [
                {
                    "command": [
                        "split=> [p q|]; last by rewrite polyCK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite [coefp 0 _]coefM big_ord_recl big_ord0 addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_poly_key",
            "line_nb": 431,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_polyE",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "apply/polyP=> n; rewrite unlock coef_poly coefCM.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: leqP => // le_p_n; rewrite nth_default ?mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_polyA",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "by rewrite !scale_polyE mulrA polyC_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_1poly",
            "line_nb": 443,
            "steps": [
                {
                    "command": [
                        "by move=> p; rewrite scale_polyE mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_polyDr",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "by move=> p q; rewrite !scale_polyE mulrDr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_polyDl",
            "line_nb": 449,
            "steps": [
                {
                    "command": [
                        "by move=> a b /=; rewrite !scale_polyE raddfD mulrDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_polyAl",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "by rewrite !scale_polyE mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_polyC",
            "line_nb": 460,
            "steps": [
                {
                    "command": [
                        "by rewrite -scale_polyE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alg_polyC",
            "line_nb": 463,
            "steps": [
                {
                    "command": [
                        "by rewrite -mul_polyC mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefZ",
            "line_nb": 466,
            "steps": [
                {
                    "command": [
                        "rewrite -[*:%R]/scale_poly unlock coef_poly.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: leqP => // le_p_n; rewrite nth_default ?mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_scale_leq",
            "line_nb": 470,
            "steps": [
                {
                    "command": [
                        "by rewrite -[*:%R]/scale_poly unlock size_poly.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyX_key",
            "line_nb": 476,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseqX",
            "line_nb": 482,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock !polyseq_cons nil_poly eqxx /= polyseq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_polyX",
            "line_nb": 485,
            "steps": [
                {
                    "command": [
                        "by rewrite polyseqX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyX_eq0",
            "line_nb": 488,
            "steps": [
                {
                    "command": [
                        "by rewrite -size_poly_eq0 size_polyX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefX",
            "line_nb": 491,
            "steps": [
                {
                    "command": [
                        "by case: i => [|[|i]]; rewrite polyseqX //= nth_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coefX",
            "line_nb": 494,
            "steps": [
                {
                    "command": [
                        "by rewrite /lead_coef polyseqX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "commr_polyX",
            "line_nb": 497,
            "steps": [
                {
                    "command": [
                        "apply/polyP=> i; rewrite coefMr coefM.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite coefX commr_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefMX",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "rewrite coefMr big_ord_recl coefX ?simp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: i => [|i]; rewrite ?big_ord0 //= big_ord_recl polyseqX subn1 /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite big1 ?simp // => j _; rewrite nth_nil !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefXM",
            "line_nb": 506,
            "steps": [
                {
                    "command": [
                        "by rewrite -commr_polyX coefMX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cons_poly_def",
            "line_nb": 509,
            "steps": [
                {
                    "command": [
                        "apply/polyP=> i; rewrite coef_cons coefD coefMX coefC.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: ifP; rewrite !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_ind",
            "line_nb": 513,
            "steps": [
                {
                    "command": [
                        "move=> K0 Kcons p; rewrite -[p]polyseqK.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by elim: {p}(p : seq R) => //= p c IHp; rewrite cons_poly_def; apply: Kcons.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseqXsubC",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "by rewrite -['X]mul1r -polyC_opp -cons_poly_def polyseq_cons polyseq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_XsubC",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "by rewrite polyseqXsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_XaddC",
            "line_nb": 523,
            "steps": [
                {
                    "command": [
                        "by rewrite -[b]opprK rmorphN size_XsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coefXsubC",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "by rewrite lead_coefE polyseqXsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyXsubC_eq0",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "by rewrite -nil_poly polyseqXsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_MXaddC",
            "line_nb": 532,
            "steps": [
                {
                    "command": [
                        "by rewrite -cons_poly_def size_cons_poly nil_poly.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseqMX",
            "line_nb": 535,
            "steps": [
                {
                    "command": [
                        "by move=> nz_p; rewrite -[p * _]addr0 -cons_poly_def polyseq_cons nil_poly nz_p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_mulX",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "by move/polyseqMX->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coefMX",
            "line_nb": 541,
            "steps": [
                {
                    "command": [
                        "have [-> | nzp] := eqVneq p 0; first by rewrite mul0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /lead_coef !nth_last polyseqMX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_XmulC",
            "line_nb": 545,
            "steps": [
                {
                    "command": [
                        "by move=> nz_a; rewrite -commr_polyX size_mulX ?polyC_eq0 ?size_polyC nz_a.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefXn",
            "line_nb": 549,
            "steps": [
                {
                    "command": [
                        "by elim: n i => [|n IHn] [|i]; rewrite ?coef1 // exprS coefXM ?IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseqXn",
            "line_nb": 552,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn]; rewrite ?polyseq1 // exprSr.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "by rewrite polyseqMX -?size_poly_eq0 IHn ?size_rcons.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_polyXn",
            "line_nb": 556,
            "steps": [
                {
                    "command": [
                        "by rewrite polyseqXn size_rcons size_nseq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "commr_polyXn",
            "line_nb": 559,
            "steps": [
                {
                    "command": [
                        "by apply: commrX; apply: commr_polyX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coefXn",
            "line_nb": 562,
            "steps": [
                {
                    "command": [
                        "by rewrite /lead_coef nth_last polyseqXn last_rcons.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyseqMXn",
            "line_nb": 565,
            "steps": [
                {
                    "command": [
                        "case: n => [|n] nz_p; first by rewrite mulr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "elim: n => [|n IHn]; first exact: polyseqMX.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprSr mulrA polyseqMX -?nil_poly IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefMXn",
            "line_nb": 570,
            "steps": [
                {
                    "command": [
                        "have [-> | /polyseqMXn->] := eqVneq p 0; last exact: nth_ncons.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul0r !coef0 if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coefXnM",
            "line_nb": 574,
            "steps": [
                {
                    "command": [
                        "by rewrite -commr_polyXn coefMXn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_def",
            "line_nb": 577,
            "steps": [
                {
                    "command": [
                        "rewrite unlock; elim: n => [|n IHn] in E *; first by rewrite big_ord0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite big_ord_recl /= cons_poly_def addrC expr0 alg_polyC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "congr (_ + _); rewrite (iota_addl 1 0) -map_comp IHn big_distrl /=.",
                        "VernacExtend",
                        "90723b7805fdae0b93bd8b98ae215a5658363919"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite -scalerAl exprSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monic_key",
            "line_nb": 584,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monicE",
            "line_nb": 588,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monicP",
            "line_nb": 591,
            "steps": [
                {
                    "command": [
                        "exact: eqP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monic1",
            "line_nb": 594,
            "steps": [
                {
                    "command": [
                        "exact/eqP/lead_coef1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monicX",
            "line_nb": 597,
            "steps": [
                {
                    "command": [
                        "exact/eqP/lead_coefX.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monicXn",
            "line_nb": 600,
            "steps": [
                {
                    "command": [
                        "exact/eqP/lead_coefXn.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monic_neq0",
            "line_nb": 603,
            "steps": [
                {
                    "command": [
                        "by rewrite -lead_coef_eq0 => /eqP->; apply: oner_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_monicM",
            "line_nb": 606,
            "steps": [
                {
                    "command": [
                        "have [-> | nz_q] := eqVneq q 0; first by rewrite mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/monicP=> mon_p; rewrite lead_coef_proper_mul mon_p mul1r ?lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_Mmonic",
            "line_nb": 610,
            "steps": [
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0; first by rewrite mul0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/monicP=> mon_q; rewrite lead_coef_proper_mul mon_q mulr1 ?lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_monicM",
            "line_nb": 614,
            "steps": [
                {
                    "command": [
                        "move/monicP=> mon_p nz_q.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_proper_mul // mon_p mul1r lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_Mmonic",
            "line_nb": 618,
            "steps": [
                {
                    "command": [
                        "move=> nz_p /monicP mon_q.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_proper_mul // mon_q mulr1 lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monicMl",
            "line_nb": 622,
            "steps": [
                {
                    "command": [
                        "by move=> mon_p; rewrite !monicE lead_coef_monicM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monicMr",
            "line_nb": 625,
            "steps": [
                {
                    "command": [
                        "by move=> mon_q; rewrite !monicE lead_coef_Mmonic.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monic_mulr_closed",
            "line_nb": 628,
            "steps": [
                {
                    "command": [
                        "by split=> [|p q mon_p]; rewrite (monic1, monicMl).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monic_exp",
            "line_nb": 632,
            "steps": [
                {
                    "command": [
                        "exact: rpredX.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monic_prod",
            "line_nb": 635,
            "steps": [
                {
                    "command": [
                        "exact: rpred_prod.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monicXsubC",
            "line_nb": 638,
            "steps": [
                {
                    "command": [
                        "exact/eqP/lead_coefXsubC.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monic_prod_XsubC",
            "line_nb": 641,
            "steps": [
                {
                    "command": [
                        "by apply: monic_prod => i _; apply: monicXsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_prod_XsubC",
            "line_nb": 644,
            "steps": [
                {
                    "command": [
                        "elim: rI => [|i r /= <-]; rewrite ?big_nil ?size_poly1 // big_cons.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "rewrite size_monicM ?monicXsubC ?monic_neq0 ?monic_prod_XsubC //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_XsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_exp_XsubC",
            "line_nb": 649,
            "steps": [
                {
                    "command": [
                        "by rewrite -[n]card_ord -prodr_const size_prod_XsubC cardE enumT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lreg_lead",
            "line_nb": 652,
            "steps": [
                {
                    "command": [
                        "move/mulrI_eq0=> reg_p; apply: mulrI0_lreg => q /eqP; apply: contraTeq => nz_q.",
                        "VernacExtend",
                        "e374b6c583d80c9d8b579c06df7953342f99f751"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lead_coef_eq0 lead_coef_proper_mul reg_p lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rreg_lead",
            "line_nb": 656,
            "steps": [
                {
                    "command": [
                        "move/mulIr_eq0=> reg_p; apply: mulIr0_rreg => q /eqP; apply: contraTeq => nz_q.",
                        "VernacExtend",
                        "e374b6c583d80c9d8b579c06df7953342f99f751"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lead_coef_eq0 lead_coef_proper_mul reg_p lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lreg_lead0",
            "line_nb": 660,
            "steps": [
                {
                    "command": [
                        "by move/lreg_neq0; rewrite lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rreg_lead0",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "by move/rreg_neq0; rewrite lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lreg_size",
            "line_nb": 666,
            "steps": [
                {
                    "command": [
                        "move=> reg_c; have [-> | nz_p] := eqVneq p 0; first by rewrite scaler0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -mul_polyC size_proper_mul; first by rewrite size_polyC lreg_neq0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite lead_coefC mulrI_eq0 ?lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lreg_polyZ_eq0",
            "line_nb": 671,
            "steps": [
                {
                    "command": [
                        "by rewrite -!size_poly_eq0 => /lreg_size->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_lreg",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "by move=> reg_c; rewrite !lead_coefE coefZ lreg_size.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rreg_size",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "move=> reg_c; have [-> | nz_p] := eqVneq p 0; first by rewrite mul0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite size_proper_mul; first by rewrite size_polyC rreg_neq0 ?addn1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite lead_coefC mulIr_eq0 ?lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rreg_polyMC_eq0",
            "line_nb": 682,
            "steps": [
                {
                    "command": [
                        "by rewrite -!size_poly_eq0 => /rreg_size->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rreg_div0",
            "line_nb": 685,
            "steps": [
                {
                    "command": [
                        "move=> reg_d lt_r_d; rewrite addrC addr_eq0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have [-> | nz_q] := altP (q =P 0); first by rewrite mul0r oppr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: contraTF lt_r_d => /eqP->; rewrite -leqNgt size_opp.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite size_proper_mul ?mulIr_eq0 ?lead_coef_eq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (polySpred nz_q) leq_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monic_comreg",
            "line_nb": 692,
            "steps": [
                {
                    "command": [
                        "by move/monicP->; split; [apply: commr1 | apply: rreg1].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner0",
            "line_nb": 699,
            "steps": [
                {
                    "command": [
                        "by rewrite /horner polyseq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerC",
            "line_nb": 702,
            "steps": [
                {
                    "command": [
                        "by rewrite /horner polyseqC; case: eqP; rewrite /= ?simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerX",
            "line_nb": 705,
            "steps": [
                {
                    "command": [
                        "by rewrite /horner polyseqX /= !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_cons",
            "line_nb": 708,
            "steps": [
                {
                    "command": [
                        "rewrite /horner polyseq_cons; case: nilP => //= ->.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite !simp -/(_.[x]) hornerC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_coef0",
            "line_nb": 712,
            "steps": [
                {
                    "command": [
                        "by rewrite /horner; case: (p : seq R) => //= c p'; rewrite !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerMXaddC",
            "line_nb": 715,
            "steps": [
                {
                    "command": [
                        "by rewrite -cons_poly_def horner_cons.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerMX",
            "line_nb": 718,
            "steps": [
                {
                    "command": [
                        "by rewrite -[p * 'X]addr0 hornerMXaddC addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_Poly",
            "line_nb": 721,
            "steps": [
                {
                    "command": [
                        "by elim: s => [|a s /= <-]; rewrite (horner0, horner_cons).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_coef",
            "line_nb": 724,
            "steps": [
                {
                    "command": [
                        "rewrite /horner.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: {p}(p : seq R) => /= [|a s ->]; first by rewrite big_ord0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite big_ord_recl simp addrC big_distrl /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by congr (_ + _); apply: eq_bigr => i _; rewrite -mulrA exprSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_coef_wide",
            "line_nb": 730,
            "steps": [
                {
                    "command": [
                        "move=> le_p_n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite horner_coef (big_ord_widen n (fun i => p`_i * x ^+ i)) // big_mkcond.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; case: ltnP => // le_p_i; rewrite nth_default ?simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_poly",
            "line_nb": 735,
            "steps": [
                {
                    "command": [
                        "rewrite (@horner_coef_wide n) ?size_poly //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite coef_poly ltn_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerN",
            "line_nb": 739,
            "steps": [
                {
                    "command": [
                        "rewrite -[-%R]/opp_poly unlock horner_poly horner_coef -sumrN /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite mulNr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerD",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "rewrite -[+%R]/add_poly unlock horner_poly; set m := maxn _ _.",
                        "VernacExtend",
                        "c1f58f36c5711f022b4a54717f37c2782f34a159"
                    ]
                },
                {
                    "command": [
                        "rewrite !(@horner_coef_wide m) ?leq_max ?leqnn ?orbT // -big_split /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite -mulrDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerXsubC",
            "line_nb": 748,
            "steps": [
                {
                    "command": [
                        "by rewrite hornerD hornerN hornerC hornerX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_sum",
            "line_nb": 751,
            "steps": [
                {
                    "command": [
                        "by elim/big_rec2: _ => [|i _ p _ <-]; rewrite (horner0, hornerD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerCM",
            "line_nb": 754,
            "steps": [
                {
                    "command": [
                        "elim/poly_ind: p => [|p c IHp]; first by rewrite !(mulr0, horner0).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrDr mulrA -polyC_mul !hornerMXaddC IHp mulrDr mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerZ",
            "line_nb": 758,
            "steps": [
                {
                    "command": [
                        "by rewrite -mul_polyC hornerCM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerMn",
            "line_nb": 761,
            "steps": [
                {
                    "command": [
                        "by elim: n => [| n IHn]; rewrite ?horner0 // !mulrS hornerD IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comm_coef_poly",
            "line_nb": 766,
            "steps": [
                {
                    "command": [
                        "move=> cpx; rewrite /comm_poly !horner_coef big_distrl big_distrr /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite /= mulrA -cpx -!mulrA commrX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comm_poly0",
            "line_nb": 770,
            "steps": [
                {
                    "command": [
                        "by rewrite /comm_poly !horner0 !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comm_poly1",
            "line_nb": 773,
            "steps": [
                {
                    "command": [
                        "by rewrite /comm_poly !hornerC !simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comm_polyX",
            "line_nb": 776,
            "steps": [
                {
                    "command": [
                        "by rewrite /comm_poly !hornerX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerM_comm",
            "line_nb": 779,
            "steps": [
                {
                    "command": [
                        "move=> comm_qx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim/poly_ind: p => [|p c IHp]; first by rewrite !(simp, horner0).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrDl hornerD hornerCM -mulrA -commr_polyX mulrA hornerMX.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite {}IHp -mulrA -comm_qx mulrA -mulrDl hornerMXaddC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_exp_comm",
            "line_nb": 785,
            "steps": [
                {
                    "command": [
                        "move=> comm_px; elim: n => [|n IHn]; first by rewrite hornerC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !exprSr -IHn hornerM_comm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerXn",
            "line_nb": 789,
            "steps": [
                {
                    "command": [
                        "by rewrite horner_exp_comm /comm_poly hornerX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_root",
            "line_nb": 794,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootE",
            "line_nb": 797,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootP",
            "line_nb": 800,
            "steps": [
                {
                    "command": [
                        "exact: eqP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootPt",
            "line_nb": 803,
            "steps": [
                {
                    "command": [
                        "exact: idP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootPf",
            "line_nb": 806,
            "steps": [
                {
                    "command": [
                        "exact: negPf.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootC",
            "line_nb": 809,
            "steps": [
                {
                    "command": [
                        "by rewrite rootE hornerC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root0",
            "line_nb": 812,
            "steps": [
                {
                    "command": [
                        "by rewrite rootC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root1",
            "line_nb": 815,
            "steps": [
                {
                    "command": [
                        "by rewrite rootC oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootX",
            "line_nb": 818,
            "steps": [
                {
                    "command": [
                        "by rewrite rootE hornerX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootN",
            "line_nb": 821,
            "steps": [
                {
                    "command": [
                        "by rewrite rootE hornerN oppr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_size_gt1",
            "line_nb": 824,
            "steps": [
                {
                    "command": [
                        "rewrite ltnNge => nz_p; apply: contraL => /size1_polyC Dp.",
                        "VernacExtend",
                        "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
                    ]
                },
                {
                    "command": [
                        "by rewrite Dp rootC -polyC_eq0 -Dp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_XsubC",
            "line_nb": 828,
            "steps": [
                {
                    "command": [
                        "by rewrite rootE hornerXsubC subr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_XaddC",
            "line_nb": 831,
            "steps": [
                {
                    "command": [
                        "by rewrite -root_XsubC rmorphN opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor_theorem",
            "line_nb": 834,
            "steps": [
                {
                    "command": [
                        "apply: (iffP eqP) => [pa0 | [q ->]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite hornerM_comm /comm_poly hornerXsubC subrr ?simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (\\poly_(i < size p) horner_rec (drop i.+1 p) a).",
                        "VernacExtend",
                        "99140f25d7be734a84b26aff76493a41e48ca7a4"
                    ]
                },
                {
                    "command": [
                        "apply/polyP=> i; rewrite mulrBr coefB coefMX coefMC !coef_poly.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply: canRL (addrK _) _; rewrite addrC; have [le_p_i | lt_i_p] := leqP.",
                        "VernacExtend",
                        "88e21057fc6b7102e6280fe7858222ef45ddbdf0"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_default // !simp drop_oversize ?if_same //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: leq_trans (leqSpred _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "case: i => [|i] in lt_i_p *; last by rewrite ltnW // (drop_nth 0 lt_i_p).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite drop1 /= -{}pa0 /horner; case: (p : seq R) lt_i_p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multiplicity_XsubC",
            "line_nb": 845,
            "steps": [
                {
                    "command": [
                        "elim: {p}(size p) {-2}p (eqxx (size p)) => [|n IHn] p.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_poly_eq0 => ->; exists 0%N, p; rewrite ?mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [/sig_eqW[{p}p ->] sz_p | nz_pa] := altP (factor_theorem p a); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists 0%N, p; rewrite ?mulr1 ?nz_pa ?implybT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nz_p: p != 0 by apply: contraTneq sz_p => ->; rewrite mul0r size_poly0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite size_Mmonic ?monicXsubC // size_XsubC addn2 eqSS in sz_p.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [m /sig2_eqW[q nz_qa Dp]] := IHn p sz_p; rewrite nz_p /= in nz_qa.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by exists m.+1, q; rewrite ?nz_qa ?implybT // exprSr mulrA -Dp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_Xn_sub_1",
            "line_nb": 855,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite size_addl size_polyXn // size_opp size_poly1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monic_Xn_sub_1",
            "line_nb": 858,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; rewrite monicE lead_coefE size_Xn_sub_1 // coefB.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite coefXn coef1 eqxx eqn0Ngt n_gt0 subr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unity_rootE",
            "line_nb": 864,
            "steps": [
                {
                    "command": [
                        "by rewrite /root_of_unity rootE hornerD hornerN hornerXn hornerC subr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unity_rootP",
            "line_nb": 867,
            "steps": [
                {
                    "command": [
                        "by rewrite unity_rootE; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prim_order_exists",
            "line_nb": 872,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0 zn1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have: exists m, (m > 0) && (z ^+ m == 1) by exists n; rewrite n_gt0 /= zn1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/ex_minnP=> m /andP[m_gt0 /eqP zm1] m_min.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists m.",
                        "VernacExtend",
                        "9282a6b695b4daa97f27297bcc295a268a932fcd"
                    ]
                },
                {
                    "command": [
                        "apply/andP; split=> //; apply/eqfunP=> [[i]] /=.",
                        "VernacExtend",
                        "09ff90107c05f6bf4f743acb58a064bacfe65029"
                    ]
                },
                {
                    "command": [
                        "rewrite leq_eqVlt unity_rootE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: eqP => [-> _ | _]; first by rewrite zm1 eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: contraTF => zi1; rewrite -leqNgt m_min.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: n %% m < m by rewrite ltn_mod.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: contraLR; rewrite -lt0n -leqNgt => nm_gt0; apply: m_min.",
                        "VernacExtend",
                        "09ff90107c05f6bf4f743acb58a064bacfe65029"
                    ]
                },
                {
                    "command": [
                        "by rewrite nm_gt0 /= expr_mod ?zn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prim_order_gt0",
            "line_nb": 888,
            "steps": [
                {
                    "command": [
                        "by case/andP: prim_z.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prim_expr_order",
            "line_nb": 892,
            "steps": [
                {
                    "command": [
                        "case/andP: prim_z => _; rewrite -(prednK n_gt0) => /forallP/(_ ord_max).",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by rewrite unity_rootE eqxx eqb_id => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prim_expr_mod",
            "line_nb": 896,
            "steps": [
                {
                    "command": [
                        "exact: expr_mod prim_expr_order.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prim_order_dvd",
            "line_nb": 899,
            "steps": [
                {
                    "command": [
                        "move: n_gt0; rewrite -prim_expr_mod /dvdn -(ltn_mod i).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: {i}(i %% n)%N => [|i] lt_i; first by rewrite !eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/andP: prim_z => _ /forallP/(_ (Ordinal (ltnW lt_i))).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by move/eqP; rewrite unity_rootE eqn_leq andbC leqNgt lt_i.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_prim_root",
            "line_nb": 924,
            "steps": [
                {
                    "command": [
                        "set k := (n %/ m)%N => m_dv_n; rewrite -{1}(mulKn m n_gt0) -divnA // -/k.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}(@gcdn_idPl k n _) ?exp_prim_root // -(divnK m_dv_n) dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prim_root_exp_coprime",
            "line_nb": 929,
            "steps": [
                {
                    "command": [
                        "move=> prim_z; have n_gt0 := prim_order_gt0 prim_z.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply/idP/idP=> [prim_zk | co_k_n].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "set d := gcdn k n; have dv_d_n: (d %| n)%N := dvdn_gcdr _ _.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "rewrite /coprime -/d -(eqn_pmul2r n_gt0) mul1n -{2}(gcdnMl n d).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}(divnK dv_d_n) (mulnC _ d) -muln_gcdr (gcdn_idPr _) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (prim_order_dvd prim_zk) -exprM -(prim_order_dvd prim_z).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite muln_divCA_gcd dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have zkn_1: z ^+ k ^+ n = 1 by rewrite exprAC (prim_expr_order prim_z) expr1n.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have{zkn_1} [m prim_zk dv_m_n]:= prim_order_exists n_gt0 zkn_1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suffices /eqP <-: m == n by [].",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "rewrite eqn_dvd dv_m_n -(@Gauss_dvdr n k m) 1?coprime_sym //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (prim_order_dvd prim_z) exprM (prim_expr_order prim_zk).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOver_key",
            "line_nb": 944,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOverS",
            "line_nb": 948,
            "steps": [
                {
                    "command": [
                        "by move=> sS12 p /(all_nthP 0)S1p; apply/(all_nthP 0)=> i /S1p; apply: sS12.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOver0",
            "line_nb": 951,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE polyseq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOver_poly",
            "line_nb": 954,
            "steps": [
                {
                    "command": [
                        "move=> S_E; apply/(all_nthP 0)=> i lt_i_p /=; rewrite coef_poly.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => [/S_E// | /idP[]]; apply: leq_trans lt_i_p (size_poly n E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOverP",
            "line_nb": 960,
            "steps": [
                {
                    "command": [
                        "apply: (iffP (all_nthP 0)) => [Sp i | Sp i _]; last exact: Sp.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by have [/Sp // | /(nth_default 0)->] := ltnP i (size p); apply: rpred0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOverC",
            "line_nb": 964,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE polyseqC; case: eqP => [->|] /=; rewrite ?andbT ?rpred0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOver_addr_closed",
            "line_nb": 967,
            "steps": [
                {
                    "command": [
                        "split=> [|p q Sp Sq]; first exact: polyOver0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/polyOverP=> i; rewrite coefD rpredD ?(polyOverP _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOverNr",
            "line_nb": 973,
            "steps": [
                {
                    "command": [
                        "by move=> p /polyOverP Sp; apply/polyOverP=> i; rewrite coefN rpredN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOver_mulr_closed",
            "line_nb": 980,
            "steps": [
                {
                    "command": [
                        "split=> [|p q /polyOverP Sp /polyOverP Sq]; first by rewrite polyOverC rpred1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/polyOverP=> i; rewrite coefM rpred_sum // => j _; apply: rpredM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOverZ",
            "line_nb": 986,
            "steps": [
                {
                    "command": [
                        "by move=> c p Sc /polyOverP Sp; apply/polyOverP=> i; rewrite coefZ rpredM ?Sp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOverX",
            "line_nb": 989,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE polyseqX /= rpred0 rpred1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rpred_horner",
            "line_nb": 992,
            "steps": [
                {
                    "command": [
                        "move=> p x /polyOverP Sp Sx; rewrite horner_coef rpred_sum // => i _.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM ?rpredX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOverXsubC",
            "line_nb": 1001,
            "steps": [
                {
                    "command": [
                        "by rewrite rpredBl ?polyOverX ?polyOverC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_deriv",
            "line_nb": 1007,
            "steps": [
                {
                    "command": [
                        "rewrite coef_poly -subn1 ltn_subRL.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: leqP => // /(nth_default 0) ->; rewrite mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOver_deriv",
            "line_nb": 1011,
            "steps": [
                {
                    "command": [
                        "by move=> p /polyOverP Kp; apply/polyOverP=> i; rewrite coef_deriv rpredMn ?Kp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivC",
            "line_nb": 1014,
            "steps": [
                {
                    "command": [
                        "by apply/polyP=> i; rewrite coef_deriv coef0 coefC mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivX",
            "line_nb": 1017,
            "steps": [
                {
                    "command": [
                        "by apply/polyP=> [[|i]]; rewrite coef_deriv coef1 coefX ?mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivXn",
            "line_nb": 1020,
            "steps": [
                {
                    "command": [
                        "case: n => [|n]; first exact: derivC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/polyP=> i; rewrite coef_deriv coefMn !coefXn eqSS.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: eqP => [-> // | _]; rewrite !mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deriv_is_linear",
            "line_nb": 1025,
            "steps": [
                {
                    "command": [
                        "move=> k p q; apply/polyP=> i.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(coef_deriv, coefD, coefZ) mulrnDl mulrnAr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deriv0",
            "line_nb": 1031,
            "steps": [
                {
                    "command": [
                        "exact: linear0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivD",
            "line_nb": 1034,
            "steps": [
                {
                    "command": [
                        "exact: linearD.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivN",
            "line_nb": 1037,
            "steps": [
                {
                    "command": [
                        "exact: linearN.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivB",
            "line_nb": 1040,
            "steps": [
                {
                    "command": [
                        "exact: linearB.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivXsubC",
            "line_nb": 1043,
            "steps": [
                {
                    "command": [
                        "by rewrite derivB derivX derivC subr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivMn",
            "line_nb": 1046,
            "steps": [
                {
                    "command": [
                        "exact: linearMn.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivMNn",
            "line_nb": 1049,
            "steps": [
                {
                    "command": [
                        "exact: linearMNn.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivZ",
            "line_nb": 1052,
            "steps": [
                {
                    "command": [
                        "by rewrite linearZ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deriv_mulC",
            "line_nb": 1055,
            "steps": [
                {
                    "command": [
                        "by rewrite !mul_polyC derivZ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivMXaddC",
            "line_nb": 1058,
            "steps": [
                {
                    "command": [
                        "apply/polyP=> i; rewrite raddfD /= derivC addr0 coefD !(coefMX, coef_deriv).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: i; rewrite ?addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivM",
            "line_nb": 1062,
            "steps": [
                {
                    "command": [
                        "elim/poly_ind: p => [|p b IHp]; first by rewrite !(mul0r, add0r, derivC).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrDl -mulrA -commr_polyX mulrA -[_ * 'X]addr0 raddfD /= !derivMXaddC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite deriv_mulC IHp !mulrDl -!mulrA !commr_polyX !addrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivn0",
            "line_nb": 1070,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivn1",
            "line_nb": 1073,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivnS",
            "line_nb": 1076,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivSn",
            "line_nb": 1079,
            "steps": [
                {
                    "command": [
                        "exact: iterSr.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_derivn",
            "line_nb": 1082,
            "steps": [
                {
                    "command": [
                        "elim: n i => [|n IHn] i; first by rewrite ffactn0 mulr1n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite derivnS coef_deriv IHn -mulrnA ffactnSr addSnnS addKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOver_derivn",
            "line_nb": 1086,
            "steps": [
                {
                    "command": [
                        "move=> p /polyOverP Kp /= n; apply/polyOverP=> i.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite coef_derivn rpredMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivn_is_linear",
            "line_nb": 1090,
            "steps": [
                {
                    "command": [
                        "by elim: n => // n IHn a p q; rewrite derivnS IHn linearP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivnC",
            "line_nb": 1095,
            "steps": [
                {
                    "command": [
                        "by case: n => // n; rewrite derivSn derivC linear0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivnD",
            "line_nb": 1098,
            "steps": [
                {
                    "command": [
                        "exact: linearD.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivn_sub",
            "line_nb": 1101,
            "steps": [
                {
                    "command": [
                        "exact: linearB.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivnMn",
            "line_nb": 1104,
            "steps": [
                {
                    "command": [
                        "exact: linearMn.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivnMNn",
            "line_nb": 1107,
            "steps": [
                {
                    "command": [
                        "exact: linearMNn.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivnN",
            "line_nb": 1110,
            "steps": [
                {
                    "command": [
                        "exact: linearN.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivnZ",
            "line_nb": 1113,
            "steps": [
                {
                    "command": [
                        "exact: linearZZ.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivnXn",
            "line_nb": 1116,
            "steps": [
                {
                    "command": [
                        "apply/polyP=>i; rewrite coef_derivn coefMn !coefXn.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case: (ltnP m n) => [lt_m_n | le_m_n].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqn_leq leqNgt ltn_addr // mul0rn ffact_small.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1 3}(subnKC le_m_n) eqn_add2l; case: eqP => [->|]; rewrite ?mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivnMXaddC",
            "line_nb": 1122,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn]; first by rewrite derivn1 derivMXaddC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite derivnS IHn derivD derivM derivX mulr1 derivMn -!derivnS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addrA addrAC -mulrSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivn_poly0",
            "line_nb": 1127,
            "steps": [
                {
                    "command": [
                        "move=> le_p_n; apply/polyP=> i; rewrite coef_derivn.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_default; first by rewrite mul0rn coef0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans le_p_n _; apply leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_size_deriv",
            "line_nb": 1132,
            "steps": [
                {
                    "command": [
                        "by move=> /polySpred->; apply: size_poly.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_nderivn",
            "line_nb": 1137,
            "steps": [
                {
                    "command": [
                        "rewrite coef_poly ltn_subRL; case: leqP => // le_p_ni.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite nth_default ?mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivn_def",
            "line_nb": 1141,
            "steps": [
                {
                    "command": [
                        "by apply/polyP=> i; rewrite coefMn coef_nderivn coef_derivn -mulrnA bin_ffact.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOver_nderivn",
            "line_nb": 1144,
            "steps": [
                {
                    "command": [
                        "move=> p /polyOverP Sp /= n; apply/polyOverP=> i.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite coef_nderivn rpredMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivn0",
            "line_nb": 1148,
            "steps": [
                {
                    "command": [
                        "by rewrite -[p^`N(0)](nderivn_def 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivn1",
            "line_nb": 1151,
            "steps": [
                {
                    "command": [
                        "by rewrite -[p^`N(1)](nderivn_def 1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivnC",
            "line_nb": 1154,
            "steps": [
                {
                    "command": [
                        "apply/polyP=> i; rewrite coef_nderivn.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: n => [|n]; rewrite ?bin0 // coef0 coefC mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivnXn",
            "line_nb": 1158,
            "steps": [
                {
                    "command": [
                        "apply/polyP=> i; rewrite coef_nderivn coefMn !coefXn.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have [lt_m_n | le_n_m] := ltnP m n.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqn_leq leqNgt ltn_addr // mul0rn bin_small.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1 3}(subnKC le_n_m) eqn_add2l; case: eqP => [->|]; rewrite ?mul0rn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivn_is_linear",
            "line_nb": 1164,
            "steps": [
                {
                    "command": [
                        "move=> k p q; apply/polyP=> i.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(coef_nderivn, coefD, coefZ) mulrnDl mulrnAr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivnD",
            "line_nb": 1170,
            "steps": [
                {
                    "command": [
                        "exact: linearD.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivnB",
            "line_nb": 1173,
            "steps": [
                {
                    "command": [
                        "exact: linearB.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivnMn",
            "line_nb": 1176,
            "steps": [
                {
                    "command": [
                        "exact: linearMn.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivnMNn",
            "line_nb": 1179,
            "steps": [
                {
                    "command": [
                        "exact: linearMNn.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivnN",
            "line_nb": 1182,
            "steps": [
                {
                    "command": [
                        "exact: linearN.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivnZ",
            "line_nb": 1185,
            "steps": [
                {
                    "command": [
                        "exact: linearZZ.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivn_poly0",
            "line_nb": 1193,
            "steps": [
                {
                    "command": [
                        "move=> le_p_n; apply/polyP=> i; rewrite coef_nderivn.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_default; first by rewrite mul0rn coef0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans le_p_n _; apply leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderiv_taylor_wide",
            "line_nb": 1213,
            "steps": [
                {
                    "command": [
                        "move/nderiv_taylor=> -> le_p_n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite (big_ord_widen n (fun i => p^`N(i).[x] * h ^+ i)) // big_mkcond.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => i _; case: leqP => // /nderivn_poly0->.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "by rewrite horner0 simp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_poly0",
            "line_nb": 1259,
            "steps": [
                {
                    "command": [
                        "by rewrite map_polyE polyseq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_map_poly",
            "line_nb": 1262,
            "steps": [
                {
                    "command": [
                        "by move=> eq_fg p; rewrite !map_polyE (eq_map eq_fg).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_poly_id",
            "line_nb": 1265,
            "steps": [
                {
                    "command": [
                        "by move=> g_id; rewrite map_polyE map_id_in ?polyseqK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_map_id0",
            "line_nb": 1268,
            "steps": [
                {
                    "command": [
                        "by move=> f0; rewrite coef_poly; case: ltnP => // le_p_i; rewrite nth_default.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_Poly_id0",
            "line_nb": 1271,
            "steps": [
                {
                    "command": [
                        "move=> f0; apply/polyP=> j; rewrite coef_map_id0 ?coef_Poly //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "have [/(nth_map 0 0)->// | le_s_j] := ltnP j (size s).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !nth_default ?size_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_poly_comp_id0",
            "line_nb": 1276,
            "steps": [
                {
                    "command": [
                        "by move=> f0; rewrite map_polyE map_comp -map_Poly_id0 -?map_polyE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_map_poly_id0",
            "line_nb": 1279,
            "steps": [
                {
                    "command": [
                        "by move=> nz_fp; apply: size_poly_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_poly_eq0_id0",
            "line_nb": 1282,
            "steps": [
                {
                    "command": [
                        "by rewrite -!size_poly_eq0 => /size_map_poly_id0->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_map_id0",
            "line_nb": 1285,
            "steps": [
                {
                    "command": [
                        "by move=> f0 nz_fp; rewrite lead_coefE coef_map_id0 ?size_map_poly_id0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_map_inj_poly",
            "line_nb": 1289,
            "steps": [
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0; first by rewrite map_poly0 !size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_map_poly_id0 // -f_0 (inj_eq inj_f) lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_map_inj",
            "line_nb": 1297,
            "steps": [
                {
                    "command": [
                        "by rewrite !lead_coefE size_map_inj_poly coef_map_id0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_polyK",
            "line_nb": 1301,
            "steps": [
                {
                    "command": [
                        "by move=> gK f_0 p; rewrite /= -map_poly_comp_id0 ?map_poly_id // => x _ //=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_map",
            "line_nb": 1307,
            "steps": [
                {
                    "command": [
                        "exact: coef_map_id0 (raddf0 f).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_Poly",
            "line_nb": 1310,
            "steps": [
                {
                    "command": [
                        "exact: map_Poly_id0 (raddf0 f).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_poly_comp",
            "line_nb": 1313,
            "steps": [
                {
                    "command": [
                        "exact: map_poly_comp_id0 (raddf0 f).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_poly_is_additive",
            "line_nb": 1316,
            "steps": [
                {
                    "command": [
                        "by move=> p q; apply/polyP=> i; rewrite !(coef_map, coefB) raddfB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_polyC",
            "line_nb": 1320,
            "steps": [
                {
                    "command": [
                        "by apply/polyP=> i; rewrite !(coef_map, coefC) -!mulrb raddfMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_map_eq",
            "line_nb": 1323,
            "steps": [
                {
                    "command": [
                        "exact: lead_coef_map_id0 (raddf0 f).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_poly_is_rmorphism",
            "line_nb": 1330,
            "steps": [
                {
                    "command": [
                        "split; first exact: map_poly_is_additive.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "split=> [p q|]; apply/polyP=> i; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(coef_map, coef1) /= rmorph_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite coef_map /= !coefM /= !rmorph_sum; apply: eq_bigr => j _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !coef_map rmorphM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_polyZ",
            "line_nb": 1338,
            "steps": [
                {
                    "command": [
                        "by apply/polyP=> i; rewrite !(coef_map, coefZ) /= rmorphM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_polyX",
            "line_nb": 1343,
            "steps": [
                {
                    "command": [
                        "by apply/polyP=> i; rewrite coef_map !coefX /= rmorph_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_polyXn",
            "line_nb": 1346,
            "steps": [
                {
                    "command": [
                        "by rewrite rmorphX /= map_polyX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monic_map",
            "line_nb": 1349,
            "steps": [
                {
                    "command": [
                        "move/monicP=> mon_p; rewrite monicE.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite lead_coef_map_eq mon_p /= rmorph1 ?oner_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_map",
            "line_nb": 1353,
            "steps": [
                {
                    "command": [
                        "elim/poly_ind: p => [|p c IHp]; first by rewrite !(rmorph0, horner0).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite hornerMXaddC !rmorphD !rmorphM /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite map_polyX map_polyC hornerMXaddC IHp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_comm_poly",
            "line_nb": 1358,
            "steps": [
                {
                    "command": [
                        "by rewrite /comm_poly horner_map -!rmorphM // => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_comm_coef",
            "line_nb": 1361,
            "steps": [
                {
                    "command": [
                        "by move=> cpx i; rewrite coef_map -!rmorphM ?cpx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmorph_root",
            "line_nb": 1364,
            "steps": [
                {
                    "command": [
                        "by move/eqP=> px0; rewrite rootE horner_map px0 rmorph0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmorph_unity_root",
            "line_nb": 1367,
            "steps": [
                {
                    "command": [
                        "move/rmorph_root; rewrite rootE rmorphB hornerD hornerN.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= map_polyXn rmorph1 hornerC hornerXn subr_eq0 unity_rootE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_morphC",
            "line_nb": 1374,
            "steps": [
                {
                    "command": [
                        "by rewrite /horner_morph map_polyC hornerC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_morphX",
            "line_nb": 1377,
            "steps": [
                {
                    "command": [
                        "by rewrite /horner_morph map_polyX hornerX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_is_lrmorphism",
            "line_nb": 1380,
            "steps": [
                {
                    "command": [
                        "rewrite /horner_morph; split=> [|c p]; last by rewrite linearZ hornerZ.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "split=> [p q|]; first by rewrite /horner_morph rmorphB hornerD hornerN.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "split=> [p q|]; last by rewrite /horner_morph rmorph1 hornerC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /horner_morph rmorphM /= hornerM_comm //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: comm_coef_poly => i; rewrite coef_map cfu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deriv_map",
            "line_nb": 1392,
            "steps": [
                {
                    "command": [
                        "by apply/polyP => i; rewrite !(coef_map, coef_deriv) //= rmorphMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivn_map",
            "line_nb": 1395,
            "steps": [
                {
                    "command": [
                        "by apply/polyP => i; rewrite !(coef_map, coef_derivn) //= rmorphMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nderivn_map",
            "line_nb": 1398,
            "steps": [
                {
                    "command": [
                        "by apply/polyP => i; rewrite !(coef_map, coef_nderivn) //= rmorphMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_morphX_comm",
            "line_nb": 1404,
            "steps": [
                {
                    "command": [
                        "by move=> a; rewrite /GRing.comm /= -!rmorphM // commr_polyX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_initial",
            "line_nb": 1407,
            "steps": [
                {
                    "command": [
                        "apply: poly_ind => [|p a IHp]; first by rewrite !rmorph0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !rmorphD !rmorphM /= -{}IHp horner_morphC ?horner_morphX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_map_polyC",
            "line_nb": 1418,
            "steps": [
                {
                    "command": [
                        "exact/(size_map_inj_poly polyC_inj).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_polyC_eq0",
            "line_nb": 1421,
            "steps": [
                {
                    "command": [
                        "by rewrite -!size_poly_eq0 size_map_polyC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_polyC",
            "line_nb": 1424,
            "steps": [
                {
                    "command": [
                        "by rewrite rootE horner_map polyC_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyE",
            "line_nb": 1427,
            "steps": [
                {
                    "command": [
                        "by rewrite [p \\Po q]horner_poly; apply: eq_bigr => i _; rewrite mul_polyC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coef_comp_poly",
            "line_nb": 1430,
            "steps": [
                {
                    "command": [
                        "by rewrite comp_polyE coef_sum; apply: eq_bigr => i; rewrite coefZ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOver_comp",
            "line_nb": 1433,
            "steps": [
                {
                    "command": [
                        "move=> p q /polyOverP Sp Sq; rewrite comp_polyE rpred_sum // => i _.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite polyOverZ ?rpredX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyCr",
            "line_nb": 1437,
            "steps": [
                {
                    "command": [
                        "exact: horner_map.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_poly0r",
            "line_nb": 1440,
            "steps": [
                {
                    "command": [
                        "by rewrite comp_polyCr horner_coef0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyC",
            "line_nb": 1443,
            "steps": [
                {
                    "command": [
                        "by rewrite /(_ \\Po p) map_polyC hornerC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_poly_is_linear",
            "line_nb": 1446,
            "steps": [
                {
                    "command": [
                        "move=> a q r.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite /comp_poly rmorphD /= map_polyZ !hornerE_comm mul_polyC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_poly0",
            "line_nb": 1452,
            "steps": [
                {
                    "command": [
                        "exact: raddf0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyD",
            "line_nb": 1455,
            "steps": [
                {
                    "command": [
                        "exact: raddfD.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyB",
            "line_nb": 1458,
            "steps": [
                {
                    "command": [
                        "exact: raddfB.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyZ",
            "line_nb": 1461,
            "steps": [
                {
                    "command": [
                        "exact: linearZZ.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyXr",
            "line_nb": 1464,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}/(idfun p) poly_initial.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyX",
            "line_nb": 1467,
            "steps": [
                {
                    "command": [
                        "by rewrite /(_ \\Po p) map_polyX hornerX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_poly_MXaddC",
            "line_nb": 1470,
            "steps": [
                {
                    "command": [
                        "by rewrite /(_ \\Po q) rmorphD rmorphM /= map_polyX map_polyC hornerMXaddC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyXaddC_K",
            "line_nb": 1473,
            "steps": [
                {
                    "command": [
                        "have addzK: ('X + z%:P) \\Po ('X - z%:P) = 'X.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite raddfD /= comp_polyC comp_polyX subrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim/poly_ind: p => [|p c IHp]; first by rewrite !comp_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite comp_poly_MXaddC linearD /= comp_polyC {1}/comp_poly rmorphM /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite hornerM_comm /comm_poly -!/(_ \\Po _) ?IHp ?addzK ?commr_polyX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_comp_poly_leq",
            "line_nb": 1480,
            "steps": [
                {
                    "command": [
                        "rewrite comp_polyE (leq_trans (size_sum _ _ _)) //; apply/bigmax_leqP => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite (leq_trans (size_scale_leq _ _)) // (leq_trans (size_exp_leq _ _)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnS mulnC leq_mul // -{2}(subnKC (valP i)) leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_comp_poly",
            "line_nb": 1487,
            "steps": [
                {
                    "command": [
                        "elim/poly_ind: p => [|p a IHp]; first by rewrite !raddf0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite comp_poly_MXaddC !rmorphD !rmorphM /= !map_polyC map_polyX.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite comp_poly_MXaddC -IHp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_mul_comm",
            "line_nb": 1495,
            "steps": [
                {
                    "command": [
                        "apply/polyP=> i; rewrite coefM coefMr.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => j _; rewrite mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hornerM",
            "line_nb": 1503,
            "steps": [
                {
                    "command": [
                        "by rewrite hornerM_comm //; apply: mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_exp",
            "line_nb": 1506,
            "steps": [
                {
                    "command": [
                        "by rewrite horner_exp_comm //; apply: mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_prod",
            "line_nb": 1509,
            "steps": [
                {
                    "command": [
                        "by elim/big_rec2: _ => [|i _ p _ <-]; rewrite (hornerM, hornerC).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_evalE",
            "line_nb": 1514,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_eval_is_lrmorphism",
            "line_nb": 1517,
            "steps": [
                {
                    "command": [
                        "have cxid: commr_rmorph idfun x by apply: mulrC.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have evalE : horner_eval x =1 horner_morph cxid.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move=> p; congr _.[x]; rewrite map_poly_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=> [|c p]; last by rewrite !evalE /= -linearZ.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by do 2?split=> [p q|]; rewrite !evalE (rmorphB, rmorphM, rmorph1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_poly_multiplicative",
            "line_nb": 1528,
            "steps": [
                {
                    "command": [
                        "split=> [p1 p2|]; last by rewrite comp_polyC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /comp_poly rmorphM hornerM_comm //; apply: mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyM",
            "line_nb": 1534,
            "steps": [
                {
                    "command": [
                        "exact: rmorphM.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_polyA",
            "line_nb": 1537,
            "steps": [
                {
                    "command": [
                        "elim/poly_ind: p => [|p c IHp]; first by rewrite !comp_polyC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !comp_polyD !comp_polyM !comp_polyX IHp !comp_polyC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "horner_comp",
            "line_nb": 1541,
            "steps": [
                {
                    "command": [
                        "by apply: polyC_inj; rewrite -!comp_polyCr comp_polyA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_comp",
            "line_nb": 1544,
            "steps": [
                {
                    "command": [
                        "by rewrite !rootE horner_comp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deriv_comp",
            "line_nb": 1547,
            "steps": [
                {
                    "command": [
                        "elim/poly_ind: p => [|p c IHp]; first by rewrite !(deriv0, comp_poly0) mul0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite comp_poly_MXaddC derivD derivC derivM IHp derivMXaddC comp_polyD.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite comp_polyM comp_polyX addr0 addrC mulrAC -mulrDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deriv_exp",
            "line_nb": 1552,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn]; first by rewrite expr0 mulr0n derivC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS derivM {}IHn (mulrC p) mulrnAl -mulrA -exprSr mulrS; case n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_mul",
            "line_nb": 1563,
            "steps": [
                {
                    "command": [
                        "by move=> nz_p nz_q; rewrite -size_proper_mul ?mulf_neq0 ?lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_idomainAxiom",
            "line_nb": 1566,
            "steps": [
                {
                    "command": [
                        "move=> pq0; apply/norP=> [[p_nz q_nz]]; move/eqP: (size_mul p_nz q_nz).",
                        "VernacExtend",
                        "dffee33afc6977d6aca43b282561ec7ced1503c9"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym pq0 size_poly0 (polySpred p_nz) (polySpred q_nz) addnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_mulVp",
            "line_nb": 1572,
            "steps": [
                {
                    "command": [
                        "move=> p Up; rewrite /poly_inv Up.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case/andP: Up => /size_poly1P[c _ ->]; rewrite coefC -polyC_mul => /mulVr->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_intro_unit",
            "line_nb": 1576,
            "steps": [
                {
                    "command": [
                        "move=> pq1; apply/andP; split; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/unitrP; exists q`_0.",
                        "VernacExtend",
                        "7b7f15d62da91febfaeb70d9c6ba79302af40b3f"
                    ]
                },
                {
                    "command": [
                        "by rewrite 2!mulrC -!/(coefp 0 _) -rmorphM pq1 rmorph1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: size (q * p) == 1%N by rewrite pq1 size_poly1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0; first by rewrite mulr0 size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [-> | nz_q] := eqVneq q 0; first by rewrite mul0r size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite size_mul // (polySpred nz_p) (polySpred nz_q) addnS addSn !eqSS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addn_eq0 => /andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_inv_out",
            "line_nb": 1586,
            "steps": [
                {
                    "command": [
                        "by rewrite /poly_inv => p /negbTE/= ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_unitE",
            "line_nb": 1598,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_invE",
            "line_nb": 1601,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyC_inv",
            "line_nb": 1604,
            "steps": [
                {
                    "command": [
                        "have [/rmorphV-> // | nUc] := boolP (c \\in GRing.unit).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !invr_out // poly_unitE coefC (negbTE nUc) andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootM",
            "line_nb": 1608,
            "steps": [
                {
                    "command": [
                        "by rewrite !rootE hornerM mulf_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rootZ",
            "line_nb": 1611,
            "steps": [
                {
                    "command": [
                        "by move=> nz_a; rewrite -mul_polyC rootM rootC (negPf nz_a).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_scale",
            "line_nb": 1614,
            "steps": [
                {
                    "command": [
                        "by move/lregP/lreg_size->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_Cmul",
            "line_nb": 1617,
            "steps": [
                {
                    "command": [
                        "by rewrite mul_polyC => /size_scale->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coefM",
            "line_nb": 1620,
            "steps": [
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0; first by rewrite !(mul0r, lead_coef0).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [-> | nz_q] := eqVneq q 0; first by rewrite !(mulr0, lead_coef0).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite lead_coef_proper_mul // mulf_neq0 ?lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coefZ",
            "line_nb": 1625,
            "steps": [
                {
                    "command": [
                        "by rewrite -mul_polyC lead_coefM lead_coefC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scale_poly_eq0",
            "line_nb": 1628,
            "steps": [
                {
                    "command": [
                        "by rewrite -mul_polyC mulf_eq0 polyC_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_prod",
            "line_nb": 1631,
            "steps": [
                {
                    "command": [
                        "move=> nzF; transitivity (\\sum_(i | P i) (size (F i)).-1).+1; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: canRL (addKn _) _; rewrite addnS -sum1_card -big_split /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by congr _.+1; apply: eq_bigr => i /nzF/polySpred.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim/big_rec2: _ => [|i d p /nzF nzFi IHp]; first by rewrite size_poly1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_mul // -?size_poly_eq0 IHp // addnS polySpred.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_prod_seq",
            "line_nb": 1638,
            "steps": [
                {
                    "command": [
                        "move=> nzF; rewrite big_tnth size_prod; last by move=> i; rewrite nzF ?mem_tnth.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite cardT /= size_enum_ord [in RHS]big_tnth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_mul_eq1",
            "line_nb": 1642,
            "steps": [
                {
                    "command": [
                        "have [->|pNZ] := eqVneq p 0; first by rewrite mul0r size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [->|qNZ] := eqVneq q 0; first by rewrite mulr0 size_poly0 andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite size_mul //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move: pNZ qNZ; rewrite -!size_poly_gt0; (do 2 case: size) => //= n [|[|]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_prod_seq_eq1",
            "line_nb": 1648,
            "steps": [
                {
                    "command": [
                        "have -> : (size (\\prod_(i <- s | P i) F i) == 1%N) = (all [pred i | P i ==> (size (F i) == 1%N)] s).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "elim: s => [|a s IHs /=]; first by rewrite big_nil size_poly1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite big_cons; case: (P a) => //=; rewrite size_mul_eq1 IHs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: (iffP allP) => /= [/(_ _ _)/implyP /(_ _)/eqP|] sF_eq1 i.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by move=> /andP[Pi si]; rewrite sF_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=> si; apply/implyP => Pi; rewrite sF_eq1 ?Pi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_prod_eq1",
            "line_nb": 1656,
            "steps": [
                {
                    "command": [
                        "apply: (iffP (size_prod_seq_eq1 _ _ _)) => Hi i.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by move=> Pi; apply: Hi; rewrite Pi /= mem_index_enum.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mem_index_enum andbT; apply: Hi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_exp",
            "line_nb": 1661,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn]; first by rewrite size_poly1 muln0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0; first by rewrite exprS mul0r size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite exprS size_mul ?expf_neq0 // mulnS -{}IHn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite polySpred // [size (p ^+ n)]polySpred ?expf_neq0 ?addnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_exp",
            "line_nb": 1667,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn]; first by rewrite !expr0 lead_coef1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !exprS lead_coefM IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_prod_XsubC",
            "line_nb": 1671,
            "steps": [
                {
                    "command": [
                        "elim: rs => [|a rs IHrs]; first by rewrite rootE big_nil hornerC oner_eq0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite big_cons rootM IHrs root_XsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_exp_XsubC",
            "line_nb": 1675,
            "steps": [
                {
                    "command": [
                        "by rewrite rootE horner_exp expf_eq0 [_ == 0]root_XsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_comp_poly",
            "line_nb": 1678,
            "steps": [
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0; first by rewrite comp_poly0 size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [/size1_polyC-> | nc_q] := leqP (size q) 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite comp_polyCr !size_polyC -!sub1b -!subnS muln0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nz_q: q != 0 by rewrite -size_poly_eq0 -(subnKC nc_q).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite mulnC comp_polyE (polySpred nz_p) /= big_ord_recr /= addrC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite size_addl size_scale ?lead_coef_eq0 ?size_exp //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite [X in _ < X]polySpred ?expf_neq0 // ltnS size_exp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (leq_trans (size_sum _ _ _)) //; apply/bigmax_leqP => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite (leq_trans (size_scale_leq _ _)) // polySpred ?expf_neq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_exp -(subnKC nc_q) ltn_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_comp",
            "line_nb": 1690,
            "steps": [
                {
                    "command": [
                        "move=> q_gt1; rewrite !lead_coefE coef_comp_poly size_comp_poly.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have [->|nz_p] := eqVneq p 0; first by rewrite size_poly0 big_ord0 coef0 mul0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite polySpred //= big_ord_recr /= big1 ?add0r => [|i _].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!lead_coefE -lead_coef_exp !lead_coefE size_exp mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite [X in _ * X]nth_default ?mulr0 ?(leq_trans (size_exp_leq _ _)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulnC ltn_mul2r -subn1 subn_gt0 q_gt1 /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_poly_eq0",
            "line_nb": 1698,
            "steps": [
                {
                    "command": [
                        "move=> sq_gt1; rewrite -!lead_coef_eq0 lead_coef_comp //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite mulf_eq0 expf_eq0 !lead_coef_eq0 -[q == 0]size_poly_leq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite [_ <= 0]leqNgt (leq_ltn_trans _ sq_gt1) ?andbF ?orbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_comp_poly2",
            "line_nb": 1703,
            "steps": [
                {
                    "command": [
                        "move=> sq2; have [->|pN0] := eqVneq p 0; first by rewrite comp_polyC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite polySpred ?size_comp_poly ?comp_poly_eq0 ?sq2 // muln1 polySpred.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_poly2_eq0",
            "line_nb": 1707,
            "steps": [
                {
                    "command": [
                        "by rewrite -!size_poly_eq0 => /size_comp_poly2->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_poly_roots",
            "line_nb": 1710,
            "steps": [
                {
                    "command": [
                        "elim: rs p => [p pn0 _ _ | r rs ihrs p pn0] /=; first by rewrite size_poly_gt0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/andP => rpr arrs /andP [rnrs urs]; case/factor_theorem: rpr => q epq.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "case: (altP (q =P 0)) => [q0 | ?]; first by move: pn0; rewrite epq q0 mul0r eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have -> : size p = (size q).+1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite epq size_Mmonic ?monicXsubC // size_XsubC addnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff /eq_in_all h : {in rs, root q =1 root p} by apply: ihrs => //; rewrite h.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "move=> x xrs; rewrite epq rootM root_XsubC orbC; case: (altP (x =P r)) => // exr.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "by move: rnrs; rewrite -exr xrs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "roots_geq_poly_eq0",
            "line_nb": 1720,
            "steps": [
                {
                    "command": [
                        "by move=> ??; apply: contraTeq => ?; rewrite leqNgt max_poly_roots.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_map_poly",
            "line_nb": 1733,
            "steps": [
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0; first by rewrite rmorph0 !size_poly0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_poly_eq // fmorph_eq0 // lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lead_coef_map",
            "line_nb": 1737,
            "steps": [
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0; first by rewrite !(rmorph0, lead_coef0).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite lead_coef_map_eq // fmorph_eq0 // lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_poly_eq0",
            "line_nb": 1741,
            "steps": [
                {
                    "command": [
                        "by rewrite -!size_poly_eq0 size_map_poly.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_poly_inj",
            "line_nb": 1744,
            "steps": [
                {
                    "command": [
                        "move=> p q eqfpq; apply/eqP; rewrite -subr_eq0 -map_poly_eq0.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite rmorphB /= eqfpq subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_monic",
            "line_nb": 1748,
            "steps": [
                {
                    "command": [
                        "by rewrite monicE lead_coef_map fmorph_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_poly_com",
            "line_nb": 1751,
            "steps": [
                {
                    "command": [
                        "exact: map_comm_poly (mulrC x _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmorph_root",
            "line_nb": 1754,
            "steps": [
                {
                    "command": [
                        "by rewrite rootE horner_map // fmorph_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmorph_unity_root",
            "line_nb": 1757,
            "steps": [
                {
                    "command": [
                        "by rewrite !unity_rootE -(inj_eq (fmorph_inj f)) rmorphX ?rmorph1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmorph_primitive_root",
            "line_nb": 1760,
            "steps": [
                {
                    "command": [
                        "by congr (_ && _); apply: eq_forallb => i; rewrite fmorph_unity_root.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_roots_prod_XsubC",
            "line_nb": 1770,
            "steps": [
                {
                    "command": [
                        "elim: rs => [|z rs IHrs] /=; first by rewrite big_nil; exists p; rewrite mulr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/andP=> rpz rprs /andP[drs urs]; case: IHrs => {urs rprs}// q def_p.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "have [|q' def_q] := factor_theorem q z _; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists q'; rewrite big_cons mulrA -def_q.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite {p}def_p in rpz.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim/last_ind: rs drs rpz => [|rs t IHrs] /=; first by rewrite big_nil mulr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite all_rcons => /andP[/andP[/eqP czt Uzt] /IHrs {IHrs}IHrs].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -cats1 big_cat big_seq1 /= mulrA rootE hornerM_comm; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /comm_poly hornerXsubC mulrBl mulrBr czt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite hornerXsubC -opprB mulrN oppr_eq0 -(mul0r (t - z)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (inj_eq (mulIr Uzt)) => /IHrs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_ring_poly_roots",
            "line_nb": 1783,
            "steps": [
                {
                    "command": [
                        "move=> nz_p _ /(@uniq_roots_prod_XsubC p)[// | q def_p]; rewrite def_p in nz_p *.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have nz_q: q != 0 by apply: contraNneq nz_p => ->; rewrite mul0r.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite size_Mmonic ?monic_prod_XsubC // (polySpred nz_q) addSn /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_prod_XsubC leq_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_roots_prod_XsubC",
            "line_nb": 1789,
            "steps": [
                {
                    "command": [
                        "move=> size_p /uniq_roots_prod_XsubC def_p Urs.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case/def_p: Urs => q -> {p def_p} in size_p *.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have [q0 | nz_q] := eqVneq q 0; first by rewrite q0 mul0r size_poly0 in size_p.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have{q nz_q size_p} /size_poly1P[c _ ->]: size q == 1%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(eqn_add2r (size rs)) add1n -size_p.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_Mmonic ?monic_prod_XsubC // size_prod_XsubC addnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite lead_coef_Mmonic ?monic_prod_XsubC // lead_coefC mul_polyC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly2_root",
            "line_nb": 1802,
            "steps": [
                {
                    "command": [
                        "case: p => [[|p0 [|p1 []]] //= nz_p1]; exists (- p0 / p1).",
                        "VernacExtend",
                        "94e75391bedd5a5237100f0029dabc4fdb54c671"
                    ]
                },
                {
                    "command": [
                        "by rewrite /root addr_eq0 /= mul0r add0r mulrC divfK ?opprK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_rootsE",
            "line_nb": 1806,
            "steps": [
                {
                    "command": [
                        "elim: rs => //= r rs ->; congr (_ && _); rewrite -has_pred1 -all_predC.",
                        "VernacExtend",
                        "5a65f2f452dc5f660f0d7e19f058a7f083f0f509"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_all => t; rewrite /diff_roots mulrC eqxx unitfE subr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_unity_roots",
            "line_nb": 1812,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0 rs_n_1 Urs; have szPn := size_Xn_sub_1 F n_gt0.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS -szPn max_poly_roots -?size_poly_eq0 ?szPn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_unity_roots",
            "line_nb": 1816,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0 rs_n_1 Urs sz_rs_n x; rewrite -topredE /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply/idP/idP=> xn1; last exact: (allP rs_n_1).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: contraFT (ltnn n) => not_rs_x.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}sz_rs_n (@max_unity_roots (x :: rs)) //= ?xn1 ?not_rs_x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor_Xn_sub_1",
            "line_nb": 1825,
            "steps": [
                {
                    "command": [
                        "transitivity (\\prod_(w <- zn) ('X - w%:P)); first by rewrite big_map.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have n_gt0: n > 0 := prim_order_gt0 prim_z.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (@all_roots_prod_XsubC _ ('X^n - 1) zn); first 1 last.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_Xn_sub_1 // size_map size_iota subn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply/allP=> _ /mapP[i _ ->] /=; rewrite rootE !hornerE hornerXn.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprAC (prim_expr_order prim_z) expr1n subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite uniq_rootsE map_inj_in_uniq ?iota_uniq // => i j.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite !mem_index_iota => ltin ltjn /eqP.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eq_prim_root_expr prim_z) !modn_small // => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (monicP (monic_Xn_sub_1 F n_gt0)) scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prim_rootP",
            "line_nb": 1840,
            "steps": [
                {
                    "command": [
                        "move=> xn1; pose logx := [pred i : 'I_n | x == z ^+ i].",
                        "VernacExtend",
                        "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
                    ]
                },
                {
                    "command": [
                        "case: (pickP logx) => [i /eqP-> | no_i]; first by exists i.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: notF; suffices{no_i}: x \\in zn.",
                        "VernacExtend",
                        "d229520328a78430d3503dbb92bb8fe621f82ca4"
                    ]
                },
                {
                    "command": [
                        "case/mapP=> i; rewrite mem_index_iota => lt_i_n def_x.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(no_i (Ordinal lt_i_n)) /= -def_x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -root_prod_XsubC big_map factor_Xn_sub_1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite [root _ x]unity_rootE xn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_diff_roots",
            "line_nb": 1853,
            "steps": [
                {
                    "command": [
                        "rewrite /diff_roots -rmorphB // fmorph_unit // subr_eq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite rmorph_comm // eqxx eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_uniq_roots",
            "line_nb": 1857,
            "steps": [
                {
                    "command": [
                        "elim: s => //= x s ->; congr (_ && _); elim: s => //= y s ->.",
                        "VernacExtend",
                        "ba16a1920ff36b5e8a13c07eade50afb2db7eef5"
                    ]
                },
                {
                    "command": [
                        "by rewrite map_diff_roots -negb_or.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aut_prim_rootP",
            "line_nb": 1865,
            "steps": [
                {
                    "command": [
                        "move=> prim_z; have:= prim_z; rewrite -(fmorph_primitive_root u) => prim_uz.",
                        "VernacExtend",
                        "607ef7ae8426c7af043bed1740cc4d7c951b3085"
                    ]
                },
                {
                    "command": [
                        "have [[k _] /= def_uz] := prim_rootP prim_z (prim_expr_order prim_uz).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists k; rewrite // -(prim_root_exp_coprime _ prim_z) -def_uz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aut_unity_rootP",
            "line_nb": 1870,
            "steps": [
                {
                    "command": [
                        "by move=> _ /prim_order_exists[// | m /(aut_prim_rootP u)[k]]; exists k.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aut_unity_rootC",
            "line_nb": 1873,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0 /(aut_unity_rootP _ n_gt0) def_z.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [[i def_uz] [j def_vz]] := (def_z u, def_z v).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(def_uz, def_vz, rmorphX) exprAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_factor_theorem",
            "line_nb": 1901,
            "steps": [
                {
                    "command": [
                        "pose polyT (p : seq F) := (foldr (fun c f => f * 'X_0 + c%:T) (0%R)%:T p)%T.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have eval_polyT (q : {poly F}) x : GRing.eval [:: x] (polyT q) = q.[x].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite /horner; elim: (val q) => //= ? ? ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: size {-2}p (leqnn (size p)) => {p} [p|n IHn p].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by move=> /size_poly_leq0P->; exists [::], 0; rewrite mul0r eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /decPcases /= := @satP F [::] ('exists 'X_0, polyT p == 0%T).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: ifP => [_ /sig_eqW[x]|_ noroot]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists [::], p; rewrite big_nil mulr1; split => // p_neq0 x.",
                        "VernacExtend",
                        "5a40b1a21a23ab0b6f0527c290fc1d06201e34a2"
                    ]
                },
                {
                    "command": [
                        "by apply/negP=> /rootP rpx; apply noroot; exists x; rewrite eval_polyT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite eval_polyT => /rootP /factor_theorem /sig_eqW [q ->].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have [->|q_neq0] := eqVneq q 0; first by exists [::], 0; rewrite !mul0r eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite size_mul ?polyXsubC_eq0 // ?size_XsubC addn2 /= ltnS => sq_le_n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have [] // := IHn q => s [r [-> nr]]; exists (s ++ [::x]), r.",
                        "VernacExtend",
                        "507ab80172f400285407e2ed9bfa684ed16df254"
                    ]
                },
                {
                    "command": [
                        "by rewrite big_cat /= big_seq1 mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closed_rootP",
            "line_nb": 1923,
            "steps": [
                {
                    "command": [
                        "have [-> | nz_p] := eqVneq p 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_poly0; left; exists 0; rewrite root0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite neq_ltn {1}polySpred //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: (iffP idP) => [p_gt1 | [a]]; last exact: root_size_gt1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "pose n := (size p).-1; have n_gt0: n > 0 by rewrite -ltnS -polySpred.",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "have [a Dan] := closedF (fun i => - p`_i / lead_coef p) n_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists a; apply/rootP; rewrite horner_coef polySpred // big_ord_recr /= -/n.",
                        "VernacExtend",
                        "261298f2d9addf233cbef8bfd1953fed7a848be9"
                    ]
                },
                {
                    "command": [
                        "rewrite {}Dan mulr_sumr -big_split big1 //= => i _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!mulrA mulrCA mulNr mulVKf ?subrr ?lead_coef_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closed_nonrootP",
            "line_nb": 1934,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [nz_p | [x]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: contraNneq => ->; apply: root0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [[x /rootP p1x0]|] := altP (closed_rootP (p - 1)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists x; rewrite -[p](subrK 1) /root hornerD p1x0 add0r hornerC oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite negbK => /size_poly1P[c _ /(canRL (subrK 1)) Dp].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by exists 0; rewrite Dp -raddfD polyC_eq0 rootC in nz_p *.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closed_field_poly_normal",
            "line_nb": 1954,
            "steps": [
                {
                    "command": [
                        "apply: sig_eqW; have [r [q [->]]] /= := dec_factor_theorem p.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "have [->|] := altP eqP; first by exists [::]; rewrite mul0r lead_coef0 scale0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [[x rqx ? /(_ isT x) /negP /(_ rqx)] //|] := altP (closed_rootP q).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite negbK => /size_poly1P [c c_neq0-> _ _]; exists r.",
                        "VernacExtend",
                        "c12ed0f0fc4929aecf58a3bfd58ebd00ef54534e"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_polyC lead_coefZ (monicP _) ?mulr1 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite monic_prod => // i; rewrite monicXsubC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}