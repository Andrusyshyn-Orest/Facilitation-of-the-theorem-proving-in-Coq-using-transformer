{
    "filename": "mathcomp/solvable/primitive_action.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat.",
            "VernacRequire",
            "cde73c7658e0eadb37efe990dcc06bba4e84e143"
        ],
        [
            "From mathcomp Require Import div seq fintype tuple finset.",
            "VernacRequire",
            "1148521b338bee4836dfb015204562e55d0168c9"
        ],
        [
            "From mathcomp Require Import fingroup action gseries.",
            "VernacRequire",
            "f26a385ddb8e87757781cf275f4dd8eda0a45f05"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Section PrimitiveDef.",
            "VernacBeginSection",
            "cd4a5c96164afb24244167fb088dcf659e0b32b6"
        ],
        [
            "Variables (aT : finGroupType) (sT : finType).",
            "VernacAssumption",
            "acf02ee4e0875067997155e9cd4e6ca3772d3069"
        ],
        [
            "Variables (A : {set aT}) (S : {set sT}) (to : {action aT &-> sT}).",
            "VernacAssumption",
            "8a8bc76be9a3b60763a2c1d02aee1d771f79c190"
        ],
        [
            "Definition imprimitivity_system Q := [&& partition Q S, [acts A, on Q | to^*] & 1 < #|Q| < #|S|].",
            "VernacDefinition",
            "5d80586f3b7542b9a0728e7c6f81af7490500e25"
        ],
        [
            "Definition primitive := [transitive A, on S | to] && ~~ [exists Q, imprimitivity_system Q].",
            "VernacDefinition",
            "3631eb49fc670866e35919ea5e14b669f9a97d44"
        ],
        [
            "End PrimitiveDef.",
            "VernacEndSegment",
            "36a5e5d41f782ed383602ee4e5570bfe6f1b18cd"
        ],
        [
            "Arguments imprimitivity_system {aT sT} A%g S%g to%act Q%g.",
            "VernacArguments",
            "7c5da653fd0ae3d423dc9cbd07d48b53dadf479a"
        ],
        [
            "Arguments primitive {aT sT} A%g S%g to%act.",
            "VernacArguments",
            "019b99f35e25be4ecc6d3b199f5681e4b3830033"
        ],
        [
            "Notation \"[ 'primitive' A , 'on' S | to ]\" := (primitive A S to) (at level 0, format \"[ 'primitive' A , 'on' S | to ]\") : form_scope.",
            "VernacNotation",
            "d055689527c858cd35e4db6000c77c036050715b"
        ],
        [
            "Section Primitive.",
            "VernacBeginSection",
            "34425f6794855b8bb339a5b935483bdc16363aae"
        ],
        [
            "Variables (aT : finGroupType) (sT : finType).",
            "VernacAssumption",
            "acf02ee4e0875067997155e9cd4e6ca3772d3069"
        ],
        [
            "Variables (G : {group aT}) (to : {action aT &-> sT}) (S : {set sT}).",
            "VernacAssumption",
            "77e226d1ea5cf7e88ebf017e3ee5fe0c77dccdeb"
        ],
        [
            "Lemma trans_prim_astab x : x \\in S -> [transitive G, on S | to] -> [primitive G, on S | to] = maximal_eq 'C_G[x | to] G.",
            "VernacStartTheoremProof",
            "98bca2b5db4f641e35afd5e35a4ff71bff0b57f1"
        ],
        [
            "move=> Sx trG; rewrite /primitive trG negb_exists.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply/forallP/maximal_eqP=> /= [primG | [_ maxCx] Q].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split=> [|H sCH sHG]; first exact: subsetIl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose X := orbit to H x; pose Q := orbit (to^*)%act G X.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have Xx: x \\in X by apply: orbit_refl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defH: 'N_(G)(X | to) = H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have trH: [transitive H, on X | to] by apply/imsetP; exists x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sHN: H \\subset 'N_G(X | to) by rewrite subsetI sHG atrans_acts.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/(subgroup_transitiveP Xx sHN): (trH) => /= <-.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite mulSGid //= setIAC subIset ?sCH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/imsetP; exists x => //; apply/eqP.",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "by rewrite eqEsubset imsetS // acts_sub_orbit ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [|/proper_card oCH] := eqVproper sCH; [by left | right].",
            "VernacExtend",
            "74c208cfa1a74d038dd37fe5c49a3b0f031fc1b6"
        ],
        [
            "apply/eqP; rewrite eqEcard sHG leqNgt.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: contra {primG}(primG Q) => oHG; apply/and3P; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite card_orbit astab1_set defH -(@ltn_pmul2l #|H|) ?Lagrange // muln1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite oHG -(@ltn_pmul2l #|H|) ?Lagrange // -(card_orbit_stab to G x).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(atransP trG x Sx) mulnC card_orbit ltn_pmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply/actsP=> a Ga Y; apply/orbit_transl/mem_orbit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/and3P; split; last 1 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite orbit_sym; apply/imsetP=> [[a _]] /= defX.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite defX /setact imset0 inE in Xx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/eqP/setP=> y; apply/bigcupP/idP=> [[_ /imsetP[a Ga ->]] | Sy].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "case/imsetP=> _ /imsetP[b Hb ->] ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite !(actsP (atrans_acts trG)) //; apply: subsetP Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (atransP2 trG Sx Sy) => a Ga ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists ((to^*)%act X a); apply: mem_imset; rewrite // orbit_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/trivIsetP=> _ _ /imsetP[a Ga ->] /imsetP[b Gb ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: contraR => /exists_inP[_ /imsetP[_ /imsetP[a1 Ha1 ->] ->]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case/imsetP=> _ /imsetP[b1 Hb1 ->] /(canLR (actK _ _)) /(canLR (actK _ _)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -(canF_eq (actKV _ _)) -!actM (sameP eqP astab1P) => /astab1P Cab.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite astab1_set (subsetP (subsetIr G _)) //= defH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(groupMr _ (groupVr Hb1)) -mulgA -(groupMl _ Ha1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (subsetP sCH) // inE Cab !groupM ?groupV // (subsetP sHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/and3P=> [[/and3P[/eqP defS tIQ ntQ]]]; set sto := (to^*)%act => actQ.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite !ltnNge -negb_or => /orP[].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "pose X := pblock Q x; have Xx: x \\in X by rewrite mem_pblock defS.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have QX: X \\in Q by rewrite pblock_mem ?defS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have toX Y a: Y \\in Q -> a \\in G -> to x a \\in Y -> sto X a = Y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> QY Ga Yxa; rewrite -(contraNeq (trivIsetP tIQ Y (sto X a) _ _)) //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (actsP actQ).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/existsP; exists (to x a); rewrite /= Yxa; apply: mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defQ: Q = orbit (to^*)%act G X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset andbC acts_sub_orbit // QX.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/subsetP=> Y QY.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have /set0Pn[y Yy]: Y != set0 by apply: contraNneq ntQ => <-.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Sy: y \\in S by rewrite -defS; apply/bigcupP; exists Y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [a Ga def_y] := atransP2 trG Sx Sy.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/imsetP; exists a; rewrite // (toX Y) // -def_y.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite defQ card_orbit; case: (maxCx 'C_G[X | sto]%G) => /= [||->|->].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/subsetP=> a /setIP[Ga cxa]; rewrite inE Ga /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply/astab1P; rewrite (toX X) // (astab1P cxa).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: subsetIl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by right; rewrite -card_orbit (atransP trG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by left; rewrite indexgg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prim_trans_norm (H : {group aT}) : [primitive G, on S | to] -> H <| G -> H \\subset 'C_G(S | to) \\/ [transitive H, on S | to].",
            "VernacStartTheoremProof",
            "7982dfb73d6cb046a63b61afe115956de0084846"
        ],
        [
            "move=> primG /andP[sHG nHG]; rewrite subsetI sHG.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have [trG _] := andP primG; have [x Sx defS] := imsetP trG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "move: primG; rewrite (trans_prim_astab Sx) // => /maximal_eqP[_].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case/(_ ('C_G[x | to] <*> H)%G) => /= [||cxH|]; first exact: joing_subl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite join_subG subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "have{cxH} cxH: H \\subset 'C_G[x | to] by rewrite -cxH joing_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite subsetI sHG /= in cxH; left; apply/subsetP=> a Ha.",
            "VernacExtend",
            "c7d1c7d09ecd89d8bc2113ace17e973d2ced1bab"
        ],
        [
            "apply/astabP=> y Sy; have [b Gb ->] := atransP2 trG Sx Sy.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite actCJV [to x (a ^ _)](astab1P _) ?(subsetP cxH) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -mem_conjg (normsP nHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite norm_joinEl 1?subIset ?nHG //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move/(subgroup_transitiveP Sx sHG trG); right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Primitive.",
            "VernacEndSegment",
            "18ee8d4459fed610f4a31ae6607da7a55d51dc44"
        ],
        [
            "Section NactionDef.",
            "VernacBeginSection",
            "b62c0151e21c81a0bedab681f7d8c28220ceba57"
        ],
        [
            "Variables (gT : finGroupType) (sT : finType).",
            "VernacAssumption",
            "4d63e07cfdc48b020db9545469b90a99062f7fc1"
        ],
        [
            "Variables (to : {action gT &-> sT}) (n : nat).",
            "VernacAssumption",
            "8083dc422a77b3799194f87a67689b9d1a0550d4"
        ],
        [
            "Definition n_act (t : n.-tuple sT) a := [tuple of map (to^~ a) t].",
            "VernacDefinition",
            "a195471490185778aeb326d0736c33ebcf787766"
        ],
        [
            "Fact n_act_is_action : is_action setT n_act.",
            "VernacStartTheoremProof",
            "f2c0ee55c33d628239b760464ae1d2f93cefb9f0"
        ],
        [
            "by apply: is_total_action => [t|t a b]; apply: eq_from_tnth => i; rewrite !tnth_map ?act1 ?actM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical n_act_action := Action n_act_is_action.",
            "VernacDefinition",
            "83e7aafb1d8a09a81ab9b06022b93d1a63dfe964"
        ],
        [
            "End NactionDef.",
            "VernacEndSegment",
            "e2bad16c9c7a7b36204d875078d10d1eaed270ad"
        ],
        [
            "Notation \"to * n\" := (n_act_action to n) : action_scope.",
            "VernacNotation",
            "ed3541e3f192b521b98db99199c67f5bb39d3b8e"
        ],
        [
            "Section NTransitive.",
            "VernacBeginSection",
            "4dcd7081dbb7ece9ccac5b95ea375e19424d1f9d"
        ],
        [
            "Variables (gT : finGroupType) (sT : finType).",
            "VernacAssumption",
            "4d63e07cfdc48b020db9545469b90a99062f7fc1"
        ],
        [
            "Variables (n : nat) (A : {set gT}) (S : {set sT}) (to : {action gT &-> sT}).",
            "VernacAssumption",
            "d15dbcca7cb648a515a7f05c2470b55adc2c9341"
        ],
        [
            "Definition dtuple_on := [set t : n.-tuple sT | uniq t & t \\subset S].",
            "VernacDefinition",
            "d8acf2ab596f1fd75ffab2272e1010c553a4ec18"
        ],
        [
            "Definition ntransitive := [transitive A, on dtuple_on | to * n].",
            "VernacDefinition",
            "860a8c66d26781906c19818f672a9126ed61a947"
        ],
        [
            "Lemma dtuple_onP t : reflect (injective (tnth t) /\\ forall i, tnth t i \\in S) (t \\in dtuple_on).",
            "VernacStartTheoremProof",
            "dbf0e76a4e6cdddd3fb8c6b9e3e5ca310f1e6e37"
        ],
        [
            "rewrite inE subset_all -map_tnth_enum.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (uniq _) / (injectiveP (tnth t)) => f_inj; last by right; case.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -[all _ _]negbK -has_predC has_map has_predC negbK /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (iffP allP) => [Sf|[]//]; split=> // i; rewrite Sf ?mem_enum.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma n_act_dtuple t a : a \\in 'N(S | to) -> t \\in dtuple_on -> n_act to t a \\in dtuple_on.",
            "VernacStartTheoremProof",
            "c48579a2acb8ad9e2e9372ce7a342ed5eee19759"
        ],
        [
            "move/astabsP=> toSa /dtuple_onP[t_inj St]; apply/dtuple_onP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "split=> [i j | i]; rewrite !tnth_map ?[_ \\in S]toSa //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by move/act_inj; apply: t_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NTransitive.",
            "VernacEndSegment",
            "64576166a4282cf4a5f022ab1458a568f952a724"
        ],
        [
            "Arguments dtuple_on {sT} n%N S%g.",
            "VernacArguments",
            "bf5b7c2132c71aca4d9357f114e5ecffeb6019c4"
        ],
        [
            "Arguments ntransitive {gT sT} n%N A%g S%g to%act.",
            "VernacArguments",
            "27b6da678113e8d512bf15e6464896fc683f2b9d"
        ],
        [
            "Arguments n_act {gT sT} to {n} t a.",
            "VernacArguments",
            "84de6cfc2f3d270fb68e208f805f218a552dcedf"
        ],
        [
            "Notation \"n .-dtuple ( S )\" := (dtuple_on n S) (at level 8, format \"n .-dtuple ( S )\") : set_scope.",
            "VernacNotation",
            "8dd65fb5106ab9a333007385f3a407659b8f9460"
        ],
        [
            "Notation \"[ 'transitive' ^ n A , 'on' S | to ]\" := (ntransitive n A S to) (at level 0, n at level 8, format \"[ 'transitive' ^ n A , 'on' S | to ]\") : form_scope.",
            "VernacNotation",
            "672c493e2b5ebd5ad3b1d049884e4909757d6b8e"
        ],
        [
            "Section NTransitveProp.",
            "VernacBeginSection",
            "7871849770f92ebb069fd08b7a415aa23c8c7c3d"
        ],
        [
            "Variables (gT : finGroupType) (sT : finType).",
            "VernacAssumption",
            "4d63e07cfdc48b020db9545469b90a99062f7fc1"
        ],
        [
            "Variables (to : {action gT &-> sT}) (G : {group gT}) (S : {set sT}).",
            "VernacAssumption",
            "3081ca3211636e8e069ba4011645678a94d86ac6"
        ],
        [
            "Lemma card_uniq_tuple n (t : n.-tuple sT) : uniq t -> #|t| = n.",
            "VernacStartTheoremProof",
            "08a27044ff5343204c3403030e938297087334a9"
        ],
        [
            "by move/card_uniqP->; apply: size_tuple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma n_act0 (t : 0.-tuple sT) a : n_act to t a = [tuple].",
            "VernacStartTheoremProof",
            "48075952517d7dc7226a00562e622b3ab97193e6"
        ],
        [
            "exact: tuple0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dtuple_on_add n x (t : n.-tuple sT) : ([tuple of x :: t] \\in n.+1.-dtuple(S)) = [&& x \\in S, x \\notin t & t \\in n.-dtuple(S)].",
            "VernacStartTheoremProof",
            "0f4bcb6acf0b351f422c35ad884690b6c4b50471"
        ],
        [
            "by rewrite !inE memtE !subset_all -!andbA; do !bool_congr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dtuple_on_add_D1 n x (t : n.-tuple sT) : ([tuple of x :: t] \\in n.+1.-dtuple(S)) = (x \\in S) && (t \\in n.-dtuple(S :\\ x)).",
            "VernacStartTheoremProof",
            "306216c3cb7a8c66487193fa22c8700f54b78f10"
        ],
        [
            "rewrite dtuple_on_add !inE (andbCA (~~ _)); do 2!congr (_ && _).",
            "VernacExtend",
            "6a72213b8ff230d3c557d3c0d5b7e6e6d5c919ed"
        ],
        [
            "rewrite -!(eq_subset (in_set (mem t))) setDE setIC subsetI; congr (_ && _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite -setCS setCK sub1set !inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dtuple_on_subset n (S1 S2 : {set sT}) t : S1 \\subset S2 -> t \\in n.-dtuple(S1) -> t \\in n.-dtuple(S2).",
            "VernacStartTheoremProof",
            "f52a17e5776aafd85c7eba841c199cc2704d7237"
        ],
        [
            "by move=> sS12; rewrite !inE => /andP[-> /subset_trans]; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma n_act_add n x (t : n.-tuple sT) a : n_act to [tuple of x :: t] a = [tuple of to x a :: n_act to t a].",
            "VernacStartTheoremProof",
            "9ce31b03c0b6ae973ba2a2b4b6d497c8ffd00009"
        ],
        [
            "exact: val_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ntransitive0 : [transitive^0 G, on S | to].",
            "VernacStartTheoremProof",
            "670c9aa253bc05768115d38ab2fdca8e646c19c3"
        ],
        [
            "have dt0: [tuple] \\in 0.-dtuple(S) by rewrite inE memtE subset_all.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/imsetP; exists [tuple of Nil sT] => //.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by apply/setP=> x; rewrite [x]tuple0 orbit_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ntransitive_weak k m : k <= m -> [transitive^m G, on S | to] -> [transitive^k G, on S | to].",
            "VernacStartTheoremProof",
            "88e83c0cd23c6dda578e0adc494729c873088b90"
        ],
        [
            "move/subnKC <-; rewrite addnC; elim: {m}(m - k) => // m IHm.",
            "VernacExtend",
            "560765e33257f7d6c09471356613a37645807d60"
        ],
        [
            "rewrite addSn => tr_m1; apply: IHm; move: {m k}(m + k) tr_m1 => m tr_m1.",
            "VernacExtend",
            "5e8c001930445b402eabf7fc558c7bc173d75ae3"
        ],
        [
            "have ext_t t: t \\in dtuple_on m S -> exists x, [tuple of x :: t] \\in m.+1.-dtuple(S).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> dt.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [sSt | /subsetPn[x Sx ntx]] := boolP (S \\subset t); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists x; rewrite dtuple_on_add andbA /= Sx ntx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/imsetP: tr_m1 dt => t1; rewrite !inE => /andP[Ut1 St1] _ /andP[Ut _].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have /subset_leq_card := subset_trans St1 sSt.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !card_uniq_tuple // ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/imsetP: (tr_m1); case/tupleP=> [x t]; rewrite dtuple_on_add.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "case/and3P=> Sx ntx dt; set xt := [tuple of _] => tr_xt.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "apply/imsetP; exists t => //.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "apply/setP=> u; apply/idP/imsetP=> [du | [a Ga ->{u}]].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "case: (ext_t u du) => y; rewrite tr_xt.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case/imsetP=> a Ga [_ def_u]; exists a => //; apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: n_act to xt a \\in dtuple_on _ S by rewrite tr_xt mem_imset.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite n_act_add dtuple_on_add; case/and3P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ntransitive1 m : 0 < m -> [transitive^m G, on S | to] -> [transitive G, on S | to].",
            "VernacStartTheoremProof",
            "748c744d14ad12c022019152db65197e63f1709f"
        ],
        [
            "have trdom1 x: ([tuple x] \\in 1.-dtuple(S)) = (x \\in S).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite dtuple_on_add !inE memtE subset_all andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> m_gt0 /(ntransitive_weak m_gt0) {m m_gt0}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case/imsetP; case/tupleP=> x t0; rewrite {t0}(tuple0 t0) trdom1 => Sx trx.",
            "VernacExtend",
            "6042dc43156302d23b188b05386d953cdb248e4f"
        ],
        [
            "apply/imsetP; exists x => //; apply/setP=> y; rewrite -trdom1 trx.",
            "VernacExtend",
            "e9117678ab574c7b2c67a766017142cd191e8dff"
        ],
        [
            "by apply/imsetP/imsetP=> [[a ? [->]]|[a ? ->]]; exists a => //; apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ntransitive_primitive m : 1 < m -> [transitive^m G, on S | to] -> [primitive G, on S | to].",
            "VernacStartTheoremProof",
            "93de2d2b1ca9d14ba2b0f730d29d4bfa928dab4c"
        ],
        [
            "move=> lt1m /(ntransitive_weak lt1m) {m lt1m}tr2G.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have trG: [transitive G, on S | to] by apply: ntransitive1 tr2G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [x Sx _]:= imsetP trG; rewrite (trans_prim_astab Sx trG).",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "apply/maximal_eqP; split=> [|H]; first exact: subsetIl; rewrite subEproper.",
            "VernacExtend",
            "2522bb31d2ee5eb333bb7e2a816e0a3ac64f5b0e"
        ],
        [
            "case/predU1P; first by [left]; case/andP=> sCH /subsetPn[a Ha nCa] sHG.",
            "VernacExtend",
            "daf3ae91492d29731b7c57863cd8efbc0e8309d5"
        ],
        [
            "right; rewrite -(subgroup_transitiveP Sx sHG trG _) ?mulSGid //.",
            "VernacExtend",
            "659a076b1460ddc341bf9f74b080a8f7b40014b2"
        ],
        [
            "have actH := subset_trans sHG (atrans_acts trG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose y := to x a; have Sy: y \\in S by rewrite (actsP actH).",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have{nCa} yx: y != x by rewrite inE (sameP astab1P eqP) (subsetP sHG) in nCa.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/imsetP; exists y => //; apply/eqP.",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "rewrite eqEsubset acts_sub_orbit // Sy andbT; apply/subsetP=> z Sz.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have [-> | zx] := eqVneq z x; first by rewrite orbit_sym mem_orbit.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose ty := [tuple y; x]; pose tz := [tuple z; x].",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have [Sty Stz]: ty \\in 2.-dtuple(S) /\\ tz \\in 2.-dtuple(S).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !inE !memtE !subset_all /= !mem_seq1 !andbT; split; apply/and3P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (atransP2 tr2G Sty Stz) => b Gb [->] /esym/astab1P cxb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mem_orbit // (subsetP sCH) // inE Gb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NTransitveProp.",
            "VernacEndSegment",
            "fd460045831b344e2b4a0f09b1012db85da35654"
        ],
        [
            "Section NTransitveProp1.",
            "VernacBeginSection",
            "d79745fe404572d070d586cd97f32ed9143c2688"
        ],
        [
            "Variables (gT : finGroupType) (sT : finType).",
            "VernacAssumption",
            "4d63e07cfdc48b020db9545469b90a99062f7fc1"
        ],
        [
            "Variables (to : {action gT &-> sT}) (G : {group gT}) (S : {set sT}).",
            "VernacAssumption",
            "3081ca3211636e8e069ba4011645678a94d86ac6"
        ],
        [
            "Theorem stab_ntransitive m x : 0 < m -> x \\in S -> [transitive^m.+1 G, on S | to] -> [transitive^m 'C_G[x | to], on S :\\ x | to].",
            "VernacStartTheoremProof",
            "733e3820d8c04daf94d0ccbca300dc207f953391"
        ],
        [
            "move=> m_gt0 Sx Gtr; have sSxS: S :\\ x \\subset S by rewrite subsetDl.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case: (imsetP Gtr); case/tupleP=> x1 t1; rewrite dtuple_on_add.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "case/and3P=> Sx1 nt1x1 dt1 trt1; have Gtr1 := ntransitive1 (ltn0Sn _) Gtr.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "case: (atransP2 Gtr1 Sx1 Sx) => // a Ga x1ax.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "pose t := n_act to t1 a.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have dxt: [tuple of x :: t] \\in m.+1.-dtuple(S).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite trt1 x1ax; apply/imsetP; exists a => //; apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/imsetP; exists t; first by rewrite dtuple_on_add_D1 Sx in dxt.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/setP=> t2; apply/idP/imsetP => [dt2|[b]].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "have: [tuple of x :: t2] \\in dtuple_on _ S by rewrite dtuple_on_add_D1 Sx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/(atransP2 Gtr dxt)=> b Gb [xbx tbt2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists b; [rewrite inE Gb; apply/astab1P | apply: val_inj].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/setIP=> Gb /astab1P xbx ->{t2}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite n_act_dtuple //; last by rewrite dtuple_on_add_D1 Sx in dxt.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/astabsP=> y; rewrite !inE -{1}xbx (inj_eq (act_inj _ _)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (actsP (atrans_acts Gtr1)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem stab_ntransitiveI m x : x \\in S -> [transitive G, on S | to] -> [transitive^m 'C_G[x | to], on S :\\ x | to] -> [transitive^m.+1 G, on S | to].",
            "VernacStartTheoremProof",
            "4b7fae22dd8edad7e780e64cefbdd5ae143f2e53"
        ],
        [
            "move=> Sx Gtr Gntr.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have t_to_x t: t \\in m.+1.-dtuple(S) -> exists2 a, a \\in G & exists2 t', t' \\in m.-dtuple(S :\\ x) & t = n_act to [tuple of x :: t'] a.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case/tupleP: t => y t St.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have Sy: y \\in S by rewrite dtuple_on_add_D1 in St; case/andP: St.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(atransP Gtr _ Sy) in Sx; case/imsetP: Sx => a Ga toya.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "exists a^-1; first exact: groupVr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists (n_act to t a); last by rewrite n_act_add toya !actK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/(n_act_dtuple (subsetP (atrans_acts Gtr) a Ga)): St.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite n_act_add -toya dtuple_on_add_D1 => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (imsetP Gntr) => t dt S_tG; pose xt := [tuple of x :: t].",
            "VernacExtend",
            "61f7313c68f88d92a678d74fe9c99999257a468e"
        ],
        [
            "have dxt: xt \\in m.+1.-dtuple(S) by rewrite dtuple_on_add_D1 Sx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/imsetP; exists xt => //; apply/setP=> t2.",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "apply/esym; apply/imsetP/idP=> [[a Ga ->] | ].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by apply: n_act_dtuple; rewrite // (subsetP (atrans_acts Gtr)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/t_to_x=> a2 Ga2 [t2']; rewrite S_tG.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case/imsetP=> a /setIP[Ga /astab1P toxa] -> -> {t2 t2'}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists (a * a2); rewrite (groupM, actM) //= !n_act_add toxa.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NTransitveProp1.",
            "VernacEndSegment",
            "c8620130e9c64c32f1033881c2aa52fe1c1e004e"
        ]
    ],
    "proofs": [
        {
            "name": "prim_trans_norm",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "move=> primG /andP[sHG nHG]; rewrite subsetI sHG.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have [trG _] := andP primG; have [x Sx defS] := imsetP trG.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "move: primG; rewrite (trans_prim_astab Sx) // => /maximal_eqP[_].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "case/(_ ('C_G[x | to] <*> H)%G) => /= [||cxH|]; first exact: joing_subl.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite join_subG subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "have{cxH} cxH: H \\subset 'C_G[x | to] by rewrite -cxH joing_subr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite subsetI sHG /= in cxH; left; apply/subsetP=> a Ha.",
                        "VernacExtend",
                        "c7d1c7d09ecd89d8bc2113ace17e973d2ced1bab"
                    ]
                },
                {
                    "command": [
                        "apply/astabP=> y Sy; have [b Gb ->] := atransP2 trG Sx Sy.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "rewrite actCJV [to x (a ^ _)](astab1P _) ?(subsetP cxH) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mem_conjg (normsP nHG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite norm_joinEl 1?subIset ?nHG //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move/(subgroup_transitiveP Sx sHG trG); right.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "n_act_is_action",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "by apply: is_total_action => [t|t a b]; apply: eq_from_tnth => i; rewrite !tnth_map ?act1 ?actM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dtuple_onP",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "rewrite inE subset_all -map_tnth_enum.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (uniq _) / (injectiveP (tnth t)) => f_inj; last by right; case.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -[all _ _]negbK -has_predC has_map has_predC negbK /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: (iffP allP) => [Sf|[]//]; split=> // i; rewrite Sf ?mem_enum.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_uniq_tuple",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "by move/card_uniqP->; apply: size_tuple.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "n_act0",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "exact: tuple0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dtuple_on_add",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE memtE !subset_all -!andbA; do !bool_congr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dtuple_on_subset",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "by move=> sS12; rewrite !inE => /andP[-> /subset_trans]; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "n_act_add",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "exact: val_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ntransitive0",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "have dt0: [tuple] \\in 0.-dtuple(S) by rewrite inE memtE subset_all.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/imsetP; exists [tuple of Nil sT] => //.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by apply/setP=> x; rewrite [x]tuple0 orbit_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ntransitive_weak",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "move/subnKC <-; rewrite addnC; elim: {m}(m - k) => // m IHm.",
                        "VernacExtend",
                        "560765e33257f7d6c09471356613a37645807d60"
                    ]
                },
                {
                    "command": [
                        "rewrite addSn => tr_m1; apply: IHm; move: {m k}(m + k) tr_m1 => m tr_m1.",
                        "VernacExtend",
                        "5e8c001930445b402eabf7fc558c7bc173d75ae3"
                    ]
                },
                {
                    "command": [
                        "have ext_t t: t \\in dtuple_on m S -> exists x, [tuple of x :: t] \\in m.+1.-dtuple(S).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=> dt.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [sSt | /subsetPn[x Sx ntx]] := boolP (S \\subset t); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists x; rewrite dtuple_on_add andbA /= Sx ntx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/imsetP: tr_m1 dt => t1; rewrite !inE => /andP[Ut1 St1] _ /andP[Ut _].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "have /subset_leq_card := subset_trans St1 sSt.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !card_uniq_tuple // ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/imsetP: (tr_m1); case/tupleP=> [x t]; rewrite dtuple_on_add.",
                        "VernacExtend",
                        "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
                    ]
                },
                {
                    "command": [
                        "case/and3P=> Sx ntx dt; set xt := [tuple of _] => tr_xt.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "apply/imsetP; exists t => //.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> u; apply/idP/imsetP=> [du | [a Ga ->{u}]].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "case: (ext_t u du) => y; rewrite tr_xt.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case/imsetP=> a Ga [_ def_u]; exists a => //; apply: val_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: n_act to xt a \\in dtuple_on _ S by rewrite tr_xt mem_imset.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite n_act_add dtuple_on_add; case/and3P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ntransitive1",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "have trdom1 x: ([tuple x] \\in 1.-dtuple(S)) = (x \\in S).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite dtuple_on_add !inE memtE subset_all andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> m_gt0 /(ntransitive_weak m_gt0) {m m_gt0}.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case/imsetP; case/tupleP=> x t0; rewrite {t0}(tuple0 t0) trdom1 => Sx trx.",
                        "VernacExtend",
                        "6042dc43156302d23b188b05386d953cdb248e4f"
                    ]
                },
                {
                    "command": [
                        "apply/imsetP; exists x => //; apply/setP=> y; rewrite -trdom1 trx.",
                        "VernacExtend",
                        "e9117678ab574c7b2c67a766017142cd191e8dff"
                    ]
                },
                {
                    "command": [
                        "by apply/imsetP/imsetP=> [[a ? [->]]|[a ? ->]]; exists a => //; apply: val_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "stab_ntransitive",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "move=> m_gt0 Sx Gtr; have sSxS: S :\\ x \\subset S by rewrite subsetDl.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "case: (imsetP Gtr); case/tupleP=> x1 t1; rewrite dtuple_on_add.",
                        "VernacExtend",
                        "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
                    ]
                },
                {
                    "command": [
                        "case/and3P=> Sx1 nt1x1 dt1 trt1; have Gtr1 := ntransitive1 (ltn0Sn _) Gtr.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "case: (atransP2 Gtr1 Sx1 Sx) => // a Ga x1ax.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "pose t := n_act to t1 a.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have dxt: [tuple of x :: t] \\in m.+1.-dtuple(S).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite trt1 x1ax; apply/imsetP; exists a => //; apply: val_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/imsetP; exists t; first by rewrite dtuple_on_add_D1 Sx in dxt.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> t2; apply/idP/imsetP => [dt2|[b]].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "have: [tuple of x :: t2] \\in dtuple_on _ S by rewrite dtuple_on_add_D1 Sx.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/(atransP2 Gtr dxt)=> b Gb [xbx tbt2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by exists b; [rewrite inE Gb; apply/astab1P | apply: val_inj].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/setIP=> Gb /astab1P xbx ->{t2}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite n_act_dtuple //; last by rewrite dtuple_on_add_D1 Sx in dxt.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/astabsP=> y; rewrite !inE -{1}xbx (inj_eq (act_inj _ _)).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (actsP (atrans_acts Gtr1)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}