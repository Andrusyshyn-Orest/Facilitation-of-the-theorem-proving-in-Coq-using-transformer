{
    "filename": "mathcomp/solvable/gfunctor.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat fintype bigop finset.",
            "VernacRequire",
            "f186c263a5d395775e17f2fcb6026d98ec534348"
        ],
        [
            "From mathcomp Require Import fingroup morphism automorphism quotient gproduct.",
            "VernacRequire",
            "cdb919e34a1a17b943495b0d80affcc1d1bbdf39"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Delimit Scope gFun_scope with gF.",
            "VernacDelimiters",
            "b70aa31df090ffb2cc34b3328f8d4a7bc2e1fb6b"
        ],
        [
            "Module GFunctor.",
            "VernacDefineModule",
            "479bd6c8ce820e7cbd81574e855c5eebd1ac4fc7"
        ],
        [
            "Definition object_map := forall gT : finGroupType, {set gT} -> {set gT}.",
            "VernacDefinition",
            "1f79af7281b98cbd904b905223db2338ede34780"
        ],
        [
            "Bind Scope gFun_scope with object_map.",
            "VernacBindScope",
            "393ae83a3fabcd6098313793c841b80c90828cd6"
        ],
        [
            "Section Definitions.",
            "VernacBeginSection",
            "44c8aeee6f7e234b1ae876a1cda441d352768d1b"
        ],
        [
            "Implicit Types gT hT : finGroupType.",
            "VernacReserve",
            "1a8c56d092da5ae94d941f12dc7e986179e6d76c"
        ],
        [
            "Variable F : object_map.",
            "VernacAssumption",
            "b1a2d7d0a232bf4d65fd041af25fe2738dad9379"
        ],
        [
            "Definition group_valued := forall gT (G : {group gT}), group_set (F G).",
            "VernacDefinition",
            "d17b79e4108eacc9f7213b173d43419accb7420b"
        ],
        [
            "Definition closed := forall gT (G : {group gT}), F G \\subset G.",
            "VernacDefinition",
            "3022c16f82eb61307f2c6aa6a532b2556aaed1f6"
        ],
        [
            "Definition continuous := forall gT hT (G : {group gT}) (phi : {morphism G >-> hT}), phi @* F G \\subset F (phi @* G).",
            "VernacDefinition",
            "8d6d239d10f205290b8522710e54c8f9b5970571"
        ],
        [
            "Definition iso_continuous := forall gT hT (G : {group gT}) (phi : {morphism G >-> hT}), 'injm phi -> phi @* F G \\subset F (phi @* G).",
            "VernacDefinition",
            "af22c11ef32fc839607b4ed7c84967ab1c248cb0"
        ],
        [
            "Lemma continuous_is_iso_continuous : continuous -> iso_continuous.",
            "VernacStartTheoremProof",
            "26cbbda1005bf67c0540ea444af4676834664097"
        ],
        [
            "by move=> Fcont gT hT G phi inj_phi; apply: Fcont.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pcontinuous := forall gT hT (G D : {group gT}) (phi : {morphism D >-> hT}), phi @* F G \\subset F (phi @* G).",
            "VernacDefinition",
            "2cbec50c287900b3d25e1b4297f091624e1e72db"
        ],
        [
            "Lemma pcontinuous_is_continuous : pcontinuous -> continuous.",
            "VernacStartTheoremProof",
            "bd25c9fdb190b3ac87bf18e67723027d277ab688"
        ],
        [
            "by move=> Fcont gT hT G; apply: Fcont.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition hereditary := forall gT (H G : {group gT}), H \\subset G -> F G :&: H \\subset F H.",
            "VernacDefinition",
            "2157f914f99fbc210933c0b9135f93fbcdd02e4f"
        ],
        [
            "Lemma pcontinuous_is_hereditary : pcontinuous -> hereditary.",
            "VernacStartTheoremProof",
            "dfcac2d6828c91df69e14152c013b1a8e6821b6a"
        ],
        [
            "move=> Fcont gT H G sHG; rewrite -{2}(setIidPl sHG) setIC.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by do 2!rewrite -(morphim_idm (subsetIl H _)) morphimIdom ?Fcont.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition monotonic := forall gT (H G : {group gT}), H \\subset G -> F H \\subset F G.",
            "VernacDefinition",
            "1269931a53b01d57ea4f02aae768158005261892"
        ],
        [
            "Variables (k : unit) (F1 F2 : object_map).",
            "VernacAssumption",
            "c0c3f72da73216a4b1116c8a3f22403efcc4ed8e"
        ],
        [
            "Definition comp_head : object_map := fun gT A => let: tt := k in F1 (F2 A).",
            "VernacDefinition",
            "7a970ea64eca18dfeb9f761a7a8cd33ee0b6b092"
        ],
        [
            "Definition modulo : object_map := fun gT A => coset (F2 A) @*^-1 (F1 (A / (F2 A))).",
            "VernacDefinition",
            "38d98ab3b5d2ec2f7dab4c74bae23b47031bacdf"
        ],
        [
            "End Definitions.",
            "VernacEndSegment",
            "a9ff902ce1bf921ade03bc4535b4de21f2fcc02c"
        ],
        [
            "Section ClassDefinitions.",
            "VernacBeginSection",
            "fea2babc8b5db18a38ca4b671a6f0f2546656191"
        ],
        [
            "Structure iso_map := IsoMap { apply : object_map; _ : group_valued apply; _ : closed apply; _ : iso_continuous apply }.",
            "VernacInductive",
            "ae246667750a5a3db611998f7c38aedffe94df45"
        ],
        [
            "Local Coercion apply : iso_map >-> object_map.",
            "VernacCoercion",
            "000fd9612f4f1edc9b0a84260b9c3df95a4d0dc9"
        ],
        [
            "Structure map := Map { iso_of_map : iso_map; _ : continuous iso_of_map }.",
            "VernacInductive",
            "f2073cedf674938597e28317d0b3c8c95c24c670"
        ],
        [
            "Local Coercion iso_of_map : map >-> iso_map.",
            "VernacCoercion",
            "8719b498f56a53146a3e84bc5d57f4cca4927cd5"
        ],
        [
            "Structure pmap := Pmap { map_of_pmap : map; _ : hereditary map_of_pmap }.",
            "VernacInductive",
            "6c84ea038c28ffd1c144cac7a9d859c3f9b462a0"
        ],
        [
            "Local Coercion map_of_pmap : pmap >-> map.",
            "VernacCoercion",
            "19719dccb0071bfb08e18283fb2da0b039b97553"
        ],
        [
            "Structure mono_map := MonoMap { map_of_mono : map; _ : monotonic map_of_mono }.",
            "VernacInductive",
            "79ea22f46cbf4789355d47a1bf1226f5fb50fe8a"
        ],
        [
            "Local Coercion map_of_mono : mono_map >-> map.",
            "VernacCoercion",
            "cb42e48067bb1dc34a4ac5bb44ee83b8cb02d2f6"
        ],
        [
            "Definition pack_iso F Fcont Fgrp Fsub := @IsoMap F Fgrp Fsub Fcont.",
            "VernacDefinition",
            "0189e746eadee379f030f0662e1938eaaa4a760a"
        ],
        [
            "Definition clone_iso (F : object_map) := fun Fgrp Fsub Fcont (isoF := @IsoMap F Fgrp Fsub Fcont) => fun isoF0 & phant_id (apply isoF0) F & phant_id isoF isoF0 => isoF.",
            "VernacDefinition",
            "a91f796e5f8b6ab315971bfef271d7af239daa66"
        ],
        [
            "Definition clone (F : object_map) := fun isoF & phant_id (apply isoF) F => fun (funF0 : map) & phant_id (apply funF0) F => fun Fcont (funF := @Map isoF Fcont) & phant_id funF0 funF => funF.",
            "VernacDefinition",
            "bf8ed84327b9315bb488296d8be1d2f8052eb76f"
        ],
        [
            "Definition clone_pmap (F : object_map) := fun (funF : map) & phant_id (apply funF) F => fun (pfunF0 : pmap) & phant_id (apply pfunF0) F => fun Fher (pfunF := @Pmap funF Fher) & phant_id pfunF0 pfunF => pfunF.",
            "VernacDefinition",
            "5a5814fc0c31d460dc010fc45a126d9731019c30"
        ],
        [
            "Definition clone_mono (F : object_map) := fun (funF : map) & phant_id (apply funF) F => fun (mfunF0 : mono_map) & phant_id (apply mfunF0) F => fun Fmon (mfunF := @MonoMap funF Fmon) & phant_id mfunF0 mfunF => mfunF.",
            "VernacDefinition",
            "621e361d6282a1d775e391c5e119990e82971b17"
        ],
        [
            "End ClassDefinitions.",
            "VernacEndSegment",
            "3e6b849c725cef4003cf68ec300761b8de548c0e"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Identity Coercion fun_of_object_map : object_map >-> Funclass.",
            "VernacIdentityCoercion",
            "114dced8cba1d2f766ce004a1c8334a30d95ca23"
        ],
        [
            "Coercion apply : iso_map >-> object_map.",
            "VernacCoercion",
            "d12c901c02e32d39ed5ff2cc906ee751ec46f151"
        ],
        [
            "Coercion iso_of_map : map >-> iso_map.",
            "VernacCoercion",
            "82eb7861a87d5738a146f435670445c85fe3aaa3"
        ],
        [
            "Coercion map_of_pmap : pmap >-> map.",
            "VernacCoercion",
            "90434b50ef0fcdbc6bc38510ed4119e62eea9bc1"
        ],
        [
            "Coercion map_of_mono : mono_map >-> map.",
            "VernacCoercion",
            "8e5383af219f7040ef1feeb48770a38aeef7883c"
        ],
        [
            "Coercion continuous_is_iso_continuous : continuous >-> iso_continuous.",
            "VernacCoercion",
            "7a8c9ba9d05f98d6488f60c0ea204556fb2d1381"
        ],
        [
            "Coercion pcontinuous_is_continuous : pcontinuous >-> continuous.",
            "VernacCoercion",
            "65025dbcc0dfe5f7d3f484bee68731666810fc65"
        ],
        [
            "Coercion pcontinuous_is_hereditary : pcontinuous >-> hereditary.",
            "VernacCoercion",
            "3ec0ba90a9751b34ab9ca2d24363b4e5246db69a"
        ],
        [
            "Notation \"[ 'igFun' 'by' Fsub & Fcont ]\" := (pack_iso (continuous_is_iso_continuous Fcont) (fun gT G => groupP _) Fsub) (at level 0, format \"[ 'igFun' 'by' Fsub & Fcont ]\") : form_scope.",
            "VernacNotation",
            "4600ae119e14991f7ffec6abc96f5d8130e6ed71"
        ],
        [
            "Notation \"[ 'igFun' 'by' Fsub & ! Fcont ]\" := (pack_iso Fcont (fun gT G => groupP _) Fsub) (at level 0, format \"[ 'igFun' 'by' Fsub & ! Fcont ]\") : form_scope.",
            "VernacNotation",
            "a41b7d39fe9d9ba04a99b3abbff8209ae6b7fd9a"
        ],
        [
            "Notation \"[ 'igFun' 'of' F ]\" := (@clone_iso F _ _ _ _ id id) (at level 0, format \"[ 'igFun' 'of' F ]\") : form_scope.",
            "VernacNotation",
            "e580b1c1f31412f5accb4f58299325e044d81d52"
        ],
        [
            "Notation \"[ 'gFun' 'by' Fcont ]\" := (Map Fcont) (at level 0, format \"[ 'gFun' 'by' Fcont ]\") : form_scope.",
            "VernacNotation",
            "2c5cdfa9426299416acbf377dbfcd5122912dcb7"
        ],
        [
            "Notation \"[ 'gFun' 'of' F ]\" := (@clone F _ id _ id _ id) (at level 0, format \"[ 'gFun' 'of' F ]\") : form_scope.",
            "VernacNotation",
            "27c400ebee1f5d7efc4322083be0e057faaf9b04"
        ],
        [
            "Notation \"[ 'pgFun' 'by' Fher ]\" := (Pmap Fher) (at level 0, format \"[ 'pgFun' 'by' Fher ]\") : form_scope.",
            "VernacNotation",
            "28cdef193b3208aeb9bed27cda3b12853e27273b"
        ],
        [
            "Notation \"[ 'pgFun' 'of' F ]\" := (@clone_pmap F _ id _ id _ id) (at level 0, format \"[ 'pgFun' 'of' F ]\") : form_scope.",
            "VernacNotation",
            "c9fe982612db3fd98efcd720fb1d3d6a3c52b6ff"
        ],
        [
            "Notation \"[ 'mgFun' 'by' Fmon ]\" := (MonoMap Fmon) (at level 0, format \"[ 'mgFun' 'by' Fmon ]\") : form_scope.",
            "VernacNotation",
            "5e04bb98d87961ac49fd398a38a4313a5a75d67a"
        ],
        [
            "Notation \"[ 'mgFun' 'of' F ]\" := (@clone_mono F _ id _ id _ id) (at level 0, format \"[ 'mgFun' 'of' F ]\") : form_scope.",
            "VernacNotation",
            "9530791b76f65874bd12cddd96de905be0d9f8e6"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End GFunctor.",
            "VernacEndSegment",
            "4d28f52aef8ab3067f35c95422ba8b2edbd57499"
        ],
        [
            "Export GFunctor.Exports.",
            "VernacImport",
            "cdf5b0940b95104d184420ba1ee48a7bff2158ac"
        ],
        [
            "Bind Scope gFun_scope with GFunctor.object_map.",
            "VernacBindScope",
            "24180c472551933698bf8657b4a0068916a85b1e"
        ],
        [
            "Notation \"F1 \\o F2\" := (GFunctor.comp_head tt F1 F2) : gFun_scope.",
            "VernacNotation",
            "9e5684f25924bef868db172fcb8c5791b5dbe7c5"
        ],
        [
            "Notation \"F1 %% F2\" := (GFunctor.modulo F1 F2) : gFun_scope.",
            "VernacNotation",
            "64f20d1e5773634e864e09c5e9371ea84edb6552"
        ],
        [
            "Section FunctorGroup.",
            "VernacBeginSection",
            "0e2adf496d07e2e12bd6e8b6784d7e46f7e5cd4b"
        ],
        [
            "Variables (F : GFunctor.iso_map) (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "6b54b9b4559976b28828528151d1fe0a09eb7212"
        ],
        [
            "Lemma gFgroupset : group_set (F gT G).",
            "VernacStartTheoremProof",
            "59e3e2d9aac479c95a61890939336de332f5450f"
        ],
        [
            "by case: F.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical gFgroup := Group gFgroupset.",
            "VernacDefinition",
            "ae070f4c02a49bf247bbf66382d2de00f2c11758"
        ],
        [
            "End FunctorGroup.",
            "VernacEndSegment",
            "d06ab375bb25b9539434e34f23a7179d55bb0a55"
        ],
        [
            "Canonical gFmod_group (F1 : GFunctor.iso_map) (F2 : GFunctor.object_map) (gT : finGroupType) (G : {group gT}) := [group of (F1 %% F2)%gF gT G].",
            "VernacDefinition",
            "1713623c4218569e532af82c2278ff52d62843ee"
        ],
        [
            "Section IsoFunctorTheory.",
            "VernacBeginSection",
            "1c78bc97ba60753d68445176c6c9b4892574705d"
        ],
        [
            "Implicit Types gT rT : finGroupType.",
            "VernacReserve",
            "a8f8cc577f5b1ea7d7ddc27aebbd738660947541"
        ],
        [
            "Variable F : GFunctor.iso_map.",
            "VernacAssumption",
            "a822da77940af166cc591a747280e691456a6494"
        ],
        [
            "Lemma gFsub gT (G : {group gT}) : F gT G \\subset G.",
            "VernacStartTheoremProof",
            "249f67738af15ce749a41c4b3345d8505aad000c"
        ],
        [
            "by case: F gT G.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFsub_trans gT (G : {group gT}) (A : pred_class) : G \\subset A -> F gT G \\subset A.",
            "VernacStartTheoremProof",
            "672e5429a9b6399fdfedfa2de76546b157bb5dd1"
        ],
        [
            "exact/subset_trans/gFsub.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gF1 gT : F gT 1 = 1.",
            "VernacStartTheoremProof",
            "e25508e63fd9cc70aac33d820489c677b7134a9b"
        ],
        [
            "exact/trivgP/gFsub.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFiso_cont : GFunctor.iso_continuous F.",
            "VernacStartTheoremProof",
            "4284365df9b6238945258c74af3a6df1110a2275"
        ],
        [
            "by case F.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFchar gT (G : {group gT}) : F gT G \\char G.",
            "VernacStartTheoremProof",
            "d97be0ffb50f4eaeeb6e2dcaddc1c5619d1235c2"
        ],
        [
            "apply/andP; split => //; first by apply: gFsub.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/forall_inP=> f Af; rewrite -{2}(im_autm Af) -(autmE Af).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -morphimEsub ?gFsub ?gFiso_cont ?injm_autm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFnorm gT (G : {group gT}) : G \\subset 'N(F gT G).",
            "VernacStartTheoremProof",
            "da08729489236870e6fc3a3f561301428828f550"
        ],
        [
            "exact/char_norm/gFchar.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFnorms gT (G : {group gT}) : 'N(G) \\subset 'N(F gT G).",
            "VernacStartTheoremProof",
            "29bc6640ccdd42c1cbfc44d14b079ba1d19a0be8"
        ],
        [
            "exact/char_norms/gFchar.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFnormal gT (G : {group gT}) : F gT G <| G.",
            "VernacStartTheoremProof",
            "5048fab627fd419c75f5ee5233397e84d1670001"
        ],
        [
            "exact/char_normal/gFchar.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFchar_trans gT (G H : {group gT}) : H \\char G -> F gT H \\char G.",
            "VernacStartTheoremProof",
            "c798bea106be784e6ac974703a7c7aa494af43fc"
        ],
        [
            "exact/char_trans/gFchar.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFnormal_trans gT (G H : {group gT}) : H <| G -> F gT H <| G.",
            "VernacStartTheoremProof",
            "e6f1d22bdf369dad61d31e96db77ac13bdf6e254"
        ],
        [
            "exact/char_normal_trans/gFchar.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFnorm_trans gT (A : pred_class) (G : {group gT}) : A \\subset 'N(G) -> A \\subset 'N(F gT G).",
            "VernacStartTheoremProof",
            "137e2574f9124428216ba54603bb3dee1e7541a1"
        ],
        [
            "by move/subset_trans/(_ (gFnorms G)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injmF_sub gT rT (G D : {group gT}) (f : {morphism D >-> rT}) : 'injm f -> G \\subset D -> f @* (F gT G) \\subset F rT (f @* G).",
            "VernacStartTheoremProof",
            "d26daa59dbef5280ff42b9e8707f3299c8fa0a86"
        ],
        [
            "move=> injf sGD; have:= gFiso_cont (injm_restrm sGD injf).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite im_restrm morphim_restrm (setIidPr _) ?gFsub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injmF gT rT (G D : {group gT}) (f : {morphism D >-> rT}) : 'injm f -> G \\subset D -> f @* (F gT G) = F rT (f @* G).",
            "VernacStartTheoremProof",
            "9cf7919f5df6bd91d1296f2488d6d466e49f1297"
        ],
        [
            "move=> injf sGD; have [sfGD injf'] := (morphimS f sGD, injm_invm injf).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/esym/eqP; rewrite eqEsubset -(injmSK injf') ?gFsub_trans //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite !(subset_trans (injmF_sub _ _)) ?morphim_invm // gFsub_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFisom gT rT (G D : {group gT}) R (f : {morphism D >-> rT}) : G \\subset D -> isom G (gval R) f -> isom (F gT G) (F rT R) f.",
            "VernacStartTheoremProof",
            "5967288a8596bc520e2c3023c56b74f0f6532f1d"
        ],
        [
            "case/(restrmP f)=> g [gf _ _ _]; rewrite -{f}gf => /isomP[injg <-].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite sub_isom ?gFsub ?injmF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFisog gT rT (G : {group gT}) (R : {group rT}) : G \\isog R -> F gT G \\isog F rT R.",
            "VernacStartTheoremProof",
            "d7afd5e0129cab006b658e847bf940ef80608e74"
        ],
        [
            "by case/isogP=> f injf <-; rewrite -injmF // sub_isog ?gFsub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IsoFunctorTheory.",
            "VernacEndSegment",
            "b510cd8c000e22600c6ecf2bba51b95f5000f7e7"
        ],
        [
            "Section FunctorTheory.",
            "VernacBeginSection",
            "297c8f9d5ea24778ee5d5470a8bc169d272dfe75"
        ],
        [
            "Implicit Types gT rT : finGroupType.",
            "VernacReserve",
            "a8f8cc577f5b1ea7d7ddc27aebbd738660947541"
        ],
        [
            "Variable F : GFunctor.map.",
            "VernacAssumption",
            "3113665048bb5dbdb7e4e36abacec9c027a27a18"
        ],
        [
            "Lemma gFcont : GFunctor.continuous F.",
            "VernacStartTheoremProof",
            "ce126f400d5d9dfbf2096ae0ba6a0995bfdaef95"
        ],
        [
            "by case F.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morphimF gT rT (G D : {group gT}) (f : {morphism D >-> rT}) : G \\subset D -> f @* (F gT G) \\subset F rT (f @* G).",
            "VernacStartTheoremProof",
            "7f373c8b4f3ea06ce3c6b05a1aff2600c587be66"
        ],
        [
            "move=> sGD; rewrite -(setIidPr (gFsub F G)).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -{3}(setIid G) -!(morphim_restrm sGD) gFcont.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FunctorTheory.",
            "VernacEndSegment",
            "79fc473ec75486f548a25875e141267697d7d4fd"
        ],
        [
            "Section PartialFunctorTheory.",
            "VernacBeginSection",
            "a56d7f6b6943d9cf35f64911454db39829e85124"
        ],
        [
            "Implicit Types gT rT : finGroupType.",
            "VernacReserve",
            "a8f8cc577f5b1ea7d7ddc27aebbd738660947541"
        ],
        [
            "Section BasicTheory.",
            "VernacBeginSection",
            "14c760b29872ac59706c62ea06a83f853983984b"
        ],
        [
            "Variable F : GFunctor.pmap.",
            "VernacAssumption",
            "bce0b8ca71aa8670c42472fe6336fd7ea6c8dc60"
        ],
        [
            "Lemma gFhereditary : GFunctor.hereditary F.",
            "VernacStartTheoremProof",
            "d31eaa55c3e0c435d29f58d84aea6d7640e11bf6"
        ],
        [
            "by case F.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFunctorI gT (G H : {group gT}) : F gT G :&: H = F gT G :&: F gT (G :&: H).",
            "VernacStartTheoremProof",
            "ebc143c17cdb6fa1d9095ecf055488f88494c37c"
        ],
        [
            "rewrite -{1}(setIidPr (gFsub F G)) [G :&: _]setIC -setIA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(setIidPr (gFhereditary (subsetIl G H))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite setIC -setIA (setIidPr (gFsub F (G :&: H))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmorphimF : GFunctor.pcontinuous F.",
            "VernacStartTheoremProof",
            "fb77ac4a9348264518cb855454eefd0e4f1c2eba"
        ],
        [
            "move=> gT rT G D f; rewrite -morphimIdom -(setIidPl (gFsub F G)) setICA.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: (subset_trans (morphimS f (gFhereditary (subsetIr D G)))).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite (subset_trans (morphimF F _ _ )) ?morphimIdom ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFid gT (G : {group gT}) : F gT (F gT G) = F gT G.",
            "VernacStartTheoremProof",
            "a918acf9c5dee56fda211cfdeabeb9d32f5d1f5e"
        ],
        [
            "apply/eqP; rewrite eqEsubset gFsub.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by move/gFhereditary: (gFsub F G); rewrite setIid /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BasicTheory.",
            "VernacEndSegment",
            "08fc37155c1ec626484d56fdb43ad28bdf639df1"
        ],
        [
            "Section Modulo.",
            "VernacBeginSection",
            "bafbd4928e4c3e316db5e4ae222d04eb8538e45d"
        ],
        [
            "Variables (F1 : GFunctor.pmap) (F2 : GFunctor.map).",
            "VernacAssumption",
            "d85ef5d63d3f17b7ba6291d062aaffc765672fb7"
        ],
        [
            "Lemma gFmod_closed : GFunctor.closed (F1 %% F2).",
            "VernacStartTheoremProof",
            "725f054ad1567d138aecc7a48a9070bb0809a6f8"
        ],
        [
            "by move=> gT G; rewrite sub_cosetpre_quo ?gFsub ?gFnormal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFmod_cont : GFunctor.continuous (F1 %% F2).",
            "VernacStartTheoremProof",
            "f2e89e8fe6080b1b84303fa85902170b4a9c9959"
        ],
        [
            "move=> gT rT G f; have nF2 := gFnorm F2.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have sDF: G \\subset 'dom (coset (F2 _ G)) by rewrite nF2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sDFf: G \\subset 'dom (coset (F2 _ (f @* G)) \\o f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -sub_morphim_pre ?subsetIl // nF2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose K := 'ker (restrm sDFf (coset (F2 _ (f @* G)) \\o f)).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have sFK: 'ker (restrm sDF (coset (F2 _ G))) \\subset K.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {}/K !ker_restrm ker_comp /= subsetI subsetIl !ker_coset /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -sub_morphim_pre ?subsetIl // morphimIdom ?morphimF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sOF := gFsub F1 (G / F2 _ G); have sGG: G \\subset G by [].",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite -sub_quotient_pre; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: subset_trans (nF2 _ _); rewrite morphimS ?gFmod_closed.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices im_fact H : F2 _ G \\subset gval H -> H \\subset G -> factm sFK sGG @* (H / F2 _ G) = f @* H / F2 _ (f @* G).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -2?im_fact ?gFmod_closed ?gFsub //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cosetpreK morphimF /= ?morphim_restrm ?setIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -sub_quotient_pre ?normG //= trivg_quotient sub1G.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> sFH sHG; rewrite -(morphimIdom _ (H / _)) /= {2}morphim_restrm setIid.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -morphimIG ?ker_coset // -(morphim_restrm sDF) morphim_factm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite morphim_restrm morphim_comp -quotientE morphimIdom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical gFmod_igFun := [igFun by gFmod_closed & gFmod_cont].",
            "VernacDefinition",
            "68ac77ea39a7ff1f3cb55bbe11b5bb0212af8178"
        ],
        [
            "Canonical gFmod_gFun := [gFun by gFmod_cont].",
            "VernacDefinition",
            "c52cfa82e7cb814e4b5186483bce9075a09d2b37"
        ],
        [
            "End Modulo.",
            "VernacEndSegment",
            "77f7f64ce26fed4c564971293d907a913901d703"
        ],
        [
            "Variables F1 F2 : GFunctor.pmap.",
            "VernacAssumption",
            "49d2230cbce73b9557719f3a22b03b2d36e1c06d"
        ],
        [
            "Lemma gFmod_hereditary : GFunctor.hereditary (F1 %% F2).",
            "VernacStartTheoremProof",
            "11ab0a2ee7f7460876af7a4f370137325c4fd29c"
        ],
        [
            "move=> gT H G sHG; set FGH := _ :&: H; have nF2H := gFnorm F2 H.",
            "VernacExtend",
            "bfc79e1fe6822c7cd2b0873372afea0ade19f587"
        ],
        [
            "rewrite -sub_quotient_pre; last exact: subset_trans (subsetIr _ _) _.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose rH := restrm nF2H (coset (F2 _ H)); pose rHM := [morphism of rH].",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have rnorm_simpl: rHM @* H = H / F2 _ H by rewrite morphim_restrm setIid.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nF2G := subset_trans sHG (gFnorm F2 G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose rG := restrm nF2G (coset (F2 _ G)); pose rGM := [morphism of rG].",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have sqKfK: 'ker rGM \\subset 'ker rHM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !ker_restrm !ker_coset (setIidPr (gFsub F2 _)) setIC /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: gFhereditary.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have sHH := subxx H; rewrite -rnorm_simpl /= -(morphim_factm sqKfK sHH) /=.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "apply: subset_trans (gFcont F1 _); rewrite /= {2}morphim_restrm setIid /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: subset_trans (morphimS _ (gFhereditary _ (quotientS _ sHG))) => /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have ->: FGH / _ = restrm nF2H (coset _) @* FGH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite morphim_restrm setICA setIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(morphim_factm sqKfK sHH) morphimS //= morphim_restrm -quotientE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite setICA setIid (subset_trans (quotientI _ _ _)) // cosetpreK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical gFmod_pgFun := [pgFun by gFmod_hereditary].",
            "VernacDefinition",
            "75a08b8db7ed262696372b87db85bb4936b7c35e"
        ],
        [
            "End PartialFunctorTheory.",
            "VernacEndSegment",
            "f592373125be03e00ed979439c25cb15ff6511d4"
        ],
        [
            "Section MonotonicFunctorTheory.",
            "VernacBeginSection",
            "16b8110b57a2f1a1a6897eaf37e4ab66c2d58090"
        ],
        [
            "Implicit Types gT rT : finGroupType.",
            "VernacReserve",
            "a8f8cc577f5b1ea7d7ddc27aebbd738660947541"
        ],
        [
            "Lemma gFunctorS (F : GFunctor.mono_map) : GFunctor.monotonic F.",
            "VernacStartTheoremProof",
            "de35622901801e4edafffc0c29010fc8fe32ce86"
        ],
        [
            "by case: F.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Composition.",
            "VernacBeginSection",
            "57a8865362458e4847120d1a7dace64b434b4d4e"
        ],
        [
            "Variables (F1 : GFunctor.mono_map) (F2 : GFunctor.map).",
            "VernacAssumption",
            "a84bf186c83a6e0522b5afee9610e5933f582930"
        ],
        [
            "Lemma gFcomp_closed : GFunctor.closed (F1 \\o F2).",
            "VernacStartTheoremProof",
            "01828fc060e829095cd439e0c1a996266d99ec06"
        ],
        [
            "by move=> gT G; rewrite !gFsub_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gFcomp_cont : GFunctor.continuous (F1 \\o F2).",
            "VernacStartTheoremProof",
            "91a36bd9e1b6d1605713fea4d0104611cbc25cb8"
        ],
        [
            "move=> gT rT G phi; rewrite (subset_trans (morphimF _ _ (gFsub _ _))) //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (subset_trans (gFunctorS F1 (gFcont F2 phi))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical gFcomp_igFun := [igFun by gFcomp_closed & gFcomp_cont].",
            "VernacDefinition",
            "0755d5af38db575fc96b8454191fde406725479f"
        ],
        [
            "Canonical gFcomp_gFun :=[gFun by gFcomp_cont].",
            "VernacDefinition",
            "f2305a530e40cab63c00a6818e5c81cca7d8fbfb"
        ],
        [
            "End Composition.",
            "VernacEndSegment",
            "c1e1f2192633a0b7eb03081be87b6dc8ae600b9b"
        ],
        [
            "Variables F1 F2 : GFunctor.mono_map.",
            "VernacAssumption",
            "cb2b5434bacdbe17ed233a3350b31cfe83be19d1"
        ],
        [
            "Lemma gFcompS : GFunctor.monotonic (F1 \\o F2).",
            "VernacStartTheoremProof",
            "1c8b92c9a34bbacdf6d233efaa316ceb7aa1fa6f"
        ],
        [
            "by move=> gT H G sHG; rewrite !gFunctorS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical gFcomp_mgFun := [mgFun by gFcompS].",
            "VernacDefinition",
            "920ae880108792e79db853c0ff75f6fabbe1ef42"
        ],
        [
            "End MonotonicFunctorTheory.",
            "VernacEndSegment",
            "0d9ca7f96116c1db3484b741eafee106a2492b51"
        ],
        [
            "Section GFunctorExamples.",
            "VernacBeginSection",
            "60b36204e86676ee0b8421cb2126f40194831961"
        ],
        [
            "Implicit Types gT : finGroupType.",
            "VernacReserve",
            "fbb7aa19a7971c5b10d380fd1f026e4fa401e829"
        ],
        [
            "Definition idGfun gT := @id {set gT}.",
            "VernacDefinition",
            "dcbf083c84faf60f583c1509ce8fd9c50360df1b"
        ],
        [
            "Lemma idGfun_closed : GFunctor.closed idGfun.",
            "VernacStartTheoremProof",
            "69aa107dc1600aadb5b23849069bc4cffd0bc3fd"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma idGfun_cont : GFunctor.continuous idGfun.",
            "VernacStartTheoremProof",
            "41b047d4303b827ab450ad8002483c55d5cce700"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma idGfun_monotonic : GFunctor.monotonic idGfun.",
            "VernacStartTheoremProof",
            "80250e83ac0c20699221963df961b59c9dcf4c92"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical bgFunc_id := [igFun by idGfun_closed & idGfun_cont].",
            "VernacDefinition",
            "6f5790aa13f7bb59406478c1df9e56642d9350ec"
        ],
        [
            "Canonical gFunc_id := [gFun by idGfun_cont].",
            "VernacDefinition",
            "bb8f29b6c9e8c6285a7e0521aeb439bbde9fecaf"
        ],
        [
            "Canonical mgFunc_id := [mgFun by idGfun_monotonic].",
            "VernacDefinition",
            "69f7f647c437b17a2308fec7d9bbec3c52f33c2a"
        ],
        [
            "Definition trivGfun gT of {set gT} := [1 gT].",
            "VernacDefinition",
            "49d183c19e1cf1066f927dcedb12798dfd0836a7"
        ],
        [
            "Lemma trivGfun_cont : GFunctor.pcontinuous trivGfun.",
            "VernacStartTheoremProof",
            "5f249a2ed85c53e0cf480e5d4b0f9a17cd818184"
        ],
        [
            "by move=> gT rT D G f; rewrite morphim1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical trivGfun_igFun := [igFun by sub1G & trivGfun_cont].",
            "VernacDefinition",
            "01e342fb552360831605f9f902a2308805198643"
        ],
        [
            "Canonical trivGfun_gFun := [gFun by trivGfun_cont].",
            "VernacDefinition",
            "92be7d7a004fe67eea98e319ce04e97a3859b536"
        ],
        [
            "Canonical trivGfun_pgFun := [pgFun by trivGfun_cont].",
            "VernacDefinition",
            "5e823cf6d8a5c2eb85adb8bd97f1007317ad647d"
        ],
        [
            "End GFunctorExamples.",
            "VernacEndSegment",
            "8a2c9fddc876af1b6add111d76407934facab03d"
        ]
    ],
    "proofs": [
        {
            "name": "continuous_is_iso_continuous",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "by move=> Fcont gT hT G phi inj_phi; apply: Fcont.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcontinuous_is_continuous",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "by move=> Fcont gT hT G; apply: Fcont.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcontinuous_is_hereditary",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "move=> Fcont gT H G sHG; rewrite -{2}(setIidPl sHG) setIC.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by do 2!rewrite -(morphim_idm (subsetIl H _)) morphimIdom ?Fcont.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFgroupset",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "by case: F.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFsub",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "by case: F gT G.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFsub_trans",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "exact/subset_trans/gFsub.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gF1",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "exact/trivgP/gFsub.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFiso_cont",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "by case F.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFchar",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "apply/andP; split => //; first by apply: gFsub.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/forall_inP=> f Af; rewrite -{2}(im_autm Af) -(autmE Af).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -morphimEsub ?gFsub ?gFiso_cont ?injm_autm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFnorm",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "exact/char_norm/gFchar.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFnorms",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "exact/char_norms/gFchar.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFnormal",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "exact/char_normal/gFchar.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFchar_trans",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "exact/char_trans/gFchar.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFnormal_trans",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "exact/char_normal_trans/gFchar.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFnorm_trans",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "by move/subset_trans/(_ (gFnorms G)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injmF_sub",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "move=> injf sGD; have:= gFiso_cont (injm_restrm sGD injf).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite im_restrm morphim_restrm (setIidPr _) ?gFsub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injmF",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "move=> injf sGD; have [sfGD injf'] := (morphimS f sGD, injm_invm injf).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply/esym/eqP; rewrite eqEsubset -(injmSK injf') ?gFsub_trans //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(subset_trans (injmF_sub _ _)) ?morphim_invm // gFsub_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFisom",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "case/(restrmP f)=> g [gf _ _ _]; rewrite -{f}gf => /isomP[injg <-].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by rewrite sub_isom ?gFsub ?injmF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFisog",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "by case/isogP=> f injf <-; rewrite -injmF // sub_isog ?gFsub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFcont",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "by case F.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphimF",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "move=> sGD; rewrite -(setIidPr (gFsub F G)).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{3}(setIid G) -!(morphim_restrm sGD) gFcont.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFhereditary",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "by case F.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFunctorI",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "rewrite -{1}(setIidPr (gFsub F G)) [G :&: _]setIC -setIA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(setIidPr (gFhereditary (subsetIl G H))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite setIC -setIA (setIidPr (gFsub F (G :&: H))).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFid",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubset gFsub.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by move/gFhereditary: (gFsub F G); rewrite setIid /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFmod_closed",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "by move=> gT G; rewrite sub_cosetpre_quo ?gFsub ?gFnormal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFmod_cont",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "move=> gT rT G f; have nF2 := gFnorm F2.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have sDF: G \\subset 'dom (coset (F2 _ G)) by rewrite nF2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sDFf: G \\subset 'dom (coset (F2 _ (f @* G)) \\o f).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -sub_morphim_pre ?subsetIl // nF2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose K := 'ker (restrm sDFf (coset (F2 _ (f @* G)) \\o f)).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have sFK: 'ker (restrm sDF (coset (F2 _ G))) \\subset K.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite {}/K !ker_restrm ker_comp /= subsetI subsetIl !ker_coset /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -sub_morphim_pre ?subsetIl // morphimIdom ?morphimF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have sOF := gFsub F1 (G / F2 _ G); have sGG: G \\subset G by [].",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub_quotient_pre; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: subset_trans (nF2 _ _); rewrite morphimS ?gFmod_closed.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suffices im_fact H : F2 _ G \\subset gval H -> H \\subset G -> factm sFK sGG @* (H / F2 _ G) = f @* H / F2 _ (f @* G).",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite -2?im_fact ?gFmod_closed ?gFsub //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cosetpreK morphimF /= ?morphim_restrm ?setIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -sub_quotient_pre ?normG //= trivg_quotient sub1G.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> sFH sHG; rewrite -(morphimIdom _ (H / _)) /= {2}morphim_restrm setIid.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite -morphimIG ?ker_coset // -(morphim_restrm sDF) morphim_factm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite morphim_restrm morphim_comp -quotientE morphimIdom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFmod_hereditary",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "move=> gT H G sHG; set FGH := _ :&: H; have nF2H := gFnorm F2 H.",
                        "VernacExtend",
                        "bfc79e1fe6822c7cd2b0873372afea0ade19f587"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub_quotient_pre; last exact: subset_trans (subsetIr _ _) _.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "pose rH := restrm nF2H (coset (F2 _ H)); pose rHM := [morphism of rH].",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have rnorm_simpl: rHM @* H = H / F2 _ H by rewrite morphim_restrm setIid.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nF2G := subset_trans sHG (gFnorm F2 G).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose rG := restrm nF2G (coset (F2 _ G)); pose rGM := [morphism of rG].",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have sqKfK: 'ker rGM \\subset 'ker rHM.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !ker_restrm !ker_coset (setIidPr (gFsub F2 _)) setIC /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: gFhereditary.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "have sHH := subxx H; rewrite -rnorm_simpl /= -(morphim_factm sqKfK sHH) /=.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "apply: subset_trans (gFcont F1 _); rewrite /= {2}morphim_restrm setIid /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply: subset_trans (morphimS _ (gFhereditary _ (quotientS _ sHG))) => /=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have ->: FGH / _ = restrm nF2H (coset _) @* FGH.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite morphim_restrm setICA setIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(morphim_factm sqKfK sHH) morphimS //= morphim_restrm -quotientE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite setICA setIid (subset_trans (quotientI _ _ _)) // cosetpreK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFunctorS",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "by case: F.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFcomp_closed",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "by move=> gT G; rewrite !gFsub_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFcomp_cont",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "move=> gT rT G phi; rewrite (subset_trans (morphimF _ _ (gFsub _ _))) //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subset_trans (gFunctorS F1 (gFcont F2 phi))).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gFcompS",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "by move=> gT H G sHG; rewrite !gFunctorS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "idGfun_closed",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "idGfun_cont",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "idGfun_monotonic",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trivGfun_cont",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "by move=> gT rT D G f; rewrite morphim1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}