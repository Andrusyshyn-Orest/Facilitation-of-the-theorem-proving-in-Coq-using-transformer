{
    "filename": "mathcomp/solvable/burnside_app.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq div choice fintype.",
            "VernacRequire",
            "e665c6902e70ac801e5b749428ba09cedb8a2b75"
        ],
        [
            "From mathcomp Require Import tuple finfun bigop finset fingroup action perm primitive_action.",
            "VernacRequire",
            "b8918fff298621231d4174f382c48d8019690ccf"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Lemma burnside_formula : forall (gT : finGroupType) s (G : {group gT}), uniq s -> s =i G -> forall (sT : finType) (to : {action gT &-> sT}), (#|orbit to G @: setT| * size s)%N = \\sum_(p <- s) #|'Fix_to[p]|.",
            "VernacStartTheoremProof",
            "121e92c92d84f6b7afd2a0cc6f8542ad09d6218b"
        ],
        [
            "move=> gT s G Us sG sT to.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite big_uniq // -(card_uniqP Us) (eq_card sG) -Frobenius_Cauchy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_big => // p _; rewrite setTI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/actsP=> ? _ ?; rewrite !inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments burnside_formula {gT}.",
            "VernacArguments",
            "25e400577751480e4d66d29726f6d995df6437de"
        ],
        [
            "Section colouring.",
            "VernacBeginSection",
            "a29cb365252f8fed7a0dd25023e09fec51358f9d"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Definition colors := 'I_n.",
            "VernacDefinition",
            "086d84a57cecd00c03bbe4d4b9fd64fb0c324e81"
        ],
        [
            "Canonical colors_eqType := Eval hnf in [eqType of colors].",
            "VernacDefinition",
            "0dbea5649becd24e300332ca881f0714517ee4a9"
        ],
        [
            "Canonical colors_choiceType := Eval hnf in [choiceType of colors].",
            "VernacDefinition",
            "6306ffd5402bb6c71306e1d873d89a476f447aba"
        ],
        [
            "Canonical colors_countType := Eval hnf in [countType of colors].",
            "VernacDefinition",
            "3b5b4601acdcfce960a0a2168cddac01979c9ae6"
        ],
        [
            "Canonical colors_finType := Eval hnf in [finType of colors].",
            "VernacDefinition",
            "c33364ce9d59fea256906b702d609906961e26c0"
        ],
        [
            "Section square_colouring.",
            "VernacBeginSection",
            "c31df029b385a21601839854f635132cfbcbb967"
        ],
        [
            "Definition square := 'I_4.",
            "VernacDefinition",
            "cde9756a2c1511802f823462b57eabcf85f0384a"
        ],
        [
            "Canonical square_eqType := Eval hnf in [eqType of square].",
            "VernacDefinition",
            "dfa6e0a7426bd9d0bec4da13d4d79137660f3a15"
        ],
        [
            "Canonical square_choiceType := Eval hnf in [choiceType of square].",
            "VernacDefinition",
            "e058cd527adb91bbae3a9ebe01a92e5efd57ecbb"
        ],
        [
            "Canonical square_countType := Eval hnf in [countType of square].",
            "VernacDefinition",
            "a06c5339c19a733b735bc656d8ee649706e91224"
        ],
        [
            "Canonical square_finType := Eval hnf in [finType of square].",
            "VernacDefinition",
            "807f2af185eea16569dc53639f1bf276ef2a9747"
        ],
        [
            "Canonical square_subType := Eval hnf in [subType of square].",
            "VernacDefinition",
            "ec46edd30781763b0526289315c6825e1b03acb7"
        ],
        [
            "Canonical square_subCountType := Eval hnf in [subCountType of square].",
            "VernacDefinition",
            "0dbd1f3f225d3b8162e879c68375725fc9e0f94e"
        ],
        [
            "Canonical square_subFinType := Eval hnf in [subFinType of square].",
            "VernacDefinition",
            "786ee385a7fa0a065c488a089cad94deeffbe4dc"
        ],
        [
            "Definition mksquare i : square := Sub (i %% _) (ltn_mod i 4).",
            "VernacDefinition",
            "b51898bb718451f2d51d58e6f3ca2387dc456d39"
        ],
        [
            "Definition c0 := mksquare 0.",
            "VernacDefinition",
            "8266482b416ad6d8e4046699114d5232d1a24366"
        ],
        [
            "Definition c1 := mksquare 1.",
            "VernacDefinition",
            "f5e93c35dc5108240858e37ad6e97efe35e19533"
        ],
        [
            "Definition c2 := mksquare 2.",
            "VernacDefinition",
            "97586bc8e8974c45de8db07ee70d7fb27534f103"
        ],
        [
            "Definition c3 := mksquare 3.",
            "VernacDefinition",
            "fcd4712fea40465d11451c36810d50f989347115"
        ],
        [
            "Definition R1 (sc : square) : square := tnth [tuple c1; c2; c3; c0] sc.",
            "VernacDefinition",
            "ede134dc583dea1e3ac3e58780ebe018ac2e4ecb"
        ],
        [
            "Definition R2 (sc : square) : square := tnth [tuple c2; c3; c0; c1] sc.",
            "VernacDefinition",
            "061918a72f4b24fc168698f0171c1cc50c8de070"
        ],
        [
            "Definition R3 (sc : square) : square := tnth [tuple c3; c0; c1; c2] sc.",
            "VernacDefinition",
            "9f1b431b72b209a47bcf05b37ec15394acf29802"
        ],
        [
            "Ltac get_inv elt l := match l with | (_, (elt, ?x)) => x | (elt, ?x) => x | (?x, _) => get_inv elt x end.",
            "VernacExtend",
            "87e680582f35972231bc3438bee9b27519d15d4f"
        ],
        [
            "Definition rot_inv := ((R1, R3), (R2, R2), (R3, R1)).",
            "VernacDefinition",
            "ee05c52840f4d8f28239e456ccf64b1ce79e8c47"
        ],
        [
            "Ltac inj_tac := move: (erefl rot_inv); unfold rot_inv; match goal with |- ?X = _ -> injective ?Y => move=> _; let x := get_inv Y X in apply: (can_inj (g:=x)); move=> [val H1] end.",
            "VernacExtend",
            "34cda6260fa3708f92355fd95b3e5c6202916756"
        ],
        [
            "Lemma R1_inj : injective R1.",
            "VernacStartTheoremProof",
            "453ef48cd036656d245c6784971f08f72bf1129e"
        ],
        [
            "by inj_tac; repeat (destruct val => //=; first by apply/eqP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R2_inj : injective R2.",
            "VernacStartTheoremProof",
            "3b8c3610250a4b8caeea919f5f5e34b3b5ca59e9"
        ],
        [
            "by inj_tac; repeat (destruct val => //=; first by apply/eqP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R3_inj : injective R3.",
            "VernacStartTheoremProof",
            "a8640b59d45ab61343d339cb31c1c20f5f8674a5"
        ],
        [
            "by inj_tac; repeat (destruct val => //=; first by apply/eqP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition r1 := (perm R1_inj).",
            "VernacDefinition",
            "6e657893fbeaca357d403e52e216f6ae516defa2"
        ],
        [
            "Definition r2 := (perm R2_inj).",
            "VernacDefinition",
            "e381da55296866b70550a17279360228b56cfcac"
        ],
        [
            "Definition r3 := (perm R3_inj).",
            "VernacDefinition",
            "69fd8f56efe44d1ef998b60a345460420f75488d"
        ],
        [
            "Definition id1 := (1 : {perm square}).",
            "VernacDefinition",
            "d1477bde24cbf106ae9f2f4f3aa1065c4d9f015e"
        ],
        [
            "Definition is_rot (r : {perm _}) := (r * r1 == r1 * r).",
            "VernacDefinition",
            "55f2aae077cf3c332a3b104a53826bfbcccd58ce"
        ],
        [
            "Definition rot := [set r | is_rot r].",
            "VernacDefinition",
            "c4406d506f8c24da5fce3d817cc87d3782078179"
        ],
        [
            "Lemma group_set_rot : group_set rot.",
            "VernacStartTheoremProof",
            "f09a77828e2959d6a8bc6e06c1a66029166c8ca6"
        ],
        [
            "apply/group_setP; split; first by rewrite /rot inE /is_rot mulg1 mul1g.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> x1 y; rewrite /rot !inE /= /is_rot; move/eqP => hx1; move/eqP => hy.",
            "VernacExtend",
            "080620bae7a4e6b29a6ac139f4f252d631fa7376"
        ],
        [
            "by rewrite -mulgA hy !mulgA hx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical rot_group := Group group_set_rot.",
            "VernacDefinition",
            "23c7d2a3fd2f710b711694f8e64aa0730903c039"
        ],
        [
            "Definition rotations := [set id1; r1; r2; r3].",
            "VernacDefinition",
            "e30a5b0b5778467881ef3b718fa979e2ddbf43fb"
        ],
        [
            "Lemma rot_eq_c0 : forall r s : {perm square}, is_rot r -> is_rot s -> r c0 = s c0 -> r = s.",
            "VernacStartTheoremProof",
            "7f923a4e4123f9023737199d6627058a3aff61b8"
        ],
        [
            "rewrite /is_rot => r s; move/eqP => hr; move/eqP=> hs hrs; apply/permP => a.",
            "VernacExtend",
            "14d3f8903c83cc1e16e17023be3bfbc85ea71a5a"
        ],
        [
            "have ->: a = (r1 ^+ a) c0 by apply/eqP; case: a; do 4?case=> //=; rewrite ?permM !permE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -!permM -!commuteX // !permM hrs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rot_r1 : forall r, is_rot r -> r = r1 ^+ (r c0).",
            "VernacStartTheoremProof",
            "83270c360b9d71c9a6473a5ef22adbbdfb317b18"
        ],
        [
            "move=> r hr; apply: rot_eq_c0 => //; apply/eqP.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by symmetry; apply: commuteX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: (r c0); do 4?case=> //=; rewrite ?permM !permE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rotations_is_rot : forall r, r \\in rotations -> is_rot r.",
            "VernacStartTheoremProof",
            "fc0ab25ef934bdf3acdc6b48bc63e9d01c6737a5"
        ],
        [
            "move=> r Dr; apply/eqP; apply/permP => a; rewrite !inE -!orbA !permM in Dr *.",
            "VernacExtend",
            "00ff85c2978147a9fc435136b93db114a3840954"
        ],
        [
            "by case/or4P: Dr; move/eqP->; rewrite !permE //; case: a; do 4?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rot_is_rot : rot = rotations.",
            "VernacStartTheoremProof",
            "e27a29a0d5d3f0f4edd846face4293177a91e91e"
        ],
        [
            "apply/setP=> r; apply/idP/idP; last by move/rotations_is_rot; rewrite inE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !inE => h.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have -> : r = r1 ^+ (r c0) by apply: rot_eq_c0; rewrite // -rot_r1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have e2: 2 = r2 c0 by rewrite permE /=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have e3: 3 = r3 c0 by rewrite permE /=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case (r c0); do 4?[case] => // ?; rewrite ?(expg1, eqxx, orbT) //.",
            "VernacExtend",
            "0c594cd00b22d54441ca49157bd5de18dff56b09"
        ],
        [
            "by rewrite [nat_of_ord _]/= e2 -rot_r1 ?(eqxx, orbT, rotations_is_rot, inE).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite [nat_of_ord _]/= e3 -rot_r1 ?(eqxx, orbT, rotations_is_rot, inE).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Sh (sc : square) : square := tnth [tuple c1; c0; c3; c2] sc.",
            "VernacDefinition",
            "68c5774f17e7bfdc165c612c92bad2414c3d7af3"
        ],
        [
            "Lemma Sh_inj : injective Sh.",
            "VernacStartTheoremProof",
            "e133367a445b55b01b01641867fcadcef1a5c309"
        ],
        [
            "by apply: (can_inj (g:= Sh)); case; do 4?case=> //=; move=> H; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sh := (perm Sh_inj).",
            "VernacDefinition",
            "a140dfd471f624e7ad9fad48320eb90753c8d0d5"
        ],
        [
            "Lemma sh_inv : sh^-1 = sh.",
            "VernacStartTheoremProof",
            "b8462228596eafa645204aefe91c211c7b6f7a83"
        ],
        [
            "apply: (mulIg sh); rewrite mulVg; apply/permP.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by case; do 4?case=> //=; move=> H; rewrite !permE /= !permE; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Sv (sc : square) : square := tnth [tuple c3; c2; c1; c0] sc.",
            "VernacDefinition",
            "ca815afaed854c63d2ae5e89704a89676652b954"
        ],
        [
            "Lemma Sv_inj : injective Sv.",
            "VernacStartTheoremProof",
            "d14a1219acaae150ffd6cc60bef640a6419d812f"
        ],
        [
            "by apply: (can_inj (g:= Sv)); case; do 4?case=> //=; move=> H; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sv := (perm Sv_inj).",
            "VernacDefinition",
            "0bc22cd50953105b382bc0bb9fd1cbd653c6a61f"
        ],
        [
            "Lemma sv_inv : sv^-1 = sv.",
            "VernacStartTheoremProof",
            "9bf87e12132d0378a0f0f84819c9ac665333c2a5"
        ],
        [
            "apply: (mulIg sv); rewrite mulVg; apply/permP.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by case; do 4?case=> //=; move=> H; rewrite !permE /= !permE; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Sd1 (sc : square) : square := tnth [tuple c0; c3; c2; c1] sc.",
            "VernacDefinition",
            "c6096ec90d53723abf46ac65dadd76cc35068fdc"
        ],
        [
            "Lemma Sd1_inj : injective Sd1.",
            "VernacStartTheoremProof",
            "4b692577da1372ea76ee128a8b40dd0d7ecdd73a"
        ],
        [
            "by apply: can_inj Sd1 _; case; do 4?case=> //=; move=> H; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sd1 := (perm Sd1_inj).",
            "VernacDefinition",
            "7ed6009b9394d2694cde10092a97ecf46155946b"
        ],
        [
            "Lemma sd1_inv : sd1^-1 = sd1.",
            "VernacStartTheoremProof",
            "170c4f90e55ef13821241a988cf3c48821bbbeb2"
        ],
        [
            "apply: (mulIg sd1); rewrite mulVg; apply/permP.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by case; do 4?case=> //=; move=> H; rewrite !permE /= !permE; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Sd2 (sc : square) : square := tnth [tuple c2; c1; c0; c3] sc.",
            "VernacDefinition",
            "83dd507a354b39ac9316dac2e35ee501a84f72ff"
        ],
        [
            "Lemma Sd2_inj : injective Sd2.",
            "VernacStartTheoremProof",
            "1d76994e85476f0f08acf104f86c052bf9daaa20"
        ],
        [
            "by apply: can_inj Sd2 _; case; do 4?case=> //=; move=> H; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sd2 := (perm Sd2_inj).",
            "VernacDefinition",
            "2559ea7ef813f6dc84c0603c65032ba540f56e53"
        ],
        [
            "Lemma sd2_inv : sd2^-1 = sd2.",
            "VernacStartTheoremProof",
            "743ed6af02a0064b00cdec5366fb934b06514c8a"
        ],
        [
            "apply: (mulIg sd2); rewrite mulVg; apply/permP.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by case; do 4?case=> //=; move=> H; rewrite !permE /= !permE; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ord_enum4 : enum 'I_4 = [:: c0; c1; c2; c3].",
            "VernacStartTheoremProof",
            "59d5ebadb238b2a7a87a479142fa34da2b4b37c3"
        ],
        [
            "by apply: (inj_map val_inj); rewrite val_enum_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_id_sh : 1 != sh.",
            "VernacStartTheoremProof",
            "fcaf52237f8acc53b689f24e1655e44cb8ec0fdb"
        ],
        [
            "by apply/eqP; move/(congr1 (fun p : {perm square} => p c0)); rewrite !permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition isometries2 := [set 1; sh].",
            "VernacDefinition",
            "850a69e87b797c71af3aa625117f256693698f36"
        ],
        [
            "Lemma card_iso2 : #|isometries2| = 2.",
            "VernacStartTheoremProof",
            "ffa530a23bad7458befa5de38ec25d692c3a72d1"
        ],
        [
            "by rewrite cards2 diff_id_sh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma group_set_iso2 : group_set isometries2.",
            "VernacStartTheoremProof",
            "1994b80348dfae395b7d16bf29d7ce2cd0d007a7"
        ],
        [
            "apply/group_setP; split => [|x y]; rewrite !inE ?eqxx //.",
            "VernacExtend",
            "945ac9810113bf938ceefee9ae4e6b3a8be91952"
        ],
        [
            "do 2![case/orP; move/eqP->]; gsimpl; rewrite ?(eqxx, orbT) //.",
            "VernacExtend",
            "c278d99a5cac18f1ca59af2c83f0c835ccf64a50"
        ],
        [
            "by rewrite -/sh -{1}sh_inv mulVg eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical iso2_group := Group group_set_iso2.",
            "VernacDefinition",
            "f8b71f92df17ed7236b9416214cbd0bbab6f536b"
        ],
        [
            "Definition isometries := [set p | [|| p == 1, p == r1, p == r2, p == r3, p == sh, p == sv, p == sd1 | p == sd2 ]].",
            "VernacDefinition",
            "2cdc45b7bf140c22bbe086515ad41cb6181465bb"
        ],
        [
            "Definition opp (sc : square) := tnth [tuple c2; c3; c0; c1] sc.",
            "VernacDefinition",
            "97797b53f856df576bd078dc6efae7f0c650b334"
        ],
        [
            "Definition is_iso (p : {perm square}) := forall ci, p (opp ci) = opp (p ci).",
            "VernacDefinition",
            "6cb7ed0ccbaf17b0f2381b395d1634b6e0ab1a1b"
        ],
        [
            "Lemma isometries_iso : forall p, p \\in isometries -> is_iso p.",
            "VernacStartTheoremProof",
            "9865b9eb5b59d39651b07e2be46aa7adb08290c8"
        ],
        [
            "move=> p; rewrite inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by do ?case/orP; move/eqP=> -> a; rewrite !permE; case: a; do 4?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac non_inj p a1 a2 heq1 heq2 := let h1:= fresh \"h1\" in (absurd (p a1 = p a2); first (by red => - h1; move: (perm_inj h1)); by rewrite heq1 heq2; apply/eqP).",
            "VernacExtend",
            "f468463d5399c09fe1224869494861fa4c8973eb"
        ],
        [
            "Ltac is_isoPtac p f e0 e1 e2 e3 := suff ->: p = f by [rewrite inE eqxx ?orbT]; let e := fresh \"e\" in apply/permP; do 5?[case] => // ?; [move: e0 | move: e1 | move: e2 | move: e3] => e; apply: etrans (congr1 p _) (etrans e _); apply/eqP; rewrite // permE.",
            "VernacExtend",
            "969f895b0fb453b945a7c215b9c963ba0c8b3064"
        ],
        [
            "Lemma is_isoP : forall p, reflect (is_iso p) (p \\in isometries).",
            "VernacStartTheoremProof",
            "ae6090e437637d7cdcffecf7e7e72833e9228cd6"
        ],
        [
            "move=> p; apply: (iffP idP) => [|iso_p]; first exact: isometries_iso.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move e1: (p c1) (iso_p c1) => k1; move e0: (p c0) (iso_p c0) k1 e1 => k0.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "case: k0 e0; do 4?[case] => //= ? e0 e2; do 5?[case] => //= ? e1 e3; try by [non_inj p c0 c1 e0 e1 | non_inj p c0 c3 e0 e3].",
            "VernacExtend",
            "049b476f3f0359c84c61997a1e9c1d528c563866"
        ],
        [
            "by is_isoPtac p id1 e0 e1 e2 e3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by is_isoPtac p sd1 e0 e1 e2 e3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by is_isoPtac p sh e0 e1 e2 e3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by is_isoPtac p r1 e0 e1 e2 e3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by is_isoPtac p sd2 e0 e1 e2 e3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by is_isoPtac p r2 e0 e1 e2 e3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by is_isoPtac p r3 e0 e1 e2 e3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by is_isoPtac p sv e0 e1 e2 e3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma group_set_iso : group_set isometries.",
            "VernacStartTheoremProof",
            "fa692fe970f982ff951d00400b107a66f2e630a0"
        ],
        [
            "apply/group_setP; split; first by rewrite inE eqxx /=.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> x y hx hy; apply/is_isoP => ci; rewrite !permM !isometries_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical iso_group := Group group_set_iso.",
            "VernacDefinition",
            "990d4cc7cf9b9297d96de6827a1fbeec2d927eb7"
        ],
        [
            "Lemma card_rot : #|rot| = 4.",
            "VernacStartTheoremProof",
            "dbd5475be341e8df7ca6365fb6695a49d4d9f52f"
        ],
        [
            "rewrite -[4]/(size [:: id1; r1; r2; r3]) -(card_uniqP _).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_card => x; rewrite rot_is_rot !inE -!orbA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: map_uniq (fun p : {perm square} => p c0) _ _; rewrite /= !permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma group_set_rotations : group_set rotations.",
            "VernacStartTheoremProof",
            "dae418873a64386f98e0f69e9e740e9fe4167ee4"
        ],
        [
            "by rewrite -rot_is_rot group_set_rot.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical rotations_group := Group group_set_rotations.",
            "VernacDefinition",
            "90003b356f52c8814f0c721b00fc199665c1f612"
        ],
        [
            "Notation col_squares := {ffun square -> colors}.",
            "VernacSyntacticDefinition",
            "29d23ca1bb9e28032d35fc3250e401c2b9f420cd"
        ],
        [
            "Definition act_f (sc : col_squares) (p : {perm square}) : col_squares := [ffun z => sc (p^-1 z)].",
            "VernacDefinition",
            "ae76ea624be98f5cda3e1dce7440541e1a4430ff"
        ],
        [
            "Lemma act_f_1 : forall k, act_f k 1 = k.",
            "VernacStartTheoremProof",
            "ce456b07ca60807be0a4686c4e46da743e1c14a9"
        ],
        [
            "by move=> k; apply/ffunP=> a; rewrite ffunE invg1 permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma act_f_morph : forall k x y, act_f k (x * y) = act_f (act_f k x) y.",
            "VernacStartTheoremProof",
            "67f45997968372ccd28f0eb11b7e639be51fc5a9"
        ],
        [
            "by move=> k x y; apply/ffunP=> a; rewrite !ffunE invMg permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition to := TotalAction act_f_1 act_f_morph.",
            "VernacDefinition",
            "5a0db52389f7e2b4d43611f92f56f2e468c6f8ae"
        ],
        [
            "Definition square_coloring_number2 := #|orbit to isometries2 @: setT|.",
            "VernacDefinition",
            "e084552c450f702c22d934aa9afdd233f3e4b8cb"
        ],
        [
            "Definition square_coloring_number4 := #|orbit to rotations @: setT|.",
            "VernacDefinition",
            "9c9af5aa674a18a2b2c6b05dc2ceb1b33f5fa701"
        ],
        [
            "Definition square_coloring_number8 := #|orbit to isometries @: setT|.",
            "VernacDefinition",
            "757f97de05d4b0be3464f1789e1f44bc84bb0b92"
        ],
        [
            "Lemma Fid : 'Fix_to(1) = setT.",
            "VernacStartTheoremProof",
            "51f92119e6142accdb9e3476a80916c762f50fcb"
        ],
        [
            "by apply/setP=> x /=; rewrite in_setT; apply/afix1P; apply: act1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Fid : #|'Fix_to(1)| = (n ^ 4)%N.",
            "VernacStartTheoremProof",
            "3f5c36dd2e7dbe8058610e18979eb404c20c8977"
        ],
        [
            "rewrite -[4]card_ord -[n]card_ord -card_ffun_on Fid cardsE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by symmetry; apply: eq_card => f; apply/ffun_onP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition coin0 (sc : col_squares) : colors := sc c0.",
            "VernacDefinition",
            "637504bd5b15fd6955e43b3a1eb0bd0aa0b31308"
        ],
        [
            "Definition coin1 (sc : col_squares) : colors := sc c1.",
            "VernacDefinition",
            "b9e0194de7df0459182b2c5fa8e1bd23c5159280"
        ],
        [
            "Definition coin2 (sc : col_squares) : colors := sc c2.",
            "VernacDefinition",
            "e736a9299a61d6a4e6773974ddc5a53edd366da5"
        ],
        [
            "Definition coin3 (sc : col_squares) : colors := sc c3.",
            "VernacDefinition",
            "48e15d26f522465235cb8a0fdcb6b2869124f7f6"
        ],
        [
            "Lemma eqperm_map : forall p1 p2 : col_squares, (p1 == p2) = all (fun s => p1 s == p2 s) [:: c0; c1; c2; c3].",
            "VernacStartTheoremProof",
            "73593e0d7188ab9003b2f25b16bceebfe9abed98"
        ],
        [
            "move=> p1 p2; apply/eqP/allP=> [-> // | Ep12]; apply/ffunP=> x.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by apply/eqP; apply Ep12; case: x; do 4!case=> //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_Sh : 'Fix_to[sh] = [set x | (coin0 x == coin1 x) && (coin2 x == coin3 x)].",
            "VernacStartTheoremProof",
            "54d6783a3dbc72c0e9e01f8dbe8db9a6bcb63d07"
        ],
        [
            "apply/setP=> x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /act_f sh_inv !ffunE !permE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eq_sym (eq_sym (x c3)) andbT andbA !andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_Sv : 'Fix_to[sv] = [set x | (coin0 x == coin3 x) && (coin2 x == coin1 x)].",
            "VernacStartTheoremProof",
            "e29926d1ad0312b43bf175f8d32f6460bb94a48b"
        ],
        [
            "apply/setP=> x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /act_f sv_inv !ffunE !permE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eq_sym andbT andbC (eq_sym (x c1)) andbA -andbA !andbb andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac inv_tac := apply: esym (etrans _ (mul1g _)); apply: canRL (mulgK _) _; let a := fresh \"a\" in apply/permP => a; apply/eqP; rewrite permM !permE; case: a; do 4?case.",
            "VernacExtend",
            "227106c1d51afd96ddd7463550524c95cc4a19dd"
        ],
        [
            "Lemma r1_inv : r1^-1 = r3.",
            "VernacStartTheoremProof",
            "49476e45df6d2fd138cdbc196c443fe82e8fe42f"
        ],
        [
            "by inv_tac.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma r2_inv : r2^-1 = r2.",
            "VernacStartTheoremProof",
            "ed256bf38d014e6ba75d19696488a95313238408"
        ],
        [
            "by inv_tac.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma r3_inv : r3^-1 = r1.",
            "VernacStartTheoremProof",
            "4f4f48d893c1329feda447cb609de1db275ee487"
        ],
        [
            "by inv_tac.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r2 : 'Fix_to[r2] = [set x | (coin0 x == coin2 x) && (coin1 x == coin3 x)].",
            "VernacStartTheoremProof",
            "70db9b58141c36c536d70afa26be99cabbb5ba98"
        ],
        [
            "apply/setP=> x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /act_f r2_inv !ffunE !permE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eq_sym andbT andbCA andbC (eq_sym (x c3)) andbA -andbA !andbb andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r1 : 'Fix_to[r1] = [set x | (coin0 x == coin1 x)&&(coin1 x == coin2 x)&&(coin2 x == coin3 x)].",
            "VernacStartTheoremProof",
            "bc3859c0d2dd528af7f1a272dd5c5bf8ee9d6281"
        ],
        [
            "apply/setP=> x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /act_f r1_inv !ffunE !permE andbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by do 3![case E: {+}(_ == _); rewrite // {E}(eqP E)]; rewrite eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r3 : 'Fix_to[r3] = [set x | (coin0 x == coin1 x)&&(coin1 x == coin2 x)&&(coin2 x == coin3 x)].",
            "VernacStartTheoremProof",
            "afdd730b1d1a76c9a81ae949bc5699376df451f9"
        ],
        [
            "apply/setP=> x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /act_f r3_inv !ffunE !permE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite // {E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_n2 : forall x y z t : square, uniq [:: x; y; z; t] -> #|[set p : col_squares | (p x == p y) && (p z == p t)]| = (n ^ 2)%N.",
            "VernacStartTheoremProof",
            "d4ceb89d502d713a4805332206c0a5fb895f0250"
        ],
        [
            "move=> x y z t Uxt; rewrite -[n]card_ord.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "pose f (p : col_squares) := (p x, p z); rewrite -(@card_in_image _ _ f).",
            "VernacExtend",
            "de7a4b42b1ef81b17722dd81c9c5b9378b46a6e7"
        ],
        [
            "rewrite -mulnn -card_prod; apply: eq_card => [] [c d] /=; apply/imageP.",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "rewrite (cat_uniq [::x; y]) in Uxt; case/and3P: Uxt => _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /= !orbF !andbT; case/norP; rewrite !inE => nxzt nyzt _.",
            "VernacExtend",
            "2253759ff5c580854290fce82296a80357452125"
        ],
        [
            "exists [ffun i => if pred2 x y i then c else d].",
            "VernacExtend",
            "dca2079a062f2c7938f6849546ff2b9b07459a21"
        ],
        [
            "by rewrite inE !ffunE /= !eqxx orbT (negbTE nxzt) (negbTE nyzt) !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite {}/f !ffunE /= eqxx (negbTE nxzt).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> p1 p2; rewrite !inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case/andP=> p1y p1t; case/andP=> p2y p2t [px pz].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have eqp12: all (fun i => p1 i == p2 i) [:: x; y; z; t].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /= -(eqP p1y) -(eqP p1t) -(eqP p2y) -(eqP p2t) px pz !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/ffunP=> i; apply/eqP; apply: (allP eqp12).",
            "VernacExtend",
            "6e77d60b6fe9e5152bca0bfa572494ee57c5c96d"
        ],
        [
            "by rewrite (subset_cardP _ (subset_predT _)) // (card_uniqP Uxt) card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_n : #|[set x | (coin0 x == coin1 x)&&(coin1 x == coin2 x)&& (coin2 x == coin3 x)]| = n.",
            "VernacStartTheoremProof",
            "930e91c0b55c0bbb76d64b8cdd0d38d4756ea1d5"
        ],
        [
            "rewrite -[n]card_ord /coin0 /coin1 /coin2 /coin3.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose f (p : col_squares) := p c3; rewrite -(@card_in_image _ _ f).",
            "VernacExtend",
            "de7a4b42b1ef81b17722dd81c9c5b9378b46a6e7"
        ],
        [
            "apply: eq_card => c /=; apply/imageP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "exists ([ffun => c] : col_squares); last by rewrite /f ffunE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /= inE !ffunE !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> p1 p2; rewrite /= !inE /f -!andbA => eqp1 eqp2 eqp12.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply/eqP; rewrite eqperm_map /= andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case/and3P: eqp1; do 3!move/eqP->; case/and3P: eqp2; do 3!move/eqP->.",
            "VernacExtend",
            "e07fbc109e3b5d0966e15d5587ea359d96070632"
        ],
        [
            "by rewrite !andbb eqp12.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma burnside_app2 : (square_coloring_number2 * 2 = n ^ 4 + n ^ 2)%N.",
            "VernacStartTheoremProof",
            "842d5d50891d568daa27be33022482773b5a76c5"
        ],
        [
            "rewrite (burnside_formula [:: id1; sh]) => [||p]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite /= inE diff_id_sh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite 2!big_cons big_nil addn0 {1}card_Fid F_Sh card_n2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma burnside_app_rot : (square_coloring_number4 * 4 = n ^ 4 + n ^ 2 + 2 * n)%N.",
            "VernacStartTheoremProof",
            "e1920f8e6a79cc1fd893db631a5aa31243be6ad4"
        ],
        [
            "rewrite (burnside_formula [:: id1; r1; r2; r3]) => [||p]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !inE !orbA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: map_uniq (fun p : {perm square} => p c0) _ _; rewrite /= !permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !big_cons big_nil /= addn0 {1}card_Fid F_r1 F_r2 F_r3.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite card_n card_n2 //=; ring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_Sd1 : 'Fix_to[sd1] = [set x | coin1 x == coin3 x].",
            "VernacStartTheoremProof",
            "6a93ab7455ae2fa831849575277b87bbcb97132d"
        ],
        [
            "apply/setP => x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /act_f sd1_inv !ffunE !permE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !eqxx !andbT eq_sym /= andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_n3 : forall x y : square, x != y -> #|[set k : col_squares | k x == k y]| = (n ^ 3)%N.",
            "VernacStartTheoremProof",
            "b4d22f5d50966d5463456288d8ba3b0da24560c1"
        ],
        [
            "move=> x y nxy; apply/eqP; case: (ltngtP n 0) => // [|n0]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite n0; apply/existsP=> [] [p _]; case: (p c0) => i; rewrite n0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqn_pmul2l <-; rewrite -expnS -card_Fid Fid cardsT.",
            "VernacExtend",
            "01eaddc5beea13e116fcc5de5430a824e6e09efb"
        ],
        [
            "rewrite -{1}[n]card_ord -cardX.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose pk k := [ffun i => k (if i == y then x else i) : colors].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite -(@card_image _ _ (fun k : col_squares => (k y, pk k))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/eqP; apply: eq_card => ck /=; rewrite inE /= [_ \\in _]inE.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "apply/eqP/imageP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=> k _ -> /=; rewrite !ffunE if_same eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ck => c k /= kxy.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists [ffun i => if i == y then c else k i]; first by rewrite inE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !ffunE eqxx; congr (_, _); apply/ffunP=> i; rewrite !ffunE.",
            "VernacExtend",
            "7d8678317246fdf1173da3897e708f5ced5cf19c"
        ],
        [
            "case Eiy: (i == y); last by rewrite Eiy.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (negbTE nxy) (eqP Eiy).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> k1 k2 [Eky Epk]; apply/ffunP=> i.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "have{Epk}: pk k1 i = pk k2 i by rewrite Epk.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !ffunE; case: eqP => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_Sd2 : 'Fix_to[sd2] = [set x | coin0 x == coin2 x].",
            "VernacStartTheoremProof",
            "a100f556b4a2aa1e1a62bfd4ab83c464c426e700"
        ],
        [
            "apply/setP => x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite /act_f sd2_inv !ffunE !permE /= !eqxx !andbT eq_sym /= andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma burnside_app_iso : (square_coloring_number8 * 8 = n ^ 4 + 2 * n ^ 3 + 3 * n ^ 2 + 2 * n)%N.",
            "VernacStartTheoremProof",
            "4d8fcd577d13f4552d841b57290d778b832a8a13"
        ],
        [
            "pose iso_list := [:: id1; r1; r2; r3; sh; sv; sd1; sd2].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite (burnside_formula iso_list) => [||p]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite /= !inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: map_uniq (fun p : {perm square} => (p c0, p c1)) _ _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite /= !permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !big_cons big_nil {1}card_Fid F_r1 F_r2 F_r3 F_Sh F_Sv F_Sd1 F_Sd2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite card_n !card_n3 // !card_n2 //=; ring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End square_colouring.",
            "VernacEndSegment",
            "1dd387cbd89d045668bcb93ec189bf58fcabc0f3"
        ],
        [
            "Section cube_colouring.",
            "VernacBeginSection",
            "174e6b19e3c51447bad9f1e03a6de2290f0eae62"
        ],
        [
            "Definition cube := 'I_6.",
            "VernacDefinition",
            "113f455cdb6199b70da7c160ef14644fd147c349"
        ],
        [
            "Canonical cube_eqType := Eval hnf in [eqType of cube].",
            "VernacDefinition",
            "8f5cb9d031e14ce867b260fba4b1b55e9ff2312a"
        ],
        [
            "Canonical cube_choiceType := Eval hnf in [choiceType of cube].",
            "VernacDefinition",
            "83ce274f5c94f87aec701cc449d4b9e32f4110a0"
        ],
        [
            "Canonical cube_countType := Eval hnf in [countType of cube].",
            "VernacDefinition",
            "22a573a40726337ce9c123df3e1ffd37115c6fcb"
        ],
        [
            "Canonical cube_finType := Eval hnf in [finType of cube].",
            "VernacDefinition",
            "9d07cd5fc3a4ba99b35cf5cf6db2d864a8ad0124"
        ],
        [
            "Canonical cube_subType := Eval hnf in [subType of cube].",
            "VernacDefinition",
            "f7010a2783656ae68c70c7b7aabacd64e7396e33"
        ],
        [
            "Canonical cube_subCountType := Eval hnf in [subCountType of cube].",
            "VernacDefinition",
            "5a1ef8c50622c0817c0fc080ebd07ca38a3594da"
        ],
        [
            "Canonical cube_subFinType := Eval hnf in [subFinType of cube].",
            "VernacDefinition",
            "cd3763b7708712f3960b4027a3f64cc03aad0a78"
        ],
        [
            "Definition mkFcube i : cube := Sub (i %% 6) (ltn_mod i 6).",
            "VernacDefinition",
            "960dd20ed0dbd6e70a1e842ae7954365ca89d922"
        ],
        [
            "Definition F0 := mkFcube 0.",
            "VernacDefinition",
            "5c4039c3464e6832f13fcc395cbe300c67a08535"
        ],
        [
            "Definition F1 := mkFcube 1.",
            "VernacDefinition",
            "007b2bef0d5d97282b26e8f686c4a63281ef8c17"
        ],
        [
            "Definition F2 := mkFcube 2.",
            "VernacDefinition",
            "645db9ec0af97a3fc96250f151aec5910be35aa4"
        ],
        [
            "Definition F3 := mkFcube 3.",
            "VernacDefinition",
            "afd98db30f6126ff201ac16ce0dff4e52d396a16"
        ],
        [
            "Definition F4 := mkFcube 4.",
            "VernacDefinition",
            "2be2f3102e7c2ac0969dfdd7a158a45fc36f5e4c"
        ],
        [
            "Definition F5 := mkFcube 5.",
            "VernacDefinition",
            "9a38973a0e9ab26fe564ca708a9f62a26bcabb71"
        ],
        [
            "Definition S05 := [:: F0; F4; F3; F2; F1; F5].",
            "VernacDefinition",
            "c061f0d0f8fdb565d3a4869e2be28a0f4896dd5a"
        ],
        [
            "Definition S05f (sc : cube) : cube := tnth [tuple of S05] sc.",
            "VernacDefinition",
            "6617bd0df58774d3527ffb3ff09b0fce61b6d8b1"
        ],
        [
            "Definition S14 := [:: F5; F1; F3; F2; F4; F0].",
            "VernacDefinition",
            "a4d4968e4626d0cea018ce5e511ab88fbfa6199d"
        ],
        [
            "Definition S14f (sc : cube) : cube := tnth [tuple of S14] sc.",
            "VernacDefinition",
            "32058343e2a806494d0fcbd95557e8c91f7b6599"
        ],
        [
            "Definition S23 := [:: F5; F4; F2; F3; F1; F0].",
            "VernacDefinition",
            "186159046b4f644addd5280741ff6925cba3bc3c"
        ],
        [
            "Definition S23f (sc : cube) : cube := tnth [tuple of S23] sc.",
            "VernacDefinition",
            "9ee964f1600940749a59af797258aa6f967f9e50"
        ],
        [
            "Definition R05 := [:: F0; F2; F4; F1; F3; F5].",
            "VernacDefinition",
            "a923034d103261ca5266222dfe016a3cc2d11088"
        ],
        [
            "Definition R05f (sc : cube) : cube := tnth [tuple of R05] sc.",
            "VernacDefinition",
            "d61d5f12033604c4696dc94551052ef4be85c2f7"
        ],
        [
            "Definition R50 := [:: F0; F3; F1; F4; F2; F5].",
            "VernacDefinition",
            "8cdb3620391547c65fe8755a4da377b4f49f677d"
        ],
        [
            "Definition R50f (sc : cube) : cube := tnth [tuple of R50] sc.",
            "VernacDefinition",
            "c6a820405bef6a38075a200a8f9ac56c0c148f1a"
        ],
        [
            "Definition R14 := [:: F3; F1; F0; F5; F4; F2].",
            "VernacDefinition",
            "57f53ad444db4c3c56a01ae1d9c3bee5778f1153"
        ],
        [
            "Definition R14f (sc : cube) : cube := tnth [tuple of R14] sc.",
            "VernacDefinition",
            "cbe161bf00e4e12f63208b0357c093d20116c398"
        ],
        [
            "Definition R41 := [:: F2; F1; F5; F0; F4; F3].",
            "VernacDefinition",
            "49de8a50a45650cadac8426a96e9e4eee40cc20c"
        ],
        [
            "Definition R41f (sc : cube) : cube := tnth [tuple of R41] sc.",
            "VernacDefinition",
            "e3e23de71e81d9dbdcf97a023efb53c6541e0ef0"
        ],
        [
            "Definition R23 := [:: F1; F5; F2; F3; F0; F4].",
            "VernacDefinition",
            "119bb8de99814e6e7c136de33b5928f647fa396c"
        ],
        [
            "Definition R23f (sc : cube) : cube := tnth [tuple of R23] sc.",
            "VernacDefinition",
            "a7de70885665fe29b0fc569e05dd0f3251691364"
        ],
        [
            "Definition R32 := [:: F4; F0; F2; F3; F5; F1].",
            "VernacDefinition",
            "376baa49b55f059571ff1a699ea3c7c406770b28"
        ],
        [
            "Definition R32f (sc : cube) : cube := tnth [tuple of R32] sc.",
            "VernacDefinition",
            "96077489254c9f2850bd842f5aa6d2d3a86bf5dc"
        ],
        [
            "Definition R024 := [:: F2; F5; F4; F1; F0; F3].",
            "VernacDefinition",
            "f2643382974fa0b38e03bdf1eb7c09c2236df2fa"
        ],
        [
            "Definition R024f (sc : cube) : cube := tnth [tuple of R024] sc.",
            "VernacDefinition",
            "58d7c65e388fbcf8005aa6ee9df6fe51ad949c7d"
        ],
        [
            "Definition R042 := [:: F4; F3; F0; F5; F2; F1].",
            "VernacDefinition",
            "5e553a345d16d9142f3bc169a6a2a846749cc7db"
        ],
        [
            "Definition R042f (sc : cube) : cube := tnth [tuple of R042] sc.",
            "VernacDefinition",
            "e3b64982d5a62a3d8a6b6f0fea963167fe9fdb13"
        ],
        [
            "Definition R012 := [:: F1; F2; F0; F5; F3; F4].",
            "VernacDefinition",
            "0477a41c680901fdb9e8b675be53f2795faa2ead"
        ],
        [
            "Definition R012f (sc : cube) : cube := tnth [tuple of R012] sc.",
            "VernacDefinition",
            "1bd489748f11c2689be0f5268eb2074e7edd1cce"
        ],
        [
            "Definition R021 := [:: F2; F0; F1; F4; F5; F3].",
            "VernacDefinition",
            "0b79ef0681a75e04d911d2f79f5c513cd457cb3c"
        ],
        [
            "Definition R021f (sc : cube) : cube := tnth [tuple of R021] sc.",
            "VernacDefinition",
            "7dad10640aca228e8b1d3eef8a2e8f1da5d71329"
        ],
        [
            "Definition R031 := [:: F3; F0; F4; F1; F5; F2].",
            "VernacDefinition",
            "6e75de24c35175fee2e9639fcc74f280bc25aa76"
        ],
        [
            "Definition R031f (sc : cube) : cube := tnth [tuple of R031] sc.",
            "VernacDefinition",
            "929bdd094eeabd46394155339d6800932b7e3850"
        ],
        [
            "Definition R013 := [:: F1; F3; F5; F0; F2; F4].",
            "VernacDefinition",
            "9270d189dd37d9f6619197549989c64522971bfc"
        ],
        [
            "Definition R013f (sc : cube) : cube := tnth [tuple of R013] sc.",
            "VernacDefinition",
            "c36d2ad8383b3931d5bfbbacbd8b5f0a20ef0b3b"
        ],
        [
            "Definition R043 := [:: F4; F2; F5; F0; F3; F1].",
            "VernacDefinition",
            "d5bbc69a221d33ae290a765ab462b43956063b5a"
        ],
        [
            "Definition R043f (sc : cube) : cube := tnth [tuple of R043] sc.",
            "VernacDefinition",
            "636dc89e6c9e24c42ce605efbacc44f77857e7a2"
        ],
        [
            "Definition R034 := [:: F3; F5; F1; F4; F0; F2].",
            "VernacDefinition",
            "a67f15d6ae2ecb638b24b270b7d1ae05184a346d"
        ],
        [
            "Definition R034f (sc : cube) : cube := tnth [tuple of R034] sc.",
            "VernacDefinition",
            "ecd9fdd32a98b3b088b8548813332fdc1e6aa292"
        ],
        [
            "Definition S1 := [:: F5; F2; F1; F4; F3; F0].",
            "VernacDefinition",
            "89d9eb66c7240e2972ab40762b5992af53adfdd5"
        ],
        [
            "Definition S1f (sc : cube) : cube := tnth [tuple of S1] sc.",
            "VernacDefinition",
            "d74bc5b8252509b6ca5de2cc91c814f87d35797e"
        ],
        [
            "Definition S2 := [:: F5; F3; F4; F1; F2; F0].",
            "VernacDefinition",
            "1db646d5b3ab2c6ac44b1a02376bcbe3917ca555"
        ],
        [
            "Definition S2f (sc : cube) : cube := tnth [tuple of S2] sc.",
            "VernacDefinition",
            "64c2a2b91a4da8ad22ebdd6009fddc22a7d98a68"
        ],
        [
            "Definition S3 := [:: F1; F0; F3; F2; F5; F4].",
            "VernacDefinition",
            "0cbfb86137e1cce6684817216bf87db2c46e6544"
        ],
        [
            "Definition S3f (sc : cube) : cube := tnth [tuple of S3] sc.",
            "VernacDefinition",
            "ddb9b0e9f4bae4c3e8194e80f00c7105a7ecfc82"
        ],
        [
            "Definition S4 := [:: F4; F5; F3; F2; F0; F1].",
            "VernacDefinition",
            "a19594430076e47a2deca2fe069a672b582740ee"
        ],
        [
            "Definition S4f (sc : cube) : cube := tnth [tuple of S4] sc.",
            "VernacDefinition",
            "e0c689d8d0ac5ad5985c4dc4c0e462af3a380e28"
        ],
        [
            "Definition S5 := [:: F2; F4; F0; F5; F1; F3].",
            "VernacDefinition",
            "8213b2693e16c47f4eed8713afdd88c51aaaef1c"
        ],
        [
            "Definition S5f (sc : cube) : cube := tnth [tuple of S5] sc.",
            "VernacDefinition",
            "dd53ec89ca85f67162d61ced642ef466fb4267c8"
        ],
        [
            "Definition S6 := [::F3; F4; F5; F0; F1; F2].",
            "VernacDefinition",
            "690d5489a04e3f2afd6d80d0219f4a1d3326d3f4"
        ],
        [
            "Definition S6f (sc : cube) : cube := tnth [tuple of S6] sc.",
            "VernacDefinition",
            "842c35275c7a66482514681077271455b2717f7b"
        ],
        [
            "Lemma S1_inv : involutive S1f.",
            "VernacStartTheoremProof",
            "2c6d799a3f60cb264d5f024caa854e5d4f04e729"
        ],
        [
            "by move=> z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma S2_inv : involutive S2f.",
            "VernacStartTheoremProof",
            "55dc39e2ce45ce6a49f4be3d862ad5ece2af4213"
        ],
        [
            "by move=> z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma S3_inv : involutive S3f.",
            "VernacStartTheoremProof",
            "2c538383f61b6fda7b262e3d296b147741fba9b0"
        ],
        [
            "by move=> z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma S4_inv : involutive S4f.",
            "VernacStartTheoremProof",
            "e953ad9375b64832cb39659778cb036d82870c4b"
        ],
        [
            "by move=> z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma S5_inv : involutive S5f.",
            "VernacStartTheoremProof",
            "e954f75e156442112c0b7cf29971b2e80e7a1543"
        ],
        [
            "by move=> z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma S6_inv : involutive S6f.",
            "VernacStartTheoremProof",
            "a51a9ccc5d80a9c48d45639724b6340287a04ce5"
        ],
        [
            "by move=> z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma S05_inj : injective S05f.",
            "VernacStartTheoremProof",
            "881a9144a46022fd23e9dbc081ff524972f5314e"
        ],
        [
            "by apply: can_inj S05f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma S14_inj : injective S14f.",
            "VernacStartTheoremProof",
            "6131a517a8cd972248663d7a08bb0dbcad40f19c"
        ],
        [
            "by apply: can_inj S14f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma S23_inv : involutive S23f.",
            "VernacStartTheoremProof",
            "429c734e00982b6fa502c55add496d109d681af3"
        ],
        [
            "by move=> z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R05_inj : injective R05f.",
            "VernacStartTheoremProof",
            "0b47fa1483e5e193c799ab9cb759e8f8e3584494"
        ],
        [
            "by apply: can_inj R50f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R14_inj : injective R14f.",
            "VernacStartTheoremProof",
            "bae3c620fdc2b0767933e6a792cba898773d57ad"
        ],
        [
            "by apply: can_inj R41f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R23_inj : injective R23f.",
            "VernacStartTheoremProof",
            "f7f7a7e6fc4d9176c58010227f44e9269cdd508a"
        ],
        [
            "by apply: can_inj R32f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R50_inj : injective R50f.",
            "VernacStartTheoremProof",
            "32df3bf1c30125c199aeffa963a59ce38028aa56"
        ],
        [
            "by apply: can_inj R05f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R41_inj : injective R41f.",
            "VernacStartTheoremProof",
            "278e7c4abd988cd098a1964a491ad451f66eed41"
        ],
        [
            "by apply: can_inj R14f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R32_inj : injective R32f.",
            "VernacStartTheoremProof",
            "8f456b77d152dc266ca8c5a4489b100478362cf7"
        ],
        [
            "by apply: can_inj R23f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R024_inj : injective R024f.",
            "VernacStartTheoremProof",
            "69dab9faa6dc9586588b8ed2f057974b9a76d67b"
        ],
        [
            "by apply: can_inj R042f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R042_inj : injective R042f.",
            "VernacStartTheoremProof",
            "bc0df451143c704d2b311eb8b6917dd9d586245c"
        ],
        [
            "by apply: can_inj R024f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R012_inj : injective R012f.",
            "VernacStartTheoremProof",
            "043e80ab232f6dd189ee94ddfa9a7b497c46255f"
        ],
        [
            "by apply: can_inj R021f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R021_inj : injective R021f.",
            "VernacStartTheoremProof",
            "ff9d3691148fe1743dbe935abf69b8f06de94252"
        ],
        [
            "by apply: can_inj R012f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R031_inj : injective R031f.",
            "VernacStartTheoremProof",
            "0840be2ca448e4197f9a6541a0acf10a18c4899c"
        ],
        [
            "by apply: can_inj R013f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R013_inj : injective R013f.",
            "VernacStartTheoremProof",
            "63a264f985c918bc496858ef06dd0f2bae0f6d8f"
        ],
        [
            "by apply: can_inj R031f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R043_inj : injective R043f.",
            "VernacStartTheoremProof",
            "8b27474f7847aefaf03707f61c8e9f7569fd8629"
        ],
        [
            "by apply: can_inj R034f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R034_inj : injective R034f.",
            "VernacStartTheoremProof",
            "f90d52d261f67120544702205bf8c938ac0edad7"
        ],
        [
            "by apply: can_inj R043f _ => z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition id3 := 1 : {perm cube}.",
            "VernacDefinition",
            "a18beb25d76832f7d1f506890e394fbd54b2064c"
        ],
        [
            "Definition s05 := (perm S05_inj).",
            "VernacDefinition",
            "db68aaa6adda66c480ee3ffc5c7e8c69b2fc101f"
        ],
        [
            "Definition s14 : {perm cube}.",
            "VernacDefinition",
            "ffea434cdcecf64f335e5292b6bf2bec772ffe54"
        ],
        [
            "apply: (@perm _ S14f); apply: can_inj S14f _ => z.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition s23 := (perm (inv_inj S23_inv)).",
            "VernacDefinition",
            "3f7e6b1d94ea3df5364acec78528e6ee97f7c4a3"
        ],
        [
            "Definition r05 := (perm R05_inj).",
            "VernacDefinition",
            "c3f3655bcc7f60d56b98e98e469cfbb59aaa4964"
        ],
        [
            "Definition r14 := (perm R14_inj).",
            "VernacDefinition",
            "b67c4102c513c72b836344805aa6d7a6ccb8bb29"
        ],
        [
            "Definition r23 := (perm R23_inj).",
            "VernacDefinition",
            "775d2ec2216d62cd63271e417e1a6cd04d90ae7a"
        ],
        [
            "Definition r50 := (perm R50_inj).",
            "VernacDefinition",
            "95bdebbba93ade7f86f63b7997e161d4ca99068f"
        ],
        [
            "Definition r41 := (perm R41_inj).",
            "VernacDefinition",
            "f5ccd14d169cfd8009a64e598bde58499d1aed31"
        ],
        [
            "Definition r32 := (perm R32_inj).",
            "VernacDefinition",
            "acea84c1f0012b56d20d3def00c0ca5562671d49"
        ],
        [
            "Definition r024 := (perm R024_inj).",
            "VernacDefinition",
            "354bc7c61f19d9eda50ca8e666da249e5ade88aa"
        ],
        [
            "Definition r042 := (perm R042_inj).",
            "VernacDefinition",
            "76019544f0aa8cdd38bfc5381532440b848cd32f"
        ],
        [
            "Definition r012 := (perm R012_inj).",
            "VernacDefinition",
            "27cd6de612630e91a2c3c84713610be96982f727"
        ],
        [
            "Definition r021 := (perm R021_inj).",
            "VernacDefinition",
            "452b0950186d78314bb038eed499b883cc159df4"
        ],
        [
            "Definition r031 := (perm R031_inj).",
            "VernacDefinition",
            "181c749dcf4576eea5492e076ed559394954f5c5"
        ],
        [
            "Definition r013 := (perm R013_inj).",
            "VernacDefinition",
            "aeed843a08003d49e01f244c8fb5d40c4a4bc5d0"
        ],
        [
            "Definition r043 := (perm R043_inj).",
            "VernacDefinition",
            "804d803dac7aa86756d3c1448e32c93f6df88863"
        ],
        [
            "Definition r034 := (perm R034_inj).",
            "VernacDefinition",
            "eb57a5073c340eb69fde7f6e17235398eb35739a"
        ],
        [
            "Definition s1 := (perm (inv_inj S1_inv)).",
            "VernacDefinition",
            "cce287ffefc92b65160afb1d9162e19cd2a1a76b"
        ],
        [
            "Definition s2 := (perm (inv_inj S2_inv)).",
            "VernacDefinition",
            "2ae04e49698b1978f19df5177907cc0a7819945e"
        ],
        [
            "Definition s3 := (perm (inv_inj S3_inv)).",
            "VernacDefinition",
            "c1c5e38c1e2989f761c3188c1971ef72997bc76f"
        ],
        [
            "Definition s4 := (perm (inv_inj S4_inv)).",
            "VernacDefinition",
            "28fba54e0cff1c1df7d9d330c0daca97eb63a0d3"
        ],
        [
            "Definition s5 := (perm (inv_inj S5_inv)).",
            "VernacDefinition",
            "a9bc8885b0c763f8673a4a9ff33be39159be224e"
        ],
        [
            "Definition s6 := (perm (inv_inj S6_inv)).",
            "VernacDefinition",
            "f2e75ffbd755e4520f12b9050cd641952da932ed"
        ],
        [
            "Definition dir_iso3 := [set p | [|| id3 == p, s05 == p, s14 == p, s23 == p, r05 == p, r14 == p, r23 == p, r50 == p, r41 == p, r32 == p, r024 == p, r042 == p, r012 == p, r021 == p, r031 == p, r013 == p, r043 == p, r034 == p, s1 == p, s2 == p, s3 == p, s4 == p, s5 == p | s6 == p]].",
            "VernacDefinition",
            "fbdb2ea8409ba3e55582d52d10b07904aa2d5c0a"
        ],
        [
            "Definition dir_iso3l := [:: id3; s05; s14; s23; r05; r14; r23; r50; r41; r32; r024; r042; r012; r021; r031; r013; r043; r034; s1; s2; s3; s4; s5; s6].",
            "VernacDefinition",
            "0066ea856e364b78b7b523155c3419dbfc6e7432"
        ],
        [
            "Definition S0 := [:: F5; F4; F3; F2; F1; F0].",
            "VernacDefinition",
            "6b37117acd035721adc055331947b28caead2d52"
        ],
        [
            "Definition S0f (sc : cube) : cube := tnth [tuple of S0] sc.",
            "VernacDefinition",
            "1284b343f2a522217f5b87580b813711862414c8"
        ],
        [
            "Lemma S0_inv : involutive S0f.",
            "VernacStartTheoremProof",
            "6148dc57e40e44f9f7949002f514ab0fd532baad"
        ],
        [
            "by move=> z; apply/eqP; case: z; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition s0 := (perm (inv_inj S0_inv)).",
            "VernacDefinition",
            "5bbeebce52d68bff5a190d6d622884215abfe60f"
        ],
        [
            "Definition is_iso3 (p : {perm cube}) := forall fi, p (s0 fi) = s0 (p fi).",
            "VernacDefinition",
            "233a3929db8c85863c8e7a62119ab2dcbcfe2cbf"
        ],
        [
            "Lemma dir_iso_iso3 : forall p, p \\in dir_iso3 -> is_iso3 p.",
            "VernacStartTheoremProof",
            "03c6ab73cb545e5f4c6a43d8a7e4d8d6f6627896"
        ],
        [
            "move=> p; rewrite inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by do ?case/orP; move/eqP=> <- a; rewrite !permE; case: a; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iso3_ndir : forall p, p \\in dir_iso3 -> is_iso3 (s0 * p).",
            "VernacStartTheoremProof",
            "1da6c425f87691d10c4e49fa7667fa5e6402d51b"
        ],
        [
            "move=> p; rewrite inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by do ?case/orP; move/eqP=> <- a; rewrite !(permM, permE); case: a; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sop (p : {perm cube}) : seq cube := val (val (val p)).",
            "VernacDefinition",
            "f027085dbdce2e7d006903e8652c7ccf20c7f71c"
        ],
        [
            "Lemma sop_inj : injective sop.",
            "VernacStartTheoremProof",
            "d022ceac216e8bbd829d3433dcd82103e1ef6864"
        ],
        [
            "by do 2!apply: (inj_comp val_inj); apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition prod_tuple (t1 t2 : seq cube) := map (fun n : 'I_6 => nth F0 t2 n) t1.",
            "VernacDefinition",
            "5c6c85a7f4684b325889cdf3301e66576f6cbd25"
        ],
        [
            "Lemma sop_spec : forall x (n0 : 'I_6), nth F0 (sop x) n0 = x n0.",
            "VernacStartTheoremProof",
            "2c86bd1c61c18dd004514598388aaf9b7f77b636"
        ],
        [
            "by move=> x n0; rewrite -pvalE unlock enum_rank_ord (tnth_nth F0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prod_t_correct : forall (x y : {perm cube}) (i : cube), (x * y) i = nth F0 (prod_tuple (sop x) (sop y)) i.",
            "VernacStartTheoremProof",
            "3c3f41a8eb76bb7d1c8870c4302b0a1bc349a8e2"
        ],
        [
            "move=> x y i; rewrite permM -!sop_spec (nth_map F0) // size_tuple /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite card_ord ltn_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sop_morph : {morph sop : x y / x * y >-> prod_tuple x y}.",
            "VernacStartTheoremProof",
            "2869c8ba821aa458de3206ad39ffc04c25e5df81"
        ],
        [
            "move=> x y; apply: (@eq_from_nth _ F0) => [|/= i].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite size_map !size_tuple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite size_tuple card_ord => lti6.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -[i]/(val (Ordinal lti6)) sop_spec -prod_t_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ecubes : seq cube := [:: F0; F1; F2; F3; F4; F5].",
            "VernacDefinition",
            "d4a6eca78942d7642f0ed0882793fcb2a0e5d29c"
        ],
        [
            "Lemma ecubes_def : ecubes = enum (@predT cube).",
            "VernacStartTheoremProof",
            "2ad6c6a574d791567df7375db61bac9d43adc7e0"
        ],
        [
            "by apply: (inj_map val_inj); rewrite val_enum_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition seq_iso_L := [:: [:: F0; F1; F2; F3; F4; F5]; S05; S14; S23; R05; R14; R23; R50; R41; R32; R024; R042; R012; R021; R031; R013; R043; R034; S1; S2; S3; S4; S5; S6].",
            "VernacDefinition",
            "6a2ac31d786838ddc40bdf90f11b8f5e80880f5b"
        ],
        [
            "Lemma seqs1 : forall f injf, sop (@perm _ f injf) = map f ecubes.",
            "VernacStartTheoremProof",
            "7c4b20681601f7342f3cc3a57cb57bc414b69c27"
        ],
        [
            "move=> f ?; rewrite ecubes_def /sop /= -codom_ffun pvalE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: eq_codom; apply: permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Lcorrect : seq_iso_L == map sop [:: id3; s05; s14; s23; r05; r14; r23; r50; r41; r32; r024; r042; r012; r021; r031; r013; r043; r034; s1; s2; s3; s4; s5; s6].",
            "VernacStartTheoremProof",
            "c28b9365974c859870bec98e29b7184add72fd03"
        ],
        [
            "by rewrite /= !seqs1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iso0_1 : dir_iso3 =i dir_iso3l.",
            "VernacStartTheoremProof",
            "a565dd84016c976c7c0e40b58a3b1563d6977bcb"
        ],
        [
            "by move=> p; rewrite /= !inE /= -!(eq_sym p).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma L_iso : forall p, (p \\in dir_iso3) = (sop p \\in seq_iso_L).",
            "VernacStartTheoremProof",
            "eb54f419ef14f4fbb2cb10cbba8867bed2ef31a9"
        ],
        [
            "by move=> p; rewrite (eqP Lcorrect) mem_map ?iso0_1 //; apply: sop_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma stable : forall x y, x \\in dir_iso3 -> y \\in dir_iso3 -> x * y \\in dir_iso3.",
            "VernacStartTheoremProof",
            "63efd5851798293f5103e152090b78a1bd6a853c"
        ],
        [
            "move=> x y; rewrite !L_iso sop_morph => Hx Hy.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by move/sop: y Hy; apply/allP; move/sop: x Hx; apply/allP; vm_compute.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iso_eq_F0_F1 : forall r s : {perm cube}, r \\in dir_iso3 -> s \\in dir_iso3 -> r F0 = s F0 -> r F1 = s F1 -> r = s.",
            "VernacStartTheoremProof",
            "a9f5e68ced2675a25ef8982f23c6ea93e1e15f9d"
        ],
        [
            "move=> r s; rewrite !L_iso => hr hs hrs0 hrs1; apply: sop_inj; apply/eqP.",
            "VernacExtend",
            "d06a53ef03d59a5446566a3fba3fbd91d2d9a4ff"
        ],
        [
            "move/eqP: hrs0; apply/implyP; move/eqP: hrs1; apply/implyP; rewrite -!sop_spec.",
            "VernacExtend",
            "43cc76884b0c4f0dc3fb76ff5d9d115d29c5cdb8"
        ],
        [
            "by move/sop: r hr; apply/allP; move/sop: s hs; apply/allP; vm_compute.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ndir_s0p : forall p, p \\in dir_iso3 -> s0 * p \\notin dir_iso3.",
            "VernacStartTheoremProof",
            "1aa3c050c5dd90bb82476175b6e1728140e169d7"
        ],
        [
            "move=> p; rewrite !L_iso sop_morph seqs1.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by move/sop: p; apply/allP; vm_compute.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition indir_iso3l := map (mulg s0) dir_iso3l.",
            "VernacDefinition",
            "25176ffc2394490c7f9410d35a7b4a0d83b19a4d"
        ],
        [
            "Definition iso3l := dir_iso3l ++ indir_iso3l.",
            "VernacDefinition",
            "7ba5d007b17b7c4ce05d91444b57d04b34ad8371"
        ],
        [
            "Definition seq_iso3_L := map sop iso3l.",
            "VernacDefinition",
            "cd6008a738c7079e98a9774ae23f1417d497f9d9"
        ],
        [
            "Lemma eqperm : forall p1 p2 : {perm cube}, (p1 == p2) = all (fun s => p1 s == p2 s) ecubes.",
            "VernacStartTheoremProof",
            "3dcd0e98bc64ae8790547af01ef4483dab753ae8"
        ],
        [
            "move=> p1 p2; apply/eqP/allP=> [-> // | Ep12]; apply/permP=> x.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by apply/eqP; rewrite Ep12 // ecubes_def mem_enum.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iso_eq_F0_F1_F2 : forall r s : {perm cube}, is_iso3 r -> is_iso3 s -> r F0 = s F0 -> r F1 = s F1 -> r F2 = s F2 -> r = s.",
            "VernacStartTheoremProof",
            "0058853b29a6a22995585e0c9253971aec1aabd2"
        ],
        [
            "move=> r s hr hs hrs0 hrs1 hrs2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have:= hrs0; have:= hrs1; have:= hrs2.",
            "VernacExtend",
            "6e9c4a7182e7bfb867a934dc6fbcd115eb968278"
        ],
        [
            "have e23: F2 = s0 F3 by apply/eqP; rewrite permE /S0f (tnth_nth F0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have e14: F1 = s0 F4 by apply/eqP; rewrite permE /S0f (tnth_nth F0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have e05: F0 = s0 F5 by apply/eqP; rewrite permE /S0f (tnth_nth F0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite e23 e14 e05; rewrite !hr !hs.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "move/perm_inj=> hrs3; move/perm_inj=> hrs4; move/perm_inj=> hrs5.",
            "VernacExtend",
            "e0ac37cc297cc328730d6b7eadc79537d4e2c654"
        ],
        [
            "by apply/eqP; rewrite eqperm /= hrs0 hrs1 hrs2 hrs3 hrs4 hrs5 !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac iso_tac := let a := fresh \"a\" in apply/permP => a; apply/eqP; rewrite !permM !permE; case: a; do 6?case.",
            "VernacExtend",
            "0cbcd3398d0b23ed09e1150ccc174393dbda9928"
        ],
        [
            "Ltac inv_tac := apply: esym (etrans _ (mul1g _)); apply: canRL (mulgK _) _; iso_tac.",
            "VernacExtend",
            "47fe94630c5146937a23e3db940ea76afd41b798"
        ],
        [
            "Lemma dir_s0p : forall p, (s0 * p) \\in dir_iso3 -> p \\notin dir_iso3.",
            "VernacStartTheoremProof",
            "ca9af644a7517519aeeb48155aab925cb4b701b5"
        ],
        [
            "move=> p Hs0p; move: (ndir_s0p Hs0p); rewrite mulgA.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "have e: (s0^-1=s0) by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -{1}e mulVg mul1g.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_iso3b p := (p * s0 == s0 * p).",
            "VernacDefinition",
            "e2cb7c5420588e2056455b162f0636a4e952105a"
        ],
        [
            "Definition iso3 := [set p | is_iso3b p].",
            "VernacDefinition",
            "7412cc3e2d081c0aaba41cb93f1e5ab64a81bc16"
        ],
        [
            "Lemma is_iso3P : forall p, reflect (is_iso3 p) (p \\in iso3).",
            "VernacStartTheoremProof",
            "7950ab66be55c9323d7f5afed1b4d14572cab03c"
        ],
        [
            "move=> p; apply: (iffP idP); rewrite inE /iso3 /is_iso3b /is_iso3 => e.",
            "VernacExtend",
            "b7d55d5cc9e609b184db748f6780e12224901e48"
        ],
        [
            "by move=> fi; rewrite -!permM (eqP e).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/eqP; apply/permP=> z; rewrite !permM (e z).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma group_set_iso3 : group_set iso3.",
            "VernacStartTheoremProof",
            "3f0a2619a4a82498fae5f440bc00b3779065cf66"
        ],
        [
            "apply/group_setP; split.",
            "VernacExtend",
            "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
        ],
        [
            "by apply/is_iso3P => fi; rewrite -!permM mulg1 mul1g.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> x1 y; rewrite /iso3 !inE /= /is_iso3.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite /is_iso3b.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -mulgA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/eqP => hx1; move/eqP => hy.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite hy !mulgA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -hx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical iso_group3 := Group group_set_iso3.",
            "VernacDefinition",
            "e1ccbf8c6a99b5343cc116ab8e335d0fc17fa799"
        ],
        [
            "Lemma group_set_diso3 : group_set dir_iso3.",
            "VernacStartTheoremProof",
            "2f51c984caa89f990c69601156b8e082867a7df4"
        ],
        [
            "apply/group_setP; split; first by rewrite inE eqxx /=.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: stable.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical diso_group3 := Group group_set_diso3.",
            "VernacDefinition",
            "93360267e446437cd6bb58a01a908532a382238d"
        ],
        [
            "Lemma gen_diso3 : dir_iso3 = <<[set r05; r14]>>.",
            "VernacStartTheoremProof",
            "d2f754294b62fa39637b1caabd28c8d0b5222135"
        ],
        [
            "apply/setP; apply/subset_eqP; apply/andP; split; first last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gen_subG; apply/subsetP => x; rewrite !inE; case/orP; move/eqP ->; rewrite eqxx !orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subsetP => x; rewrite !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have -> : s05 = r05 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : s14 = r14 * r14 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : s23 = r14 * r14 * r05 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r23 = r05 * r14 * r05 * r14 * r14 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r50 = r05 * r05 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r41 = r14 * r14 * r14 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r32 = r14 * r14 * r14 * r05* r14 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r024 = r05 * r14 * r14 * r14 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r042 = r14 * r05 * r05 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r012 = r14 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r021 = r05 * r14 * r05 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r031 = r05 * r14 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r013 = r05 * r05 * r14 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r043 = r14 * r14 * r14 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : r034 = r05 * r05 * r05 * r14 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : s1 = r14 * r14 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : s2 = r05 * r14 * r14 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : s3 = r05 * r14 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : s4 = r05 * r14 * r14 * r14 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : s5 = r14 * r05 * r05 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have -> : s6 = r05 * r05 * r14 by iso_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by do ?case/predU1P=> [<-|]; first exact: group1; last (move/eqP => <-); rewrite ?groupMl ?mem_gen // !inE eqxx ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation col_cubes := {ffun cube -> colors}.",
            "VernacSyntacticDefinition",
            "1a2fff6f5ae33aa1fab8720acb782ceb3a5a4134"
        ],
        [
            "Definition act_g (sc : col_cubes) (p : {perm cube}) : col_cubes := [ffun z => sc (p^-1 z)].",
            "VernacDefinition",
            "4de7ab2eb0d77559246089f86eb15a7d51d38ab4"
        ],
        [
            "Lemma act_g_1 : forall k, act_g k 1 = k.",
            "VernacStartTheoremProof",
            "1c540691a6e3910b9cb7e161765766e4ff2c457e"
        ],
        [
            "by move=> k; apply/ffunP=> a; rewrite ffunE invg1 permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma act_g_morph : forall k x y, act_g k (x * y) = act_g (act_g k x) y.",
            "VernacStartTheoremProof",
            "e9a3e07c0fca2ef26ace38287c82c836e1c09afa"
        ],
        [
            "by move=> k x y; apply/ffunP=> a; rewrite !ffunE invMg permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition to_g := TotalAction act_g_1 act_g_morph.",
            "VernacDefinition",
            "e9e7a27a77bf82d752416da8702519468cd8ddf6"
        ],
        [
            "Definition cube_coloring_number24 := #|orbit to_g diso_group3 @: setT|.",
            "VernacDefinition",
            "bdee1ab635e1a49fba11b89e39983d70dcbd5d1d"
        ],
        [
            "Lemma Fid3 : 'Fix_to_g[1] = setT.",
            "VernacStartTheoremProof",
            "00aff45267d4fed532b4f53fc21c4cf2d306917e"
        ],
        [
            "by apply/setP=> x /=; rewrite (sameP afix1P eqP) !inE act1 eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Fid3 : #|'Fix_to_g[1]| = (n ^ 6)%N.",
            "VernacStartTheoremProof",
            "0d2f86e3d00e6fd9d9c6449c8daa0400a27ddcce"
        ],
        [
            "rewrite -[6]card_ord -[n]card_ord -card_ffun_on Fid3 cardsT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by symmetry; apply: eq_card => ff; apply/ffun_onP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition col0 (sc : col_cubes) : colors := sc F0.",
            "VernacDefinition",
            "c9eb63d8f0a94ed82d659dbe4e56526bd19aa54d"
        ],
        [
            "Definition col1 (sc : col_cubes) : colors := sc F1.",
            "VernacDefinition",
            "dad69f45347f0ffe47dbb8fd27a46f932e10d1e7"
        ],
        [
            "Definition col2 (sc : col_cubes) : colors := sc F2.",
            "VernacDefinition",
            "5b5a3e321614695d0eaa8ede3044b19966efd133"
        ],
        [
            "Definition col3 (sc : col_cubes) : colors := sc F3.",
            "VernacDefinition",
            "d97f33bc8510bcdd07dbcdc0d5da46a80a89ed27"
        ],
        [
            "Definition col4 (sc : col_cubes) : colors := sc F4.",
            "VernacDefinition",
            "bc944ad0839acb6feb5da19100217999d5172dba"
        ],
        [
            "Definition col5 (sc : col_cubes) : colors := sc F5.",
            "VernacDefinition",
            "11a0d0744bd3b2263e2d7487bfaade0697c68b50"
        ],
        [
            "Lemma eqperm_map2 : forall p1 p2 : col_cubes, (p1 == p2) = all (fun s => p1 s == p2 s) [:: F0; F1; F2; F3; F4; F5].",
            "VernacStartTheoremProof",
            "9c7f23e1ac1cb4d3a6bed9e66499d44ca9b3a497"
        ],
        [
            "move=> p1 p2; apply/eqP/allP=> [-> // | Ep12]; apply/ffunP=> x.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by apply/eqP; apply Ep12; case: x; do 6?case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation infE := (sameP afix1P eqP).",
            "VernacSyntacticDefinition",
            "12dc7d5e681a775ac02cf8a03a9e112d3f990e45"
        ],
        [
            "Lemma F_s05 : 'Fix_to_g[s05] = [set x | (col1 x == col4 x) && (col2 x == col3 x)].",
            "VernacStartTheoremProof",
            "b976f0fbf1eb662928ac78785e47b7f59cc24b53"
        ],
        [
            "have s05_inv: s05^-1=s05 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s05_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite !eqxx /= andbT/col1/col2/col3/col4/col5/col0.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 2![rewrite eq_sym; case: {+}(_ == _)=> //= ].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_s14 : 'Fix_to_g[s14]= [set x | (col0 x == col5 x) && (col2 x == col3 x)].",
            "VernacStartTheoremProof",
            "0b93e68d37cb9d48039a1c3a60126917562d1762"
        ],
        [
            "have s14_inv: s14^-1=s14 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s14_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite !eqxx /= andbT/col1/col2/col3/col4/col5/col0.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 2![rewrite eq_sym; case: {+}(_ == _)=> //= ].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma r05_inv : r05^-1 = r50.",
            "VernacStartTheoremProof",
            "a4b738f815c0838ba7710fc3910dc5e7410fba50"
        ],
        [
            "by inv_tac.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma r50_inv : r50^-1 = r05.",
            "VernacStartTheoremProof",
            "efb87464cd4fe93d9ef2a8ae29c874399cd32b05"
        ],
        [
            "by inv_tac.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma r14_inv : r14^-1 = r41.",
            "VernacStartTheoremProof",
            "fac279b0a1112788300ee0cd2da57ab2d75243c1"
        ],
        [
            "by inv_tac.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma r41_inv : r41^-1 = r14.",
            "VernacStartTheoremProof",
            "e0c22ddf8f2b098ddf231acb1d8290149a3ce770"
        ],
        [
            "by inv_tac.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma s23_inv : s23^-1 = s23.",
            "VernacStartTheoremProof",
            "137486ea26752285d5bcfd832dfb8c25ac85362f"
        ],
        [
            "by inv_tac.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_s23 : 'Fix_to_g[s23] = [set x | (col0 x == col5 x) && (col1 x == col4 x)].",
            "VernacStartTheoremProof",
            "ac9c3cfa0ff0a9cb42799b64d0aa7bbd4f0e25a9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s23_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite !eqxx /= andbT/col1/col2/col3/col4/col5/col0.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 2![rewrite eq_sym; case: {+}(_ == _)=> //=].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r05 : 'Fix_to_g[r05]= [set x | (col1 x == col2 x) && (col2 x == col3 x) && (col3 x == col4 x)].",
            "VernacStartTheoremProof",
            "ce5477b93fb26be7cafb4214e9849c3b143c13dc"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r05_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite !eqxx /= !andbT /col1/col2/col3/col4/col5/col0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E) ].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r50 : 'Fix_to_g[r50]= [set x | (col1 x == col2 x) && (col2 x == col3 x) && (col3 x == col4 x)].",
            "VernacStartTheoremProof",
            "d5fb19acc4586351ff3e6298211da3b002598fca"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r50_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite !eqxx /= !andbT /col1/col2/col3/col4.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E) ].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r23 : 'Fix_to_g[r23] = [set x | (col0 x == col1 x) && (col1 x == col4 x) && (col4 x == col5 x)].",
            "VernacStartTheoremProof",
            "839d88e7197a5e7bb6b30fd13c8c0af0fb9129dc"
        ],
        [
            "have r23_inv: r23^-1 = r32 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r23_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite !eqxx /= !andbT /col1/col0/col5/col4.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r32 : 'Fix_to_g[r32] = [set x | (col0 x == col1 x) && (col1 x == col4 x) && (col4 x == col5 x)].",
            "VernacStartTheoremProof",
            "bfbbd7728b5c4332c9305d9e3fdda49326b543b5"
        ],
        [
            "have r32_inv: r32^-1 = r23 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r32_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite !eqxx /= !andbT /col1/col0/col5/col4.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r14 : 'Fix_to_g[r14] = [set x | (col0 x == col2 x) && (col2 x == col3 x) && (col3 x == col5 x)].",
            "VernacStartTheoremProof",
            "f096ea518e7949b32047d4da809d7cddaf845e64"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r14_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite !eqxx /= !andbT /col2/col0/col5/col3.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r41 : 'Fix_to_g[r41] = [set x | (col0 x == col2 x) && (col2 x == col3 x) && (col3 x == col5 x)].",
            "VernacStartTheoremProof",
            "8a002f56f5b476d148bfa2ad8a912606951d38a4"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r41_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite !eqxx /= !andbT /col2/col0/col5/col3.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r024 : 'Fix_to_g[r024] = [set x | (col0 x == col4 x) && (col4 x == col2 x) && (col1 x == col3 x) && (col3 x == col5 x) ].",
            "VernacStartTheoremProof",
            "215a1363fd7a9162b2ac101a6a429d78c7a052b6"
        ],
        [
            "have r024_inv: r024^-1 = r042 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r024_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r042 : 'Fix_to_g[r042] = [set x | (col0 x == col4 x) && (col4 x == col2 x) && (col1 x == col3 x) && (col3 x == col5 x)].",
            "VernacStartTheoremProof",
            "b3f63346f8fa8a9b068d2b52e84b88d06b8c2275"
        ],
        [
            "have r042_inv: r042^-1 = r024 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r042_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r012 : 'Fix_to_g[r012] = [set x | (col0 x == col2 x) && (col2 x == col1 x) && (col3 x == col4 x) && (col4 x == col5 x)].",
            "VernacStartTheoremProof",
            "e0fa441280fdf13e2fca8366737165ad86db33d4"
        ],
        [
            "have r012_inv: r012^-1 = r021 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r012_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r021 : 'Fix_to_g[r021] = [set x | (col0 x == col2 x) && (col2 x == col1 x) && (col3 x == col4 x) && (col4 x == col5 x)].",
            "VernacStartTheoremProof",
            "7a3bc2fa58cc750876cc416c4c07481a2aebd807"
        ],
        [
            "have r021_inv: r021^-1 = r012 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r021_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r031 : 'Fix_to_g[r031] = [set x | (col0 x == col3 x) && (col3 x == col1 x) && (col2 x == col4 x) && (col4 x == col5 x)].",
            "VernacStartTheoremProof",
            "85cc04cf110b083698f97bb40714a97a98deb77f"
        ],
        [
            "have r031_inv: r031^-1 = r013 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r031_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r013 : 'Fix_to_g[r013] = [set x | (col0 x == col3 x) && (col3 x == col1 x) && (col2 x == col4 x) && (col4 x == col5 x)].",
            "VernacStartTheoremProof",
            "d71384a61de32841651fcb1e632306a0ebd9b0eb"
        ],
        [
            "have r013_inv: r013^-1 = r031 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r013_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r043 : 'Fix_to_g[r043] = [set x | (col0 x == col4 x) && (col4 x == col3 x) && (col1 x == col2 x) && (col2 x == col5 x)].",
            "VernacStartTheoremProof",
            "3350cfdad689e3379d3d4b54685d03365e6d065f"
        ],
        [
            "have r043_inv: r043^-1 = r034 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r043_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_r034 : 'Fix_to_g[r034] = [set x | (col0 x == col4 x) && (col4 x == col3 x) && (col1 x == col2 x) && (col2 x == col5 x)].",
            "VernacStartTheoremProof",
            "ba761eca6e997d7637fffbfe58dd39614a74c717"
        ],
        [
            "have r034_inv: r034^-1 = r043 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r034_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_s1 : 'Fix_to_g[s1] = [set x | (col0 x == col5 x) && (col1 x == col2 x) && (col3 x == col4 x)].",
            "VernacStartTheoremProof",
            "b32d4fe3ee565ebfe7e769796f046d2c491791b1"
        ],
        [
            "have s1_inv: s1^-1 = s1 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s1_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_s2 : 'Fix_to_g[s2] = [set x | (col0 x == col5 x) && (col1 x == col3 x) && (col2 x == col4 x)].",
            "VernacStartTheoremProof",
            "bff46c5f795eee66321ac6abfb817d9fc0395be1"
        ],
        [
            "have s2_inv: s2^-1 = s2 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s2_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_s3 : 'Fix_to_g[s3] = [set x | (col0 x == col1 x) && (col2 x == col3 x) && (col4 x == col5 x)].",
            "VernacStartTheoremProof",
            "b952cebdd28cb7e3f9c8ef93f7ba95f2e50f2f13"
        ],
        [
            "have s3_inv: s3^-1 = s3 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s3_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_s4 : 'Fix_to_g[s4] = [set x | (col0 x == col4 x) && (col1 x == col5 x) && (col2 x == col3 x)].",
            "VernacStartTheoremProof",
            "1b128ea02bce824d98ad6d5e6e5427c6af061081"
        ],
        [
            "have s4_inv: s4^-1 = s4 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s4_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_s5 : 'Fix_to_g[s5] = [set x | (col0 x == col2 x) && (col1 x == col4 x) && (col3 x == col5 x)].",
            "VernacStartTheoremProof",
            "5725e53337de7aef3fecf094ae3024e22b7fa47b"
        ],
        [
            "have s5_inv: s5^-1 = s5 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s5_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_s6 : 'Fix_to_g[s6] = [set x | (col0 x == col3 x) && (col1 x == col4 x) && (col2 x == col5 x)].",
            "VernacStartTheoremProof",
            "4949fa46b23e7c2d23f43a3a37e9c61dfe2ff3e4"
        ],
        [
            "have s6_inv: s6^-1 = s6 by inv_tac.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s6_inv !ffunE !permE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
            "VernacExtend",
            "550810c63f0540325d17b6339409bd032a8134e5"
        ],
        [
            "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniq4_uniq6 : forall x y z t : cube, uniq [:: x; y; z; t] -> exists u, exists v, uniq [:: x; y; z; t; u; v].",
            "VernacStartTheoremProof",
            "0f6504b795d8e59918ae8d9be5f3f937de9f100e"
        ],
        [
            "move=> x y z t Uxt; move: (cardC (mem [:: x; y; z; t])).",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite card_ord (card_uniq_tuple Uxt) => hcard.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have hcard2: #|predC (mem [:: x; y; z; t])| = 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: (@addnI 4); rewrite /injective hcard.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: #|predC (mem [:: x; y; z; t])| != 0 by rewrite hcard2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/existsP=> u Hu; exists u.",
            "VernacExtend",
            "0c8b6bc2d11130cb1ccc71b7f66640646f4f037d"
        ],
        [
            "move: (cardC (mem [:: x; y; z; t; u])); rewrite card_ord => hcard5.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have: #|[predC [:: x; y; z; t; u]]| !=0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -lt0n -(ltn_add2l #|[:: x; y; z; t; u]|) hcard5 addn0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (leq_ltn_trans (card_size [:: x; y; z; t; u])).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/existsP=> v; rewrite inE (mem_cat _ [:: _; _; _; _]).",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case/norP=> Hv Huv; exists v.",
            "VernacExtend",
            "804d1fd80ff9b8f5e16a6e34cd7ea5951c6bf797"
        ],
        [
            "rewrite (cat_uniq [:: x; y; z; t]) Uxt andTb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -rev_uniq /= negb_or Hu orbF Hv Huv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_n4 : forall x y z t : cube, uniq [:: x; y; z; t] -> #|[set p : col_cubes | (p x == p y) && (p z == p t)]| = (n ^ 4)%N.",
            "VernacStartTheoremProof",
            "c63ba30166949642bb0a56a85e1ee4267c1fe9aa"
        ],
        [
            "move=> x y z t Uxt.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -[n]card_ord .",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (uniq4_uniq6 Uxt) => u; case=> v Uxv.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "pose ff (p : col_cubes) := (p x, p z, p u , p v).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite -(@card_in_image _ _ ff); first last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> p1 p2; rewrite !inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case/andP=> p1y p1t; case/andP=> p2y p2t [px pz] pu pv.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have eqp12: all (fun i => p1 i == p2 i) [:: x; y; z; t; u; v].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /= -(eqP p1y) -(eqP p1t) -(eqP p2y) -(eqP p2t) px pz pu pv !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/ffunP=> i; apply/eqP; apply: (allP eqp12).",
            "VernacExtend",
            "6e77d60b6fe9e5152bca0bfa572494ee57c5c96d"
        ],
        [
            "by rewrite (subset_cardP _ (subset_predT _)) // (card_uniqP Uxv) card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ->:forall n, (n ^ 4)%N= (n*n*n*n)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> n0; rewrite (expnD n0 2 2) -mulnn mulnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -!card_prod; apply: eq_card => [] [[[c d]e ]g] /=; apply/imageP.",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "rewrite (cat_uniq [::x; y; z; t]) in Uxv; case/and3P: Uxv => _ hasxt.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /= !inE andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/negbTE=> nuv .",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (cat_uniq [::x; y]) in Uxt; case/and3P: Uxt => _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /= !andbT orbF; case/norP; rewrite !inE => nxyz nxyt _.",
            "VernacExtend",
            "2253759ff5c580854290fce82296a80357452125"
        ],
        [
            "move: hasxt; rewrite /= !orbF; case/norP; rewrite !inE orbA.",
            "VernacExtend",
            "7cd855b46127b5e4e6df75c3fd6587c8d54114e3"
        ],
        [
            "case/norP => nxyu nztu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite orbA; case/norP=> nxyv nztv.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "exists [ffun i => if pred2 x y i then c else if pred2 z t i then d else if u==i then e else g].",
            "VernacExtend",
            "69db6c193bf937a2aafd34a14e3d34ac8ee86a8d"
        ],
        [
            "rewrite !inE /= !ffunE //= !eqxx orbT //= !eqxx /= orbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (negbTE nxyz) (negbTE nxyt).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {}/ff !ffunE /= !eqxx /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (negbTE nxyz) (negbTE nxyu) (negbTE nztu) (negbTE nxyv) (negbTE nztv).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite nuv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_n3_3 : forall x y z t: cube, uniq [:: x; y; z; t] -> #|[set p : col_cubes | (p x == p y) && (p y == p z)&& (p z == p t)]| = (n ^ 3)%N.",
            "VernacStartTheoremProof",
            "69bcb4ae102d2eb11c26b995dcf1743bb5f4c381"
        ],
        [
            "move=> x y z t Uxt; rewrite -[n]card_ord .",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: (uniq4_uniq6 Uxt) => u; case=> v Uxv.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "pose ff (p : col_cubes) := (p x, p u , p v); rewrite -(@card_in_image _ _ ff); first last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> p1 p2; rewrite !inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case/andP; case/andP => p1xy p1yz p1zt.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "case/andP; case/andP => p2xy p2yz p2zt [px pu] pv.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have eqp12: all (fun i => p1 i == p2 i) [:: x; y; z; t; u; v].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /= -(eqP p1zt) -(eqP p2zt) -(eqP p1yz) -(eqP p2yz) -(eqP p1xy) -(eqP p2xy) px pu pv !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/ffunP=> i; apply/eqP; apply: (allP eqp12).",
            "VernacExtend",
            "6e77d60b6fe9e5152bca0bfa572494ee57c5c96d"
        ],
        [
            "by rewrite (subset_cardP _ (subset_predT _)) // (card_uniqP Uxv) card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ->:forall n, (n ^ 3)%N= (n*n*n)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> n0; rewrite (expnD n0 2 1) -mulnn expn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -!card_prod; apply: eq_card => [] [[c d]e ] /=; apply/imageP.",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "rewrite (cat_uniq [::x; y; z; t]) in Uxv; case/and3P: Uxv => _ hasxt.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /uniq !inE !andbT; move/negbTE=> nuv.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "exists [ffun i => if (i \\in [:: x; y; z; t]) then c else if u == i then d else e].",
            "VernacExtend",
            "cd4ea00f90af839436052c6a5f24e5a791abc8dc"
        ],
        [
            "by rewrite /= !inE !ffunE !inE !eqxx !orbT !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {}/ff !ffunE !inE /= !eqxx /=; move: hasxt; rewrite nuv.",
            "VernacExtend",
            "3051a4e8bb68166b140398e2c3c2862857447428"
        ],
        [
            "by do 8![case E: ( _ == _ ); rewrite ?(eqP E)/= ?inE ?eqxx //= ?E {E}].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_n2_3 : forall x y z t u v: cube, uniq [:: x; y; z; t; u; v] -> #|[set p : col_cubes | (p x == p y) && (p y == p z)&& (p t == p u ) && (p u== p v)]| = (n ^ 2)%N.",
            "VernacStartTheoremProof",
            "4ae7920679205b540488375c9815f7f3eea887b2"
        ],
        [
            "move=> x y z t u v Uxv; rewrite -[n]card_ord .",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "pose ff (p : col_cubes) := (p x, p t); rewrite -(@card_in_image _ _ ff); first last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> p1 p2; rewrite !inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case/andP; case/andP; case/andP => p1xy p1yz p1tu p1uv.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "case/andP; case/andP; case/andP => p2xy p2yz p2tu p2uv [px pu].",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "have eqp12: all (fun i => p1 i == p2 i) [:: x; y; z; t; u; v].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /= -(eqP p1yz) -(eqP p2yz) -(eqP p1xy) -(eqP p2xy) -(eqP p1uv) -(eqP p2uv) -(eqP p1tu) -(eqP p2tu) px pu !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/ffunP=> i; apply/eqP; apply: (allP eqp12).",
            "VernacExtend",
            "6e77d60b6fe9e5152bca0bfa572494ee57c5c96d"
        ],
        [
            "by rewrite (subset_cardP _ (subset_predT _)) // (card_uniqP Uxv) card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ->:forall n, (n ^ 2)%N= (n*n)%N by move=> n0; rewrite -mulnn .",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -!card_prod; apply: eq_card => [] [c d]/=; apply/imageP.",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "rewrite (cat_uniq [::x; y; z]) in Uxv; case/and3P: Uxv => Uxt hasxt nuv .",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "move: hasxt; rewrite /= !orbF; case/norP; rewrite !inE => nxyzt.",
            "VernacExtend",
            "dc9f04331235d96f3741e544c71c0f829fec1670"
        ],
        [
            "case/norP => nxyzu nxyzv.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists [ffun i => if (i \\in [:: x; y; z] ) then c else d].",
            "VernacExtend",
            "959556e381ca9c77fe70f7bc6837d0848eb2e4ad"
        ],
        [
            "rewrite !inE /= !ffunE !inE //= !eqxx !orbT !eqxx //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (negbTE nxyzt) (negbTE nxyzu)(negbTE nxyzv) !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite {}/ff !ffunE !inE /= !eqxx /= (negbTE nxyzt).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_n3s : forall x y z t u v: cube, uniq [:: x; y; z; t; u; v] -> #|[set p : col_cubes | (p x == p y) && (p z == p t)&& (p u == p v )]| = (n ^ 3)%N.",
            "VernacStartTheoremProof",
            "1e360d0c47a24d77c49986822119f4c3e957dfce"
        ],
        [
            "move=> x y z t u v Uxv; rewrite -[n]card_ord .",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "pose ff (p : col_cubes) := (p x, p z, p u).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite -(@card_in_image _ _ ff); first last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> p1 p2; rewrite !inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case/andP; case/andP => p1xy p1zt p1uv.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "case/andP; case/andP => p2xy p2zt p2uv [px pz] pu.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have eqp12: all (fun i => p1 i == p2 i) [:: x; y; z; t; u; v].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /= -(eqP p1xy) -(eqP p2xy) -(eqP p1zt) -(eqP p2zt) -(eqP p1uv) -(eqP p2uv) px pz pu !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/ffunP=> i; apply/eqP; apply: (allP eqp12).",
            "VernacExtend",
            "6e77d60b6fe9e5152bca0bfa572494ee57c5c96d"
        ],
        [
            "by rewrite (subset_cardP _ (subset_predT _)) // (card_uniqP Uxv) card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ->:forall n, (n ^ 3)%N= (n*n*n)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> n0; rewrite (expnD n0 2 1) -mulnn expn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -!card_prod.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_card => [] [[c d]e ] /=; apply/imageP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite (cat_uniq [::x; y; z; t]) in Uxv; case/and3P: Uxv => Uxt hasxt nuv .",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite (cat_uniq [::x; y]) in Uxt; case/and3P: Uxt => _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /= !orbF !andbT; case/norP; rewrite !inE => nxyz nxyt _.",
            "VernacExtend",
            "2253759ff5c580854290fce82296a80357452125"
        ],
        [
            "move: hasxt; rewrite /= !orbF; case/norP; rewrite !inE orbA.",
            "VernacExtend",
            "7cd855b46127b5e4e6df75c3fd6587c8d54114e3"
        ],
        [
            "case/norP => nxyu nztu.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite orbA; case/norP=> nxyv nztv.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "exists [ffun i => if (i \\in [:: x; y] ) then c else if (i \\in [:: z; t] ) then d else e].",
            "VernacExtend",
            "dfc2fce854e65cce08a7d26c7cdaa4e79a0f9a7e"
        ],
        [
            "rewrite !inE /= !ffunE !inE // !eqxx !orbT !eqxx //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (negbTE nxyz) (negbTE nxyt)(negbTE nxyu) (negbTE nztu) (negbTE nxyv) (negbTE nztv) !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {}/ff !ffunE !inE /= !eqxx /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (negbTE nxyz) (negbTE nxyu) (negbTE nztu).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma burnside_app_iso3 : (cube_coloring_number24 * 24 = n ^ 6 + 6 * n ^ 3 + 3 * n ^ 4 + 8 * (n ^ 2) + 6 * n ^ 3)%N.",
            "VernacStartTheoremProof",
            "7524657e9a0c79a4fa538426fcf1126d3d6646da"
        ],
        [
            "pose iso_list :=[::id3; s05; s14; s23; r05; r14; r23; r50; r41; r32; r024; r042; r012; r021; r031; r013; r043; r034; s1; s2; s3; s4; s5; s6].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite (burnside_formula iso_list) => [||p]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !inE /= !(eq_sym _ p).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: map_uniq (fun p : {perm cube} => (p F0, p F1)) _ _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have bsr:(fun p : {perm cube} => (p F0, p F1)) =1 (fun p => (nth F0 p F0, nth F0 p F1)) \\o sop.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> x; rewrite /= -2!sop_spec.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite (eq_map bsr) map_comp -(eqP Lcorrect); vm_compute.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !big_cons big_nil {1}card_Fid3 /= F_s05 F_s14 F_s23 F_r05 F_r14 F_r23 F_r50 F_r41 F_r32 F_r024 F_r042 F_r012 F_r021 F_r031 F_r013 F_r043 F_r034 F_s1 F_s2 F_s3 F_s4 F_s5 F_s6.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !card_n4 // !card_n3_3 // !card_n2_3 // !card_n3s //; ring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End cube_colouring.",
            "VernacEndSegment",
            "6402ea7f6a6704f68efe525b71e380defcb05661"
        ],
        [
            "End colouring.",
            "VernacEndSegment",
            "4fab680c37a4f867b0a2438db143182398cba262"
        ],
        [
            "Corollary burnside_app_iso_3_3col: cube_coloring_number24 3 = 57.",
            "VernacStartTheoremProof",
            "4be45cb7da4be1afc309224065e9423542324ca1"
        ],
        [
            "by apply/eqP; rewrite -(@eqn_pmul2r 24) // burnside_app_iso3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary burnside_app_iso_2_4col: square_coloring_number8 4 = 55.",
            "VernacStartTheoremProof",
            "80b20a7fbf858d095b8396b9525c6faca6ac77bd"
        ],
        [
            "by apply/eqP; rewrite -(@eqn_pmul2r 8) // burnside_app_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "burnside_formula",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "move=> gT s G Us sG sT to.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite big_uniq // -(card_uniqP Us) (eq_card sG) -Frobenius_Cauchy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_big => // p _; rewrite setTI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/actsP=> ? _ ?; rewrite !inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R1_inj",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "by inj_tac; repeat (destruct val => //=; first by apply/eqP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R2_inj",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by inj_tac; repeat (destruct val => //=; first by apply/eqP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R3_inj",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by inj_tac; repeat (destruct val => //=; first by apply/eqP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_set_rot",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; split; first by rewrite /rot inE /is_rot mulg1 mul1g.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=> x1 y; rewrite /rot !inE /= /is_rot; move/eqP => hx1; move/eqP => hy.",
                        "VernacExtend",
                        "080620bae7a4e6b29a6ac139f4f252d631fa7376"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulgA hy !mulgA hx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rot_eq_c0",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "rewrite /is_rot => r s; move/eqP => hr; move/eqP=> hs hrs; apply/permP => a.",
                        "VernacExtend",
                        "14d3f8903c83cc1e16e17023be3bfbc85ea71a5a"
                    ]
                },
                {
                    "command": [
                        "have ->: a = (r1 ^+ a) c0 by apply/eqP; case: a; do 4?case=> //=; rewrite ?permM !permE.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!permM -!commuteX // !permM hrs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rotations_is_rot",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "move=> r Dr; apply/eqP; apply/permP => a; rewrite !inE -!orbA !permM in Dr *.",
                        "VernacExtend",
                        "00ff85c2978147a9fc435136b93db114a3840954"
                    ]
                },
                {
                    "command": [
                        "by case/or4P: Dr; move/eqP->; rewrite !permE //; case: a; do 4?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sh_inj",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "by apply: (can_inj (g:= Sh)); case; do 4?case=> //=; move=> H; apply/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sv_inj",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "by apply: (can_inj (g:= Sv)); case; do 4?case=> //=; move=> H; apply/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sd1_inj",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj Sd1 _; case; do 4?case=> //=; move=> H; apply/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sd2_inj",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj Sd2 _; case; do 4?case=> //=; move=> H; apply/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ord_enum4",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "by apply: (inj_map val_inj); rewrite val_enum_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_id_sh",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; move/(congr1 (fun p : {perm square} => p c0)); rewrite !permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_iso2",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "by rewrite cards2 diff_id_sh.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_set_iso2",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; split => [|x y]; rewrite !inE ?eqxx //.",
                        "VernacExtend",
                        "945ac9810113bf938ceefee9ae4e6b3a8be91952"
                    ]
                },
                {
                    "command": [
                        "do 2![case/orP; move/eqP->]; gsimpl; rewrite ?(eqxx, orbT) //.",
                        "VernacExtend",
                        "c278d99a5cac18f1ca59af2c83f0c835ccf64a50"
                    ]
                },
                {
                    "command": [
                        "by rewrite -/sh -{1}sh_inv mulVg eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isometries_iso",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "move=> p; rewrite inE.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by do ?case/orP; move/eqP=> -> a; rewrite !permE; case: a; do 4?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_isoP",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "move=> p; apply: (iffP idP) => [|iso_p]; first exact: isometries_iso.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move e1: (p c1) (iso_p c1) => k1; move e0: (p c0) (iso_p c0) k1 e1 => k0.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "case: k0 e0; do 4?[case] => //= ? e0 e2; do 5?[case] => //= ? e1 e3; try by [non_inj p c0 c1 e0 e1 | non_inj p c0 c3 e0 e3].",
                        "VernacExtend",
                        "049b476f3f0359c84c61997a1e9c1d528c563866"
                    ]
                },
                {
                    "command": [
                        "by is_isoPtac p id1 e0 e1 e2 e3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by is_isoPtac p sd1 e0 e1 e2 e3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by is_isoPtac p sh e0 e1 e2 e3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by is_isoPtac p r1 e0 e1 e2 e3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by is_isoPtac p sd2 e0 e1 e2 e3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by is_isoPtac p r2 e0 e1 e2 e3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by is_isoPtac p r3 e0 e1 e2 e3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by is_isoPtac p sv e0 e1 e2 e3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_set_iso",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; split; first by rewrite inE eqxx /=.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=> x y hx hy; apply/is_isoP => ci; rewrite !permM !isometries_iso.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_rot",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "rewrite -[4]/(size [:: id1; r1; r2; r3]) -(card_uniqP _).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_card => x; rewrite rot_is_rot !inE -!orbA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: map_uniq (fun p : {perm square} => p c0) _ _; rewrite /= !permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_set_rotations",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "by rewrite -rot_is_rot group_set_rot.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "act_f_1",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "by move=> k; apply/ffunP=> a; rewrite ffunE invg1 permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "act_f_morph",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "by move=> k x y; apply/ffunP=> a; rewrite !ffunE invMg permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fid",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x /=; rewrite in_setT; apply/afix1P; apply: act1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Fid",
            "line_nb": 190,
            "steps": [
                {
                    "command": [
                        "rewrite -[4]card_ord -[n]card_ord -card_ffun_on Fid cardsE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by symmetry; apply: eq_card => f; apply/ffun_onP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqperm_map",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "move=> p1 p2; apply/eqP/allP=> [-> // | Ep12]; apply/ffunP=> x.",
                        "VernacExtend",
                        "e374b6c583d80c9d8b579c06df7953342f99f751"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; apply Ep12; case: x; do 4!case=> //.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_Sh",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite /act_f sh_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym (eq_sym (x c3)) andbT andbA !andbb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_Sv",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite /act_f sv_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym andbT andbC (eq_sym (x c1)) andbA -andbA !andbb andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r1_inv",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "by inv_tac.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r2_inv",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "by inv_tac.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r3_inv",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "by inv_tac.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r2",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite /act_f r2_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym andbT andbCA andbC (eq_sym (x c3)) andbA -andbA !andbb andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r1",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite /act_f r1_inv !ffunE !permE andbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by do 3![case E: {+}(_ == _); rewrite // {E}(eqP E)]; rewrite eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r3",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite /act_f r3_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite // {E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "burnside_app2",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "rewrite (burnside_formula [:: id1; sh]) => [||p]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= inE diff_id_sh.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite 2!big_cons big_nil addn0 {1}card_Fid F_Sh card_n2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "burnside_app_rot",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "rewrite (burnside_formula [:: id1; r1; r2; r3]) => [||p]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE !orbA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: map_uniq (fun p : {perm square} => p c0) _ _; rewrite /= !permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !big_cons big_nil /= addn0 {1}card_Fid F_r1 F_r2 F_r3.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite card_n card_n2 //=; ring.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_Sd1",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "apply/setP => x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite /act_f sd1_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !eqxx !andbT eq_sym /= andbb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_Sd2",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "apply/setP => x; rewrite (sameP afix1P eqP) !inE eqperm_map /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite /act_f sd2_inv !ffunE !permE /= !eqxx !andbT eq_sym /= andbb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S1_inv",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "by move=> z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S2_inv",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "by move=> z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S3_inv",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "by move=> z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S4_inv",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "by move=> z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S5_inv",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "by move=> z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S05_inj",
            "line_nb": 401,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj S05f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S14_inj",
            "line_nb": 404,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj S14f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S23_inv",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "by move=> z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R05_inj",
            "line_nb": 410,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R50f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R14_inj",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R41f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R23_inj",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R32f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R50_inj",
            "line_nb": 419,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R05f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R41_inj",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R14f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R32_inj",
            "line_nb": 425,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R23f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R024_inj",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R042f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R042_inj",
            "line_nb": 431,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R024f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R012_inj",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R021f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R021_inj",
            "line_nb": 437,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R012f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R031_inj",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R013f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R013_inj",
            "line_nb": 443,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R031f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R043_inj",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R034f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R034_inj",
            "line_nb": 449,
            "steps": [
                {
                    "command": [
                        "by apply: can_inj R043f _ => z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S0_inv",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "by move=> z; apply/eqP; case: z; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dir_iso_iso3",
            "line_nb": 488,
            "steps": [
                {
                    "command": [
                        "move=> p; rewrite inE.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by do ?case/orP; move/eqP=> <- a; rewrite !permE; case: a; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iso3_ndir",
            "line_nb": 492,
            "steps": [
                {
                    "command": [
                        "move=> p; rewrite inE.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by do ?case/orP; move/eqP=> <- a; rewrite !(permM, permE); case: a; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sop_inj",
            "line_nb": 497,
            "steps": [
                {
                    "command": [
                        "by do 2!apply: (inj_comp val_inj); apply: val_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sop_spec",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "by move=> x n0; rewrite -pvalE unlock enum_rank_ord (tnth_nth F0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod_t_correct",
            "line_nb": 504,
            "steps": [
                {
                    "command": [
                        "move=> x y i; rewrite permM -!sop_spec (nth_map F0) // size_tuple /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite card_ord ltn_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ecubes_def",
            "line_nb": 515,
            "steps": [
                {
                    "command": [
                        "by apply: (inj_map val_inj); rewrite val_enum_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "seqs1",
            "line_nb": 519,
            "steps": [
                {
                    "command": [
                        "move=> f ?; rewrite ecubes_def /sop /= -codom_ffun pvalE.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_codom; apply: permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lcorrect",
            "line_nb": 523,
            "steps": [
                {
                    "command": [
                        "by rewrite /= !seqs1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iso0_1",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "by move=> p; rewrite /= !inE /= -!(eq_sym p).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "L_iso",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "by move=> p; rewrite (eqP Lcorrect) mem_map ?iso0_1 //; apply: sop_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "stable",
            "line_nb": 532,
            "steps": [
                {
                    "command": [
                        "move=> x y; rewrite !L_iso sop_morph => Hx Hy.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by move/sop: y Hy; apply/allP; move/sop: x Hx; apply/allP; vm_compute.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ndir_s0p",
            "line_nb": 541,
            "steps": [
                {
                    "command": [
                        "move=> p; rewrite !L_iso sop_morph seqs1.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by move/sop: p; apply/allP; vm_compute.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqperm",
            "line_nb": 548,
            "steps": [
                {
                    "command": [
                        "move=> p1 p2; apply/eqP/allP=> [-> // | Ep12]; apply/permP=> x.",
                        "VernacExtend",
                        "e374b6c583d80c9d8b579c06df7953342f99f751"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite Ep12 // ecubes_def mem_enum.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iso_eq_F0_F1_F2",
            "line_nb": 552,
            "steps": [
                {
                    "command": [
                        "move=> r s hr hs hrs0 hrs1 hrs2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have:= hrs0; have:= hrs1; have:= hrs2.",
                        "VernacExtend",
                        "6e9c4a7182e7bfb867a934dc6fbcd115eb968278"
                    ]
                },
                {
                    "command": [
                        "have e23: F2 = s0 F3 by apply/eqP; rewrite permE /S0f (tnth_nth F0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have e14: F1 = s0 F4 by apply/eqP; rewrite permE /S0f (tnth_nth F0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have e05: F0 = s0 F5 by apply/eqP; rewrite permE /S0f (tnth_nth F0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite e23 e14 e05; rewrite !hr !hs.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "move/perm_inj=> hrs3; move/perm_inj=> hrs4; move/perm_inj=> hrs5.",
                        "VernacExtend",
                        "e0ac37cc297cc328730d6b7eadc79537d4e2c654"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite eqperm /= hrs0 hrs1 hrs2 hrs3 hrs4 hrs5 !eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dir_s0p",
            "line_nb": 564,
            "steps": [
                {
                    "command": [
                        "move=> p Hs0p; move: (ndir_s0p Hs0p); rewrite mulgA.",
                        "VernacExtend",
                        "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
                    ]
                },
                {
                    "command": [
                        "have e: (s0^-1=s0) by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}e mulVg mul1g.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_iso3P",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "move=> p; apply: (iffP idP); rewrite inE /iso3 /is_iso3b /is_iso3 => e.",
                        "VernacExtend",
                        "b7d55d5cc9e609b184db748f6780e12224901e48"
                    ]
                },
                {
                    "command": [
                        "by move=> fi; rewrite -!permM (eqP e).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; apply/permP=> z; rewrite !permM (e z).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_set_iso3",
            "line_nb": 576,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; split.",
                        "VernacExtend",
                        "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
                    ]
                },
                {
                    "command": [
                        "by apply/is_iso3P => fi; rewrite -!permM mulg1 mul1g.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> x1 y; rewrite /iso3 !inE /= /is_iso3.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite /is_iso3b.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -mulgA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move/eqP => hx1; move/eqP => hy.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "rewrite hy !mulgA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -hx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_set_diso3",
            "line_nb": 587,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; split; first by rewrite inE eqxx /=.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: stable.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_diso3",
            "line_nb": 592,
            "steps": [
                {
                    "command": [
                        "apply/setP; apply/subset_eqP; apply/andP; split; first last.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite gen_subG; apply/subsetP => x; rewrite !inE; case/orP; move/eqP ->; rewrite eqxx !orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP => x; rewrite !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have -> : s05 = r05 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : s14 = r14 * r14 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : s23 = r14 * r14 * r05 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r23 = r05 * r14 * r05 * r14 * r14 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r50 = r05 * r05 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r41 = r14 * r14 * r14 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r32 = r14 * r14 * r14 * r05* r14 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r024 = r05 * r14 * r14 * r14 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r042 = r14 * r05 * r05 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r012 = r14 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r021 = r05 * r14 * r05 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r031 = r05 * r14 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r013 = r05 * r05 * r14 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r043 = r14 * r14 * r14 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : r034 = r05 * r05 * r05 * r14 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : s1 = r14 * r14 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : s2 = r05 * r14 * r14 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : s3 = r05 * r14 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : s4 = r05 * r14 * r14 * r14 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : s5 = r14 * r05 * r05 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have -> : s6 = r05 * r05 * r14 by iso_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by do ?case/predU1P=> [<-|]; first exact: group1; last (move/eqP => <-); rewrite ?groupMl ?mem_gen // !inE eqxx ?orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "act_g_1",
            "line_nb": 621,
            "steps": [
                {
                    "command": [
                        "by move=> k; apply/ffunP=> a; rewrite ffunE invg1 permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "act_g_morph",
            "line_nb": 624,
            "steps": [
                {
                    "command": [
                        "by move=> k x y; apply/ffunP=> a; rewrite !ffunE invMg permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fid3",
            "line_nb": 629,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x /=; rewrite (sameP afix1P eqP) !inE act1 eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Fid3",
            "line_nb": 632,
            "steps": [
                {
                    "command": [
                        "rewrite -[6]card_ord -[n]card_ord -card_ffun_on Fid3 cardsT.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by symmetry; apply: eq_card => ff; apply/ffun_onP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqperm_map2",
            "line_nb": 642,
            "steps": [
                {
                    "command": [
                        "move=> p1 p2; apply/eqP/allP=> [-> // | Ep12]; apply/ffunP=> x.",
                        "VernacExtend",
                        "e374b6c583d80c9d8b579c06df7953342f99f751"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; apply Ep12; case: x; do 6?case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_s05",
            "line_nb": 647,
            "steps": [
                {
                    "command": [
                        "have s05_inv: s05^-1=s05 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s05_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite !eqxx /= andbT/col1/col2/col3/col4/col5/col0.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 2![rewrite eq_sym; case: {+}(_ == _)=> //= ].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_s14",
            "line_nb": 653,
            "steps": [
                {
                    "command": [
                        "have s14_inv: s14^-1=s14 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s14_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite !eqxx /= andbT/col1/col2/col3/col4/col5/col0.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 2![rewrite eq_sym; case: {+}(_ == _)=> //= ].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r05_inv",
            "line_nb": 659,
            "steps": [
                {
                    "command": [
                        "by inv_tac.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r50_inv",
            "line_nb": 662,
            "steps": [
                {
                    "command": [
                        "by inv_tac.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r14_inv",
            "line_nb": 665,
            "steps": [
                {
                    "command": [
                        "by inv_tac.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r41_inv",
            "line_nb": 668,
            "steps": [
                {
                    "command": [
                        "by inv_tac.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "s23_inv",
            "line_nb": 671,
            "steps": [
                {
                    "command": [
                        "by inv_tac.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_s23",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s23_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite !eqxx /= andbT/col1/col2/col3/col4/col5/col0.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 2![rewrite eq_sym; case: {+}(_ == _)=> //=].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r05",
            "line_nb": 679,
            "steps": [
                {
                    "command": [
                        "apply sym_equal.",
                        "VernacExtend",
                        "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r05_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite !eqxx /= !andbT /col1/col2/col3/col4/col5/col0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E) ].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r50",
            "line_nb": 685,
            "steps": [
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r50_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite !eqxx /= !andbT /col1/col2/col3/col4.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E) ].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r23",
            "line_nb": 690,
            "steps": [
                {
                    "command": [
                        "have r23_inv: r23^-1 = r32 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r23_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite !eqxx /= !andbT /col1/col0/col5/col4.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r32",
            "line_nb": 696,
            "steps": [
                {
                    "command": [
                        "have r32_inv: r32^-1 = r23 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r32_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite !eqxx /= !andbT /col1/col0/col5/col4.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r14",
            "line_nb": 702,
            "steps": [
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r14_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite !eqxx /= !andbT /col2/col0/col5/col3.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r41",
            "line_nb": 707,
            "steps": [
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r41_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite !eqxx /= !andbT /col2/col0/col5/col3.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // {E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r024",
            "line_nb": 712,
            "steps": [
                {
                    "command": [
                        "have r024_inv: r024^-1 = r042 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r024_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r042",
            "line_nb": 718,
            "steps": [
                {
                    "command": [
                        "have r042_inv: r042^-1 = r024 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r042_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r012",
            "line_nb": 724,
            "steps": [
                {
                    "command": [
                        "have r012_inv: r012^-1 = r021 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r012_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r021",
            "line_nb": 730,
            "steps": [
                {
                    "command": [
                        "have r021_inv: r021^-1 = r012 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r021_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r031",
            "line_nb": 736,
            "steps": [
                {
                    "command": [
                        "have r031_inv: r031^-1 = r013 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r031_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r013",
            "line_nb": 742,
            "steps": [
                {
                    "command": [
                        "have r013_inv: r013^-1 = r031 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r013_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r043",
            "line_nb": 748,
            "steps": [
                {
                    "command": [
                        "have r043_inv: r043^-1 = r034 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r043_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_r034",
            "line_nb": 754,
            "steps": [
                {
                    "command": [
                        "have r034_inv: r034^-1 = r043 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g r034_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 4![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_s1",
            "line_nb": 760,
            "steps": [
                {
                    "command": [
                        "have s1_inv: s1^-1 = s1 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s1_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_s2",
            "line_nb": 766,
            "steps": [
                {
                    "command": [
                        "have s2_inv: s2^-1 = s2 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s2_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_s3",
            "line_nb": 772,
            "steps": [
                {
                    "command": [
                        "have s3_inv: s3^-1 = s3 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s3_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_s4",
            "line_nb": 778,
            "steps": [
                {
                    "command": [
                        "have s4_inv: s4^-1 = s4 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s4_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_s5",
            "line_nb": 784,
            "steps": [
                {
                    "command": [
                        "have s5_inv: s5^-1 = s5 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s5_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_s6",
            "line_nb": 790,
            "steps": [
                {
                    "command": [
                        "have s6_inv: s6^-1 = s6 by inv_tac.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/setP => x; rewrite infE !inE eqperm_map2 /= /act_g s6_inv !ffunE !permE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite ?eqxx /= !andbT /col0/col1/col2/col3/col4/col5.",
                        "VernacExtend",
                        "550810c63f0540325d17b6339409bd032a8134e5"
                    ]
                },
                {
                    "command": [
                        "by do 3![rewrite eq_sym; case E: {+}(_ == _); rewrite ?andbF // ?{E}(eqP E)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq4_uniq6",
            "line_nb": 796,
            "steps": [
                {
                    "command": [
                        "move=> x y z t Uxt; move: (cardC (mem [:: x; y; z; t])).",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "rewrite card_ord (card_uniq_tuple Uxt) => hcard.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have hcard2: #|predC (mem [:: x; y; z; t])| = 2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: (@addnI 4); rewrite /injective hcard.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: #|predC (mem [:: x; y; z; t])| != 0 by rewrite hcard2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/existsP=> u Hu; exists u.",
                        "VernacExtend",
                        "0c8b6bc2d11130cb1ccc71b7f66640646f4f037d"
                    ]
                },
                {
                    "command": [
                        "move: (cardC (mem [:: x; y; z; t; u])); rewrite card_ord => hcard5.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "have: #|[predC [:: x; y; z; t; u]]| !=0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -lt0n -(ltn_add2l #|[:: x; y; z; t; u]|) hcard5 addn0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: (leq_ltn_trans (card_size [:: x; y; z; t; u])).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/existsP=> v; rewrite inE (mem_cat _ [:: _; _; _; _]).",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case/norP=> Hv Huv; exists v.",
                        "VernacExtend",
                        "804d1fd80ff9b8f5e16a6e34cd7ea5951c6bf797"
                    ]
                },
                {
                    "command": [
                        "rewrite (cat_uniq [:: x; y; z; t]) Uxt andTb.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -rev_uniq /= negb_or Hu orbF Hv Huv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "burnside_app_iso_3_3col",
            "line_nb": 925,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite -(@eqn_pmul2r 24) // burnside_app_iso3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "burnside_app_iso_2_4col",
            "line_nb": 928,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite -(@eqn_pmul2r 8) // burnside_app_iso.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}