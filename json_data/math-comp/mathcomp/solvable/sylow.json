{
    "filename": "mathcomp/solvable/sylow.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq div fintype prime.",
            "VernacRequire",
            "50ca967acf2737a12f72bb6f5b99eacbd70a1f6c"
        ],
        [
            "From mathcomp Require Import bigop finset fingroup morphism automorphism quotient action.",
            "VernacRequire",
            "0d83e2db3db821570085fd6a00e11e5638bf2783"
        ],
        [
            "From mathcomp Require Import cyclic gproduct gfunctor commutator pgroup center nilpotent.",
            "VernacRequire",
            "f0af5cf55749c933592d79c94543b4ee366851af"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Section ModP.",
            "VernacBeginSection",
            "a4db9bcb27ffb87b96a6fc196d45f2a598fa7129"
        ],
        [
            "Variable (aT : finGroupType) (sT : finType) (D : {group aT}).",
            "VernacAssumption",
            "e08e9a25d711ebc4e1046c845a9d95d371b150a2"
        ],
        [
            "Variable to : action D sT.",
            "VernacAssumption",
            "5061933cd04c44b7ccbecfb92c69a180b2ac80d0"
        ],
        [
            "Lemma pgroup_fix_mod (p : nat) (G : {group aT}) (S : {set sT}) : p.-group G -> [acts G, on S | to] -> #|S| = #|'Fix_(S | to)(G)| %[mod p].",
            "VernacStartTheoremProof",
            "9e8c3244433ebbe92ea86cd4714ce14bd40134a9"
        ],
        [
            "move=> pG nSG; have sGD: G \\subset D := acts_dom nSG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/eqP; rewrite -(cardsID 'Fix_to(G)) eqn_mod_dvd (leq_addr, addKn) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have: [acts G, on S :\\: 'Fix_to(G) | to]; last move/acts_sum_card_orbit <-.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite actsD // -(setIidPr sGD); apply: subset_trans (acts_subnorm_fix _ _).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite setIS ?normG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: dvdn_sum => _ /imsetP[x /setDP[_ nfx] ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have [k oGx]: {k | #|orbit to G x| = (p ^ k)%N}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: p_natP; apply: pnat_dvd pG; rewrite card_orbit_in ?dvdn_indexg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: k oGx => [/card_orbit1 fix_x | k ->]; last by rewrite expnS dvdn_mulr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/afixP: nfx => a Ga; apply/set1P; rewrite -fix_x mem_orbit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ModP.",
            "VernacEndSegment",
            "9e7fbda09a1c611d2db71bb7da4fd6b40e73ac37"
        ],
        [
            "Section ModularGroupAction.",
            "VernacBeginSection",
            "53c9a9133254cd583d01e8ed0c921ebcaf381904"
        ],
        [
            "Variables (aT rT : finGroupType) (D : {group aT}) (R : {group rT}).",
            "VernacAssumption",
            "c6bfb7af7fc23c3218165ac63fc85fd2757e1b3c"
        ],
        [
            "Variables (to : groupAction D R) (p : nat).",
            "VernacAssumption",
            "9e0b2cac9d8d59b5bc4f36608664a908f76b2c25"
        ],
        [
            "Implicit Types (G H : {group aT}) (M : {group rT}).",
            "VernacReserve",
            "84d6d22ce75ba077ca5150f6c27345b84e163175"
        ],
        [
            "Lemma nontrivial_gacent_pgroup G M : p.-group G -> p.-group M -> {acts G, on group M | to} -> M :!=: 1 -> 'C_(M | to)(G) :!=: 1.",
            "VernacStartTheoremProof",
            "7f3346f91282b02b4e2e282dc3d725925416966d"
        ],
        [
            "move=> pG pM [nMG sMR] ntM; have [p_pr p_dv_M _] := pgroup_pdiv pM ntM.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite -cardG_gt1 (leq_trans (prime_gt1 p_pr)) 1?dvdn_leq ?cardG_gt0 //= /dvdn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite gacentE ?(acts_dom nMG) // setIA (setIidPl sMR) -pgroup_fix_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcore_sub_astab_irr G M : p.-group M -> M \\subset R -> acts_irreducibly G M to -> 'O_p(G) \\subset 'C_G(M | to).",
            "VernacStartTheoremProof",
            "cf644e563cb1f30cde825236fc6c7f0a0928836a"
        ],
        [
            "move=> pM sMR /mingroupP[/andP[ntM nMG] minM].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have /andP[sGpG nGpG]: 'O_p(G) <| G := gFnormal _ G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sGD := acts_dom nMG; have sGpD: 'O_p(G) \\subset D := gFsub_trans _ sGD.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite subsetI sGpG -gacentC //=; apply/setIidPl; apply: minM (subsetIl _ _).",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "rewrite nontrivial_gacent_pgroup ?pcore_pgroup //=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by split; rewrite ?gFsub_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: subset_trans (acts_subnorm_subgacent sGpD nMG); rewrite subsetI subxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcore_faithful_irr_act G M : p.-group M -> M \\subset R -> acts_irreducibly G M to -> [faithful G, on M | to] -> 'O_p(G) = 1.",
            "VernacStartTheoremProof",
            "31ec62f4c62c11ac5e42765cc38e83c63958dc3b"
        ],
        [
            "move=> pM sMR irrG ffulG; apply/trivgP; apply: subset_trans ffulG.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "exact: pcore_sub_astab_irr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ModularGroupAction.",
            "VernacEndSegment",
            "3135ba0f5a871e909c1e344d4b0ee4b4bee2f1eb"
        ],
        [
            "Section Sylow.",
            "VernacBeginSection",
            "f1903639c20d269d4e8d2c51adf6eabdfa94a10b"
        ],
        [
            "Variables (p : nat) (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "6bd29223bbcd527731612d0d15aab3adad247306"
        ],
        [
            "Implicit Types P Q H K : {group gT}.",
            "VernacReserve",
            "34f567ab0db21f54f9a26d81bfd9d76fcf4bf0ab"
        ],
        [
            "Theorem Sylow's_theorem : [/\\ forall P, [max P | p.-subgroup(G) P] = p.-Sylow(G) P, [transitive G, on 'Syl_p(G) | 'JG], forall P, p.-Sylow(G) P -> #|'Syl_p(G)| = #|G : 'N_G(P)| & prime p -> #|'Syl_p(G)| %% p = 1%N].",
            "VernacStartTheoremProof",
            "0ba45fcd1f50a0adec6ce0cab52a92ac8a338518"
        ],
        [
            "pose maxp A P := [max P | p.-subgroup(A) P]; pose S := [set P | maxp G P].",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "pose oG := orbit 'JG%act G.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have actS: [acts G, on S | 'JG].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/subsetP=> x Gx; rewrite 3!inE; apply/subsetP=> P; rewrite 3!inE.",
            "VernacExtend",
            "7adcde8c7e12bb7410bc5941994989345b80c2de"
        ],
        [
            "exact: max_pgroupJ.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have S_pG P: P \\in S -> P \\subset G /\\ p.-group P.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite inE => /maxgroupp/andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have SmaxN P Q: Q \\in S -> Q \\subset 'N(P) -> maxp 'N_G(P) Q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite inE => /maxgroupP[/andP[sQG pQ] maxQ] nPQ.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/maxgroupP; rewrite /psubgroup subsetI sQG nPQ.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by split=> // R; rewrite subsetI -andbA andbCA => /andP[_]; apply: maxQ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nrmG P: P \\subset G -> P <| 'N_G(P).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> sPG; rewrite /normal subsetIr subsetI sPG normG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sylS P: P \\in S -> p.-Sylow('N_G(P)) P.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> S_P; have [sPG pP] := S_pG P S_P.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite normal_max_pgroup_Hall ?nrmG //; apply: SmaxN; rewrite ?normG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{SmaxN} defCS P: P \\in S -> 'Fix_(S |'JG)(P) = [set P].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> S_P; apply/setP=> Q; rewrite {1}in_setI {1}afixJG.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply/andP/set1P=> [[S_Q nQP]|->{Q}]; last by rewrite normG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/esym/val_inj; case: (S_pG Q) => //= sQG _.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "by apply: uniq_normal_Hall (SmaxN Q _ _ _) => //=; rewrite ?sylS ?nrmG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{defCS} oG_mod: {in S &, forall P Q, #|oG P| = (Q \\in oG P) %[mod p]}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> P Q S_P S_Q; have [sQG pQ] := S_pG _ S_Q.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have soP_S: oG P \\subset S by rewrite acts_sub_orbit.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /pgroup_fix_mod-> //: [acts Q, on oG P | 'JG].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/actsP=> x /(subsetP sQG) Gx R; apply: orbit_transl.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "exact: mem_orbit.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite -{1}(setIidPl soP_S) -setIA defCS // (cardsD1 Q) setDE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -setIA setICr setI0 cards0 addn0 inE set11 andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [P S_P]: exists P, P \\in S.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: p.-subgroup(G) 1 by rewrite /psubgroup sub1G pgroup1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/(@maxgroup_exists _ (p.-subgroup(G))) => P; exists P; rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have trS: [transitive G, on S | 'JG].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/imsetP; exists P => //; apply/eqP.",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "rewrite eqEsubset andbC acts_sub_orbit // S_P; apply/subsetP=> Q S_Q.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have:= S_P; rewrite inE => /maxgroupP[/andP[_ pP]].",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "have [-> max1 | ntP _] := eqVneq P 1%G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/andP/max1: (S_pG _ S_Q) => Q1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite (group_inj (Q1 (sub1G Q))) orbit_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= oG_mod _ _ S_P S_P; rewrite (oG_mod _ Q) // orbit_refl.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have p_gt1: p > 1 by apply: prime_gt1; case/pgroup_pdiv: pP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: (Q \\in oG P) => //; rewrite mod0n modn_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oS1: prime p -> #|S| %% p = 1%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/prime_gt1 => p_gt1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite -(atransP trS P S_P) (oG_mod P P) // orbit_refl modn_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oSiN Q: Q \\in S -> #|S| = #|G : 'N_G(Q)|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> S_Q; rewrite -(atransP trS Q S_Q) card_orbit astab1JG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sylP: p.-Sylow(G) P.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite pHallE; case: (S_pG P) => // -> /= pP.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case p_pr: (prime p); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite p_part lognE p_pr /= -trivg_card1; apply/idPn=> ntP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by case/pgroup_pdiv: pP p_pr => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(LagrangeI G 'N(P)) /= mulnC partnM ?cardG_gt0 // part_p'nat.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mul1n (card_Hall (sylS P S_P)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite p'natE // -indexgI -oSiN // /dvdn oS1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have eqS Q: maxp G Q = p.-Sylow(G) Q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/idP/idP=> [S_Q|]; last exact: Hall_max.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have{S_Q} S_Q: Q \\in S by rewrite inE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite pHallE -(card_Hall sylP); case: (S_pG Q) => // -> _ /=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: (atransP2 trS S_P S_Q) => x _ ->; rewrite cardJg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ->: 'Syl_p(G) = S by apply/setP=> Q; rewrite 2!inE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by split=> // Q sylQ; rewrite -oSiN ?inE ?eqS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_pgroup_Sylow P : [max P | p.-subgroup(G) P] = p.-Sylow(G) P.",
            "VernacStartTheoremProof",
            "c86bb2135b7841f9bc0bd994e0bebf06ccb74566"
        ],
        [
            "by case Sylow's_theorem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sylow_superset Q : Q \\subset G -> p.-group Q -> {P : {group gT} | p.-Sylow(G) P & Q \\subset P}.",
            "VernacStartTheoremProof",
            "88d5f1fe845273847466bcf59aa01710192c0b7b"
        ],
        [
            "move=> sQG pQ.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [|P] := @maxgroup_exists _ (p.-subgroup(G)) Q; first exact/andP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite max_pgroup_Sylow; exists P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sylow_exists : {P : {group gT} | p.-Sylow(G) P}.",
            "VernacStartTheoremProof",
            "af8e89b9abec51ca7ac46eaf0ae160fa49076ed1"
        ],
        [
            "by case: (Sylow_superset (sub1G G) (pgroup1 _ p)) => P; exists P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Syl_trans : [transitive G, on 'Syl_p(G) | 'JG].",
            "VernacStartTheoremProof",
            "b0560cae2913e10072da33e988451c2de0a11f11"
        ],
        [
            "by case Sylow's_theorem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sylow_trans P Q : p.-Sylow(G) P -> p.-Sylow(G) Q -> exists2 x, x \\in G & Q :=: P :^ x.",
            "VernacStartTheoremProof",
            "0ff76f92f6d86002c571cedd52749847cb356bb8"
        ],
        [
            "move=> sylP sylQ; have:= (atransP2 Syl_trans) P Q; rewrite !inE.",
            "VernacExtend",
            "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
        ],
        [
            "by case=> // x Gx ->; exists x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sylow_subJ P Q : p.-Sylow(G) P -> Q \\subset G -> p.-group Q -> exists2 x, x \\in G & Q \\subset P :^ x.",
            "VernacStartTheoremProof",
            "5d136c434731a9c41c22bd81cdb1196c28106786"
        ],
        [
            "move=> sylP sQG pQ; have [Px sylPx] := Sylow_superset sQG pQ.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by have [x Gx ->] := Sylow_trans sylP sylPx; exists x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sylow_Jsub P Q : p.-Sylow(G) P -> Q \\subset G -> p.-group Q -> exists2 x, x \\in G & Q :^ x \\subset P.",
            "VernacStartTheoremProof",
            "88dc9c81bbe51422152f3ed292e53b6f40c9f050"
        ],
        [
            "move=> sylP sQG pQ; have [x Gx] := Sylow_subJ sylP sQG pQ.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by exists x^-1; rewrite (groupV, sub_conjgV).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Syl P : p.-Sylow(G) P -> #|'Syl_p(G)| = #|G : 'N_G(P)|.",
            "VernacStartTheoremProof",
            "f2d7694f74e7047a2821b892616e656632174dc7"
        ],
        [
            "by case: Sylow's_theorem P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Syl_dvd : #|'Syl_p(G)| %| #|G|.",
            "VernacStartTheoremProof",
            "76f1d2c686a8d8c070bad632b1b1de581f99624b"
        ],
        [
            "by case Sylow_exists => P /card_Syl->; apply: dvdn_indexg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Syl_mod : prime p -> #|'Syl_p(G)| %% p = 1%N.",
            "VernacStartTheoremProof",
            "63f608e5ba27cd631234e03d1f1ca7c8175ad5a8"
        ],
        [
            "by case Sylow's_theorem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Frattini_arg H P : G <| H -> p.-Sylow(G) P -> G * 'N_H(P) = H.",
            "VernacStartTheoremProof",
            "b9386c438a615aa7537f69dc7c49d6229b091fbf"
        ],
        [
            "case/andP=> sGH nGH sylP; rewrite -normC ?subIset ?nGH ?orbT // -astab1JG.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "move/subgroup_transitiveP: Syl_trans => ->; rewrite ?inE //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply/imsetP; exists P; rewrite ?inE //.",
            "VernacExtend",
            "bcb62060dd95ac542214abbb1eabd6c0a0a74c87"
        ],
        [
            "apply/eqP; rewrite eqEsubset -{1}((atransP Syl_trans) P) ?inE // imsetS //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply/subsetP=> _ /imsetP[x Hx ->]; rewrite inE -(normsP nGH x Hx) pHallJ2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Sylow.",
            "VernacEndSegment",
            "0d3870589f88698d3bf2defa506875f4b5f80ca8"
        ],
        [
            "Section MoreSylow.",
            "VernacBeginSection",
            "662b88aaf6e15ee50bac989cbf6ae80d5bc7e504"
        ],
        [
            "Variables (gT : finGroupType) (p : nat).",
            "VernacAssumption",
            "41c6497fac0f63820c619649fff00932b3ab9e82"
        ],
        [
            "Implicit Types G H P : {group gT}.",
            "VernacReserve",
            "5019a8fdc0e4203a2eaaf959880aee4b46edc29e"
        ],
        [
            "Lemma Sylow_setI_normal G H P : G <| H -> p.-Sylow(H) P -> p.-Sylow(G) (G :&: P).",
            "VernacStartTheoremProof",
            "5f9716c7569741a4da8d5e93a46dec59e36e9cd3"
        ],
        [
            "case/normalP=> sGH nGH sylP; have [Q sylQ] := Sylow_exists p G.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "have /maxgroupP[/andP[sQG pQ] maxQ] := Hall_max sylQ.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [R sylR sQR] := Sylow_superset (subset_trans sQG sGH) pQ.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [[x Hx ->] pR] := (Sylow_trans sylR sylP, pHall_pgroup sylR).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(nGH x Hx) -conjIg pHallJ2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /maxQ-> //: Q \\subset G :&: R by rewrite subsetI sQG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /psubgroup subsetIl (pgroupS _ pR) ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normal_sylowP G : reflect (exists2 P : {group gT}, p.-Sylow(G) P & P <| G) (#|'Syl_p(G)| == 1%N).",
            "VernacStartTheoremProof",
            "9dd208aa626101d73ecfd063bc1c536a0da0d378"
        ],
        [
            "apply: (iffP idP) => [syl1 | [P sylP nPG]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (card_Syl sylP) (setIidPl _) (indexgg, normal_norm).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [P sylP] := Sylow_exists p G; exists P => //.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "rewrite /normal (pHall_sub sylP); apply/setIidPl; apply/eqP.",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "rewrite eqEcard subsetIl -(LagrangeI G 'N(P)) -indexgI /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(card_Syl sylP) (eqP syl1) muln1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trivg_center_pgroup P : p.-group P -> 'Z(P) = 1 -> P :=: 1.",
            "VernacStartTheoremProof",
            "79def341a3319a14d2a1551413e7c950c4961b0e"
        ],
        [
            "move=> pP Z1; apply/eqP/idPn=> ntP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "have{ntP} [p_pr p_dv_P _] := pgroup_pdiv pP ntP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suff: p %| #|'Z(P)| by rewrite Z1 cards1 gtnNdvd ?prime_gt1.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite /center /dvdn -afixJ -pgroup_fix_mod // astabsJ normG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma p2group_abelian P : p.-group P -> logn p #|P| <= 2 -> abelian P.",
            "VernacStartTheoremProof",
            "cf6425c4936cffae5a87042ade60f9800e8bfc7e"
        ],
        [
            "move=> pP lePp2; pose Z := 'Z(P); have sZP: Z \\subset P := center_sub P.",
            "VernacExtend",
            "5e9f04e072d058c7688e55b9dff4d25555e15183"
        ],
        [
            "case: (eqVneq Z 1); first by move/(trivg_center_pgroup pP)->; apply: abelian1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/(pgroup_pdiv (pgroupS sZP pP)) => p_pr _ [k oZ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply: cyclic_center_factor_abelian.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have [->|] := eqVneq (P / Z) 1; first exact: cyclic1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have pPq := quotient_pgroup 'Z(P) pP; case/(pgroup_pdiv pPq) => _ _ [j oPq].",
            "VernacExtend",
            "c6d2532ed4a224baf57de7930305ff767fdbd834"
        ],
        [
            "rewrite prime_cyclic // oPq; case: j oPq lePp2 => //= j.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite card_quotient ?gFnorm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(Lagrange sZP) lognM // => ->; rewrite oZ !pfactorK ?addnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_p2group_abelian P : prime p -> #|P| = (p ^ 2)%N -> abelian P.",
            "VernacStartTheoremProof",
            "a9a14fd840174a7998d38a57cda29b2196a05344"
        ],
        [
            "move=> primep oP; have pP: p.-group P by rewrite /pgroup oP pnat_exp pnat_id.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite (p2group_abelian pP) // oP pfactorK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sylow_transversal_gen (T : {set {group gT}}) G : (forall P, P \\in T -> P \\subset G) -> (forall p, p \\in \\pi(G) -> exists2 P, P \\in T & p.-Sylow(G) P) -> << \\bigcup_(P in T) P >> = G.",
            "VernacStartTheoremProof",
            "cb04099411af26f97c6f1dcd3b01f7cd1a9b66ce"
        ],
        [
            "move=> G_T T_G; apply/eqP; rewrite eqEcard gen_subG.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply/andP; split; first exact/bigcupsP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: dvdn_leq (cardG_gt0 _) _; apply/dvdn_partP=> // q /T_G[P T_P sylP].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite -(card_Hall sylP); apply: cardSg; rewrite sub_gen // bigcup_sup.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sylow_gen G : <<\\bigcup_(P : {group gT} | Sylow G P) P>> = G.",
            "VernacStartTheoremProof",
            "0ad4e2417e9fdc66a6c1d91bf84a538e6c2b98b7"
        ],
        [
            "set T := [set P : {group gT} | Sylow G P].",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite -{2}(@Sylow_transversal_gen T G) => [|P | q _].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by congr <<_>>; apply: eq_bigl => P; rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite inE => /and3P[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: (Sylow_exists q G) => P sylP; exists P; rewrite // inE (p_Sylow sylP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MoreSylow.",
            "VernacEndSegment",
            "c143e03522ec463cc917bc8f97e0f78f2ebe0167"
        ],
        [
            "Section SomeHall.",
            "VernacBeginSection",
            "e7d7e147c73b3c36ba4a0fac0076601eb21ab032"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types (p : nat) (pi : nat_pred) (G H K P R : {group gT}).",
            "VernacReserve",
            "5d760856f114c264f712d7c18a047ca54fc8c8ad"
        ],
        [
            "Lemma Hall_pJsub p pi G H P : pi.-Hall(G) H -> p \\in pi -> P \\subset G -> p.-group P -> exists2 x, x \\in G & P :^ x \\subset H.",
            "VernacStartTheoremProof",
            "28d9a4b4d3fea083718e7ab49fb70787dd31103c"
        ],
        [
            "move=> hallH pi_p sPG pP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [S sylS] := Sylow_exists p H; have sylS_G := subHall_Sylow hallH pi_p sylS.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have [x Gx sPxS] := Sylow_Jsub sylS_G sPG pP; exists x => //.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "exact: subset_trans sPxS (pHall_sub sylS).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Hall_psubJ p pi G H P : pi.-Hall(G) H -> p \\in pi -> P \\subset G -> p.-group P -> exists2 x, x \\in G & P \\subset H :^ x.",
            "VernacStartTheoremProof",
            "c204839a6ba9fcf8f3049fbd1f2b51355a2ee4da"
        ],
        [
            "move=> hallH pi_p sPG pP; have [x Gx sPxH] := Hall_pJsub hallH pi_p sPG pP.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by exists x^-1; rewrite ?groupV -?sub_conjg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Hall_setI_normal pi G K H : K <| G -> pi.-Hall(G) H -> pi.-Hall(K) (H :&: K).",
            "VernacStartTheoremProof",
            "6aec3e36439e52e9068cb7974a19b2b8a2807525"
        ],
        [
            "move=> nsKG hallH; have [sHG piH _] := and3P hallH.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [sHK_H sHK_K] := (subsetIl H K, subsetIr H K).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite pHallE sHK_K /= -(part_pnat_id (pgroupS sHK_H piH)); apply/eqP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (widen_partn _ (subset_leq_card sHK_K)); apply: eq_bigr => p pi_p.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have [P sylP] := Sylow_exists p H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sylPK := Sylow_setI_normal nsKG (subHall_Sylow hallH pi_p sylP).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -!p_part -(card_Hall sylPK); symmetry; apply: card_Hall.",
            "VernacExtend",
            "c2abf1dd8c611d7694c1d5d7496e679044a36704"
        ],
        [
            "by rewrite (pHall_subl _ sHK_K) //= setIC setSI ?(pHall_sub sylP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_mulG_setI_norm H G K R : K * R = G -> G \\subset 'N(H) -> coprime #|K| #|R| -> (K :&: H) * (R :&: H) = G :&: H.",
            "VernacStartTheoremProof",
            "fbb300d1664d2f7520a5eec4a1b43a77ca0b2c4a"
        ],
        [
            "move=> defG nHG coKR; apply/eqP; rewrite eqEcard mulG_subG /= -defG.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite !setSI ?mulG_subl ?mulG_subr //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite coprime_cardMg ?(coKR, coprimeSg (subsetIl _ _), coprime_sym) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose pi := \\pi(K); have piK: pi.-group K by apply: pgroup_pi.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have pi'R: pi^'.-group R by rewrite /pgroup -coprime_pi' /=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [hallK hallR] := coprime_mulpG_Hall defG piK pi'R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nsHG: H :&: G <| G by rewrite /normal subsetIr normsI ?normG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -!(setIC H) defG -(partnC pi (cardG_gt0 _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(card_Hall (Hall_setI_normal nsHG hallR)) /= setICA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(card_Hall (Hall_setI_normal nsHG hallK)) /= setICA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -defG (setIidPl (mulG_subl _ _)) (setIidPl (mulG_subr _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SomeHall.",
            "VernacEndSegment",
            "4c816f4fd89372cbbbc9c4f1b72bd05d1a6dcc77"
        ],
        [
            "Section Nilpotent.",
            "VernacBeginSection",
            "05ee9aec2f1bb3d5cf283ca4ba3f87d4f9b2d5ad"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types (G H K P L : {group gT}) (p q : nat).",
            "VernacReserve",
            "9f763d8ded36868ca51fefa1eca940c1989a35fb"
        ],
        [
            "Lemma pgroup_nil p P : p.-group P -> nilpotent P.",
            "VernacStartTheoremProof",
            "b8b011c1be4dd1d452ed2b5c2ffcd60b37c39457"
        ],
        [
            "move: {2}_.+1 (ltnSn #|P|) => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: n gT P => // n IHn pT P; rewrite ltnS=> lePn pP.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "have [Z1 | ntZ] := eqVneq 'Z(P) 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (trivg_center_pgroup pP Z1) nilpotent1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -quotient_center_nil IHn ?morphim_pgroup // (leq_trans _ lePn) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite card_quotient ?normal_norm ?center_normal // -divgS ?subsetIl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ltn_Pdiv // ltnNge -trivg_card_le1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pgroup_sol p P : p.-group P -> solvable P.",
            "VernacStartTheoremProof",
            "8be225645bab9c5ff97201a631875363824232b2"
        ],
        [
            "by move/pgroup_nil; apply: nilpotent_sol.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma small_nil_class G : nil_class G <= 5 -> nilpotent G.",
            "VernacStartTheoremProof",
            "c1589fb31ed9178c76696a3e31a25e24c0adf1d5"
        ],
        [
            "move=> leK5; case: (ltnP 5 #|G|) => [lt5G | leG5 {leK5}].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite nilpotent_class (leq_ltn_trans leK5).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: pgroup_nil (pdiv #|G|) _ _; apply/andP; split=> //.",
            "VernacExtend",
            "1d32417824786a65f5ff40d1d9dc083be853a4a7"
        ],
        [
            "by case: #|G| leG5 => //; do 5!case=> //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_class2 G : (nil_class G <= 2) = (G^`(1) \\subset 'Z(G)).",
            "VernacStartTheoremProof",
            "188cb9f3624c0a225f27dd4d07c72b3bc940ea47"
        ],
        [
            "rewrite subsetI der_sub; apply/idP/commG1P=> [clG2 | L3G1].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply/(lcn_nil_classP 2); rewrite ?small_nil_class ?(leq_trans clG2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/(lcn_nil_classP 2) => //; apply/lcnP; exists 2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_class3 G : (nil_class G <= 3) = ('L_3(G) \\subset 'Z(G)).",
            "VernacStartTheoremProof",
            "4460b16981480a4b415dee4a62b00ca412e50a94"
        ],
        [
            "rewrite subsetI lcn_sub; apply/idP/commG1P=> [clG3 | L4G1].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply/(lcn_nil_classP 3); rewrite ?small_nil_class ?(leq_trans clG3).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/(lcn_nil_classP 3) => //; apply/lcnP; exists 3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nilpotent_maxp_normal pi G H : nilpotent G -> [max H | pi.-subgroup(G) H] -> H <| G.",
            "VernacStartTheoremProof",
            "fdda2f59e341339626b10aaacdee2feda5764559"
        ],
        [
            "move=> nilG /maxgroupP[/andP[sHG piH] maxH].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have nHN: H <| 'N_G(H) by rewrite normal_subnorm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{maxH} hallH: pi.-Hall('N_G(H)) H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: normal_max_pgroup_Hall => //; apply/maxgroupP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite /psubgroup normal_sub // piH; split=> // K.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by rewrite subsetI -andbA andbCA => /andP[_ /maxH].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /normal sHG; apply/setIidPl/esym.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply: nilpotent_sub_norm; rewrite ?subsetIl ?setIS //= char_norms //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by congr (_ \\char _): (pcore_char pi 'N_G(H)); apply: normal_Hall_pcore.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nilpotent_Hall_pcore pi G H : nilpotent G -> pi.-Hall(G) H -> H :=: 'O_pi(G).",
            "VernacStartTheoremProof",
            "b9b97488554673c0a3888a2ad3feb029ca7e6733"
        ],
        [
            "move=> nilG hallH; have maxH := Hall_max hallH; apply/eqP.",
            "VernacExtend",
            "7a69517207288e46da9dd503cb8095e3bbc839fc"
        ],
        [
            "rewrite eqEsubset pcore_max ?(pHall_pgroup hallH) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (normal_sub_max_pgroup maxH) ?pcore_pgroup ?pcore_normal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: nilpotent_maxp_normal maxH.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nilpotent_pcore_Hall pi G : nilpotent G -> pi.-Hall(G) 'O_pi(G).",
            "VernacStartTheoremProof",
            "36780f66630644da1f975e9ec3a7419bd2077ffc"
        ],
        [
            "move=> nilG; case: (@maxgroup_exists _ (psubgroup pi G) 1) => [|H maxH _].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite /psubgroup sub1G pgroup1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have hallH := normal_max_pgroup_Hall maxH (nilpotent_maxp_normal nilG maxH).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(nilpotent_Hall_pcore nilG hallH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nilpotent_pcoreC pi G : nilpotent G -> 'O_pi(G) \\x 'O_pi^'(G) = G.",
            "VernacStartTheoremProof",
            "3ea92fc84b51c819da29a94b664404e2589d17d0"
        ],
        [
            "move=> nilG; have trO: 'O_pi(G) :&: 'O_pi^'(G) = 1.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by apply: coprime_TIg; apply: (@pnat_coprime pi); apply: pcore_pgroup.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite dprodE //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/eqP; rewrite eqEcard mul_subG ?pcore_sub // (TI_cardMg trO).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite !(card_Hall (nilpotent_pcore_Hall _ _)) // partnC ?leqnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (sameP commG1P trivgP) -trO subsetI commg_subl commg_subr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !gFsub_trans ?gFnorm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_nilpotent_cent2 H K G : nilpotent G -> K \\subset G -> H \\subset G -> coprime #|K| #|H| -> H \\subset 'C(K).",
            "VernacStartTheoremProof",
            "c27d5770eb5fd9910f9f1a090eae5377454b1e08"
        ],
        [
            "move=> nilG sKG sHG; rewrite coprime_pi' // => p'H.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have sub_Gp := sub_Hall_pcore (nilpotent_pcore_Hall _ nilG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [_ _ cGpp' _] := dprodP (nilpotent_pcoreC \\pi(K) nilG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: centSS cGpp'; rewrite sub_Gp ?pgroup_pi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi_center_nilpotent G : nilpotent G -> \\pi('Z(G)) = \\pi(G).",
            "VernacStartTheoremProof",
            "66cc4745bb986db6f1d361bd25ca27fec4e6278b"
        ],
        [
            "move=> nilG; apply/eq_piP => /= p.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply/idP/idP=> [|pG]; first exact: (piSg (center_sub _)).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: (pG); rewrite !mem_primes !cardG_gt0; case/andP=> p_pr _.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "pose Z := 'O_p(G) :&: 'Z(G); have ntZ: Z != 1.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "rewrite meet_center_nil ?pcore_normal // trivg_card_le1 -ltnNge.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (card_Hall (nilpotent_pcore_Hall p nilG)) p_part.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (ltn_exp2l 0 _ (prime_gt1 p_pr)) logn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have pZ: p.-group Z := pgroupS (subsetIl _ _) (pcore_pgroup _ _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{ntZ pZ} [_ pZ _] := pgroup_pdiv pZ ntZ.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite p_pr (dvdn_trans pZ) // cardSg ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sylow_subnorm p G P : p.-Sylow('N_G(P)) P = p.-Sylow(G) P.",
            "VernacStartTheoremProof",
            "246e6640ee098a6fd254c425d43a87bcd5a404b5"
        ],
        [
            "apply/idP/idP=> sylP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: pHall_subl (subsetIl _ _) (sylP).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite subsetI normG (pHall_sub sylP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/subsetIP[sPG sPN] pP _] := and3P sylP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [Q sylQ sPQ] := Sylow_superset sPG pP; have [sQG pQ _] := and3P sylQ.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite -(nilpotent_sub_norm (pgroup_nil pQ) sPQ) {sylQ}//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite subEproper eq_sym eqEcard subsetI sPQ sPN dvdn_leq //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(part_pnat_id (pgroupS (subsetIl _ _) pQ)) (card_Hall sylP).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite partn_dvd // cardSg ?setSI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Nilpotent.",
            "VernacEndSegment",
            "7805c338e65c6cad68c863af61febca5c95d97f2"
        ],
        [
            "Lemma nil_class_pgroup (gT : finGroupType) (p : nat) (P : {group gT}) : p.-group P -> nil_class P <= maxn 1 (logn p #|P|).-1.",
            "VernacStartTheoremProof",
            "b59c214d2e22ecaff01edcfec347c18878381d30"
        ],
        [
            "move=> pP; move def_c: (nil_class P) => c.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "elim: c => // c IHc in gT P def_c pP *; set e := logn p _.",
            "VernacExtend",
            "8ef2683202fa5ffc2c87806f238ff7c494b32b7f"
        ],
        [
            "have nilP := pgroup_nil pP; have sZP := center_sub P.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have [e_le2 | e_gt2] := leqP e 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -def_c leq_max nil_class1 (p2group_abelian pP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have pPq: p.-group (P / 'Z(P)) by apply: quotient_pgroup.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(subnKC e_gt2) ltnS (leq_trans (IHc _ _ _ pPq)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite nil_class_quotient_center ?def_c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite geq_max /= -add1n -leq_subLR -subn1 -subnDA -subSS leq_sub2r //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ltn_log_quotient //= -(setIidPr sZP) meet_center_nil //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -nil_class0 def_c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zgroup (gT : finGroupType) (A : {set gT}) := [forall (V : {group gT} | Sylow A V), cyclic V].",
            "VernacDefinition",
            "3f0cb888dd7dc9d484961e985c2a6d6908a62cad"
        ],
        [
            "Section Zgroups.",
            "VernacBeginSection",
            "1409b123bdc8a356c53d6e0c9d9023131f67c77f"
        ],
        [
            "Variables (gT rT : finGroupType) (D : {group gT}) (f : {morphism D >-> rT}).",
            "VernacAssumption",
            "944231f8f6fa13f052da0e9f920e07639709a90d"
        ],
        [
            "Implicit Types G H K : {group gT}.",
            "VernacReserve",
            "d934fb2556cba7e244425668dbf69ab4b3ba551e"
        ],
        [
            "Lemma ZgroupS G H : H \\subset G -> Zgroup G -> Zgroup H.",
            "VernacStartTheoremProof",
            "93bf1d45c4b584358178ddb33ef74d25ff82c6ad"
        ],
        [
            "move=> sHG /forallP zgG; apply/forall_inP=> V /SylowP[p p_pr /and3P[sVH]].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "case/(Sylow_superset (subset_trans sVH sHG))=> P sylP sVP _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by have:= zgG P; rewrite (p_Sylow sylP); apply: cyclicS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morphim_Zgroup G : Zgroup G -> Zgroup (f @* G).",
            "VernacStartTheoremProof",
            "a9bc0359f6d43a8600a4d50cc8efe9acb02e3347"
        ],
        [
            "move=> zgG; wlog sGD: G zgG / G \\subset D.",
            "VernacExtend",
            "6dbaea969dd2e1a08b50e55e2e4c4949c4d27249"
        ],
        [
            "by rewrite -morphimIdom; apply; rewrite (ZgroupS _ zgG, subsetIl) ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/forall_inP=> fV /SylowP[p pr_p sylfV].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have [P sylP] := Sylow_exists p G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [|z _ ->] := @Sylow_trans p _ _ (f @* P)%G _ _ sylfV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: morphim_pHall (sylP); apply: subset_trans (pHall_sub sylP) sGD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite cyclicJ morphim_cyclic ?(forall_inP zgG) //; apply/SylowP; exists p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_Zgroup_cyclic G : Zgroup G -> nilpotent G -> cyclic G.",
            "VernacStartTheoremProof",
            "523dc2a07405718602d7836d30cecdc5896cd500"
        ],
        [
            "elim: {G}_.+1 {-2}G (ltnSn #|G|) => // n IHn G; rewrite ltnS => leGn ZgG nilG.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "have [->|[p pr_p pG]] := trivgVpdiv G; first by rewrite -cycle1 cycle_cyclic.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have /dprodP[_ defG Cpp' _] := nilpotent_pcoreC p nilG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /cyclicP[x def_p]: cyclic 'O_p(G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= forallP ZgG 'O_p(G)%G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (p_Sylow (nilpotent_pcore_Hall p nilG)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /cyclicP[x' def_p']: cyclic 'O_p^'(G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sp'G := pcore_sub p^' G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: IHn (leq_trans _ leGn) (ZgroupS sp'G _) (nilpotentS sp'G _) => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite proper_card // properEneq sp'G andbT; case: eqP => //= def_p'.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by have:= pcore_pgroup p^' G; rewrite def_p' /pgroup p'natE ?pG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/cyclicP; exists (x * x'); rewrite -{}defG def_p def_p' cycleM //.",
            "VernacExtend",
            "4333201b6d053b3c8bf63cf935dcbd70f89b9eef"
        ],
        [
            "by red; rewrite -(centsP Cpp') // (def_p, def_p') cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /order -def_p -def_p' (@pnat_coprime p) //; apply: pcore_pgroup.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Zgroups.",
            "VernacEndSegment",
            "3632859d75f3c95cd20bdca3fdba3931dadfd52e"
        ],
        [
            "Arguments Zgroup {gT} A%g.",
            "VernacArguments",
            "377ffae7befa6036ad7b09298a3801f6beb7bdc4"
        ],
        [
            "Section NilPGroups.",
            "VernacBeginSection",
            "929ae6ea6ef797dc0ca81519ce6a76bbc1748dcc"
        ],
        [
            "Variables (p : nat) (gT : finGroupType).",
            "VernacAssumption",
            "24f97fa2feb8b9271e5253bb29c759a412a08495"
        ],
        [
            "Implicit Type G P N : {group gT}.",
            "VernacReserve",
            "81e36aa60e72a1dceababda5c22cedf36f88b289"
        ],
        [
            "Lemma normal_pgroup r P N : p.-group P -> N <| P -> r <= logn p #|N| -> exists Q : {group gT}, [/\\ Q \\subset N, Q <| P & #|Q| = (p ^ r)%N].",
            "VernacStartTheoremProof",
            "3471148b15c5d1b5bb638e8dd5881256f9895aea"
        ],
        [
            "elim: r gT P N => [|r IHr] gTr P N pP nNP le_r.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by exists (1%G : {group gTr}); rewrite sub1G normal1 cards1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [NZ_1 | ntNZ] := eqVneq (N :&: 'Z(P)) 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (TI_center_nil (pgroup_nil pP)) // cards1 logn1 in le_r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: p.-group (N :&: 'Z(P)) by apply: pgroupS pP; rewrite /= setICA subsetIl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/pgroup_pdiv=> // p_pr /Cauchy[// | z].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -cycle_subG !subsetI => /and3P[szN szP cPz] ozp _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have{cPz} nzP: P \\subset 'N(<[z]>) by rewrite cents_norm // centsC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: N / <[z]> <| P / <[z]> by rewrite morphim_normal.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/IHr=> [||Qb [sQNb nQPb]]; first exact: morphim_pgroup.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite card_quotient ?(subset_trans (normal_sub nNP)) // -ltnS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: (leq_trans le_r); rewrite -(Lagrange szN) [#|_|]ozp.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite lognM // ?prime_gt0 // logn_prime ?eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/(inv_quotientN _): nQPb sQNb => [|Q -> szQ nQP]; first exact/andP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have nzQ := subset_trans (normal_sub nQP) nzP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite quotientSGK // card_quotient // => sQN izQ.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by exists Q; split=> //; rewrite expnS -izQ -ozp Lagrange.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Baer_Suzuki x G : x \\in G -> (forall y, y \\in G -> p.-group <<[set x; x ^ y]>>) -> x \\in 'O_p(G).",
            "VernacStartTheoremProof",
            "3e53fe96d1a43a2908cda5e02b7f8f1c2fae7eb5"
        ],
        [
            "elim: {G}_.+1 {-2}G x (ltnSn #|G|) => // n IHn G x; rewrite ltnS.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "set E := x ^: G => leGn Gx pE.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have{pE} pE: {in E &, forall x1 x2, p.-group <<[set x1; x2]>>}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> _ _ /imsetP[y1 Gy1 ->] /imsetP[y2 Gy2 ->].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -(mulgKV y1 y2) conjgM -2!conjg_set1 -conjUg genJ pgroupJ.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite pE // groupMl ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sEG: <<E>> \\subset G by rewrite gen_subG class_subG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nEG: G \\subset 'N(E) by apply: class_norm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Ex: x \\in E by apply: class_refl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [P Px sylP]: exists2 P : {group gT}, x \\in P & p.-Sylow(<<E>>) P.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sxxE: <<[set x; x]>> \\subset <<E>> by rewrite genS // setUid sub1set.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{sxxE} [P sylP sxxP] := Sylow_superset sxxE (pE _ _ Ex Ex).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists P => //; rewrite (subsetP sxxP) ?mem_gen ?setU11.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case sEP: (E \\subset P).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply: subsetP Ex; rewrite -gen_subG; apply: pcore_max.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by apply: pgroupS (pHall_pgroup sylP); rewrite gen_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /normal gen_subG class_subG // norms_gen.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose P_yD D := [pred y in E :\\: P | p.-group <<y |: D>>].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose P_D := [pred D : {set gT} | D \\subset P :&: E & [exists y, P_yD D y]].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have{Ex Px}: P_D [set x].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /= sub1set inE Px Ex; apply/existsP=> /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by case/subsetPn: sEP => y Ey Py; exists y; rewrite inE Ey Py pE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/(@maxset_exists _ P_D)=> D /maxsetP[]; rewrite {P_yD P_D}/=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite subsetI sub1set -andbA => /and3P[sDP sDE /existsP[y0]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "set B := _ |: D; rewrite inE -andbA => /and3P[Py0 Ey0 pB] maxD Dx.",
            "VernacExtend",
            "ced270260aea2dd3ab523a646806c84962140531"
        ],
        [
            "have sDgE: D \\subset <<E>> by apply: sub_gen.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sDG: D \\subset G by apply: subset_trans sEG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sBE: B \\subset E by rewrite subUset sub1set Ey0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sBG: <<B>> \\subset G by apply: subset_trans (genS _) sEG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sDB: D \\subset B by rewrite subsetUr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defD: D :=: P :&: <<B>> :&: E.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset ?subsetI sDP sDE sub_gen //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/setUidPl; apply: maxD; last apply: subsetUl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite subUset subsetI sDP sDE setIAC subsetIl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/existsP; exists y0; rewrite inE Py0 Ey0 /= setUA -/B.",
            "VernacExtend",
            "ae497e70e3759466fb63df4611cfb0964cf477c2"
        ],
        [
            "by rewrite -[<<_>>]joing_idl joingE setKI genGid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nDD: D \\subset 'N(D).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/subsetP=> z Dz; rewrite inE defD.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/subsetP=> _ /imsetP[y /setIP[PBy Ey] ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite inE groupJ // ?inE ?(subsetP sDP) ?mem_gen ?setU1r //= memJ_norm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: (subsetP (subset_trans sDG nEG)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "case nDG: (G \\subset 'N(D)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply: subsetP Dx; rewrite -gen_subG pcore_max ?(pgroupS (genS _) pB) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite /normal gen_subG sDG norms_gen.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{n leGn IHn nDG} pN: p.-group <<'N_E(D)>>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: pgroupS (pcore_pgroup p 'N_G(D)); rewrite gen_subG /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/subsetP=> x1 /setIP[Ex1 Nx1]; apply: IHn => [||y Ny].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: leq_trans leGn; rewrite proper_card // /proper subsetIl.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite subsetI nDG andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite inE Nx1 (subsetP sEG) ?mem_gen.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Ex1y: x1 ^ y \\in E.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -mem_conjgV (normsP nEG) // groupV; case/setIP: Ny.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: pgroupS (genS _) (pE _ _ Ex1 Ex1y).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/subsetP=> u; rewrite !inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [y1 Ny1 Py1]: exists2 y1, y1 \\in 'N_E(D) & y1 \\notin P.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case sNN: ('N_<<B>>('N_<<B>>(D)) \\subset 'N_<<B>>(D)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists y0 => //; have By0: y0 \\in <<B>> by rewrite mem_gen ?setU11.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "rewrite inE Ey0 -By0 -in_setI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -['N__(D)](nilpotent_sub_norm (pgroup_nil pB)) ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/subsetPn: sNN => z /setIP[Bz NNz]; rewrite inE Bz inE.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case/subsetPn=> y; rewrite mem_conjg => Dzy Dy.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have:= Dzy; rewrite {1}defD; do 2![case/setIP]=> _ Bzy Ezy.",
            "VernacExtend",
            "64fa48abafe07858f36fa0e2fe01dfc95b691144"
        ],
        [
            "have Ey: y \\in E by rewrite -(normsP nEG _ (subsetP sBG z Bz)) mem_conjg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /setIP[By Ny]: y \\in 'N_<<B>>(D).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(normP NNz) mem_conjg inE Bzy ?(subsetP nDD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists y; first by rewrite inE Ey.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite defD 2!inE Ey By !andbT in Dy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [y2 Ny2 Dy2]: exists2 y2, y2 \\in 'N_(P :&: E)(D) & y2 \\notin D.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case sNN: ('N_P('N_P(D)) \\subset 'N_P(D)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [z /= Ez sEzP] := Sylow_Jsub sylP (genS sBE) pB.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Gz: z \\in G by apply: subsetP Ez.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /subsetPn[y Bzy Dy]: ~~ (B :^ z \\subset D).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/negP; move/subset_leq_card; rewrite cardJg cardsU1.",
            "VernacExtend",
            "892743169f9b7a8d1078a131ab1583767aafbf69"
        ],
        [
            "by rewrite {1}defD 2!inE (negPf Py0) ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists y => //; apply: subsetP Bzy.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "rewrite -setIA setICA subsetI sub_conjg (normsP nEG) ?groupV // sBE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have nilP := pgroup_nil (pHall_pgroup sylP).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -['N__(_)](nilpotent_sub_norm nilP) ?subsetIl // -gen_subG genJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/subsetPn: sNN => z /setIP[Pz NNz]; rewrite 2!inE Pz.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case/subsetPn=> y Dzy Dy; exists y => //; apply: subsetP Dzy.",
            "VernacExtend",
            "c9a31b5c3dbfd076b1a173b39b5981bc72187636"
        ],
        [
            "rewrite -setIA setICA subsetI sub_conjg (normsP nEG) ?groupV //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite sDE -(normP NNz); rewrite conjSg subsetI sDP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: subsetP Pz; apply: (subset_trans (pHall_sub sylP)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff{Dy2} Dy2D: y2 |: D = D by rewrite -Dy2D setU11 in Dy2.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "apply: maxD; last by rewrite subsetUr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/setIP: Ny2 => PEy2 Ny2; case/setIP: Ny1 => Ey1 Ny1.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite subUset sub1set PEy2 subsetI sDP sDE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/existsP; exists y1; rewrite inE Ey1 Py1; apply: pgroupS pN.",
            "VernacExtend",
            "5f8c1bd6f93df578273f5da2cb7b78e5d1d36561"
        ],
        [
            "rewrite genS // !subUset !sub1set !in_setI Ey1 Ny1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/setIP: PEy2 => _ ->; rewrite Ny2 subsetI sDE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NilPGroups.",
            "VernacEndSegment",
            "6d1b8ed88bcf36bc50c32b49975cd49258218e8d"
        ]
    ],
    "proofs": [
        {
            "name": "nontrivial_gacent_pgroup",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "move=> pG pM [nMG sMR] ntM; have [p_pr p_dv_M _] := pgroup_pdiv pM ntM.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite -cardG_gt1 (leq_trans (prime_gt1 p_pr)) 1?dvdn_leq ?cardG_gt0 //= /dvdn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite gacentE ?(acts_dom nMG) // setIA (setIidPl sMR) -pgroup_fix_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcore_sub_astab_irr",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "move=> pM sMR /mingroupP[/andP[ntM nMG] minM].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have /andP[sGpG nGpG]: 'O_p(G) <| G := gFnormal _ G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sGD := acts_dom nMG; have sGpD: 'O_p(G) \\subset D := gFsub_trans _ sGD.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "rewrite subsetI sGpG -gacentC //=; apply/setIidPl; apply: minM (subsetIl _ _).",
                        "VernacExtend",
                        "51feb8305384ec63057bc47214b50a33a7155fd3"
                    ]
                },
                {
                    "command": [
                        "rewrite nontrivial_gacent_pgroup ?pcore_pgroup //=; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by split; rewrite ?gFsub_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: subset_trans (acts_subnorm_subgacent sGpD nMG); rewrite subsetI subxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcore_faithful_irr_act",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "move=> pM sMR irrG ffulG; apply/trivgP; apply: subset_trans ffulG.",
                        "VernacExtend",
                        "e374b6c583d80c9d8b579c06df7953342f99f751"
                    ]
                },
                {
                    "command": [
                        "exact: pcore_sub_astab_irr.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_pgroup_Sylow",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "by case Sylow's_theorem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sylow_superset",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "move=> sQG pQ.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [|P] := @maxgroup_exists _ (p.-subgroup(G)) Q; first exact/andP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite max_pgroup_Sylow; exists P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sylow_exists",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "by case: (Sylow_superset (sub1G G) (pgroup1 _ p)) => P; exists P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Syl_trans",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "by case Sylow's_theorem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sylow_trans",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "move=> sylP sylQ; have:= (atransP2 Syl_trans) P Q; rewrite !inE.",
                        "VernacExtend",
                        "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
                    ]
                },
                {
                    "command": [
                        "by case=> // x Gx ->; exists x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sylow_subJ",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "move=> sylP sQG pQ; have [Px sylPx] := Sylow_superset sQG pQ.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by have [x Gx ->] := Sylow_trans sylP sylPx; exists x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sylow_Jsub",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "move=> sylP sQG pQ; have [x Gx] := Sylow_subJ sylP sQG pQ.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by exists x^-1; rewrite (groupV, sub_conjgV).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Syl",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "by case: Sylow's_theorem P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Syl_dvd",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "by case Sylow_exists => P /card_Syl->; apply: dvdn_indexg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Syl_mod",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "by case Sylow's_theorem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Frattini_arg",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "case/andP=> sGH nGH sylP; rewrite -normC ?subIset ?nGH ?orbT // -astab1JG.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "move/subgroup_transitiveP: Syl_trans => ->; rewrite ?inE //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply/imsetP; exists P; rewrite ?inE //.",
                        "VernacExtend",
                        "bcb62060dd95ac542214abbb1eabd6c0a0a74c87"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubset -{1}((atransP Syl_trans) P) ?inE // imsetS //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> _ /imsetP[x Hx ->]; rewrite inE -(normsP nGH x Hx) pHallJ2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sylow_setI_normal",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "case/normalP=> sGH nGH sylP; have [Q sylQ] := Sylow_exists p G.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "have /maxgroupP[/andP[sQG pQ] maxQ] := Hall_max sylQ.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [R sylR sQR] := Sylow_superset (subset_trans sQG sGH) pQ.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [[x Hx ->] pR] := (Sylow_trans sylR sylP, pHall_pgroup sylR).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(nGH x Hx) -conjIg pHallJ2.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have /maxQ-> //: Q \\subset G :&: R by rewrite subsetI sQG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite /psubgroup subsetIl (pgroupS _ pR) ?subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trivg_center_pgroup",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "move=> pP Z1; apply/eqP/idPn=> ntP.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "have{ntP} [p_pr p_dv_P _] := pgroup_pdiv pP ntP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suff: p %| #|'Z(P)| by rewrite Z1 cards1 gtnNdvd ?prime_gt1.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite /center /dvdn -afixJ -pgroup_fix_mod // astabsJ normG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_p2group_abelian",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "move=> primep oP; have pP: p.-group P by rewrite /pgroup oP pnat_exp pnat_id.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite (p2group_abelian pP) // oP pfactorK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sylow_transversal_gen",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "move=> G_T T_G; apply/eqP; rewrite eqEcard gen_subG.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "apply/andP; split; first exact/bigcupsP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: dvdn_leq (cardG_gt0 _) _; apply/dvdn_partP=> // q /T_G[P T_P sylP].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(card_Hall sylP); apply: cardSg; rewrite sub_gen // bigcup_sup.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sylow_gen",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "set T := [set P : {group gT} | Sylow G P].",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}(@Sylow_transversal_gen T G) => [|P | q _].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by congr <<_>>; apply: eq_bigl => P; rewrite inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE => /and3P[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: (Sylow_exists q G) => P sylP; exists P; rewrite // inE (p_Sylow sylP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hall_pJsub",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "move=> hallH pi_p sPG pP.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [S sylS] := Sylow_exists p H; have sylS_G := subHall_Sylow hallH pi_p sylS.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "have [x Gx sPxS] := Sylow_Jsub sylS_G sPG pP; exists x => //.",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "exact: subset_trans sPxS (pHall_sub sylS).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hall_psubJ",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "move=> hallH pi_p sPG pP; have [x Gx sPxH] := Hall_pJsub hallH pi_p sPG pP.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by exists x^-1; rewrite ?groupV -?sub_conjg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_mulG_setI_norm",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "move=> defG nHG coKR; apply/eqP; rewrite eqEcard mulG_subG /= -defG.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite !setSI ?mulG_subl ?mulG_subr //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite coprime_cardMg ?(coKR, coprimeSg (subsetIl _ _), coprime_sym) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "pose pi := \\pi(K); have piK: pi.-group K by apply: pgroup_pi.",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "have pi'R: pi^'.-group R by rewrite /pgroup -coprime_pi' /=.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [hallK hallR] := coprime_mulpG_Hall defG piK pi'R.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nsHG: H :&: G <| G by rewrite /normal subsetIr normsI ?normG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -!(setIC H) defG -(partnC pi (cardG_gt0 _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(card_Hall (Hall_setI_normal nsHG hallR)) /= setICA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(card_Hall (Hall_setI_normal nsHG hallK)) /= setICA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -defG (setIidPl (mulG_subl _ _)) (setIidPl (mulG_subr _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pgroup_nil",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "move: {2}_.+1 (ltnSn #|P|) => n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim: n gT P => // n IHn pT P; rewrite ltnS=> lePn pP.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "have [Z1 | ntZ] := eqVneq 'Z(P) 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (trivg_center_pgroup pP Z1) nilpotent1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -quotient_center_nil IHn ?morphim_pgroup // (leq_trans _ lePn) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite card_quotient ?normal_norm ?center_normal // -divgS ?subsetIl //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltn_Pdiv // ltnNge -trivg_card_le1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pgroup_sol",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "by move/pgroup_nil; apply: nilpotent_sol.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "small_nil_class",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "move=> leK5; case: (ltnP 5 #|G|) => [lt5G | leG5 {leK5}].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by rewrite nilpotent_class (leq_ltn_trans leK5).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: pgroup_nil (pdiv #|G|) _ _; apply/andP; split=> //.",
                        "VernacExtend",
                        "1d32417824786a65f5ff40d1d9dc083be853a4a7"
                    ]
                },
                {
                    "command": [
                        "by case: #|G| leG5 => //; do 5!case=> //.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_class2",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "rewrite subsetI der_sub; apply/idP/commG1P=> [clG2 | L3G1].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by apply/(lcn_nil_classP 2); rewrite ?small_nil_class ?(leq_trans clG2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/(lcn_nil_classP 2) => //; apply/lcnP; exists 2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_class3",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "rewrite subsetI lcn_sub; apply/idP/commG1P=> [clG3 | L4G1].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by apply/(lcn_nil_classP 3); rewrite ?small_nil_class ?(leq_trans clG3).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/(lcn_nil_classP 3) => //; apply/lcnP; exists 3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nilpotent_pcore_Hall",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "move=> nilG; case: (@maxgroup_exists _ (psubgroup pi G) 1) => [|H maxH _].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by rewrite /psubgroup sub1G pgroup1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have hallH := normal_max_pgroup_Hall maxH (nilpotent_maxp_normal nilG maxH).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(nilpotent_Hall_pcore nilG hallH).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nilpotent_pcoreC",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "move=> nilG; have trO: 'O_pi(G) :&: 'O_pi^'(G) = 1.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by apply: coprime_TIg; apply: (@pnat_coprime pi); apply: pcore_pgroup.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite dprodE //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqEcard mul_subG ?pcore_sub // (TI_cardMg trO).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(card_Hall (nilpotent_pcore_Hall _ _)) // partnC ?leqnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (sameP commG1P trivgP) -trO subsetI commg_subl commg_subr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !gFsub_trans ?gFnorm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_nilpotent_cent2",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "move=> nilG sKG sHG; rewrite coprime_pi' // => p'H.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "have sub_Gp := sub_Hall_pcore (nilpotent_pcore_Hall _ nilG).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [_ _ cGpp' _] := dprodP (nilpotent_pcoreC \\pi(K) nilG).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: centSS cGpp'; rewrite sub_Gp ?pgroup_pi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi_center_nilpotent",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "move=> nilG; apply/eq_piP => /= p.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "apply/idP/idP=> [|pG]; first exact: (piSg (center_sub _)).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move: (pG); rewrite !mem_primes !cardG_gt0; case/andP=> p_pr _.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "pose Z := 'O_p(G) :&: 'Z(G); have ntZ: Z != 1.",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_center_nil ?pcore_normal // trivg_card_le1 -ltnNge.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (card_Hall (nilpotent_pcore_Hall p nilG)) p_part.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (ltn_exp2l 0 _ (prime_gt1 p_pr)) logn_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have pZ: p.-group Z := pgroupS (subsetIl _ _) (pcore_pgroup _ _).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have{ntZ pZ} [_ pZ _] := pgroup_pdiv pZ ntZ.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite p_pr (dvdn_trans pZ) // cardSg ?subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZgroupS",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "move=> sHG /forallP zgG; apply/forall_inP=> V /SylowP[p p_pr /and3P[sVH]].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "case/(Sylow_superset (subset_trans sVH sHG))=> P sylP sVP _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by have:= zgG P; rewrite (p_Sylow sylP); apply: cyclicS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphim_Zgroup",
            "line_nb": 366,
            "steps": [
                {
                    "command": [
                        "move=> zgG; wlog sGD: G zgG / G \\subset D.",
                        "VernacExtend",
                        "6dbaea969dd2e1a08b50e55e2e4c4949c4d27249"
                    ]
                },
                {
                    "command": [
                        "by rewrite -morphimIdom; apply; rewrite (ZgroupS _ zgG, subsetIl) ?subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/forall_inP=> fV /SylowP[p pr_p sylfV].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have [P sylP] := Sylow_exists p G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [|z _ ->] := @Sylow_trans p _ _ (f @* P)%G _ _ sylfV.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: morphim_pHall (sylP); apply: subset_trans (pHall_sub sylP) sGD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite cyclicJ morphim_cyclic ?(forall_inP zgG) //; apply/SylowP; exists p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_Zgroup_cyclic",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "elim: {G}_.+1 {-2}G (ltnSn #|G|) => // n IHn G; rewrite ltnS => leGn ZgG nilG.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "have [->|[p pr_p pG]] := trivgVpdiv G; first by rewrite -cycle1 cycle_cyclic.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have /dprodP[_ defG Cpp' _] := nilpotent_pcoreC p nilG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have /cyclicP[x def_p]: cyclic 'O_p(G).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have:= forallP ZgG 'O_p(G)%G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (p_Sylow (nilpotent_pcore_Hall p nilG)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /cyclicP[x' def_p']: cyclic 'O_p^'(G).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sp'G := pcore_sub p^' G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: IHn (leq_trans _ leGn) (ZgroupS sp'G _) (nilpotentS sp'G _) => //.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite proper_card // properEneq sp'G andbT; case: eqP => //= def_p'.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by have:= pcore_pgroup p^' G; rewrite def_p' /pgroup p'natE ?pG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/cyclicP; exists (x * x'); rewrite -{}defG def_p def_p' cycleM //.",
                        "VernacExtend",
                        "4333201b6d053b3c8bf63cf935dcbd70f89b9eef"
                    ]
                },
                {
                    "command": [
                        "by red; rewrite -(centsP Cpp') // (def_p, def_p') cycle_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /order -def_p -def_p' (@pnat_coprime p) //; apply: pcore_pgroup.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normal_pgroup",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "elim: r gT P N => [|r IHr] gTr P N pP nNP le_r.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by exists (1%G : {group gTr}); rewrite sub1G normal1 cards1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [NZ_1 | ntNZ] := eqVneq (N :&: 'Z(P)) 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (TI_center_nil (pgroup_nil pP)) // cards1 logn1 in le_r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: p.-group (N :&: 'Z(P)) by apply: pgroupS pP; rewrite /= setICA subsetIl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/pgroup_pdiv=> // p_pr /Cauchy[// | z].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite -cycle_subG !subsetI => /and3P[szN szP cPz] ozp _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have{cPz} nzP: P \\subset 'N(<[z]>) by rewrite cents_norm // centsC.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have: N / <[z]> <| P / <[z]> by rewrite morphim_normal.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/IHr=> [||Qb [sQNb nQPb]]; first exact: morphim_pgroup.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite card_quotient ?(subset_trans (normal_sub nNP)) // -ltnS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: (leq_trans le_r); rewrite -(Lagrange szN) [#|_|]ozp.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite lognM // ?prime_gt0 // logn_prime ?eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/(inv_quotientN _): nQPb sQNb => [|Q -> szQ nQP]; first exact/andP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have nzQ := subset_trans (normal_sub nQP) nzP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite quotientSGK // card_quotient // => sQN izQ.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by exists Q; split=> //; rewrite expnS -izQ -ozp Lagrange.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}