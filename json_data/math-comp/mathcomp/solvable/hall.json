{
    "filename": "mathcomp/solvable/hall.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq div fintype finset.",
            "VernacRequire",
            "aaeb1b5695a4261faf84411202ea9baecf1e5792"
        ],
        [
            "From mathcomp Require Import prime fingroup morphism automorphism quotient action gproduct.",
            "VernacRequire",
            "82b1cd8b3a97efd6f0d291d99958850314a4f2c0"
        ],
        [
            "From mathcomp Require Import gfunctor commutator center pgroup finmodule nilpotent sylow.",
            "VernacRequire",
            "280f0eeb9426d3a28eec235610a82d6fc7c39c33"
        ],
        [
            "From mathcomp Require Import abelian maximal.",
            "VernacRequire",
            "e9897826041601d2c0e5b945fa7e42d15f13b915"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Section Hall.",
            "VernacBeginSection",
            "3062db900a26da38a0aae82e1f0af0d9117dcf04"
        ],
        [
            "Implicit Type gT : finGroupType.",
            "VernacReserve",
            "fbb7aa19a7971c5b10d380fd1f026e4fa401e829"
        ],
        [
            "Theorem SchurZassenhaus_split gT (G H : {group gT}) : Hall G H -> H <| G -> [splits G, over H].",
            "VernacStartTheoremProof",
            "ded785b6e4d1206dcef39ff9031049b9fbcc1f93"
        ],
        [
            "move: {2}_.+1 (ltnSn #|G|) => n; elim: n => // n IHn in gT G H *.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "rewrite ltnS => Gn hallH nsHG; have [sHG nHG] := andP nsHG.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "have [-> | [p pr_p pH]] := trivgVpdiv H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/splitsP; exists G; rewrite inE -subG1 subsetIl mul1g eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [P sylP] := Sylow_exists p H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case nPG: (P <| G); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose N := ('N_G(P))%G; have sNG: N \\subset G by rewrite subsetIl.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have eqHN_G: H * N = G by apply: Frattini_arg sylP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose H' := (H :&: N)%G.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have nsH'N: H' <| N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /normal subsetIr normsI ?normG ?(subset_trans sNG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have eq_iH: #|G : H| = #|N| %/ #|H'|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -divgS // -(divnMl (cardG_gt0 H')) mulnC -eqHN_G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -mul_cardG (mulnC #|H'|) divnMl // cardG_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have hallH': Hall N H'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /Hall -divgS subsetIr //= -eq_iH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/andP: hallH => _; apply: coprimeSg; apply: subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: [splits N, over H'].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: IHn hallH' nsH'N; apply: {n}leq_trans Gn.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite proper_card // properEneq sNG andbT; apply/eqP=> eqNG.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -eqNG normal_subnorm (subset_trans (pHall_sub sylP)) in nPG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/splitsP=> K /complP[tiKN eqH'K].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have sKN: K \\subset N by rewrite -(mul1g K) -eqH'K mulSg ?sub1set.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/splitsP; exists K; rewrite inE -subG1; apply/andP; split.",
            "VernacExtend",
            "512724c74e962dda7da5114f87e56b7cc65299ff"
        ],
        [
            "by rewrite /= -(setIidPr sKN) setIA tiKN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite eqEsubset -eqHN_G mulgS // -eqH'K mulGS mulSg ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose Z := 'Z(P); pose Gbar := G / Z; pose Hbar := H / Z.",
            "VernacExtend",
            "a37246b98b083397f6e69dfe0e1d317fcad6a9d6"
        ],
        [
            "have sZP: Z \\subset P by apply: center_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sZH: Z \\subset H by apply: subset_trans (pHall_sub sylP).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sZG: Z \\subset G by apply: subset_trans sHG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nZG: Z <| G by apply: gFnormal_trans nPG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nZH: Z <| H by apply: normalS nZG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nHGbar: Hbar <| Gbar by apply: morphim_normal.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have hallHbar: Hall Gbar Hbar by apply: morphim_Hall (normal_norm _) _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: [splits Gbar, over Hbar].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: IHn => //; apply: {n}leq_trans Gn; rewrite ltn_quotient //.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "apply/eqP=> /(trivg_center_pgroup (pHall_pgroup sylP))/eqP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite trivg_card1 (card_Hall sylP) p_part -(expn0 p).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eqn_exp2l ?prime_gt1 // lognE pH pr_p cardG_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/splitsP=> Kbar /complP[tiHKbar eqHKbar].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have: Kbar \\subset Gbar by rewrite -eqHKbar mulG_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/inv_quotientS=> //= ZK quoZK sZZK sZKG.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have nZZK: Z <| ZK by apply: normalS nZG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cardZK: #|ZK| = (#|Z| * #|G : H|)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(Lagrange sZZK); congr (_ * _)%N.",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite -card_quotient -?quoZK; last by case/andP: nZZK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -(divgS sHG) -(Lagrange sZG) -(Lagrange sZH) divnMl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!card_quotient ?normal_norm //= -/Gbar -/Hbar.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -eqHKbar (TI_cardMg tiHKbar) mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: [splits ZK, over Z].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (Gaschutz_split nZZK _ sZZK) ?center_abelian //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -divgS // cardZK mulKn ?cardG_gt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/andP: hallH => _; apply: coprimeSg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/splitsP; exists 1%G; rewrite inE -subG1 subsetIr mulg1 eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/splitsP=> K /complP[tiZK eqZK].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have sKZK: K \\subset ZK by rewrite -(mul1g K) -eqZK mulSg ?sub1G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have tiHK: H :&: K = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/trivgP; rewrite /= -(setIidPr sKZK) setIA -tiZK setSI //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -quotient_sub1; last by rewrite subIset 1?normal_norm.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /= quotientGI //= -quoZK tiHKbar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/splitsP; exists K; rewrite inE tiHK ?eqEcard subxx leqnn /=.",
            "VernacExtend",
            "07d6a98275d3a86ec7fb5dd8d006ee2eb332ed34"
        ],
        [
            "rewrite mul_subG ?(subset_trans sKZK) //= TI_cardMg //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(@mulKn #|K| #|Z|) ?cardG_gt0 // -TI_cardMg // eqZK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cardZK mulKn ?cardG_gt0 // Lagrange.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem SchurZassenhaus_trans_sol gT (H K K1 : {group gT}) : solvable H -> K \\subset 'N(H) -> K1 \\subset H * K -> coprime #|H| #|K| -> #|K1| = #|K| -> exists2 x, x \\in H & K1 :=: K :^ x.",
            "VernacStartTheoremProof",
            "82097152c562df6c59ffda2082a72eb9bd3fa32a"
        ],
        [
            "move: {2}_.+1 (ltnSn #|H|) => n; elim: n => // n IHn in gT H K K1 *.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "rewrite ltnS => leHn solH nHK; have [-> | ] := eqsVneq H 1.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "rewrite mul1g => sK1K _ eqK1K; exists 1; first exact: set11.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/eqP; rewrite conjsg1 eqEcard sK1K eqK1K /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose G := (H <*> K)%G.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have defG: G :=: H * K by rewrite -normC // -norm_joinEl // joingC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sHG: H \\subset G by apply: joing_subl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sKG: K \\subset G by apply: joing_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nsHG: H <| G by rewrite /(H <| G) sHG join_subG normG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/(solvable_norm_abelem solH nsHG)=> M [sMH nsMG ntM] /and3P[_ abelM _].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [sMG nMG] := andP nsMG; rewrite -defG => sK1G coHK oK1K.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "have nMsG (L : {set gT}): L \\subset G -> L \\subset 'N(M).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move/subset_trans->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [coKM coHMK]: coprime #|M| #|K| /\\ coprime #|H / M| #|K|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/andP; rewrite -coprime_mull card_quotient ?nMsG ?Lagrange.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oKM (K' : {group gT}): K' \\subset G -> #|K'| = #|K| -> #|K' / M| = #|K|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> sK'G oK'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -quotientMidr -?norm_joinEl ?card_quotient ?nMsG //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gen_subG subUset sK'G.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -divgS /=; last by rewrite -gen_subG genS ?subsetUr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite norm_joinEl ?nMsG // coprime_cardMg ?mulnK // oK' coprime_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [xb]: exists2 xb, xb \\in H / M & K1 / M = (K / M) :^ xb.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: IHn; try by rewrite (quotient_sol, morphim_norms, oKM K) ?(oKM K1).",
            "VernacExtend",
            "04f36fb90226571591691114239c3303d9fa2968"
        ],
        [
            "by apply: leq_trans leHn; rewrite ltn_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -morphimMl ?nMsG // -defG morphimS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/morphimP=> x nMx Hx ->{xb} eqK1Kx; pose K2 := (K :^ x)%G.",
            "VernacExtend",
            "61f7313c68f88d92a678d74fe9c99999257a468e"
        ],
        [
            "have{eqK1Kx} eqK12: K1 / M = K2 / M by rewrite quotientJ.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suff [y My ->]: exists2 y, y \\in M & K1 :=: K2 :^ y.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by exists (x * y); [rewrite groupMl // (subsetP sMH) | rewrite conjsgM].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nMK1: K1 \\subset 'N(M) by apply: nMsG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defMK: M * K1 = M <*> K1 by rewrite -normC // -norm_joinEl // joingC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sMKM: M \\subset M <*> K1 by rewrite joing_subl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nMKM: M <| M <*> K1 by rewrite normalYl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have trMK1: M :&: K1 = 1 by rewrite coprime_TIg ?oK1K.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have trMK2: M :&: K2 = 1 by rewrite coprime_TIg ?cardJg ?oK1K.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (Gaschutz_transitive nMKM _ sMKM) => //=; last 2 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite inE trMK1 defMK !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -!(setIC M) trMK1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -divgS //= -defMK coprime_cardMg oK1K // mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite inE trMK2 eqxx eq_sym eqEcard /= -defMK andbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !coprime_cardMg ?cardJg ?oK1K ?leqnn //= mulGS -quotientSK -?eqK12.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SchurZassenhaus_trans_actsol gT (G A B : {group gT}) : solvable A -> A \\subset 'N(G) -> B \\subset A <*> G -> coprime #|G| #|A| -> #|A| = #|B| -> exists2 x, x \\in G & B :=: A :^ x.",
            "VernacStartTheoremProof",
            "9eb64addae067477e2abc17f1c06e21026d6a2a2"
        ],
        [
            "set AG := A <*> G; move: {2}_.+1 (ltnSn #|AG|) => n.",
            "VernacExtend",
            "f628976770401b451f7084f1a40c1ab2a7e144eb"
        ],
        [
            "elim: n => // n IHn in gT A B G AG *.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite ltnS => leAn solA nGA sB_AG coGA oAB.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [A1 | ntA] := eqsVneq A 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists 1; rewrite // conjsg1 A1 (@card1_trivg _ B) // -oAB A1 cards1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [M [sMA nsMA ntM]] := solvable_norm_abelem solA (normal_refl A) ntA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/is_abelemP=> q q_pr /abelem_pgroup qM; have nMA := normal_norm nsMA.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "have defAG: AG = A * G := norm_joinEl nGA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sA_AG: A \\subset AG := joing_subl _ _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sG_AG: G \\subset AG := joing_subr _ _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sM_AG := subset_trans sMA sA_AG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oAG: #|AG| = (#|A| * #|G|)%N by rewrite defAG coprime_cardMg 1?coprime_sym.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have q'G: #|G|`_q = 1%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite part_p'nat ?p'natE -?prime_coprime // coprime_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [_ _ [k oM]] := pgroup_pdiv qM ntM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(@coprime_pexpr k.+1) // -oM (coprimegS sMA).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have coBG: coprime #|B| #|G| by rewrite -oAB coprime_sym.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defBG: B * G = AG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/eqP; rewrite eqEcard mul_subG ?sG_AG //= oAG oAB coprime_cardMg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case nMG: (G \\subset 'N(M)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have nsM_AG: M <| AG by rewrite /normal sM_AG join_subG nMA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nMB: B \\subset 'N(M) := subset_trans sB_AG (normal_norm nsM_AG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sMB: M \\subset B.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [Q sylQ]:= Sylow_exists q B; have sQB := pHall_sub sylQ.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "apply: subset_trans (normal_sub_max_pgroup (Hall_max _) qM nsM_AG) (sQB).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite pHallE (subset_trans sQB) //= oAG partnM // q'G muln1 oAB.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (card_Hall sylQ).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defAGq: AG / M = (A / M) <*> (G / M).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite quotient_gen ?quotientU ?subUset ?nMA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: B / M \\subset (A / M) <*> (G / M) by rewrite -defAGq quotientS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/IHn; rewrite ?morphim_sol ?quotient_norms ?coprime_morph //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -defAGq (leq_trans _ leAn) ?ltn_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !card_quotient // -!divgS // oAB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> Mx; case/morphimP=> x Nx Gx ->{Mx} //; rewrite -quotientJ //= => defBq.",
            "VernacExtend",
            "898083afbcb7f48eb38b81893aabf115193d46fd"
        ],
        [
            "exists x => //; apply: quotient_inj defBq; first by rewrite /normal sMB.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(normsP nMG x Gx) /normal normJ !conjSg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose K := M <*> G; pose R := K :&: B; pose N := 'N_G(M).",
            "VernacExtend",
            "a37246b98b083397f6e69dfe0e1d317fcad6a9d6"
        ],
        [
            "have defK: K = M * G by rewrite -norm_joinEl ?(subset_trans sMA).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oK: #|K| = (#|M| * #|G|)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite defK coprime_cardMg // coprime_sym (coprimegS sMA).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sylM: q.-Sylow(K) M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite pHallE joing_subl /= oK partnM // q'G muln1 part_pnat_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sylR: q.-Sylow(K) R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite pHallE subsetIl /= -(card_Hall sylM) -(@eqn_pmul2r #|G|) // -oK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -coprime_cardMg ?(coprimeSg _ coBG) ?subsetIr //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite group_modr ?joing_subr ?(setIidPl _) // defBG join_subG sM_AG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [mx] := Sylow_trans sylM sylR.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /= -/K defK; case/imset2P=> m x Mm Gx ->{mx}.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite conjsgM conjGid {m Mm}// => defR.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have sNG: N \\subset G := subsetIl _ _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have pNG: N \\proper G by rewrite /proper sNG subsetI subxx nMG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nNA: A \\subset 'N(N) by rewrite normsI ?norms_norm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: B :^ x^-1 \\subset A <*> N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite norm_joinEl ?group_modl // -defAG subsetI !sub_conjgV -normJ -defR.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite conjGid ?(subsetP sG_AG) // normsI ?normsG // (subset_trans sB_AG) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite join_subG normsM // -defK normsG ?joing_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "do [case/IHn; rewrite ?cardJg ?(coprimeSg _ coGA) //= -/N] => [|y Ny defB].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite joingC norm_joinEr // coprime_cardMg ?(coprimeSg sNG) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (leq_trans _ leAn) // oAG mulnC ltn_pmul2l // proper_card.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (y * x); first by rewrite groupM // (subsetP sNG).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite conjsgM -defB conjsgKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Hall_exists_subJ pi gT (G : {group gT}) : solvable G -> exists2 H : {group gT}, pi.-Hall(G) H & forall K : {group gT}, K \\subset G -> pi.-group K -> exists2 x, x \\in G & K \\subset H :^ x.",
            "VernacStartTheoremProof",
            "5d8e915cb32276185c06a6698f9b293443cd1f9f"
        ],
        [
            "move: {2}_.+1 (ltnSn #|G|) => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: n gT G => // n IHn gT G; rewrite ltnS => leGn solG.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "have [-> | ntG] := eqsVneq G 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists 1%G => [|_ /trivGP-> _]; last by exists 1; rewrite ?set11 ?sub1G.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite pHallE sub1G cards1 part_p'nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (solvable_norm_abelem solG (normal_refl _)) => // M [sMG nsMG ntM].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/is_abelemP=> p pr_p /and3P[pM cMM _].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "pose Gb := (G / M)%G; case: (IHn _ Gb) => [||Hb]; try exact: quotient_sol.",
            "VernacExtend",
            "279fd4a7178c448900aa3c39c7740e7c49d62c6f"
        ],
        [
            "by rewrite (leq_trans (ltn_quotient _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/and3P=> [sHbGb piHb pi'Hb'] transHb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (inv_quotientS nsMG sHbGb) => H def_H sMH sHG.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have nMG := normal_norm nsMG; have nMH := subset_trans sHG nMG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have{transHb} transH (K : {group gT}): K \\subset G -> pi.-group K -> exists2 x, x \\in G & K \\subset H :^ x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> sKG piK; have nMK := subset_trans sKG nMG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case: (transHb (K / M)%G) => [||xb Gxb sKHxb]; first exact: morphimS.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exact: morphim_pgroup.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "case/morphimP: Gxb => x Nx Gx /= def_x; exists x => //.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "apply/subsetP=> y Ky.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have: y \\in coset M y by rewrite val_coset (subsetP nMK, rcoset_refl).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: coset M y \\in (H :^ x) / M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /quotient morphimJ //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite def_x def_H in sKHxb; apply/(subsetP sKHxb)/mem_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/morphimP=> z Nz Hxz ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite val_coset //; case/rcosetP=> t Mt ->; rewrite groupMl //.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "by rewrite mem_conjg (subsetP sMH) // -mem_conjg (normP Nx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{pi'Hb'} pi'H': pi^'.-nat #|G : H|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: pi'Hb'; rewrite -!divgS // def_H !card_quotient //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -(divnMl (cardG_gt0 M)) !Lagrange.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [pi_p | pi'p] := boolP (p \\in pi).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists H => //; apply/and3P; split=> //; rewrite /pgroup.",
            "VernacExtend",
            "fa4a7e88a694722a72385206c042fd75e26a066c"
        ],
        [
            "by rewrite -(Lagrange sMH) -card_quotient // pnat_mul -def_H (pi_pnat pM).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [ltHG | leGH {n IHn leGn transH}] := ltnP #|H| #|G|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (IHn _ H (leq_trans ltHG leGn)) => [|H1]; first exact: solvableS solG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/and3P=> sH1H piH1 pi'H1' transH1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have sH1G: H1 \\subset G by apply: subset_trans sHG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists H1 => [|K sKG piK].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/and3P; split => //.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite -divgS // -(Lagrange sHG) -(Lagrange sH1H) -mulnA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulKn // pnat_mul pi'H1'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (transH K sKG piK) => x Gx def_K.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (transH1 (K :^ x^-1)%G) => [||y Hy def_K1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite sub_conjgV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite /pgroup cardJg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (y * x); first by rewrite groupMr // (subsetP sHG).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(conjsgKV x K) conjsgM conjSg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{leGH Gb sHbGb sHG sMH pi'H'} eqHG: H = G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/eqP; rewrite -val_eqE eqEcard sHG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{H Hb def_H eqHG piHb nMH} hallM: pi^'.-Hall(G) M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /pHall /pgroup sMG pnatNK -card_quotient //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -eqHG -def_H (pi_pnat pM).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/splitsP: (SchurZassenhaus_split (pHall_Hall hallM) nsMG) => H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/complP=> trMH defG.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have sHG: H \\subset G by rewrite -defG mulG_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists H => [|K sKG piK].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: etrans hallM; rewrite /pHall sMG sHG /= -!divgS // -defG andbC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (TI_cardMg trMH) mulKn ?mulnK // pnatNK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose G1 := (K <*> M)%G; pose K1 := (H :&: G1)%G.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have nMK: K \\subset 'N(M) by apply: subset_trans sKG nMG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defG1: M * K = G1 by rewrite -normC -?norm_joinEl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sK1G1: K1 \\subset M * K by rewrite defG1 subsetIr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have coMK: coprime #|M| #|K|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite coprime_sym (pnat_coprime piK) //; apply: (pHall_pgroup hallM).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (SchurZassenhaus_trans_sol _ nMK sK1G1 coMK) => [||x Mx defK1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: solvableS solG.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/eqP; rewrite -(eqn_pmul2l (cardG_gt0 M)) -TI_cardMg //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/trivgP; rewrite -trMH /= setIA subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -coprime_cardMg // defG1; apply/eqP; congr #|(_ : {set _})|.",
            "VernacExtend",
            "470a8ad3c912d4f8cb2e3d688aab7c3a56d118ec"
        ],
        [
            "rewrite group_modl; last by rewrite -defG1 mulG_subl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/setIidPr; rewrite defG gen_subG subUset sKG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists x^-1; first by rewrite groupV (subsetP sMG).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(_ : K1 :^ x^-1 = K) ?(conjSg, subsetIl) // defK1 conjsgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Hall.",
            "VernacEndSegment",
            "40155dc9a23b9fce4533edf96b46bcf163fe6265"
        ],
        [
            "Section HallCorollaries.",
            "VernacBeginSection",
            "38908db949713f67cb19e1b209718567b2b105ac"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Corollary Hall_exists pi (G : {group gT}) : solvable G -> exists H : {group gT}, pi.-Hall(G) H.",
            "VernacStartTheoremProof",
            "0a55c51071a08f7b6143ceee085204b98493007b"
        ],
        [
            "by case/(Hall_exists_subJ pi) => H; exists H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Hall_trans pi (G H1 H2 : {group gT}) : solvable G -> pi.-Hall(G) H1 -> pi.-Hall(G) H2 -> exists2 x, x \\in G & H1 :=: H2 :^ x.",
            "VernacStartTheoremProof",
            "67ce7682f528e808f9bd508b79d138852d385754"
        ],
        [
            "move=> solG; have [H hallH transH] := Hall_exists_subJ pi solG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have conjH (K : {group gT}): pi.-Hall(G) K -> exists2 x, x \\in G & K = (H :^ x)%G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> hallK; have [sKG piK _] := and3P hallK.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case: (transH K sKG piK) => x Gx sKH; exists x => //.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "apply/eqP; rewrite -val_eqE eqEcard sKH cardJg.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (card_Hall hallH) (card_Hall hallK) /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/conjH=> x1 Gx1 ->{H1}; case/conjH=> x2 Gx2 ->{H2}.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "exists (x2^-1 * x1); first by rewrite groupMl ?groupV.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: val_inj; rewrite /= conjsgM conjsgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Hall_superset pi (G K : {group gT}) : solvable G -> K \\subset G -> pi.-group K -> exists2 H : {group gT}, pi.-Hall(G) H & K \\subset H.",
            "VernacStartTheoremProof",
            "2ef28ddb7b1ad1251d6d20b7544d03ff8923ab28"
        ],
        [
            "move=> solG sKG; have [H hallH transH] := Hall_exists_subJ pi solG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by case/transH=> // x Gx sKHx; exists (H :^ x)%G; rewrite ?pHallJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Hall_subJ pi (G H K : {group gT}) : solvable G -> pi.-Hall(G) H -> K \\subset G -> pi.-group K -> exists2 x, x \\in G & K \\subset H :^ x.",
            "VernacStartTheoremProof",
            "c1b3e3a9627514af245bc6c301b694009f8ca72a"
        ],
        [
            "move=> solG HallH sKG piK; have [M HallM sKM]:= Hall_superset solG sKG piK.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [x Gx defM] := Hall_trans solG HallM HallH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists x; rewrite // -defM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Hall_Jsub pi (G H K : {group gT}) : solvable G -> pi.-Hall(G) H -> K \\subset G -> pi.-group K -> exists2 x, x \\in G & K :^ x \\subset H.",
            "VernacStartTheoremProof",
            "db13adc975d4791400be4346206d1017885c5962"
        ],
        [
            "move=> solG HallH sKG piK; have [x Gx sKHx] := Hall_subJ solG HallH sKG piK.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by exists x^-1; rewrite ?groupV // sub_conjgV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Hall_Frattini_arg pi (G K H : {group gT}) : solvable K -> K <| G -> pi.-Hall(K) H -> K * 'N_G(H) = G.",
            "VernacStartTheoremProof",
            "dcd9d60deaa3bdabc5c9a176460a0c8b91dbed2e"
        ],
        [
            "move=> solK /andP[sKG nKG] hallH.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have sHG: H \\subset G by apply: subset_trans sKG; case/andP: hallH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite setIC group_modl //; apply/setIidPr/subsetP=> x Gx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "pose H1 := (H :^ x^-1)%G.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have hallH1: pi.-Hall(K) H1 by rewrite pHallJnorm // groupV (subsetP nKG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (Hall_trans solK hallH hallH1) => y Ky defH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -(mulKVg y x) mem_mulg //; apply/normP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite conjsgM {1}defH conjsgK conjsgKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End HallCorollaries.",
            "VernacEndSegment",
            "0338077c009386bebf02ffa422cec7d4834493d4"
        ],
        [
            "Section InternalAction.",
            "VernacBeginSection",
            "15825b4320587b45bbb1c6a5a1e2b6e8da0ea8dd"
        ],
        [
            "Variables (pi : nat_pred) (gT : finGroupType).",
            "VernacAssumption",
            "560b0d5aab680ae55181ba1a64a535ae6ed5c810"
        ],
        [
            "Implicit Types G H K A X : {group gT}.",
            "VernacReserve",
            "10c5ba199e1e1e415449919629940cc2402b71b3"
        ],
        [
            "Lemma coprime_norm_cent A G : A \\subset 'N(G) -> coprime #|G| #|A| -> 'N_G(A) = 'C_G(A).",
            "VernacStartTheoremProof",
            "d6ed7bddef5cd169d801cf314151f1d1cc6f47c6"
        ],
        [
            "move=> nGA coGA; apply/eqP; rewrite eqEsubset andbC setIS ?cent_sub //=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite subsetI subsetIl /= (sameP commG1P trivgP) -(coprime_TIg coGA).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite subsetI commg_subr subsetIr andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: nGA; rewrite -commg_subl; apply: subset_trans.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite commSg ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition coprime_Hall_exists A G : A \\subset 'N(G) -> coprime #|G| #|A| -> solvable G -> exists2 H : {group gT}, pi.-Hall(G) H & A \\subset 'N(H).",
            "VernacStartTheoremProof",
            "1e72cecd19972984896f465801131abc5a9a448b"
        ],
        [
            "move=> nGA coGA solG; have [H hallH] := Hall_exists pi solG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have sG_AG: G \\subset A <*> G by rewrite joing_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nG_AG: A <*> G \\subset 'N(G) by rewrite join_subG nGA normG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose N := 'N_(A <*> G)(H)%G.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have nGN: N \\subset 'N(G) by rewrite subIset ?nG_AG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nGN_N: G :&: N <| N by rewrite /(_ <| N) subsetIr normsI ?normG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have NG_AG: G * N = A <*> G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: Hall_Frattini_arg hallH => //; apply/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have iGN_A: #|N| %/ #|G :&: N| = #|A|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite setIC divgI -card_quotient // -quotientMidl NG_AG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite card_quotient -?divgS //= norm_joinEl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite coprime_cardMg 1?coprime_sym // mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have hallGN: Hall N (G :&: N).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /Hall -divgS subsetIr //= iGN_A (coprimeSg _ coGA) ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/splitsP: {hallGN nGN_N}(SchurZassenhaus_split hallGN nGN_N) => B.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/complP=> trBGN defN.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have{trBGN iGN_A} oBA: #|B| = #|A|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -iGN_A -{1}defN (TI_cardMg trBGN) mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sBN: B \\subset N by rewrite -defN mulG_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (SchurZassenhaus_trans_sol solG nGA _ coGA oBA) => [|x Gx defB].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite -(normC nGA) -norm_joinEl // -NG_AG -(mul1g B) mulgSS ?sub1G.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (H :^ x^-1)%G; first by rewrite pHallJ ?groupV.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/subsetP=> y Ay; have: y ^ x \\in B by rewrite defB memJ_conjg.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "move/(subsetP sBN)=> /setIP[_ /normP nHyx].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply/normP; rewrite -conjsgM conjgCV invgK conjsgM nHyx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition coprime_Hall_trans A G H1 H2 : A \\subset 'N(G) -> coprime #|G| #|A| -> solvable G -> pi.-Hall(G) H1 -> A \\subset 'N(H1) -> pi.-Hall(G) H2 -> A \\subset 'N(H2) -> exists2 x, x \\in 'C_G(A) & H1 :=: H2 :^ x.",
            "VernacStartTheoremProof",
            "5c65b03c8578da6d0294a15dc0285890f24a4060"
        ],
        [
            "move: H1 => H nGA coGA solG hallH nHA hallH2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have{H2 hallH2} [x Gx -> nH1xA] := Hall_trans solG hallH2 hallH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sG_AG: G \\subset A <*> G by rewrite -{1}genGid genS ?subsetUr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nG_AG: A <*> G \\subset 'N(G) by rewrite gen_subG subUset nGA normG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose N := 'N_(A <*> G)(H)%G.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have nGN: N \\subset 'N(G) by rewrite subIset ?nG_AG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nGN_N: G :&: N <| N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/normalP; rewrite subsetIr; split=> // y Ny.",
            "VernacExtend",
            "877072eca2b60ab32889d658e076eb026578eeca"
        ],
        [
            "by rewrite conjIg (normP _) // (subsetP nGN, conjGid).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have NG_AG : G * N = A <*> G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: Hall_Frattini_arg hallH => //; apply/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have iGN_A: #|N : G :&: N| = #|A|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -card_quotient //; last by case/andP: nGN_N.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (card_isog (second_isog nGN)) /= -quotientMidr (normC nGN) NG_AG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite card_quotient // -divgS //= joingC norm_joinEr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite coprime_cardMg // mulnC mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have solGN: solvable (G :&: N) by apply: solvableS solG; apply: subsetIl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oAxA: #|A :^ x^-1| = #|A| by apply: cardJg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sAN: A \\subset N by rewrite subsetI -{1}genGid genS // subsetUl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nGNA: A \\subset 'N(G :&: N).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/normsP=> y ?; rewrite conjIg (normsP nGA) ?(conjGid, subsetP sAN).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have coGNA: coprime #|G :&: N| #|A| := coprimeSg (subsetIl _ _) coGA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (SchurZassenhaus_trans_sol solGN nGNA _ coGNA oAxA) => [|y GNy defAx].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have ->: (G :&: N) * A = N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEcard -{2}(mulGid N) mulgSS ?subsetIr //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite coprime_cardMg // -iGN_A Lagrange ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite sub_conjgV conjIg -normJ subsetI conjGid ?joing_subl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mem_gen // inE Gx orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/setIP: GNy => Gy; case/setIP=> _; move/normP=> nHy.",
            "VernacExtend",
            "9dda2bdd158284551955535b055c222b3c4fedd1"
        ],
        [
            "exists (y * x)^-1.",
            "VernacExtend",
            "129a765607e9dbd12aae4eb31f856e323ea19ce8"
        ],
        [
            "rewrite -coprime_norm_cent // groupV inE groupM //=; apply/normP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite conjsgM -defAx conjsgKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: val_inj; rewrite /= -{2}nHy -(conjsgM _ y) conjsgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_conj_cent A G x : x \\in 'C(A) -> (A \\subset 'N(G :^ x)) = (A \\subset 'N(G)).",
            "VernacStartTheoremProof",
            "aba01e0c1b3c952b4e2a654702eb677697955b78"
        ],
        [
            "by move=> cAx; rewrite norm_conj_norm ?(subsetP (cent_sub A)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma strongest_coprime_quotient_cent A G H : let R := H :&: [~: G, A] in A \\subset 'N(H) -> R \\subset G -> coprime #|R| #|A| -> solvable R || solvable A -> 'C_G(A) / H = 'C_(G / H)(A / H).",
            "VernacStartTheoremProof",
            "45654447cd7cb12989d367c91d9167346798f195"
        ],
        [
            "move=> R nHA sRG coRA solRA.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have nRA: A \\subset 'N(R) by rewrite normsI ?commg_normr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset subsetI morphimS ?subsetIl //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (subset_trans _ (morphim_cent _ _)) ?morphimS ?subsetIr //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> _ /setIP[/morphimP[x Nx Gx ->] cAHx].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have{cAHx} cAxR y: y \\in A -> [~ x, y] \\in R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Ay; have Ny: y \\in 'N(H) by apply: subsetP Ay.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite inE mem_commg // andbT coset_idr ?groupR // morphR //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/eqP; apply/commgP; apply: (centP cAHx); rewrite mem_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have AxRA: A :^ x \\subset R * A.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/subsetP=> _ /imsetP[y Ay ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -normC // -(mulKVg y (y ^ x)) -commgEl mem_mulg //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -groupV invg_comm cAxR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [y Ry def_Ax]: exists2 y, y \\in R & A :^ x = A :^ y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oAx: #|A :^ x| = #|A| by rewrite cardJg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [solR | solA] := orP solRA; first exact: SchurZassenhaus_trans_sol.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: SchurZassenhaus_trans_actsol; rewrite // joingC norm_joinEr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -imset_coset; apply/imsetP; exists (x * y^-1); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite conjgCV mkerl // ker_coset memJ_norm groupV; case/setIP: Ry.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /= inE groupMl // ?(groupV, subsetP sRG) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/centP=> z Az; apply/commgP/eqP/set1P.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite -[[set 1]](coprime_TIg coRA) inE {1}commgEl commgEr /= -/R.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite invMg -mulgA invgK groupMl // conjMg mulgA -commgEl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite groupMl ?cAxR // memJ_norm ?(groupV, subsetP nRA) // Ry /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite groupMr // conjVg groupV conjgM -mem_conjg -def_Ax memJ_conjg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_norm_quotient_cent A G H : A \\subset 'N(G) -> A \\subset 'N(H) -> coprime #|H| #|A| -> solvable H -> 'C_G(A) / H = 'C_(G / H)(A / H).",
            "VernacStartTheoremProof",
            "f2f470f0ee2e0aecf40c7cc1a65ecb6e0587284e"
        ],
        [
            "move=> nGA nHA coHA solH; have sRH := subsetIl H [~: G, A].",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite strongest_coprime_quotient_cent ?(coprimeSg sRH) 1?(solvableS sRH) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subIset // commg_subl nGA orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_cent_mulG A G H : A \\subset 'N(G) -> A \\subset 'N(H) -> G \\subset 'N(H) -> coprime #|H| #|A| -> solvable H -> 'C_(H * G)(A) = 'C_H(A) * 'C_G(A).",
            "VernacStartTheoremProof",
            "b74cef4f1175f7efaf8630f2f024f7917eb0917d"
        ],
        [
            "move=> nHA nGA nHG coHA solH; rewrite -norm_joinEr //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have nsHG: H <| H <*> G by rewrite /normal joing_subl join_subG normG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -{2}(setIidPr (normal_sub nsHG)) setIAC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite group_modr ?setSI ?joing_subr //=; symmetry; apply/setIidPl.",
            "VernacExtend",
            "c2abf1dd8c611d7694c1d5d7496e679044a36704"
        ],
        [
            "rewrite -quotientSK ?subIset 1?normal_norm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !coprime_norm_quotient_cent ?normsY //= norm_joinEr ?quotientMidl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quotient_TI_subcent K G H : G \\subset 'N(K) -> G \\subset 'N(H) -> K :&: H = 1 -> 'C_K(G) / H = 'C_(K / H)(G / H).",
            "VernacStartTheoremProof",
            "4e265971927b14950645c44d84a32b18419ec5d3"
        ],
        [
            "move=> nGK nGH tiKH.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have tiHR: H :&: [~: K, G] = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/trivgP; rewrite /= setIC -tiKH setSI ?commg_subl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: strongest_coprime_quotient_cent; rewrite ?tiHR ?sub1G ?solvable1 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite cards1 coprime1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition coprime_quotient_cent A G H : H \\subset G -> A \\subset 'N(H) -> coprime #|G| #|A| -> solvable G -> 'C_G(A) / H = 'C_(G / H)(A / H).",
            "VernacStartTheoremProof",
            "f3d6123f61a1be61ca55497db4ec629d12c6d9c0"
        ],
        [
            "move=> sHG nHA coGA solG.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have sRG: H :&: [~: G, A] \\subset G by rewrite subIset ?sHG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite strongest_coprime_quotient_cent ?(coprimeSg sRG) 1?(solvableS sRG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Proposition coprime_comm_pcore A G K : A \\subset 'N(G) -> coprime #|G| #|A| -> solvable G -> pi^'.-Hall(G) K -> K \\subset 'C_G(A) -> [~: G, A] \\subset 'O_pi(G).",
            "VernacStartTheoremProof",
            "45332c8ab538b65f8857b9c0e3bb6451138a3b47"
        ],
        [
            "move=> nGA coGA solG hallK cKA.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (coprime_Hall_exists nGA) => // H hallH nHA.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have sHG: H \\subset G by case/andP: hallH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sKG: K \\subset G by case/andP: hallK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have coKH: coprime #|K| #|H|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/and3P: hallH=> _ piH _; case/and3P: hallK => _ pi'K _.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite coprime_sym (pnat_coprime piH pi'K).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defG: G :=: K * H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEcard coprime_cardMg //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -{1}(mulGid G) mulgSS //= (card_Hall hallH) (card_Hall hallK).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulnC partnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sGA_H: [~: G, A] \\subset H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite gen_subG defG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> _ /imset2P[_ a /imset2P[x y Kx Hy ->] Aa ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite commMgJ (([~ x, a] =P 1) _) ?(conj1g, mul1g).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite groupMl ?groupV // memJ_norm ?(subsetP nHA).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite subsetI sKG in cKA; apply/commgP/(centsP cKA).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: pcore_max; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /(_ <| G) /= commg_norml commGC commg_subr nGA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/and3P: hallH => _ piH _; apply: pgroupS piH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InternalAction.",
            "VernacEndSegment",
            "1daf1744970e82963aca600e92362c011ed70685"
        ],
        [
            "Proposition coprime_Hall_subset pi (gT : finGroupType) (A G X : {group gT}) : A \\subset 'N(G) -> coprime #|G| #|A| -> solvable G -> X \\subset G -> pi.-group X -> A \\subset 'N(X) -> exists H : {group gT}, [/\\ pi.-Hall(G) H, A \\subset 'N(H) & X \\subset H].",
            "VernacStartTheoremProof",
            "54d6195b5f871cabbf9d77a6833a28ab46628f4a"
        ],
        [
            "move: {2}_.+1 (ltnSn #|G|) => n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: n => // n IHn in gT A G X * => leGn nGA coGA solG sXG piX nXA.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [G1 | ntG] := eqsVneq G 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (coprime_Hall_exists pi nGA) => // H hallH nHA.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists H; split; rewrite // (subset_trans sXG) // G1 sub1G.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sG_AG: G \\subset A <*> G by rewrite joing_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sA_AG: A \\subset A <*> G by rewrite joing_subl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nG_AG: A <*> G \\subset 'N(G) by rewrite join_subG nGA normG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nsG_AG: G <| A <*> G by apply/andP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (solvable_norm_abelem solG nsG_AG) => // M [sMG nsMAG ntM].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have{nsMAG} [nMA nMG]: A \\subset 'N(M) /\\ G \\subset 'N(M).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/andP; rewrite -join_subG normal_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nMX: X \\subset 'N(M) by apply: subset_trans nMG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/is_abelemP=> p pr_p; case/and3P=> pM cMM _.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have: #|G / M| < n by rewrite (leq_trans (ltn_quotient _ _)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/(IHn _ (A / M)%G _ (X / M)%G); rewrite !(quotient_norms, quotientS) //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite !(coprime_morph, quotient_sol, morphim_pgroup) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=> //= Hq []; case/and3P=> sHGq piHq pi'Hq' nHAq sXHq.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "case/inv_quotientS: (sHGq) => [|HM defHM sMHM sHMG]; first exact/andP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have nMHM := subset_trans sHMG nMG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{sXHq} sXHM: X \\subset HM by rewrite -(quotientSGK nMX) -?defHM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{pi'Hq' sHGq} pi'HM': pi^'.-nat #|G : HM|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: pi'Hq'; rewrite -!divgS // defHM !card_quotient //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -(divnMl (cardG_gt0 M)) !Lagrange.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{nHAq} nHMA: A \\subset 'N(HM).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(quotientSGK nMA) ?normsG ?quotient_normG -?defHM //; apply/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/orP: (orbN (p \\in pi)) => pi_p.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists HM; split=> //; apply/and3P; split; rewrite /pgroup //.",
            "VernacExtend",
            "88b86cf3ddea1c02d00477f7ffd77e7159e25b65"
        ],
        [
            "by rewrite -(Lagrange sMHM) pnat_mul -card_quotient // -defHM (pi_pnat pM).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (ltnP #|HM| #|G|) => [ltHG | leGHM {n IHn leGn}].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (IHn _ A HM X (leq_trans ltHG leGn)) => // [||H [hallH nHA sXH]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: coprimeSg coGA.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: solvableS solG.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "case/and3P: hallH => sHHM piH pi'H'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have sHG: H \\subset G by apply: subset_trans sHMG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists H; split=> //; apply/and3P; split=> //.",
            "VernacExtend",
            "7853c822aa832f4c6a43528d2b8fb834534812cc"
        ],
        [
            "rewrite -divgS // -(Lagrange sHMG) -(Lagrange sHHM) -mulnA mulKn //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite pnat_mul pi'H'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{leGHM nHMA sHMG sMHM sXHM pi'HM'} eqHMG: HM = G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/eqP; rewrite -val_eqE eqEcard sHMG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have pi'M: pi^'.-group M by rewrite /pgroup (pi_pnat pM).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{HM Hq nMHM defHM eqHMG piHq} hallM: pi^'.-Hall(G) M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/and3P; split; rewrite // /pgroup pnatNK.",
            "VernacExtend",
            "1a60a3dd20ba8bdb4f34ca3532e9ebe70ebccc2e"
        ],
        [
            "by rewrite -card_quotient // -eqHMG -defHM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (coprime_Hall_exists pi nGA) => // H hallH nHA.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "pose XM := (X <*> M)%G; pose Y := (H :&: XM)%G.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "case/and3P: (hallH) => sHG piH _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have sXXM: X \\subset XM by rewrite joing_subl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have co_pi_M (B : {group gT}): pi.-group B -> coprime #|B| #|M|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> piB; rewrite (pnat_coprime piB).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have hallX: pi.-Hall(XM) X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /pHall piX sXXM -divgS //= norm_joinEl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite coprime_cardMg ?co_pi_M // mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sXMG: XM \\subset G by rewrite join_subG sXG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have hallY: pi.-Hall(XM) Y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sYXM: Y \\subset XM by rewrite subsetIr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have piY: pi.-group Y by apply: pgroupS piH; apply: subsetIl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /pHall sYXM piY -divgS // -(_ : Y * M = XM).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite coprime_cardMg ?co_pi_M // mulKn //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /= setIC group_modr ?joing_subr //=; apply/setIidPl.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite ((H * M =P G) _) // eqEcard mul_subG //= coprime_cardMg ?co_pi_M //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (card_Hall hallM) (card_Hall hallH) partnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nXMA: A \\subset 'N(XM) by rewrite normsY.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= coprime_Hall_trans nXMA _ _ hallX nXA hallY.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !(coprimeSg sXMG, solvableS sXMG, normsI) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=> // x /setIP[XMx cAx] ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (H :^ x)%G; split; first by rewrite pHallJ ?(subsetP sXMG).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite norm_conj_cent.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite conjSg subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ExternalAction.",
            "VernacBeginSection",
            "eb433a7dc46d4a6c46bf6ea72462b936800c82a2"
        ],
        [
            "Variables (pi : nat_pred) (aT gT : finGroupType).",
            "VernacAssumption",
            "dc288acbfee597655542aaf10199ceb80c5e4e88"
        ],
        [
            "Variables (A : {group aT}) (G : {group gT}) (to : groupAction A G).",
            "VernacAssumption",
            "6664a7a11dfe0492a1d43e47ddecede17691b150"
        ],
        [
            "Section FullExtension.",
            "VernacBeginSection",
            "4aa7238e398e431d131a37d465e350155d50081f"
        ],
        [
            "Local Notation inA := (sdpair2 to).",
            "VernacSyntacticDefinition",
            "faa5e23f9d25a81675b4c5fb76dbabf56bd0819a"
        ],
        [
            "Local Notation inG := (sdpair1 to).",
            "VernacSyntacticDefinition",
            "5402e6fb0965161af079839d1cb87712679e00de"
        ],
        [
            "Local Notation A' := (inA @* gval A).",
            "VernacSyntacticDefinition",
            "00223a8abad2fd9c7eae7e3f914acafdfd38a09c"
        ],
        [
            "Local Notation G' := (inG @* gval G).",
            "VernacSyntacticDefinition",
            "11bdeb6e0e429967798723a7766fbe8d95bb1342"
        ],
        [
            "Let injG : 'injm inG := injm_sdpair1 _.",
            "VernacDefinition",
            "6b8cb48bc36272ac8c81755aa0fc194c5e7dfca6"
        ],
        [
            "Let injA : 'injm inA := injm_sdpair2 _.",
            "VernacDefinition",
            "93c54d517413b06f020dd0ca595f7f90ef0f5a81"
        ],
        [
            "Hypotheses (coGA : coprime #|G| #|A|) (solG : solvable G).",
            "VernacAssumption",
            "e019589ab4151384cf41901ba537a18795c38b83"
        ],
        [
            "Lemma external_action_im_coprime : coprime #|G'| #|A'|.",
            "VernacStartTheoremProof",
            "66f9b45c70b9865d1646287dcbb4f91fbc41f3a9"
        ],
        [
            "by rewrite !card_injm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let coGA' := external_action_im_coprime.",
            "VernacDefinition",
            "35bcfd9198bd0bb8ca614cd65e650cf26812e928"
        ],
        [
            "Let solG' : solvable G' := morphim_sol _ solG.",
            "VernacDefinition",
            "1fbcd85059edeaf13b01cedb61695b6612561dd7"
        ],
        [
            "Let nGA' := im_sdpair_norm to.",
            "VernacDefinition",
            "99d38ad1f7bb31910964d7bc83e50808eafafabb"
        ],
        [
            "Lemma ext_coprime_Hall_exists : exists2 H : {group gT}, pi.-Hall(G) H & [acts A, on H | to].",
            "VernacStartTheoremProof",
            "c126d3b7cded24173e352d6a293fd9878cbeea15"
        ],
        [
            "have [H' hallH' nHA'] := coprime_Hall_exists pi nGA' coGA' solG'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sHG' := pHall_sub hallH'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (inG @*^-1 H')%G => /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -(morphim_invmE injG) -{1}(im_invm injG) morphim_pHall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite actsEsd ?morphpreK // subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ext_coprime_Hall_trans (H1 H2 : {group gT}) : pi.-Hall(G) H1 -> [acts A, on H1 | to] -> pi.-Hall(G) H2 -> [acts A, on H2 | to] -> exists2 x, x \\in 'C_(G | to)(A) & H1 :=: H2 :^ x.",
            "VernacStartTheoremProof",
            "6f444775e474c911bd372623b182013f03ed4c03"
        ],
        [
            "move=> hallH1 nH1A hallH2 nH2A.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have sH1G := pHall_sub hallH1; have sH2G := pHall_sub hallH2.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite !actsEsd // in nH1A nH2A.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have hallH1': pi.-Hall(G') (inG @* H1) by rewrite morphim_pHall.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have hallH2': pi.-Hall(G') (inG @* H2) by rewrite morphim_pHall.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [x'] := coprime_Hall_trans nGA' coGA' solG' hallH1' nH1A hallH2' nH2A.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/setIP=> /= Gx' cAx' /eqP defH1; pose x := invm injG x'.",
            "VernacExtend",
            "61f7313c68f88d92a678d74fe9c99999257a468e"
        ],
        [
            "have Gx: x \\in G by rewrite -(im_invm injG) mem_morphim.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_x': x' = inG x by rewrite invmK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists x; first by rewrite inE Gx gacentEsd mem_morphpre /= -?def_x'.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; move: defH1; rewrite def_x' /= -morphimJ //=.",
            "VernacExtend",
            "892743169f9b7a8d1078a131ab1583767aafbf69"
        ],
        [
            "by rewrite !eqEsubset !injmSK // conj_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ext_norm_conj_cent (H : {group gT}) x : H \\subset G -> x \\in 'C_(G | to)(A) -> [acts A, on H :^ x | to] = [acts A, on H | to].",
            "VernacStartTheoremProof",
            "7aaea2477382c512a21af80e298bbab1c29f8874"
        ],
        [
            "move=> sHG /setIP[Gx].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite gacentEsd !actsEsd ?conj_subG ?morphimJ // 2!inE Gx /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: norm_conj_cent.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ext_coprime_Hall_subset (X : {group gT}) : X \\subset G -> pi.-group X -> [acts A, on X | to] -> exists H : {group gT}, [/\\ pi.-Hall(G) H, [acts A, on H | to] & X \\subset H].",
            "VernacStartTheoremProof",
            "651219f7c06146748336b66a7ea6dfacf23ffabd"
        ],
        [
            "move=> sXG piX; rewrite actsEsd // => nXA'.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case: (coprime_Hall_subset nGA' coGA' solG' _ (morphim_pgroup _ piX) nXA').",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exact: morphimS.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move=> H' /= [piH' nHA' sXH']; have sHG' := pHall_sub piH'.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "exists (inG @*^-1 H')%G; rewrite actsEsd ?subsetIl ?morphpreK // nHA'.",
            "VernacExtend",
            "17aa87ec75d1c43e01a0ddebde698418ae5c917b"
        ],
        [
            "rewrite -sub_morphim_pre //= sXH'; split=> //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by rewrite -(morphim_invmE injG) -{1}(im_invm injG) morphim_pHall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FullExtension.",
            "VernacEndSegment",
            "7f08c0e8314612618ed6f0b39e04f3d62fe34c77"
        ],
        [
            "Lemma ext_coprime_quotient_cent (H : {group gT}) : H \\subset G -> [acts A, on H | to] -> coprime #|H| #|A| -> solvable H -> 'C_(|to)(A) / H = 'C_(|to / H)(A).",
            "VernacStartTheoremProof",
            "bd759facaa29216ec4954862a30a0fbd9e66c7dd"
        ],
        [
            "move=> sHG nHA coHA solH; pose N := 'N_G(H).",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have nsHN: H <| N by rewrite normal_subnorm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [sHN nHn] := andP nsHN.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sNG: N \\subset G by apply: subsetIl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nNA: {acts A, on group N | to}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split; rewrite // actsEsd // injm_subnorm ?injm_sdpair1 //=.",
            "VernacExtend",
            "23414b1aa23418a1670d952f6b338db06304aa88"
        ],
        [
            "by rewrite normsI ?norms_norm ?im_sdpair_norm -?actsEsd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -!(gacentIdom _ A) -quotientInorm -gacentIim setIAC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(gacent_actby nNA) gacentEsd -morphpreIim /= -/N.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have:= (injm_sdpair1 <[nNA]>, injm_sdpair2 <[nNA]>).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "set inG := sdpair1 _; set inA := sdpair2 _ => [[injG injA]].",
            "VernacExtend",
            "ced270260aea2dd3ab523a646806c84962140531"
        ],
        [
            "set G' := inG @* N; set A' := inA @* A; pose H' := inG @* H.",
            "VernacExtend",
            "a1c8e8beaa6287bdfa0be3460af1feb609f7237a"
        ],
        [
            "have defN: 'N(H | to) = A by apply/eqP; rewrite eqEsubset subsetIl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_Dq: qact_dom to H = A by rewrite qact_domE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sAq: A \\subset qact_dom to H by rewrite def_Dq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {2}def_Dq -(gacent_ract _ sAq); set to_q := (_ \\ _)%gact.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "have:= And3 (sdprod_sdpair to_q) (injm_sdpair1 to_q) (injm_sdpair2 to_q).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite gacentEsd; set inAq := sdpair2 _; set inGq := sdpair1 _ => /=.",
            "VernacExtend",
            "ee6f95d9a37eb9fd26e9c84c7cb80dd1aaecc234"
        ],
        [
            "set Gq := inGq @* _; set Aq := inAq @* _ => [[q_d iGq iAq]].",
            "VernacExtend",
            "ced270260aea2dd3ab523a646806c84962140531"
        ],
        [
            "have nH': 'N(H') = setT.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite -subTset -im_sdpair mulG_subG morphim_norms //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -actsEsd // acts_actby subxx /= (setIidPr sHN).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: 'dom (coset H' \\o inA \\o invm iAq) = Aq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ['dom _]morphpre_invm /= nH' morphpreT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/domP=> qA [def_qA ker_qA _ im_qA].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have{coHA} coHA': coprime #|H'| #|A'| by rewrite !card_injm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{ker_qA} injAq: 'injm qA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {}ker_qA !ker_comp ker_coset morphpre_invm -morphpreIim /= setIC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite coprime_TIg // -kerE (trivgP injA) morphim1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{im_qA} im_Aq : qA @* Aq = A' / H'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite {}im_qA !morphim_comp im_invm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: 'dom (quotm (sdpair1_morphism <[nNA]>) nsHN \\o invm iGq) = Gq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ['dom _]morphpre_invm /= quotientInorm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/domP=> qG [def_qG ker_qG _ im_qG].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have{ker_qG} injGq: 'injm qG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {}ker_qG ker_comp ker_quotm morphpre_invm (trivgP injG).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite quotient1 morphim1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have im_Gq: qG @* Gq = G' / H'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {}im_qG morphim_comp im_invm morphim_quotm //= -/inG -/H'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -morphimIdom setIAC setIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{def_qA def_qG} q_J : {in Gq & Aq, morph_act 'J 'J qG qA}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> x' a'; case/morphimP=> Hx; case/morphimP=> x nHx Gx -> GHx ->{Hx x'}.",
            "VernacExtend",
            "fd777b019349da348ceeb72ef62c9f8d707a4c0b"
        ],
        [
            "case/morphimP=> a _ Aa ->{a'} /=; rewrite -/inAq -/inGq.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite !{}def_qG {}def_qA /= !invmE // -sdpair_act //= -/inG -/inA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have Nx: x \\in N by rewrite inE Gx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Nxa: to x a \\in N by case: (nNA); move/acts_act->.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [Gxa nHxa] := setIP Nxa.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite invmE qactE ?quotmE ?mem_morphim ?def_Dq //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -morphJ /= ?nH' ?inE // -sdpair_act //= actbyE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose q := sdprodm q_d q_J.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have{injAq injGq} injq: 'injm q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite injm_sdprodm injAq injGq /= {}im_Aq {}im_Gq -/Aq .",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -quotientGI ?im_sdpair_TI ?morphimS //= quotient1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[inGq @*^-1 _]morphpreIim -/Gq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have sC'G: inG @*^-1 'C_G'(A') \\subset G by rewrite !subIset ?subxx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -[_ / _](injmK iGq) ?quotientS //= -/inGq; congr (_ @*^-1 _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "apply: (injm_morphim_inj injq); rewrite 1?injm_subcent ?subsetT //= -/q.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite 2?morphim_sdprodml ?morphimS //= im_Gq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite morphim_sdprodmr ?morphimS //= im_Aq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {}im_qG morphim_comp morphim_invm ?morphimS //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite morphim_quotm morphpreK ?subsetIl //= -/H'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite coprime_norm_quotient_cent ?im_sdpair_norm ?nH' ?subsetT //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: morphim_sol.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ExternalAction.",
            "VernacEndSegment",
            "6db7702657a57eacc4061afc410e7c3c530055dc"
        ],
        [
            "Section SylowSolvableAct.",
            "VernacBeginSection",
            "fe0793000d3afbea3effa81d550237ee8986579e"
        ],
        [
            "Variables (gT : finGroupType) (p : nat).",
            "VernacAssumption",
            "41c6497fac0f63820c619649fff00932b3ab9e82"
        ],
        [
            "Implicit Types A B G X : {group gT}.",
            "VernacReserve",
            "fe0bc51fcc8a76ad2a0a144ffda6e3d0a409a751"
        ],
        [
            "Lemma sol_coprime_Sylow_exists A G : solvable A -> A \\subset 'N(G) -> coprime #|G| #|A| -> exists2 P : {group gT}, p.-Sylow(G) P & A \\subset 'N(P).",
            "VernacStartTheoremProof",
            "91a06398b123b25a18794b5bbf0fee114a4a79ac"
        ],
        [
            "move=> solA nGA coGA; pose AG := A <*> G.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have nsG_AG: G <| AG by rewrite /normal joing_subr join_subG nGA normG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [sG_AG nG_AG]:= andP nsG_AG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [P sylP] := Sylow_exists p G; pose N := 'N_AG(P); pose NG := G :&: N.",
            "VernacExtend",
            "b3e9b70f7c7c61b80869193a9810a547d0acc233"
        ],
        [
            "have nGN: N \\subset 'N(G) by rewrite subIset ?nG_AG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sNG_G: NG \\subset G := subsetIl G N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nsNG_N: NG <| N by rewrite /normal subsetIr normsI ?normG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defAG: G * N = AG := Frattini_arg nsG_AG sylP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oA : #|A| = #|N| %/ #|NG|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /NG setIC divgI -card_quotient // -quotientMidl defAG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite card_quotient -?divgS //= norm_joinEl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite coprime_cardMg 1?coprime_sym // mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: [splits N, over NG].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite SchurZassenhaus_split // /Hall -divgS subsetIr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -oA (coprimeSg sNG_G).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/splitsP=> B; case/complP=> tNG_B defN.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have [nPB]: B \\subset 'N(P) /\\ B \\subset AG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/andP; rewrite andbC -subsetI -/N -defN mulG_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/SchurZassenhaus_trans_actsol => // [|x Gx defB].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite oA -defN TI_cardMg // mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (P :^ x^-1)%G; first by rewrite pHallJ ?groupV.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite normJ -sub_conjg -defB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sol_coprime_Sylow_trans A G : solvable A -> A \\subset 'N(G) -> coprime #|G| #|A| -> [transitive 'C_G(A), on [set P in 'Syl_p(G) | A \\subset 'N(P)] | 'JG].",
            "VernacStartTheoremProof",
            "21e537d56c6ec7eecb94105762dd3ff60c700bea"
        ],
        [
            "move=> solA nGA coGA; pose AG := A <*> G; set FpA := finset _.",
            "VernacExtend",
            "4fd0a752b6fd2a7bd5ee7c2c05bfb680a639c8cf"
        ],
        [
            "have nG_AG: AG \\subset 'N(G) by rewrite join_subG nGA normG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [P sylP nPA] := sol_coprime_Sylow_exists solA nGA coGA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose N := 'N_AG(P); have sAN: A \\subset N by rewrite subsetI joing_subl.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have trNPA: A :^: AG ::&: N = A :^: N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose NG := 'N_G(P); have sNG_G : NG \\subset G := subsetIl _ _.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have nNGA: A \\subset 'N(NG) by rewrite normsI ?norms_norm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP=> Ax; apply/setIdP/imsetP=> [[]|[x Nx ->{Ax}]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite conj_subG //; case/setIP: Nx => AGx; rewrite mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ->: N = A <*> NG by rewrite /N /AG !norm_joinEl // -group_modl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have coNG_A := coprimeSg sNG_G coGA; case/imsetP=> x AGx ->{Ax}.",
            "VernacExtend",
            "c6d2532ed4a224baf57de7930305ff767fdbd834"
        ],
        [
            "case/SchurZassenhaus_trans_actsol; rewrite ?cardJg // => y Ny /= ->.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by exists y; rewrite // mem_gen 1?inE ?Ny ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{trNPA}: [transitive 'N_AG(A), on FpA | 'JG].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ->: FpA = 'Fix_('Syl_p(G) | 'JG)(A).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/setP=> Q; rewrite 4!inE afixJG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have SylP : P \\in 'Syl_p(G) by rewrite inE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/(trans_subnorm_fixP _ SylP); rewrite ?astab1JG //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (atrans_supgroup _ (Syl_trans _ _)) ?joing_subr //= -/AG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/actsP=> x /= AGx Q /=; rewrite !inE -{1}(normsP nG_AG x) ?pHallJ2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}/AG norm_joinEl // -group_modl ?normG ?coprime_norm_cent //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -cent_joinEr ?subsetIr // => trC_FpA.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have FpA_P: P \\in FpA by rewrite !inE sylP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/(subgroup_transitiveP FpA_P _ trC_FpA); rewrite ?joing_subr //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite astab1JG cent_joinEr ?subsetIr // -group_modl // -mulgA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by congr (_ * _); rewrite mulSGid ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sol_coprime_Sylow_subset A G X : A \\subset 'N(G) -> coprime #|G| #|A| -> solvable A -> X \\subset G -> p.-group X -> A \\subset 'N(X) -> exists P : {group gT}, [/\\ p.-Sylow(G) P, A \\subset 'N(P) & X \\subset P].",
            "VernacStartTheoremProof",
            "32b075a83e90799b27108a1b146d3c7a31123bc5"
        ],
        [
            "move=> nGA coGA solA sXG pX nXA.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "pose nAp (Q : {group gT}) := [&& p.-group Q, Q \\subset G & A \\subset 'N(Q)].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have: nAp X by apply/and3P.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/maxgroup_exists=> R; case/maxgroupP; case/and3P=> pR sRG nRA maxR sXR.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "have [P sylP sRP]:= Sylow_superset sRG pR.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices defP: P :=: R by exists P; rewrite sylP defP.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "case/and3P: sylP => sPG pP _; apply: (nilpotent_sub_norm (pgroup_nil pP)) => //.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "pose N := 'N_G(R); have{sPG} sPN_N: 'N_P(R) \\subset N by apply: setSI.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "apply: norm_sub_max_pgroup (pgroupS (subsetIl _ _) pP) sPN_N (subsetIr _ _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have nNA: A \\subset 'N(N) by rewrite normsI ?norms_norm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have coNA: coprime #|N| #|A| by apply: coprimeSg coGA; rewrite subsetIl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{solA coNA} [Q sylQ nQA] := sol_coprime_Sylow_exists solA nNA coNA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices defQ: Q :=: R by rewrite max_pgroup_Sylow -{2}defQ.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply: maxR; first by apply/and3P; case/and3P: sylQ; rewrite subsetI; case/andP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: normal_sub_max_pgroup (Hall_max sylQ) pR _; rewrite normal_subnorm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SylowSolvableAct.",
            "VernacEndSegment",
            "d52092ee6743a82aca362a40faa891a555c9adc5"
        ]
    ],
    "proofs": [
        {
            "name": "SchurZassenhaus_trans_sol",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "move: {2}_.+1 (ltnSn #|H|) => n; elim: n => // n IHn in gT H K K1 *.",
                        "VernacExtend",
                        "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS => leHn solH nHK; have [-> | ] := eqsVneq H 1.",
                        "VernacExtend",
                        "d2991b7607b6316c9d43d28c85f87ca601299ca6"
                    ]
                },
                {
                    "command": [
                        "rewrite mul1g => sK1K _ eqK1K; exists 1; first exact: set11.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite conjsg1 eqEcard sK1K eqK1K /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose G := (H <*> K)%G.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have defG: G :=: H * K by rewrite -normC // -norm_joinEl // joingC.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sHG: H \\subset G by apply: joing_subl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sKG: K \\subset G by apply: joing_subr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nsHG: H <| G by rewrite /(H <| G) sHG join_subG normG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/(solvable_norm_abelem solH nsHG)=> M [sMH nsMG ntM] /and3P[_ abelM _].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have [sMG nMG] := andP nsMG; rewrite -defG => sK1G coHK oK1K.",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "have nMsG (L : {set gT}): L \\subset G -> L \\subset 'N(M).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move/subset_trans->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [coKM coHMK]: coprime #|M| #|K| /\\ coprime #|H / M| #|K|.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/andP; rewrite -coprime_mull card_quotient ?nMsG ?Lagrange.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have oKM (K' : {group gT}): K' \\subset G -> #|K'| = #|K| -> #|K' / M| = #|K|.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> sK'G oK'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -quotientMidr -?norm_joinEl ?card_quotient ?nMsG //; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite gen_subG subUset sK'G.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -divgS /=; last by rewrite -gen_subG genS ?subsetUr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite norm_joinEl ?nMsG // coprime_cardMg ?mulnK // oK' coprime_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [xb]: exists2 xb, xb \\in H / M & K1 / M = (K / M) :^ xb.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: IHn; try by rewrite (quotient_sol, morphim_norms, oKM K) ?(oKM K1).",
                        "VernacExtend",
                        "04f36fb90226571591691114239c3303d9fa2968"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans leHn; rewrite ltn_quotient.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -morphimMl ?nMsG // -defG morphimS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/morphimP=> x nMx Hx ->{xb} eqK1Kx; pose K2 := (K :^ x)%G.",
                        "VernacExtend",
                        "61f7313c68f88d92a678d74fe9c99999257a468e"
                    ]
                },
                {
                    "command": [
                        "have{eqK1Kx} eqK12: K1 / M = K2 / M by rewrite quotientJ.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suff [y My ->]: exists2 y, y \\in M & K1 :=: K2 :^ y.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by exists (x * y); [rewrite groupMl // (subsetP sMH) | rewrite conjsgM].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nMK1: K1 \\subset 'N(M) by apply: nMsG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have defMK: M * K1 = M <*> K1 by rewrite -normC // -norm_joinEl // joingC.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sMKM: M \\subset M <*> K1 by rewrite joing_subl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nMKM: M <| M <*> K1 by rewrite normalYl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have trMK1: M :&: K1 = 1 by rewrite coprime_TIg ?oK1K.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have trMK2: M :&: K2 = 1 by rewrite coprime_TIg ?cardJg ?oK1K.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: (Gaschutz_transitive nMKM _ sMKM) => //=; last 2 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE trMK1 defMK !eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!(setIC M) trMK1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -divgS //= -defMK coprime_cardMg oK1K // mulKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite inE trMK2 eqxx eq_sym eqEcard /= -defMK andbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !coprime_cardMg ?cardJg ?oK1K ?leqnn //= mulGS -quotientSK -?eqK12.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hall_exists",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "by case/(Hall_exists_subJ pi) => H; exists H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hall_trans",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "move=> solG; have [H hallH transH] := Hall_exists_subJ pi solG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have conjH (K : {group gT}): pi.-Hall(G) K -> exists2 x, x \\in G & K = (H :^ x)%G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=> hallK; have [sKG piK _] := and3P hallK.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "case: (transH K sKG piK) => x Gx sKH; exists x => //.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite -val_eqE eqEcard sKH cardJg.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (card_Hall hallH) (card_Hall hallK) /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/conjH=> x1 Gx1 ->{H1}; case/conjH=> x2 Gx2 ->{H2}.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "exists (x2^-1 * x1); first by rewrite groupMl ?groupV.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: val_inj; rewrite /= conjsgM conjsgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hall_superset",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "move=> solG sKG; have [H hallH transH] := Hall_exists_subJ pi solG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by case/transH=> // x Gx sKHx; exists (H :^ x)%G; rewrite ?pHallJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hall_subJ",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "move=> solG HallH sKG piK; have [M HallM sKM]:= Hall_superset solG sKG piK.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have [x Gx defM] := Hall_trans solG HallM HallH.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists x; rewrite // -defM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hall_Jsub",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "move=> solG HallH sKG piK; have [x Gx sKHx] := Hall_subJ solG HallH sKG piK.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by exists x^-1; rewrite ?groupV // sub_conjgV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_Hall_exists",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "move=> nGA coGA solG; have [H hallH] := Hall_exists pi solG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have sG_AG: G \\subset A <*> G by rewrite joing_subr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nG_AG: A <*> G \\subset 'N(G) by rewrite join_subG nGA normG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose N := 'N_(A <*> G)(H)%G.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have nGN: N \\subset 'N(G) by rewrite subIset ?nG_AG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nGN_N: G :&: N <| N by rewrite /(_ <| N) subsetIr normsI ?normG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have NG_AG: G * N = A <*> G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: Hall_Frattini_arg hallH => //; apply/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have iGN_A: #|N| %/ #|G :&: N| = #|A|.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite setIC divgI -card_quotient // -quotientMidl NG_AG.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite card_quotient -?divgS //= norm_joinEl //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite coprime_cardMg 1?coprime_sym // mulnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have hallGN: Hall N (G :&: N).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite /Hall -divgS subsetIr //= iGN_A (coprimeSg _ coGA) ?subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/splitsP: {hallGN nGN_N}(SchurZassenhaus_split hallGN nGN_N) => B.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case/complP=> trBGN defN.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have{trBGN iGN_A} oBA: #|B| = #|A|.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -iGN_A -{1}defN (TI_cardMg trBGN) mulKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have sBN: B \\subset N by rewrite -defN mulG_subr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (SchurZassenhaus_trans_sol solG nGA _ coGA oBA) => [|x Gx defB].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(normC nGA) -norm_joinEl // -NG_AG -(mul1g B) mulgSS ?sub1G.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (H :^ x^-1)%G; first by rewrite pHallJ ?groupV.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> y Ay; have: y ^ x \\in B by rewrite defB memJ_conjg.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "move/(subsetP sBN)=> /setIP[_ /normP nHyx].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply/normP; rewrite -conjsgM conjgCV invgK conjsgM nHyx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_conj_cent",
            "line_nb": 380,
            "steps": [
                {
                    "command": [
                        "by move=> cAx; rewrite norm_conj_norm ?(subsetP (cent_sub A)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_norm_quotient_cent",
            "line_nb": 410,
            "steps": [
                {
                    "command": [
                        "move=> nGA nHA coHA solH; have sRH := subsetIl H [~: G, A].",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite strongest_coprime_quotient_cent ?(coprimeSg sRH) 1?(solvableS sRH) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite subIset // commg_subl nGA orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quotient_TI_subcent",
            "line_nb": 423,
            "steps": [
                {
                    "command": [
                        "move=> nGK nGH tiKH.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have tiHR: H :&: [~: K, G] = 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/trivgP; rewrite /= setIC -tiKH setSI ?commg_subl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: strongest_coprime_quotient_cent; rewrite ?tiHR ?sub1G ?solvable1 //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite cards1 coprime1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_quotient_cent",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "move=> sHG nHA coGA solG.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have sRG: H :&: [~: G, A] \\subset G by rewrite subIset ?sHG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite strongest_coprime_quotient_cent ?(coprimeSg sRG) 1?(solvableS sRG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "external_action_im_coprime",
            "line_nb": 542,
            "steps": [
                {
                    "command": [
                        "by rewrite !card_injm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_coprime_Hall_exists",
            "line_nb": 548,
            "steps": [
                {
                    "command": [
                        "have [H' hallH' nHA'] := coprime_Hall_exists pi nGA' coGA' solG'.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sHG' := pHall_sub hallH'.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (inG @*^-1 H')%G => /=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(morphim_invmE injG) -{1}(im_invm injG) morphim_pHall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite actsEsd ?morphpreK // subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_coprime_Hall_trans",
            "line_nb": 555,
            "steps": [
                {
                    "command": [
                        "move=> hallH1 nH1A hallH2 nH2A.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have sH1G := pHall_sub hallH1; have sH2G := pHall_sub hallH2.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "rewrite !actsEsd // in nH1A nH2A.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have hallH1': pi.-Hall(G') (inG @* H1) by rewrite morphim_pHall.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have hallH2': pi.-Hall(G') (inG @* H2) by rewrite morphim_pHall.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [x'] := coprime_Hall_trans nGA' coGA' solG' hallH1' nH1A hallH2' nH2A.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/setIP=> /= Gx' cAx' /eqP defH1; pose x := invm injG x'.",
                        "VernacExtend",
                        "61f7313c68f88d92a678d74fe9c99999257a468e"
                    ]
                },
                {
                    "command": [
                        "have Gx: x \\in G by rewrite -(im_invm injG) mem_morphim.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have def_x': x' = inG x by rewrite invmK.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists x; first by rewrite inE Gx gacentEsd mem_morphpre /= -?def_x'.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; move: defH1; rewrite def_x' /= -morphimJ //=.",
                        "VernacExtend",
                        "892743169f9b7a8d1078a131ab1583767aafbf69"
                    ]
                },
                {
                    "command": [
                        "by rewrite !eqEsubset !injmSK // conj_subG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_norm_conj_cent",
            "line_nb": 569,
            "steps": [
                {
                    "command": [
                        "move=> sHG /setIP[Gx].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite gacentEsd !actsEsd ?conj_subG ?morphimJ // 2!inE Gx /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: norm_conj_cent.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_coprime_Hall_subset",
            "line_nb": 574,
            "steps": [
                {
                    "command": [
                        "move=> sXG piX; rewrite actsEsd // => nXA'.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "case: (coprime_Hall_subset nGA' coGA' solG' _ (morphim_pgroup _ piX) nXA').",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exact: morphimS.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "move=> H' /= [piH' nHA' sXH']; have sHG' := pHall_sub piH'.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "exists (inG @*^-1 H')%G; rewrite actsEsd ?subsetIl ?morphpreK // nHA'.",
                        "VernacExtend",
                        "17aa87ec75d1c43e01a0ddebde698418ae5c917b"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub_morphim_pre //= sXH'; split=> //.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(morphim_invmE injG) -{1}(im_invm injG) morphim_pHall.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sol_coprime_Sylow_exists",
            "line_nb": 653,
            "steps": [
                {
                    "command": [
                        "move=> solA nGA coGA; pose AG := A <*> G.",
                        "VernacExtend",
                        "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
                    ]
                },
                {
                    "command": [
                        "have nsG_AG: G <| AG by rewrite /normal joing_subr join_subG nGA normG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [sG_AG nG_AG]:= andP nsG_AG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [P sylP] := Sylow_exists p G; pose N := 'N_AG(P); pose NG := G :&: N.",
                        "VernacExtend",
                        "b3e9b70f7c7c61b80869193a9810a547d0acc233"
                    ]
                },
                {
                    "command": [
                        "have nGN: N \\subset 'N(G) by rewrite subIset ?nG_AG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sNG_G: NG \\subset G := subsetIl G N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nsNG_N: NG <| N by rewrite /normal subsetIr normsI ?normG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have defAG: G * N = AG := Frattini_arg nsG_AG sylP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have oA : #|A| = #|N| %/ #|NG|.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /NG setIC divgI -card_quotient // -quotientMidl defAG.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite card_quotient -?divgS //= norm_joinEl //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite coprime_cardMg 1?coprime_sym // mulnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: [splits N, over NG].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite SchurZassenhaus_split // /Hall -divgS subsetIr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -oA (coprimeSg sNG_G).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/splitsP=> B; case/complP=> tNG_B defN.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "have [nPB]: B \\subset 'N(P) /\\ B \\subset AG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/andP; rewrite andbC -subsetI -/N -defN mulG_subr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/SchurZassenhaus_trans_actsol => // [|x Gx defB].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite oA -defN TI_cardMg // mulKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (P :^ x^-1)%G; first by rewrite pHallJ ?groupV.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite normJ -sub_conjg -defB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}