{
    "filename": "mathcomp/solvable/nilpotent.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq path fintype div.",
            "VernacRequire",
            "33d675eed5a9f7e3b745376cf67fd23c3614ec33"
        ],
        [
            "From mathcomp Require Import bigop prime finset fingroup morphism automorphism quotient.",
            "VernacRequire",
            "464cdbefe6a58cff3239b492ac59ee3b5f5284ac"
        ],
        [
            "From mathcomp Require Import commutator gproduct gfunctor center gseries cyclic.",
            "VernacRequire",
            "3b300fcbaa3f670ce22ce76deac7159f2603d077"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Section SeriesDefs.",
            "VernacBeginSection",
            "81d41a375e8f2a7116e53609e4a91e7fb70f527c"
        ],
        [
            "Variables (n : nat) (gT : finGroupType) (A : {set gT}).",
            "VernacAssumption",
            "5d64fa7a1b2442e1ea7e2b3adb31e8caad8b00aa"
        ],
        [
            "Definition lower_central_at_rec := iter n (fun B => [~: B, A]) A.",
            "VernacDefinition",
            "18d844e22fec0a352ef19a11e97ba11eb5855eaa"
        ],
        [
            "Definition upper_central_at_rec := iter n (fun B => coset B @*^-1 'Z(A / B)) 1.",
            "VernacDefinition",
            "96dff6d81db55d61aa021a96dd05bb3c6e458148"
        ],
        [
            "End SeriesDefs.",
            "VernacEndSegment",
            "32853f9ea0fa61c1c55906d1d4cd7f31528b8c7b"
        ],
        [
            "Definition lower_central_at n := lower_central_at_rec n.-1.",
            "VernacDefinition",
            "55cbcf5ca57ee36de3f6bd54da7c204c77a2512c"
        ],
        [
            "Definition upper_central_at := nosimpl upper_central_at_rec.",
            "VernacDefinition",
            "dc4a6cd0d114ffc8ba022d386d9837936ee99537"
        ],
        [
            "Arguments lower_central_at n%N {gT} A%g.",
            "VernacArguments",
            "4ac519b0e3295626255edb41cd6359759508ba25"
        ],
        [
            "Arguments upper_central_at n%N {gT} A%g.",
            "VernacArguments",
            "5b0295cbec3010a2d25c4c753c3b0b1d581a4af0"
        ],
        [
            "Notation \"''L_' n ( G )\" := (lower_central_at n G) (at level 8, n at level 2, format \"''L_' n ( G )\") : group_scope.",
            "VernacNotation",
            "ba8592f06d78cb030a6446b3b82905e334149a74"
        ],
        [
            "Notation \"''Z_' n ( G )\" := (upper_central_at n G) (at level 8, n at level 2, format \"''Z_' n ( G )\") : group_scope.",
            "VernacNotation",
            "9f309736546bdcc530f358587da780b4b5bc048a"
        ],
        [
            "Section PropertiesDefs.",
            "VernacBeginSection",
            "a46694396c0516ecec07e138a6f4d3e3f9f18102"
        ],
        [
            "Variables (gT : finGroupType) (A : {set gT}).",
            "VernacAssumption",
            "3218955311150c8d918104fa8afe61a207d3fcb5"
        ],
        [
            "Definition nilpotent := [forall (G : {group gT} | G \\subset A :&: [~: G, A]), G :==: 1].",
            "VernacDefinition",
            "3bac9cc118ad3ed58547d01ac08dc230991ed5f7"
        ],
        [
            "Definition nil_class := index 1 (mkseq (fun n => 'L_n.+1(A)) #|A|).",
            "VernacDefinition",
            "0cb1375d1c0aa6b76f74d6a6723d7e0d02baf6ba"
        ],
        [
            "Definition solvable := [forall (G : {group gT} | G \\subset A :&: [~: G, G]), G :==: 1].",
            "VernacDefinition",
            "da697ac268352748ea497574bc1e8db469e29978"
        ],
        [
            "End PropertiesDefs.",
            "VernacEndSegment",
            "8c2d760747553a654f8b83996c9130add29d3acb"
        ],
        [
            "Arguments nilpotent {gT} A%g.",
            "VernacArguments",
            "1e3ba6a4160a4c063a49abcdb2a0f6e1f8efd428"
        ],
        [
            "Arguments nil_class {gT} A%g.",
            "VernacArguments",
            "58496a31346f437bae6b0c2800461f6f41576ac6"
        ],
        [
            "Arguments solvable {gT} A%g.",
            "VernacArguments",
            "78261c3a6e50ad2243031108b32d56444f31bab2"
        ],
        [
            "Section NilpotentProps.",
            "VernacBeginSection",
            "39f37a255de7d0413fab19b55bd237d93e217886"
        ],
        [
            "Variable gT: finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types (A B : {set gT}) (G H : {group gT}).",
            "VernacReserve",
            "8df65e0eb921a84477db72a3d67058e4b402b2cf"
        ],
        [
            "Lemma nilpotent1 : nilpotent [1 gT].",
            "VernacStartTheoremProof",
            "d1d58335287c398ce7122e47f8b5e0629dbe9680"
        ],
        [
            "by apply/forall_inP=> H; rewrite commG1 setIid -subG1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nilpotentS A B : B \\subset A -> nilpotent A -> nilpotent B.",
            "VernacStartTheoremProof",
            "81b1d3709ca4b1acc4181194937ee9bc2c5b79cf"
        ],
        [
            "move=> sBA nilA; apply/forall_inP=> H sHR.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "have:= forallP nilA H; rewrite (subset_trans sHR) //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by apply: subset_trans (setIS _ _) (setSI _ _); rewrite ?commgS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_comm_properl G H A : nilpotent G -> H \\subset G -> H :!=: 1 -> A \\subset 'N_G(H) -> [~: H, A] \\proper H.",
            "VernacStartTheoremProof",
            "b9f1c706bd9311a1cab596601b93eb00dabdb556"
        ],
        [
            "move=> nilG sHG ntH; rewrite subsetI properE; case/andP=> sAG nHA.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "rewrite (subset_trans (commgS H (subset_gen A))) ?commg_subl ?gen_subG //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contra ntH => sHR; have:= forallP nilG H; rewrite subsetI sHG.",
            "VernacExtend",
            "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
        ],
        [
            "by rewrite (subset_trans sHR) ?commgS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_comm_properr G A H : nilpotent G -> H \\subset G -> H :!=: 1 -> A \\subset 'N_G(H) -> [~: A, H] \\proper H.",
            "VernacStartTheoremProof",
            "54041ea371ee1792814bec9f614b68668c146efb"
        ],
        [
            "by rewrite commGC; apply: nil_comm_properl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma centrals_nil (s : seq {group gT}) G : G.-central.-series 1%G s -> last 1%G s = G -> nilpotent G.",
            "VernacStartTheoremProof",
            "09663e9121376c0ae504fc3fdb5de0bb4c509921"
        ],
        [
            "move=> cGs defG; apply/forall_inP=> H /subsetIP[sHG sHR].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "move: sHG; rewrite -{}defG -subG1 -[1]/(gval 1%G).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "elim: s 1%G cGs => //= L s IHs K /andP[/and3P[sRK sKL sLG] /IHs sHL] sHs.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "exact: subset_trans sHR (subset_trans (commSg _ (sHL sHs)) sRK).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NilpotentProps.",
            "VernacEndSegment",
            "0b9feb9b360c239f5e9011e51496649195f0e774"
        ],
        [
            "Section LowerCentral.",
            "VernacBeginSection",
            "ec3541135140ceb879b580a686437ebb2a472a2b"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types (A B : {set gT}) (G H : {group gT}).",
            "VernacReserve",
            "8df65e0eb921a84477db72a3d67058e4b402b2cf"
        ],
        [
            "Lemma lcn0 A : 'L_0(A) = A.",
            "VernacStartTheoremProof",
            "7f6c9e4b80f799b6fbf2567e5bab76277e353148"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn1 A : 'L_1(A) = A.",
            "VernacStartTheoremProof",
            "510387105ae78644be36488cbf79c509740ad93d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcnSn n A : 'L_n.+2(A) = [~: 'L_n.+1(A), A].",
            "VernacStartTheoremProof",
            "08286734862384362e42bbd618922774394df657"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcnSnS n G : [~: 'L_n(G), G] \\subset 'L_n.+1(G).",
            "VernacStartTheoremProof",
            "39b5140d4cc441d6f2852ab0be2492093016d212"
        ],
        [
            "by case: n => //; apply: der1_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcnE n A : 'L_n.+1(A) = lower_central_at_rec n A.",
            "VernacStartTheoremProof",
            "d48b18d4a21cbf7ef63b0be5e3a34858d8330041"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn2 A : 'L_2(A) = A^`(1).",
            "VernacStartTheoremProof",
            "925b12bf3f65e25df0c2982fe0ac72fa48cc2655"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_group_set n G : group_set 'L_n(G).",
            "VernacStartTheoremProof",
            "01759fcd031e67c08d83a65336497fdf09f59182"
        ],
        [
            "by case: n => [|[|n]]; apply: groupP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical lower_central_at_group n G := Group (lcn_group_set n G).",
            "VernacDefinition",
            "0149b5d938dc9d0989adece6592303001a6d69f2"
        ],
        [
            "Lemma lcn_char n G : 'L_n(G) \\char G.",
            "VernacStartTheoremProof",
            "10b76c4f2033ff06e7e851704dcfa497e6a3f51e"
        ],
        [
            "by case: n; last elim=> [|n IHn]; rewrite ?char_refl ?lcnSn ?charR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_normal n G : 'L_n(G) <| G.",
            "VernacStartTheoremProof",
            "a59585ff0a92e7cae8c8c2b310f2f3613039af62"
        ],
        [
            "exact/char_normal/lcn_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_sub n G : 'L_n(G) \\subset G.",
            "VernacStartTheoremProof",
            "1822b897430c89b4e5e57eae751e6c77a1fde2b8"
        ],
        [
            "exact/char_sub/lcn_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_norm n G : G \\subset 'N('L_n(G)).",
            "VernacStartTheoremProof",
            "7405bb5d8b433cf6b45bdb402f0f89ddf3b55169"
        ],
        [
            "exact/char_norm/lcn_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_subS n G : 'L_n.+1(G) \\subset 'L_n(G).",
            "VernacStartTheoremProof",
            "a22c5a28bbd1ab0d3e63b98492b59d9bfdc1d899"
        ],
        [
            "case: n => // n; rewrite lcnSn commGC commg_subr.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case/andP: (lcn_normal n.+1 G).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_normalS n G : 'L_n.+1(G) <| 'L_n(G).",
            "VernacStartTheoremProof",
            "1ddd34cd138a8cdd40c3b4033e72d9a87a3ec34f"
        ],
        [
            "by apply: normalS (lcn_normal _ _); rewrite (lcn_subS, lcn_sub).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_central n G : 'L_n(G) / 'L_n.+1(G) \\subset 'Z(G / 'L_n.+1(G)).",
            "VernacStartTheoremProof",
            "f0e22d0e6fd149025fb8f270c38e36b3731c016a"
        ],
        [
            "case: n => [|n]; first by rewrite trivg_quotient sub1G.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite subsetI quotientS ?lcn_sub ?quotient_cents2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_sub_leq m n G : n <= m -> 'L_m(G) \\subset 'L_n(G).",
            "VernacStartTheoremProof",
            "e45edef3e39c9734dd9455f2f5979df5c70dd9df"
        ],
        [
            "by move/subnK <-; elim: {m}(m - n) => // m; apply: subset_trans (lcn_subS _ _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcnS n A B : A \\subset B -> 'L_n(A) \\subset 'L_n(B).",
            "VernacStartTheoremProof",
            "e48079a83783ac3a6b936bc63158db86d7a225f4"
        ],
        [
            "by case: n => // n sAB; elim: n => // n IHn; rewrite !lcnSn genS ?imset2S.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_cprod n A B G : A \\* B = G -> 'L_n(A) \\* 'L_n(B) = 'L_n(G).",
            "VernacStartTheoremProof",
            "bbfc5bfd9bab0bff6e9b92872ed7fed75710e46b"
        ],
        [
            "case: n => // n /cprodP[[H K -> ->{A B}] defG cHK].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have sL := subset_trans (lcn_sub _ _); rewrite cprodE ?(centSS _ _ cHK) ?sL //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "symmetry; elim: n => // n; rewrite lcnSn => ->; rewrite commMG /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: subset_trans (commg_normr _ _); rewrite sL // -defG mulG_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -!(commGC G) -defG -{1}(centC cHK).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !commMG ?normsR ?lcn_norm ?cents_norm // 1?centsC //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!(commGC 'L__(_)) -!lcnSn !(commG1P _) ?mul1g ?sL // centsC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_dprod n A B G : A \\x B = G -> 'L_n(A) \\x 'L_n(B) = 'L_n(G).",
            "VernacStartTheoremProof",
            "feb6e4265c45bfca9558345103331ec6e3d352dd"
        ],
        [
            "move=> defG; have [[K H defA defB] _ _ tiAB] := dprodP defG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite !dprodEcp // in defG *; first exact: lcn_cprod.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite defA defB; apply/trivgP; rewrite -tiAB defA defB setISS ?lcn_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma der_cprod n A B G : A \\* B = G -> A^`(n) \\* B^`(n) = G^`(n).",
            "VernacStartTheoremProof",
            "2a88b9c8e2722c60da8c1236207139ca052f1a61"
        ],
        [
            "by move=> defG; elim: n => {defG}// n; apply: (lcn_cprod 2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma der_dprod n A B G : A \\x B = G -> A^`(n) \\x B^`(n) = G^`(n).",
            "VernacStartTheoremProof",
            "6e27877be744662d0d2ae467574e75815c0f76b0"
        ],
        [
            "by move=> defG; elim: n => {defG}// n; apply: (lcn_dprod 2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_bigcprod n I r P (F : I -> {set gT}) G : \\big[cprod/1]_(i <- r | P i) F i = G -> \\big[cprod/1]_(i <- r | P i) 'L_n(F i) = 'L_n(G).",
            "VernacStartTheoremProof",
            "74f01b422f29f63176207acabe4a45e21b56981d"
        ],
        [
            "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first exact/esym/trivgP/lcn_sub.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(lcn_cprod n dG); have [[_ H _ dH]] := cprodP dG; rewrite dH (IH H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_bigdprod n I r P (F : I -> {set gT}) G : \\big[dprod/1]_(i <- r | P i) F i = G -> \\big[dprod/1]_(i <- r | P i) 'L_n(F i) = 'L_n(G).",
            "VernacStartTheoremProof",
            "cf793e6f16cb11f03e9c98fd79add410ec45a2b8"
        ],
        [
            "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first exact/esym/trivgP/lcn_sub.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(lcn_dprod n dG); have [[_ H _ dH]] := dprodP dG; rewrite dH (IH H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma der_bigcprod n I r P (F : I -> {set gT}) G : \\big[cprod/1]_(i <- r | P i) F i = G -> \\big[cprod/1]_(i <- r | P i) (F i)^`(n) = G^`(n).",
            "VernacStartTheoremProof",
            "7f79801d79c7263a54e1d2e0732e61878f2b55e5"
        ],
        [
            "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first by rewrite gF1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(der_cprod n dG); have [[_ H _ dH]] := cprodP dG; rewrite dH (IH H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma der_bigdprod n I r P (F : I -> {set gT}) G : \\big[dprod/1]_(i <- r | P i) F i = G -> \\big[dprod/1]_(i <- r | P i) (F i)^`(n) = G^`(n).",
            "VernacStartTheoremProof",
            "552a6ca71965ad319c7b8d0997600c7d96cf98d6"
        ],
        [
            "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first by rewrite gF1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(der_dprod n dG); have [[_ H _ dH]] := dprodP dG; rewrite dH (IH H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nilpotent_class G : nilpotent G = (nil_class G < #|G|).",
            "VernacStartTheoremProof",
            "ef26b7d3e621384058d3851e4ec4600c3a53dd06"
        ],
        [
            "rewrite /nil_class; set s := mkseq _ _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "transitivity (1 \\in s); last by rewrite -index_mem size_mkseq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/idP/mapP=> {s}/= [nilG | [n _ Ln1]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/forall_inP=> H /subsetIP[sHG sHR].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -subG1 {}Ln1; elim: n => // n IHn.",
            "VernacExtend",
            "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
        ],
        [
            "by rewrite (subset_trans sHR) ?commSg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose m := #|G|.-1; exists m; first by rewrite mem_iota /= prednK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite ['L__(G)]card_le1_trivg //= -(subnn m).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: {-2}m => [|n]; [by rewrite subn0 prednK | rewrite lcnSn subnS].",
            "VernacExtend",
            "6f713a0299dcb4531f4e0400d0b4ac3fb1e0973c"
        ],
        [
            "case: (eqsVneq 'L_n.+1(G) 1) => [-> | ntLn]; first by rewrite comm1G cards1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (m - n) => [|m' /= IHn]; first by rewrite leqNgt cardG_gt1 ntLn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -ltnS (leq_trans (proper_card _) IHn) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (nil_comm_properl nilG) ?lcn_sub // subsetI subxx lcn_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcn_nil_classP n G : nilpotent G -> reflect ('L_n.+1(G) = 1) (nil_class G <= n).",
            "VernacStartTheoremProof",
            "f0fb9e827d7a98e7a914e0d6d5c9bc3dc2639cd8"
        ],
        [
            "rewrite nilpotent_class /nil_class; set s := mkseq _ _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "set c := index 1 s => lt_c_G; case: leqP => [le_c_n | lt_n_c].",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "have Lc1: nth 1 s c = 1 by rewrite nth_index // -index_mem size_mkseq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by left; apply/trivgP; rewrite -Lc1 nth_mkseq ?lcn_sub_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "right; apply/eqP/negPf; rewrite -(before_find 1 lt_n_c) nth_mkseq //.",
            "VernacExtend",
            "aa5d3d3809614a8d5257883779e1164202708f44"
        ],
        [
            "exact: ltn_trans lt_n_c lt_c_G.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcnP G : reflect (exists n, 'L_n.+1(G) = 1) (nilpotent G).",
            "VernacStartTheoremProof",
            "187586d3e9cc83ea768a80b10432a66099588630"
        ],
        [
            "apply: (iffP idP) => [nilG | [n Ln1]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by exists (nil_class G); apply/lcn_nil_classP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/forall_inP=> H /subsetIP[sHG sHR]; rewrite -subG1 -{}Ln1.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by elim: n => // n IHn; rewrite (subset_trans sHR) ?commSg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abelian_nil G : abelian G -> nilpotent G.",
            "VernacStartTheoremProof",
            "69da70417ffad3a375e003f403fe222fdba2828a"
        ],
        [
            "by move=> abG; apply/lcnP; exists 1%N; apply/commG1P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_class0 G : (nil_class G == 0) = (G :==: 1).",
            "VernacStartTheoremProof",
            "d7363fa25edd3db6ef45d5d03c9478b1e6ffb67c"
        ],
        [
            "apply/idP/eqP=> [nilG | ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/(lcn_nil_classP 0); rewrite ?nilpotent_class (eqP nilG) ?cardG_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -leqn0; apply/(lcn_nil_classP 0); rewrite ?nilpotent1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_class1 G : (nil_class G <= 1) = abelian G.",
            "VernacStartTheoremProof",
            "22b1f28c6a7b7439b09f8a37db23634174c06c02"
        ],
        [
            "have [-> | ntG] := eqsVneq G 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite abelian1 leq_eqVlt ltnS leqn0 nil_class0 eqxx orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/idP/idP=> cGG.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/commG1P; apply/(lcn_nil_classP 1); rewrite // nilpotent_class.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by rewrite (leq_ltn_trans cGG) // cardG_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/(lcn_nil_classP 1); rewrite ?abelian_nil //; apply/commG1P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cprod_nil A B G : A \\* B = G -> nilpotent G = nilpotent A && nilpotent B.",
            "VernacStartTheoremProof",
            "faf5f23bf8215a512ae27f7ce36d77da696aba28"
        ],
        [
            "move=> defG; case/cprodP: defG (defG) => [[H K -> ->{A B}] defG _] defGc.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply/idP/andP=> [nilG | [/lcnP[m LmH1] /lcnP[n LnK1]]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite !(nilpotentS _ nilG) // -defG (mulG_subr, mulG_subl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/lcnP; exists (m + n.+1); apply/trivgP.",
            "VernacExtend",
            "ce61ec0bcd149902b7b22957ce20c6f7362304b5"
        ],
        [
            "case/cprodP: (lcn_cprod (m.+1 + n.+1) defGc) => _ <- _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mulG_subG /= -{1}LmH1 -LnK1 !lcn_sub_leq ?leq_addl ?leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulg_nil G H : H \\subset 'C(G) -> nilpotent (G * H) = nilpotent G && nilpotent H.",
            "VernacStartTheoremProof",
            "a2648cb0f7a1a57ce49dd18b98ad3c9fb52be2f5"
        ],
        [
            "by move=> cGH; rewrite -(cprod_nil (cprodEY cGH)) /= cent_joinEr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprod_nil A B G : A \\x B = G -> nilpotent G = nilpotent A && nilpotent B.",
            "VernacStartTheoremProof",
            "e630d40749b88097df72216aaefcea8a8b056df1"
        ],
        [
            "by case/dprodP=> [[H K -> ->] <- cHK _]; rewrite mulg_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bigdprod_nil I r (P : pred I) (A_ : I -> {set gT}) G : \\big[dprod/1]_(i <- r | P i) A_ i = G -> (forall i, P i -> nilpotent (A_ i)) -> nilpotent G.",
            "VernacStartTheoremProof",
            "5266d078fe0a3b7376178a9d912c2fd1b0b4a8c7"
        ],
        [
            "move=> defG nilA; elim/big_rec: _ => [|i B Pi nilB] in G defG *.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "by rewrite -defG nilpotent1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [[_ H _ defB] _ _ _] := dprodP defG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (dprod_nil defG) nilA //= defB nilB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LowerCentral.",
            "VernacEndSegment",
            "0b99b965aa05eae44c1965d0df359d1697acda48"
        ],
        [
            "Notation \"''L_' n ( G )\" := (lower_central_at_group n G) : Group_scope.",
            "VernacNotation",
            "bf847efa8e2b2f4bcc3db1149dcf3789e4309cd4"
        ],
        [
            "Lemma lcn_cont n : GFunctor.continuous (@lower_central_at n).",
            "VernacStartTheoremProof",
            "464626deb18372a9aad376f1dbe501ccb51a06da"
        ],
        [
            "case: n => //; elim=> // n IHn g0T h0T H phi.",
            "VernacExtend",
            "1821533cafd21deefc2f797d67a58b45e0a54e79"
        ],
        [
            "by rewrite !lcnSn morphimR ?lcn_sub // commSg ?IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical lcn_igFun n := [igFun by lcn_sub^~ n & lcn_cont n].",
            "VernacDefinition",
            "72450ff73e30386cc211cc723e6e1fefc10aa1d0"
        ],
        [
            "Canonical lcn_gFun n := [gFun by lcn_cont n].",
            "VernacDefinition",
            "a11cf04c0f0d707790995b8a03d40a25f0fed5a9"
        ],
        [
            "Canonical lcn_mgFun n := [mgFun by fun _ G H => @lcnS _ n G H].",
            "VernacDefinition",
            "4d1d8a06fc35d08027739a07efd9a305bce1a72b"
        ],
        [
            "Section UpperCentralFunctor.",
            "VernacBeginSection",
            "387f7763133091824ad8699ba96fe9e05730ffd8"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Implicit Type gT : finGroupType.",
            "VernacReserve",
            "fbb7aa19a7971c5b10d380fd1f026e4fa401e829"
        ],
        [
            "Lemma ucn_pmap : exists hZ : GFunctor.pmap, @upper_central_at n = hZ.",
            "VernacStartTheoremProof",
            "cf4c3e18a0fc5ec22cf02e2df6530108694b6d3e"
        ],
        [
            "elim: n => [|n' [hZ defZ]]; first by exists trivGfun_pgFun.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists [pgFun of @center %% hZ]; rewrite /= -defZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_group_set gT (G : {group gT}) : group_set 'Z_n(G).",
            "VernacStartTheoremProof",
            "b1671c24a62bc88e07cc691482fcd28b17085eac"
        ],
        [
            "by have [hZ ->] := ucn_pmap; apply: groupP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical upper_central_at_group gT G := Group (@ucn_group_set gT G).",
            "VernacDefinition",
            "e8a7c6cc7ed9b0e3a67474286bb8509d2a869f86"
        ],
        [
            "Lemma ucn_sub gT (G : {group gT}) : 'Z_n(G) \\subset G.",
            "VernacStartTheoremProof",
            "89420b5e4092505b3fb7342facf65032790972ef"
        ],
        [
            "by have [hZ ->] := ucn_pmap; apply: gFsub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morphim_ucn : GFunctor.pcontinuous (@upper_central_at n).",
            "VernacStartTheoremProof",
            "75901ef0541f5bfd94638732b25d34f4a81acaf0"
        ],
        [
            "by have [hZ ->] := ucn_pmap; apply: pmorphimF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical ucn_igFun := [igFun by ucn_sub & morphim_ucn].",
            "VernacDefinition",
            "488cea8df4014852802c65fa108fe1e0e9cab1e7"
        ],
        [
            "Canonical ucn_gFun := [gFun by morphim_ucn].",
            "VernacDefinition",
            "87df54617a3fb01d6a083f30078f10afb35be0ec"
        ],
        [
            "Canonical ucn_pgFun := [pgFun by morphim_ucn].",
            "VernacDefinition",
            "348ba09b2af5be944dfe29ed796fa6b99b7ff425"
        ],
        [
            "Variable (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Lemma ucn_char : 'Z_n(G) \\char G.",
            "VernacStartTheoremProof",
            "269eadfeb7bd796ceda72aacdd6fa069fb867d43"
        ],
        [
            "exact: gFchar.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_norm : G \\subset 'N('Z_n(G)).",
            "VernacStartTheoremProof",
            "926de75121d3468c0dcbe31434e2bea2c44b3674"
        ],
        [
            "exact: gFnorm.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_normal : 'Z_n(G) <| G.",
            "VernacStartTheoremProof",
            "6bd66dd1ad8b7bcb41b49b9fd2b120c19da55dbd"
        ],
        [
            "exact: gFnormal.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UpperCentralFunctor.",
            "VernacEndSegment",
            "776595f15d512873e0b8d189331370b5588ad8c9"
        ],
        [
            "Notation \"''Z_' n ( G )\" := (upper_central_at_group n G) : Group_scope.",
            "VernacNotation",
            "141a6825de677af08c0c68bb5db61f71b737cc15"
        ],
        [
            "Section UpperCentral.",
            "VernacBeginSection",
            "1630d5430efcc14abfbfcb9a7a0dda369aee74f0"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types (A B : {set gT}) (G H : {group gT}).",
            "VernacReserve",
            "8df65e0eb921a84477db72a3d67058e4b402b2cf"
        ],
        [
            "Lemma ucn0 A : 'Z_0(A) = 1.",
            "VernacStartTheoremProof",
            "27bb5f2fafda59f32ddf217f2b7cd31ea21db68b"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucnSn n A : 'Z_n.+1(A) = coset 'Z_n(A) @*^-1 'Z(A / 'Z_n(A)).",
            "VernacStartTheoremProof",
            "31ad9ec70c3d73b2e557419c1fe707b3494fd09c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucnE n A : 'Z_n(A) = upper_central_at_rec n A.",
            "VernacStartTheoremProof",
            "3ce40b90cd8fe681c6e65a3ae7f6b28e0446bea2"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_subS n G : 'Z_n(G) \\subset 'Z_n.+1(G).",
            "VernacStartTheoremProof",
            "e365115145f8a6d7d7512b47a665c2ca9f33e6e1"
        ],
        [
            "by rewrite -{1}['Z_n(G)]ker_coset morphpreS ?sub1G.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_sub_geq m n G : n >= m -> 'Z_m(G) \\subset 'Z_n(G).",
            "VernacStartTheoremProof",
            "0d11c1d00b349ffbfa0692ce1a9cb9c4358e44bf"
        ],
        [
            "move/subnK <-; elim: {n}(n - m) => // n IHn.",
            "VernacExtend",
            "b2c453bcfb72d2a5d1b17de8ea415b01549924fb"
        ],
        [
            "exact: subset_trans (ucn_subS _ _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_central n G : 'Z_n.+1(G) / 'Z_n(G) = 'Z(G / 'Z_n(G)).",
            "VernacStartTheoremProof",
            "a88f2077a7976b6b87b588b35f108e5e3c03c65f"
        ],
        [
            "by rewrite ucnSn cosetpreK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_normalS n G : 'Z_n(G) <| 'Z_n.+1(G).",
            "VernacStartTheoremProof",
            "cbf00c95c80aeba4562bf558d2a15684d787e27c"
        ],
        [
            "by rewrite (normalS _ _ (ucn_normal n G)) ?ucn_subS ?ucn_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_comm n G : [~: 'Z_n.+1(G), G] \\subset 'Z_n(G).",
            "VernacStartTheoremProof",
            "d25eec20a722b91f7761c558e250ec033562addf"
        ],
        [
            "rewrite -quotient_cents2 ?normal_norm ?ucn_normal ?ucn_normalS //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ucn_central subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn1 G : 'Z_1(G) = 'Z(G).",
            "VernacStartTheoremProof",
            "993f1626f8c01674758185efdd081bf799b2c195"
        ],
        [
            "apply: (quotient_inj (normal1 _) (normal1 _)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite /= (ucn_central 0) -injmF ?norms1 ?coset1_injm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucnSnR n G : 'Z_n.+1(G) = [set x in G | [~: [set x], G] \\subset 'Z_n(G)].",
            "VernacStartTheoremProof",
            "a0a5fc49a21a7ae089de788068165368e397cd7d"
        ],
        [
            "apply/setP=> x; rewrite inE -(setIidPr (ucn_sub n.+1 G)) inE ucnSn.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case Gx: (x \\in G) => //=; have nZG := ucn_norm n G.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "rewrite -sub1set -sub_quotient_pre -?quotient_cents2 ?sub1set ?(subsetP nZG) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subsetI quotientS ?sub1set.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_cprod n A B G : A \\* B = G -> 'Z_n(A) \\* 'Z_n(B) = 'Z_n(G).",
            "VernacStartTheoremProof",
            "c93dd1e96117cf19a926c08a8a5e829f148f5f65"
        ],
        [
            "case/cprodP=> [[H K -> ->{A B}] mulHK cHK].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "elim: n => [|n /cprodP[_ /= defZ cZn]]; first exact: cprod1g.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set Z := 'Z_n(G) in defZ cZn; rewrite (ucnSn n G) /= -/Z.",
            "VernacExtend",
            "8460a73fe74726b8e94ff0752da65e8d48f68f26"
        ],
        [
            "have /mulGsubP[nZH nZK]: H * K \\subset 'N(Z) by rewrite mulHK gFnorm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have <-: 'Z(H / Z) * 'Z(K / Z) = 'Z(G / Z).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -mulHK quotientMl // center_prod ?quotient_cents.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ZquoZ (B A : {group gT}): B \\subset 'C(A) -> 'Z_n(A) * 'Z_n(B) = Z -> 'Z(A / Z) = 'Z_n.+1(A) / Z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> cAB {defZ}defZ; have cAZnB: 'Z_n(B) \\subset 'C(A) := gFsub_trans _ cAB.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have /second_isom[/=]: A \\subset 'N(Z).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -defZ normsM ?gFnorm ?cents_norm // centsC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices ->: Z :&: A = 'Z_n(A).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by move=> f inj_f im_f; rewrite -!im_f ?gFsub // ucn_central injm_center.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -defZ -group_modl ?gFsub //; apply/mulGidPl.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have [-> | n_gt0] := posnP n; first exact: subsetIl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: subset_trans (ucn_sub_geq A n_gt0); rewrite /= setIC ucn1 setIS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (ZquoZ H K) 1?centsC 1?(centC cZn) // {ZquoZ}(ZquoZ K H) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have cZn1: 'Z_n.+1(K) \\subset 'C('Z_n.+1(H)) by apply: centSS cHK; apply: gFsub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -quotientMl ?quotientK ?mul_subG ?gFsub_trans //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite cprodE // -cent_joinEr ?mulSGid //= cent_joinEr //= -/Z.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -defZ mulgSS ?ucn_subS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_dprod n A B G : A \\x B = G -> 'Z_n(A) \\x 'Z_n(B) = 'Z_n(G).",
            "VernacStartTheoremProof",
            "5114357a07c5f1349ca33fe89f9ecb9689a19ed2"
        ],
        [
            "move=> defG; have [[K H defA defB] _ _ tiAB] := dprodP defG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite !dprodEcp // in defG *; first exact: ucn_cprod.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite defA defB; apply/trivgP; rewrite -tiAB defA defB setISS ?ucn_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_bigcprod n I r P (F : I -> {set gT}) G : \\big[cprod/1]_(i <- r | P i) F i = G -> \\big[cprod/1]_(i <- r | P i) 'Z_n(F i) = 'Z_n(G).",
            "VernacStartTheoremProof",
            "eefe12daee3373c02917188d629608f419e3c76c"
        ],
        [
            "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first by rewrite gF1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(ucn_cprod n dG); have [[_ H _ dH]] := cprodP dG; rewrite dH (IH H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_bigdprod n I r P (F : I -> {set gT}) G : \\big[dprod/1]_(i <- r | P i) F i = G -> \\big[dprod/1]_(i <- r | P i) 'Z_n(F i) = 'Z_n(G).",
            "VernacStartTheoremProof",
            "e358897086472dc7e5d1cc191f80d56fa8ed282e"
        ],
        [
            "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first by rewrite gF1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(ucn_dprod n dG); have [[_ H _ dH]] := dprodP dG; rewrite dH (IH H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_lcnP n G : ('L_n.+1(G) == 1) = ('Z_n(G) == G).",
            "VernacStartTheoremProof",
            "83b45254b5cc36781d6f9278a03d0f9598540bf4"
        ],
        [
            "rewrite !eqEsubset sub1G ucn_sub /= andbT -(ucn0 G).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: {1 3}n 0 (addn0 n) => [j <- //|i IHi j].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite addSnnS => /IHi <- {IHi}; rewrite ucnSn lcnSn.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite -sub_morphim_pre ?gFsub_trans ?gFnorm_trans // subsetI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite morphimS ?gFsub // quotient_cents2 ?gFsub_trans ?gFnorm_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucnP G : reflect (exists n, 'Z_n(G) = G) (nilpotent G).",
            "VernacStartTheoremProof",
            "7b9909ef769352cce20722280ec491703370af6a"
        ],
        [
            "apply: (iffP (lcnP G)) => -[n /eqP-clGn]; by exists n; apply/eqP; rewrite ucn_lcnP in clGn *.",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_nil_classP n G : nilpotent G -> reflect ('Z_n(G) = G) (nil_class G <= n).",
            "VernacStartTheoremProof",
            "62dbd17e6bd9268f54e49a10b95a41be2c3b137a"
        ],
        [
            "move=> nilG; rewrite (sameP (lcn_nil_classP n nilG) eqP) ucn_lcnP; apply: eqP.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_id n G : 'Z_n('Z_n(G)) = 'Z_n(G).",
            "VernacStartTheoremProof",
            "a7dfb795e7361094083b6c9777824a48aa38fa84"
        ],
        [
            "exact: gFid.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ucn_nilpotent n G : nilpotent 'Z_n(G).",
            "VernacStartTheoremProof",
            "65d8f3e1f6c5cd3aca7613723c1bbf5859000980"
        ],
        [
            "by apply/ucnP; exists n; rewrite ucn_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_class_ucn n G : nil_class 'Z_n(G) <= n.",
            "VernacStartTheoremProof",
            "ac91fdecdcd6ec889a2f1de6e1f8086e3616941d"
        ],
        [
            "by apply/ucn_nil_classP; rewrite ?ucn_nilpotent ?ucn_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UpperCentral.",
            "VernacEndSegment",
            "6fed572b9a338ca61a50b6f2552d72e32b8dd0cc"
        ],
        [
            "Section MorphNil.",
            "VernacBeginSection",
            "d71fb1d38fdf7fdb089d1397d2beecf66aa46a1e"
        ],
        [
            "Variables (aT rT : finGroupType) (D : {group aT}) (f : {morphism D >-> rT}).",
            "VernacAssumption",
            "2a757b1a13339a354a9e9ac2eac5dac1c6c5e35b"
        ],
        [
            "Implicit Type G : {group aT}.",
            "VernacReserve",
            "9acbbba5d460911c7d1035a7d1a87595efddb5f9"
        ],
        [
            "Lemma morphim_lcn n G : G \\subset D -> f @* 'L_n(G) = 'L_n(f @* G).",
            "VernacStartTheoremProof",
            "65073732aaf91f0260a6d71c33784bb15dcc3b10"
        ],
        [
            "move=> sHG; case: n => //; elim=> // n IHn.",
            "VernacExtend",
            "187ad808ee6de4dff84783107b9e6a55b80f8797"
        ],
        [
            "by rewrite !lcnSn -IHn morphimR // (subset_trans _ sHG) // lcn_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_ucn n G : 'injm f -> G \\subset D -> f @* 'Z_n(G) = 'Z_n(f @* G).",
            "VernacStartTheoremProof",
            "98ba7fe60e8adc256a58bbc3b73ae792be0d75e1"
        ],
        [
            "exact: injmF.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morphim_nil G : nilpotent G -> nilpotent (f @* G).",
            "VernacStartTheoremProof",
            "5f45d162763340f35e0c1ceac54b6ed265673750"
        ],
        [
            "case/ucnP=> n ZnG; apply/ucnP; exists n; apply/eqP.",
            "VernacExtend",
            "46ade0c33d01760703e2e2f13038f69f0850a0e8"
        ],
        [
            "by rewrite eqEsubset ucn_sub /= -{1}ZnG morphim_ucn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_nil G : 'injm f -> G \\subset D -> nilpotent (f @* G) = nilpotent G.",
            "VernacStartTheoremProof",
            "259dd566d80541d3f59061023543b78e40d0aa50"
        ],
        [
            "move=> injf sGD; apply/idP/idP; last exact: morphim_nil.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/ucnP=> n; rewrite -injm_ucn // => /injm_morphim_inj defZ.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by apply/ucnP; exists n; rewrite defZ ?gFsub_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_class_morphim G : nilpotent G -> nil_class (f @* G) <= nil_class G.",
            "VernacStartTheoremProof",
            "0d1f18a01944fab468ff2e93d5485463d919c428"
        ],
        [
            "move=> nilG; rewrite (sameP (ucn_nil_classP _ (morphim_nil nilG)) eqP) /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite eqEsubset ucn_sub -{1}(ucn_nil_classP _ nilG (leqnn _)) morphim_ucn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_class_injm G : 'injm f -> G \\subset D -> nil_class (f @* G) = nil_class G.",
            "VernacStartTheoremProof",
            "c618db33112ab1915ed1e9d110db1c4254abd5f4"
        ],
        [
            "move=> injf sGD; case nilG: (nilpotent G).",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply/eqP; rewrite eqn_leq nil_class_morphim //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (sameP (lcn_nil_classP _ nilG) eqP) -subG1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(injmSK injf) ?gFsub_trans // morphim1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite morphim_lcn // (lcn_nil_classP _ _ (leqnn _)) //= injm_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "transitivity #|G|; apply/eqP; rewrite eqn_leq.",
            "VernacExtend",
            "8a9228a0204aa40c4e0c8d890d336645e098bffc"
        ],
        [
            "rewrite -(card_injm injf sGD) (leq_trans (index_size _ _)) ?size_mkseq //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite leqNgt -nilpotent_class injm_nil ?nilG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (leq_trans (index_size _ _)) ?size_mkseq // leqNgt -nilpotent_class.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite nilG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MorphNil.",
            "VernacEndSegment",
            "af1b0dd2a235fa0d98db8c5c7f7909d15027b601"
        ],
        [
            "Section QuotientNil.",
            "VernacBeginSection",
            "b01ee95eed99dc7a8c5edaee40a8dc46e950c7b0"
        ],
        [
            "Variables gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types (rT : finGroupType) (G H : {group gT}).",
            "VernacReserve",
            "51ac9f25b646e9798bb555a9c34181db084a151f"
        ],
        [
            "Lemma quotient_ucn_add m n G : 'Z_(m + n)(G) / 'Z_n(G) = 'Z_m(G / 'Z_n(G)).",
            "VernacStartTheoremProof",
            "389445fbb8284d054d578750e3413f1a1294a1ec"
        ],
        [
            "elim: m => [|m IHm]; first exact: trivg_quotient.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/setP=> Zx; have [x Nx ->{Zx}] := cosetP Zx.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "have [sZG nZG] := andP (ucn_normal n G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (ucnSnR m) inE -!sub1set -morphim_set1 //= -quotientR ?sub1set // -IHm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !quotientSGK ?(ucn_sub_geq, leq_addl, comm_subG _ nZG, sub1set) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addSn /= ucnSnR inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isog_nil rT G (L : {group rT}) : G \\isog L -> nilpotent G = nilpotent L.",
            "VernacStartTheoremProof",
            "73ed7df4318d411cfeeccbb7ea34206279cda8d4"
        ],
        [
            "by case/isogP=> f injf <-; rewrite injm_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isog_nil_class rT G (L : {group rT}) : G \\isog L -> nil_class G = nil_class L.",
            "VernacStartTheoremProof",
            "ee08f72dccd7b591893f17ad4b436f7b657e344f"
        ],
        [
            "by case/isogP=> f injf <-; rewrite nil_class_injm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quotient_nil G H : nilpotent G -> nilpotent (G / H).",
            "VernacStartTheoremProof",
            "1afa6e24e45cb3ca749a6a641688e0195512aa56"
        ],
        [
            "exact: morphim_nil.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quotient_center_nil G : nilpotent (G / 'Z(G)) = nilpotent G.",
            "VernacStartTheoremProof",
            "5586aee1ca23335629ca9aa4229a2f3bcc7c4d33"
        ],
        [
            "rewrite -ucn1; apply/idP/idP; last exact: quotient_nil.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/ucnP=> c nilGq; apply/ucnP; exists c.+1; have nsZ1G := ucn_normal 1 G.",
            "VernacExtend",
            "d420d7c9d771800e494669b94e6a05876709d38f"
        ],
        [
            "apply: (quotient_inj _ nsZ1G); last by rewrite /= -(addn1 c) quotient_ucn_add.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (normalS _ _ nsZ1G) ?ucn_sub ?ucn_sub_geq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_class_quotient_center G : nilpotent (G) -> nil_class (G / 'Z(G)) = (nil_class G).-1.",
            "VernacStartTheoremProof",
            "9c3da47460da67a44c23df7781a562f5eb9368fb"
        ],
        [
            "move=> nilG; have nsZ1G := ucn_normal 1 G.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/eqP; rewrite -ucn1 eqn_leq; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "apply/ucn_nil_classP; rewrite ?quotient_nil //= -quotient_ucn_add ucn1.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (ucn_nil_classP _ _ _) ?addn1 ?leqSpred.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -subn1 leq_subLR addnC; apply/ucn_nil_classP => //=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply: (quotient_inj _ nsZ1G) => /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: normalS (ucn_sub _ _) nsZ1G; rewrite /= addnS ucn_sub_geq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite quotient_ucn_add; apply/ucn_nil_classP; rewrite //= quotient_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nilpotent_sub_norm G H : nilpotent G -> H \\subset G -> 'N_G(H) \\subset H -> G :=: H.",
            "VernacStartTheoremProof",
            "1e6b303c81de6258642f1aabd72317f4dd7f5c01"
        ],
        [
            "move=> nilG sHG sNH; apply/eqP; rewrite eqEsubset sHG andbT; apply/negP=> nsGH.",
            "VernacExtend",
            "42e188f64c1b305ed274c1704aedbf73891c3017"
        ],
        [
            "have{nsGH} [i sZH []]: exists2 i, 'Z_i(G) \\subset H & ~ 'Z_i.+1(G) \\subset H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/ucnP: nilG => n ZnG; rewrite -{}ZnG in nsGH.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "elim: n => [|i IHi] in nsGH *; first by rewrite sub1G in nsGH.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case sZH: ('Z_i(G) \\subset H); [exists i | apply: IHi; rewrite sZH].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: subset_trans sNH; rewrite subsetI ucn_sub -commg_subr.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: subset_trans sZH; apply: subset_trans (ucn_comm i G); apply: commgS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nilpotent_proper_norm G H : nilpotent G -> H \\proper G -> H \\proper 'N_G(H).",
            "VernacStartTheoremProof",
            "23f3ec950a2f98a0492e856c9bbc5ca04005bdfe"
        ],
        [
            "move=> nilG; rewrite properEneq properE subsetI normG => /andP[neHG sHG].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite sHG; apply: contra neHG => /(nilpotent_sub_norm nilG)->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nilpotent_subnormal G H : nilpotent G -> H \\subset G -> H <|<| G.",
            "VernacStartTheoremProof",
            "cf38f09c3db56985227f0e449080b68c24d7ca50"
        ],
        [
            "move=> nilG; elim: {H}_.+1 {-2}H (ltnSn (#|G| - #|H|)) => // m IHm H.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "rewrite ltnS => leGHm sHG.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [->|] := eqVproper sHG; first exact: subnormal_refl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/(nilpotent_proper_norm nilG); set K := 'N_G(H) => prHK.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have snHK: H <|<| K by rewrite normal_subnormal ?normalSG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sKG: K \\subset G by rewrite subsetIl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: subnormal_trans snHK (IHm _ (leq_trans _ leGHm) sKG).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite ltn_sub2l ?proper_card ?(proper_sub_trans prHK).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma TI_center_nil G H : nilpotent G -> H <| G -> H :&: 'Z(G) = 1 -> H :=: 1.",
            "VernacStartTheoremProof",
            "ad3d1d0121f6c14dd43c1770eb0d87bb2dc6b737"
        ],
        [
            "move=> nilG /andP[sHG nHG] tiHZ.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -{1}(setIidPl sHG); have{nilG} /ucnP[n <-] := nilG.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "elim: n => [|n IHn]; apply/trivgP; rewrite ?subsetIr // -tiHZ.",
            "VernacExtend",
            "8c9e5024ec19e13281e0187dab3d65b93b116a6a"
        ],
        [
            "rewrite [H :&: 'Z(G)]setIA subsetI setIS ?ucn_sub //= (sameP commG1P trivgP).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -commg_subr commGC in nHG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -IHn subsetI (subset_trans _ nHG) ?commSg ?subsetIl //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (subset_trans _ (ucn_comm n G)) ?commSg ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_center_nil G H : nilpotent G -> H <| G -> H :!=: 1 -> H :&: 'Z(G) != 1.",
            "VernacStartTheoremProof",
            "f95fac91c4263ea1231602aca12a10ebe10187e6"
        ],
        [
            "by move=> nilG nsHG; apply: contraNneq => /TI_center_nil->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma center_nil_eq1 G : nilpotent G -> ('Z(G) == 1) = (G :==: 1).",
            "VernacStartTheoremProof",
            "209e20e5cbb954e6c8fe47c7510aa24e438ca2c5"
        ],
        [
            "move=> nilG; apply/eqP/eqP=> [Z1 | ->]; last exact: center1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (TI_center_nil nilG) // (setIidPr (center_sub G)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclic_nilpotent_quo_der1_cyclic G : nilpotent G -> cyclic (G / G^`(1)) -> cyclic G.",
            "VernacStartTheoremProof",
            "0f09b001e04401fd6c1f219fe2190a6cddbf7637"
        ],
        [
            "move=> nG; rewrite (isog_cyclic (quotient1_isog G)).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have [-> // | ntG' cGG'] := (eqVneq G^`(1) 1)%g.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices: 'L_2(G) \\subset G :&: 'L_3(G) by move/(eqfun_inP nG)=> <-.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite subsetI lcn_sub /= -quotient_cents2 ?lcn_norm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: cyclic_factor_abelian (lcn_central 2 G) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite (isog_cyclic (third_isog _ _ _)) ?lcn_normal // lcn_subS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End QuotientNil.",
            "VernacEndSegment",
            "834e1372c8b7325f96f452ef5ca0d35740ffa447"
        ],
        [
            "Section Solvable.",
            "VernacBeginSection",
            "761896061dace26adf60342421e8b41c692fcdb7"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types G H : {group gT}.",
            "VernacReserve",
            "2d1554a20c0748003cfaab87843b3f58de3d66ce"
        ],
        [
            "Lemma nilpotent_sol G : nilpotent G -> solvable G.",
            "VernacStartTheoremProof",
            "e9ad3ec4bf99af5501423237e68be0072ad6a674"
        ],
        [
            "move=> nilG; apply/forall_inP=> H /subsetIP[sHG sHH'].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite (forall_inP nilG) // subsetI sHG (subset_trans sHH') ?commgS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abelian_sol G : abelian G -> solvable G.",
            "VernacStartTheoremProof",
            "4b41a113e00892205309824c007648da073199a2"
        ],
        [
            "by move/abelian_nil/nilpotent_sol.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma solvable1 : solvable [1 gT].",
            "VernacStartTheoremProof",
            "aa79027e0c0f08df19233dd02f41728c2f89c34d"
        ],
        [
            "exact: abelian_sol (abelian1 gT).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma solvableS G H : H \\subset G -> solvable G -> solvable H.",
            "VernacStartTheoremProof",
            "d5096bb7dff42e5f9eec07605628c41669f8b71e"
        ],
        [
            "move=> sHG solG; apply/forall_inP=> K /subsetIP[sKH sKK'].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite (forall_inP solG) // subsetI (subset_trans sKH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sol_der1_proper G H : solvable G -> H \\subset G -> H :!=: 1 -> H^`(1) \\proper H.",
            "VernacStartTheoremProof",
            "82fcace71fcf453f5427a71497448964473b9311"
        ],
        [
            "move=> solG sHG ntH; rewrite properE comm_subG //; apply: implyP ntH.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by have:= forallP solG H; rewrite subsetI sHG implybNN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivedP G : reflect (exists n, G^`(n) = 1) (solvable G).",
            "VernacStartTheoremProof",
            "c01b55b8c3abd3cef15ac919ac738bcbb7a08f8d"
        ],
        [
            "apply: (iffP idP) => [solG | [n solGn]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/forall_inP=> H /subsetIP[sHG sHH'].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -subG1 -{}solGn; elim: n => // n IHn.",
            "VernacExtend",
            "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
        ],
        [
            "exact: subset_trans sHH' (commgSS _ _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "suffices IHn n: #|G^`(n)| <= (#|G|.-1 - n).+1.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by exists #|G|.-1; rewrite [G^`(_)]card_le1_trivg ?(leq_trans (IHn _)) ?subnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: n => [|n IHn]; first by rewrite subn0 prednK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite dergSn subnS -ltnS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [-> | ntGn] := eqVneq G^`(n) 1; first by rewrite commG1 cards1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (_ - _) IHn => [|n']; first by rewrite leqNgt cardG_gt1 ntGn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: leq_trans (proper_card _); apply: sol_der1_proper (der_sub _ _) _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Solvable.",
            "VernacEndSegment",
            "1ae0ea714213b8de960e5aedfdc2332c9e6baa61"
        ],
        [
            "Section MorphSol.",
            "VernacBeginSection",
            "1bfbb348fdab85177a47c1c97ffea7a6dd198702"
        ],
        [
            "Variables (gT rT : finGroupType) (D : {group gT}) (f : {morphism D >-> rT}).",
            "VernacAssumption",
            "944231f8f6fa13f052da0e9f920e07639709a90d"
        ],
        [
            "Variable G : {group gT}.",
            "VernacAssumption",
            "a4eac84d173e53c6bd7c7941e403af4d790fced0"
        ],
        [
            "Lemma morphim_sol : solvable G -> solvable (f @* G).",
            "VernacStartTheoremProof",
            "884ee7725c9f24eb3ca1941e7a94c1928dbe01f5"
        ],
        [
            "move/(solvableS (subsetIr D G)); case/derivedP=> n Gn1; apply/derivedP.",
            "VernacExtend",
            "599696354cb09c8c644616c1d1d4983c13c50850"
        ],
        [
            "by exists n; rewrite /= -morphimIdom -morphim_der ?subsetIl // Gn1 morphim1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_sol : 'injm f -> G \\subset D -> solvable (f @* G) = solvable G.",
            "VernacStartTheoremProof",
            "d5907b53772205651c07a34441d22ca77dfb2703"
        ],
        [
            "move=> injf sGD; apply/idP/idP; last exact: morphim_sol.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/derivedP=> n Gn1; apply/derivedP; exists n; apply/trivgP.",
            "VernacExtend",
            "46ade0c33d01760703e2e2f13038f69f0850a0e8"
        ],
        [
            "by rewrite -(injmSK injf) ?gFsub_trans ?morphim_der // Gn1 morphim1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MorphSol.",
            "VernacEndSegment",
            "bd6681dedd206029a49dd488abb3c0213bfe5916"
        ],
        [
            "Section QuotientSol.",
            "VernacBeginSection",
            "d1abb7ebf5d307ec8b143f2fb84cd0d7c252ecc8"
        ],
        [
            "Variables gT rT : finGroupType.",
            "VernacAssumption",
            "d0606865fe35dc84526826fe2f9a000ef092dd0a"
        ],
        [
            "Implicit Types G H K : {group gT}.",
            "VernacReserve",
            "d934fb2556cba7e244425668dbf69ab4b3ba551e"
        ],
        [
            "Lemma isog_sol G (L : {group rT}) : G \\isog L -> solvable G = solvable L.",
            "VernacStartTheoremProof",
            "39d7c9b77b047184ba2199d6390ea3fc5870c750"
        ],
        [
            "by case/isogP=> f injf <-; rewrite injm_sol.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quotient_sol G H : solvable G -> solvable (G / H).",
            "VernacStartTheoremProof",
            "b814460e4c6e3d4daaf8d1195a424b493de753ec"
        ],
        [
            "exact: morphim_sol.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma series_sol G H : H <| G -> solvable G = solvable H && solvable (G / H).",
            "VernacStartTheoremProof",
            "7f1dd1824fd40183fc13c72fc2c6f7e4b05d4ebe"
        ],
        [
            "case/andP=> sHG nHG; apply/idP/andP=> [solG | [solH solGH]].",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by rewrite quotient_sol // (solvableS sHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/forall_inP=> K /subsetIP[sKG sK'K].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "suffices sKH: K \\subset H by rewrite (forall_inP solH) // subsetI sKH.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "have nHK := subset_trans sKG nHG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -quotient_sub1 // subG1 (forall_inP solGH) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subsetI -morphimR ?morphimS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma metacyclic_sol G : metacyclic G -> solvable G.",
            "VernacStartTheoremProof",
            "1943182de2dd274664aaa2707a777e085a865df3"
        ],
        [
            "case/metacyclicP=> K [cycK nsKG cycGq].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (series_sol nsKG) !abelian_sol ?cyclic_abelian.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End QuotientSol.",
            "VernacEndSegment",
            "ee7f230bd0ab323b79e0962115eaee3c83030f9c"
        ]
    ],
    "proofs": [
        {
            "name": "nilpotent1",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "by apply/forall_inP=> H; rewrite commG1 setIid -subG1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nilpotentS",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "move=> sBA nilA; apply/forall_inP=> H sHR.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "have:= forallP nilA H; rewrite (subset_trans sHR) //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by apply: subset_trans (setIS _ _) (setSI _ _); rewrite ?commgS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_comm_properl",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "move=> nilG sHG ntH; rewrite subsetI properE; case/andP=> sAG nHA.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "rewrite (subset_trans (commgS H (subset_gen A))) ?commg_subl ?gen_subG //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: contra ntH => sHR; have:= forallP nilG H; rewrite subsetI sHG.",
                        "VernacExtend",
                        "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subset_trans sHR) ?commgS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_comm_properr",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "by rewrite commGC; apply: nil_comm_properl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centrals_nil",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "move=> cGs defG; apply/forall_inP=> H /subsetIP[sHG sHR].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "move: sHG; rewrite -{}defG -subG1 -[1]/(gval 1%G).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "elim: s 1%G cGs => //= L s IHs K /andP[/and3P[sRK sKL sLG] /IHs sHL] sHs.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "exact: subset_trans sHR (subset_trans (commSg _ (sHL sHs)) sRK).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn0",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn1",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcnSn",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcnSnS",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "by case: n => //; apply: der1_subG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcnE",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn2",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_group_set",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "by case: n => [|[|n]]; apply: groupP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_char",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "by case: n; last elim=> [|n IHn]; rewrite ?char_refl ?lcnSn ?charR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_normal",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "exact/char_normal/lcn_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_sub",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "exact/char_sub/lcn_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_norm",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "exact/char_norm/lcn_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_subS",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "case: n => // n; rewrite lcnSn commGC commg_subr.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case/andP: (lcn_normal n.+1 G).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_normalS",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "by apply: normalS (lcn_normal _ _); rewrite (lcn_subS, lcn_sub).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_central",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "case: n => [|n]; first by rewrite trivg_quotient sub1G.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite subsetI quotientS ?lcn_sub ?quotient_cents2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_sub_leq",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "by move/subnK <-; elim: {m}(m - n) => // m; apply: subset_trans (lcn_subS _ _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcnS",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by case: n => // n sAB; elim: n => // n IHn; rewrite !lcnSn genS ?imset2S.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_cprod",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "case: n => // n /cprodP[[H K -> ->{A B}] defG cHK].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have sL := subset_trans (lcn_sub _ _); rewrite cprodE ?(centSS _ _ cHK) ?sL //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "symmetry; elim: n => // n; rewrite lcnSn => ->; rewrite commMG /=; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: subset_trans (commg_normr _ _); rewrite sL // -defG mulG_subr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -!(commGC G) -defG -{1}(centC cHK).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite !commMG ?normsR ?lcn_norm ?cents_norm // 1?centsC //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!(commGC 'L__(_)) -!lcnSn !(commG1P _) ?mul1g ?sL // centsC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_dprod",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "move=> defG; have [[K H defA defB] _ _ tiAB] := dprodP defG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite !dprodEcp // in defG *; first exact: lcn_cprod.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite defA defB; apply/trivgP; rewrite -tiAB defA defB setISS ?lcn_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "der_cprod",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "by move=> defG; elim: n => {defG}// n; apply: (lcn_cprod 2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "der_dprod",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "by move=> defG; elim: n => {defG}// n; apply: (lcn_dprod 2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_bigcprod",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first exact/esym/trivgP/lcn_sub.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(lcn_cprod n dG); have [[_ H _ dH]] := cprodP dG; rewrite dH (IH H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_bigdprod",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first exact/esym/trivgP/lcn_sub.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(lcn_dprod n dG); have [[_ H _ dH]] := dprodP dG; rewrite dH (IH H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "der_bigcprod",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first by rewrite gF1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(der_cprod n dG); have [[_ H _ dH]] := cprodP dG; rewrite dH (IH H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "der_bigdprod",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first by rewrite gF1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(der_dprod n dG); have [[_ H _ dH]] := dprodP dG; rewrite dH (IH H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nilpotent_class",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "rewrite /nil_class; set s := mkseq _ _.",
                        "VernacExtend",
                        "c1f58f36c5711f022b4a54717f37c2782f34a159"
                    ]
                },
                {
                    "command": [
                        "transitivity (1 \\in s); last by rewrite -index_mem size_mkseq.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/idP/mapP=> {s}/= [nilG | [n _ Ln1]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/forall_inP=> H /subsetIP[sHG sHR].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite -subG1 {}Ln1; elim: n => // n IHn.",
                        "VernacExtend",
                        "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subset_trans sHR) ?commSg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose m := #|G|.-1; exists m; first by rewrite mem_iota /= prednK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite ['L__(G)]card_le1_trivg //= -(subnn m).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: {-2}m => [|n]; [by rewrite subn0 prednK | rewrite lcnSn subnS].",
                        "VernacExtend",
                        "6f713a0299dcb4531f4e0400d0b4ac3fb1e0973c"
                    ]
                },
                {
                    "command": [
                        "case: (eqsVneq 'L_n.+1(G) 1) => [-> | ntLn]; first by rewrite comm1G cards1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (m - n) => [|m' /= IHn]; first by rewrite leqNgt cardG_gt1 ntLn.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -ltnS (leq_trans (proper_card _) IHn) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (nil_comm_properl nilG) ?lcn_sub // subsetI subxx lcn_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_nil_classP",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "rewrite nilpotent_class /nil_class; set s := mkseq _ _.",
                        "VernacExtend",
                        "c1f58f36c5711f022b4a54717f37c2782f34a159"
                    ]
                },
                {
                    "command": [
                        "set c := index 1 s => lt_c_G; case: leqP => [le_c_n | lt_n_c].",
                        "VernacExtend",
                        "4a95f82aca0fc9a50f43053eca44fc9141212abe"
                    ]
                },
                {
                    "command": [
                        "have Lc1: nth 1 s c = 1 by rewrite nth_index // -index_mem size_mkseq.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by left; apply/trivgP; rewrite -Lc1 nth_mkseq ?lcn_sub_leq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "right; apply/eqP/negPf; rewrite -(before_find 1 lt_n_c) nth_mkseq //.",
                        "VernacExtend",
                        "aa5d3d3809614a8d5257883779e1164202708f44"
                    ]
                },
                {
                    "command": [
                        "exact: ltn_trans lt_n_c lt_c_G.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcnP",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [nilG | [n Ln1]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by exists (nil_class G); apply/lcn_nil_classP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/forall_inP=> H /subsetIP[sHG sHR]; rewrite -subG1 -{}Ln1.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by elim: n => // n IHn; rewrite (subset_trans sHR) ?commSg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abelian_nil",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "by move=> abG; apply/lcnP; exists 1%N; apply/commG1P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_class0",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "apply/idP/eqP=> [nilG | ->].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply/(lcn_nil_classP 0); rewrite ?nilpotent_class (eqP nilG) ?cardG_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -leqn0; apply/(lcn_nil_classP 0); rewrite ?nilpotent1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_class1",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "have [-> | ntG] := eqsVneq G 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite abelian1 leq_eqVlt ltnS leqn0 nil_class0 eqxx orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/idP/idP=> cGG.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply/commG1P; apply/(lcn_nil_classP 1); rewrite // nilpotent_class.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "by rewrite (leq_ltn_trans cGG) // cardG_gt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/(lcn_nil_classP 1); rewrite ?abelian_nil //; apply/commG1P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulg_nil",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "by move=> cGH; rewrite -(cprod_nil (cprodEY cGH)) /= cent_joinEr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_nil",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "by case/dprodP=> [[H K -> ->] <- cHK _]; rewrite mulg_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bigdprod_nil",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "move=> defG nilA; elim/big_rec: _ => [|i B Pi nilB] in G defG *.",
                        "VernacExtend",
                        "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
                    ]
                },
                {
                    "command": [
                        "by rewrite -defG nilpotent1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [[_ H _ defB] _ _ _] := dprodP defG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (dprod_nil defG) nilA //= defB nilB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcn_cont",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "case: n => //; elim=> // n IHn g0T h0T H phi.",
                        "VernacExtend",
                        "1821533cafd21deefc2f797d67a58b45e0a54e79"
                    ]
                },
                {
                    "command": [
                        "by rewrite !lcnSn morphimR ?lcn_sub // commSg ?IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_pmap",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n' [hZ defZ]]; first by exists trivGfun_pgFun.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists [pgFun of @center %% hZ]; rewrite /= -defZ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_group_set",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "by have [hZ ->] := ucn_pmap; apply: groupP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_sub",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "by have [hZ ->] := ucn_pmap; apply: gFsub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphim_ucn",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "by have [hZ ->] := ucn_pmap; apply: pmorphimF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_char",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "exact: gFchar.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_norm",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "exact: gFnorm.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_normal",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "exact: gFnormal.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn0",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucnSn",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucnE",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_subS",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}['Z_n(G)]ker_coset morphpreS ?sub1G.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_sub_geq",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "move/subnK <-; elim: {n}(n - m) => // n IHn.",
                        "VernacExtend",
                        "b2c453bcfb72d2a5d1b17de8ea415b01549924fb"
                    ]
                },
                {
                    "command": [
                        "exact: subset_trans (ucn_subS _ _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_central",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "by rewrite ucnSn cosetpreK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_normalS",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "by rewrite (normalS _ _ (ucn_normal n G)) ?ucn_subS ?ucn_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_comm",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "rewrite -quotient_cents2 ?normal_norm ?ucn_normal ?ucn_normalS //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ucn_central subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucnSnR",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite inE -(setIidPr (ucn_sub n.+1 G)) inE ucnSn.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case Gx: (x \\in G) => //=; have nZG := ucn_norm n G.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub1set -sub_quotient_pre -?quotient_cents2 ?sub1set ?(subsetP nZG) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite subsetI quotientS ?sub1set.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_dprod",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "move=> defG; have [[K H defA defB] _ _ tiAB] := dprodP defG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite !dprodEcp // in defG *; first exact: ucn_cprod.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite defA defB; apply/trivgP; rewrite -tiAB defA defB setISS ?ucn_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_bigcprod",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first by rewrite gF1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(ucn_cprod n dG); have [[_ H _ dH]] := cprodP dG; rewrite dH (IH H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_bigdprod",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ G => [_ <- | i A Z _ IH G dG]; first by rewrite gF1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(ucn_dprod n dG); have [[_ H _ dH]] := dprodP dG; rewrite dH (IH H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_lcnP",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "rewrite !eqEsubset sub1G ucn_sub /= andbT -(ucn0 G).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: {1 3}n 0 (addn0 n) => [j <- //|i IHi j].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite addSnnS => /IHi <- {IHi}; rewrite ucnSn lcnSn.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub_morphim_pre ?gFsub_trans ?gFnorm_trans // subsetI.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite morphimS ?gFsub // quotient_cents2 ?gFsub_trans ?gFnorm_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucnP",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "apply: (iffP (lcnP G)) => -[n /eqP-clGn]; by exists n; apply/eqP; rewrite ucn_lcnP in clGn *.",
                        "VernacExtend",
                        "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_nil_classP",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "move=> nilG; rewrite (sameP (lcn_nil_classP n nilG) eqP) ucn_lcnP; apply: eqP.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_id",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "exact: gFid.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ucn_nilpotent",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "by apply/ucnP; exists n; rewrite ucn_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_class_ucn",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "by apply/ucn_nil_classP; rewrite ?ucn_nilpotent ?ucn_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphim_lcn",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "move=> sHG; case: n => //; elim=> // n IHn.",
                        "VernacExtend",
                        "187ad808ee6de4dff84783107b9e6a55b80f8797"
                    ]
                },
                {
                    "command": [
                        "by rewrite !lcnSn -IHn morphimR // (subset_trans _ sHG) // lcn_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injm_ucn",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "exact: injmF.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_class_morphim",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "move=> nilG; rewrite (sameP (ucn_nil_classP _ (morphim_nil nilG)) eqP) /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqEsubset ucn_sub -{1}(ucn_nil_classP _ nilG (leqnn _)) morphim_ucn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_class_injm",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "move=> injf sGD; case nilG: (nilpotent G).",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_leq nil_class_morphim //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite (sameP (lcn_nil_classP _ nilG) eqP) -subG1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(injmSK injf) ?gFsub_trans // morphim1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite morphim_lcn // (lcn_nil_classP _ _ (leqnn _)) //= injm_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "transitivity #|G|; apply/eqP; rewrite eqn_leq.",
                        "VernacExtend",
                        "8a9228a0204aa40c4e0c8d890d336645e098bffc"
                    ]
                },
                {
                    "command": [
                        "rewrite -(card_injm injf sGD) (leq_trans (index_size _ _)) ?size_mkseq //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite leqNgt -nilpotent_class injm_nil ?nilG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (leq_trans (index_size _ _)) ?size_mkseq // leqNgt -nilpotent_class.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite nilG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quotient_ucn_add",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "elim: m => [|m IHm]; first exact: trivg_quotient.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> Zx; have [x Nx ->{Zx}] := cosetP Zx.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "have [sZG nZG] := andP (ucn_normal n G).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (ucnSnR m) inE -!sub1set -morphim_set1 //= -quotientR ?sub1set // -IHm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite !quotientSGK ?(ucn_sub_geq, leq_addl, comm_subG _ nZG, sub1set) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addSn /= ucnSnR inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isog_nil",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "by case/isogP=> f injf <-; rewrite injm_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isog_nil_class",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "by case/isogP=> f injf <-; rewrite nil_class_injm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quotient_nil",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "exact: morphim_nil.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nilpotent_sub_norm",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "move=> nilG sHG sNH; apply/eqP; rewrite eqEsubset sHG andbT; apply/negP=> nsGH.",
                        "VernacExtend",
                        "42e188f64c1b305ed274c1704aedbf73891c3017"
                    ]
                },
                {
                    "command": [
                        "have{nsGH} [i sZH []]: exists2 i, 'Z_i(G) \\subset H & ~ 'Z_i.+1(G) \\subset H.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/ucnP: nilG => n ZnG; rewrite -{}ZnG in nsGH.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "elim: n => [|i IHi] in nsGH *; first by rewrite sub1G in nsGH.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case sZH: ('Z_i(G) \\subset H); [exists i | apply: IHi; rewrite sZH].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: subset_trans sNH; rewrite subsetI ucn_sub -commg_subr.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: subset_trans sZH; apply: subset_trans (ucn_comm i G); apply: commgS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nilpotent_proper_norm",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "move=> nilG; rewrite properEneq properE subsetI normG => /andP[neHG sHG].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite sHG; apply: contra neHG => /(nilpotent_sub_norm nilG)->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nilpotent_subnormal",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "move=> nilG; elim: {H}_.+1 {-2}H (ltnSn (#|G| - #|H|)) => // m IHm H.",
                        "VernacExtend",
                        "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS => leGHm sHG.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have [->|] := eqVproper sHG; first exact: subnormal_refl.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/(nilpotent_proper_norm nilG); set K := 'N_G(H) => prHK.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "have snHK: H <|<| K by rewrite normal_subnormal ?normalSG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sKG: K \\subset G by rewrite subsetIl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: subnormal_trans snHK (IHm _ (leq_trans _ leGHm) sKG).",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltn_sub2l ?proper_card ?(proper_sub_trans prHK).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TI_center_nil",
            "line_nb": 444,
            "steps": [
                {
                    "command": [
                        "move=> nilG /andP[sHG nHG] tiHZ.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}(setIidPl sHG); have{nilG} /ucnP[n <-] := nilG.",
                        "VernacExtend",
                        "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
                    ]
                },
                {
                    "command": [
                        "elim: n => [|n IHn]; apply/trivgP; rewrite ?subsetIr // -tiHZ.",
                        "VernacExtend",
                        "8c9e5024ec19e13281e0187dab3d65b93b116a6a"
                    ]
                },
                {
                    "command": [
                        "rewrite [H :&: 'Z(G)]setIA subsetI setIS ?ucn_sub //= (sameP commG1P trivgP).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -commg_subr commGC in nHG.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -IHn subsetI (subset_trans _ nHG) ?commSg ?subsetIl //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subset_trans _ (ucn_comm n G)) ?commSg ?subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet_center_nil",
            "line_nb": 453,
            "steps": [
                {
                    "command": [
                        "by move=> nilG nsHG; apply: contraNneq => /TI_center_nil->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "center_nil_eq1",
            "line_nb": 456,
            "steps": [
                {
                    "command": [
                        "move=> nilG; apply/eqP/eqP=> [Z1 | ->]; last exact: center1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (TI_center_nil nilG) // (setIidPr (center_sub G)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nilpotent_sol",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "move=> nilG; apply/forall_inP=> H /subsetIP[sHG sHH'].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite (forall_inP nilG) // subsetI sHG (subset_trans sHH') ?commgS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abelian_sol",
            "line_nb": 476,
            "steps": [
                {
                    "command": [
                        "by move/abelian_nil/nilpotent_sol.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "solvable1",
            "line_nb": 479,
            "steps": [
                {
                    "command": [
                        "exact: abelian_sol (abelian1 gT).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "solvableS",
            "line_nb": 482,
            "steps": [
                {
                    "command": [
                        "move=> sHG solG; apply/forall_inP=> K /subsetIP[sKH sKK'].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite (forall_inP solG) // subsetI (subset_trans sKH).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sol_der1_proper",
            "line_nb": 486,
            "steps": [
                {
                    "command": [
                        "move=> solG sHG ntH; rewrite properE comm_subG //; apply: implyP ntH.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "by have:= forallP solG H; rewrite subsetI sHG implybNN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivedP",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [solG | [n solGn]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/forall_inP=> H /subsetIP[sHG sHH'].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite -subG1 -{}solGn; elim: n => // n IHn.",
                        "VernacExtend",
                        "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
                    ]
                },
                {
                    "command": [
                        "exact: subset_trans sHH' (commgSS _ _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "suffices IHn n: #|G^`(n)| <= (#|G|.-1 - n).+1.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by exists #|G|.-1; rewrite [G^`(_)]card_le1_trivg ?(leq_trans (IHn _)) ?subnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: n => [|n IHn]; first by rewrite subn0 prednK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite dergSn subnS -ltnS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [-> | ntGn] := eqVneq G^`(n) 1; first by rewrite commG1 cards1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (_ - _) IHn => [|n']; first by rewrite leqNgt cardG_gt1 ntGn.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans (proper_card _); apply: sol_der1_proper (der_sub _ _) _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isog_sol",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "by case/isogP=> f injf <-; rewrite injm_sol.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quotient_sol",
            "line_nb": 523,
            "steps": [
                {
                    "command": [
                        "exact: morphim_sol.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "series_sol",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "case/andP=> sHG nHG; apply/idP/andP=> [solG | [solH solGH]].",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "by rewrite quotient_sol // (solvableS sHG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/forall_inP=> K /subsetIP[sKG sK'K].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "suffices sKH: K \\subset H by rewrite (forall_inP solH) // subsetI sKH.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "have nHK := subset_trans sKG nHG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -quotient_sub1 // subG1 (forall_inP solGH) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite subsetI -morphimR ?morphimS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "metacyclic_sol",
            "line_nb": 535,
            "steps": [
                {
                    "command": [
                        "case/metacyclicP=> K [cycK nsKG cycGq].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (series_sol nsKG) !abelian_sol ?cyclic_abelian.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}