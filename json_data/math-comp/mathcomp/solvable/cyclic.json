{
    "filename": "mathcomp/solvable/cyclic.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq div fintype bigop.",
            "VernacRequire",
            "29a62fee89db54106f7793e931e4487aa2b19076"
        ],
        [
            "From mathcomp Require Import prime finset fingroup morphism perm automorphism quotient.",
            "VernacRequire",
            "694ce5a4624b2154a4b6fb2994c92512898ba6c6"
        ],
        [
            "From mathcomp Require Import gproduct ssralg finalg zmodp poly.",
            "VernacRequire",
            "73bb2eb3aaa1ea01a1ad9c2c3882debc6fc8c77e"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope GRing.Theory.",
            "VernacImport",
            "e9e593badced32f8de606b9f182143860064d3fd"
        ],
        [
            "Section Cyclic.",
            "VernacBeginSection",
            "01b9908299b6cbf1e95b44285f315aac815b5f33"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types (a x y : gT) (A B : {set gT}) (G K H : {group gT}).",
            "VernacReserve",
            "d89d2f2013969330b033710e31137b9248fb42e3"
        ],
        [
            "Definition cyclic A := [exists x, A == <[x]>].",
            "VernacDefinition",
            "3430bd17ebc31f294a96b090d0ec784d3e54a733"
        ],
        [
            "Lemma cyclicP A : reflect (exists x, A = <[x]>) (cyclic A).",
            "VernacStartTheoremProof",
            "712b7fecd038e9449d776d1e182fd8395853a8e5"
        ],
        [
            "exact: exists_eqP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cycle_cyclic x : cyclic <[x]>.",
            "VernacStartTheoremProof",
            "60eb71800cb7a1d0b527ee9ef93a78db331f2bd3"
        ],
        [
            "by apply/cyclicP; exists x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclic1 : cyclic [1 gT].",
            "VernacStartTheoremProof",
            "5303ad0bacd2a0d777725d28375ee92cef0b591d"
        ],
        [
            "by rewrite -cycle1 cycle_cyclic.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Zpm.",
            "VernacBeginSection",
            "af14da5e7fc5d84e8b82b5220efb395076d37442"
        ],
        [
            "Variable a : gT.",
            "VernacAssumption",
            "7dd414799c16daa3ac9662ed9beb2f6ca21776a6"
        ],
        [
            "Definition Zpm (i : 'Z_#[a]) := a ^+ i.",
            "VernacDefinition",
            "799fefbe89f9117ba44e170bc9a0c9baf64e645f"
        ],
        [
            "Lemma ZpmM : {in Zp #[a] &, {morph Zpm : x y / x * y}}.",
            "VernacStartTheoremProof",
            "afe36e48555a1992fe514a363416f700e9577d40"
        ],
        [
            "rewrite /Zpm; case: (eqVneq a 1) => [-> | nta] i j _ _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite !expg1n ?mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /= {3}Zp_cast ?order_gt1 // expg_mod_order expgD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Zpm_morphism := Morphism ZpmM.",
            "VernacDefinition",
            "b5b0541888b154e7f1b59d26fc10329c732c16d4"
        ],
        [
            "Lemma im_Zpm : Zpm @* Zp #[a] = <[a]>.",
            "VernacStartTheoremProof",
            "9ad43f5d30e63a7c0e19cf8026e0daae7daffc24"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEcard cycle_subG /= andbC morphimEdom.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (leq_trans (leq_imset_card _ _)) ?card_Zp //= /Zp order_gt1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: eqP => /= [a1 | _]; first by rewrite imset_set1 morph1 a1 set11.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/imsetP; exists 1%R; rewrite ?expg1 ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_Zpm : 'injm Zpm.",
            "VernacStartTheoremProof",
            "eed2551191ce46c25c5afaf51387c99a9cf95db8"
        ],
        [
            "apply/injmP/dinjectiveP/card_uniqP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite size_map -cardE card_Zp //= {7}/order -im_Zpm morphimEdom /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_card => x; apply/imageP/imsetP=> [] [i Zp_i ->]; exists i.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_expg_mod_order m n : (a ^+ m == a ^+ n) = (m == n %[mod #[a]]).",
            "VernacStartTheoremProof",
            "411cad359b32cc1f6cb0c9436eb44949ce0a6594"
        ],
        [
            "have [->|] := eqVneq a 1; first by rewrite order1 !modn1 !expg1n eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -order_gt1 => lt1a; have ZpT: Zp #[a] = setT by rewrite /Zp lt1a.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "have: injective Zpm by move=> i j; apply (injmP injm_Zpm); rewrite /= ZpT inE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/inj_eq=> eqZ; symmetry; rewrite -(Zp_cast lt1a).",
            "VernacExtend",
            "7d7dbc461628e3c5ab8fc0bd4c5735707abb3cca"
        ],
        [
            "by rewrite -[_ == _](eqZ (inZp m) (inZp n)) /Zpm /= Zp_cast ?expg_mod_order.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_isom : isom (Zp #[a]) <[a]> Zpm.",
            "VernacStartTheoremProof",
            "30a58bd241d478cc9e397d2274ca0921388d14b0"
        ],
        [
            "by apply/isomP; rewrite injm_Zpm im_Zpm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_isog : isog (Zp #[a]) <[a]>.",
            "VernacStartTheoremProof",
            "a3f9f461d1c35bcd7cbde1d069becb181830f435"
        ],
        [
            "exact: isom_isog Zp_isom.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Zpm.",
            "VernacEndSegment",
            "c149f3426727c0e958e02cae285dd534d014a768"
        ],
        [
            "Lemma cyclic_abelian A : cyclic A -> abelian A.",
            "VernacStartTheoremProof",
            "fae315ac765f0f28847b75fa81da2a9e091286fd"
        ],
        [
            "by case/cyclicP=> a ->; apply: cycle_abelian.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cycleMsub a b : commute a b -> coprime #[a] #[b] -> <[a]> \\subset <[a * b]>.",
            "VernacStartTheoremProof",
            "da73b85660593d4c963c0760f8abfc080229200c"
        ],
        [
            "move=> cab co_ab; apply/subsetP=> _ /cycleP[k ->].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply/cycleP; exists (chinese #[a] #[b] k 0); symmetry.",
            "VernacExtend",
            "d3d15cfc6568a174968a35bede4b0ecd3bd5e1c8"
        ],
        [
            "rewrite expgMn // -expg_mod_order chinese_modl // expg_mod_order.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /chinese addn0 -mulnA mulnCA expgM expg_order expg1n mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cycleM a b : commute a b -> coprime #[a] #[b] -> <[a * b]> = <[a]> * <[b]>.",
            "VernacStartTheoremProof",
            "1d8efb312027c834b6399f9341212d1ff199bc6d"
        ],
        [
            "move=> cab co_ab; apply/eqP; rewrite eqEsubset -(cent_joinEl (cents_cycle cab)).",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite join_subG {3}cab !cycleMsub // 1?coprime_sym //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -genM_join cycle_subG mem_gen // mem_imset2 ?cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclicM A B : cyclic A -> cyclic B -> B \\subset 'C(A) -> coprime #|A| #|B| -> cyclic (A * B).",
            "VernacStartTheoremProof",
            "8f2161603d74b21c9f41bb886d173e5c3dc3f1cf"
        ],
        [
            "move=> /cyclicP[a ->] /cyclicP[b ->]; rewrite cent_cycle cycle_subG => cab coab.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite -cycleM ?cycle_cyclic //; apply/esym/cent1P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclicY K H : cyclic K -> cyclic H -> H \\subset 'C(K) -> coprime #|K| #|H| -> cyclic (K <*> H).",
            "VernacStartTheoremProof",
            "cb0aebca4df2548d94d2baba4384b72f5a1a6264"
        ],
        [
            "by move=> cycK cycH cKH coKH; rewrite cent_joinEr // cyclicM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma order_dvdn a n : #[a] %| n = (a ^+ n == 1).",
            "VernacStartTheoremProof",
            "9e0439520574da65b8b198d00d150f78b36e684b"
        ],
        [
            "by rewrite (eq_expg_mod_order a n 0) mod0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma order_inf a n : a ^+ n.+1 == 1 -> #[a] <= n.+1.",
            "VernacStartTheoremProof",
            "808158f260be4c1b4c8f1b0c6b682683eabbaa77"
        ],
        [
            "by rewrite -order_dvdn; apply: dvdn_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma order_dvdG G a : a \\in G -> #[a] %| #|G|.",
            "VernacStartTheoremProof",
            "2a26ad9acfb3b05c67431736af51c4cd5a059e1a"
        ],
        [
            "by move=> Ga; apply: cardSg; rewrite cycle_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expg_cardG G a : a \\in G -> a ^+ #|G| = 1.",
            "VernacStartTheoremProof",
            "9b393612c67992a8e9f5fad64ecb751124abf76e"
        ],
        [
            "by move=> Ga; apply/eqP; rewrite -order_dvdn order_dvdG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expg_znat G x k : x \\in G -> x ^+ (k%:R : 'Z_(#|G|))%R = x ^+ k.",
            "VernacStartTheoremProof",
            "2fd1a12b42e4d87eb5aabd81bbbe1255ac75c6e3"
        ],
        [
            "case: (eqsVneq G 1) => [-> /set1P-> | ntG Gx]; first by rewrite !expg1n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite val_Zp_nat ?cardG_gt1 // eq_expg_mod_order.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite modn_dvdm ?order_dvdG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expg_zneg G x (k : 'Z_(#|G|)) : x \\in G -> x ^+ (- k)%R = x ^- k.",
            "VernacStartTheoremProof",
            "7e79617dbf60aebaa41d06dab2e34a1eb4d6e301"
        ],
        [
            "move=> Gx; apply/eqP; rewrite eq_sym eq_invg_mul -expgD.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -(expg_znat _ Gx) natrD natr_Zp natr_negZp subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nt_gen_prime G x : prime #|G| -> x \\in G^# -> G :=: <[x]>.",
            "VernacStartTheoremProof",
            "ecb22da4967f6b09907ba327e8bb2deabdc81286"
        ],
        [
            "move=> Gpr /setD1P[]; rewrite -cycle_subG -cycle_eq1 => ntX sXG.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply/eqP; rewrite eqEsubset sXG andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: contraR ntX => /(prime_TIg Gpr); rewrite (setIidPr sXG) => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nt_prime_order p x : prime p -> x ^+ p = 1 -> x != 1 -> #[x] = p.",
            "VernacStartTheoremProof",
            "2a078f1799bc9678fa58d297afe66bac3792afa6"
        ],
        [
            "move=> p_pr xp ntx; apply/prime_nt_dvdP; rewrite ?order_eq1 //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite order_dvdn xp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orderXdvd a n : #[a ^+ n] %| #[a].",
            "VernacStartTheoremProof",
            "7fbe5352e5e896f65885589a1e36b59625637a56"
        ],
        [
            "by apply: order_dvdG; apply: mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orderXgcd a n : #[a ^+ n] = #[a] %/ gcdn #[a] n.",
            "VernacStartTheoremProof",
            "de3e129629d81fbf67f3415c360f36acbee80748"
        ],
        [
            "apply/eqP; rewrite eqn_dvd; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "rewrite order_dvdn -expgM -muln_divCA_gcd //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite expgM expg_order expg1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [-> | n_gt0] := posnP n; first by rewrite gcdn0 divnn order_gt0 dvd1n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -(dvdn_pmul2r n_gt0) divn_mulAC ?dvdn_gcdl // dvdn_lcm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite order_dvdn mulnC expgM expg_order eqxx dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orderXdiv a n : n %| #[a] -> #[a ^+ n] = #[a] %/ n.",
            "VernacStartTheoremProof",
            "f2349c52b972c00984b96ff0442a5b1cc2ff8f6d"
        ],
        [
            "by case/dvdnP=> q defq; rewrite orderXgcd {2}defq gcdnC gcdnMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orderXexp p m n x : #[x] = (p ^ n)%N -> #[x ^+ (p ^ m)] = (p ^ (n - m))%N.",
            "VernacStartTheoremProof",
            "1d442f2fa1a481d511fccdd6a35ad6f9f183f21f"
        ],
        [
            "move=> ox; have [n_le_m | m_lt_n] := leqP n m.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite -(subnKC n_le_m) subnDA subnn expnD expgM -ox.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite expg_order expg1n order1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite orderXdiv ox ?dvdn_exp2l ?expnB ?(ltnW m_lt_n) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by have:= order_gt0 x; rewrite ox expn_gt0 orbC -(ltn_predK m_lt_n).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orderXpfactor p k n x : #[x ^+ (p ^ k)] = n -> prime p -> p %| n -> #[x] = (p ^ k * n)%N.",
            "VernacStartTheoremProof",
            "03277140ebe57bc610ec6a4b8407047e8373158e"
        ],
        [
            "move=> oxp p_pr dv_p_n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suffices pk_x: p ^ k %| #[x] by rewrite -oxp orderXdiv // mulnC divnK.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite pfactor_dvdn // leqNgt; apply: contraL dv_p_n => lt_x_k.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -oxp -p'natE // -(subnKC (ltnW lt_x_k)) expnD expgM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (pnat_dvd (orderXdvd _ _)) // -p_part // orderXdiv ?dvdn_part //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -{1}[#[x]](partnC p) // mulKn // part_pnat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orderXprime p n x : #[x ^+ p] = n -> prime p -> p %| n -> #[x] = (p * n)%N.",
            "VernacStartTheoremProof",
            "e5b3a95817d191f7c819dc856e47c0ea2261a6d3"
        ],
        [
            "exact: (@orderXpfactor p 1).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orderXpnat m n x : #[x ^+ m] = n -> \\pi(n).-nat m -> #[x] = (m * n)%N.",
            "VernacStartTheoremProof",
            "25be92d3f1a207c6d46afb3cf62b6edeae8561f1"
        ],
        [
            "move=> oxm n_m; have [m_gt0 _] := andP n_m.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "suffices m_x: m %| #[x] by rewrite -oxm orderXdiv // mulnC divnK.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply/dvdn_partP=> // p; rewrite mem_primes => /and3P[p_pr _ p_m].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "have n_p: p \\in \\pi(n) by apply: (pnatP _ _ n_m).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have p_oxm: p %| #[x ^+ (p ^ logn p m)].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: dvdn_trans (orderXdvd _ m`_p^'); rewrite -expgM -p_part ?partnC //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite oxm; rewrite mem_primes in n_p; case/and3P: n_p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite (orderXpfactor (erefl _) p_pr p_oxm) p_part // dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orderM a b : commute a b -> coprime #[a] #[b] -> #[a * b] = (#[a] * #[b])%N.",
            "VernacStartTheoremProof",
            "73e1b7ae481ceb2850b37e65c96dfbf115d20a49"
        ],
        [
            "by move=> cab co_ab; rewrite -coprime_cardMg -?cycleM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition expg_invn A k := (egcdn k #|A|).1.",
            "VernacDefinition",
            "798524073eb5d719a0c00d919843b7ade07458b1"
        ],
        [
            "Lemma expgK G k : coprime #|G| k -> {in G, cancel (expgn^~ k) (expgn^~ (expg_invn G k))}.",
            "VernacStartTheoremProof",
            "5353a3f88473c1da819ed99a6058b3ff0035c096"
        ],
        [
            "move=> coGk x /order_dvdG Gx; apply/eqP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite -expgM (eq_expg_mod_order _ _ 1) -(modn_dvdm 1 Gx).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(chinese_modl coGk 1 0) /chinese mul1n addn0 modn_dvdm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclic_dprod K H G : K \\x H = G -> cyclic K -> cyclic H -> cyclic G = coprime #|K| #|H| .",
            "VernacStartTheoremProof",
            "b9aa5a7076cb5d9f041469afe419bd645ef58cc1"
        ],
        [
            "case/dprodP=> _ defKH cKH tiKH cycK cycH; pose m := lcmn #|K| #|H|.",
            "VernacExtend",
            "61f7313c68f88d92a678d74fe9c99999257a468e"
        ],
        [
            "apply/idP/idP=> [/cyclicP[x defG] | coKH]; last by rewrite -defKH cyclicM.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /coprime -dvdn1 -(@dvdn_pmul2l m) ?lcmn_gt0 ?cardG_gt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite muln_lcm_gcd muln1 -TI_cardMg // defKH defG order_dvdn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /mulsgP[y z Ky Hz ->]: x \\in K * H by rewrite defKH defG cycle_id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -[1]mulg1 expgMn; last exact/commute_sym/(centsP cKH).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; congr (_ * _); apply/eqP; rewrite -order_dvdn.",
            "VernacExtend",
            "fa6171a79bfbc42d0445547471a3cf297b71778a"
        ],
        [
            "exact: dvdn_trans (order_dvdG Ky) (dvdn_lcml _ _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: dvdn_trans (order_dvdG Hz) (dvdn_lcmr _ _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition generator (A : {set gT}) a := A == <[a]>.",
            "VernacDefinition",
            "08c7bc4a79b4793b7a5579a4487c0d86c3d2a00c"
        ],
        [
            "Lemma generator_cycle a : generator <[a]> a.",
            "VernacStartTheoremProof",
            "32770de4329d8740a3889017bac516201979ffd3"
        ],
        [
            "exact: eqxx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cycle_generator a x : generator <[a]> x -> x \\in <[a]>.",
            "VernacStartTheoremProof",
            "23f085bf9f5d16b68ca3cab977834a5057e71619"
        ],
        [
            "by move/(<[a]> =P _)->; apply: cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generator_order a b : generator <[a]> b -> #[a] = #[b].",
            "VernacStartTheoremProof",
            "069567a0f124dddfbb567d07c635d2f435457902"
        ],
        [
            "by rewrite /order => /(<[a]> =P _)->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Cyclic.",
            "VernacEndSegment",
            "232cb3babc4883f5fc42fbe0662ec85ca55734b9"
        ],
        [
            "Arguments cyclic {gT} A%g.",
            "VernacArguments",
            "2728bae1b4affa36864d5b8e6842ab0c8abbdfd8"
        ],
        [
            "Arguments generator {gT} A%g a%g.",
            "VernacArguments",
            "9aba93d94d680876e21b15961e08ea9601171a31"
        ],
        [
            "Arguments expg_invn {gT} A%g k%N.",
            "VernacArguments",
            "e8499ecd41d7dcfcf1960faf45c7df777425a4a8"
        ],
        [
            "Arguments cyclicP {gT A}.",
            "VernacArguments",
            "eff0f8811484f4e932b87ea5093c7f37d2c9f429"
        ],
        [
            "Prenex Implicits cyclic Zpm.",
            "VernacExtend",
            "187a885308143d80892cd165c91e3b8eab4b0381"
        ],
        [
            "Theorem Euler_exp_totient a n : coprime a n -> a ^ totient n = 1 %[mod n].",
            "VernacStartTheoremProof",
            "cecf0a1d58f196eea9658fa42f69da499a3c3b3d"
        ],
        [
            "case: n => [|[|n']] //; [by rewrite !modn1 | set n := n'.+2] => co_a_n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have{co_a_n} Ua: coprime n (inZp a : 'I_n) by rewrite coprime_sym coprime_modl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: FinRing.unit 'Z_n Ua ^+ totient n == 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -card_units_Zp // -order_dvdn order_dvdG ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -2!val_eqE unit_Zp_expg /= -/n modnXm => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Eltm.",
            "VernacBeginSection",
            "25b06ffec5b2e89a43f0877557c19ed44d2e5b4b"
        ],
        [
            "Variables (aT rT : finGroupType) (x : aT) (y : rT).",
            "VernacAssumption",
            "1cc2bfa3ad11a7ea436acade78a66d60de4146ad"
        ],
        [
            "Definition eltm of #[y] %| #[x] := fun x_i => y ^+ invm (injm_Zpm x) x_i.",
            "VernacDefinition",
            "547f6a6d7aeed0d596d3d63945fd50e85a7cb86d"
        ],
        [
            "Hypothesis dvd_y_x : #[y] %| #[x].",
            "VernacAssumption",
            "cefaec87511fa6b73819b28c239735074c4fafc9"
        ],
        [
            "Lemma eltmE i : eltm dvd_y_x (x ^+ i) = y ^+ i.",
            "VernacStartTheoremProof",
            "99ad19636fcab242dabd94a29498a9a65d1c922b"
        ],
        [
            "apply/eqP; rewrite eq_expg_mod_order.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have [x_le1 | x_gt1] := leqP #[x] 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices: #[y] %| 1 by rewrite dvdn1 => /eqP->; rewrite !modn1.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite (dvdn_trans dvd_y_x) // dvdn1 order_eq1 -cycle_eq1 trivg_card_le1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(expg_znat i (cycle_id x)) invmE /=; last by rewrite /Zp x_gt1 inE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite val_Zp_nat // modn_dvdm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eltm_id : eltm dvd_y_x x = y.",
            "VernacStartTheoremProof",
            "58a666ad7189585c2c90d4f00ad7a399cd6681ff"
        ],
        [
            "exact: (eltmE 1).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eltmM : {in <[x]> &, {morph eltm dvd_y_x : x_i x_j / x_i * x_j}}.",
            "VernacStartTheoremProof",
            "0d32a6261a23f9402ce013f91b37a81eefc37e59"
        ],
        [
            "move=> _ _ /cycleP[i ->] /cycleP[j ->].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply/eqP; rewrite -expgD !eltmE expgD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical eltm_morphism := Morphism eltmM.",
            "VernacDefinition",
            "440fef181ac8ea05c175db6e7455436aa4a6c442"
        ],
        [
            "Lemma im_eltm : eltm dvd_y_x @* <[x]> = <[y]>.",
            "VernacStartTheoremProof",
            "9faf63e8b3021f1e953fd714de6c1085196dac13"
        ],
        [
            "by rewrite morphim_cycle ?cycle_id //= eltm_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ker_eltm : 'ker (eltm dvd_y_x) = <[x ^+ #[y]]>.",
            "VernacStartTheoremProof",
            "949133c25dbffe02d846a8b3d5d14c3b087c69c9"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEcard cycle_subG 3!inE mem_cycle /= eltmE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite expg_order eqxx (orderE y) -im_eltm card_morphim setIid -orderE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite orderXdiv ?dvdn_indexg //= leq_divRL ?indexg_gt0 ?Lagrange ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_eltm : 'injm (eltm dvd_y_x) = (#[x] %| #[y]).",
            "VernacStartTheoremProof",
            "21713be853a3370a401463e0638b841045af2c85"
        ],
        [
            "by rewrite ker_eltm subG1 cycle_eq1 -order_dvdn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Eltm.",
            "VernacEndSegment",
            "2c1b924cded38f7c5ef4825f0d9563449c5ed863"
        ],
        [
            "Section CycleSubGroup.",
            "VernacBeginSection",
            "517b41ef6a3287f45cee71c6e33cf96f111e0014"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Lemma cycle_sub_group (a : gT) m : m %| #[a] -> [set H : {group gT} | H \\subset <[a]> & #|H| == m] = [set <[a ^+ (#[a] %/ m)]>%G].",
            "VernacStartTheoremProof",
            "7a4684b949957bf7f5dd6bf20824ac13a8151164"
        ],
        [
            "move=> m_dv_a; have m_gt0: 0 < m by apply: dvdn_gt0 m_dv_a.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have oam: #|<[a ^+ (#[a] %/ m)]>| = m.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite [#|_|]orderXgcd -(divnMr m_gt0) muln_gcdl divnK //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite gcdnC gcdnMr mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite eqEsubset sub1set inE /= cycleX oam eqxx !andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/subsetP=> X; rewrite in_set1 inE -val_eqE /= eqEcard oam.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case/andP=> sXa /eqP oX; rewrite oX leqnn andbT.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "apply/subsetP=> x Xx; case/cycleP: (subsetP sXa _ Xx) => k def_x.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "have: (x ^+ m == 1)%g by rewrite -oX -order_dvdn cardSg // gen_subG sub1set.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {x Xx}def_x -expgM -order_dvdn -[#[a]](Lagrange sXa) -oX mulnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite dvdn_pmul2r // mulnK // => /dvdnP[i ->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite mulnC expgM groupX // cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cycle_subgroup_char a (H : {group gT}) : H \\subset <[a]> -> H \\char <[a]>.",
            "VernacStartTheoremProof",
            "cb9831b8e2a2fb7c90653ddf3b8de526b8943e9a"
        ],
        [
            "move=> sHa; apply: lone_subgroup_char => // J sJa isoJH.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "have dvHa: #|H| %| #[a] by apply: cardSg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{dvHa} /setP Huniq := esym (cycle_sub_group dvHa).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (Huniq H) (Huniq J); rewrite !inE /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite sHa sJa (card_isog isoJH) eqxx => /eqP<- /eqP<-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CycleSubGroup.",
            "VernacEndSegment",
            "fef39da6e5fd79b269531a438ced9e75a1127f48"
        ],
        [
            "Section MorphicImage.",
            "VernacBeginSection",
            "208a48b931155027a1a99cccdc0a542324235d79"
        ],
        [
            "Variables aT rT : finGroupType.",
            "VernacAssumption",
            "c03f9f132a62f50e5b8a55602b7e57809fe23d94"
        ],
        [
            "Variables (D : {group aT}) (f : {morphism D >-> rT}) (x : aT).",
            "VernacAssumption",
            "e4703f580957b3ef49f7525eded25d9a5efd0960"
        ],
        [
            "Hypothesis Dx : x \\in D.",
            "VernacAssumption",
            "4874b24b80b69c5fa6dd28e5088f32c532b86b93"
        ],
        [
            "Lemma morph_order : #[f x] %| #[x].",
            "VernacStartTheoremProof",
            "8e1e9b9eb784d0aa9c51a6d176800639b1d11ad1"
        ],
        [
            "by rewrite order_dvdn -morphX // expg_order morph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morph_generator A : generator A x -> generator (f @* A) (f x).",
            "VernacStartTheoremProof",
            "779fd7c5f00f97baff5a67487ca443e1227927a6"
        ],
        [
            "by move/(A =P _)->; rewrite /generator morphim_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MorphicImage.",
            "VernacEndSegment",
            "eaefcd975e44583ce9a9069a9c76ddea86f94bdf"
        ],
        [
            "Section CyclicProps.",
            "VernacBeginSection",
            "1393eb6eea06ac40aa36ac41a5c7fb7f7b7ac434"
        ],
        [
            "Variables gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types (aT rT : finGroupType) (G H K : {group gT}).",
            "VernacReserve",
            "312712ab8a08dbb24a837eaa2b593b87cf1d5e70"
        ],
        [
            "Lemma cyclicS G H : H \\subset G -> cyclic G -> cyclic H.",
            "VernacStartTheoremProof",
            "52213bd59402c8aca751c334b77d5fc1d2917306"
        ],
        [
            "move=> sHG /cyclicP[x defG]; apply/cyclicP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "exists (x ^+ (#[x] %/ #|H|)); apply/congr_group/set1P.",
            "VernacExtend",
            "ab0051353d22f831c953c6e974144ad4f375be92"
        ],
        [
            "by rewrite -cycle_sub_group /order -defG ?cardSg // inE sHG eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclicJ G x : cyclic (G :^ x) = cyclic G.",
            "VernacStartTheoremProof",
            "585d64d92d9c1c3e6bf042d0b7cef5434128a4c6"
        ],
        [
            "apply/cyclicP/cyclicP=> [[y /(canRL (conjsgK x))] | [y ->]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -cycleJ; exists (y ^ x^-1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists (y ^ x); rewrite cycleJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_subG_cyclic G H K : cyclic G -> H \\subset G -> K \\subset G -> (H :==: K) = (#|H| == #|K|).",
            "VernacStartTheoremProof",
            "526521f3b1d86d18d75d087267a7df2042f89e98"
        ],
        [
            "case/cyclicP=> x -> sHx sKx; apply/eqP/eqP=> [-> //| eqHK].",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "have def_GHx := cycle_sub_group (cardSg sHx); set GHx := [set _] in def_GHx.",
            "VernacExtend",
            "81881a093b2294c76be3b432fbe83612064d7bc9"
        ],
        [
            "have []: H \\in GHx /\\ K \\in GHx by rewrite -def_GHx !inE sHx sKx eqHK /=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by do 2!move/set1P->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardSg_cyclic G H K : cyclic G -> H \\subset G -> K \\subset G -> (#|H| %| #|K|) = (H \\subset K).",
            "VernacStartTheoremProof",
            "ffec9c8661d0d724ea44a3a7782ddffe4f720dfe"
        ],
        [
            "move=> cycG sHG sKG; apply/idP/idP; last exact: cardSg.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/cyclicP: (cyclicS sKG cycG) => x defK; rewrite {K}defK in sKG *.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case/dvdnP=> k ox; suffices ->: H :=: <[x ^+ k]> by apply: cycleX.",
            "VernacExtend",
            "d229520328a78430d3503dbb92bb8fe621f82ca4"
        ],
        [
            "apply/eqP; rewrite (eq_subG_cyclic cycG) ?(subset_trans (cycleX _ _)) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -orderE orderXdiv orderE ox ?dvdn_mulr ?mulKn //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by have:= order_gt0 x; rewrite orderE ox; case k.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_cyclic_char G H : cyclic G -> (H \\char G) = (H \\subset G).",
            "VernacStartTheoremProof",
            "5a4b64f1b8ae104f625eeeedad0104b5dabfc3d4"
        ],
        [
            "case/cyclicP=> x ->; apply/idP/idP => [/andP[] //|].",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "exact: cycle_subgroup_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morphim_cyclic rT G H (f : {morphism G >-> rT}) : cyclic H -> cyclic (f @* H).",
            "VernacStartTheoremProof",
            "2071a12e964f1a34c1aaaaeac1831f619a144e5b"
        ],
        [
            "move=> cycH; wlog sHG: H cycH / H \\subset G.",
            "VernacExtend",
            "6dbaea969dd2e1a08b50e55e2e4c4949c4d27249"
        ],
        [
            "by rewrite -morphimIdom; apply; rewrite (cyclicS _ cycH, subsetIl) ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/cyclicP: cycH sHG => x ->; rewrite gen_subG sub1set => Gx.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by apply/cyclicP; exists (f x); rewrite morphim_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quotient_cycle x H : x \\in 'N(H) -> <[x]> / H = <[coset H x]>.",
            "VernacStartTheoremProof",
            "d1c1ab0c2859235d8c2dd071cc0bfa180e10bf20"
        ],
        [
            "exact: morphim_cycle.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quotient_cyclic G H : cyclic G -> cyclic (G / H).",
            "VernacStartTheoremProof",
            "b271e2840afd1426bfcbf58e9c3243afcc76e305"
        ],
        [
            "exact: morphim_cyclic.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quotient_generator x G H : x \\in 'N(H) -> generator G x -> generator (G / H) (coset H x).",
            "VernacStartTheoremProof",
            "fe6eb2aedfd1ccefa63a7d3aefe60b1e7b2c6a0e"
        ],
        [
            "by move=> Nx; apply: morph_generator.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prime_cyclic G : prime #|G| -> cyclic G.",
            "VernacStartTheoremProof",
            "ba67a25954fc56c401159499ab6343524e4863dd"
        ],
        [
            "case/primeP; rewrite ltnNge -trivg_card_le1.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case/trivgPn=> x Gx ntx /(_ _ (order_dvdG Gx)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite order_eq1 (negbTE ntx) => /eqnP oxG; apply/cyclicP.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by exists x; apply/eqP; rewrite eq_sym eqEcard -oxG cycle_subG Gx leqnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_prime_cyclic G p : prime p -> #|G| %| p -> cyclic G.",
            "VernacStartTheoremProof",
            "755a310cb552b97494144fa61cca1321467a523f"
        ],
        [
            "move=> p_pr pG; case: (eqsVneq G 1) => [-> | ntG]; first exact: cyclic1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite prime_cyclic // (prime_nt_dvdP p_pr _ pG) -?trivg_card1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclic_small G : #|G| <= 3 -> cyclic G.",
            "VernacStartTheoremProof",
            "4ab2239ad796c8eaf164cff42e4251ec8f7a2216"
        ],
        [
            "rewrite 4!(ltnS, leq_eqVlt) -trivg_card_le1 orbA orbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/predU1P=> [-> | oG]; first exact: cyclic1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: prime_cyclic; case/pred2P: oG => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CyclicProps.",
            "VernacEndSegment",
            "c2510a120fc8d22f01544bafa4c38e33c5ad9b48"
        ],
        [
            "Section IsoCyclic.",
            "VernacBeginSection",
            "b5af225ed1ab225c1fc857ff7a29cb2772cf11b5"
        ],
        [
            "Variables gT rT : finGroupType.",
            "VernacAssumption",
            "d0606865fe35dc84526826fe2f9a000ef092dd0a"
        ],
        [
            "Implicit Types (G H : {group gT}) (M : {group rT}).",
            "VernacReserve",
            "0778f9c1d7c5564fd8812b34f662eaf6f734fdd9"
        ],
        [
            "Lemma injm_cyclic G H (f : {morphism G >-> rT}) : 'injm f -> H \\subset G -> cyclic (f @* H) = cyclic H.",
            "VernacStartTheoremProof",
            "9eb0679bf8cfbd207ab240f744c5da6967ae8959"
        ],
        [
            "move=> injf sHG; apply/idP/idP; last exact: morphim_cyclic.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -{2}(morphim_invm injf sHG); apply: morphim_cyclic.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isog_cyclic G M : G \\isog M -> cyclic G = cyclic M.",
            "VernacStartTheoremProof",
            "4fab99b17498dd1873c308896a72380790bc0e48"
        ],
        [
            "by case/isogP=> f injf <-; rewrite injm_cyclic.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isog_cyclic_card G M : cyclic G -> isog G M = cyclic M && (#|M| == #|G|).",
            "VernacStartTheoremProof",
            "8774195a2eeac9d4264ca72e52e1c8bd9ca9f144"
        ],
        [
            "move=> cycG; apply/idP/idP=> [isoGM | ].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite (card_isog isoGM) -(isog_cyclic isoGM) cycG /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/cyclicP: cycG => x ->{G} /andP[/cyclicP[y ->] /eqP oy].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply: isog_trans (isog_symr _) (Zp_isog y); rewrite /order oy Zp_isog.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_generator G H (f : {morphism G >-> rT}) x : 'injm f -> x \\in G -> H \\subset G -> generator (f @* H) (f x) = generator H x.",
            "VernacStartTheoremProof",
            "f48fd633af71dd899c8113d37ea5b9c45056dd24"
        ],
        [
            "move=> injf Gx sHG; apply/idP/idP; last exact: morph_generator.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -{2}(morphim_invm injf sHG) -{2}(invmE injf Gx).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: morph_generator; apply: mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IsoCyclic.",
            "VernacEndSegment",
            "44c65862e11b7cf608929e9ecdd0bc5c87655a83"
        ],
        [
            "Section Metacyclic.",
            "VernacBeginSection",
            "679ecc15d510d61a55a788e791defc31821a9e69"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types (A : {set gT}) (G H : {group gT}).",
            "VernacReserve",
            "4a51012d64c28df66733cdb4dce98ba906b9dc1a"
        ],
        [
            "Definition metacyclic A := [exists H : {group gT}, [&& cyclic H, H <| A & cyclic (A / H)]].",
            "VernacDefinition",
            "ca19bb0aeda156af803b8cc2f8f638de75c4c5d2"
        ],
        [
            "Lemma metacyclicP A : reflect (exists H : {group gT}, [/\\ cyclic H, H <| A & cyclic (A / H)]) (metacyclic A).",
            "VernacStartTheoremProof",
            "b39572a234e4eca1a3548d663b3ad8a2e1a768aa"
        ],
        [
            "exact: 'exists_and3P.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma metacyclic1 : metacyclic 1.",
            "VernacStartTheoremProof",
            "9527c64b7b94b31ea473e71abef3fa1a533ad945"
        ],
        [
            "by apply/existsP; exists 1%G; rewrite normal1 trivg_quotient !cyclic1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclic_metacyclic A : cyclic A -> metacyclic A.",
            "VernacStartTheoremProof",
            "48c2fc07b4eb6906ee7f17ee8d649b6044a8fbe2"
        ],
        [
            "case/cyclicP=> x ->; apply/existsP; exists (<[x]>)%G.",
            "VernacExtend",
            "75a99ddbbb3798cc145bb6c72c2b43f2f61ebbca"
        ],
        [
            "by rewrite normal_refl cycle_cyclic trivg_quotient cyclic1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma metacyclicS G H : H \\subset G -> metacyclic G -> metacyclic H.",
            "VernacStartTheoremProof",
            "6d5aad7375c16f98ceb54a4edc64aab5e8ad00a8"
        ],
        [
            "move=> sHG /metacyclicP[K [cycK nsKG cycGq]]; apply/metacyclicP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "exists (H :&: K)%G; rewrite (cyclicS (subsetIr H K)) ?(normalGI sHG) //=.",
            "VernacExtend",
            "022055b7780f0ce11e1c14753844c87ffbf1f737"
        ],
        [
            "rewrite setIC (isog_cyclic (second_isog _)) ?(cyclicS _ cycGq) ?quotientS //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (subset_trans sHG) ?normal_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Metacyclic.",
            "VernacEndSegment",
            "dabc12ba9e0a755a0ea0008b367f945d7f0239b9"
        ],
        [
            "Arguments metacyclic {gT} A%g.",
            "VernacArguments",
            "917fbc6df04b2e286252e53cced090a6ef11fe83"
        ],
        [
            "Arguments metacyclicP {gT A}.",
            "VernacArguments",
            "6d044daf4f8d5349b68d8463df6ca06ad0b320f7"
        ],
        [
            "Section CyclicAutomorphism.",
            "VernacBeginSection",
            "0a838c356c23ddf57d2328ea6ad2c4a65a8d86f3"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Section CycleAutomorphism.",
            "VernacBeginSection",
            "30a931925e9ad23d0f1c70b26fef06118cf40303"
        ],
        [
            "Variable a : gT.",
            "VernacAssumption",
            "7dd414799c16daa3ac9662ed9beb2f6ca21776a6"
        ],
        [
            "Section CycleMorphism.",
            "VernacBeginSection",
            "303810f99e48d7032e607bf53b926a8b2a01bbb2"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Definition cyclem of gT := fun x : gT => x ^+ n.",
            "VernacDefinition",
            "6c61ac6eb3703c29b6a82d4dd3051d4a35231b19"
        ],
        [
            "Lemma cyclemM : {in <[a]> & , {morph cyclem a : x y / x * y}}.",
            "VernacStartTheoremProof",
            "d5ae8ee0438d59c010de2e57da6713eb67f2923d"
        ],
        [
            "by move=> x y ax ay; apply: expgMn; apply: (centsP (cycle_abelian a)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical cyclem_morphism := Morphism cyclemM.",
            "VernacDefinition",
            "39bc7cf3496cb8e1c2c119dc41693eda8949d645"
        ],
        [
            "End CycleMorphism.",
            "VernacEndSegment",
            "74c1a26068e2adcdc04a496ed7898fd10529ea16"
        ],
        [
            "Section ZpUnitMorphism.",
            "VernacBeginSection",
            "fb3347d3d7cd4c4ae1d95637cb2118faabf25f16"
        ],
        [
            "Variable u : {unit 'Z_#[a]}.",
            "VernacAssumption",
            "e416f60f5b3586d71313a294fad9a7c0ad27946a"
        ],
        [
            "Lemma injm_cyclem : 'injm (cyclem (val u) a).",
            "VernacStartTheoremProof",
            "12d5ddc6f73674f92250cdfd03c6166d7a071f2d"
        ],
        [
            "apply/subsetP=> x /setIdP[ax]; rewrite !inE -order_dvdn.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case: (eqVneq a 1) => [a1 | nta]; first by rewrite a1 cycle1 inE in ax.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -order_eq1 -dvdn1; move/eqnP: (valP u) => /= <-.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "by rewrite dvdn_gcd {2}Zp_cast ?order_gt1 // order_dvdG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma im_cyclem : cyclem (val u) a @* <[a]> = <[a]>.",
            "VernacStartTheoremProof",
            "9154d5a61e544ec2aae01fbfab27e7826be07964"
        ],
        [
            "apply/morphim_fixP=> //; first exact: injm_cyclem.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite morphim_cycle ?cycle_id ?cycleX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zp_unitm := aut injm_cyclem im_cyclem.",
            "VernacDefinition",
            "92e230118962a71e7e5ee8513f24d4da4a03b18a"
        ],
        [
            "End ZpUnitMorphism.",
            "VernacEndSegment",
            "25ddf5b34b9e8668706b1343dec41773eb935f99"
        ],
        [
            "Lemma Zp_unitmM : {in units_Zp #[a] &, {morph Zp_unitm : u v / u * v}}.",
            "VernacStartTheoremProof",
            "07798fb0fbeab8ac52909b165411026a676e6862"
        ],
        [
            "move=> u v _ _; apply: (eq_Aut (Aut_aut _ _)) => [|x a_x].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite groupM ?Aut_aut.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite permM !autE ?groupX //= /cyclem -expgM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -expg_mod_order modn_dvdm ?expg_mod_order //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (leqP #[a] 1) => [lea1 | lt1a]; last by rewrite Zp_cast ?order_dvdG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite card_le1_trivg // in a_x; rewrite (set1P a_x) order1 dvd1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Zp_unit_morphism := Morphism Zp_unitmM.",
            "VernacDefinition",
            "984c3227484e5c20e8d537d89135529f797e24cd"
        ],
        [
            "Lemma injm_Zp_unitm : 'injm Zp_unitm.",
            "VernacStartTheoremProof",
            "c7561fb6994876c68121b65ea674ef7fe1eb2f2c"
        ],
        [
            "case: (eqVneq a 1) => [a1 | nta].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite subIset //= card_le1_trivg ?subxx // card_units_Zp a1 order1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subsetP=> /= u /morphpreP[_ /set1P/= um1].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have{um1}: Zp_unitm u a == Zp_unitm 1 a by rewrite um1 morph1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !autE ?cycle_id // eq_expg_mod_order.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[n in _ == _ %[mod n]]Zp_cast ?order_gt1 // !modZp inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generator_coprime m : generator <[a]> (a ^+ m) = coprime #[a] m.",
            "VernacStartTheoremProof",
            "17f130383021eaf97bba235064e401e463e9d2e4"
        ],
        [
            "rewrite /generator eq_sym eqEcard cycleX -/#[a] [#|_|]orderXgcd /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/idP/idP=> [le_a_am|co_am]; last by rewrite (eqnP co_am) divn1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have am_gt0: 0 < gcdn #[a] m by rewrite gcdn_gt0 order_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /coprime eqn_leq am_gt0 andbT -(@leq_pmul2l #[a]) ?muln1 -?leq_divRL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma im_Zp_unitm : Zp_unitm @* units_Zp #[a] = Aut <[a]>.",
            "VernacStartTheoremProof",
            "36b0bd53ac03f98b8819514bd16ee32e14b3c447"
        ],
        [
            "rewrite morphimEdom; apply/setP=> f; pose n := invm (injm_Zpm a) (f a).",
            "VernacExtend",
            "8dca88d8134ba32975a9e41c7aca850566c32729"
        ],
        [
            "apply/imsetP/idP=> [[u _ ->] | Af]; first exact: Aut_aut.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [a1 | nta] := eqVneq a 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite a1 cycle1 Aut1 in Af; exists 1; rewrite // morph1 (set1P Af).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have a_fa: <[a]> = <[f a]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(autmE Af) -morphim_cycle ?im_autm ?cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_n: a ^+ n = f a.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -/(Zpm n) invmK // im_Zpm a_fa cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have co_a_n: coprime #[a].-2.+2 n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite {1}Zp_cast ?order_gt1 // -generator_coprime def_n; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (FinRing.unit 'Z_#[a] co_a_n); rewrite ?inE //.",
            "VernacExtend",
            "8df46778835fb1325db12ef74a158c1e91043be9"
        ],
        [
            "apply: eq_Aut (Af) (Aut_aut _ _) _ => x ax.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite autE //= /cyclem; case/cycleP: ax => k ->{x}.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite -(autmE Af) morphX ?cycle_id //= autmE -def_n -!expgM mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_unit_isom : isom (units_Zp #[a]) (Aut <[a]>) Zp_unitm.",
            "VernacStartTheoremProof",
            "1bc20492cb1d9b0f2a8af85ca3e54e54e05fd7c2"
        ],
        [
            "by apply/isomP; rewrite ?injm_Zp_unitm ?im_Zp_unitm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zp_unit_isog : isog (units_Zp #[a]) (Aut <[a]>).",
            "VernacStartTheoremProof",
            "344a23e28f632e6cdda46b361438d141aa31c3b8"
        ],
        [
            "exact: isom_isog Zp_unit_isom.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Aut_cycle : #|Aut <[a]>| = totient #[a].",
            "VernacStartTheoremProof",
            "a6769b42baa91a52574778f7c96c44d9090d6517"
        ],
        [
            "by rewrite -(card_isog Zp_unit_isog) card_units_Zp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma totient_gen : totient #[a] = #|[set x | generator <[a]> x]|.",
            "VernacStartTheoremProof",
            "673e456f4ae6bc782c886552a05151794b5ab9bb"
        ],
        [
            "have [lea1 | lt1a] := leqP #[a] 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /order card_le1_trivg // cards1 (@eq_card1 _ 1) // => x.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !inE -cycle_eq1 eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(card_injm (injm_invm (injm_Zpm a))) /= ?im_Zpm; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/subsetP=> x; rewrite inE; apply: cycle_generator.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -card_units_Zp // cardsE card_sub morphim_invmE; apply: eq_card => /= d.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !inE /= qualifE /= /Zp lt1a inE /= generator_coprime {1}Zp_cast.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Aut_cycle_abelian : abelian (Aut <[a]>).",
            "VernacStartTheoremProof",
            "42388623ec444555be833154e1d47208207e04c1"
        ],
        [
            "by rewrite -im_Zp_unitm morphim_abelian ?units_Zp_abelian.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CycleAutomorphism.",
            "VernacEndSegment",
            "043f3dbe8ae033508697db11080110e15ff44a68"
        ],
        [
            "Variable G : {group gT}.",
            "VernacAssumption",
            "a4eac84d173e53c6bd7c7941e403af4d790fced0"
        ],
        [
            "Lemma Aut_cyclic_abelian : cyclic G -> abelian (Aut G).",
            "VernacStartTheoremProof",
            "2f4a98603be016ea7c44b7235c41cb8fc77ddd49"
        ],
        [
            "by case/cyclicP=> x ->; apply: Aut_cycle_abelian.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Aut_cyclic : cyclic G -> #|Aut G| = totient #|G|.",
            "VernacStartTheoremProof",
            "3d9084df2093016652a63cabe74c37962a84a414"
        ],
        [
            "by case/cyclicP=> x ->; apply: card_Aut_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_ncycle_totient : \\sum_(d < #|G|.+1) #|[set <[x]> | x in G & #[x] == d]| * totient d = #|G|.",
            "VernacStartTheoremProof",
            "42ccb2e6e326230344f3d37458a85e2374ede4f1"
        ],
        [
            "pose h (x : gT) : 'I_#|G|.+1 := inord #[x].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "symmetry; rewrite -{1}sum1_card (partition_big h xpredT) //=.",
            "VernacExtend",
            "ba28bca3513f9c0c3709417402c25d3b87653c7a"
        ],
        [
            "apply: eq_bigr => d _; set Gd := finset _.",
            "VernacExtend",
            "ac591433247162d5294d7c948ab3b309c2d6e368"
        ],
        [
            "rewrite -sum_nat_const sum1dep_card -sum1_card (_ : finset _ = Gd); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/setP=> x; rewrite !inE; apply: andb_id2l => Gx.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite /eq_op /= inordK // ltnS subset_leq_card ?cycle_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (partition_big_imset cycle) {}/Gd; apply: eq_bigr => C /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "case/imsetP=> x /setIdP[Gx /eqP <-] -> {C d}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite sum1dep_card totient_gen; apply: eq_card => y; rewrite !inE /generator.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "move: Gx; rewrite andbC eq_sym -!cycle_subG /order.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: eqP => // -> ->; rewrite eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CyclicAutomorphism.",
            "VernacEndSegment",
            "91c61913f27cc05126d8f2922d13877044c4f1ef"
        ],
        [
            "Lemma sum_totient_dvd n : \\sum_(d < n.+1 | d %| n) totient d = n.",
            "VernacStartTheoremProof",
            "c9efaa4a7ad1baf3aa13ed9ec9dbbe32be64d77c"
        ],
        [
            "case: n => [|[|n']]; try by rewrite big_mkcond !big_ord_recl big_ord0.",
            "VernacExtend",
            "700e4ba7c43aef376de752aa78d70ea0bf66a54e"
        ],
        [
            "set n := n'.+2; pose x1 : 'Z_n := 1%R.",
            "VernacExtend",
            "dda58a04ca4da9adf6d016079f462c4d6ff69ca8"
        ],
        [
            "have ox1: #[x1] = n by rewrite /order -Zp_cycle card_Zp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -[rhs in _ = rhs]ox1 -[#[_]]sum_ncycle_totient [#|_|]ox1 big_mkcond /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => d _; rewrite -{2}ox1; case: ifP => [|ndv_dG]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite eq_card0 // => C; apply/imsetP=> [[x /setIdP[Gx oxd] _{C}]].",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by rewrite -(eqP oxd) order_dvdG in ndv_dG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/cycle_sub_group; set Gd := [set _] => def_Gd.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite (_ : _ @: _ = @gval _ @: Gd); first by rewrite imset_set1 cards1 mul1n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/setP=> C; apply/idP/imsetP=> [| [gC GdC ->{C}]].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "case/imsetP=> x /setIdP[_ oxd] ->; exists <[x]>%G => //.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite -def_Gd inE -Zp_cycle subsetT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= GdC; rewrite -def_Gd => /setIdP[_ /eqP <-].",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "by rewrite (set1P GdC) /= mem_imset // inE eqxx (mem_cycle x1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section FieldMulCyclic.",
            "VernacBeginSection",
            "66d5352b46f5ee1cc5b46df340e223f5b3801218"
        ],
        [
            "Import GRing.Theory.",
            "VernacImport",
            "a0fcf55540300b9b0e54bd28a113c5228ff530f4"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Lemma order_inj_cyclic : {in G &, forall x y, #[x] = #[y] -> <[x]> = <[y]>} -> cyclic G.",
            "VernacStartTheoremProof",
            "b56b1da52c3eae2503e9a07c219abcde7693cee6"
        ],
        [
            "move=> ucG; apply: negbNE (contra _ (negbT (ltnn #|G|))) => ncG.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite -{2}[#|G|]sum_totient_dvd big_mkcond (bigD1 ord_max) ?dvdnn //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{1}[#|G|]sum_ncycle_totient (bigD1 ord_max) //= -addSn leq_add //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite eq_card0 ?totient_gt0 ?cardG_gt0 // => C.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/imsetP=> [[x /setIdP[Gx /eqP oxG]]]; case/cyclicP: ncG.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "by exists x; apply/eqP; rewrite eq_sym eqEcard cycle_subG Gx -oxG /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim/big_ind2: _ => // [m1 n1 m2 n2 | d _]; first exact: leq_add.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set Gd := _ @: _; case: (set_0Vmem Gd) => [-> | [C]]; first by rewrite cards0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite {}/Gd => /imsetP[x /setIdP[Gx /eqP <-] _ {C d}].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite order_dvdG // (@eq_card1 _ <[x]>) ?mul1n // => C.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/idP/eqP=> [|-> {C}]; last by rewrite mem_imset // inE Gx eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/imsetP=> y /setIdP[Gy /eqP/ucG->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div_ring_mul_group_cyclic (R : unitRingType) (f : gT -> R) : f 1 = 1%R -> {in G &, {morph f : u v / u * v >-> (u * v)%R}} -> {in G^#, forall x, f x - 1 \\in GRing.unit}%R -> abelian G -> cyclic G.",
            "VernacStartTheoremProof",
            "926beaa72e0d6a90cca0c4f1937a5966fa052b5d"
        ],
        [
            "move=> f1 fM f1P abelG.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have fX n: {in G, {morph f : u / u ^+ n >-> (u ^+ n)%R}}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: n => // n x Gx; elim: n => //= n IHn; rewrite expgS fM ?groupX ?IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have fU x: x \\in G -> f x \\in GRing.unit.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> Gx; apply/unitrP; exists (f x^-1); rewrite -!fM ?groupV ?gsimp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: order_inj_cyclic => x y Gx Gy; set n := #[x] => yn.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEcard -[#|_|]/n yn leqnn andbT cycle_subG /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "suff{y Gy yn} ->: <[x]> = G :&: [set z | #[z] %| n] by rewrite !inE Gy yn /=.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "apply/eqP; rewrite eqEcard subsetI cycle_subG {}Gx /= cardE; set rs := enum _.",
            "VernacExtend",
            "c0b55a279182ecd0a9c92c4d7ab71c7e81eac100"
        ],
        [
            "apply/andP; split; first by apply/subsetP=> y xy; rewrite inE order_dvdG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose P : {poly R} := ('X^n - 1)%R; have n_gt0: n > 0 by apply: order_gt0.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have szP: size P = n.+1 by rewrite size_addl size_polyXn ?size_opp ?size_poly1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -ltnS -szP -(size_map f) max_ring_poly_roots -?size_poly_eq0 ?{}szP //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/allP=> fy /mapP[y]; rewrite mem_enum !inE order_dvdn => /andP[Gy].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "move/eqP=> yn1 ->{fy}; apply/eqP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite !(hornerE, hornerXn) -fX // yn1 f1 subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: uniq rs by apply: enum_uniq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: all (mem G) rs by apply/allP=> y; rewrite mem_enum; case/setIP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: rs => //= y rs IHrs /andP[Gy Grs] /andP[y_rs]; rewrite andbC.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "move/IHrs=> -> {IHrs}//; apply/allP=> _ /mapP[z rs_z ->].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "have{Grs} Gz := allP Grs z rs_z; rewrite /diff_roots -!fM // (centsP abelG) //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite eqxx -[f y]mul1r -(mulgKV y z) fM ?groupM ?groupV //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -mulNr -mulrDl unitrMl ?fU ?f1P // !inE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite groupM ?groupV // andbT -eq_mulgV1; apply: contra y_rs; move/eqP <-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma field_mul_group_cyclic (F : fieldType) (f : gT -> F) : {in G &, {morph f : u v / u * v >-> (u * v)%R}} -> {in G, forall x, f x = 1%R <-> x = 1} -> cyclic G.",
            "VernacStartTheoremProof",
            "511da582b2a657d06e9c238729e06a6638b3d2b3"
        ],
        [
            "move=> fM f1P; have f1 : f 1 = 1%R by apply/f1P.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply: (div_ring_mul_group_cyclic f1 fM) => [x|].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case/setD1P=> x1 Gx; rewrite unitfE; apply: contra x1.",
            "VernacExtend",
            "7b10d760ecce4015b43936eb8ee3a43374e85678"
        ],
        [
            "by rewrite subr_eq0 => /eqP/f1P->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/centsP=> x Gx y Gy; apply/commgP/eqP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply/f1P; rewrite ?fM ?groupM ?groupV //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mulrCA -!fM ?groupM ?groupV // mulKg mulVg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FieldMulCyclic.",
            "VernacEndSegment",
            "c0c690b617c7e98eec64afd8bed29e8e481061e0"
        ],
        [
            "Lemma field_unit_group_cyclic (F : finFieldType) (G : {group {unit F}}) : cyclic G.",
            "VernacStartTheoremProof",
            "231047608bf400a69f9847f7a9ad39e52784928b"
        ],
        [
            "apply: field_mul_group_cyclic FinRing.uval _ _ => // u _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by split=> /eqP ?; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PrimitiveRoots.",
            "VernacBeginSection",
            "6a8a20c9d5694902f12549fa373cb9a240ada495"
        ],
        [
            "Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "508d3abdb5708930f210cdbb3daabf39f19e68e3"
        ],
        [
            "Import GRing.Theory.",
            "VernacImport",
            "a0fcf55540300b9b0e54bd28a113c5228ff530f4"
        ],
        [
            "Lemma has_prim_root (F : fieldType) (n : nat) (rs : seq F) : n > 0 -> all n.-unity_root rs -> uniq rs -> size rs >= n -> has n.-primitive_root rs.",
            "VernacStartTheoremProof",
            "883a6b39104a4d44418f811b27b786734d8b6418"
        ],
        [
            "move=> n_gt0 rsn1 Urs; rewrite leq_eqVlt ltnNge max_unity_roots // orbF eq_sym.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/eqP=> sz_rs; pose r := val (_ : seq_sub rs).",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have rn1 x: r x ^+ n = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/eqP; rewrite -unity_rootE (allP rsn1) ?(valP x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have prim_r z: z ^+ n = 1 -> z \\in rs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move/eqP; rewrite -unity_rootE -(mem_unity_roots n_gt0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose r' := SeqSub (prim_r _ _); pose sG_1 := r' _ (expr1n _ _).",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have sG_VP: r _ ^+ n.-1 ^+ n = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> x; rewrite -exprM mulnC exprM rn1 expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sG_MP: (r _ * r _) ^+ n = 1 by move=> x y; rewrite exprMn !rn1 mul1r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose sG_V := r' _ (sG_VP _); pose sG_M := r' _ (sG_MP _ _).",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have sG_Ag: associative sG_M by move=> x y z; apply: val_inj; rewrite /= mulrA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sG_1g: left_id sG_1 sG_M by move=> x; apply: val_inj; rewrite /= mul1r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sG_Vg: left_inverse sG_1 sG_V sG_M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> x; apply: val_inj; rewrite /= -exprSr prednK ?rn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose sgT := BaseFinGroupType _ (FinGroup.Mixin sG_Ag sG_1g sG_Vg).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose gT := @FinGroupType sgT sG_Vg.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have /cyclicP[x gen_x]: @cyclic gT setT.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (@field_mul_group_cyclic gT [set: _] F r) => // x _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by split=> [ri1 | ->]; first apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/hasP; exists (r x); first exact: (valP x).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [m prim_x dvdmn] := prim_order_exists n_gt0 (rn1 x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -((m =P n) _) // eqn_dvd {}dvdmn -sz_rs -(card_seq_sub Urs) -cardsT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite gen_x (@order_dvdn gT) /(_ == _) /= -{prim_x}(prim_expr_order prim_x).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/eqP; elim: m => //= m IHm; rewrite exprS expgS /= -IHm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PrimitiveRoots.",
            "VernacEndSegment",
            "6b5126e9e4a6684d068e7769ffaca30cfbac9e9b"
        ],
        [
            "Section AutPrime.",
            "VernacBeginSection",
            "12d8c6656d9c614284095239d8c91adfde164562"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Lemma Aut_prime_cycle_cyclic (a : gT) : prime #[a] -> cyclic (Aut <[a]>).",
            "VernacStartTheoremProof",
            "f0a418a91e56e2b338b6a1ae257aeec1a37ce5d4"
        ],
        [
            "move=> pr_a; have inj_um := injm_Zp_unitm a; have eq_a := Fp_Zcast pr_a.",
            "VernacExtend",
            "d4976b9870677004da516d019260011c2c7bf565"
        ],
        [
            "pose fm := cast_ord (esym eq_a) \\o val \\o invm inj_um.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "apply: (@field_mul_group_cyclic _ _ _ fm) => [f g Af Ag | f Af] /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: val_inj; rewrite /= morphM ?im_Zp_unitm //= eq_a.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> [/= fm1 |->]; last by apply: val_inj; rewrite /= morph1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: (injm1 (injm_invm inj_um)); first by rewrite /= im_Zp_unitm.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by do 2!apply: val_inj; move/(congr1 val): fm1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Aut_prime_cyclic (G : {group gT}) : prime #|G| -> cyclic (Aut G).",
            "VernacStartTheoremProof",
            "05246e10af0cbac01b3742b0e5d5bc2323d92481"
        ],
        [
            "move=> pr_G; case/cyclicP: (prime_cyclic pr_G) (pr_G) => x ->.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exact: Aut_prime_cycle_cyclic.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AutPrime.",
            "VernacEndSegment",
            "5476b7495c97d6070a1c720d72c338d6b1f0886a"
        ]
    ],
    "proofs": [
        {
            "name": "cyclicP",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "exact: exists_eqP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cycle_cyclic",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "by apply/cyclicP; exists x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclic1",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "by rewrite -cycle1 cycle_cyclic.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZpmM",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "rewrite /Zpm; case: (eqVneq a 1) => [-> | nta] i j _ _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite !expg1n ?mulg1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= {3}Zp_cast ?order_gt1 // expg_mod_order expgD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "im_Zpm",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eq_sym eqEcard cycle_subG /= andbC morphimEdom.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite (leq_trans (leq_imset_card _ _)) ?card_Zp //= /Zp order_gt1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: eqP => /= [a1 | _]; first by rewrite imset_set1 morph1 a1 set11.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/imsetP; exists 1%R; rewrite ?expg1 ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_expg_mod_order",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "have [->|] := eqVneq a 1; first by rewrite order1 !modn1 !expg1n eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -order_gt1 => lt1a; have ZpT: Zp #[a] = setT by rewrite /Zp lt1a.",
                        "VernacExtend",
                        "d2991b7607b6316c9d43d28c85f87ca601299ca6"
                    ]
                },
                {
                    "command": [
                        "have: injective Zpm by move=> i j; apply (injmP injm_Zpm); rewrite /= ZpT inE.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move/inj_eq=> eqZ; symmetry; rewrite -(Zp_cast lt1a).",
                        "VernacExtend",
                        "7d7dbc461628e3c5ab8fc0bd4c5735707abb3cca"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[_ == _](eqZ (inZp m) (inZp n)) /Zpm /= Zp_cast ?expg_mod_order.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_isom",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "by apply/isomP; rewrite injm_Zpm im_Zpm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_isog",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "exact: isom_isog Zp_isom.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclic_abelian",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "by case/cyclicP=> a ->; apply: cycle_abelian.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cycleMsub",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "move=> cab co_ab; apply/subsetP=> _ /cycleP[k ->].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "apply/cycleP; exists (chinese #[a] #[b] k 0); symmetry.",
                        "VernacExtend",
                        "d3d15cfc6568a174968a35bede4b0ecd3bd5e1c8"
                    ]
                },
                {
                    "command": [
                        "rewrite expgMn // -expg_mod_order chinese_modl // expg_mod_order.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite /chinese addn0 -mulnA mulnCA expgM expg_order expg1n mulg1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cycleM",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "move=> cab co_ab; apply/eqP; rewrite eqEsubset -(cent_joinEl (cents_cycle cab)).",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite join_subG {3}cab !cycleMsub // 1?coprime_sym //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -genM_join cycle_subG mem_gen // mem_imset2 ?cycle_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclicM",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "move=> /cyclicP[a ->] /cyclicP[b ->]; rewrite cent_cycle cycle_subG => cab coab.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite -cycleM ?cycle_cyclic //; apply/esym/cent1P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclicY",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "by move=> cycK cycH cKH coKH; rewrite cent_joinEr // cyclicM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "order_dvdn",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "by rewrite (eq_expg_mod_order a n 0) mod0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "order_inf",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "by rewrite -order_dvdn; apply: dvdn_leq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "order_dvdG",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "by move=> Ga; apply: cardSg; rewrite cycle_subG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expg_cardG",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "by move=> Ga; apply/eqP; rewrite -order_dvdn order_dvdG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expg_znat",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "case: (eqsVneq G 1) => [-> /set1P-> | ntG Gx]; first by rewrite !expg1n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite val_Zp_nat ?cardG_gt1 // eq_expg_mod_order.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite modn_dvdm ?order_dvdG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expg_zneg",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "move=> Gx; apply/eqP; rewrite eq_sym eq_invg_mul -expgD.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(expg_znat _ Gx) natrD natr_Zp natr_negZp subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nt_gen_prime",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "move=> Gpr /setD1P[]; rewrite -cycle_subG -cycle_eq1 => ntX sXG.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubset sXG andbT.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: contraR ntX => /(prime_TIg Gpr); rewrite (setIidPr sXG) => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orderXdvd",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by apply: order_dvdG; apply: mem_cycle.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orderXgcd",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqn_dvd; apply/andP; split.",
                        "VernacExtend",
                        "c6080ad6de433b4aac1c6523f45011ac63415378"
                    ]
                },
                {
                    "command": [
                        "rewrite order_dvdn -expgM -muln_divCA_gcd //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite expgM expg_order expg1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [-> | n_gt0] := posnP n; first by rewrite gcdn0 divnn order_gt0 dvd1n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -(dvdn_pmul2r n_gt0) divn_mulAC ?dvdn_gcdl // dvdn_lcm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite order_dvdn mulnC expgM expg_order eqxx dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orderXdiv",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "by case/dvdnP=> q defq; rewrite orderXgcd {2}defq gcdnC gcdnMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orderXexp",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "move=> ox; have [n_le_m | m_lt_n] := leqP n m.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite -(subnKC n_le_m) subnDA subnn expnD expgM -ox.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite expg_order expg1n order1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite orderXdiv ox ?dvdn_exp2l ?expnB ?(ltnW m_lt_n) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by have:= order_gt0 x; rewrite ox expn_gt0 orbC -(ltn_predK m_lt_n).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orderXpfactor",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "move=> oxp p_pr dv_p_n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "suffices pk_x: p ^ k %| #[x] by rewrite -oxp orderXdiv // mulnC divnK.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "rewrite pfactor_dvdn // leqNgt; apply: contraL dv_p_n => lt_x_k.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite -oxp -p'natE // -(subnKC (ltnW lt_x_k)) expnD expgM.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (pnat_dvd (orderXdvd _ _)) // -p_part // orderXdiv ?dvdn_part //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}[#[x]](partnC p) // mulKn // part_pnat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orderXprime",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "exact: (@orderXpfactor p 1).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orderXpnat",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "move=> oxm n_m; have [m_gt0 _] := andP n_m.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "suffices m_x: m %| #[x] by rewrite -oxm orderXdiv // mulnC divnK.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "apply/dvdn_partP=> // p; rewrite mem_primes => /and3P[p_pr _ p_m].",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "have n_p: p \\in \\pi(n) by apply: (pnatP _ _ n_m).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have p_oxm: p %| #[x ^+ (p ^ logn p m)].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: dvdn_trans (orderXdvd _ m`_p^'); rewrite -expgM -p_part ?partnC //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite oxm; rewrite mem_primes in n_p; case/and3P: n_p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (orderXpfactor (erefl _) p_pr p_oxm) p_part // dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orderM",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "by move=> cab co_ab; rewrite -coprime_cardMg -?cycleM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclic_dprod",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "case/dprodP=> _ defKH cKH tiKH cycK cycH; pose m := lcmn #|K| #|H|.",
                        "VernacExtend",
                        "61f7313c68f88d92a678d74fe9c99999257a468e"
                    ]
                },
                {
                    "command": [
                        "apply/idP/idP=> [/cyclicP[x defG] | coKH]; last by rewrite -defKH cyclicM.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /coprime -dvdn1 -(@dvdn_pmul2l m) ?lcmn_gt0 ?cardG_gt0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite muln_lcm_gcd muln1 -TI_cardMg // defKH defG order_dvdn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have /mulsgP[y z Ky Hz ->]: x \\in K * H by rewrite defKH defG cycle_id.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -[1]mulg1 expgMn; last exact/commute_sym/(centsP cKH).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; congr (_ * _); apply/eqP; rewrite -order_dvdn.",
                        "VernacExtend",
                        "fa6171a79bfbc42d0445547471a3cf297b71778a"
                    ]
                },
                {
                    "command": [
                        "exact: dvdn_trans (order_dvdG Ky) (dvdn_lcml _ _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "exact: dvdn_trans (order_dvdG Hz) (dvdn_lcmr _ _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generator_cycle",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "exact: eqxx.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cycle_generator",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "by move/(<[a]> =P _)->; apply: cycle_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generator_order",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "by rewrite /order => /(<[a]> =P _)->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Euler_exp_totient",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "case: n => [|[|n']] //; [by rewrite !modn1 | set n := n'.+2] => co_a_n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have{co_a_n} Ua: coprime n (inZp a : 'I_n) by rewrite coprime_sym coprime_modl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have: FinRing.unit 'Z_n Ua ^+ totient n == 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -card_units_Zp // -order_dvdn order_dvdG ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -2!val_eqE unit_Zp_expg /= -/n modnXm => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eltmE",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eq_expg_mod_order.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have [x_le1 | x_gt1] := leqP #[x] 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suffices: #[y] %| 1 by rewrite dvdn1 => /eqP->; rewrite !modn1.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (dvdn_trans dvd_y_x) // dvdn1 order_eq1 -cycle_eq1 trivg_card_le1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(expg_znat i (cycle_id x)) invmE /=; last by rewrite /Zp x_gt1 inE.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite val_Zp_nat // modn_dvdm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eltm_id",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "exact: (eltmE 1).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eltmM",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "move=> _ _ /cycleP[i ->] /cycleP[j ->].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite -expgD !eltmE expgD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "im_eltm",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "by rewrite morphim_cycle ?cycle_id //= eltm_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ker_eltm",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eq_sym eqEcard cycle_subG 3!inE mem_cycle /= eltmE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite expg_order eqxx (orderE y) -im_eltm card_morphim setIid -orderE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite orderXdiv ?dvdn_indexg //= leq_divRL ?indexg_gt0 ?Lagrange ?subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injm_eltm",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "by rewrite ker_eltm subG1 cycle_eq1 -order_dvdn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cycle_sub_group",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "move=> m_dv_a; have m_gt0: 0 < m by apply: dvdn_gt0 m_dv_a.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have oam: #|<[a ^+ (#[a] %/ m)]>| = m.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite [#|_|]orderXgcd -(divnMr m_gt0) muln_gcdl divnK //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcdnC gcdnMr mulKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubset sub1set inE /= cycleX oam eqxx !andbT.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> X; rewrite in_set1 inE -val_eqE /= eqEcard oam.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case/andP=> sXa /eqP oX; rewrite oX leqnn andbT.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x Xx; case/cycleP: (subsetP sXa _ Xx) => k def_x.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "have: (x ^+ m == 1)%g by rewrite -oX -order_dvdn cardSg // gen_subG sub1set.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite {x Xx}def_x -expgM -order_dvdn -[#[a]](Lagrange sXa) -oX mulnC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdn_pmul2r // mulnK // => /dvdnP[i ->].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulnC expgM groupX // cycle_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cycle_subgroup_char",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "move=> sHa; apply: lone_subgroup_char => // J sJa isoJH.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "have dvHa: #|H| %| #[a] by apply: cardSg.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have{dvHa} /setP Huniq := esym (cycle_sub_group dvHa).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move: (Huniq H) (Huniq J); rewrite !inE /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite sHa sJa (card_isog isoJH) eqxx => /eqP<- /eqP<-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_order",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "by rewrite order_dvdn -morphX // expg_order morph1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_generator",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "by move/(A =P _)->; rewrite /generator morphim_cycle.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclicJ",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "apply/cyclicP/cyclicP=> [[y /(canRL (conjsgK x))] | [y ->]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -cycleJ; exists (y ^ x^-1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists (y ^ x); rewrite cycleJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_subG_cyclic",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "case/cyclicP=> x -> sHx sKx; apply/eqP/eqP=> [-> //| eqHK].",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "have def_GHx := cycle_sub_group (cardSg sHx); set GHx := [set _] in def_GHx.",
                        "VernacExtend",
                        "81881a093b2294c76be3b432fbe83612064d7bc9"
                    ]
                },
                {
                    "command": [
                        "have []: H \\in GHx /\\ K \\in GHx by rewrite -def_GHx !inE sHx sKx eqHK /=.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by do 2!move/set1P->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphim_cyclic",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "move=> cycH; wlog sHG: H cycH / H \\subset G.",
                        "VernacExtend",
                        "6dbaea969dd2e1a08b50e55e2e4c4949c4d27249"
                    ]
                },
                {
                    "command": [
                        "by rewrite -morphimIdom; apply; rewrite (cyclicS _ cycH, subsetIl) ?subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/cyclicP: cycH sHG => x ->; rewrite gen_subG sub1set => Gx.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by apply/cyclicP; exists (f x); rewrite morphim_cycle.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quotient_cycle",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "exact: morphim_cycle.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quotient_cyclic",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "exact: morphim_cyclic.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quotient_generator",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "by move=> Nx; apply: morph_generator.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_prime_cyclic",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "move=> p_pr pG; case: (eqsVneq G 1) => [-> | ntG]; first exact: cyclic1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite prime_cyclic // (prime_nt_dvdP p_pr _ pG) -?trivg_card1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclic_small",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "rewrite 4!(ltnS, leq_eqVlt) -trivg_card_le1 orbA orbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case/predU1P=> [-> | oG]; first exact: cyclic1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: prime_cyclic; case/pred2P: oG => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isog_cyclic",
            "line_nb": 327,
            "steps": [
                {
                    "command": [
                        "by case/isogP=> f injf <-; rewrite injm_cyclic.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "metacyclicP",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "exact: 'exists_and3P.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "metacyclic1",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "by apply/existsP; exists 1%G; rewrite normal1 trivg_quotient !cyclic1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclic_metacyclic",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "case/cyclicP=> x ->; apply/existsP; exists (<[x]>)%G.",
                        "VernacExtend",
                        "75a99ddbbb3798cc145bb6c72c2b43f2f61ebbca"
                    ]
                },
                {
                    "command": [
                        "by rewrite normal_refl cycle_cyclic trivg_quotient cyclic1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclemM",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "by move=> x y ax ay; apply: expgMn; apply: (centsP (cycle_abelian a)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injm_cyclem",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> x /setIdP[ax]; rewrite !inE -order_dvdn.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq a 1) => [a1 | nta]; first by rewrite a1 cycle1 inE in ax.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -order_eq1 -dvdn1; move/eqnP: (valP u) => /= <-.",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdn_gcd {2}Zp_cast ?order_gt1 // order_dvdG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injm_Zp_unitm",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "case: (eqVneq a 1) => [a1 | nta].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite subIset //= card_le1_trivg ?subxx // card_units_Zp a1 order1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> /= u /morphpreP[_ /set1P/= um1].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have{um1}: Zp_unitm u a == Zp_unitm 1 a by rewrite um1 morph1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !autE ?cycle_id // eq_expg_mod_order.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[n in _ == _ %[mod n]]Zp_cast ?order_gt1 // !modZp inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generator_coprime",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "rewrite /generator eq_sym eqEcard cycleX -/#[a] [#|_|]orderXgcd /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/idP/idP=> [le_a_am|co_am]; last by rewrite (eqnP co_am) divn1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have am_gt0: 0 < gcdn #[a] m by rewrite gcdn_gt0 order_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite /coprime eqn_leq am_gt0 andbT -(@leq_pmul2l #[a]) ?muln1 -?leq_divRL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "im_Zp_unitm",
            "line_nb": 414,
            "steps": [
                {
                    "command": [
                        "rewrite morphimEdom; apply/setP=> f; pose n := invm (injm_Zpm a) (f a).",
                        "VernacExtend",
                        "8dca88d8134ba32975a9e41c7aca850566c32729"
                    ]
                },
                {
                    "command": [
                        "apply/imsetP/idP=> [[u _ ->] | Af]; first exact: Aut_aut.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [a1 | nta] := eqVneq a 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite a1 cycle1 Aut1 in Af; exists 1; rewrite // morph1 (set1P Af).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have a_fa: <[a]> = <[f a]>.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(autmE Af) -morphim_cycle ?im_autm ?cycle_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have def_n: a ^+ n = f a.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -/(Zpm n) invmK // im_Zpm a_fa cycle_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have co_a_n: coprime #[a].-2.+2 n.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite {1}Zp_cast ?order_gt1 // -generator_coprime def_n; apply/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (FinRing.unit 'Z_#[a] co_a_n); rewrite ?inE //.",
                        "VernacExtend",
                        "8df46778835fb1325db12ef74a158c1e91043be9"
                    ]
                },
                {
                    "command": [
                        "apply: eq_Aut (Af) (Aut_aut _ _) _ => x ax.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite autE //= /cyclem; case/cycleP: ax => k ->{x}.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(autmE Af) morphX ?cycle_id //= autmE -def_n -!expgM mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_unit_isom",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "by apply/isomP; rewrite ?injm_Zp_unitm ?im_Zp_unitm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zp_unit_isog",
            "line_nb": 433,
            "steps": [
                {
                    "command": [
                        "exact: isom_isog Zp_unit_isom.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Aut_cycle",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "by rewrite -(card_isog Zp_unit_isog) card_units_Zp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "totient_gen",
            "line_nb": 439,
            "steps": [
                {
                    "command": [
                        "have [lea1 | lt1a] := leqP #[a] 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /order card_le1_trivg // cards1 (@eq_card1 _ 1) // => x.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE -cycle_eq1 eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(card_injm (injm_invm (injm_Zpm a))) /= ?im_Zpm; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> x; rewrite inE; apply: cycle_generator.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -card_units_Zp // cardsE card_sub morphim_invmE; apply: eq_card => /= d.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE /= qualifE /= /Zp lt1a inE /= generator_coprime {1}Zp_cast.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Aut_cycle_abelian",
            "line_nb": 448,
            "steps": [
                {
                    "command": [
                        "by rewrite -im_Zp_unitm morphim_abelian ?units_Zp_abelian.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Aut_cyclic_abelian",
            "line_nb": 453,
            "steps": [
                {
                    "command": [
                        "by case/cyclicP=> x ->; apply: Aut_cycle_abelian.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Aut_cyclic",
            "line_nb": 456,
            "steps": [
                {
                    "command": [
                        "by case/cyclicP=> x ->; apply: card_Aut_cycle.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_ncycle_totient",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "pose h (x : gT) : 'I_#|G|.+1 := inord #[x].",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "symmetry; rewrite -{1}sum1_card (partition_big h xpredT) //=.",
                        "VernacExtend",
                        "ba28bca3513f9c0c3709417402c25d3b87653c7a"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => d _; set Gd := finset _.",
                        "VernacExtend",
                        "ac591433247162d5294d7c948ab3b309c2d6e368"
                    ]
                },
                {
                    "command": [
                        "rewrite -sum_nat_const sum1dep_card -sum1_card (_ : finset _ = Gd); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE; apply: andb_id2l => Gx.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite /eq_op /= inordK // ltnS subset_leq_card ?cycle_subG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (partition_big_imset cycle) {}/Gd; apply: eq_bigr => C /=.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "case/imsetP=> x /setIdP[Gx /eqP <-] -> {C d}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite sum1dep_card totient_gen; apply: eq_card => y; rewrite !inE /generator.",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "move: Gx; rewrite andbC eq_sym -!cycle_subG /order.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: eqP => // -> ->; rewrite eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "field_unit_group_cyclic",
            "line_nb": 542,
            "steps": [
                {
                    "command": [
                        "apply: field_mul_group_cyclic FinRing.uval _ _ => // u _.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by split=> /eqP ?; apply/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "has_prim_root",
            "line_nb": 549,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0 rsn1 Urs; rewrite leq_eqVlt ltnNge max_unity_roots // orbF eq_sym.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move/eqP=> sz_rs; pose r := val (_ : seq_sub rs).",
                        "VernacExtend",
                        "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
                    ]
                },
                {
                    "command": [
                        "have rn1 x: r x ^+ n = 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite -unity_rootE (allP rsn1) ?(valP x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have prim_r z: z ^+ n = 1 -> z \\in rs.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move/eqP; rewrite -unity_rootE -(mem_unity_roots n_gt0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose r' := SeqSub (prim_r _ _); pose sG_1 := r' _ (expr1n _ _).",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have sG_VP: r _ ^+ n.-1 ^+ n = 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move=> x; rewrite -exprM mulnC exprM rn1 expr1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have sG_MP: (r _ * r _) ^+ n = 1 by move=> x y; rewrite exprMn !rn1 mul1r.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose sG_V := r' _ (sG_VP _); pose sG_M := r' _ (sG_MP _ _).",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have sG_Ag: associative sG_M by move=> x y z; apply: val_inj; rewrite /= mulrA.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sG_1g: left_id sG_1 sG_M by move=> x; apply: val_inj; rewrite /= mul1r.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sG_Vg: left_inverse sG_1 sG_V sG_M.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move=> x; apply: val_inj; rewrite /= -exprSr prednK ?rn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose sgT := BaseFinGroupType _ (FinGroup.Mixin sG_Ag sG_1g sG_Vg).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "pose gT := @FinGroupType sgT sG_Vg.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have /cyclicP[x gen_x]: @cyclic gT setT.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: (@field_mul_group_cyclic gT [set: _] F r) => // x _.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by split=> [ri1 | ->]; first apply: val_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/hasP; exists (r x); first exact: (valP x).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [m prim_x dvdmn] := prim_order_exists n_gt0 (rn1 x).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -((m =P n) _) // eqn_dvd {}dvdmn -sz_rs -(card_seq_sub Urs) -cardsT.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite gen_x (@order_dvdn gT) /(_ == _) /= -{prim_x}(prim_expr_order prim_x).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; elim: m => //= m IHm; rewrite exprS expgS /= -IHm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Aut_prime_cyclic",
            "line_nb": 588,
            "steps": [
                {
                    "command": [
                        "move=> pr_G; case/cyclicP: (prime_cyclic pr_G) (pr_G) => x ->.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exact: Aut_prime_cycle_cyclic.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}