{
    "filename": "mathcomp/solvable/extremal.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq div choice fintype.",
            "VernacRequire",
            "e665c6902e70ac801e5b749428ba09cedb8a2b75"
        ],
        [
            "From mathcomp Require Import bigop finset prime binomial fingroup morphism perm automorphism.",
            "VernacRequire",
            "4b243248d0e89747a01b748585557a03b8c18f19"
        ],
        [
            "From mathcomp Require Import presentation quotient action commutator gproduct gfunctor.",
            "VernacRequire",
            "ea85bb98c278231f3732ac4454c12b2407608086"
        ],
        [
            "From mathcomp Require Import ssralg finalg zmodp cyclic pgroup center gseries.",
            "VernacRequire",
            "2cb31237a181f66654cea3ad0bc4cbb449596214"
        ],
        [
            "From mathcomp Require Import nilpotent sylow abelian finmodule matrix maximal.",
            "VernacRequire",
            "baa0e38a3f5db68f709aba8623f16db18b317ec5"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Import GroupScope GRing.Theory.",
            "VernacImport",
            "e9e593badced32f8de606b9f182143860064d3fd"
        ],
        [
            "Reserved Notation \"''Mod_' m\" (at level 8, m at level 2, format \"''Mod_' m\").",
            "VernacSyntaxExtension",
            "0264b0dc249918c4f59ad3d45648451638161ba1"
        ],
        [
            "Reserved Notation \"''D_' m\" (at level 8, m at level 2, format \"''D_' m\").",
            "VernacSyntaxExtension",
            "0d818b6b14d73df9bd5c6a6f68ffe391da59c480"
        ],
        [
            "Reserved Notation \"''SD_' m\" (at level 8, m at level 2, format \"''SD_' m\").",
            "VernacSyntaxExtension",
            "0bbc55e535aff666cc6d6865d71062a32acb6c0c"
        ],
        [
            "Reserved Notation \"''Q_' m\" (at level 8, m at level 2, format \"''Q_' m\").",
            "VernacSyntaxExtension",
            "c062d1a44d3c4ae2289311f5c6b03ea59aba0647"
        ],
        [
            "Module Extremal.",
            "VernacDefineModule",
            "acedd42abb34a66dd3a23780bb82b6c6e965ed74"
        ],
        [
            "Section Construction.",
            "VernacBeginSection",
            "4821f6057724bb76fd42f6fca015a2b35395330c"
        ],
        [
            "Variables q p e : nat.",
            "VernacAssumption",
            "1730ebc1c7c101c07bb91ae7ccfe5356e7f70d6a"
        ],
        [
            "Let a : 'Z_p := Zp1.",
            "VernacDefinition",
            "246ff053010dc116ad4ad22d5f8b22604fa88c3c"
        ],
        [
            "Let b : 'Z_q := Zp1.",
            "VernacDefinition",
            "27cbf3a914bea6ecc2316f95be36c68570845890"
        ],
        [
            "Local Notation B := <[b]>.",
            "VernacSyntacticDefinition",
            "7b63d90fbc5a92b89eb8a9ce9d595bf329cef15a"
        ],
        [
            "Definition aut_of := odflt 1 [pick s in Aut B | p > 1 & (#[s] %| p) && (s b == b ^+ e)].",
            "VernacDefinition",
            "877d593ec964635149613c0f7b58215d04389a1c"
        ],
        [
            "Lemma aut_dvdn : #[aut_of] %| #[a].",
            "VernacStartTheoremProof",
            "0c785df00d76120242419fe8721259627f4c3f01"
        ],
        [
            "rewrite order_Zp1 /aut_of; case: pickP => [s | _]; last by rewrite order1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/and4P=> _ p_gt1 p_s _; rewrite Zp_cast.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition act_morphism := eltm_morphism aut_dvdn.",
            "VernacDefinition",
            "bc32edf8ff622b812a07a66938365bd11f1c0f2d"
        ],
        [
            "Definition base_act := ([Aut B] \\o act_morphism)%gact.",
            "VernacDefinition",
            "170deccddbaa65f4b316d8b30cdb0c91ffbf7e73"
        ],
        [
            "Lemma act_dom : <[a]> \\subset act_dom base_act.",
            "VernacStartTheoremProof",
            "40f2c36dff1c970a85eb1f3db9e7ff964c2a0301"
        ],
        [
            "rewrite cycle_subG 2!inE cycle_id /= eltm_id /aut_of.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: pickP => [op /andP[] | _] //=; rewrite group1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gact := (base_act \\ act_dom)%gact.",
            "VernacDefinition",
            "3032334cbde8d390b94eb9d238faa5f9ee509e18"
        ],
        [
            "Fact gtype_key : unit.",
            "VernacStartTheoremProof",
            "04c75145c8dc10de7d97cd4210ded8ec4753d1ec"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gtype := locked_with gtype_key (sdprod_groupType gact).",
            "VernacDefinition",
            "974679a4941d8b52650b767b03d3f1d461b2c47d"
        ],
        [
            "Hypotheses (p_gt1 : p > 1) (q_gt1 : q > 1).",
            "VernacAssumption",
            "3b9726109675538bebafcf339d8dbb913c28e4ab"
        ],
        [
            "Lemma card : #|[set: gtype]| = (p * q)%N.",
            "VernacStartTheoremProof",
            "68954af1802de9d31e5ce6eec19e366a761a8b2c"
        ],
        [
            "rewrite [gtype]unlock -(sdprod_card (sdprod_sdpair _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !card_injm ?injm_sdpair1 ?injm_sdpair2 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulnC -!orderE !order_Zp1 !Zp_cast.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Grp : (exists s, [/\\ s \\in Aut B, #[s] %| p & s b = b ^+ e]) -> [set: gtype] \\isog Grp (x : y : (x ^+ q, y ^+ p, x ^ y = x ^+ e)).",
            "VernacStartTheoremProof",
            "ecc2c272ca6bb41864cd9f46017e3378ff78ddf0"
        ],
        [
            "rewrite [gtype]unlock => [[s [AutBs dvd_s_p sb]]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have memB: _ \\in B by move=> c; rewrite -Zp_cycle inE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Aa: a \\in <[a]> by rewrite !cycle_id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [oa ob]: #[a] = p /\\ #[b] = q by rewrite !order_Zp1 !Zp_cast.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_s: aut_of = s.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /aut_of; case: pickP => /= [t | ]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/(_ s); case/and4P; rewrite sb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/and4P=> AutBt _ _ tb; apply: (eq_Aut AutBt) => // b_i.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "case/cycleP=> i ->; rewrite -(autmE AutBt) -(autmE AutBs) !morphX //=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite !autmE // sb (eqP tb).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: intro_isoGrp => [|gT G].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/existsP; exists (sdpair1 _ b, sdpair2 _ a); rewrite /= !xpair_eqE.",
            "VernacExtend",
            "b58b19493740178b5c7bdf7fdc3017aa026eba1d"
        ],
        [
            "rewrite -!morphim_cycle ?norm_joinEr ?im_sdpair ?im_sdpair_norm ?eqxx //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!order_dvdn !order_injm ?injm_sdpair1 ?injm_sdpair2 // oa ob !dvdnn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -sdpair_act // [act _ _ _]apermE /= eltm_id -morphX // -sb -def_s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/existsP=> -[x y] /= /eqP[defG xq1 yp1 xy].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have fxP: #[x] %| #[b] by rewrite order_dvdn ob xq1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have fyP: #[y] %| #[a] by rewrite order_dvdn oa yp1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have fP: {in <[b]> & <[a]>, morph_act gact 'J (eltm fxP) (eltm fyP)}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> bj ai; case/cycleP=> j ->{bj}; case/cycleP=> i ->{ai}.",
            "VernacExtend",
            "fd777b019349da348ceeb72ef62c9f8d707a4c0b"
        ],
        [
            "rewrite /= !eltmE def_s gactX ?groupX // conjXg morphX //=; congr (_ ^+ j).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite /autact /= apermE; elim: i {j} => /= [|i IHi].",
            "VernacExtend",
            "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
        ],
        [
            "by rewrite perm1 eltm_id conjg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !expgS permM sb -(autmE (groupX i AutBs)) !morphX //= {}IHi.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -conjXg -xy -conjgM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/homgP; exists (xsdprod_morphism fP).",
            "VernacExtend",
            "87e8d06f2dccd4401c2ca94e64c2d4685cf580ec"
        ],
        [
            "rewrite im_xsdprodm !morphim_cycle //= !eltm_id -norm_joinEr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite norms_cycle xy mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Construction.",
            "VernacEndSegment",
            "397210f9d1f79427b9d76ff066e0025abc282539"
        ],
        [
            "End Extremal.",
            "VernacEndSegment",
            "12ee654e69ee0f54bbdcb3f931c9f4ce6c48604f"
        ],
        [
            "Section SpecializeExtremals.",
            "VernacBeginSection",
            "a30d9e6a815f4dabef566fbfbb0756f7940c8ef3"
        ],
        [
            "Import Extremal.",
            "VernacImport",
            "6070175dc61a532aafe8921ccd75d33d9e0b68a3"
        ],
        [
            "Variable m : nat.",
            "VernacAssumption",
            "32da0a0852c20216f61fccf152f67371355e7d98"
        ],
        [
            "Let p := pdiv m.",
            "VernacDefinition",
            "a5bf07c2c1f2e12a45c5e9fe14e86eddea77f0e2"
        ],
        [
            "Let q := m %/ p.",
            "VernacDefinition",
            "c6450ad2179901b6f0288f46c269c589681e309d"
        ],
        [
            "Definition modular_gtype := gtype q p (q %/ p).+1.",
            "VernacDefinition",
            "42ca068a7b4091f926da39bedf117cd7a2ff1aa7"
        ],
        [
            "Definition dihedral_gtype := gtype q 2 q.-1.",
            "VernacDefinition",
            "35d5fb192d067236af3600055fda644c28b7a31f"
        ],
        [
            "Definition semidihedral_gtype := gtype q 2 (q %/ p).-1.",
            "VernacDefinition",
            "05fa88fc3ff893977a26f61d22a00acbf704327b"
        ],
        [
            "Definition quaternion_kernel := <<[set u | u ^+ 2 == 1] :\\: [set u ^+ 2 | u in [set: gtype q 4 q.-1]]>>.",
            "VernacDefinition",
            "3745ec46a23c713bfe6861558ed8ec85b6a092e3"
        ],
        [
            "Definition quaternion_gtype := locked_with gtype_key (coset_groupType quaternion_kernel).",
            "VernacDefinition",
            "53d3272206f7501a51b88a288735862975e6d896"
        ],
        [
            "End SpecializeExtremals.",
            "VernacEndSegment",
            "62d4586cf9ac1bf127ad6b01672cad393a3d8329"
        ],
        [
            "Notation \"''Mod_' m\" := (modular_gtype m) : type_scope.",
            "VernacNotation",
            "f9ff277b229ec0e69154991e0bffc439222518e6"
        ],
        [
            "Notation \"''Mod_' m\" := [set: gsort 'Mod_m] : group_scope.",
            "VernacNotation",
            "90e7c6b6b639a06937b98c4a96f3617c8919efbd"
        ],
        [
            "Notation \"''Mod_' m\" := [set: gsort 'Mod_m]%G : Group_scope.",
            "VernacNotation",
            "5fa309b1ae015fb2b22b1a9c9ba0e9f2e877003d"
        ],
        [
            "Notation \"''D_' m\" := (dihedral_gtype m) : type_scope.",
            "VernacNotation",
            "34ae13d8245756eae006c7ecc1541402e48e730a"
        ],
        [
            "Notation \"''D_' m\" := [set: gsort 'D_m] : group_scope.",
            "VernacNotation",
            "3501cb4272ce6221a989fb7473639a87f9b70459"
        ],
        [
            "Notation \"''D_' m\" := [set: gsort 'D_m]%G : Group_scope.",
            "VernacNotation",
            "8094d507d829cb61c4fda5066506e2a959f1bccb"
        ],
        [
            "Notation \"''SD_' m\" := (semidihedral_gtype m) : type_scope.",
            "VernacNotation",
            "bf75db09f0a2605c2f38980c3e24c6dd1ea5a312"
        ],
        [
            "Notation \"''SD_' m\" := [set: gsort 'SD_m] : group_scope.",
            "VernacNotation",
            "d2b39603b4fc81a9be44eb49eaa256fa0bb4b0ba"
        ],
        [
            "Notation \"''SD_' m\" := [set: gsort 'SD_m]%G : Group_scope.",
            "VernacNotation",
            "14b01de0d94aa18a13fe2aa82a10ecd5445683bb"
        ],
        [
            "Notation \"''Q_' m\" := (quaternion_gtype m) : type_scope.",
            "VernacNotation",
            "3e8b621edf6042b64a1da18207e4dccf7a7f98b7"
        ],
        [
            "Notation \"''Q_' m\" := [set: gsort 'Q_m] : group_scope.",
            "VernacNotation",
            "e546b3bf85af96c944bfbc3dfdad24d190338943"
        ],
        [
            "Notation \"''Q_' m\" := [set: gsort 'Q_m]%G : Group_scope.",
            "VernacNotation",
            "5493abbaaf2387616e4af392a8f7d65be64026d7"
        ],
        [
            "Section ExtremalTheory.",
            "VernacBeginSection",
            "8fb4d38c8f69e222216b54f8e729fab357137557"
        ],
        [
            "Implicit Types (gT : finGroupType) (p q m n : nat).",
            "VernacReserve",
            "3875fc320baa8fa196872c2f05796d2681b4e7b4"
        ],
        [
            "Lemma cyclic_pgroup_Aut_structure gT p (G : {group gT}) : p.-group G -> cyclic G -> G :!=: 1 -> let q := #|G| in let n := (logn p q).-1 in let A := Aut G in let P := 'O_p(A) in let F := 'O_p^'(A) in exists m : {perm gT} -> 'Z_q, [/\\ [/\\ {in A & G, forall a x, x ^+ m a = a x}, m 1 = 1%R /\\ {in A &, {morph m : a b / a * b >-> (a * b)%R}}, {in A &, injective m} /\\ image m A =i GRing.unit, forall k, {in A, {morph m : a / a ^+ k >-> (a ^+ k)%R}} & {in A, {morph m : a / a^-1 >-> (a^-1)%R}}], [/\\ abelian A, cyclic F, #|F| = p.-1 & [faithful F, on 'Ohm_1(G) | [Aut G]]] & if n == 0%N then A = F else exists t, [/\\ t \\in A, #[t] = 2, m t = - 1%R & if odd p then [/\\ cyclic A /\\ cyclic P, exists s, [/\\ s \\in A, #[s] = (p ^ n)%N, m s = p.+1%:R & P = <[s]>] & exists s0, [/\\ s0 \\in A, #[s0] = p, m s0 = (p ^ n).+1%:R & 'Ohm_1(P) = <[s0]>]] else if n == 1%N then A = <[t]> else exists s, [/\\ s \\in A, #[s] = (2 ^ n.-1)%N, m s = 5%:R, <[s]> \\x <[t]> = A & exists s0, [/\\ s0 \\in A, #[s0] = 2, m s0 = (2 ^ n).+1%:R, m (s0 * t) = (2 ^ n).-1%:R & 'Ohm_1(<[s]>) = <[s0]>]]]].",
            "VernacStartTheoremProof",
            "22e3945c2cd41113befb2823709f94a4e7d40a33"
        ],
        [
            "move=> pG cycG ntG q n0 A P F; have [p_pr p_dvd_G [n oG]] := pgroup_pdiv pG ntG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [x0 defG] := cyclicP cycG; have Gx0: x0 \\in G by rewrite defG cycle_id.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite {1}/q oG pfactorK //= in n0 *; rewrite {}/n0.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "have [p_gt1 min_p] := primeP p_pr; have p_gt0 := ltnW p_gt1.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have q_gt1: q > 1 by rewrite cardG_gt1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cAA: abelian A := Aut_cyclic_abelian cycG; have nilA := abelian_nil cAA.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have oA: #|A| = (p.-1 * p ^ n)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite card_Aut_cyclic // oG totient_pfactor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [sylP hallF]: p.-Sylow(A) P /\\ p^'.-Hall(A) F.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !nilpotent_pcore_Hall.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [defPF tiPF]: P * F = A /\\ P :&: F = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/dprodP: (nilpotent_pcoreC p nilA).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oP: #|P| = (p ^ n)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (card_Hall sylP) oA p_part logn_Gauss ?coprimenP ?pfactorK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oF: #|F| = p.-1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite -(@eqn_pmul2l #|P|) ?cardG_gt0 // -TI_cardMg // defPF.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite oA oP mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [m' [inj_m' defA def_m']]: exists m' : {morphism units_Zp q >-> {perm gT}}, [/\\ 'injm m', m' @* setT = A & {in G, forall x u, m' u x = x ^+ val u}].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /A /q defG; exists (Zp_unit_morphism x0).",
            "VernacExtend",
            "740305c018f71bad06fd4ae976b3c12db72ec2d9"
        ],
        [
            "by have [->]:= isomP (Zp_unit_isom x0); split=> // y Gy u; rewrite permE Gy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose m (a : {perm gT}) : 'Z_q := val (invm inj_m' a).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have{def_m'} def_m: {in A & G, forall a x, x ^+ m a = a x}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> a x Aa Gx /=; rewrite -{2}[a](invmK inj_m') ?defA ?def_m'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have m1: m 1 = 1%R by rewrite /m morph1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have mM: {in A &, {morph m : a b / a * b >-> (a * b)%R}}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> a b Aa Ab; rewrite /m morphM ?defA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have mX k: {in A, {morph m : a / a ^+ k >-> (a ^+ k)%R}}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by elim: k => // k IHk a Aa; rewrite expgS exprS mM ?groupX ?IHk.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have inj_m: {in A &, injective m}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: can_in_inj (fun u => m' (insubd (1 : {unit 'Z_q}) u)) _ => a Aa.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite valKd invmK ?defA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{defA} im_m: image m A =i GRing.unit.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> u; apply/imageP/idP=> [[a Aa ->]| Uu]; first exact: valP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists (m' (Sub u Uu)) => /=; first by rewrite -defA mem_morphim ?inE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /m invmE ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have mV: {in A, {morph m : a / a^-1 >-> (a^-1)%R}}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> a Aa /=; rewrite -div1r; apply: canRL (mulrK (valP _)) _.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite -mM ?groupV ?mulVg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have inv_m (u : 'Z_q) : coprime q u -> {a | a \\in A & m a = u}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -?unitZpE // natr_Zp -im_m => m_u.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by exists (iinv m_u); [apply: mem_iinv | rewrite f_iinv].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [cycF ffulF]: cyclic F /\\ [faithful F, on 'Ohm_1(G) | [Aut G]].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Um0 a: ((m a)%:R : 'F_p) \\in GRing.unit.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: m a \\in GRing.unit by apply: valP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -{1}[m a]natr_Zp unitFpE ?unitZpE // {1}/q oG coprime_pexpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose fm0 a := FinRing.unit 'F_p (Um0 a).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have natZqp u: (u%:R : 'Z_q)%:R = u %:R :> 'F_p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite val_Zp_nat // -Fp_nat_mod // modn_dvdm ?Fp_nat_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have m0M: {in A &, {morph fm0 : a b / a * b}}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> a b Aa Ab; apply: val_inj; rewrite /= -natrM mM //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -[(_ * _)%R]Zp_nat natZqp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose m0 : {morphism A >-> {unit 'F_p}} := Morphism m0M.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have im_m0: m0 @* A = [set: {unit 'F_p}].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP=> [[/= u Uu]]; rewrite in_setT morphimEdom; apply/imsetP.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "have [|a Aa m_a] := inv_m u%:R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite {1}[q]oG coprime_pexpl // -unitFpE // natZqp natr_Zp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists a => //; apply: val_inj; rewrite /= m_a natZqp natr_Zp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [x1 defG1]: exists x1, 'Ohm_1(G) = <[x1]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/cyclicP; apply: cyclicS (Ohm_sub _ _) cycG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ox1: #[x1] = p by rewrite orderE -defG1 (Ohm1_cyclic_pgroup_prime _ pG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Gx1: x1 \\in G by rewrite -cycle_subG -defG1 Ohm_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ker_m0: 'ker m0 = 'C('Ohm_1(G) | [Aut G]).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP=> a; rewrite inE in_setI; apply: andb_id2l => Aa.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite 3!inE /= -2!val_eqE /= val_Fp_nat // [1 %% _]modn_small // defG1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/idP/subsetP=> [ma1 x1i | ma1].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case/cycleP=> i ->{x1i}; rewrite inE gactX // -[_ a]def_m //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite -(expg_mod_order x1) ox1 (eqP ma1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= ma1 x1 (cycle_id x1); rewrite inE -[_ a]def_m //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite (eq_expg_mod_order x1 _ 1) ox1 (modn_small p_gt1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have card_units_Fp: #|[set: {unit 'F_p}]| = p.-1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite card_units_Zp // pdiv_id // (@totient_pfactor p 1) ?muln1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ker_m0_P: 'ker m0 = P.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: nilpotent_Hall_pcore nilA _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite pHallE -(card_Hall sylP) oP subsetIl /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(@eqn_pmul2r #|m0 @* A|) ?cardG_gt0 //; apply/eqP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -{1}(card_isog (first_isog _)) card_quotient ?ker_norm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Lagrange ?subsetIl // oA im_m0 mulnC card_units_Fp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have inj_m0: 'ker_F m0 \\subset [1] by rewrite setIC ker_m0_P tiPF.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split; last by rewrite /faithful -ker_m0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have isogF: F \\isog [set: {unit 'F_p}].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sFA: F \\subset A by apply: pcore_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/isogP; exists (restrm_morphism sFA m0); first by rewrite ker_restrm.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite eqEcard subsetT card_injm ?ker_restrm //= oF.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite card_units_Fp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (isog_cyclic isogF) pdiv_id // -ox1 (isog_cyclic (Zp_unit_isog x1)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Aut_prime_cyclic // -orderE ox1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists m; split=> {im_m mV}//; have [n0 | n_gt0] := posnP n.",
            "VernacExtend",
            "51867e83906b569579dd93a8479c7ee91cfcea54"
        ],
        [
            "by apply/eqP; rewrite eq_sym eqEcard pcore_sub oF oA n0 muln1 /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [t At mt]: {t | t \\in A & m t = -1}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: inv_m; rewrite /= Zp_cast // coprime_modr modn_small // subn1.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite coprimenP // ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ot: #[t] = 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqn_leq order_gt1 dvdn_leq ?order_dvdn //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/eqP; move/(congr1 m); apply/eqP; rewrite mt m1 eq_sym -subr_eq0.",
            "VernacExtend",
            "f8f9a131c18fe75cdf5490f61ec5e1688e17f5f5"
        ],
        [
            "rewrite opprK -val_eqE /= Zp_cast ?modn_small // /q oG ltnW //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (leq_trans (_ : 2 ^ 2 <= p ^ 2)) ?leq_sqr ?leq_exp2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/eqP; apply: inj_m; rewrite ?groupX ?group1 ?mX // mt -signr_odd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists t; split=> //.",
            "VernacExtend",
            "80062b4ef147a0ca71e65ec474f0bf833c325e96"
        ],
        [
            "case G4: (~~ odd p && (n == 1%N)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (even_prime p_pr) G4 => [p2 | -> //]; rewrite p2 /=; move/eqP=> n1.",
            "VernacExtend",
            "c5cb6672fdde6b3af11f77240bf9bbcee9174e45"
        ],
        [
            "rewrite n1 /=; apply/eqP; rewrite eq_sym eqEcard cycle_subG At /=.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by rewrite -orderE oA ot p2 n1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose e0 : nat := ~~ odd p.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have{inv_m} [s As ms]: {s | s \\in A & m s = (p ^ e0.+1).+1%:R}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: inv_m; rewrite val_Zp_nat // coprime_modr /q oG coprime_pexpl //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -(@coprime_pexpl e0.+1) // coprimenS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have lt_e0_n: e0 < n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /e0; case: (~~ _) G4 => //=; rewrite ltn_neqAle eq_sym => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose s0 := s ^+ (p ^ (n - e0.+1)).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have [ms0 os0]: m s0 = (p ^ n).+1%:R /\\ #[s0] = p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have m_se e: exists2 k, k = 1 %[mod p] & m (s ^+ (p ^ e)) = (k * p ^ (e + e0.+1)).+1%:R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "elim: e => [|e [k k1 IHe]]; first by exists 1%N; rewrite ?mul1n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite expnSr expgM mX ?groupX // {}IHe -natrX -(add1n (k * _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite expnDn -(prednK p_gt0) 2!big_ord_recl /= prednK // !exp1n bin1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite bin0 muln1 mul1n mulnCA -expnS (addSn e).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set f := (e + _)%N; set sum := (\\sum_i _)%N.",
            "VernacExtend",
            "7405ffc63057f1493a790d3f39e251cc5fefe81f"
        ],
        [
            "exists (sum %/ p ^ f.+2 * p + k)%N; first by rewrite modnMDl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -(addnC k) mulnDl -mulnA -expnS divnK // {}/sum.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply big_ind => [||[i _] /= _]; [exact: dvdn0 | exact: dvdn_add |].",
            "VernacExtend",
            "e874c75c7545b27619c82b4c511ca303b5ad7c4e"
        ],
        [
            "rewrite exp1n mul1n /bump !add1n expnMn mulnCA dvdn_mull // -expnM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (ltnP f.+1 (f * i.+2)) => [le_f_fi|].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite dvdn_mull ?dvdn_exp2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}mulnS -(addn1 f) leq_add2l {}/f addnS /e0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: i e => [] // [] //; case odd_p: (odd p) => //= _.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite bin2odd // mulnAC dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [[|d]] := m_se (n - e0.+1)%N; first by rewrite mod0n modn_small.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP; rewrite -/s0 eqn_mod_dvd ?subn1 //=; case/dvdnP=> f -> {d}.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "rewrite subnK // mulSn -mulnA -expnS -addSn natrD natrM -oG char_Zp //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulr0 addr0 => m_s0; split => //.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "have [d _] := m_se (n - e0)%N; rewrite -subnSK // expnSr expgM -/s0.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite addSn subnK // -oG mulrS natrM char_Zp // {d}mulr0 addr0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/eqP; rewrite -m1 (inj_in_eq inj_m) ?group1 ?groupX // -order_dvdn.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/min_p; rewrite order_eq1; case/predU1P=> [s0_1 | ]; last by move/eqP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: m_s0; rewrite eq_sym s0_1 m1 -subr_eq0 mulrSr addrK -val_eqE /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have pf_gt0: p ^ _ > 0 by move=> e; rewrite expn_gt0 p_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite val_Zp_nat // /q oG [_ == _]pfactor_dvdn // pfactorK ?ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have os: #[s] = (p ^ (n - e0))%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: #[s] %| p ^ (n - e0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite order_dvdn -subnSK // expnSr expgM -order_dvdn os0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/dvdn_pfactor=> // d; rewrite leq_eqVlt.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case/predU1P=> [-> // | lt_d os]; case/idPn: (p_gt1); rewrite -os0.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "by rewrite order_gt1 negbK -order_dvdn os dvdn_exp2l // -ltnS -subSn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have p_s: p.-elt s by rewrite /p_elt os pnat_exp ?pnat_id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defS1: 'Ohm_1(<[s]>) = <[s0]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEcard cycle_subG -orderE os0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (Ohm1_cyclic_pgroup_prime _ p_s) ?cycle_cyclic ?leqnn ?cycle_eq1 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (OhmE _ p_s) mem_gen ?groupX //= !inE mem_cycle //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -order_dvdn os0 ?dvdnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/eqP=> s1; rewrite -os0 /s0 s1 expg1n order1 in p_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (even_prime p_pr) => [p2 | oddp]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite {+}/e0 oddp subn0 in s0 os0 ms0 os ms defS1 *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [f defF] := cyclicP cycF; have defP: P = <[s]>.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEcard -orderE oP os leqnn andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite cycle_subG (mem_normal_Hall sylP) ?pcore_normal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite defP; split; last 1 [by exists s | by exists s0; rewrite ?groupX].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -defPF defP defF -cycleM ?cycle_cyclic // /order.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by red; rewrite (centsP cAA) // -cycle_subG -defF pcore_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -defF -defP (pnat_coprime (pcore_pgroup _ _) (pcore_pgroup _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {+}/e0 p2 subn1 /= in s0 os0 ms0 os ms G4 defS1 lt_e0_n *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite G4; exists s; split=> //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists s0; split; rewrite ?groupX //; apply/eqP; rewrite mM ?groupX //.",
            "VernacExtend",
            "763ed41502d12313fa2f27db08d36e8e8ff69966"
        ],
        [
            "rewrite ms0 mt eq_sym mulrN1 -subr_eq0 opprK -natrD -addSnnS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite prednK ?expn_gt0 // addnn -mul2n -expnS -p2 -oG char_Zp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices TIst: <[s]> :&: <[t]> = 1.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite dprodE //; last by rewrite (sub_abelian_cent2 cAA) ?cycle_subG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite eqEcard mulG_subG !cycle_subG As At oA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite TI_cardMg // -!orderE os ot p2 mul1n /= -expnSr prednK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite setIC; apply: prime_TIg; first by rewrite -orderE ot.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite cycle_subG; apply/negP=> St.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have: t \\in <[s0]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -defS1 (OhmE _ p_s) mem_gen // !inE St -order_dvdn ot p2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ->: <[s0]> = [set 1; s0].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEcard subUset !sub1set group1 cycle_id /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -orderE cards2 eq_sym -order_gt1 os0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !inE -order_eq1 ot /=; move/eqP; move/(congr1 m); move/eqP.",
            "VernacExtend",
            "3c9f1ac496656da661bb2909a0594604c80a13a4"
        ],
        [
            "rewrite mt ms0 eq_sym -subr_eq0 opprK -mulrSr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -val_eqE [val _]val_Zp_nat //= /q oG p2 modn_small //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -addn3 expnS mul2n -addnn leq_add2l (ltn_exp2l 1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition extremal_generators gT (A : {set gT}) p n xy := let: (x, y) := xy in [/\\ #|A| = (p ^ n)%N, x \\in A, #[x] = (p ^ n.-1)%N & y \\in A :\\: <[x]>].",
            "VernacDefinition",
            "9eae53d48e533280b649fa20b3044dcd1e269a00"
        ],
        [
            "Lemma extremal_generators_facts gT (G : {group gT}) p n x y : prime p -> extremal_generators G p n (x, y) -> [/\\ p.-group G, maximal <[x]> G, <[x]> <| G, <[x]> * <[y]> = G & <[y]> \\subset 'N(<[x]>)].",
            "VernacStartTheoremProof",
            "29a03c46a10530290512c8e1b1fe3c53f9249054"
        ],
        [
            "move=> p_pr [oG Gx ox] /setDP[Gy notXy].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have pG: p.-group G by rewrite /pgroup oG pnat_exp pnat_id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have maxX: maximal <[x]> G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite p_index_maximal -?divgS ?cycle_subG // -orderE oG ox.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (n) oG => [|n' _]; last by rewrite -expnB ?subSnn ?leqnSn ?prime_gt0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP; rewrite -trivg_card1; case/trivgPn.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by exists y; rewrite // (group1_contra notXy).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nsXG := p_maximal_normal pG maxX; split=> //.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "by apply: mulg_normal_maximal; rewrite ?cycle_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite cycle_subG (subsetP (normal_norm nsXG)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ModularGroup.",
            "VernacBeginSection",
            "e4e4189f482c665f1811fe8def28dac8b4ad9445"
        ],
        [
            "Variables p n : nat.",
            "VernacAssumption",
            "7308f94ce2a8f4c7f159016718f5df4e63dcee73"
        ],
        [
            "Let m := (p ^ n)%N.",
            "VernacDefinition",
            "fcc94ab71f7c08b786bf777cb1c030c9597d91bc"
        ],
        [
            "Let q := (p ^ n.-1)%N.",
            "VernacDefinition",
            "42e169c7ff4f310ae8a57cbb5cb08f1b6866025a"
        ],
        [
            "Let r := (p ^ n.-2)%N.",
            "VernacDefinition",
            "361443946277363da79f71709e6239a73c2b58b3"
        ],
        [
            "Hypotheses (p_pr : prime p) (n_gt2 : n > 2).",
            "VernacAssumption",
            "cee244524125a17fd1ae9a2e12530b74746e1e8c"
        ],
        [
            "Let p_gt1 := prime_gt1 p_pr.",
            "VernacDefinition",
            "eabc01a1777693cc50bac61dfad6bb06f49e7727"
        ],
        [
            "Let p_gt0 := ltnW p_gt1.",
            "VernacDefinition",
            "4406cccdc586bed579e412b86155e05f5443ff17"
        ],
        [
            "Let def_n := esym (subnKC n_gt2).",
            "VernacDefinition",
            "34b7a7f72b0b284b9cf5fc765581d63ed3270940"
        ],
        [
            "Let def_p : pdiv m = p.",
            "VernacDefinition",
            "bb8b7a87958480635624c1c21037dc5fc54a86e2"
        ],
        [
            "by rewrite /m def_n pdiv_pfactor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let def_q : m %/ p = q.",
            "VernacDefinition",
            "124a0d999cca0d0d9ebf9e85be82be17713ace40"
        ],
        [
            "by rewrite /m /q def_n expnS mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let def_r : q %/ p = r.",
            "VernacDefinition",
            "2fdbfef0120221d3ec4b1de2d56e89f1d6dc1803"
        ],
        [
            "by rewrite /r /q def_n expnS mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let ltqm : q < m.",
            "VernacDefinition",
            "17e07ba227004703e13a9d9196edb98ae90b1226"
        ],
        [
            "by rewrite ltn_exp2l // def_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let ltrq : r < q.",
            "VernacDefinition",
            "3787b313edb94bfe6deec5d3f30e80541fe2e5bc"
        ],
        [
            "by rewrite ltn_exp2l // def_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let r_gt0 : 0 < r.",
            "VernacDefinition",
            "00afe88646a28d4126a53aa85c76a4ed9a4062f1"
        ],
        [
            "by rewrite expn_gt0 ?p_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let q_gt1 : q > 1.",
            "VernacDefinition",
            "496f8644f77d37f9495800d55a029ed6ce80cbbc"
        ],
        [
            "exact: leq_ltn_trans r_gt0 ltrq.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_modular_group : #|'Mod_(p ^ n)| = (p ^ n)%N.",
            "VernacStartTheoremProof",
            "b8088048f7582904efb720399ada8b864320ce9f"
        ],
        [
            "by rewrite Extremal.card def_p ?def_q // -expnS def_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Grp_modular_group : 'Mod_(p ^ n) \\isog Grp (x : y : (x ^+ q, y ^+ p, x ^ y = x ^+ r.+1)).",
            "VernacStartTheoremProof",
            "521fa7d44177de3ef8b2422e06cf73eb6de5939e"
        ],
        [
            "rewrite /modular_gtype def_p def_q def_r; apply: Extremal.Grp => //.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "set B := <[_]>; have Bb: Zp1 \\in B by apply: cycle_id.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "have oB: #|B| = q by rewrite -orderE order_Zp1 Zp_cast.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cycB: cyclic B by rewrite cycle_cyclic.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have pB: p.-group B by rewrite /pgroup oB pnat_exp ?pnat_id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ntB: B != 1 by rewrite -cardG_gt1 oB.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [] := cyclic_pgroup_Aut_structure pB cycB ntB.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite oB pfactorK //= -/B -(expg_znat r.+1 Bb) oB => mB [[def_mB _ _ _ _] _].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite {1}def_n /= => [[t [At ot mBt]]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [p2 | ->] := even_prime p_pr; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=> _ _ [s [As os mBs _]]; exists s; rewrite os -mBs def_mB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}p2 /= -2!eqSS -addn2 -2!{1}subn1 -subnDA subnK 1?ltnW //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: eqP => [n3 _ | _ [_ [_ _ _ _ [s [As os mBs _ _]{t At ot mBt}]]]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists t; rewrite At ot -def_mB // mBt /q /r p2 n3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists s; rewrite As os -def_mB // mBs /r p2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition modular_group_generators gT (xy : gT * gT) := let: (x, y) := xy in #[y] = p /\\ x ^ y = x ^+ r.+1.",
            "VernacDefinition",
            "03f71bcba1f7ddf56ded7a86aa4e97e0ce93ee35"
        ],
        [
            "Lemma generators_modular_group gT (G : {group gT}) : G \\isog 'Mod_m -> exists2 xy, extremal_generators G p n xy & modular_group_generators xy.",
            "VernacStartTheoremProof",
            "7ffae2c2f1dd55226764e8c6b01aa6e10b848277"
        ],
        [
            "case/(isoGrpP _ Grp_modular_group); rewrite card_modular_group // -/m => oG.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case/existsP=> -[x y] /= /eqP[defG xq yp xy].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite norm_joinEr ?norms_cycle ?xy ?mem_cycle // in defG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [Gx Gy]: x \\in G /\\ y \\in G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/andP; rewrite -!cycle_subG -mulG_subG defG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have notXy: y \\notin <[x]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraL ltqm; rewrite -cycle_subG -oG -defG; move/mulGidPl->.",
            "VernacExtend",
            "0411bbc6b587ae6e29b303e9104f9d1499478ca8"
        ],
        [
            "by rewrite -leqNgt dvdn_leq ?(ltnW q_gt1) // order_dvdn xq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oy: #[y] = p by apply: nt_prime_order (group1_contra notXy).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (x, y) => //=; split; rewrite ?inE ?notXy //.",
            "VernacExtend",
            "447989d4786b24d7d7187cb0f5165ac4e32c1375"
        ],
        [
            "apply/eqP; rewrite -(eqn_pmul2r p_gt0) -expnSr -{1}oy (ltn_predK n_gt2) -/m.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -TI_cardMg ?defG ?oG // setIC prime_TIg ?cycle_subG // -orderE oy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modular_group_structure gT (G : {group gT}) x y : extremal_generators G p n (x, y) -> G \\isog 'Mod_m -> modular_group_generators (x, y) -> let X := <[x]> in [/\\ [/\\ X ><| <[y]> = G, ~~ abelian G & {in X, forall z j, z ^ (y ^+ j) = z ^+ (j * r).+1}], [/\\ 'Z(G) = <[x ^+ p]>, 'Phi(G) = 'Z(G) & #|'Z(G)| = r], [/\\ G^`(1) = <[x ^+ r]>, #|G^`(1)| = p & nil_class G = 2], forall k, k > 0 -> 'Mho^k(G) = <[x ^+ (p ^ k)]> & if (p, n) == (2, 3) then 'Ohm_1(G) = G else forall k, 0 < k < n.-1 -> <[x ^+ (p ^ (n - k.+1))]> \\x <[y]> = 'Ohm_k(G) /\\ #|'Ohm_k(G)| = (p ^ k.+1)%N].",
            "VernacStartTheoremProof",
            "6a4c8fd53b8feb1b8f810b2c95d79271ae1cae77"
        ],
        [
            "move=> genG isoG [oy xy] X.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [oG Gx ox /setDP[Gy notXy]] := genG; rewrite -/m -/q in ox oG.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have [pG _ nsXG defXY nXY] := extremal_generators_facts p_pr genG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [sXG nXG] := andP nsXG; have sYG: <[y]> \\subset G by rewrite cycle_subG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have n1_gt1: n.-1 > 1 by [rewrite def_n]; have n1_gt0 := ltnW n1_gt1.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have def_n1 := prednK n1_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_m: (q * p)%N = m by rewrite -expnSr /m def_n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have notcxy: y \\notin 'C[x].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraL (introT eqP xy); move/cent1P=> cxy.",
            "VernacExtend",
            "86bb0d3d5ae27b38aac15f69d532d662f1518315"
        ],
        [
            "rewrite /conjg -cxy // eq_mulVg1 expgS !mulKg -order_dvdn ox.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite pfactor_dvdn ?expn_gt0 ?p_gt0 // pfactorK // -ltnNge prednK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have tiXY: <[x]> :&: <[y]> = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite setIC prime_TIg -?orderE ?oy //; apply: contra notcxy.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite cycle_subG; apply: subsetP; rewrite cycle_subG cent1id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have notcGG: ~~ abelian G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -defXY abelianM !cycle_abelian cent_cycle cycle_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have cXpY: <[y]> \\subset 'C(<[x ^+ p]>).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite cent_cycle cycle_subG cent1C (sameP cent1P commgP) /commg conjXg xy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -expgM mulSn expgD mulKg -expnSr def_n1 -/q -ox expg_order.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oxp: #[x ^+ p] = r by rewrite orderXdiv ox ?dvdn_exp //.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [sZG nZG] := andP (center_normal G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defZ: 'Z(G) = <[x ^+ p]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEcard subsetI -{2}defXY centM subsetI cent_cycle.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite 2!cycle_subG !groupX ?cent1id //= centsC cXpY /= -orderE oxp leqNgt.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contra notcGG => gtZr; apply: cyclic_center_factor_abelian.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite (dvdn_prime_cyclic p_pr) // card_quotient //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(dvdn_pmul2l (cardG_gt0 'Z(G))) Lagrange // oG -def_m dvdn_pmul2r //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/p_natP: (pgroupS sZG pG) gtZr => k ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite ltn_exp2l // def_n1; apply: dvdn_exp2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Zxr: x ^+ r \\in 'Z(G) by rewrite /r def_n expnS expgM defZ mem_cycle.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have rxy: [~ x, y] = x ^+ r by rewrite /commg xy expgS mulKg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defG': G^`(1) = <[x ^+ r]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/setIP: Zxr => _; rewrite -rxy -defXY -(norm_joinEr nXY).",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "exact: der1_joing_cycles.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have oG': #|G^`(1)| = p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite defG' -orderE orderXdiv ox /q -def_n1 ?dvdn_exp2l // expnS mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sG'Z: G^`(1) \\subset 'Z(G) by rewrite defG' cycle_subG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nil2_G: nil_class G = 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/eqP; rewrite eqn_leq andbC ltnNge nil_class1 notcGG nil_class2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have XYp: {in X & <[y]>, forall z t, (z * t) ^+ p \\in z ^+ p *: <[x ^+ r ^+ 'C(p, 2)]>}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> z t Xz Yt; have Gz := subsetP sXG z Xz; have Gt := subsetP sYG t Yt.",
            "VernacExtend",
            "d4976b9870677004da516d019260011c2c7bf565"
        ],
        [
            "have Rtz: [~ t, z] \\in G^`(1) by apply: mem_commg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cGtz: [~ t, z] \\in 'C(G) by case/setIP: (subsetP sG'Z _ Rtz).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite expMg_Rmul /commute ?(centP cGtz) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have ->: t ^+ p = 1 by apply/eqP; rewrite -order_dvdn -oy order_dvdG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite defG' in Rtz; case/cycleP: Rtz => i ->.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite mem_lcoset mulg1 mulKg expgAC mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defMho: 'Mho^1(G) = <[x ^+ p]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset cycle_subG (Mho_p_elt 1) ?(mem_p_elt pG) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite andbT (MhoE 1 pG) gen_subG -defXY; apply/subsetP=> ztp.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "case/imsetP=> zt; case/imset2P=> z t Xz Yt -> -> {zt ztp}.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "apply: subsetP (XYp z t Xz Yt); case/cycleP: Xz => i ->.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "by rewrite expgAC mul_subG ?sub1set ?mem_cycle //= -defZ cycle_subG groupX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> //; try exact: extend_cyclic_Mho.",
            "VernacExtend",
            "3f5ffbb97e0c7c58320f97c031e2f502815a6c43"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite sdprodE //; split=> // z; case/cycleP=> i ->{z} j.",
            "VernacExtend",
            "8c50bfd27b7aaac6b61038e0d9bbeb37bfdb8a96"
        ],
        [
            "rewrite conjXg -expgM mulnC expgM actX; congr (_ ^+ i).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "elim: j {i} => //= j ->; rewrite conjXg xy -!expgM mulnS mulSn addSn.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "rewrite addnA -mulSn -addSn expgD mulnCA (mulnC j).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {3}/r def_n expnS mulnA -expnSr def_n1 -/q -ox -mulnA expgM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite expg_order expg1n mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (Phi_joing pG) defMho -defZ (joing_idPr _) ?defZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have G1y: y \\in 'Ohm_1(G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (OhmE _ pG) mem_gen // !inE Gy -order_dvdn oy /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: eqP => [[p2 n3] | notG8 k]; last case/andP=> k_gt0 lt_k_n1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite eqEsubset Ohm_sub -{1}defXY mulG_subG !cycle_subG.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite G1y -(groupMr _ G1y) /= (OhmE _ pG) mem_gen // !inE groupM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /q /r p2 n3 in oy ox xy *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite expgS -mulgA -{1}(invg2id oy) -conjgE xy -expgS -order_dvdn ox.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have le_k_n2: k <= n.-2 by rewrite -def_n1 in lt_k_n1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices{lt_k_n1} defGk: <[x ^+ (p ^ (n - k.+1))]> \\x <[y]> = 'Ohm_k(G).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "split=> //; case/dprodP: defGk => _ <- _ tiXkY; rewrite expnSr TI_cardMg //.",
            "VernacExtend",
            "2ec7e94e3b7153a35df793e01cb5c36a154cc563"
        ],
        [
            "rewrite -!orderE oy (subnDA 1) subn1 orderXdiv ox ?dvdn_exp2l ?leq_subr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /q -{1}(subnK (ltnW lt_k_n1)) expnD mulKn // expn_gt0 p_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices{k k_gt0 le_k_n2} defGn2: <[x ^+ p]> \\x <[y]> = 'Ohm_(n.-2)(G).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "have:= Ohm_dprod k defGn2; have p_xp := mem_p_elt pG (groupX p Gx).",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite (Ohm_p_cycle _ p_xp) (Ohm_p_cycle _ (mem_p_elt pG Gy)) oxp oy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite pfactorK ?(pfactorK 1) // (eqnP k_gt0) expg1 -expgM -expnS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -subSn // -subSS def_n1 def_n => -> /=; rewrite subnSK // subn2.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by apply/eqP; rewrite eqEsubset OhmS ?Ohm_sub //= -{1}Ohm_id OhmS ?Ohm_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite dprodEY //=; last by apply/trivgP; rewrite -tiXY setSI ?cycleX.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite eqEsubset join_subG !cycle_subG /= {-2}(OhmE _ pG) -/r.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite def_n (subsetP (Ohm_leq G (ltn0Sn _))) // mem_gen /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !inE -order_dvdn oxp groupX /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite gen_subG /= cent_joinEr // -defXY; apply/subsetP=> uv; case/setIP.",
            "VernacExtend",
            "e653a755ab5d693b79348e5a2832d3e386fea3c7"
        ],
        [
            "case/imset2P=> u v Xu Yv ->{uv}; rewrite /r inE def_n expnS expgM.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case/lcosetP: (XYp u v Xu Yv) => _ /cycleP[j ->] ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/cycleP: Xu => i ->{u}; rewrite -!(expgM, expgD) -order_dvdn ox.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite (mulnC r) /r {1}def_n expnSr mulnA -mulnDl -mulnA -expnS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite subnSK // subn2 /q -def_n1 expnS dvdn_pmul2r // dvdn_addl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/dvdnP=> k ->; rewrite mulnC expgM mem_mulg ?mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (ltngtP n 3) => [|n_gt3|n3]; first by rewrite ltnNge n_gt2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -subnSK // expnSr mulnA dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (even_prime p_pr) notG8 => [-> | oddp _]; first by rewrite n3.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite bin2odd // -!mulnA dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ModularGroup.",
            "VernacEndSegment",
            "ce2b9a2e5cbf3ec1300d681383089e24a416cb41"
        ],
        [
            "Section DihedralGroup.",
            "VernacBeginSection",
            "0126e81458d039c7c081762225fc05b43c93b0aa"
        ],
        [
            "Variable q : nat.",
            "VernacAssumption",
            "2a7055995b2998404dcde6c8a6807d0b9ed6278c"
        ],
        [
            "Hypothesis q_gt1 : q > 1.",
            "VernacAssumption",
            "8ca44e039f81f1452eaecfa34b9a07cdc5134018"
        ],
        [
            "Let m := q.*2.",
            "VernacDefinition",
            "16b21d04bd85745be829343675b1fe5fc0da91a6"
        ],
        [
            "Let def2 : pdiv m = 2.",
            "VernacDefinition",
            "29726f89c7fb10de601eb410d6ef41c82279524e"
        ],
        [
            "apply/eqP; rewrite /m -mul2n eqn_leq pdiv_min_dvd ?dvdn_mulr //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite prime_gt1 // pdiv_prime // (@leq_pmul2l 2 1) ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let def_q : m %/ pdiv m = q.",
            "VernacDefinition",
            "ac1c3b55307d160f5f9e9a9028c7febab0049eba"
        ],
        [
            "by rewrite def2 divn2 half_double.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Dihedral_extension.",
            "VernacBeginSection",
            "d87ea9a86e6f878f3cbe420d5019a21319103dcd"
        ],
        [
            "Variable p : nat.",
            "VernacAssumption",
            "981ac4bb8674cf2cc0a9bf436584a314bb426aa4"
        ],
        [
            "Hypotheses (p_gt1 : p > 1) (even_p : 2 %| p).",
            "VernacAssumption",
            "3dd59010f44c090603e371869044df75d6ea9547"
        ],
        [
            "Local Notation ED := [set: gsort (Extremal.gtype q p q.-1)].",
            "VernacSyntacticDefinition",
            "df5995544c79824c912d3c68b9b93766aa28439d"
        ],
        [
            "Lemma card_ext_dihedral : #|ED| = (p./2 * m)%N.",
            "VernacStartTheoremProof",
            "2485657f392958a42caede4beb4362f22cb826f2"
        ],
        [
            "by rewrite Extremal.card // /m -mul2n -divn2 mulnA divnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Grp_ext_dihedral : ED \\isog Grp (x : y : (x ^+ q, y ^+ p, x ^ y = x^-1)).",
            "VernacStartTheoremProof",
            "4ec392d55ae4f6843457c4c58eea6bfe415b4846"
        ],
        [
            "suffices isoED: ED \\isog Grp (x : y : (x ^+ q, y ^+ p, x ^ y = x ^+ q.-1)).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "move=> gT G; rewrite isoED.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: eq_existsb => [[x y]] /=; rewrite !xpair_eqE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "congr (_ && _); apply: andb_id2l; move/eqP=> xq1; congr (_ && (_ == _)).",
            "VernacExtend",
            "b7ff7a688bc0638493ff6de9c62f47f8f68e54f1"
        ],
        [
            "by apply/eqP; rewrite eq_sym eq_invg_mul -expgS (ltn_predK q_gt1) xq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have unitrN1 : - 1 \\in GRing.unit by move=> R; rewrite unitrN unitr1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose uN1 := FinRing.unit ('Z_#[Zp1 : 'Z_q]) (unitrN1 _).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "apply: Extremal.Grp => //; exists (Zp_unitm uN1).",
            "VernacExtend",
            "a292c5cbf62d6469f544eb777a7384d621f9d00f"
        ],
        [
            "rewrite Aut_aut order_injm ?injm_Zp_unitm ?in_setT //; split=> //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by rewrite (dvdn_trans _ even_p) // order_dvdn -val_eqE /= mulrNN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite autE ?cycle_id // eq_expg_mod_order /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite order_Zp1 !Zp_cast // !modn_mod (modn_small q_gt1) subn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Dihedral_extension.",
            "VernacEndSegment",
            "26b58f7b76cdaf0671b3efe54d44d1306823b3b4"
        ],
        [
            "Lemma card_dihedral : #|'D_m| = m.",
            "VernacStartTheoremProof",
            "ec4968d7869570cfe715006a0926464ac0ecce16"
        ],
        [
            "by rewrite /('D_m)%type def_q card_ext_dihedral ?mul1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Grp_dihedral : 'D_m \\isog Grp (x : y : (x ^+ q, y ^+ 2, x ^ y = x^-1)).",
            "VernacStartTheoremProof",
            "67c57e72e1c5b402231f1a854ca2a57f28ca8d3e"
        ],
        [
            "by rewrite /('D_m)%type def_q; apply: Grp_ext_dihedral.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Grp'_dihedral : 'D_m \\isog Grp (x : y : (x ^+ 2, y ^+ 2, (x * y) ^+ q)).",
            "VernacStartTheoremProof",
            "4c8ef5a3c3534f1762b0ebf47197bd4434c2f3a4"
        ],
        [
            "move=> gT G; rewrite Grp_dihedral; apply/existsP/existsP=> [] [[x y]] /=.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "case/eqP=> <- xq1 y2 xy; exists (x * y, y); rewrite !xpair_eqE /= eqEsubset.",
            "VernacExtend",
            "0be9ed8f11c5c6995d4751c84c8ab224a0de274c"
        ],
        [
            "rewrite !join_subG !joing_subr !cycle_subG -{3}(mulgK y x) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite 2?groupM ?groupV ?mem_gen ?inE ?cycle_id ?orbT //= -mulgA expgS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite {1}(conjgC x) xy -mulgA mulKg -(expgS y 1) y2 mulg1 xq1 !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/eqP=> <- x2 y2 xyq; exists (x * y, y); rewrite !xpair_eqE /= eqEsubset.",
            "VernacExtend",
            "0be9ed8f11c5c6995d4751c84c8ab224a0de274c"
        ],
        [
            "rewrite !join_subG !joing_subr !cycle_subG -{3}(mulgK y x) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite 2?groupM ?groupV ?mem_gen ?inE ?cycle_id ?orbT //= xyq y2 !eqxx /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eq_sym eq_invg_mul !mulgA mulgK -mulgA -!(expgS _ 1) x2 y2 mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DihedralGroup.",
            "VernacEndSegment",
            "98a8a0a041933fce46728966fde6c7b3f5bb6918"
        ],
        [
            "Lemma involutions_gen_dihedral gT (x y : gT) : let G := <<[set x; y]>> in #[x] = 2 -> #[y] = 2 -> x != y -> G \\isog 'D_#|G|.",
            "VernacStartTheoremProof",
            "ccdea751f58765cca233ed22515348c660af8b24"
        ],
        [
            "move=> G ox oy ne_x_y; pose q := #[x * y].",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have q_gt1: q > 1 by rewrite order_gt1 -eq_invg_mul invg_expg ox.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have homG: G \\homg 'D_q.*2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Grp'_dihedral //; apply/existsP; exists (x, y); rewrite /= !xpair_eqE.",
            "VernacExtend",
            "1db4362b1b2b2aa086332163cb8eba7a5eb98340"
        ],
        [
            "by rewrite joing_idl joing_idr -{1}ox -oy !expg_order !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff oG: #|G| = q.*2 by rewrite oG isogEcard oG card_dihedral ?leqnn ?andbT.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "have: #|G| %| q.*2 by rewrite -card_dihedral ?card_homg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Gxy: <[x * y]> \\subset G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cycle_subG groupM ?mem_gen ?set21 ?set22.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have[k oG]: exists k, #|G| = (k * q)%N by apply/dvdnP; rewrite cardSg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite oG -mul2n dvdn_pmul2r ?order_gt0 ?dvdn_divisors // !inE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/pred2P=> [k1 | -> //]; case/negP: ne_x_y.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have cycG: cyclic G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/cyclicP; exists (x * y); apply/eqP.",
            "VernacExtend",
            "90f9b810b00195f367a82b2ea0299d1c4a16e980"
        ],
        [
            "by rewrite eq_sym eqEcard Gxy oG k1 mul1n leqnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: <[x]> == <[y]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (eq_subG_cyclic cycG) ?genS ?subsetUl ?subsetUr -?orderE ?ox ?oy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite eqEcard cycle_subG /= cycle2g // !inE -order_eq1 ox; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Grp_2dihedral n : n > 1 -> 'D_(2 ^ n) \\isog Grp (x : y : (x ^+ (2 ^ n.-1), y ^+ 2, x ^ y = x^-1)).",
            "VernacStartTheoremProof",
            "c741d98ba8ba8004a71e6f2e370ec2ee093cd5f0"
        ],
        [
            "move=> n_gt1; rewrite -(ltn_predK n_gt1) expnS mul2n /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: Grp_dihedral; rewrite (ltn_exp2l 0) // -(subnKC n_gt1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_2dihedral n : n > 1 -> #|'D_(2 ^ n)| = (2 ^ n)%N.",
            "VernacStartTheoremProof",
            "2f0174c7eb2c513f501691794cf8a6622fb92ccd"
        ],
        [
            "move=> n_gt1; rewrite -(ltn_predK n_gt1) expnS mul2n /= card_dihedral //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (ltn_exp2l 0) // -(subnKC n_gt1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_semidihedral n : n > 3 -> #|'SD_(2 ^ n)| = (2 ^ n)%N.",
            "VernacStartTheoremProof",
            "0749e5befeda1a5b99929665e4717a3978ae76d2"
        ],
        [
            "move=> n_gt3.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /('SD__)%type -(subnKC (ltnW (ltnW n_gt3))) pdiv_pfactor //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite // !expnS !mulKn -?expnS ?Extremal.card //= (ltn_exp2l 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Grp_semidihedral n : n > 3 -> 'SD_(2 ^ n) \\isog Grp (x : y : (x ^+ (2 ^ n.-1), y ^+ 2, x ^ y = x ^+ (2 ^ n.-2).-1)).",
            "VernacStartTheoremProof",
            "0df3aecc634df5b02c77e7d3f79883d016420ab1"
        ],
        [
            "move=> n_gt3.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /('SD__)%type -(subnKC (ltnW (ltnW n_gt3))) pdiv_pfactor //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !expnS !mulKn // -!expnS /=; set q := (2 ^ _)%N.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "have q_gt1: q > 1 by rewrite (ltn_exp2l 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: Extremal.Grp => //; set B := <[_]>.",
            "VernacExtend",
            "ac591433247162d5294d7c948ab3b309c2d6e368"
        ],
        [
            "have oB: #|B| = q by rewrite -orderE order_Zp1 Zp_cast.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have pB: 2.-group B by rewrite /pgroup oB pnat_exp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ntB: B != 1 by rewrite -cardG_gt1 oB.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [] := cyclic_pgroup_Aut_structure pB (cycle_cyclic _) ntB.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite oB /= pfactorK //= -/B => m [[def_m _ _ _ _] _].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -{1 2}(subnKC n_gt3) => [[t [At ot _ [s [_ _ _ defA]]]]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case/dprodP: defA => _ defA cst _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have{cst defA} cAt: t \\in 'C(Aut B).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -defA centM inE -sub_cent1 -cent_cycle centsC cst /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cent_cycle cent1id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=> s0 [As0 os0 _ def_s0t _]; exists (s0 * t).",
            "VernacExtend",
            "ebdd43fc8fdb83806545396bb94e0bd8a2865f26"
        ],
        [
            "rewrite -def_m ?groupM ?cycle_id // def_s0t !Zp_expg !mul1n valZpK Zp_nat.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite order_dvdn expgMn /commute 1?(centP cAt) // -{1}os0 -{1}ot.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !expg_order mul1g.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Quaternion.",
            "VernacBeginSection",
            "6a4837438fd88aa13a8009246b678ae498f2d3c3"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Hypothesis n_gt2 : n > 2.",
            "VernacAssumption",
            "d38509394cdcdcd8dc91feb03bdeb893f4334ebf"
        ],
        [
            "Let m := (2 ^ n)%N.",
            "VernacDefinition",
            "28f9e6cc366894bc6e299dd5b50463d53a4f8752"
        ],
        [
            "Let q := (2 ^ n.-1)%N.",
            "VernacDefinition",
            "cec2d97e3848fb378bdddbc3126955964c823819"
        ],
        [
            "Let r := (2 ^ n.-2)%N.",
            "VernacDefinition",
            "59efcb78117a76f066d0219ef6d21926e3b51138"
        ],
        [
            "Let GrpQ := 'Q_m \\isog Grp (x : y : (x ^+ q, y ^+ 2 = x ^+ r, x ^ y = x^-1)).",
            "VernacDefinition",
            "ae9bccf85eac5d1134a79ad945cef7a09b627481"
        ],
        [
            "Let defQ : #|'Q_m| = m /\\ GrpQ.",
            "VernacDefinition",
            "ecd749ed5ab4aa6e03b3041d0e860e24b24d891f"
        ],
        [
            "have q_gt1 : q > 1 by rewrite (ltn_exp2l 0) // -(subnKC n_gt2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_m : (2 * q)%N = m by rewrite -expnS (ltn_predK n_gt2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_q : m %/ pdiv m = q by rewrite /m -(ltn_predK n_gt2) pdiv_pfactor // expnS mulKn.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have r_gt1 : r > 1 by rewrite (ltn_exp2l 0) // -(subnKC n_gt2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def2r : (2 * r)%N = q by rewrite -expnS /q -(subnKC n_gt2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /GrpQ [@quaternion_gtype _]unlock /quaternion_kernel {}def_q.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set B := [set: _]; have: B \\homg Grp (u : v : (u ^+ q, v ^+ 4, u ^ v = u^-1)).",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "by rewrite -Grp_ext_dihedral ?homg_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: #|B| = (q * 4)%N by rewrite card_ext_dihedral // mulnC -muln2 -mulnA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {}/B; move: (Extremal.gtype q 4 _) => gT.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "set B := [set: gT] => oB; set K := _ :\\: _.",
            "VernacExtend",
            "c9a8452e0e06a4c3ac19bcd1b0a42d11d8e194b2"
        ],
        [
            "case/existsP=> -[u v] /= /eqP[defB uq v4 uv].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have nUV: <[v]> \\subset 'N(<[u]>) by rewrite norms_cycle uv groupV cycle_id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite norm_joinEr // in defB.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have le_ou: #[u] <= q by rewrite dvdn_leq ?expn_gt0 // order_dvdn uq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have le_ov: #[v] <= 4 by rewrite dvdn_leq // order_dvdn v4.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have tiUV: <[u]> :&: <[v]> = 1 by rewrite cardMg_TI // defB oB leq_mul.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{le_ou le_ov} [ou ov]: #[u] = q /\\ #[v] = 4.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= esym (leqif_mul (leqif_eq le_ou) (leqif_eq le_ov)).2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -TI_cardMg // defB -oB eqxx eqn0Ngt cardG_gt0; do 2!case: eqP=> //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sdB: <[u]> ><| <[v]> = B by rewrite sdprodE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have uvj j: u ^ (v ^+ j) = (if odd j then u^-1 else u).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: j => [|j IHj]; first by rewrite conjg1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite expgS conjgM uv conjVg IHj (fun_if invg) invgK if_neg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sqrB i j: (u ^+ i * v ^+ j) ^+ 2 = (if odd j then v ^+ 2 else u ^+ i.*2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite expgS; case: ifP => odd_j.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite {1}(conjgC (u ^+ i)) conjXg uvj odd_j expgVn -mulgA mulKg.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -expgD addnn -(odd_double_half j) odd_j doubleD addnC /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(expg_mod _ v4) -!muln2 -mulnA modnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {2}(conjgC (u ^+ i)) conjXg uvj odd_j mulgA -(mulgA (u ^+ i)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -expgD addnn -(odd_double_half j) odd_j -2!mul2n mulnA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite expgM v4 expg1n mulg1 -expgD addnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose w := u ^+ r * v ^+ 2.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have Kw: w \\in K.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !inE sqrB /= -mul2n def2r uq eqxx andbT -defB.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/imsetP=> [[_]] /imset2P[_ _ /cycleP[i ->] /cycleP[j ->] ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/eqP; rewrite sqrB; case: ifP => _.",
            "VernacExtend",
            "5caed936835e366e9e533d8f19382dcfedbf86d4"
        ],
        [
            "rewrite eq_mulgV1 mulgK -order_dvdn ou pfactor_dvdn ?expn_gt0 ?pfactorK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -ltnNge -(subnKC n_gt2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (canF_eq (mulKg _)); apply/eqP=> def_v2.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "suffices: v ^+ 2 \\in <[u]> :&: <[v]> by rewrite tiUV inE -order_dvdn ov.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite inE {1}def_v2 groupM ?groupV !mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ow: #[w] = 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/setDP: Kw; rewrite inE -order_dvdn dvdn_divisors // !inE /= order_eq1.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case/orP=> /eqP-> // /imsetP[]; exists 1; rewrite ?inE ?expg1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defK: K = [set w].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset sub1set Kw andbT subDset setUC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/subsetP=> uivj; have: uivj \\in B by rewrite inE.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite -{1}defB => /imset2P[_ _ /cycleP[i ->] /cycleP[j ->] ->] {uivj}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !inE sqrB -{-1}[j]odd_double_half.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (odd j); rewrite -order_dvdn ?ov // ou -def2r -mul2n dvdn_pmul2l //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case/dvdnP=> k ->{i}; apply/orP.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "rewrite add0n -[j./2]odd_double_half addnC doubleD -!muln2 -mulnA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(expg_mod_order v) ov modnMDl; case: (odd _); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "right; rewrite mulg1 /r -(subnKC n_gt2) expnSr mulnA expgM.",
            "VernacExtend",
            "659a076b1460ddc341bf9f74b080a8f7b40014b2"
        ],
        [
            "by apply: mem_imset; rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (inj_eq (mulIg _)) -expg_mod_order ou -[k]odd_double_half.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addnC -muln2 mulnDl -mulnA def2r modnMDl -ou expg_mod_order.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (odd k); [left | right]; rewrite ?mul1n ?mul1g //.",
            "VernacExtend",
            "29ddfeee791aa5931f439da3ea510df00e6e5b9e"
        ],
        [
            "by apply/imsetP; exists v; rewrite ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nKB: 'N(<<K>>) = B.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP=> b; rewrite !inE -genJ genS // {1}defK conjg_set1 sub1set.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have:= Kw; rewrite !inE -!order_dvdn orderJ ow !andbT; apply: contra.",
            "VernacExtend",
            "4266062387bb5ba3b4b273358c36b198e35325af"
        ],
        [
            "case/imsetP=> z _ def_wb; apply/imsetP; exists (z ^ b^-1); rewrite ?inE //.",
            "VernacExtend",
            "bf35452d535640fbfa697de01d3c8cf728ec54c2"
        ],
        [
            "by rewrite -conjXg -def_wb conjgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -im_quotient card_quotient // nKB -divgS ?subsetT //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split; first by rewrite oB defK -orderE ow (mulnA q 2 2) mulnK // mulnC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: intro_isoGrp => [|rT H].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/existsP; exists (coset _ u, coset _ v); rewrite /= !xpair_eqE.",
            "VernacExtend",
            "2c11bd7d88692d178a0ef7cfe4d6b00e4db4528b"
        ],
        [
            "rewrite -!morphX -?morphJ -?morphV /= ?nKB ?in_setT // uq uv morph1 !eqxx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/B -defB -norm_joinEr // quotientY ?nKB ?subsetT //= andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !quotient_cycle /= ?nKB ?in_setT ?eqxx //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(coset_kerl _ (mem_gen Kw)) -mulgA -expgD v4 mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/existsP=> -[x y] /= /eqP[defH xq y2 xy].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have ox: #[x] %| #[u] by rewrite ou order_dvdn xq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oy: #[y] %| #[v].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ov order_dvdn (expgM y 2 2) y2 -expgM mulnC def2r xq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have actB: {in <[u]> & <[v]>, morph_act 'J 'J (eltm ox) (eltm oy)}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> _ _ /cycleP[i ->] /cycleP[j ->] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite conjXg uvj fun_if if_arg fun_if expgVn morphV ?mem_cycle //= !eltmE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -expgVn -if_arg -fun_if conjXg; congr (_ ^+ i).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite -{2}[j]odd_double_half addnC expgD -mul2n expgM y2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -expgM conjgM (conjgE x) commuteX // mulKg.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (odd j); rewrite ?conjg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose f := sdprodm sdB actB.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have Kf: 'ker (coset <<K>>) \\subset 'ker f.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite ker_coset defK cycle_subG /= ker_sdprodm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/imset2P; exists (u ^+ r) (v ^+ 2); first exact: mem_cycle.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite inE mem_cycle /= !eltmE y2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: canRL (mulgK _) _; rewrite -mulgA -expgD v4 mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Df: 'dom f \\subset 'dom (coset <<K>>) by rewrite /dom nKB subsetT.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/homgP; exists (factm_morphism Kf Df); rewrite morphim_factm /= -/B.",
            "VernacExtend",
            "e13e7391e9f04a85043831cceb420683b5a80e75"
        ],
        [
            "rewrite -{2}defB morphim_sdprodm // !morphim_cycle ?cycle_id //= !eltm_id.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -norm_joinEr // norms_cycle xy groupV cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_quaternion : #|'Q_m| = m.",
            "VernacStartTheoremProof",
            "d19aa443380557c82f0b30ad2c98e0ca534282e0"
        ],
        [
            "by case defQ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Grp_quaternion : GrpQ.",
            "VernacStartTheoremProof",
            "a1d7e22ab4b600f850640b6252be5d8b97bcb349"
        ],
        [
            "by case defQ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Quaternion.",
            "VernacEndSegment",
            "9d95c07d0583a60c1d92857ec6a3c5e21be34ff6"
        ],
        [
            "Lemma eq_Mod8_D8 : 'Mod_8 = 'D_8.",
            "VernacStartTheoremProof",
            "55e6e3f7762f1f63322a175e206aeb68fb950ee9"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ExtremalStructure.",
            "VernacBeginSection",
            "131422db64962bb1054673394b8bb2344169254c"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (n : nat).",
            "VernacAssumption",
            "91e3bbcc97956621c800159c6bed8d799c65412c"
        ],
        [
            "Implicit Type H : {group gT}.",
            "VernacReserve",
            "2fbb61c110b81079e3a3f2db583810d542153f35"
        ],
        [
            "Let m := (2 ^ n)%N.",
            "VernacDefinition",
            "28f9e6cc366894bc6e299dd5b50463d53a4f8752"
        ],
        [
            "Let q := (2 ^ n.-1)%N.",
            "VernacDefinition",
            "cec2d97e3848fb378bdddbc3126955964c823819"
        ],
        [
            "Let q_gt0: q > 0.",
            "VernacDefinition",
            "249c29b964a87e23d5481e0c7b182a6e1bf2c184"
        ],
        [
            "by rewrite expn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let r := (2 ^ n.-2)%N.",
            "VernacDefinition",
            "59efcb78117a76f066d0219ef6d21926e3b51138"
        ],
        [
            "Let r_gt0: r > 0.",
            "VernacDefinition",
            "96299231a6a92399b5a84faedc9bd1e88b7fc5cc"
        ],
        [
            "by rewrite expn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let def2qr : n > 1 -> [/\\ 2 * q = m, 2 * r = q, q < m & r < q]%N.",
            "VernacDefinition",
            "ec5fd2ffa7c542e72cbfa8937f7fa01fdbd565cc"
        ],
        [
            "by rewrite /q /m /r; move/subnKC=> <-; rewrite !ltn_exp2l ?expnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generators_2dihedral : n > 1 -> G \\isog 'D_m -> exists2 xy, extremal_generators G 2 n xy & let: (x, y) := xy in #[y] = 2 /\\ x ^ y = x^-1.",
            "VernacStartTheoremProof",
            "6af37f5d7e9f0b2ea692c736c43bb4492a3c2f24"
        ],
        [
            "move=> n_gt1; have [def2q _ ltqm _] := def2qr n_gt1.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case/(isoGrpP _ (Grp_2dihedral n_gt1)); rewrite card_2dihedral // -/ m => oG.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case/existsP=> -[x y] /=; rewrite -/q => /eqP[defG xq y2 xy].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have{defG} defG: <[x]> * <[y]> = G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -norm_joinEr // norms_cycle xy groupV cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have notXy: y \\notin <[x]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraL ltqm => Xy; rewrite -leqNgt -oG -defG mulGSid ?cycle_subG //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite dvdn_leq // order_dvdn xq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oy: #[y] = 2 by apply: nt_prime_order (group1_contra notXy).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ox: #[x] = q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: double_inj; rewrite -muln2 -oy -mul2n def2q -oG -defG TI_cardMg //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite setIC prime_TIg ?cycle_subG // -orderE oy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (x, y) => //=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite oG ox !inE notXy -!cycle_subG /= -defG mulG_subl mulG_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generators_semidihedral : n > 3 -> G \\isog 'SD_m -> exists2 xy, extremal_generators G 2 n xy & let: (x, y) := xy in #[y] = 2 /\\ x ^ y = x ^+ r.-1.",
            "VernacStartTheoremProof",
            "a34fd054ae1ac620062dbfd2426cf229ea31cb95"
        ],
        [
            "move=> n_gt3; have [def2q _ ltqm _] := def2qr (ltnW (ltnW n_gt3)).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case/(isoGrpP _ (Grp_semidihedral n_gt3)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite card_semidihedral // -/m => oG.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case/existsP=> -[x y] /=; rewrite -/q -/r => /eqP[defG xq y2 xy].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have{defG} defG: <[x]> * <[y]> = G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -norm_joinEr // norms_cycle xy mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have notXy: y \\notin <[x]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraL ltqm => Xy; rewrite -leqNgt -oG -defG mulGSid ?cycle_subG //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite dvdn_leq // order_dvdn xq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oy: #[y] = 2 by apply: nt_prime_order (group1_contra notXy).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ox: #[x] = q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: double_inj; rewrite -muln2 -oy -mul2n def2q -oG -defG TI_cardMg //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite setIC prime_TIg ?cycle_subG // -orderE oy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (x, y) => //=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite oG ox !inE notXy -!cycle_subG /= -defG mulG_subl mulG_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generators_quaternion : n > 2 -> G \\isog 'Q_m -> exists2 xy, extremal_generators G 2 n xy & let: (x, y) := xy in [/\\ #[y] = 4, y ^+ 2 = x ^+ r & x ^ y = x^-1].",
            "VernacStartTheoremProof",
            "21f954740028135f5fd3056c75afbf2df176cf18"
        ],
        [
            "move=> n_gt2; have [def2q def2r ltqm _] := def2qr (ltnW n_gt2).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case/(isoGrpP _ (Grp_quaternion n_gt2)); rewrite card_quaternion // -/m => oG.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case/existsP=> -[x y] /=; rewrite -/q -/r => /eqP[defG xq y2 xy].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have{defG} defG: <[x]> * <[y]> = G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -norm_joinEr // norms_cycle xy groupV cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have notXy: y \\notin <[x]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraL ltqm => Xy; rewrite -leqNgt -oG -defG mulGSid ?cycle_subG //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite dvdn_leq // order_dvdn xq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ox: #[x] = q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqn_leq dvdn_leq ?order_dvdn ?xq //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(leq_pmul2r (order_gt0 y)) mul_cardG defG oG -def2q mulnAC mulnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite leq_pmul2r // dvdn_leq ?muln_gt0 ?cardG_gt0 // order_dvdn expgM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -order_dvdn order_dvdG //= inE {1}y2 !mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oy2: #[y ^+ 2] = 2 by rewrite y2 orderXdiv ox -def2r ?dvdn_mull ?mulnK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (x, y) => /=; last by rewrite (orderXprime oy2).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite oG !inE notXy -!cycle_subG /= -defG mulG_subl mulG_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variables x y : gT.",
            "VernacAssumption",
            "34d9cb451b95181331a40ec3156ace329c0379dd"
        ],
        [
            "Implicit Type M : {group gT}.",
            "VernacReserve",
            "f07537c7d6b9b66ca2f2a733c93d806888664b9d"
        ],
        [
            "Let X := <[x]>.",
            "VernacDefinition",
            "40fdff393966242f04a2d2eb5e45b8fbf286b142"
        ],
        [
            "Let Y := <[y]>.",
            "VernacDefinition",
            "0d7ccc68ad2c78e57498414f3176c7a1a981cfd1"
        ],
        [
            "Let yG := y ^: G.",
            "VernacDefinition",
            "da246d9bf97ff09f2b3fdd13adccacf3b4a4d9a3"
        ],
        [
            "Let xyG := (x * y) ^: G.",
            "VernacDefinition",
            "d11ff6af46906aca2091edbf12a2b0614afcf6dd"
        ],
        [
            "Let My := <<yG>>.",
            "VernacDefinition",
            "ecdedec297a04785bbc97d5f65f8edba159d502c"
        ],
        [
            "Let Mxy := <<xyG>>.",
            "VernacDefinition",
            "c3fe558c3fc469331c9492624788503fe39e32cf"
        ],
        [
            "Theorem dihedral2_structure : n > 1 -> extremal_generators G 2 n (x, y) -> G \\isog 'D_m -> [/\\ [/\\ X ><| Y = G, {in G :\\: X, forall t, #[t] = 2} & {in X & G :\\: X, forall z t, z ^ t = z^-1}], [/\\ G ^`(1) = <[x ^+ 2]>, 'Phi(G) = G ^`(1), #|G^`(1)| = r & nil_class G = n.-1], 'Ohm_1(G) = G /\\ (forall k, k > 0 -> 'Mho^k(G) = <[x ^+ (2 ^ k)]>), [/\\ yG :|: xyG = G :\\: X, [disjoint yG & xyG] & forall M, maximal M G = pred3 X My Mxy M] & if n == 2 then (2.-abelem G : Prop) else [/\\ 'Z(G) = <[x ^+ r]>, #|'Z(G)| = 2, My \\isog 'D_q, Mxy \\isog 'D_q & forall U, cyclic U -> U \\subset G -> #|G : U| = 2 -> U = X]].",
            "VernacStartTheoremProof",
            "def6e52c1ae95cc7dcd3dadb0f2d228e90f49f70"
        ],
        [
            "move=> n_gt1 genG isoG; have [def2q def2r ltqm ltrq] := def2qr n_gt1.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [oG Gx ox X'y] := genG; rewrite -/m -/q -/X in oG ox X'y.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case/extremal_generators_facts: genG; rewrite -/X // => pG maxX nsXG defXY nXY.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have [sXG nXG]:= andP nsXG; have [Gy notXy]:= setDP X'y.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have ox2: #[x ^+ 2] = r by rewrite orderXdiv ox -def2r ?dvdn_mulr ?mulKn.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oxr: #[x ^+ r] = 2 by rewrite orderXdiv ox -def2r ?dvdn_mull ?mulnK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [[u v] [_ Gu ou U'v] [ov uv]] := generators_2dihedral n_gt1 isoG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defUv: <[u]> :* v = G :\\: <[u]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: rcoset_index2; rewrite -?divgS ?cycle_subG //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite oG -orderE ou -def2q mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have invUV: {in <[u]> & <[u]> :* v, forall z t, z ^ t = z^-1}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> z t; case/cycleP=> i ->; case/rcosetP=> z'; case/cycleP=> j -> ->{z t}.",
            "VernacExtend",
            "8544dc416b79dae4e98846e918d0eedc91bec47a"
        ],
        [
            "by rewrite conjgM {2}/conjg commuteX2 // mulKg conjXg uv expgVn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oU': {in <[u]> :* v, forall t, #[t] = 2}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t Uvt; apply: nt_prime_order => //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: eqP Uvt => // ->; rewrite defUv !inE group1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/rcosetP: Uvt => z Uz ->{t}; rewrite expgS {1}(conjgC z) -mulgA.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite invUV ?rcoset_refl // mulKg -(expgS v 1) -ov expg_order.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defU: n > 2 -> {in G, forall z, #[z] = q -> <[z]> = <[u]>}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> n_gt2 z Gz oz; apply/eqP; rewrite eqEcard -!orderE oz cycle_subG.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply: contraLR n_gt2; rewrite ou leqnn andbT -(ltn_predK n_gt1) => notUz.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite ltnS -(@ltn_exp2l 2) // -/q -oz oU' // defUv inE notUz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have n2_abelG: (n > 2) || 2.-abelem G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite ltn_neqAle eq_sym n_gt1; case: eqP => //= n2.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply/abelemP=> //; split=> [|z Gz].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by apply: (p2group_abelian pG); rewrite oG pfactorK ?n2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case Uz: (z \\in <[u]>); last by rewrite -expg_mod_order oU' // defUv inE Uz.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite -order_dvdn (dvdn_trans (order_dvdG Uz)) // -orderE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite ou /q n2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{oU'} oX': {in G :\\: X, forall t, #[t] = 2}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [n_gt2 | abelG] := orP n2_abelG; first by rewrite [X]defU // -defUv.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> t /setDP[Gt notXt]; apply: nt_prime_order (group1_contra notXt) => //.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by case/abelemP: abelG => // _ ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{invUV} invXX': {in X & G :\\: X, forall z t, z ^ t = z^-1}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [n_gt2 | abelG] := orP n2_abelG; first by rewrite [X]defU // -defUv.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [//|cGG oG2] := abelemP _ abelG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t z Xt /setDP[Gz _]; apply/eqP; rewrite eq_sym eq_invg_mul.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite /conjg -(centsP cGG z) // ?mulKg ?[t * t]oG2 ?(subsetP sXG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nXiG k: G \\subset 'N(<[x ^+ k]>).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: char_norm_trans nXG.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite cycle_subgroup_char // cycle_subG mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have memL i: x ^+ (2 ^ i) \\in 'L_i.+1(G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: i => // i IHi; rewrite -groupV expnSr expgM invMg.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "by rewrite -{2}(invXX' _ y) ?mem_cycle ?cycle_id ?mem_commg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defG': G^`(1) = <[x ^+ 2]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset cycle_subG (memL 1%N) ?der1_min //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (p2group_abelian (quotient_pgroup _ pG)) ?card_quotient //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -divgS ?cycle_subG ?groupX // oG -orderE ox2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -def2q -def2r mulnA mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defG1: 'Mho^1(G) = <[x ^+ 2]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite (MhoE _ pG) eqEsubset !gen_subG sub1set andbC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite mem_gen; last exact: mem_imset.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/subsetP=> z2; case/imsetP=> z Gz ->{z2}.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "case Xz: (z \\in X); last by rewrite -{1}(oX' z) ?expg_order ?group1 // inE Xz.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/cycleP: Xz => i ->; rewrite expgAC mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defPhi: 'Phi(G) = <[x ^+ 2]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (Phi_joing pG) defG' defG1 (joing_idPl _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_tG: {in G :\\: X, forall t, t ^: G = <[x ^+ 2]> :* t}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; have [Gt notXt] := setDP X't.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have defJt: {in X, forall z, t ^ z = z ^- 2 * t}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> z Xz; rewrite /= invMg -mulgA (conjgC _ t).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (invXX' _ t) ?groupV ?invgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defGt: X * <[t]> = G by rewrite (mulg_normal_maximal nsXG) ?cycle_subG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP=> tz; apply/imsetP/rcosetP=> [[t'z] | [z]].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite -defGt -normC ?cycle_subG ?(subsetP nXG) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/imset2P=> _ z /cycleP[j ->] Xz -> -> {tz t'z}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (z ^- 2); last by rewrite conjgM {2}/conjg commuteX // mulKg defJt.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/cycleP: Xz => i ->{z}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite groupV -expgM mulnC expgM mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/cycleP=> i -> -> {z tz}; exists (x ^- i); first by rewrite groupV groupX.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite defJt ?groupV ?mem_cycle // expgVn invgK expgAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defMt: {in G :\\: X, forall t, <[x ^+ 2]> ><| <[t]> = <<t ^: G>>}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; have [Gt notXt] := setDP X't.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite sdprodEY ?cycle_subG ?(subsetP (nXiG 2)) //; first 1 last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite setIC prime_TIg -?orderE ?oX' // cycle_subG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: contra notXt; apply: subsetP; rewrite cycleX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; have: t \\in <<t ^: G>> by rewrite mem_gen ?class_refl.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite def_tG // eqEsubset join_subG !cycle_subG !gen_subG => tGt.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite tGt -(groupMr _ tGt) mem_gen ?mem_mulg ?cycle_id ?set11 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mul_subG ?joing_subl // -gen_subG joing_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oMt: {in G :\\: X, forall t, #|<<t ^: G>>| = q}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't /=; rewrite -(sdprod_card (defMt t X't)) -!orderE ox2 oX' //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sMtG: {in G :\\: X, forall t, <<t ^: G>> \\subset G}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> t; case/setDP=> Gt _; rewrite gen_subG class_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have maxMt: {in G :\\: X, forall t, maximal <<t ^: G>> G}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't /=; rewrite p_index_maximal -?divgS ?sMtG ?oMt //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite oG -def2q mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have X'xy: x * y \\in G :\\: X by rewrite !inE !groupMl ?cycle_id ?notXy.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ti_yG_xyG: [disjoint yG & xyG].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/pred0P=> t; rewrite /= /yG /xyG !def_tG //; apply/andP=> [[yGt]].",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite rcoset_sym (rcoset_eqP yGt) mem_rcoset mulgK; move/order_dvdG.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "by rewrite -orderE ox2 ox gtnNdvd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have s_tG_X': {in G :\\: X, forall t, t ^: G \\subset G :\\: X}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> t X't /=; rewrite class_sub_norm // normsD ?normG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defX': yG :|: xyG = G :\\: X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEcard subUset !s_tG_X' //= -(leq_add2l q) -{1}ox orderE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -/X -{1}(setIidPr sXG) cardsID oG -def2q mul2n -addnn leq_add2l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(leq_add2r #|yG :&: xyG|) cardsUI disjoint_setI0 // cards0 addn0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /yG /xyG !def_tG // !card_rcoset addnn -mul2n -orderE ox2 def2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite ?sdprodE // setIC // prime_TIg ?cycle_subG // -orderE ?oX'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite defG'; split=> //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "apply/eqP; rewrite eqn_leq (leq_trans (nil_class_pgroup pG)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite oG pfactorK // geq_max leqnn -(subnKC n_gt1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(subnKC n_gt1) subn2 ltnNge.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (sameP (lcn_nil_classP _ (pgroup_nil pG)) eqP).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/trivgPn; exists (x ^+ r); rewrite ?memL // -order_gt1 oxr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; last exact: extend_cyclic_Mho.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have sX'G1: {subset G :\\: X <= 'Ohm_1(G)}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; have [Gt _] := setDP X't.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite (OhmE 1 pG) mem_gen // !inE Gt -(oX' t) //= expg_order.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite eqEsubset Ohm_sub -{1}defXY mulG_subG !cycle_subG.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -(groupMr _ (sX'G1 y X'y)) !sX'G1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=> //= H; apply/idP/idP=> [maxH |]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/or3P=> /eqP->; rewrite ?maxMt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [sHG nHG]:= andP (p_maximal_normal pG maxH).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oH: #|H| = q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: double_inj; rewrite -muln2 -(p_maximal_index pG maxH) Lagrange //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite oG -mul2n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !(eq_sym (gval H)) -eq_sym !eqEcard oH -orderE ox !oMt // !leqnn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case sHX: (H \\subset X) => //=; case/subsetPn: sHX => t Ht notXt.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have: t \\in yG :|: xyG by rewrite defX' inE notXt (subsetP sHG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !andbT !gen_subG /yG /xyG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/setUP; move/class_eqP <-; rewrite !class_sub_norm ?Ht ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqn_leq n_gt1; case: leqP n2_abelG => //= n_gt2 _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have ->: 'Z(G) = <[x ^+ r]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEcard andbC -orderE oxr -{1}(setIidPr (center_sub G)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite cardG_gt1 /= meet_center_nil ?(pgroup_nil pG) //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -cardG_gt1 oG (leq_trans _ ltqm).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subsetP=> t; case/setIP=> Gt cGt.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "case X't: (t \\in G :\\: X).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move/eqP: (invXX' _ _ (cycle_id x) X't).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /conjg -(centP cGt) // mulKg eq_sym eq_invg_mul -order_eq1 ox2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (eqn_exp2l _ 0) // -(subnKC n_gt2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/idPn: X't; rewrite inE Gt andbT negbK => Xt.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have:= Ohm_p_cycle 1 (mem_p_elt pG Gx); rewrite ox pfactorK // subn1 => <-.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "rewrite (OhmE _ (pgroupS sXG pG)) mem_gen // !inE Xt /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -eq_invg_mul -(invXX' _ y) // /conjg (centP cGt) // mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have isoMt: {in G :\\: X, forall t, <<t ^: G>> \\isog 'D_q}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have n1_gt1: n.-1 > 1 by rewrite -(subnKC n_gt2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't /=; rewrite isogEcard card_2dihedral ?oMt // leqnn andbT.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite Grp_2dihedral //; apply/existsP; exists (x ^+ 2, t) => /=.",
            "VernacExtend",
            "0288f65064e83af8559a49f90a2eba4421e03fd4"
        ],
        [
            "have [_ <- nX2T _] := sdprodP (defMt t X't); rewrite norm_joinEr //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite -/q -/r !xpair_eqE eqxx -expgM def2r -ox -{1}(oX' t X't).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !expg_order !eqxx /= invXX' ?mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !isoMt //; split=> // C; case/cyclicP=> z ->{C} sCG iCG.",
            "VernacExtend",
            "8c50bfd27b7aaac6b61038e0d9bbeb37bfdb8a96"
        ],
        [
            "rewrite [X]defU // defU -?cycle_subG //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: double_inj; rewrite -muln2 -iCG Lagrange // oG -mul2n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem quaternion_structure : n > 2 -> extremal_generators G 2 n (x, y) -> G \\isog 'Q_m -> [/\\ [/\\ pprod X Y = G, {in G :\\: X, forall t, #[t] = 4} & {in X & G :\\: X, forall z t, z ^ t = z^-1}], [/\\ G ^`(1) = <[x ^+ 2]>, 'Phi(G) = G ^`(1), #|G^`(1)| = r & nil_class G = n.-1], [/\\ 'Z(G) = <[x ^+ r]>, #|'Z(G)| = 2, forall u, u \\in G -> #[u] = 2 -> u = x ^+ r, 'Ohm_1(G) = <[x ^+ r]> /\\ 'Ohm_2(G) = G & forall k, k > 0 -> 'Mho^k(G) = <[x ^+ (2 ^ k)]>], [/\\ yG :|: xyG = G :\\: X /\\ [disjoint yG & xyG] & forall M, maximal M G = pred3 X My Mxy M] & n > 3 -> [/\\ My \\isog 'Q_q, Mxy \\isog 'Q_q & forall U, cyclic U -> U \\subset G -> #|G : U| = 2 -> U = X]].",
            "VernacStartTheoremProof",
            "175d4f9c2b373dd3b7e85dced41ad2ce513c89ad"
        ],
        [
            "move=> n_gt2 genG isoG; have [def2q def2r ltqm ltrq] := def2qr (ltnW n_gt2).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [oG Gx ox X'y] := genG; rewrite -/m -/q -/X in oG ox X'y.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case/extremal_generators_facts: genG; rewrite -/X // => pG maxX nsXG defXY nXY.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have [sXG nXG]:= andP nsXG; have [Gy notXy]:= setDP X'y.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have oxr: #[x ^+ r] = 2 by rewrite orderXdiv ox -def2r ?dvdn_mull ?mulnK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ox2: #[x ^+ 2] = r by rewrite orderXdiv ox -def2r ?dvdn_mulr ?mulKn.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [[u v] [_ Gu ou U'v] [ov v2 uv]] := generators_quaternion n_gt2 isoG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defUv: <[u]> :* v = G :\\: <[u]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: rcoset_index2; rewrite -?divgS ?cycle_subG //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite oG -orderE ou -def2q mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have invUV: {in <[u]> & <[u]> :* v, forall z t, z ^ t = z^-1}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> z t; case/cycleP=> i ->; case/rcosetP=> ?; case/cycleP=> j -> ->{z t}.",
            "VernacExtend",
            "8544dc416b79dae4e98846e918d0eedc91bec47a"
        ],
        [
            "by rewrite conjgM {2}/conjg commuteX2 // mulKg conjXg uv expgVn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have U'2: {in <[u]> :* v, forall t, t ^+ 2 = u ^+ r}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t; case/rcosetP=> z Uz ->; rewrite expgS {1}(conjgC z) -mulgA.",
            "VernacExtend",
            "9c3f4e82a1696e467f5acd1f5c747a8b7b11bee4"
        ],
        [
            "by rewrite invUV ?rcoset_refl // mulKg -(expgS v 1) v2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have our: #[u ^+ r] = 2 by rewrite orderXdiv ou -/q -def2r ?dvdn_mull ?mulnK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_ur: {in G, forall t, #[t] = 2 -> t = u ^+ r}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t Gt /= ot; case Ut: (t \\in <[u]>); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: ot; rewrite eqn_dvd order_dvdn -order_eq1 U'2 ?our //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite defUv inE Ut.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have p2u: 2.-elt u by rewrite /p_elt ou pnat_exp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: t \\in 'Ohm_1(<[u]>).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (OhmE _ p2u) mem_gen // !inE Ut -order_dvdn ot.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (Ohm_p_cycle _ p2u) ou pfactorK // subn1 -/r cycle_traject our !inE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -order_eq1 ot /= mulg1; move/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defU: n > 3 -> {in G, forall z, #[z] = q -> <[z]> = <[u]>}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> n_gt3 z Gz oz; apply/eqP; rewrite eqEcard -!orderE oz cycle_subG.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite ou leqnn andbT; apply: contraLR n_gt3 => notUz.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -(ltn_predK n_gt2) ltnS -(@ltn_exp2l 2) // -/q -oz.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (@orderXprime _ 2 2) // U'2 // defUv inE notUz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_xr: x ^+ r = u ^+ r by apply: def_ur; rewrite ?groupX.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have X'2: {in G :\\: X, forall t, t ^+ 2 = u ^+ r}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (ltngtP n 3) => [|n_gt3|n3 t]; first by rewrite ltnNge n_gt2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /X defU // -defUv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/setDP=> Gt notXt.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case Ut: (t \\in <[u]>); last by rewrite U'2 // defUv inE Ut.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite [t ^+ 2]def_ur ?groupX //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have:= order_dvdG Ut; rewrite -orderE ou /q n3 dvdn_divisors ?inE //=.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite order_eq1 (negbTE (group1_contra notXt)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/pred2P=> oz; last by rewrite orderXdiv oz.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite [t]def_ur // -def_xr mem_cycle in notXt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oX': {in G :\\: X, forall z, #[z] = 4}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> t X't /=; rewrite (@orderXprime _ 2 2) // X'2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defZ: 'Z(G) = <[x ^+ r]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEcard andbC -orderE oxr -{1}(setIidPr (center_sub G)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite cardG_gt1 /= meet_center_nil ?(pgroup_nil pG) //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -cardG_gt1 oG (leq_trans _ ltqm).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subsetP=> z; case/setIP=> Gz cGz; have [Gv _]:= setDP U'v.",
            "VernacExtend",
            "2820ef62c4b0a4a265eca9f1b4f06a2cbfda9439"
        ],
        [
            "case Uvz: (z \\in <[u]> :* v).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move/eqP: (invUV _ _ (cycle_id u) Uvz).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /conjg -(centP cGz) // mulKg eq_sym eq_invg_mul -(order_dvdn _ 2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ou pfactor_dvdn // -(subnKC n_gt2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/idPn: Uvz; rewrite defUv inE Gz andbT negbK def_xr => Uz.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have p_u: 2.-elt u := mem_p_elt pG Gu.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suff: z \\in 'Ohm_1(<[u]>) by rewrite (Ohm_p_cycle 1 p_u) ou pfactorK // subn1.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "rewrite (OhmE _ p_u) mem_gen // !inE Uz /= -eq_invg_mul.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(invUV _ v) ?rcoset_refl // /conjg (centP cGz) ?mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{invUV} invXX': {in X & G :\\: X, forall z t, z ^ t = z^-1}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (ltngtP n 3) => [|n_gt3|n3 t z Xt]; first by rewrite ltnNge n_gt2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /X defU // -defUv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/setDP=> Gz notXz; rewrite /q /r n3 /= in oxr ox.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "suff xz: x ^ z = x^-1 by case/cycleP: Xt => i ->; rewrite conjXg xz expgVn.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "have: x ^ z \\in X by rewrite memJ_norm ?cycle_id ?(subsetP nXG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite invg_expg /X cycle_traject ox !inE /= !mulg1 -order_eq1 orderJ ox /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/or3P; move/eqP=> //; last by move/(congr1 order); rewrite orderJ ox oxr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/conjg_fixP; rewrite (sameP commgP cent1P) cent1C -cent_cycle -/X => cXz.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have defXz: X * <[z]> = G by rewrite (mulg_normal_maximal nsXG) ?cycle_subG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: z \\in 'Z(G) by rewrite inE Gz -defXz centM inE cXz cent_cycle cent1id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite defZ => Xr_z; rewrite (subsetP (cycleX x r)) in notXz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nXiG k: G \\subset 'N(<[x ^+ k]>).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: char_norm_trans nXG.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite cycle_subgroup_char // cycle_subG mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have memL i: x ^+ (2 ^ i) \\in 'L_i.+1(G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: i => // i IHi; rewrite -groupV expnSr expgM invMg.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "by rewrite -{2}(invXX' _ y) ?mem_cycle ?cycle_id ?mem_commg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defG': G^`(1) = <[x ^+ 2]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset cycle_subG (memL 1%N) ?der1_min //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (p2group_abelian (quotient_pgroup _ pG)) ?card_quotient //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -divgS ?cycle_subG ?groupX // oG -orderE ox2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -def2q -def2r mulnA mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defG1: 'Mho^1(G) = <[x ^+ 2]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite (MhoE _ pG) eqEsubset !gen_subG sub1set andbC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite mem_gen; last exact: mem_imset.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/subsetP=> z2; case/imsetP=> z Gz ->{z2}.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "case Xz: (z \\in X).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case/cycleP: Xz => i ->; rewrite -expgM mulnC expgM mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (X'2 z) ?inE ?Xz // -def_xr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /r -(subnKC n_gt2) expnS expgM mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defPhi: 'Phi(G) = <[x ^+ 2]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (Phi_joing pG) defG' defG1 (joing_idPl _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_tG: {in G :\\: X, forall t, t ^: G = <[x ^+ 2]> :* t}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; have [Gt notXt] := setDP X't.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have defJt: {in X, forall z, t ^ z = z ^- 2 * t}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> z Xz; rewrite /= invMg -mulgA (conjgC _ t).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (invXX' _ t) ?groupV ?invgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defGt: X * <[t]> = G by rewrite (mulg_normal_maximal nsXG) ?cycle_subG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP=> tz; apply/imsetP/rcosetP=> [[t'z] | [z]].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite -defGt -normC ?cycle_subG ?(subsetP nXG) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/imset2P=> t' z; case/cycleP=> j -> Xz -> -> {tz t'z t'}.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "exists (z ^- 2); last by rewrite conjgM {2}/conjg commuteX // mulKg defJt.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/cycleP: Xz => i ->{z}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite groupV -expgM mulnC expgM mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/cycleP=> i -> -> {z tz}; exists (x ^- i); first by rewrite groupV groupX.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite defJt ?groupV ?mem_cycle // expgVn invgK -!expgM mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defMt: {in G :\\: X, forall t, <[x ^+ 2]> <*> <[t]> = <<t ^: G>>}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; have [Gt notXt] := setDP X't.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/eqP; have: t \\in <<t ^: G>> by rewrite mem_gen ?class_refl.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite def_tG // eqEsubset join_subG !cycle_subG !gen_subG => tGt.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite tGt -(groupMr _ tGt) mem_gen ?mem_mulg ?cycle_id ?set11 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mul_subG ?joing_subl // -gen_subG joing_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sMtG: {in G :\\: X, forall t, <<t ^: G>> \\subset G}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> t; case/setDP=> Gt _; rewrite gen_subG class_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oMt: {in G :\\: X, forall t, #|<<t ^: G>>| = q}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; have [Gt notXt] := setDP X't.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite -defMt // -(Lagrange (joing_subl _ _)) -orderE ox2 -def2r mulnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (_ * r)%N; rewrite -card_quotient /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite defMt // (subset_trans _ (nXiG 2)) ?sMtG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite joingC quotientYidr ?(subset_trans _ (nXiG 2)) ?cycle_subG //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite quotient_cycle ?(subsetP (nXiG 2)) //= -defPhi.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -orderE (abelem_order_p (Phi_quotient_abelem pG)) ?mem_quotient //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contraNneq notXt; move/coset_idr; move/implyP=> /=.",
            "VernacExtend",
            "361c26fd5b873c979ea63cc8b6fd88e4090a7b92"
        ],
        [
            "by rewrite defPhi ?(subsetP (nXiG 2)) //; apply: subsetP; apply: cycleX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have maxMt: {in G :\\: X, forall t, maximal <<t ^: G>> G}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; rewrite /= p_index_maximal -?divgS ?sMtG ?oMt //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite oG -def2q mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have X'xy: x * y \\in G :\\: X by rewrite !inE !groupMl ?cycle_id ?notXy.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ti_yG_xyG: [disjoint yG & xyG].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/pred0P=> t; rewrite /= /yG /xyG !def_tG //; apply/andP=> [[yGt]].",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite rcoset_sym (rcoset_eqP yGt) mem_rcoset mulgK; move/order_dvdG.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "by rewrite -orderE ox2 ox gtnNdvd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have s_tG_X': {in G :\\: X, forall t, t ^: G \\subset G :\\: X}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> t X't /=; rewrite class_sub_norm // normsD ?normG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defX': yG :|: xyG = G :\\: X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEcard subUset !s_tG_X' //= -(leq_add2l q) -{1}ox orderE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -/X -{1}(setIidPr sXG) cardsID oG -def2q mul2n -addnn leq_add2l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(leq_add2r #|yG :&: xyG|) cardsUI disjoint_setI0 // cards0 addn0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /yG /xyG !def_tG // !card_rcoset addnn -mul2n -orderE ox2 def2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite pprodE //; split=> // [|||n_gt3].",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite defG'; split=> //; apply/eqP; rewrite eqn_leq.",
            "VernacExtend",
            "314d053f38cfaf4951daad79a7b6cfd8bba50db5"
        ],
        [
            "rewrite (leq_trans (nil_class_pgroup pG)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite oG pfactorK // -(subnKC n_gt2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(subnKC (ltnW n_gt2)) subn2 ltnNge.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (sameP (lcn_nil_classP _ (pgroup_nil pG)) eqP).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/trivgPn; exists (x ^+ r); rewrite ?memL // -order_gt1 oxr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite {2}def_xr defZ; split=> //; last exact: extend_cyclic_Mho.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split; apply/eqP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have sX'G2: {subset G :\\: X <= 'Ohm_2(G)}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> z X'z; have [Gz _] := setDP X'z.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite (OhmE 2 pG) mem_gen // !inE Gz -order_dvdn oX'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqEsubset Ohm_sub -{1}defXY mulG_subG !cycle_subG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(groupMr _ (sX'G2 y X'y)) !sX'G2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqEsubset (OhmE 1 pG) cycle_subG gen_subG andbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mem_gen ?inE ?groupX -?order_dvdn ?oxr //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> t; case/setIP=> Gt; rewrite inE -order_dvdn /=.",
            "VernacExtend",
            "cbc4844cce0ad896dcb7bc2a887cf6aae5047c5f"
        ],
        [
            "rewrite dvdn_divisors ?inE //= order_eq1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/pred2P=> [->|]; first exact: group1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/def_ur=> -> //; rewrite def_xr cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=> //= H; apply/idP/idP=> [maxH |]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/or3P=> /eqP->; rewrite ?maxMt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [sHG nHG]:= andP (p_maximal_normal pG maxH).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oH: #|H| = q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: double_inj; rewrite -muln2 -(p_maximal_index pG maxH) Lagrange //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite oG -mul2n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !(eq_sym (gval H)) -eq_sym !eqEcard oH -orderE ox !oMt // !leqnn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case sHX: (H \\subset X) => //=; case/subsetPn: sHX => z Hz notXz.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have: z \\in yG :|: xyG by rewrite defX' inE notXz (subsetP sHG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !andbT !gen_subG /yG /xyG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/setUP=> /class_eqP <-; rewrite !class_sub_norm ?Hz ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have isoMt: {in G :\\: X, forall z, <<z ^: G>> \\isog 'Q_q}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have n1_gt2: n.-1 > 2 by rewrite -(subnKC n_gt3).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> z X'z /=; rewrite isogEcard card_quaternion ?oMt // leqnn andbT.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite Grp_quaternion //; apply/existsP; exists (x ^+ 2, z) => /=.",
            "VernacExtend",
            "0288f65064e83af8559a49f90a2eba4421e03fd4"
        ],
        [
            "rewrite defMt // -/q -/r !xpair_eqE -!expgM def2r -order_dvdn ox dvdnn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -expnS prednK; last by rewrite -subn2 subn_gt0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite X'2 // def_xr !eqxx /= invXX' ?mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !isoMt //; split=> // C; case/cyclicP=> z ->{C} sCG iCG.",
            "VernacExtend",
            "8c50bfd27b7aaac6b61038e0d9bbeb37bfdb8a96"
        ],
        [
            "rewrite [X]defU // defU -?cycle_subG //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: double_inj; rewrite -muln2 -iCG Lagrange // oG -mul2n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem semidihedral_structure : n > 3 -> extremal_generators G 2 n (x, y) -> G \\isog 'SD_m -> #[y] = 2 -> [/\\ [/\\ X ><| Y = G, #[x * y] = 4 & {in X & G :\\: X, forall z t, z ^ t = z ^+ r.-1}], [/\\ G ^`(1) = <[x ^+ 2]>, 'Phi(G) = G ^`(1), #|G^`(1)| = r & nil_class G = n.-1], [/\\ 'Z(G) = <[x ^+ r]>, #|'Z(G)| = 2, 'Ohm_1(G) = My /\\ 'Ohm_2(G) = G & forall k, k > 0 -> 'Mho^k(G) = <[x ^+ (2 ^ k)]>], [/\\ yG :|: xyG = G :\\: X /\\ [disjoint yG & xyG] & forall H, maximal H G = pred3 X My Mxy H] & [/\\ My \\isog 'D_q, Mxy \\isog 'Q_q & forall U, cyclic U -> U \\subset G -> #|G : U| = 2 -> U = X]].",
            "VernacStartTheoremProof",
            "f06846b9573b4d4dca08132ca198a116a5e6c689"
        ],
        [
            "move=> n_gt3 genG isoG oy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [def2q def2r ltqm ltrq] := def2qr (ltnW (ltnW n_gt3)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [oG Gx ox X'y] := genG; rewrite -/m -/q -/X in oG ox X'y.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case/extremal_generators_facts: genG; rewrite -/X // => pG maxX nsXG defXY nXY.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have [sXG nXG]:= andP nsXG; have [Gy notXy]:= setDP X'y.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have ox2: #[x ^+ 2] = r by rewrite orderXdiv ox -def2r ?dvdn_mulr ?mulKn.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oxr: #[x ^+ r] = 2 by rewrite orderXdiv ox -def2r ?dvdn_mull ?mulnK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [[u v] [_ Gu ou U'v] [ov uv]] := generators_semidihedral n_gt3 isoG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defUv: <[u]> :* v = G :\\: <[u]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: rcoset_index2; rewrite -?divgS ?cycle_subG //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite oG -orderE ou -def2q mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have invUV: {in <[u]> & <[u]> :* v, forall z t, z ^ t = z ^+ r.-1}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> z t; case/cycleP=> i ->; case/rcosetP=> ?; case/cycleP=> j -> ->{z t}.",
            "VernacExtend",
            "8544dc416b79dae4e98846e918d0eedc91bec47a"
        ],
        [
            "by rewrite conjgM {2}/conjg commuteX2 // mulKg conjXg uv -!expgM mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [vV yV]: v^-1 = v /\\ y^-1 = y by rewrite !invg_expg ov oy.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defU: {in G, forall z, #[z] = q -> <[z]> = <[u]>}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> z Gz /= oz; apply/eqP; rewrite eqEcard -!orderE oz ou leqnn andbT.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply: contraLR (n_gt3) => notUz; rewrite -leqNgt -(ltn_predK n_gt3) ltnS.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(@dvdn_Pexp2l 2) // -/q -{}oz order_dvdn expgM (expgS z).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have{Gz notUz} [z' Uz' ->{z}]: exists2 z', z' \\in <[u]> & z = z' * v.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/rcosetP; rewrite defUv inE -cycle_subG notUz Gz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {2}(conjgC z') invUV ?rcoset_refl // mulgA -{2}vV mulgK -expgS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite prednK // -expgM mulnC def2r -order_dvdn /q -ou order_dvdG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{invUV} invXX': {in X & G :\\: X, forall z t, z ^ t = z ^+ r.-1}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /X defU -?defUv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have xy2: (x * y) ^+ 2 = x ^+ r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite expgS {2}(conjgC x) invXX' ?cycle_id // mulgA -{2}yV mulgK -expgS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite prednK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oxy: #[x * y] = 4 by rewrite (@orderXprime _ 2 2) ?xy2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have r_gt2: r > 2 by rewrite (ltn_exp2l 1) // -(subnKC n_gt3).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have coXr1: coprime #[x] (2 ^ (n - 3)).-1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite ox coprime_expl // -(@coprime_pexpl (n - 3)) ?coprimenP ?subn_gt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite expn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def2r1: (2 * (2 ^ (n - 3)).-1).+1 = r.-1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -!subn1 mulnBr -expnS [_.+1]subnSK ?(ltn_exp2l 0) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /r -(subnKC n_gt3).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defZ: 'Z(G) = <[x ^+ r]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEcard andbC -orderE oxr -{1}(setIidPr (center_sub G)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite cardG_gt1 /= meet_center_nil ?(pgroup_nil pG) //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -cardG_gt1 oG (leq_trans _ ltqm).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subsetP=> z /setIP[Gz cGz].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case X'z: (z \\in G :\\: X).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move/eqP: (invXX' _ _ (cycle_id x) X'z).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /conjg -(centP cGz) // mulKg -def2r1 eq_mulVg1 expgS mulKg mulnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -order_dvdn Gauss_dvdr // order_dvdn -order_eq1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ox2 -(subnKC r_gt2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/idPn: X'z; rewrite inE Gz andbT negbK => Xz.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have:= Ohm_p_cycle 1 (mem_p_elt pG Gx); rewrite ox pfactorK // subn1 => <-.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "rewrite (OhmE _ (mem_p_elt pG Gx)) mem_gen // !inE Xz /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(expgK coXr1 Xz) -!expgM mulnCA -order_dvdn dvdn_mull //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulnC order_dvdn -(inj_eq (mulgI z)) -expgS mulg1 def2r1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(invXX' z y) // /conjg (centP cGz) ?mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nXiG k: G \\subset 'N(<[x ^+ k]>).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: char_norm_trans nXG.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite cycle_subgroup_char // cycle_subG mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have memL i: x ^+ (2 ^ i) \\in 'L_i.+1(G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: i => // i IHi; rewrite -(expgK coXr1 (mem_cycle _ _)) groupX //.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "rewrite -expgM expnSr -mulnA expgM -(mulKg (x ^+ (2 ^ i)) (_ ^+ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -expgS def2r1 -(invXX' _ y) ?mem_cycle ?mem_commg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defG': G^`(1) = <[x ^+ 2]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset cycle_subG (memL 1%N) ?der1_min //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (p2group_abelian (quotient_pgroup _ pG)) ?card_quotient //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -divgS ?cycle_subG ?groupX // oG -orderE ox2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -def2q -def2r mulnA mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defG1: 'Mho^1(G) = <[x ^+ 2]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite (MhoE _ pG) eqEsubset !gen_subG sub1set andbC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite mem_gen; last exact: mem_imset.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/subsetP=> z2; case/imsetP=> z Gz ->{z2}.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "case Xz: (z \\in X).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case/cycleP: Xz => i ->; rewrite -expgM mulnC expgM mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{Xz Gz} [xi Xxi ->{z}]: exists2 xi, xi \\in X & z = xi * y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Uvy: y \\in <[u]> :* v by rewrite defUv -(defU x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/rcosetP; rewrite /X defU // (rcoset_eqP Uvy) defUv.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite inE -(defU x) ?Xz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite expn1 expgS {2}(conjgC xi) -{2}[y]/(y ^+ 2.-1) -{1}oy -invg_expg.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulgA mulgK invXX' // -expgS prednK // /r -(subnKC n_gt3) expnS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/cycleP: Xxi => i ->; rewrite -expgM mulnCA expgM mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defPhi: 'Phi(G) = <[x ^+ 2]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (Phi_joing pG) defG' defG1 (joing_idPl _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_tG: {in G :\\: X, forall t, t ^: G = <[x ^+ 2]> :* t}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; have [Gt notXt] := setDP X't.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have defJt: {in X, forall z, t ^ z = z ^+ r.-2 * t}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> z Xz /=; rewrite -(mulKg z (z ^+ _)) -expgS -subn2.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have X'tV: t^-1 \\in G :\\: X by rewrite inE !groupV notXt.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite subnSK 1?ltnW // subn1 -(invXX' _ t^-1) // -mulgA -conjgCV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defGt: X * <[t]> = G by rewrite (mulg_normal_maximal nsXG) ?cycle_subG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP=> tz; apply/imsetP/rcosetP=> [[t'z] | [z]].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite -defGt -normC ?cycle_subG ?(subsetP nXG) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/imset2P=> t' z; case/cycleP=> j -> Xz -> -> {t' t'z tz}.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "exists (z ^+ r.-2); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite conjgM {2}/conjg commuteX // mulKg defJt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/cycleP: Xz => i ->{z}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite -def2r1 -expgM mulnCA expgM mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/cycleP=> i -> -> {z tz}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (x ^+ (i * expg_invn X (2 ^ (n - 3)).-1)); first by rewrite groupX.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite defJt ?mem_cycle // -def2r1 -!expgM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulnAC mulnA mulnC muln2 !expgM expgK ?mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defMt: {in G :\\: X, forall t, <[x ^+ 2]> <*> <[t]> = <<t ^: G>>}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; have [Gt notXt] := setDP X't.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/eqP; have: t \\in <<t ^: G>> by rewrite mem_gen ?class_refl.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite def_tG // eqEsubset join_subG !cycle_subG !gen_subG => tGt.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite tGt -(groupMr _ tGt) mem_gen ?mem_mulg ?cycle_id ?set11 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mul_subG ?joing_subl // -gen_subG joing_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sMtG: {in G :\\: X, forall t, <<t ^: G>> \\subset G}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> t; case/setDP=> Gt _; rewrite gen_subG class_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oMt: {in G :\\: X, forall t, #|<<t ^: G>>| = q}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; have [Gt notXt] := setDP X't.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite -defMt // -(Lagrange (joing_subl _ _)) -orderE ox2 -def2r mulnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (_ * r)%N; rewrite -card_quotient /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite defMt // (subset_trans _ (nXiG 2)) ?sMtG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite joingC quotientYidr ?(subset_trans _ (nXiG 2)) ?cycle_subG //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite quotient_cycle ?(subsetP (nXiG 2)) //= -defPhi -orderE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (abelem_order_p (Phi_quotient_abelem pG)) ?mem_quotient //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contraNneq notXt; move/coset_idr; move/implyP=> /=.",
            "VernacExtend",
            "361c26fd5b873c979ea63cc8b6fd88e4090a7b92"
        ],
        [
            "by rewrite /= defPhi (subsetP (nXiG 2)) //; apply: subsetP; apply: cycleX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have maxMt: {in G :\\: X, forall t, maximal <<t ^: G>> G}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't /=; rewrite p_index_maximal -?divgS ?sMtG ?oMt //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite oG -def2q mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have X'xy: x * y \\in G :\\: X by rewrite !inE !groupMl ?cycle_id ?notXy.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ti_yG_xyG: [disjoint yG & xyG].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/pred0P=> t; rewrite /= /yG /xyG !def_tG //; apply/andP=> [[yGt]].",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite rcoset_sym (rcoset_eqP yGt) mem_rcoset mulgK; move/order_dvdG.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "by rewrite -orderE ox2 ox gtnNdvd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have s_tG_X': {in G :\\: X, forall t, t ^: G \\subset G :\\: X}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> t X't /=; rewrite class_sub_norm // normsD ?normG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defX': yG :|: xyG = G :\\: X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEcard subUset !s_tG_X' //= -(leq_add2l q) -{1}ox orderE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -/X -{1}(setIidPr sXG) cardsID oG -def2q mul2n -addnn leq_add2l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(leq_add2r #|yG :&: xyG|) cardsUI disjoint_setI0 // cards0 addn0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /yG /xyG !def_tG // !card_rcoset addnn -mul2n -orderE ox2 def2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite sdprodE // setIC prime_TIg ?cycle_subG // -orderE oy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite defG'; split=> //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "apply/eqP; rewrite eqn_leq (leq_trans (nil_class_pgroup pG)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite oG pfactorK // -(subnKC n_gt3).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(subnKC (ltnW (ltnW n_gt3))) subn2 ltnNge.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (sameP (lcn_nil_classP _ (pgroup_nil pG)) eqP).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/trivgPn; exists (x ^+ r); rewrite ?memL // -order_gt1 oxr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite defZ; split=> //; last exact: extend_cyclic_Mho.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split; apply/eqP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have sX'G2: {subset G :\\: X <= 'Ohm_2(G)}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; have [Gt _] := setDP X't; rewrite -defX' in X't.",
            "VernacExtend",
            "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
        ],
        [
            "rewrite (OhmE 2 pG) mem_gen // !inE Gt -order_dvdn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/setUP: X't; case/imsetP=> z _ ->; rewrite orderJ ?oy ?oxy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqEsubset Ohm_sub -{1}defXY mulG_subG !cycle_subG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(groupMr _ (sX'G2 y X'y)) !sX'G2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqEsubset andbC gen_subG class_sub_norm ?gFnorm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (OhmE 1 pG) mem_gen ?inE ?Gy -?order_dvdn ?oy // gen_subG /= -/My.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> t; rewrite !inE; case/andP=> Gt t2.",
            "VernacExtend",
            "5caed936835e366e9e533d8f19382dcfedbf86d4"
        ],
        [
            "have pX := pgroupS sXG pG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case Xt: (t \\in X).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have: t \\in 'Ohm_1(X) by rewrite (OhmE 1 pX) mem_gen // !inE Xt.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: subsetP; rewrite (Ohm_p_cycle 1 pX) ox pfactorK //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(subnKC n_gt3) expgM (subset_trans (cycleX _ _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /My -defMt ?joing_subl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{Xt}: t \\in yG :|: xyG by rewrite defX' inE Xt.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/setUP; first exact: mem_gen.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/imsetP=> z _ def_t; rewrite -order_dvdn def_t orderJ oxy in t2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=> //= H; apply/idP/idP=> [maxH |]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/or3P=> /eqP->; rewrite ?maxMt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [sHG nHG]:= andP (p_maximal_normal pG maxH).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oH: #|H| = q.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: double_inj; rewrite -muln2 -(p_maximal_index pG maxH) Lagrange //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite oG -mul2n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !(eq_sym (gval H)) -eq_sym !eqEcard oH -orderE ox !oMt // !leqnn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case sHX: (H \\subset X) => //=; case/subsetPn: sHX => t Ht notXt.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have: t \\in yG :|: xyG by rewrite defX' inE notXt (subsetP sHG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !andbT !gen_subG /yG /xyG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/setUP=> /class_eqP <-; rewrite !class_sub_norm ?Ht ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have n1_gt2: n.-1 > 2 by [rewrite -(subnKC n_gt3)]; have n1_gt1 := ltnW n1_gt2.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite !isogEcard card_2dihedral ?card_quaternion ?oMt // leqnn !andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have invX2X': {in G :\\: X, forall t, x ^+ 2 ^ t == x ^- 2}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> t X't; rewrite /= invXX' ?mem_cycle // eq_sym eq_invg_mul -expgS.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite prednK // -order_dvdn ox2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Grp_2dihedral ?Grp_quaternion //; split=> [||C].",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/existsP; exists (x ^+ 2, y); rewrite /= defMt // !xpair_eqE.",
            "VernacExtend",
            "420a618bf6cb4eea5510bd4bc13cf8d225352310"
        ],
        [
            "by rewrite -!expgM def2r -!order_dvdn ox oy dvdnn eqxx /= invX2X'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/existsP; exists (x ^+ 2, x * y); rewrite /= defMt // !xpair_eqE.",
            "VernacExtend",
            "f51ada607b92ed7a73cd0f52997aa75ee8cbdcdb"
        ],
        [
            "rewrite -!expgM def2r -order_dvdn ox xy2 dvdnn eqxx invX2X' //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite andbT /r -(subnKC n_gt3).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/cyclicP=> z ->{C} sCG iCG; rewrite [X]defU // defU -?cycle_subG //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by apply: double_inj; rewrite -muln2 -iCG Lagrange // oG -mul2n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ExtremalStructure.",
            "VernacEndSegment",
            "5da0feacb63ff9240ea8ae3ba5eac312e323dc84"
        ],
        [
            "Section ExtremalClass.",
            "VernacBeginSection",
            "648cccf4b98f2f8b239c5291ae437c69c1d1a501"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Inductive extremal_group_type := ModularGroup | Dihedral | SemiDihedral | Quaternion | NotExtremal.",
            "VernacInductive",
            "2dcec0a281f5e3bfa4c6646d654b3aefdeb2f275"
        ],
        [
            "Definition index_extremal_group_type c := match c with | ModularGroup => 0 | Dihedral => 1 | SemiDihedral => 2 | Quaternion => 3 | NotExtremal => 4 end%N.",
            "VernacDefinition",
            "0f1476b5afbbe3baa445556ffad4ce8a593857b4"
        ],
        [
            "Definition enum_extremal_groups := [:: ModularGroup; Dihedral; SemiDihedral; Quaternion].",
            "VernacDefinition",
            "de70c9478dc6a5c00ad7814a3c26609ea3a38a0b"
        ],
        [
            "Lemma cancel_index_extremal_groups : cancel index_extremal_group_type (nth NotExtremal enum_extremal_groups).",
            "VernacStartTheoremProof",
            "09a4bf174f9514feb25d18acb217a05d8acec35a"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation extgK := cancel_index_extremal_groups.",
            "VernacSyntacticDefinition",
            "bc90987a98989c90ab8607bbd42cb107c7542092"
        ],
        [
            "Import choice.",
            "VernacImport",
            "0702fba51c4c103534c6a7e18394eab097977107"
        ],
        [
            "Definition extremal_group_eqMixin := CanEqMixin extgK.",
            "VernacDefinition",
            "c8cf095aa36535a60e5b2591b16b9f125a6d9820"
        ],
        [
            "Canonical extremal_group_eqType := EqType _ extremal_group_eqMixin.",
            "VernacDefinition",
            "f0c8ba4fb3e50d58c14270fa27258cca0a479ea9"
        ],
        [
            "Definition extremal_group_choiceMixin := CanChoiceMixin extgK.",
            "VernacDefinition",
            "4a9650352ea5ffa47a3a59a01d7d5f7a4c630e7d"
        ],
        [
            "Canonical extremal_group_choiceType := ChoiceType _ extremal_group_choiceMixin.",
            "VernacDefinition",
            "6e26590bc8cc8e2be76135a0712353add558cafa"
        ],
        [
            "Definition extremal_group_countMixin := CanCountMixin extgK.",
            "VernacDefinition",
            "d26ecafc592003161233b908f8e8d558f20d44dc"
        ],
        [
            "Canonical extremal_group_countType := CountType _ extremal_group_countMixin.",
            "VernacDefinition",
            "151b5aa7bd1c35d20de95aea97b550e94a492738"
        ],
        [
            "Lemma bound_extremal_groups (c : extremal_group_type) : pickle c < 6.",
            "VernacStartTheoremProof",
            "4fdd2e545ff16f3d0b0c8f5d641da5e9c63eb45f"
        ],
        [
            "by case: c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition extremal_group_finMixin := Finite.CountMixin bound_extremal_groups.",
            "VernacDefinition",
            "d26d6cf0a44573df72278c41ffa053da435cf6d5"
        ],
        [
            "Canonical extremal_group_finType := FinType _ extremal_group_finMixin.",
            "VernacDefinition",
            "a58f607aee6dd989b1b77c1e0b3d325727c05939"
        ],
        [
            "Definition extremal_class (A : {set gT}) := let m := #|A| in let p := pdiv m in let n := logn p m in if (n > 1) && (A \\isog 'D_(2 ^ n)) then Dihedral else if (n > 2) && (A \\isog 'Q_(2 ^ n)) then Quaternion else if (n > 3) && (A \\isog 'SD_(2 ^ n)) then SemiDihedral else if (n > 2) && (A \\isog 'Mod_(p ^ n)) then ModularGroup else NotExtremal.",
            "VernacDefinition",
            "cd0b66105db2f917bce7923369f8ab52bdbd6070"
        ],
        [
            "Definition extremal2 A := extremal_class A \\in behead enum_extremal_groups.",
            "VernacDefinition",
            "1f1677740af25e73373574f302a71614f55c9cce"
        ],
        [
            "Lemma dihedral_classP : extremal_class G = Dihedral <-> (exists2 n, n > 1 & G \\isog 'D_(2 ^ n)).",
            "VernacStartTheoremProof",
            "93e30df70788ca00d51ce0bf3377ac6c5123cfa2"
        ],
        [
            "rewrite /extremal_class; split=> [ | [n n_gt1 isoG]].",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by move: (logn _ _) => n; do 4?case: ifP => //; case/andP; exists n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (card_isog isoG) card_2dihedral // -(ltn_predK n_gt1) pdiv_pfactor //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite pfactorK // (ltn_predK n_gt1) n_gt1 isoG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quaternion_classP : extremal_class G = Quaternion <-> (exists2 n, n > 2 & G \\isog 'Q_(2 ^ n)).",
            "VernacStartTheoremProof",
            "529f5c91f99ff243969138392c6aecd8b085da4d"
        ],
        [
            "rewrite /extremal_class; split=> [ | [n n_gt2 isoG]].",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by move: (logn _ _) => n; do 4?case: ifP => //; case/andP; exists n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (card_isog isoG) card_quaternion // -(ltn_predK n_gt2) pdiv_pfactor //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite pfactorK // (ltn_predK n_gt2) n_gt2 isoG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: andP => // [[n_gt1 isoGD]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [[x y] genG [oy _ _]]:= generators_quaternion n_gt2 isoG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [_ _ _ X'y] := genG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/dihedral2_structure: genG oy => // [[_ ->]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semidihedral_classP : extremal_class G = SemiDihedral <-> (exists2 n, n > 3 & G \\isog 'SD_(2 ^ n)).",
            "VernacStartTheoremProof",
            "8bfc54f5277bd5ebdcf48f11f2fc830d27af9118"
        ],
        [
            "rewrite /extremal_class; split=> [ | [n n_gt3 isoG]].",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by move: (logn _ _) => n; do 4?case: ifP => //; case/andP; exists n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (card_isog isoG) card_semidihedral //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(ltn_predK n_gt3) pdiv_pfactor // pfactorK // (ltn_predK n_gt3) n_gt3.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [[x y] genG [oy _]]:= generators_semidihedral n_gt3 isoG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [_ Gx _ X'y]:= genG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: andP => [[n_gt1 isoGD]|_].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [[_ oxy _ _] _ _ _]:= semidihedral_structure n_gt3 genG isoG oy.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (dihedral2_structure n_gt1 genG isoGD) oxy => [[_ ->]] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite !inE !groupMl ?cycle_id in X'y *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: andP => // [[n_gt2 isoGQ]|]; last by rewrite isoG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: (quaternion_structure n_gt2 genG isoGQ) oy => [[_ ->]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_not_extremal2 : odd #|G| -> ~~ extremal2 G.",
            "VernacStartTheoremProof",
            "f3ef8b7c4ef04ac60e08189f4e2dcfde871cabcd"
        ],
        [
            "rewrite /extremal2 /extremal_class; case: logn => // n'.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case: andP => [[n_gt1 isoG] | _].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (card_isog isoG) card_2dihedral ?odd_exp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: andP => [[n_gt2 isoG] | _].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (card_isog isoG) card_quaternion ?odd_exp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: andP => [[n_gt3 isoG] | _].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (card_isog isoG) card_semidihedral ?odd_exp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: ifP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modular_group_classP : extremal_class G = ModularGroup <-> (exists2 p, prime p & exists2 n, n >= (p == 2) + 3 & G \\isog 'Mod_(p ^ n)).",
            "VernacStartTheoremProof",
            "ac1c821e06a22e9d86939ce4b9eb8c9944b4be79"
        ],
        [
            "rewrite /extremal_class; split=> [ | [p p_pr [n n_gt23 isoG]]].",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "move: (pdiv _) => p; set n := logn p _; do 4?case: ifP => //.",
            "VernacExtend",
            "6fa36c9101965440e71a195306edb5a239531bb1"
        ],
        [
            "case/andP=> n_gt2 isoG _ _; rewrite ltnW //= => not_isoG _.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "exists p; first by move: n_gt2; rewrite /n lognE; case (prime p).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists n => //; case: eqP => // p2; rewrite ltn_neqAle; case: eqP => // n3.",
            "VernacExtend",
            "1a7e1eacf939d46b360a6c9eadeafa62884cfb7e"
        ],
        [
            "by case/idP: not_isoG; rewrite p2 -n3 in isoG *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have n_gt2 := leq_trans (leq_addl _ _) n_gt23; have n_gt1 := ltnW n_gt2.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have n_gt0 := ltnW n_gt1; have def_n := prednK n_gt0.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have [[x y] genG mod_xy] := generators_modular_group p_pr n_gt2 isoG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/modular_group_structure: (genG) => // _ _ [_ _ nil2G] _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [oG _ _ _] := genG; have [oy _] := mod_xy.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite oG -def_n pdiv_pfactor // def_n pfactorK // n_gt1 n_gt2 {}isoG /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (ltngtP p 2) => [|p_gt2|p2]; first by rewrite ltnNge prime_gt1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !(isog_sym G) !isogEcard card_2dihedral ?card_quaternion //= oG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite leq_exp2r // leqNgt p_gt2 !andbF; case: and3P=> // [[n_gt3 _]].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite card_semidihedral // leq_exp2r // leqNgt p_gt2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite p2 in genG oy n_gt23; rewrite n_gt23.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "have: nil_class G <> n.-1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/eqP; rewrite neq_ltn -ltnS nil2G def_n n_gt23.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP => [isoG | _]; first by case/dihedral2_structure: genG => // _ [].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP => [isoG | _]; first by case/quaternion_structure: genG => // _ [].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: ifP => // isoG; case/semidihedral_structure: genG => // _ [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ExtremalClass.",
            "VernacEndSegment",
            "55d24aded5a7caf002ce6c4ab0c31da12b7469ff"
        ],
        [
            "Theorem extremal2_structure (gT : finGroupType) (G : {group gT}) n x y : let cG := extremal_class G in let m := (2 ^ n)%N in let q := (2 ^ n.-1)%N in let r := (2 ^ n.-2)%N in let X := <[x]> in let yG := y ^: G in let xyG := (x * y) ^: G in let My := <<yG>> in let Mxy := <<xyG>> in extremal_generators G 2 n (x, y) -> extremal2 G -> (cG == SemiDihedral) ==> (#[y] == 2) -> [/\\ [/\\ (if cG == Quaternion then pprod X <[y]> else X ><| <[y]>) = G, if cG == SemiDihedral then #[x * y] = 4 else {in G :\\: X, forall z, #[z] = (if cG == Dihedral then 2 else 4)}, if cG != Quaternion then True else {in G, forall z, #[z] = 2 -> z = x ^+ r} & {in X & G :\\: X, forall t z, t ^ z = (if cG == SemiDihedral then t ^+ r.-1 else t^-1)}], [/\\ G ^`(1) = <[x ^+ 2]>, 'Phi(G) = G ^`(1), #|G^`(1)| = r & nil_class G = n.-1], [/\\ if n > 2 then 'Z(G) = <[x ^+ r]> /\\ #|'Z(G)| = 2 else 2.-abelem G, 'Ohm_1(G) = (if cG == Quaternion then <[x ^+ r]> else if cG == SemiDihedral then My else G), 'Ohm_2(G) = G & forall k, k > 0 -> 'Mho^k(G) = <[x ^+ (2 ^ k)]>], [/\\ yG :|: xyG = G :\\: X, [disjoint yG & xyG] & forall H : {group gT}, maximal H G = (gval H \\in pred3 X My Mxy)] & if n <= (cG == Quaternion) + 2 then True else [/\\ forall U, cyclic U -> U \\subset G -> #|G : U| = 2 -> U = X, if cG == Quaternion then My \\isog 'Q_q else My \\isog 'D_q, extremal_class My = (if cG == Quaternion then cG else Dihedral), if cG == Dihedral then Mxy \\isog 'D_q else Mxy \\isog 'Q_q & extremal_class Mxy = (if cG == Dihedral then cG else Quaternion)]].",
            "VernacStartTheoremProof",
            "0c49ce4f9926a57a4479a249a571f797879ed8b1"
        ],
        [
            "move=> cG m q r X yG xyG My Mxy genG; have [oG _ _ _] := genG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have logG: logn (pdiv #|G|) #|G| = n by rewrite oG pfactorKpdiv.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /extremal2 -/cG; do [rewrite {1}/extremal_class /= {}logG] in cG *.",
            "VernacExtend",
            "6a72213b8ff230d3c557d3c0d5b7e6e6d5c919ed"
        ],
        [
            "case: ifP => [isoG | _] in cG * => [_ _ /=|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case/andP: isoG => n_gt1 isoG.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have:= dihedral2_structure n_gt1 genG isoG; rewrite -/X -/q -/r -/yG -/xyG.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case=> [[defG oX' invXX'] nilG [defOhm defMho] maxG defZ].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite eqn_leq n_gt1 andbT add0n in defZ *; split=> //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "split=> //; first by case: leqP defZ => // _ [].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/eqP; rewrite eqEsubset Ohm_sub -{1}defOhm Ohm_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: leqP defZ => // n_gt2 [_ _ isoMy isoMxy defX].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have n1_gt1: n.-1 > 1 by rewrite -(subnKC n_gt2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by split=> //; apply/dihedral_classP; exists n.-1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP => [isoG | _] in cG * => [_ _ /=|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case/andP: isoG => n_gt2 isoG; rewrite n_gt2 add1n.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "have:= quaternion_structure n_gt2 genG isoG; rewrite -/X -/q -/r -/yG -/xyG.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case=> [[defG oX' invXX'] nilG [defZ oZ def2 [-> ->] defMho]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case=> [[-> ->] maxG] isoM; split=> //.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case: leqP isoM => // n_gt3 [//|isoMy isoMxy defX].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have n1_gt2: n.-1 > 2 by rewrite -(subnKC n_gt3).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by split=> //; apply/quaternion_classP; exists n.-1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "do [case: ifP => [isoG | _]; last by case: ifP] in cG * => /= _; move/eqnP=> oy.",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "case/andP: isoG => n_gt3 isoG; rewrite (leqNgt n) (ltnW n_gt3) /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "have n1_gt2: n.-1 > 2 by rewrite -(subnKC n_gt3).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= semidihedral_structure n_gt3 genG isoG oy.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -/X -/q -/r -/yG -/xyG -/My -/Mxy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=> [[defG oxy invXX'] nilG [defZ oZ [-> ->] defMho] [[defX' tiX'] maxG]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case=> isoMy isoMxy defX; do 2!split=> //.",
            "VernacExtend",
            "09d2a9a8185b9355b5ea9923b8ee73e4bb71f9bf"
        ],
        [
            "by apply/dihedral_classP; exists n.-1; first apply: ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/quaternion_classP; exists n.-1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maximal_cycle_extremal gT p (G X : {group gT}) : p.-group G -> ~~ abelian G -> cyclic X -> X \\subset G -> #|G : X| = p -> (extremal_class G == ModularGroup) || (p == 2) && extremal2 G.",
            "VernacStartTheoremProof",
            "24408847db2b935bca2530147ab3de23b5aa3fa8"
        ],
        [
            "move=> pG not_cGG cycX sXG iXG; rewrite /extremal2; set cG := extremal_class G.",
            "VernacExtend",
            "08b421e4a82ee4b06ce888937579fc5af7d251b4"
        ],
        [
            "have [|p_pr _ _] := pgroup_pdiv pG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: eqP not_cGG => // ->; rewrite abelian1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have p_gt1 := prime_gt1 p_pr; have p_gt0 := ltnW p_gt1.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have [n oG] := p_natP pG; have n_gt2: n > 2.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "apply: contraR not_cGG; rewrite -leqNgt => n_le2.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite (p2group_abelian pG) // oG pfactorK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_n := subnKC n_gt2; have n_gt1 := ltnW n_gt2; have n_gt0 := ltnW n_gt1.",
            "VernacExtend",
            "6e9c4a7182e7bfb867a934dc6fbcd115eb968278"
        ],
        [
            "pose q := (p ^ n.-1)%N; pose r := (p ^ n.-2)%N.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have q_gt1: q > 1 by rewrite (ltn_exp2l 0) // -(subnKC n_gt2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have r_gt0: r > 0 by rewrite expn_gt0 p_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_pr: (p * r)%N = q by rewrite /q /r -def_n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oX: #|X| = q by rewrite -(divg_indexS sXG) oG iXG /q -def_n mulKn.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ntX: X :!=: 1 by rewrite -cardG_gt1 oX.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have maxX: maximal X G by rewrite p_index_maximal ?iXG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nsXG: X <| G := p_maximal_normal pG maxX; have [_ nXG] := andP nsXG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have cXX: abelian X := cyclic_abelian cycX.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have scXG: 'C_G(X) = X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset subsetI sXG -abelianE cXX !andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: contraR not_cGG; case/subsetPn=> y; case/setIP=> Gy cXy notXy.",
            "VernacExtend",
            "b1717d233297e647089f2380199e54808b7d4afc"
        ],
        [
            "rewrite -!cycle_subG in Gy notXy; rewrite -(mulg_normal_maximal nsXG _ Gy) //.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by rewrite abelianM cycle_abelian cyclic_abelian ?cycle_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [x defX] := cyclicP cycX; have pX := pgroupS sXG pG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have Xx: x \\in X by [rewrite defX cycle_id]; have Gx := subsetP sXG x Xx.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have [ox p_x]: #[x] = q /\\ p.-elt x by rewrite defX in pX oX.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose Z := <[x ^+ r]>.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have defZ: Z = 'Ohm_1(X) by rewrite defX (Ohm_p_cycle _ p_x) ox subn1 pfactorK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oZ: #|Z| = p by rewrite -orderE orderXdiv ox -def_pr ?dvdn_mull ?mulnK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cGZ: Z \\subset 'C(G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nsZG: Z <| G by rewrite defZ gFnormal_trans.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/implyP: (meet_center_nil (pgroup_nil pG) nsZG).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -cardG_gt1 oZ p_gt1 setIA (setIidPl (normal_sub nsZG)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: contraR; move/prime_TIg=> -> //; rewrite oZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have X_Gp y: y \\in G -> y ^+ p \\in X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Gy; have nXy: y \\in 'N(X) := subsetP nXG y Gy.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite coset_idr ?groupX // morphX //; apply/eqP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -order_dvdn -iXG -card_quotient // order_dvdG ?mem_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [y X'y]: exists2 y, y \\in G :\\: X & (p == 2) + 3 <= n /\\ x ^ y = x ^+ r.+1 \\/ p = 2 /\\ x * x ^ y \\in Z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "have [y Gy notXy]: exists2 y, y \\in G & y \\notin X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/subsetPn; rewrite proper_subn ?(maxgroupp maxX).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nXy: y \\in 'N(X) := subsetP nXG y Gy; pose ay := conj_aut X y.",
            "VernacExtend",
            "fa6ff0c3d4595d45015144bd8c25fb5ac62ed42b"
        ],
        [
            "have oay: #[ay] = p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: nt_prime_order => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -morphX // mker // ker_conj_aut (subsetP cXX) ?X_Gp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (sameP eqP (kerP _ nXy)) ker_conj_aut.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: contra notXy => cXy; rewrite -scXG inE Gy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [m []]:= cyclic_pgroup_Aut_structure pX cycX ntX.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "set Ap := 'O_p(_); case=> def_m [m1 _] [m_inj _] _ _ _.",
            "VernacExtend",
            "e71d6651fc28367ed47c77bb86146155c9f63690"
        ],
        [
            "have sylAp: p.-Sylow(Aut X) Ap.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite nilpotent_pcore_Hall // abelian_nil // Aut_cyclic_abelian.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Ap1ay: ay \\in 'Ohm_1(Ap).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (OhmE _ (pcore_pgroup _ _)) mem_gen // !inE -order_dvdn oay dvdnn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mem_normal_Hall sylAp) ?pcore_normal ?Aut_aut //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /p_elt oay pnat_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}oX pfactorK // -{1}def_n /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [p2 | odd_p] := even_prime p_pr; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (sameP eqP (prime_oddPn p_pr)) odd_p n_gt2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=> _ [_ _ _] [_ _ [s [As os m_s defAp1]]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [j def_s]: exists j, s = ay ^+ j.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/cycleP; rewrite -cycle_subG subEproper eq_sym eqEcard -!orderE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -defAp1 cycle_subG Ap1ay oay os leqnn .",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (y ^+ j); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "left; rewrite -(norm_conj_autE _ Xx) ?groupX // morphX // -def_s.",
            "VernacExtend",
            "3b3709f1f829edf0a8e134c79040f193db185f25"
        ],
        [
            "by rewrite -def_m // m_s expg_znat // oX pfactorK ?eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -scXG !inE groupX //= andbT -ker_conj_aut !inE morphX // -def_s.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite andbC -(inj_in_eq m_inj) ?group1 // m_s m1 oX pfactorK // -/r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulrSr -subr_eq0 addrK -val_eqE /= val_Zp_nat //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [_ == 0%N]dvdn_Pexp2l // -def_n ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}p2 /= => [[t [At ot m_t]]]; rewrite {1}oX pfactorK // -{1}def_n.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite eqSS subn_eq0 => defA; exists y; rewrite ?inE ?notXy //.",
            "VernacExtend",
            "af8d684e893229257e14f47332c33f22e372f06b"
        ],
        [
            "rewrite p2 -(norm_conj_autE _ Xx) //= -/ay -def_m ?Aut_aut //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case Tay: (ay \\in <[t]>).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite cycle2g // !inE -order_eq1 oay p2 /= in Tay.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by right; rewrite (eqP Tay) m_t expg_zneg // mulgV group1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: leqP defA => [_ defA|le3n [a [Aa _ _ defA [s [As os m_s m_st defA1]]]]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite -defA Aut_aut in Tay.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: ay \\in [set s; s * t].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: ay \\in 'Ohm_1(Aut X) := subsetP (OhmS 1 (pcore_sub _ _)) ay Ap1ay.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/dprodP: (Ohm_dprod 1 defA) => _ <- _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite defA1 (@Ohm_p_cycle _ _ 2) /p_elt ot //= expg1 cycle2g //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulUg mul1g inE Tay cycle2g // mulgU mulg1 mulg_set1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/set2P=> ->; [left | right].",
            "VernacExtend",
            "b097f95e4ece695fe00c88def65b5b02539eefb6"
        ],
        [
            "by rewrite ?le3n m_s expg_znat // oX pfactorK // -p2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite m_st expg_znat // oX pfactorK // -p2 -/r -expgS prednK ?cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [Gy notXy] := setDP X'y; have nXy := subsetP nXG y Gy.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have defG j: <[x]> <*> <[x ^+ j * y]> = G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -defX -genM_join.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (mulg_normal_maximal nsXG) ?cycle_subG ?groupMl ?groupX ?genGid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have[i def_yp]: exists i, y ^- p = x ^+ i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/cycleP; rewrite -defX groupV X_Gp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have p_i: p %| i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraR notXy; rewrite -prime_coprime // => co_p_j.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "have genX: generator X (y ^- p).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite def_yp defX generator_coprime ox coprime_expl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -scXG (setIidPl _) // centsC ((X :=P: _) genX) cycle_subG groupV.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /= -(defG 0%N) mul1g centY inE -defX (subsetP cXX) ?X_Gp //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (subsetP (cycle_abelian y)) ?mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=> [[n_gt23 xy] | [p2 Z_xxy]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "suffices ->: cG = ModularGroup by []; apply/modular_group_classP.",
            "VernacExtend",
            "6a944086e34e23bbc09ac44f04e3571d04cc459d"
        ],
        [
            "exists p => //; exists n => //; rewrite isogEcard card_modular_group //.",
            "VernacExtend",
            "28c821d3ffa6b2d34a34ee3b5d1f710106f164c7"
        ],
        [
            "rewrite oG leqnn andbT Grp_modular_group // -/q -/r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have{i def_yp p_i} [i def_yp]: exists i, y ^- p = x ^+ i ^+ p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/dvdnP: p_i => j def_i; exists j; rewrite -expgM -def_i.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Zyx: [~ y, x] \\in Z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -groupV invg_comm commgEl xy expgS mulKg cycle_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_yxj j: [~ y, x ^+ j] = [~ y, x] ^+ j.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite commgX /commute ?(centsP cGZ _ Zyx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Zyxj j: [~ y, x ^+ j] \\in Z by rewrite def_yxj groupX.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have x_xjy j: x ^ (x ^+ j * y) = x ^+ r.+1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite conjgM {2}/conjg commuteX //= mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [cyxi | not_cyxi] := eqVneq ([~ y, x ^+ i] ^+ 'C(p, 2)) 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/existsP; exists (x, x ^+ i * y); rewrite /= !xpair_eqE.",
            "VernacExtend",
            "fc31c5128be88073a0fabd5ed600ed9418c56432"
        ],
        [
            "rewrite defG x_xjy -order_dvdn ox dvdnn !eqxx andbT /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite expMg_Rmul /commute ?(centsP cGZ _ (Zyxj _)) ?groupX // cyxi.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -def_yp -mulgA mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [p2 | odd_p] := even_prime p_pr; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -order_dvdn bin2odd ?dvdn_mulr // -oZ order_dvdG in not_cyxi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_yxi: [~ y, x ^+ i] = x ^+ r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= Zyxj i; rewrite /Z cycle_traject orderE oZ p2 !inE mulg1.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by case/pred2P=> // cyxi; rewrite cyxi p2 eqxx in not_cyxi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/existsP; exists (x, x ^+ (i + r %/ 2) * y); rewrite /= !xpair_eqE.",
            "VernacExtend",
            "fe4c906f909ae1e7533e2a8a10bf64d092809e03"
        ],
        [
            "rewrite defG x_xjy -order_dvdn ox dvdnn !eqxx andbT /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite expMg_Rmul /commute ?(centsP cGZ _ (Zyxj _)) ?groupX // def_yxj.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -expgM mulnDl addnC !expgD (expgM x i) -def_yp mulgKV.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -def_yxj def_yxi p2 mulgA -expgD in n_gt23 *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -expg_mod_order ox /q /r p2 -(subnKC n_gt23) mulnC !expnS mulKn //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addnn -mul2n modnn mul1g -order_dvdn dvdn_mulr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -p2 -oZ order_dvdG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{i def_yp p_i} Zy2: y ^+ 2 \\in Z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite defZ (OhmE _ pX) -groupV -p2 def_yp mem_gen // !inE groupX //= p2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite expgS -{2}def_yp -(mulKg y y) -conjgE -conjXg -conjVg def_yp conjXg.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -expgMn //; last by apply: (centsP cXX); rewrite ?memJ_norm.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -order_dvdn (dvdn_trans (order_dvdG Z_xxy)) ?oZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !cycle_traject !orderE oZ p2 !inE !mulg1 /= in Z_xxy Zy2 *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -eq_invg_mul eq_sym -[r]prednK // expgS (inj_eq (mulgI _)) in Z_xxy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/pred2P: Z_xxy => xy; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "suffices ->: cG = SemiDihedral by []; apply/semidihedral_classP.",
            "VernacExtend",
            "6a944086e34e23bbc09ac44f04e3571d04cc459d"
        ],
        [
            "have n_gt3: n > 3.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: ltngtP notXy => // [|n3]; first by rewrite ltnNge n_gt2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -scXG inE Gy defX cent_cycle; case/cent1P; red.",
            "VernacExtend",
            "e6ac4438ce58868999dbbd8f181f0c4767c2e64f"
        ],
        [
            "by rewrite (conjgC x) xy /r p2 n3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists n => //; rewrite isogEcard card_semidihedral // oG p2 leqnn andbT.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite Grp_semidihedral //; apply/existsP=> /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "case/pred2P: Zy2 => y2; [exists (x, y) | exists (x, x * y)].",
            "VernacExtend",
            "59f06379782134d66d0e8d064635cbe24babb00e"
        ],
        [
            "by rewrite /= -{1}[y]mul1g (defG 0%N) y2 xy -p2 -/q -ox expg_order.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /= (defG 1%N) conjgM {2}/conjg mulKg -p2 -/q -ox expg_order -xy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !xpair_eqE !eqxx /= andbT p2 expgS {2}(conjgC x) xy mulgA -(mulgA x).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [y * y]y2 -expgS -expgD addSnnS prednK // addnn -mul2n -p2 def_pr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -ox expg_order.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/pred2P: Zy2 => y2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "suffices ->: cG = Dihedral by []; apply/dihedral_classP.",
            "VernacExtend",
            "6a944086e34e23bbc09ac44f04e3571d04cc459d"
        ],
        [
            "exists n => //; rewrite isogEcard card_2dihedral // oG p2 leqnn andbT.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite Grp_2dihedral //; apply/existsP; exists (x, y) => /=.",
            "VernacExtend",
            "0288f65064e83af8559a49f90a2eba4421e03fd4"
        ],
        [
            "by rewrite /= -{1}[y]mul1g (defG 0%N) y2 xy -p2 -/q -ox expg_order.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices ->: cG = Quaternion by []; apply/quaternion_classP.",
            "VernacExtend",
            "6a944086e34e23bbc09ac44f04e3571d04cc459d"
        ],
        [
            "exists n => //; rewrite isogEcard card_quaternion // oG p2 leqnn andbT.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite Grp_quaternion //; apply/existsP; exists (x, y) => /=.",
            "VernacExtend",
            "0288f65064e83af8559a49f90a2eba4421e03fd4"
        ],
        [
            "by rewrite /= -{1}[y]mul1g (defG 0%N) y2 xy -p2 -/q -ox expg_order.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclic_SCN gT p (G U : {group gT}) : p.-group G -> U \\in 'SCN(G) -> ~~ abelian G -> cyclic U -> [/\\ p = 2, #|G : U| = 2 & extremal2 G] \\/ exists M : {group gT}, [/\\ M :=: 'C_G('Mho^1(U)), #|M : U| = p, extremal_class M = ModularGroup, 'Ohm_1(M)%G \\in 'E_p^2(G) & 'Ohm_1(M) \\char G].",
            "VernacStartTheoremProof",
            "a29b74e797f47d98ab19f9b2185014553c327872"
        ],
        [
            "move=> pG /SCN_P[nsUG scUG] not_cGG cycU; have [sUG nUG] := andP nsUG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [cUU pU] := (cyclic_abelian cycU, pgroupS sUG pG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ltUG: ~~ (G \\subset U).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contra not_cGG => sGU; apply: abelianS cUU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ntU: U :!=: 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contraNneq ltUG => U1; rewrite -scUG subsetIidl U1 cents1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [p_pr _ [n oU]] := pgroup_pdiv pU ntU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have p_gt1 := prime_gt1 p_pr; have p_gt0 := ltnW p_gt1.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have [u defU] := cyclicP cycU; have Uu: u \\in U by rewrite defU cycle_id.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have Gu := subsetP sUG u Uu; have p_u := mem_p_elt pG Gu.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have defU1: 'Mho^1(U) = <[u ^+ p]> by rewrite defU (Mho_p_cycle _ p_u).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have modM1 (M : {group gT}): [/\\ U \\subset M, #|M : U| = p & extremal_class M = ModularGroup] -> M :=: 'C_M('Mho^1(U)) /\\ 'Ohm_1(M)%G \\in 'E_p^2(M).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=> sUM iUM /modular_group_classP[q q_pr {n oU}[n n_gt23 isoM]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have n_gt2: n > 2 by apply: leq_trans (leq_addl _ _) n_gt23.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_n: n = (n - 3).+3 by rewrite -{1}(subnKC n_gt2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oM: #|M| = (q ^ n)%N by rewrite (card_isog isoM) card_modular_group.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have pM: q.-group M by rewrite /pgroup oM pnat_exp pnat_id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_q: q = p; last rewrite {q q_pr}def_q in oM pM isoM n_gt23.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/eqP; rewrite eq_sym [p == q](pgroupP pM) // -iUM dvdn_indexg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [[x y] genM modM] := generators_modular_group p_pr n_gt2 isoM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/modular_group_structure: genM => // _ [defZ _ oZ] _ defMho.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have ->: 'Mho^1(U) = 'Z(M).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEcard oZ defZ -(defMho 1%N) ?MhoS //= defU1 -orderE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "suff ou: #[u] = (p * p ^ n.-2)%N by rewrite orderXdiv ou ?dvdn_mulr ?mulKn.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite orderE -defU -(divg_indexS sUM) iUM oM def_n mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: eqP => [[p2 n3] | _ defOhm]; first by rewrite p2 n3 in n_gt23.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have{defOhm} [|defM1 oM1] := defOhm 1%N; first by rewrite def_n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split; rewrite ?(setIidPl _) //; first by rewrite centsC subsetIr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite inE oM1 pfactorK // andbT inE Ohm_sub abelem_Ohm1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: (card_p2group_abelian p_pr oM1).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have ou: #[u] = (p ^ n.+1)%N by rewrite defU in oU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose Gs := G / U; have pGs: p.-group Gs by rewrite quotient_pgroup.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have ntGs: Gs != 1 by rewrite -subG1 quotient_sub1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [_ _ [[|k] oGs]] := pgroup_pdiv pGs ntGs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have iUG: #|G : U| = p by rewrite -card_quotient ?oGs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (predU1P (maximal_cycle_extremal _ _ _ _ iUG)) => // [modG | ext2G].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by right; exists G; case: (modM1 G) => // <- ->; rewrite Ohm_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by left; case: eqP ext2G => // <-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose M := 'C_G('Mho^1(U)); right; exists [group of M].",
            "VernacExtend",
            "d169b68f43fa1902909e9f89f298ef684cc61e8f"
        ],
        [
            "have sMG: M \\subset G by apply: subsetIl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [pM nUM] := (pgroupS sMG pG, subset_trans sMG nUG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sUM: U \\subset M by rewrite subsetI sUG sub_abelian_cent ?Mho_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose A := Aut U; have cAA: abelian A by rewrite Aut_cyclic_abelian.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have sylAp: p.-Sylow(A) 'O_p(A) by rewrite nilpotent_pcore_Hall ?abelian_nil.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [f [injf sfGsA fG]]: exists f : {morphism Gs >-> {perm gT}}, [/\\ 'injm f, f @* Gs \\subset A & {in G, forall y, f (coset U y) u = u ^ y}].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "have [] := first_isom_loc [morphism of conj_aut U] nUG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite ker_conj_aut scUG /= -/Gs => f injf im_f.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists f; rewrite im_f ?Aut_conj_aut //.",
            "VernacExtend",
            "d5a2d7a62174a8fb80cc09448d0a7212f5a39b0d"
        ],
        [
            "split=> // y Gy; have nUy := subsetP nUG y Gy.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "suffices ->: f (coset U y) = conj_aut U y by rewrite norm_conj_autE.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by apply: set1_inj; rewrite -!morphim_set1 ?mem_quotient // im_f ?sub1set.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have cGsGs: abelian Gs by rewrite -(injm_abelian injf) // (abelianS sfGsA).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have p_fGs: p.-group (f @* Gs) by rewrite morphim_pgroup.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sfGsAp: f @* Gs \\subset 'O_p(A) by rewrite (sub_Hall_pcore sylAp).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [a [fGa oa au n_gt01 cycGs]]: exists a, [/\\ a \\in f @* Gs, #[a] = p, a u = u ^+ (p ^ n).+1, (p == 2) + 1 <= n & cyclic Gs \\/ p = 2 /\\ (exists2 c, c \\in f @* Gs & c u = u^-1)].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "have [m [[def_m _ _ _ _] _]] := cyclic_pgroup_Aut_structure pU cycU ntU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ->: logn p #|U| = n.+1 by rewrite oU pfactorK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /= -/A; case: posnP => [_ defA | n_gt0 [c [Ac oc m_c defA]]].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have:= cardSg sfGsAp; rewrite (card_Hall sylAp) /= -/A defA card_injm //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite oGs (part_p'nat (pcore_pgroup _ _)) pfactor_dvdn // logn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [p2 | odd_p] := even_prime p_pr; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: eqP => [-> // | _] in odd_p *; rewrite odd_p in defA.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "have [[cycA _] _ [a [Aa oa m_a defA1]]] := defA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists a; rewrite -def_m // oa m_a expg_znat //.",
            "VernacExtend",
            "26768a9862fadf618b4c4ff746d0d41878c2fb56"
        ],
        [
            "split=> //; last by left; rewrite -(injm_cyclic injf) ?(cyclicS sfGsA).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have: f @* Gs != 1 by rewrite morphim_injm_eq1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -cycle_subG; apply: contraR => not_sfGs_a.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -(setIidPl sfGsAp) TI_Ohm1 // defA1 setIC prime_TIg -?orderE ?oa.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "do [rewrite {1}p2 /= eqn_leq n_gt0; case: leqP => /= [_ | n_gt1]] in defA.",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "have:= cardSg sfGsAp; rewrite (card_Hall sylAp) /= -/A defA -orderE oc p2.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite card_injm // oGs p2 pfactor_dvdn // p_part.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{defA} [s [As os _ defA [a [Aa oa m_a _ defA1]]]] := defA; exists a.",
            "VernacExtend",
            "2f26a1cec213dc704f1dd4ca7d5feea731860616"
        ],
        [
            "have fGs_a: a \\in f @* Gs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices: f @* Gs :&: <[s]> != 1.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply: contraR => not_fGs_a; rewrite TI_Ohm1 // defA1 setIC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite prime_TIg -?orderE ?oa // cycle_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: (f @* Gs) * <[s]> \\subset A by rewrite mulG_subG cycle_subG sfGsA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/subset_leq_card; apply: contraL; move/eqP; move/TI_cardMg->.",
            "VernacExtend",
            "d346b57a42d0bc171e67682b61471a4d87e75c34"
        ],
        [
            "rewrite -(dprod_card defA) -ltnNge mulnC -!orderE ltn_pmul2r // oc.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite card_injm // oGs p2 (ltn_exp2l 1%N).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -def_m // oa m_a expg_znat // p2; split=> //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite abelian_rank1_cyclic // (rank_pgroup pGs) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(injm_p_rank injf) // p_rank_abelian 1?morphim_abelian //= p2 -/Gs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: leqP => [|fGs1_gt1]; [by left | right].",
            "VernacExtend",
            "28d7a3d41323a7d50926693be2bd9af7708dcf6f"
        ],
        [
            "split=> //; exists c; last by rewrite -def_m // m_c expg_zneg.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have{defA1} defA1: <[a]> \\x <[c]> = 'Ohm_1(Aut U).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(Ohm_dprod 1 defA) defA1 (@Ohm_p_cycle 1 _ 2) /p_elt oc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_fGs1: 'Ohm_1(f @* Gs) = 'Ohm_1(A).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEcard OhmS // -(dprod_card defA1) -!orderE oa oc.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite dvdn_leq ?(@pfactor_dvdn 2 2) ?cardG_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (subsetP (Ohm_sub 1 _)) // def_fGs1 -cycle_subG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/dprodP: defA1 => _ <- _ _; rewrite mulG_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have n_gt0: n > 0 := leq_trans (leq_addl _ _) n_gt01.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [ys Gys _ def_a] := morphimP fGa.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oys: #[ys] = p by rewrite -(order_injm injf) // -def_a oa.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defMs: M / U = <[ys]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEcard -orderE oys cycle_subG; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "have [y nUy Gy /= def_ys] := morphimP Gys.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite def_ys mem_quotient //= inE Gy defU1 cent_cycle cent1C.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (sameP cent1P commgP) commgEl conjXg -fG //= -def_ys -def_a au.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -expgM mulSn expgD mulKg -expnSr -ou expg_order.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite card_quotient // -(setIidPr sUM) -scUG setIA (setIidPl sMG).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite defU cent_cycle index_cent1 -(card_imset _ (mulgI u^-1)) -imset_comp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have <-: #|'Ohm_1(U)| = p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite defU (Ohm_p_cycle 1 p_u) -orderE (orderXexp _ ou) ou pfactorK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (OhmE 1 pU) subset_leq_card ?sub_gen //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> _ /imsetP[z /setIP[/(subsetP nUG) nUz cU1z] ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Uv' := groupVr Uu; have Uuz: u ^ z \\in U by rewrite memJ_norm.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite !inE groupM // expgMn /commute 1?(centsP cUU u^-1) //= expgVn -conjXg.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (sameP commgP cent1P) cent1C -cent_cycle -defU1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have iUM: #|M : U| = p by rewrite -card_quotient ?defMs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have not_cMM: ~~ abelian M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraL p_pr => cMM; rewrite -iUM -indexgI /= -/M.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (setIidPl _) ?indexgg // -scUG subsetI sMG sub_abelian_cent.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have modM: extremal_class M = ModularGroup.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sU1Z: 'Mho^1(U) \\subset 'Z(M).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite subsetI gFsub_trans // centsC subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /maximal_cycle_extremal/predU1P[] //= := iUM; rewrite -/M.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case/andP=> /eqP-p2 ext2M; rewrite p2 add1n in n_gt01.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "suffices{sU1Z}: #|'Z(M)| = 2.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "move/eqP; rewrite eqn_leq leqNgt (leq_trans _ (subset_leq_card sU1Z)) //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite defU1 -orderE (orderXexp 1 ou) subn1 p2 (ltn_exp2l 1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: ext2M; rewrite /extremal2 !inE orbC -orbA; case/or3P; move/eqP.",
            "VernacExtend",
            "9a891fa8d8767e5a830b5818345ba27c4538938e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case/semidihedral_classP=> m m_gt3 isoM.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [[x z] genM [oz _]] := generators_semidihedral m_gt3 isoM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/semidihedral_structure: genM => // _ _ [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case/quaternion_classP=> m m_gt2 isoM.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [[x z] genM _] := generators_quaternion m_gt2 isoM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/quaternion_structure: genM => // _ _ [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/dihedral_classP=> m m_gt1 isoM.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [[x z] genM _] := generators_2dihedral m_gt1 isoM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/dihedral2_structure: genM not_cMM => // _ _ _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: (m == 2) => [|[]//]; move/abelem_abelian->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [//|_] := modM1 [group of M]; rewrite !inE -andbA /=.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by case/andP=> /subset_trans->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{cycGs} [cycGs | [p2 [c fGs_c u_c]]] := cycGs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices ->: 'Ohm_1(M) = 'Ohm_1(G) by apply: Ohm_char.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "suffices sG1M: 'Ohm_1(G) \\subset M.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by apply/eqP; rewrite eqEsubset -{2}(Ohm_id 1 G) !OhmS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(quotientSGK _ sUM) ?(subset_trans (Ohm_sub _ G)) //= defMs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suffices ->: <[ys]> = 'Ohm_1(Gs) by rewrite morphim_Ohm.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply/eqP; rewrite eqEcard -orderE cycle_subG /= {1}(OhmE 1 pGs) /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite mem_gen ?inE ?Gys -?order_dvdn oys //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(part_pnat_id (pgroupS (Ohm_sub _ _) pGs)) p_part (leq_exp2l _ 1) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -p_rank_abelian -?rank_pgroup -?abelian_rank1_cyclic.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices charU1: 'Mho^1(U) \\char G^`(1).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite gFchar_trans // subcent_char ?(char_trans charU1) ?gFchar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices sUiG': 'Mho^1(U) \\subset G^`(1).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "have /cyclicP[zs cycG']: cyclic G^`(1) by rewrite (cyclicS _ cycU) ?der1_min.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cycG' in sUiG' *; apply: cycle_subgroup_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite defU1 cycle_subG p2 -groupV invMg -{2}u_c.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by have [_ _ /morphimP[z _ Gz ->] ->] := morphimP fGs_c; rewrite fG ?mem_commg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normal_rank1_structure gT p (G : {group gT}) : p.-group G -> (forall X : {group gT}, X <| G -> abelian X -> cyclic X) -> cyclic G \\/ [&& p == 2, extremal2 G & (#|G| >= 16) || (G \\isog 'Q_8)].",
            "VernacStartTheoremProof",
            "70395238a7d9f9b40de3e7f13b33a7b791c01558"
        ],
        [
            "move=> pG dn_G_1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [cGG | not_cGG] := boolP (abelian G); first by left; rewrite dn_G_1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [X maxX]: {X | [max X | X <| G & abelian X]}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: ex_maxgroup; exists 1%G; rewrite normal1 abelian1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have cycX: cyclic X by rewrite dn_G_1; case/andP: (maxgroupp maxX).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have scX: X \\in 'SCN(G) := max_SCN pG maxX.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [[p2 _ cG] | [M [_ _ _]]] := cyclic_SCN pG scX not_cGG cycX; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite 2!inE -andbA => /and3P[sEG abelE dimE_2] charE.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have:= dn_G_1 _ (char_normal charE) (abelem_abelian abelE).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (abelem_cyclic abelE) (eqP dimE_2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [n oG] := p_natP pG; right; rewrite p2 cG /= in oG *.",
            "VernacExtend",
            "98e63033bc0173f0f4661392c19dd764fa261f71"
        ],
        [
            "rewrite oG (@leq_exp2l 2 4) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /extremal2 /extremal_class oG pfactorKpdiv // in cG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: andP cG => [[n_gt1 isoG] _ | _]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite leq_eqVlt; case: (3 < n); case: eqP => //= <-; do 2?case: ifP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [[x y] genG _] := generators_2dihedral n_gt1 isoG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [_ _ _ [_ _ maxG]] := dihedral2_structure n_gt1 genG isoG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite 2!ltn_neqAle n_gt1 !(eq_sym _ n).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: eqP => [_ abelG| _]; first by rewrite (abelem_abelian abelG) in not_cGG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: eqP => // -> [_ _ isoY _ _]; set Y := <<_>> in isoY.",
            "VernacExtend",
            "5ced22bf51d40cd3bfc1a1ee7adc8994d4475320"
        ],
        [
            "have nxYG: Y <| G by rewrite (p_maximal_normal pG) // maxG !inE eqxx orbT.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [// | [u v] genY _] := generators_2dihedral _ isoY.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/dihedral2_structure: (genY) => //= _ _ _ _ abelY.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have:= dn_G_1 _ nxYG (abelem_abelian abelY).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (abelem_cyclic abelY); case: genY => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_pgroup_rank1_cyclic gT p (G : {group gT}) : p.-group G -> odd #|G| -> cyclic G = ('r_p(G) <= 1).",
            "VernacStartTheoremProof",
            "e780136e98f2dca7cfb39f90a6d5e66966b4ad70"
        ],
        [
            "move=> pG oddG; rewrite -rank_pgroup //; apply/idP/idP=> [cycG | dimG1].",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite -abelian_rank1_cyclic ?cyclic_abelian.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [X nsXG cXX|//|] := normal_rank1_structure pG; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (negPf (odd_not_extremal2 oddG)) andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite abelian_rank1_cyclic // (leq_trans (rankS (normal_sub nsXG))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prime_Ohm1P gT p (G : {group gT}) : p.-group G -> G :!=: 1 -> reflect (#|'Ohm_1(G)| = p) (cyclic G || (p == 2) && (extremal_class G == Quaternion)).",
            "VernacStartTheoremProof",
            "84ae59be70b4dbe6d4ceb89bc4b9923127bc9098"
        ],
        [
            "move=> pG ntG; have [p_pr p_dvd_G _] := pgroup_pdiv pG ntG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply: (iffP idP) => [|oG1p].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case/orP=> [cycG|]; first exact: Ohm1_cyclic_pgroup_prime.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=> /eqP p2 /eqP/quaternion_classP[n n_gt2 isoG].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite p2; have [[x y]] := generators_quaternion n_gt2 isoG.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by case/quaternion_structure=> // _ _ [<- oZ _ [->]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [X nsXG cXX|-> //|]:= normal_rank1_structure pG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [sXG _] := andP nsXG; have pX := pgroupS sXG pG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite abelian_rank1_cyclic // (rank_pgroup pX) p_rank_abelian //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{2}(pfactorK 1 p_pr) -{3}oG1p dvdn_leq_log ?cardG_gt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cardSg ?OhmS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/and3P=> /eqP p2; rewrite p2 (orbC (cyclic G)) /extremal2.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case cG: (extremal_class G) => //; case: notF.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "case/dihedral_classP: cG => n n_gt1 isoG.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [[x y] genG _] := generators_2dihedral n_gt1 isoG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [oG _ _ _] := genG; case/dihedral2_structure: genG => // _ _ [defG1 _] _.",
            "VernacExtend",
            "c6d2532ed4a224baf57de7930305ff767fdbd834"
        ],
        [
            "by case/idPn: n_gt1; rewrite -(@ltn_exp2l 2) // -oG -defG1 oG1p p2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/semidihedral_classP: cG => n n_gt3 isoG.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [[x y] genG [oy _]] := generators_semidihedral n_gt3 isoG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/semidihedral_structure: genG => // _ _ [_ _ [defG1 _] _] _ [isoG1 _ _].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/idPn: (n_gt3); rewrite -(ltn_predK n_gt3) ltnS -leqNgt -(@leq_exp2l 2) //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite -card_2dihedral //; last by rewrite -(subnKC n_gt3).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(card_isog isoG1) /= -defG1 oG1p p2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem symplectic_type_group_structure gT p (G : {group gT}) : p.-group G -> (forall X : {group gT}, X \\char G -> abelian X -> cyclic X) -> exists2 E : {group gT}, E :=: 1 \\/ extraspecial E & exists R : {group gT}, [/\\ cyclic R \\/ [/\\ p = 2, extremal2 R & #|R| >= 16], E \\* R = G & E :&: R = 'Z(E)].",
            "VernacStartTheoremProof",
            "f3afe6fdc28dde9494414a92ca515c0202ad5c83"
        ],
        [
            "move=> pG sympG; have [H [charH]] := Thompson_critical pG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have sHG := char_sub charH; have pH := pgroupS sHG pG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "set U := 'Z(H) => sPhiH_U sHG_U defU; set Z := 'Ohm_1(U).",
            "VernacExtend",
            "c9a8452e0e06a4c3ac19bcd1b0a42d11d8e194b2"
        ],
        [
            "have sZU: Z \\subset U by rewrite Ohm_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have charU: U \\char G := gFchar_trans _ charH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cUU: abelian U := center_abelian H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cycU: cyclic U by apply: sympG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have pU: p.-group U := pgroupS (char_sub charU) pG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cHU: U \\subset 'C(H) by rewrite subsetIr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cHsHs: abelian (H / Z).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite sub_der1_abelian //= (OhmE _ pU) genS //= -/U.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> _ /imset2P[h k Hh Hk ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Uhk: [~ h, k] \\in U by rewrite (subsetP sHG_U) ?mem_commg ?(subsetP sHG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite inE Uhk inE -commXg; last by red; rewrite -(centsP cHU).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/commgP; red; rewrite (centsP cHU) // (subsetP sPhiH_U) //.",
            "VernacExtend",
            "bf1441a101f131dd70079bea226c26d3cac6080e"
        ],
        [
            "by rewrite (Phi_joing pH) mem_gen // inE orbC (Mho_p_elt 1) ?(mem_p_elt pH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nsZH: Z <| H by rewrite sub_center_normal.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [K /=] := inv_quotientS nsZH (Ohm_sub 1 (H / Z)); fold Z => defKs sZK sKH.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "have nsZK: Z <| K := normalS sZK sKH nsZH; have [_ nZK] := andP nsZK.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have abelKs: p.-abelem (K / Z) by rewrite -defKs Ohm1_abelem ?quotient_pgroup.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have charK: K \\char G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have charZ: Z \\char H := gFchar_trans _ (center_char H).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (char_trans _ charH) // (char_from_quotient nsZK) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -defKs Ohm_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have cycZK: cyclic 'Z(K) by rewrite sympG ?center_abelian ?gFchar_trans.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [cKK | not_cKK] := orP (orbN (abelian K)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defH: U = H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: center_idP; apply: cyclic_factor_abelian (Ohm_sub 1 _) _.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite /= -/Z abelian_rank1_cyclic //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have cKsKs: abelian (K / Z) by rewrite -defKs (abelianS (Ohm_sub 1 _)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cycK: cyclic K by rewrite -(center_idP cKK).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -rank_Ohm1 defKs -abelian_rank1_cyclic ?quotient_cyclic.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have scH: H \\in 'SCN(G) by apply/SCN_P; rewrite defU char_normal.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [cGG | not_cGG] := orP (orbN (abelian G)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists 1%G; [by left | exists G; rewrite cprod1g (setIidPl _) ?sub1G //].",
            "VernacExtend",
            "f75ef30e47af32ad4b7edefa2c8a9f826c11f845"
        ],
        [
            "by split; first left; rewrite ?center1 // sympG ?char_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have cycH: cyclic H by rewrite -{}defH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [[p2 _ cG2]|[M [_ _ _]]] := cyclic_SCN pG scH not_cGG cycH; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "do 2![case/setIdP] => _ abelE dimE_2 charE.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have:= sympG _ charE (abelem_abelian abelE).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (abelem_cyclic abelE) (eqP dimE_2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [n oG] := p_natP pG; rewrite p2 in oG.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have [n_gt3 | n_le3] := ltnP 3 n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists 1%G; [by left | exists G; rewrite cprod1g (setIidPl _) ?sub1G //].",
            "VernacExtend",
            "f75ef30e47af32ad4b7edefa2c8a9f826c11f845"
        ],
        [
            "by split; first right; rewrite ?center1 // oG (@leq_exp2l 2 4).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have esG: extraspecial G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: (p3group_extraspecial pG); rewrite // p2 oG pfactorK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists G; [by right | exists ('Z(G))%G; rewrite cprod_center_id setIA setIid].",
            "VernacExtend",
            "2a5cf7557392a6d804dbf4451511258c6aea7144"
        ],
        [
            "by split=> //; left; rewrite prime_cyclic; case: esG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ntK: K :!=: 1 by apply: contra not_cKK => /eqP->; apply: abelian1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [p_pr _ _] := pgroup_pdiv (pgroupS sKH pH) ntK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have p_gt1 := prime_gt1 p_pr; have p_gt0 := ltnW p_gt1.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have oZ: #|Z| = p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: Ohm1_cyclic_pgroup_prime => //=; apply: contra ntK; move/eqP.",
            "VernacExtend",
            "6cee8938e4c92292ae66c56557669b6bd87a33e5"
        ],
        [
            "by move/(trivg_center_pgroup pH)=> GH; rewrite -subG1 -GH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sZ_ZK: Z \\subset 'Z(K).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite subsetI sZK gFsub_trans // subIset ?centS ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sZsKs: 'Z(K) / Z \\subset K / Z by rewrite quotientS ?center_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [Es /= splitKs] := abelem_split_dprod abelKs sZsKs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [_ /= defEsZs cEsZs tiEsZs] := dprodP splitKs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sEsKs: Es \\subset K / Z by rewrite -defEsZs mulG_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [E defEs sZE sEK] := inv_quotientS nsZK sEsKs; rewrite /= -/Z in defEs sZE.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have [nZE nZ_ZK] := (subset_trans sEK nZK, subset_trans (center_sub K) nZK).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defK: 'Z(K) * E = K.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(mulSGid sZ_ZK) -mulgA -quotientK ?mul_subG ?quotientMl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -defEs defEsZs quotientGK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defZE: 'Z(E) = Z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cEZK: 'Z(K) \\subset 'C(E) by rewrite subIset // orbC centS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cE_Z: E \\subset 'C(Z) by rewrite centsC (subset_trans sZ_ZK).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset andbC subsetI sZE centsC cE_Z /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -quotient_sub1 ?subIset ?nZE //= -/Z -tiEsZs subsetI defEs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !quotientS ?center_sub //= subsetI subIset ?sEK //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -defK centM setSI // centsC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sEH := subset_trans sEK sKH; have pE := pgroupS sEH pH.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have esE: extraspecial E.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split; last by rewrite defZE oZ.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have sPhiZ: 'Phi(E) \\subset Z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -quotient_sub1 ?gFsub_trans ?(quotient_Phi pE) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite subG1 (trivg_Phi (quotient_pgroup _ pE)) /= -defEs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (abelemS sEsKs) //= -defKs Ohm1_abelem ?quotient_pgroup.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sE'Phi: E^`(1) \\subset 'Phi(E) by rewrite (Phi_joing pE) joing_subl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ntE': E^`(1) != 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (sameP eqP commG1P) -abelianE; apply: contra not_cKK => cEE.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -defK mulGSid ?center_abelian // -(center_idP cEE) defZE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defE': E^`(1) = Z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEcard (subset_trans sE'Phi) //= oZ.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have [_ _ [n ->]] := pgroup_pdiv (pgroupS (der_sub _ _) pE) ntE'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (leq_exp2l 1) ?prime_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by split; rewrite defZE //; apply/eqP; rewrite eqEsubset sPhiZ -defE'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [spE _] := esE; have [defPhiE defE'] := spE.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have{defE'} sEG_E': [~: E, G] \\subset E^`(1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite defE' defZE /Z (OhmE _ pU) commGC genS //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> _ /imset2P[g e Gg Ee ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have He: e \\in H by rewrite (subsetP sKH) ?(subsetP sEK).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Uge: [~ g, e] \\in U by rewrite (subsetP sHG_U) ?mem_commg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite inE Uge inE -commgX; last by red; rewrite -(centsP cHU).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have sZ_ZG: Z \\subset 'Z(G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have charZ: Z \\char G := gFchar_trans _ charU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have/implyP:= meet_center_nil (pgroup_nil pG) (char_normal charZ).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -cardG_gt1 oZ prime_gt1 //=; apply: contraR => not_sZ_ZG.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite prime_TIg ?oZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: e ^+ p \\in 'Z(G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (subsetP sZ_ZG) // -defZE -defPhiE (Phi_joing pE) mem_gen //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite inE orbC (Mho_p_elt 1) ?(mem_p_elt pE).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/setIP=> _ /centP cGep; apply/commgP; red; rewrite cGep.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sEG: E \\subset G := subset_trans sEK (char_sub charK).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "set R := 'C_G(E).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have{sEG_E'} defG: E \\* R = G by apply: (critical_extraspecial pG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [_ defER cRE] := cprodP defG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defH: E \\* 'C_H(E) = H by rewrite -(setIidPr sHG) setIAC (cprod_modl defG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{defH} [_ defH cRH_E] := cprodP defH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cRH_RH: abelian 'C_H(E).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sZ_ZRH: Z \\subset 'Z('C_H(E)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite subsetI -{1}defZE setSI //= (subset_trans sZU) // centsC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subIset // centsC cHU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (cyclic_factor_abelian sZ_ZRH) //= -/Z.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have defHs: Es \\x ('C_H(E) / Z) = H / Z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite defEs dprodE ?quotient_cents // -?quotientMl ?defH -?quotientGI //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite setIA (setIidPl sEH) ['C_E(E)]defZE trivg_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= Ohm_dprod 1 defHs; rewrite /= defKs (Ohm1_id (abelemS sEsKs abelKs)).",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite dprodC; case/dprodP=> _ defEsRHs1 cRHs1Es tiRHs1Es.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have sRHsHs: 'C_H(E) / Z \\subset H / Z by rewrite quotientS ?subsetIl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cRHsRHs: abelian ('C_H(E) / Z) by apply: abelianS cHsHs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have pHs: p.-group (H / Z) by rewrite quotient_pgroup.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite abelian_rank1_cyclic // (rank_pgroup (pgroupS sRHsHs pHs)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite p_rank_abelian // -(leq_add2r (logn p #|Es|)) -lognM ?cardG_gt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -TI_cardMg // defEsRHs1 /= -defEsZs TI_cardMg ?lognM ?cardG_gt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite leq_add2r -abelem_cyclic ?(abelemS sZsKs) // quotient_cyclic.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{cRH_RH} defRH: 'C_H(E) = U.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqEsubset andbC setIS ?centS // subsetI subsetIl /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -{2}defH centM subsetI subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have scUR: 'C_R(U) = U by rewrite -setIA -{1}defRH -centM defH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sUR: U \\subset R by rewrite -defRH setSI.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have tiER: E :&: R = 'Z(E) by rewrite setIA (setIidPl (subset_trans sEH sHG)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [cRR | not_cRR] := boolP (abelian R).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists E; [by right | exists [group of R]; split=> //; left].",
            "VernacExtend",
            "b052c892055eb9b90ed57f5577ed9fcbb7d00ec8"
        ],
        [
            "by rewrite /= -(setIidPl (sub_abelian_cent cRR sUR)) scUR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{scUR} scUR: [group of U] \\in 'SCN(R).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/SCN_P; rewrite (normalS sUR (subsetIl _ _)) // char_normal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have pR: p.-group R := pgroupS (subsetIl _ _) pG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [R_le_3 | R_gt_3] := leqP (logn p #|R|) 3.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have esR: extraspecial R := p3group_extraspecial pR not_cRR R_le_3.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have esG: extraspecial G := cprod_extraspecial pG defG tiER esE esR.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists G; [by right | exists ('Z(G))%G; rewrite cprod_center_id setIA setIid].",
            "VernacExtend",
            "2a5cf7557392a6d804dbf4451511258c6aea7144"
        ],
        [
            "by split=> //; left; rewrite prime_cyclic; case: esG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [[p2 _ ext2R] | [M []]] := cyclic_SCN pR scUR not_cRR cycU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists E; [by right | exists [group of R]; split=> //; right].",
            "VernacExtend",
            "c0e082f7615073129c75a1b20675f3a05dce323e"
        ],
        [
            "by rewrite dvdn_leq ?(@pfactor_dvdn 2 4) ?cardG_gt0 // -{2}p2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /= -/R => defM iUM modM _ _; pose N := 'C_G('Mho^1(U)).",
            "VernacExtend",
            "9d8fbc7ebaadb48200c542591ceec3e0f555a812"
        ],
        [
            "have charZN2: 'Z('Ohm_2(N)) \\char G by rewrite !(gFchar_trans, subcent_char).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= sympG _ charZN2 (center_abelian _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite abelian_rank1_cyclic ?center_abelian // leqNgt; case/negP.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have defN: E \\* M = N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite defM (cprod_modl defG) // centsC gFsub_trans //= -/U.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -defRH subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/modular_group_classP: modM => q q_pr [n n_gt23 isoM].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have{n_gt23} n_gt2 := leq_trans (leq_addl _ _) n_gt23.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have n_gt1 := ltnW n_gt2; have n_gt0 := ltnW n_gt1.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have [[x y] genM modM] := generators_modular_group q_pr n_gt2 isoM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{q_pr} defq: q = p; last rewrite {q}defq in genM modM isoM.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have: p %| #|M| by rewrite -iUM dvdn_indexg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by have [-> _ _ _] := genM; rewrite Euclid_dvdX // dvdn_prime2 //; case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [oM Mx ox X'y] := genM; have [My _] := setDP X'y; have [oy _] := modM.",
            "VernacExtend",
            "6e9c4a7182e7bfb867a934dc6fbcd115eb968278"
        ],
        [
            "have [sUM sMR]: U \\subset M /\\ M \\subset R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite defM subsetI sUR subsetIl centsC gFsub_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have oU1: #|'Mho^1(U)| = (p ^ n.-2)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oU: #|U| = (p ^ n.-1)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(divg_indexS sUM) iUM oM -subn1 expnB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/cyclicP: cycU pU oU => u -> p_u ou.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (Mho_p_cycle 1 p_u) -orderE (orderXexp 1 ou) subn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sZU1: Z \\subset 'Mho^1(U).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(cardSg_cyclic cycU) ?gFsub // oZ oU1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(subnKC n_gt2) expnS dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/modular_group_structure: genM => // _ [defZM _ oZM] _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have:= n_gt2; rewrite leq_eqVlt eq_sym !xpair_eqE andbC.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case: eqP => [n3 _ _ | _ /= n_gt3 defOhmM].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have eqZU1: Z = 'Mho^1(U) by apply/eqP; rewrite eqEcard sZU1 oZ oU1 n3 /=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (setIidPl _) in defM; first by rewrite -defM oM n3 pfactorK in R_gt_3.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -eqZU1 subIset ?centS ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{defOhmM} [|defM2 _] := defOhmM 2; first by rewrite -subn1 ltn_subRL.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "do [set xpn3 := x ^+ _; set X2 := <[_]>] in defM2.",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "have oX2: #|X2| = (p ^ 2)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -orderE (orderXexp _ ox) -{1}(subnKC n_gt2) addSn addnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sZX2: Z \\subset X2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cycXp: cyclic <[x ^+ p]> := cycle_cyclic _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(cardSg_cyclic cycXp) /=; first by rewrite oZ oX2 dvdn_mull.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -defZM subsetI (subset_trans (Ohm_sub _ _)) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (subset_trans sZU1) // centsC defM subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /xpn3 -subnSK //expnS expgM cycleX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{defM2} [_ /= defM2 cYX2 tiX2Y] := dprodP defM2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{defN} [_ defN cME] := cprodP defN.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cEM2: E \\subset 'C('Ohm_2(M)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite centsC (subset_trans _ cME) ?centS ?Ohm_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [cEX2 cYE]: X2 \\subset 'C(E) /\\ E \\subset 'C(<[y]>).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/andP; rewrite centsC -subsetI -centM defM2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have pN: p.-group N := pgroupS (subsetIl _ _) pG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defN2: (E <*> X2) \\x <[y]> = 'Ohm_2(N).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite dprodE ?centY ?subsetI 1?centsC ?cYE //=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -cycle_subG in My; rewrite joingC cent_joinEl //= -/X2.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "rewrite -(setIidPr My) setIA -group_modl ?cycle_subG ?groupX //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulGSid // (subset_trans _ sZX2) // -defZE -tiER setIS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite cent_joinEr // -mulgA defM2 eqEsubset mulG_subG.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite OhmS ?andbT; last by rewrite -defN mulG_subr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have expE: exponent E %| p ^ 2 by rewrite exponent_special ?(pgroupS sEG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /= (OhmE 2 pN) sub_gen /=; last 1 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite subsetI -defN mulG_subl sub_LdivT expE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -cent_joinEl // -genM_join genS // -defN.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> _ /setIP[/imset2P[e z Ee Mz ->]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite inE expgMn; last by red; rewrite -(centsP cME).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (exponentP expE) // mul1g => zp2; rewrite mem_mulg //=.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite (OhmE 2 (pgroupS sMR pR)) mem_gen // !inE Mz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{defN2} defZN2: X2 \\x <[y]> = 'Z('Ohm_2(N)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -[X2](mulSGid sZX2) /= -/Z -defZE -(center_dprod defN2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "do 2!rewrite -{1}(center_idP (cycle_abelian _)) -/X2; congr (_ \\x _).",
            "VernacExtend",
            "5a9aa42a4384f0d8344ebf21093221a0f81e3afd"
        ],
        [
            "by case/cprodP: (center_cprod (cprodEY cEX2)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{defZN2} strZN2: \\big[dprod/1]_(z <- [:: xpn3; y]) <[z]> = 'Z('Ohm_2(N)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite unlock /= dprodg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -size_abelian_type ?center_abelian //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have pZN2: p.-group 'Z('Ohm_2(N)) by rewrite (pgroupS _ pN) // subIset ?Ohm_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(perm_eq_size (perm_eq_abelian_type pZN2 strZN2 _)) //= !inE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !(eq_sym 1) -!order_eq1 oy orderE oX2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (eqn_exp2l 2 0) // (eqn_exp2l 1 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ExtremalTheory.",
            "VernacEndSegment",
            "53a58e10c3fa9c77c87b98987fa0b65e9774fc8b"
        ]
    ],
    "proofs": [
        {
            "name": "aut_dvdn",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "rewrite order_Zp1 /aut_of; case: pickP => [s | _]; last by rewrite order1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/and4P=> _ p_gt1 p_s _; rewrite Zp_cast.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "act_dom",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "rewrite cycle_subG 2!inE cycle_id /= eltm_id /aut_of.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: pickP => [op /andP[] | _] //=; rewrite group1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtype_key",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "rewrite [gtype]unlock -(sdprod_card (sdprod_sdpair _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite !card_injm ?injm_sdpair1 ?injm_sdpair2 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulnC -!orderE !order_Zp1 !Zp_cast.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extremal_generators_facts",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "move=> p_pr [oG Gx ox] /setDP[Gy notXy].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have pG: p.-group G by rewrite /pgroup oG pnat_exp pnat_id.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have maxX: maximal <[x]> G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite p_index_maximal -?divgS ?cycle_subG // -orderE oG ox.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (n) oG => [|n' _]; last by rewrite -expnB ?subSnn ?leqnSn ?prime_gt0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/eqP; rewrite -trivg_card1; case/trivgPn.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "by exists y; rewrite // (group1_contra notXy).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nsXG := p_maximal_normal pG maxX; split=> //.",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "by apply: mulg_normal_maximal; rewrite ?cycle_subG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite cycle_subG (subsetP (normal_norm nsXG)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_p",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "by rewrite /m def_n pdiv_pfactor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_q",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "by rewrite /m /q def_n expnS mulKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_r",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "by rewrite /r /q def_n expnS mulKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltqm",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "by rewrite ltn_exp2l // def_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltrq",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "by rewrite ltn_exp2l // def_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r_gt0",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "by rewrite expn_gt0 ?p_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "q_gt1",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "exact: leq_ltn_trans r_gt0 ltrq.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_modular_group",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "by rewrite Extremal.card def_p ?def_q // -expnS def_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generators_modular_group",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "case/(isoGrpP _ Grp_modular_group); rewrite card_modular_group // -/m => oG.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "case/existsP=> -[x y] /= /eqP[defG xq yp xy].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite norm_joinEr ?norms_cycle ?xy ?mem_cycle // in defG.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [Gx Gy]: x \\in G /\\ y \\in G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/andP; rewrite -!cycle_subG -mulG_subG defG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have notXy: y \\notin <[x]>.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: contraL ltqm; rewrite -cycle_subG -oG -defG; move/mulGidPl->.",
                        "VernacExtend",
                        "0411bbc6b587ae6e29b303e9104f9d1499478ca8"
                    ]
                },
                {
                    "command": [
                        "by rewrite -leqNgt dvdn_leq ?(ltnW q_gt1) // order_dvdn xq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have oy: #[y] = p by apply: nt_prime_order (group1_contra notXy).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (x, y) => //=; split; rewrite ?inE ?notXy //.",
                        "VernacExtend",
                        "447989d4786b24d7d7187cb0f5165ac4e32c1375"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite -(eqn_pmul2r p_gt0) -expnSr -{1}oy (ltn_predK n_gt2) -/m.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -TI_cardMg ?defG ?oG // setIC prime_TIg ?cycle_subG // -orderE oy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def2",
            "line_nb": 464,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite /m -mul2n eqn_leq pdiv_min_dvd ?dvdn_mulr //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite prime_gt1 // pdiv_prime // (@leq_pmul2l 2 1) ltnW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_ext_dihedral",
            "line_nb": 475,
            "steps": [
                {
                    "command": [
                        "by rewrite Extremal.card // /m -mul2n -divn2 mulnA divnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_dihedral",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "by rewrite /('D_m)%type def_q card_ext_dihedral ?mul1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Grp_dihedral",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "by rewrite /('D_m)%type def_q; apply: Grp_ext_dihedral.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Grp'_dihedral",
            "line_nb": 499,
            "steps": [
                {
                    "command": [
                        "move=> gT G; rewrite Grp_dihedral; apply/existsP/existsP=> [] [[x y]] /=.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "case/eqP=> <- xq1 y2 xy; exists (x * y, y); rewrite !xpair_eqE /= eqEsubset.",
                        "VernacExtend",
                        "0be9ed8f11c5c6995d4751c84c8ab224a0de274c"
                    ]
                },
                {
                    "command": [
                        "rewrite !join_subG !joing_subr !cycle_subG -{3}(mulgK y x) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite 2?groupM ?groupV ?mem_gen ?inE ?cycle_id ?orbT //= -mulgA expgS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite {1}(conjgC x) xy -mulgA mulKg -(expgS y 1) y2 mulg1 xq1 !eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/eqP=> <- x2 y2 xyq; exists (x * y, y); rewrite !xpair_eqE /= eqEsubset.",
                        "VernacExtend",
                        "0be9ed8f11c5c6995d4751c84c8ab224a0de274c"
                    ]
                },
                {
                    "command": [
                        "rewrite !join_subG !joing_subr !cycle_subG -{3}(mulgK y x) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite 2?groupM ?groupV ?mem_gen ?inE ?cycle_id ?orbT //= xyq y2 !eqxx /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym eq_invg_mul !mulgA mulgK -mulgA -!(expgS _ 1) x2 y2 mulg1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Grp_2dihedral",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "move=> n_gt1; rewrite -(ltn_predK n_gt1) expnS mul2n /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: Grp_dihedral; rewrite (ltn_exp2l 0) // -(subnKC n_gt1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_2dihedral",
            "line_nb": 535,
            "steps": [
                {
                    "command": [
                        "move=> n_gt1; rewrite -(ltn_predK n_gt1) expnS mul2n /= card_dihedral //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite (ltn_exp2l 0) // -(subnKC n_gt1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_semidihedral",
            "line_nb": 539,
            "steps": [
                {
                    "command": [
                        "move=> n_gt3.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /('SD__)%type -(subnKC (ltnW (ltnW n_gt3))) pdiv_pfactor //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite // !expnS !mulKn -?expnS ?Extremal.card //= (ltn_exp2l 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Grp_semidihedral",
            "line_nb": 544,
            "steps": [
                {
                    "command": [
                        "move=> n_gt3.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /('SD__)%type -(subnKC (ltnW (ltnW n_gt3))) pdiv_pfactor //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite !expnS !mulKn // -!expnS /=; set q := (2 ^ _)%N.",
                        "VernacExtend",
                        "c1f58f36c5711f022b4a54717f37c2782f34a159"
                    ]
                },
                {
                    "command": [
                        "have q_gt1: q > 1 by rewrite (ltn_exp2l 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: Extremal.Grp => //; set B := <[_]>.",
                        "VernacExtend",
                        "ac591433247162d5294d7c948ab3b309c2d6e368"
                    ]
                },
                {
                    "command": [
                        "have oB: #|B| = q by rewrite -orderE order_Zp1 Zp_cast.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have pB: 2.-group B by rewrite /pgroup oB pnat_exp.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have ntB: B != 1 by rewrite -cardG_gt1 oB.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [] := cyclic_pgroup_Aut_structure pB (cycle_cyclic _) ntB.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite oB /= pfactorK //= -/B => m [[def_m _ _ _ _] _].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1 2}(subnKC n_gt3) => [[t [At ot _ [s [_ _ _ defA]]]]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case/dprodP: defA => _ defA cst _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have{cst defA} cAt: t \\in 'C(Aut B).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -defA centM inE -sub_cent1 -cent_cycle centsC cst /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cent_cycle cent1id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case=> s0 [As0 os0 _ def_s0t _]; exists (s0 * t).",
                        "VernacExtend",
                        "ebdd43fc8fdb83806545396bb94e0bd8a2865f26"
                    ]
                },
                {
                    "command": [
                        "rewrite -def_m ?groupM ?cycle_id // def_s0t !Zp_expg !mul1n valZpK Zp_nat.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite order_dvdn expgMn /commute 1?(centP cAt) // -{1}os0 -{1}ot.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !expg_order mul1g.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_quaternion",
            "line_nb": 668,
            "steps": [
                {
                    "command": [
                        "by case defQ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Grp_quaternion",
            "line_nb": 671,
            "steps": [
                {
                    "command": [
                        "by case defQ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_Mod8_D8",
            "line_nb": 675,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "q_gt0",
            "line_nb": 683,
            "steps": [
                {
                    "command": [
                        "by rewrite expn_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def2qr",
            "line_nb": 690,
            "steps": [
                {
                    "command": [
                        "by rewrite /q /m /r; move/subnKC=> <-; rewrite !ltn_exp2l ?expnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generators_2dihedral",
            "line_nb": 693,
            "steps": [
                {
                    "command": [
                        "move=> n_gt1; have [def2q _ ltqm _] := def2qr n_gt1.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "case/(isoGrpP _ (Grp_2dihedral n_gt1)); rewrite card_2dihedral // -/ m => oG.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "case/existsP=> -[x y] /=; rewrite -/q => /eqP[defG xq y2 xy].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "have{defG} defG: <[x]> * <[y]> = G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -norm_joinEr // norms_cycle xy groupV cycle_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have notXy: y \\notin <[x]>.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: contraL ltqm => Xy; rewrite -leqNgt -oG -defG mulGSid ?cycle_subG //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdn_leq // order_dvdn xq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have oy: #[y] = 2 by apply: nt_prime_order (group1_contra notXy).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have ox: #[x] = q.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: double_inj; rewrite -muln2 -oy -mul2n def2q -oG -defG TI_cardMg //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite setIC prime_TIg ?cycle_subG // -orderE oy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (x, y) => //=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite oG ox !inE notXy -!cycle_subG /= -defG mulG_subl mulG_subr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generators_semidihedral",
            "line_nb": 709,
            "steps": [
                {
                    "command": [
                        "move=> n_gt3; have [def2q _ ltqm _] := def2qr (ltnW (ltnW n_gt3)).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "case/(isoGrpP _ (Grp_semidihedral n_gt3)).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite card_semidihedral // -/m => oG.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case/existsP=> -[x y] /=; rewrite -/q -/r => /eqP[defG xq y2 xy].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "have{defG} defG: <[x]> * <[y]> = G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -norm_joinEr // norms_cycle xy mem_cycle.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have notXy: y \\notin <[x]>.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: contraL ltqm => Xy; rewrite -leqNgt -oG -defG mulGSid ?cycle_subG //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdn_leq // order_dvdn xq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have oy: #[y] = 2 by apply: nt_prime_order (group1_contra notXy).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have ox: #[x] = q.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: double_inj; rewrite -muln2 -oy -mul2n def2q -oG -defG TI_cardMg //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite setIC prime_TIg ?cycle_subG // -orderE oy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (x, y) => //=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite oG ox !inE notXy -!cycle_subG /= -defG mulG_subl mulG_subr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generators_quaternion",
            "line_nb": 726,
            "steps": [
                {
                    "command": [
                        "move=> n_gt2; have [def2q def2r ltqm _] := def2qr (ltnW n_gt2).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "case/(isoGrpP _ (Grp_quaternion n_gt2)); rewrite card_quaternion // -/m => oG.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "case/existsP=> -[x y] /=; rewrite -/q -/r => /eqP[defG xq y2 xy].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "have{defG} defG: <[x]> * <[y]> = G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -norm_joinEr // norms_cycle xy groupV cycle_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have notXy: y \\notin <[x]>.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: contraL ltqm => Xy; rewrite -leqNgt -oG -defG mulGSid ?cycle_subG //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdn_leq // order_dvdn xq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have ox: #[x] = q.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_leq dvdn_leq ?order_dvdn ?xq //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite -(leq_pmul2r (order_gt0 y)) mul_cardG defG oG -def2q mulnAC mulnC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite leq_pmul2r // dvdn_leq ?muln_gt0 ?cardG_gt0 // order_dvdn expgM.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -order_dvdn order_dvdG //= inE {1}y2 !mem_cycle.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have oy2: #[y ^+ 2] = 2 by rewrite y2 orderXdiv ox -def2r ?dvdn_mull ?mulnK.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (x, y) => /=; last by rewrite (orderXprime oy2).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite oG !inE notXy -!cycle_subG /= -defG mulG_subl mulG_subr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel_index_extremal_groups",
            "line_nb": 1287,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bound_extremal_groups",
            "line_nb": 1298,
            "steps": [
                {
                    "command": [
                        "by case: c.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dihedral_classP",
            "line_nb": 1305,
            "steps": [
                {
                    "command": [
                        "rewrite /extremal_class; split=> [ | [n n_gt1 isoG]].",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "by move: (logn _ _) => n; do 4?case: ifP => //; case/andP; exists n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (card_isog isoG) card_2dihedral // -(ltn_predK n_gt1) pdiv_pfactor //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite pfactorK // (ltn_predK n_gt1) n_gt1 isoG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quaternion_classP",
            "line_nb": 1311,
            "steps": [
                {
                    "command": [
                        "rewrite /extremal_class; split=> [ | [n n_gt2 isoG]].",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "by move: (logn _ _) => n; do 4?case: ifP => //; case/andP; exists n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (card_isog isoG) card_quaternion // -(ltn_predK n_gt2) pdiv_pfactor //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite pfactorK // (ltn_predK n_gt2) n_gt2 isoG.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: andP => // [[n_gt1 isoGD]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have [[x y] genG [oy _ _]]:= generators_quaternion n_gt2 isoG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [_ _ _ X'y] := genG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case/dihedral2_structure: genG oy => // [[_ ->]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semidihedral_classP",
            "line_nb": 1321,
            "steps": [
                {
                    "command": [
                        "rewrite /extremal_class; split=> [ | [n n_gt3 isoG]].",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "by move: (logn _ _) => n; do 4?case: ifP => //; case/andP; exists n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (card_isog isoG) card_semidihedral //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(ltn_predK n_gt3) pdiv_pfactor // pfactorK // (ltn_predK n_gt3) n_gt3.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [[x y] genG [oy _]]:= generators_semidihedral n_gt3 isoG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [_ Gx _ X'y]:= genG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: andP => [[n_gt1 isoGD]|_].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have [[_ oxy _ _] _ _ _]:= semidihedral_structure n_gt3 genG isoG oy.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (dihedral2_structure n_gt1 genG isoGD) oxy => [[_ ->]] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE !groupMl ?cycle_id in X'y *.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: andP => // [[n_gt2 isoGQ]|]; last by rewrite isoG.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: (quaternion_structure n_gt2 genG isoGQ) oy => [[_ ->]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_not_extremal2",
            "line_nb": 1335,
            "steps": [
                {
                    "command": [
                        "rewrite /extremal2 /extremal_class; case: logn => // n'.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "case: andP => [[n_gt1 isoG] | _].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (card_isog isoG) card_2dihedral ?odd_exp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: andP => [[n_gt2 isoG] | _].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (card_isog isoG) card_quaternion ?odd_exp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: andP => [[n_gt3 isoG] | _].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (card_isog isoG) card_semidihedral ?odd_exp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: ifP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modular_group_classP",
            "line_nb": 1345,
            "steps": [
                {
                    "command": [
                        "rewrite /extremal_class; split=> [ | [p p_pr [n n_gt23 isoG]]].",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "move: (pdiv _) => p; set n := logn p _; do 4?case: ifP => //.",
                        "VernacExtend",
                        "6fa36c9101965440e71a195306edb5a239531bb1"
                    ]
                },
                {
                    "command": [
                        "case/andP=> n_gt2 isoG _ _; rewrite ltnW //= => not_isoG _.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "exists p; first by move: n_gt2; rewrite /n lognE; case (prime p).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists n => //; case: eqP => // p2; rewrite ltn_neqAle; case: eqP => // n3.",
                        "VernacExtend",
                        "1a7e1eacf939d46b360a6c9eadeafa62884cfb7e"
                    ]
                },
                {
                    "command": [
                        "by case/idP: not_isoG; rewrite p2 -n3 in isoG *.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have n_gt2 := leq_trans (leq_addl _ _) n_gt23; have n_gt1 := ltnW n_gt2.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "have n_gt0 := ltnW n_gt1; have def_n := prednK n_gt0.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "have [[x y] genG mod_xy] := generators_modular_group p_pr n_gt2 isoG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/modular_group_structure: (genG) => // _ _ [_ _ nil2G] _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have [oG _ _ _] := genG; have [oy _] := mod_xy.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "rewrite oG -def_n pdiv_pfactor // def_n pfactorK // n_gt1 n_gt2 {}isoG /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (ltngtP p 2) => [|p_gt2|p2]; first by rewrite ltnNge prime_gt1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite !(isog_sym G) !isogEcard card_2dihedral ?card_quaternion //= oG.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite leq_exp2r // leqNgt p_gt2 !andbF; case: and3P=> // [[n_gt3 _]].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite card_semidihedral // leq_exp2r // leqNgt p_gt2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite p2 in genG oy n_gt23; rewrite n_gt23.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "have: nil_class G <> n.-1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite neq_ltn -ltnS nil2G def_n n_gt23.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: ifP => [isoG | _]; first by case/dihedral2_structure: genG => // _ [].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ifP => [isoG | _]; first by case/quaternion_structure: genG => // _ [].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => // isoG; case/semidihedral_structure: genG => // _ [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extremal2_structure",
            "line_nb": 1370,
            "steps": [
                {
                    "command": [
                        "move=> cG m q r X yG xyG My Mxy genG; have [oG _ _ _] := genG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have logG: logn (pdiv #|G|) #|G| = n by rewrite oG pfactorKpdiv.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /extremal2 -/cG; do [rewrite {1}/extremal_class /= {}logG] in cG *.",
                        "VernacExtend",
                        "6a72213b8ff230d3c557d3c0d5b7e6e6d5c919ed"
                    ]
                },
                {
                    "command": [
                        "case: ifP => [isoG | _] in cG * => [_ _ /=|].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case/andP: isoG => n_gt1 isoG.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have:= dihedral2_structure n_gt1 genG isoG; rewrite -/X -/q -/r -/yG -/xyG.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "case=> [[defG oX' invXX'] nilG [defOhm defMho] maxG defZ].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite eqn_leq n_gt1 andbT add0n in defZ *; split=> //.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "split=> //; first by case: leqP defZ => // _ [].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite eqEsubset Ohm_sub -{1}defOhm Ohm_leq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: leqP defZ => // n_gt2 [_ _ isoMy isoMxy defX].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have n1_gt1: n.-1 > 1 by rewrite -(subnKC n_gt2).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by split=> //; apply/dihedral_classP; exists n.-1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: ifP => [isoG | _] in cG * => [_ _ /=|].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case/andP: isoG => n_gt2 isoG; rewrite n_gt2 add1n.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "have:= quaternion_structure n_gt2 genG isoG; rewrite -/X -/q -/r -/yG -/xyG.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "case=> [[defG oX' invXX'] nilG [defZ oZ def2 [-> ->] defMho]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case=> [[-> ->] maxG] isoM; split=> //.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "case: leqP isoM => // n_gt3 [//|isoMy isoMxy defX].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have n1_gt2: n.-1 > 2 by rewrite -(subnKC n_gt3).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by split=> //; apply/quaternion_classP; exists n.-1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "do [case: ifP => [isoG | _]; last by case: ifP] in cG * => /= _; move/eqnP=> oy.",
                        "VernacExtend",
                        "d382ad451ae594d67a86f477726931c094e27e38"
                    ]
                },
                {
                    "command": [
                        "case/andP: isoG => n_gt3 isoG; rewrite (leqNgt n) (ltnW n_gt3) /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "have n1_gt2: n.-1 > 2 by rewrite -(subnKC n_gt3).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have:= semidihedral_structure n_gt3 genG isoG oy.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -/X -/q -/r -/yG -/xyG -/My -/Mxy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case=> [[defG oxy invXX'] nilG [defZ oZ [-> ->] defMho] [[defX' tiX'] maxG]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case=> isoMy isoMxy defX; do 2!split=> //.",
                        "VernacExtend",
                        "09d2a9a8185b9355b5ea9923b8ee73e4bb71f9bf"
                    ]
                },
                {
                    "command": [
                        "by apply/dihedral_classP; exists n.-1; first apply: ltnW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/quaternion_classP; exists n.-1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclic_SCN",
            "line_nb": 1563,
            "steps": [
                {
                    "command": [
                        "move=> pG /SCN_P[nsUG scUG] not_cGG cycU; have [sUG nUG] := andP nsUG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have [cUU pU] := (cyclic_abelian cycU, pgroupS sUG pG).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have ltUG: ~~ (G \\subset U).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: contra not_cGG => sGU; apply: abelianS cUU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have ntU: U :!=: 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: contraNneq ltUG => U1; rewrite -scUG subsetIidl U1 cents1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [p_pr _ [n oU]] := pgroup_pdiv pU ntU.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have p_gt1 := prime_gt1 p_pr; have p_gt0 := ltnW p_gt1.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "have [u defU] := cyclicP cycU; have Uu: u \\in U by rewrite defU cycle_id.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "have Gu := subsetP sUG u Uu; have p_u := mem_p_elt pG Gu.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "have defU1: 'Mho^1(U) = <[u ^+ p]> by rewrite defU (Mho_p_cycle _ p_u).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have modM1 (M : {group gT}): [/\\ U \\subset M, #|M : U| = p & extremal_class M = ModularGroup] -> M :=: 'C_M('Mho^1(U)) /\\ 'Ohm_1(M)%G \\in 'E_p^2(M).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case=> sUM iUM /modular_group_classP[q q_pr {n oU}[n n_gt23 isoM]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have n_gt2: n > 2 by apply: leq_trans (leq_addl _ _) n_gt23.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have def_n: n = (n - 3).+3 by rewrite -{1}(subnKC n_gt2).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have oM: #|M| = (q ^ n)%N by rewrite (card_isog isoM) card_modular_group.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have pM: q.-group M by rewrite /pgroup oM pnat_exp pnat_id.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have def_q: q = p; last rewrite {q q_pr}def_q in oM pM isoM n_gt23.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite eq_sym [p == q](pgroupP pM) // -iUM dvdn_indexg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [[x y] genM modM] := generators_modular_group p_pr n_gt2 isoM.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/modular_group_structure: genM => // _ [defZ _ oZ] _ defMho.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have ->: 'Mho^1(U) = 'Z(M).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqEcard oZ defZ -(defMho 1%N) ?MhoS //= defU1 -orderE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "suff ou: #[u] = (p * p ^ n.-2)%N by rewrite orderXdiv ou ?dvdn_mulr ?mulKn.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite orderE -defU -(divg_indexS sUM) iUM oM def_n mulKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: eqP => [[p2 n3] | _ defOhm]; first by rewrite p2 n3 in n_gt23.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have{defOhm} [|defM1 oM1] := defOhm 1%N; first by rewrite def_n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "split; rewrite ?(setIidPl _) //; first by rewrite centsC subsetIr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite inE oM1 pfactorK // andbT inE Ohm_sub abelem_Ohm1 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: (card_p2group_abelian p_pr oM1).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "have ou: #[u] = (p ^ n.+1)%N by rewrite defU in oU.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose Gs := G / U; have pGs: p.-group Gs by rewrite quotient_pgroup.",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "have ntGs: Gs != 1 by rewrite -subG1 quotient_sub1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [_ _ [[|k] oGs]] := pgroup_pdiv pGs ntGs.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have iUG: #|G : U| = p by rewrite -card_quotient ?oGs.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (predU1P (maximal_cycle_extremal _ _ _ _ iUG)) => // [modG | ext2G].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by right; exists G; case: (modM1 G) => // <- ->; rewrite Ohm_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by left; case: eqP ext2G => // <-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose M := 'C_G('Mho^1(U)); right; exists [group of M].",
                        "VernacExtend",
                        "d169b68f43fa1902909e9f89f298ef684cc61e8f"
                    ]
                },
                {
                    "command": [
                        "have sMG: M \\subset G by apply: subsetIl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [pM nUM] := (pgroupS sMG pG, subset_trans sMG nUG).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sUM: U \\subset M by rewrite subsetI sUG sub_abelian_cent ?Mho_sub.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose A := Aut U; have cAA: abelian A by rewrite Aut_cyclic_abelian.",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "have sylAp: p.-Sylow(A) 'O_p(A) by rewrite nilpotent_pcore_Hall ?abelian_nil.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [f [injf sfGsA fG]]: exists f : {morphism Gs >-> {perm gT}}, [/\\ 'injm f, f @* Gs \\subset A & {in G, forall y, f (coset U y) u = u ^ y}].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "have [] := first_isom_loc [morphism of conj_aut U] nUG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite ker_conj_aut scUG /= -/Gs => f injf im_f.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "exists f; rewrite im_f ?Aut_conj_aut //.",
                        "VernacExtend",
                        "d5a2d7a62174a8fb80cc09448d0a7212f5a39b0d"
                    ]
                },
                {
                    "command": [
                        "split=> // y Gy; have nUy := subsetP nUG y Gy.",
                        "VernacExtend",
                        "d2991b7607b6316c9d43d28c85f87ca601299ca6"
                    ]
                },
                {
                    "command": [
                        "suffices ->: f (coset U y) = conj_aut U y by rewrite norm_conj_autE.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by apply: set1_inj; rewrite -!morphim_set1 ?mem_quotient // im_f ?sub1set.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have cGsGs: abelian Gs by rewrite -(injm_abelian injf) // (abelianS sfGsA).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have p_fGs: p.-group (f @* Gs) by rewrite morphim_pgroup.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sfGsAp: f @* Gs \\subset 'O_p(A) by rewrite (sub_Hall_pcore sylAp).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [a [fGa oa au n_gt01 cycGs]]: exists a, [/\\ a \\in f @* Gs, #[a] = p, a u = u ^+ (p ^ n).+1, (p == 2) + 1 <= n & cyclic Gs \\/ p = 2 /\\ (exists2 c, c \\in f @* Gs & c u = u^-1)].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "have [m [[def_m _ _ _ _] _]] := cyclic_pgroup_Aut_structure pU cycU ntU.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have ->: logn p #|U| = n.+1 by rewrite oU pfactorK.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /= -/A; case: posnP => [_ defA | n_gt0 [c [Ac oc m_c defA]]].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "have:= cardSg sfGsAp; rewrite (card_Hall sylAp) /= -/A defA card_injm //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by rewrite oGs (part_p'nat (pcore_pgroup _ _)) pfactor_dvdn // logn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [p2 | odd_p] := even_prime p_pr; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: eqP => [-> // | _] in odd_p *; rewrite odd_p in defA.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "have [[cycA _] _ [a [Aa oa m_a defA1]]] := defA.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists a; rewrite -def_m // oa m_a expg_znat //.",
                        "VernacExtend",
                        "26768a9862fadf618b4c4ff746d0d41878c2fb56"
                    ]
                },
                {
                    "command": [
                        "split=> //; last by left; rewrite -(injm_cyclic injf) ?(cyclicS sfGsA).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have: f @* Gs != 1 by rewrite morphim_injm_eq1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -cycle_subG; apply: contraR => not_sfGs_a.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(setIidPl sfGsAp) TI_Ohm1 // defA1 setIC prime_TIg -?orderE ?oa.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "do [rewrite {1}p2 /= eqn_leq n_gt0; case: leqP => /= [_ | n_gt1]] in defA.",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "have:= cardSg sfGsAp; rewrite (card_Hall sylAp) /= -/A defA -orderE oc p2.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by rewrite card_injm // oGs p2 pfactor_dvdn // p_part.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{defA} [s [As os _ defA [a [Aa oa m_a _ defA1]]]] := defA; exists a.",
                        "VernacExtend",
                        "2f26a1cec213dc704f1dd4ca7d5feea731860616"
                    ]
                },
                {
                    "command": [
                        "have fGs_a: a \\in f @* Gs.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suffices: f @* Gs :&: <[s]> != 1.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "apply: contraR => not_fGs_a; rewrite TI_Ohm1 // defA1 setIC.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite prime_TIg -?orderE ?oa // cycle_subG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: (f @* Gs) * <[s]> \\subset A by rewrite mulG_subG cycle_subG sfGsA.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move/subset_leq_card; apply: contraL; move/eqP; move/TI_cardMg->.",
                        "VernacExtend",
                        "d346b57a42d0bc171e67682b61471a4d87e75c34"
                    ]
                },
                {
                    "command": [
                        "rewrite -(dprod_card defA) -ltnNge mulnC -!orderE ltn_pmul2r // oc.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite card_injm // oGs p2 (ltn_exp2l 1%N).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -def_m // oa m_a expg_znat // p2; split=> //.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "rewrite abelian_rank1_cyclic // (rank_pgroup pGs) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(injm_p_rank injf) // p_rank_abelian 1?morphim_abelian //= p2 -/Gs.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: leqP => [|fGs1_gt1]; [by left | right].",
                        "VernacExtend",
                        "28d7a3d41323a7d50926693be2bd9af7708dcf6f"
                    ]
                },
                {
                    "command": [
                        "split=> //; exists c; last by rewrite -def_m // m_c expg_zneg.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have{defA1} defA1: <[a]> \\x <[c]> = 'Ohm_1(Aut U).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(Ohm_dprod 1 defA) defA1 (@Ohm_p_cycle 1 _ 2) /p_elt oc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have def_fGs1: 'Ohm_1(f @* Gs) = 'Ohm_1(A).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqEcard OhmS // -(dprod_card defA1) -!orderE oa oc.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdn_leq ?(@pfactor_dvdn 2 2) ?cardG_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (subsetP (Ohm_sub 1 _)) // def_fGs1 -cycle_subG.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case/dprodP: defA1 => _ <- _ _; rewrite mulG_subr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have n_gt0: n > 0 := leq_trans (leq_addl _ _) n_gt01.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [ys Gys _ def_a] := morphimP fGa.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have oys: #[ys] = p by rewrite -(order_injm injf) // -def_a oa.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have defMs: M / U = <[ys]>.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eq_sym eqEcard -orderE oys cycle_subG; apply/andP; split.",
                        "VernacExtend",
                        "c6080ad6de433b4aac1c6523f45011ac63415378"
                    ]
                },
                {
                    "command": [
                        "have [y nUy Gy /= def_ys] := morphimP Gys.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite def_ys mem_quotient //= inE Gy defU1 cent_cycle cent1C.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (sameP cent1P commgP) commgEl conjXg -fG //= -def_ys -def_a au.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -expgM mulSn expgD mulKg -expnSr -ou expg_order.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite card_quotient // -(setIidPr sUM) -scUG setIA (setIidPl sMG).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite defU cent_cycle index_cent1 -(card_imset _ (mulgI u^-1)) -imset_comp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have <-: #|'Ohm_1(U)| = p.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite defU (Ohm_p_cycle 1 p_u) -orderE (orderXexp _ ou) ou pfactorK //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite subKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (OhmE 1 pU) subset_leq_card ?sub_gen //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> _ /imsetP[z /setIP[/(subsetP nUG) nUz cU1z] ->].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have Uv' := groupVr Uu; have Uuz: u ^ z \\in U by rewrite memJ_norm.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE groupM // expgMn /commute 1?(centsP cUU u^-1) //= expgVn -conjXg.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (sameP commgP cent1P) cent1C -cent_cycle -defU1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have iUM: #|M : U| = p by rewrite -card_quotient ?defMs.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have not_cMM: ~~ abelian M.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: contraL p_pr => cMM; rewrite -iUM -indexgI /= -/M.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (setIidPl _) ?indexgg // -scUG subsetI sMG sub_abelian_cent.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have modM: extremal_class M = ModularGroup.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sU1Z: 'Mho^1(U) \\subset 'Z(M).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite subsetI gFsub_trans // centsC subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /maximal_cycle_extremal/predU1P[] //= := iUM; rewrite -/M.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "case/andP=> /eqP-p2 ext2M; rewrite p2 add1n in n_gt01.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "suffices{sU1Z}: #|'Z(M)| = 2.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "move/eqP; rewrite eqn_leq leqNgt (leq_trans _ (subset_leq_card sU1Z)) //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite defU1 -orderE (orderXexp 1 ou) subn1 p2 (ltn_exp2l 1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: ext2M; rewrite /extremal2 !inE orbC -orbA; case/or3P; move/eqP.",
                        "VernacExtend",
                        "9a891fa8d8767e5a830b5818345ba27c4538938e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case/semidihedral_classP=> m m_gt3 isoM.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have [[x z] genM [oz _]] := generators_semidihedral m_gt3 isoM.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case/semidihedral_structure: genM => // _ _ [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case/quaternion_classP=> m m_gt2 isoM.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have [[x z] genM _] := generators_quaternion m_gt2 isoM.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case/quaternion_structure: genM => // _ _ [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/dihedral_classP=> m m_gt1 isoM.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have [[x z] genM _] := generators_2dihedral m_gt1 isoM.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/dihedral2_structure: genM not_cMM => // _ _ _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: (m == 2) => [|[]//]; move/abelem_abelian->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=> //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have [//|_] := modM1 [group of M]; rewrite !inE -andbA /=.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by case/andP=> /subset_trans->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{cycGs} [cycGs | [p2 [c fGs_c u_c]]] := cycGs.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suffices ->: 'Ohm_1(M) = 'Ohm_1(G) by apply: Ohm_char.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "suffices sG1M: 'Ohm_1(G) \\subset M.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite eqEsubset -{2}(Ohm_id 1 G) !OhmS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(quotientSGK _ sUM) ?(subset_trans (Ohm_sub _ G)) //= defMs.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suffices ->: <[ys]> = 'Ohm_1(Gs) by rewrite morphim_Ohm.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqEcard -orderE cycle_subG /= {1}(OhmE 1 pGs) /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_gen ?inE ?Gys -?order_dvdn oys //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(part_pnat_id (pgroupS (Ohm_sub _ _) pGs)) p_part (leq_exp2l _ 1) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -p_rank_abelian -?rank_pgroup -?abelian_rank1_cyclic.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suffices charU1: 'Mho^1(U) \\char G^`(1).",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite gFchar_trans // subcent_char ?(char_trans charU1) ?gFchar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suffices sUiG': 'Mho^1(U) \\subset G^`(1).",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "have /cyclicP[zs cycG']: cyclic G^`(1) by rewrite (cyclicS _ cycU) ?der1_min.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite cycG' in sUiG' *; apply: cycle_subgroup_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite defU1 cycle_subG p2 -groupV invMg -{2}u_c.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by have [_ _ /morphimP[z _ Gz ->] ->] := morphimP fGs_c; rewrite fG ?mem_commg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normal_rank1_structure",
            "line_nb": 1724,
            "steps": [
                {
                    "command": [
                        "move=> pG dn_G_1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [cGG | not_cGG] := boolP (abelian G); first by left; rewrite dn_G_1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [X maxX]: {X | [max X | X <| G & abelian X]}.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: ex_maxgroup; exists 1%G; rewrite normal1 abelian1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have cycX: cyclic X by rewrite dn_G_1; case/andP: (maxgroupp maxX).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have scX: X \\in 'SCN(G) := max_SCN pG maxX.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [[p2 _ cG] | [M [_ _ _]]] := cyclic_SCN pG scX not_cGG cycX; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!inE -andbA => /and3P[sEG abelE dimE_2] charE.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have:= dn_G_1 _ (char_normal charE) (abelem_abelian abelE).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (abelem_cyclic abelE) (eqP dimE_2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [n oG] := p_natP pG; right; rewrite p2 cG /= in oG *.",
                        "VernacExtend",
                        "98e63033bc0173f0f4661392c19dd764fa261f71"
                    ]
                },
                {
                    "command": [
                        "rewrite oG (@leq_exp2l 2 4) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /extremal2 /extremal_class oG pfactorKpdiv // in cG.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: andP cG => [[n_gt1 isoG] _ | _]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite leq_eqVlt; case: (3 < n); case: eqP => //= <-; do 2?case: ifP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [[x y] genG _] := generators_2dihedral n_gt1 isoG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [_ _ _ [_ _ maxG]] := dihedral2_structure n_gt1 genG isoG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!ltn_neqAle n_gt1 !(eq_sym _ n).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: eqP => [_ abelG| _]; first by rewrite (abelem_abelian abelG) in not_cGG.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: eqP => // -> [_ _ isoY _ _]; set Y := <<_>> in isoY.",
                        "VernacExtend",
                        "5ced22bf51d40cd3bfc1a1ee7adc8994d4475320"
                    ]
                },
                {
                    "command": [
                        "have nxYG: Y <| G by rewrite (p_maximal_normal pG) // maxG !inE eqxx orbT.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [// | [u v] genY _] := generators_2dihedral _ isoY.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/dihedral2_structure: (genY) => //= _ _ _ _ abelY.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have:= dn_G_1 _ nxYG (abelem_abelian abelY).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (abelem_cyclic abelY); case: genY => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_pgroup_rank1_cyclic",
            "line_nb": 1751,
            "steps": [
                {
                    "command": [
                        "move=> pG oddG; rewrite -rank_pgroup //; apply/idP/idP=> [cycG | dimG1].",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "by rewrite -abelian_rank1_cyclic ?cyclic_abelian.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [X nsXG cXX|//|] := normal_rank1_structure pG; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negPf (odd_not_extremal2 oddG)) andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite abelian_rank1_cyclic // (leq_trans (rankS (normal_sub nsXG))).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}