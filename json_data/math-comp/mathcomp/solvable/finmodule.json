{
    "filename": "mathcomp/solvable/finmodule.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq path div choice.",
            "VernacRequire",
            "28f7cc4746e8608411d0ebf22fadc6cf30a98194"
        ],
        [
            "From mathcomp Require Import fintype bigop ssralg finset fingroup morphism perm.",
            "VernacRequire",
            "95c0f36fcf501fe5ba67f0d402178cb606007122"
        ],
        [
            "From mathcomp Require Import finalg action gproduct commutator cyclic.",
            "VernacRequire",
            "5ae5aae762d80fb9b286bfdec4ec3a1d2ddab3b1"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope GRing.Theory FinRing.Theory.",
            "VernacImport",
            "b564e8b643ac1677c7a854dfcd70c16dcc198df6"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Module FiniteModule.",
            "VernacDefineModule",
            "deaa2a3345eb83881680b8e7c648ca6e40d5b254"
        ],
        [
            "Reserved Notation \"u ^@ x\" (at level 31, left associativity).",
            "VernacSyntaxExtension",
            "b3cbddec790a09fb0cff4c7c177bb8017caec008"
        ],
        [
            "Inductive fmod_of (gT : finGroupType) (A : {group gT}) (abelA : abelian A) := Fmod x & x \\in A.",
            "VernacInductive",
            "45ef9a7f5041db2c407af21a09e679d367d9d674"
        ],
        [
            "Bind Scope ring_scope with fmod_of.",
            "VernacBindScope",
            "44cfab1b7f45039a12ff882b988f69c8aa8d4671"
        ],
        [
            "Section OneFinMod.",
            "VernacBeginSection",
            "c1c6e6a8a03f1b1648555229060e7c6bd155a214"
        ],
        [
            "Let f2sub (gT : finGroupType) (A : {group gT}) (abA : abelian A) := fun u : fmod_of abA => let : Fmod x Ax := u in Subg Ax : FinGroup.arg_sort _.",
            "VernacDefinition",
            "952509eb5b36f20b6bacd9b756062ed947a42f7c"
        ],
        [
            "Local Coercion f2sub : fmod_of >-> FinGroup.arg_sort.",
            "VernacCoercion",
            "1f72f98dff76b277699f42591d7549797d06d227"
        ],
        [
            "Variables (gT : finGroupType) (A : {group gT}) (abelA : abelian A).",
            "VernacAssumption",
            "c57641f69d52cf87ff01624e4b50b951564c8783"
        ],
        [
            "Local Notation fmodA := (fmod_of abelA).",
            "VernacSyntacticDefinition",
            "27fcb2c6eee079d3b0b7eb74f761ca6a17985516"
        ],
        [
            "Implicit Types (x y z : gT) (u v w : fmodA).",
            "VernacReserve",
            "4198bd00a9bb52a09e9f1bbd3bb2174c8db70fff"
        ],
        [
            "Let sub2f (s : [subg A]) := Fmod abelA (valP s).",
            "VernacDefinition",
            "b4dca58302f46c8fe9897bfefd2cb558da75bc63"
        ],
        [
            "Definition fmval u := val (f2sub u).",
            "VernacDefinition",
            "29e14d5acc78ce10aaa25a5f1fc7b300f862fcd9"
        ],
        [
            "Canonical fmod_subType := [subType for fmval].",
            "VernacDefinition",
            "7971b1ba965c0f536d74bc3239813e2161265a68"
        ],
        [
            "Local Notation valA := (@val _ _ fmod_subType) (only parsing).",
            "VernacSyntacticDefinition",
            "efaebc0ea8e08284a0a3addf43ec3ab287feba14"
        ],
        [
            "Definition fmod_eqMixin := Eval hnf in [eqMixin of fmodA by <:].",
            "VernacDefinition",
            "441bccc770487f42721a3361450eda822a638b46"
        ],
        [
            "Canonical fmod_eqType := Eval hnf in EqType fmodA fmod_eqMixin.",
            "VernacDefinition",
            "df4bcea04015acbd03970a10db3a03537837a80c"
        ],
        [
            "Definition fmod_choiceMixin := [choiceMixin of fmodA by <:].",
            "VernacDefinition",
            "518bc306f0d44ccbede1a3a480da61a2b36f58fd"
        ],
        [
            "Canonical fmod_choiceType := Eval hnf in ChoiceType fmodA fmod_choiceMixin.",
            "VernacDefinition",
            "ff3eb62da7e94954039a029e6e4f36bc764c6b4a"
        ],
        [
            "Definition fmod_countMixin := [countMixin of fmodA by <:].",
            "VernacDefinition",
            "9b79551d5b5166b03ac141756e5d452e3efd218f"
        ],
        [
            "Canonical fmod_countType := Eval hnf in CountType fmodA fmod_countMixin.",
            "VernacDefinition",
            "6602d90643f7db00d87e996a88d3776b87e18044"
        ],
        [
            "Canonical fmod_subCountType := Eval hnf in [subCountType of fmodA].",
            "VernacDefinition",
            "6e30741961999821069df8d3142353ba45692d12"
        ],
        [
            "Definition fmod_finMixin := [finMixin of fmodA by <:].",
            "VernacDefinition",
            "104140f3419b12bf17cb47bbac2e470c8f51be67"
        ],
        [
            "Canonical fmod_finType := Eval hnf in FinType fmodA fmod_finMixin.",
            "VernacDefinition",
            "4c7d93181761ea779a0d8fef515c45c3654feca5"
        ],
        [
            "Canonical fmod_subFinType := Eval hnf in [subFinType of fmodA].",
            "VernacDefinition",
            "2e74a8e9c06e06495971dc6e83b14f65784d1c6d"
        ],
        [
            "Definition fmod x := sub2f (subg A x).",
            "VernacDefinition",
            "dea04b2ab37947be64f56040b196ee6f62fc63b7"
        ],
        [
            "Definition actr u x := if x \\in 'N(A) then fmod (fmval u ^ x) else u.",
            "VernacDefinition",
            "33384697d2a6721c3bc1d30e8e323511a2447ff1"
        ],
        [
            "Definition fmod_opp u := sub2f u^-1.",
            "VernacDefinition",
            "2609015e1552b93008ddd511a35747e885a697b5"
        ],
        [
            "Definition fmod_add u v := sub2f (u * v).",
            "VernacDefinition",
            "7e43fcec72b93e3aec644c55d4388125ed6990e8"
        ],
        [
            "Fact fmod_add0r : left_id (sub2f 1) fmod_add.",
            "VernacStartTheoremProof",
            "33ea9d99c1694ace7a4be9ecb05208cff27c8aed"
        ],
        [
            "by move=> u; apply: val_inj; apply: mul1g.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact fmod_addrA : associative fmod_add.",
            "VernacStartTheoremProof",
            "9165f120ff4c29c2e8a38fcee97807d951f9b2a7"
        ],
        [
            "by move=> u v w; apply: val_inj; apply: mulgA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact fmod_addNr : left_inverse (sub2f 1) fmod_opp fmod_add.",
            "VernacStartTheoremProof",
            "6be55073c0457d65d3605c8c3d209255c2954842"
        ],
        [
            "by move=> u; apply: val_inj; apply: mulVg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact fmod_addrC : commutative fmod_add.",
            "VernacStartTheoremProof",
            "b71b30fcee2f196d717a5b34032932bb0e9b8926"
        ],
        [
            "by case=> x Ax [y Ay]; apply: val_inj; apply: (centsP abelA).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fmod_zmodMixin := ZmodMixin fmod_addrA fmod_addrC fmod_add0r fmod_addNr.",
            "VernacDefinition",
            "41e6dcd9fdac306ac684799e0245bb12c87d1c3f"
        ],
        [
            "Canonical fmod_zmodType := Eval hnf in ZmodType fmodA fmod_zmodMixin.",
            "VernacDefinition",
            "7b875d8db9af504b88b77fa0b0c9ebd34d524e96"
        ],
        [
            "Canonical fmod_finZmodType := Eval hnf in [finZmodType of fmodA].",
            "VernacDefinition",
            "7d1b0bc76fc6097f5c455ab0ca798420471422b4"
        ],
        [
            "Canonical fmod_baseFinGroupType := Eval hnf in [baseFinGroupType of fmodA for +%R].",
            "VernacDefinition",
            "94e7c732fa6a66af6d2b641d4ad5c97cf4014285"
        ],
        [
            "Canonical fmod_finGroupType := Eval hnf in [finGroupType of fmodA for +%R].",
            "VernacDefinition",
            "a1a1d981370262b457ac64c15e0b7b8645b5aa18"
        ],
        [
            "Lemma fmodP u : val u \\in A.",
            "VernacStartTheoremProof",
            "87926267e113f89b577f4e0599da44ca983e095e"
        ],
        [
            "exact: valP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmod_inj : injective fmval.",
            "VernacStartTheoremProof",
            "e323b757f08f367d3ebad0e0df94460164c43e1f"
        ],
        [
            "exact: val_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma congr_fmod u v : u = v -> fmval u = fmval v.",
            "VernacStartTheoremProof",
            "ef31c8ff5a2d62c5858742ef4d4639da097c68ec"
        ],
        [
            "exact: congr1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmvalA : {morph valA : x y / x + y >-> (x * y)%g}.",
            "VernacStartTheoremProof",
            "6ffe52eb95897a7c1da925cc3f2f0b64af6e9b81"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmvalN : {morph valA : x / - x >-> x^-1%g}.",
            "VernacStartTheoremProof",
            "1847eded59a36c25df6ecbba70f48ed314d60b83"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmval0 : valA 0 = 1%g.",
            "VernacStartTheoremProof",
            "0b8c5bc5e74a5d88444c9992f04f81c3ece7c0fb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical fmval_morphism := @Morphism _ _ setT fmval (in2W fmvalA).",
            "VernacDefinition",
            "0ec2f2070d8298502d5f58d0f28e727575e55de5"
        ],
        [
            "Definition fmval_sum := big_morph fmval fmvalA fmval0.",
            "VernacDefinition",
            "23bce5b45a3b2520a196170e820017992c785200"
        ],
        [
            "Lemma fmvalZ n : {morph valA : x / x *+ n >-> (x ^+ n)%g}.",
            "VernacStartTheoremProof",
            "8f16ae8ff03a45665901f76535e2941f5f46436c"
        ],
        [
            "by move=> u; rewrite /= morphX ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmodKcond x : val (fmod x) = if x \\in A then x else 1%g.",
            "VernacStartTheoremProof",
            "f13de3328402aedd7d21e47e7c4d69dc72d4d189"
        ],
        [
            "by rewrite /= /fmval /= val_insubd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmodK : {in A, cancel fmod val}.",
            "VernacStartTheoremProof",
            "085e0d47b27a034ff0a89ada712c4e274655d7e1"
        ],
        [
            "exact: subgK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmvalK : cancel val fmod.",
            "VernacStartTheoremProof",
            "8080243421c3c06cbf4289b4433bf582efb1131d"
        ],
        [
            "by case=> x Ax; apply: val_inj; rewrite /fmod /= sgvalK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmod1 : fmod 1 = 0.",
            "VernacStartTheoremProof",
            "6f143e6f084f2011c59c888f2bcf47f541d79f42"
        ],
        [
            "by rewrite -fmval0 fmvalK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmodM : {in A &, {morph fmod : x y / (x * y)%g >-> x + y}}.",
            "VernacStartTheoremProof",
            "1b3f89e8ec48e26bfd2c9116bd72e25926c48939"
        ],
        [
            "by move=> x y Ax Ay /=; apply: val_inj; rewrite /fmod morphM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical fmod_morphism := Morphism fmodM.",
            "VernacDefinition",
            "b37e41ffe44fa1d5b942dab4c693fa4028addaf3"
        ],
        [
            "Lemma fmodX n : {in A, {morph fmod : x / (x ^+ n)%g >-> x *+ n}}.",
            "VernacStartTheoremProof",
            "ba749d1dc68dfe319208520e9617864b4018d97b"
        ],
        [
            "exact: morphX.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmodV : {morph fmod : x / x^-1%g >-> - x}.",
            "VernacStartTheoremProof",
            "1ec2ebbf3c30719355a45f02ebdcfd789d2fbdcb"
        ],
        [
            "move=> x; apply: val_inj; rewrite fmvalN !fmodKcond groupV.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case: (x \\in A); rewrite ?invg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_fmod : 'injm fmod.",
            "VernacStartTheoremProof",
            "2dd68894adf7fa181b211bb267d58c4c1db6c215"
        ],
        [
            "by apply/injmP=> x y Ax Ay []; move/val_inj; apply: (injmP (injm_subg A)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation \"u ^@ x\" := (actr u x) : ring_scope.",
            "VernacNotation",
            "3305a2033bc1bdd74e9c9caad4b3211cbe8b6ef1"
        ],
        [
            "Lemma fmvalJcond u x : val (u ^@ x) = if x \\in 'N(A) then val u ^ x else val u.",
            "VernacStartTheoremProof",
            "641c00bcad87e54019680386d87d7a64a525360b"
        ],
        [
            "by case: ifP => Nx; rewrite /actr Nx ?fmodK // memJ_norm ?fmodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmvalJ u x : x \\in 'N(A) -> val (u ^@ x) = val u ^ x.",
            "VernacStartTheoremProof",
            "27b6b90e612289ea37646bbdbd392b6ab7945896"
        ],
        [
            "by move=> Nx; rewrite fmvalJcond Nx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fmodJ x y : y \\in 'N(A) -> fmod (x ^ y) = fmod x ^@ y.",
            "VernacStartTheoremProof",
            "306c912605a251497fa00439ad1188f33df1a619"
        ],
        [
            "move=> Ny; apply: val_inj; rewrite fmvalJ ?fmodKcond ?memJ_norm //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case: ifP => // _; rewrite conj1g.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact actr_is_action : is_action 'N(A) actr.",
            "VernacStartTheoremProof",
            "e48c7b4e15d2c5b4fce6062440d0242612e9cc60"
        ],
        [
            "split=> [a u v eq_uv_a | u a b Na Nb].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case Na: (a \\in 'N(A)); last by rewrite /actr Na in eq_uv_a.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: val_inj; apply: (conjg_inj a); rewrite -!fmvalJ ?eq_uv_a.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: val_inj; rewrite !fmvalJ ?groupM ?conjgM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical actr_action := Action actr_is_action.",
            "VernacDefinition",
            "abbe7de573b6e74166e4b50930c6521abc044f29"
        ],
        [
            "Notation \"''M'\" := actr_action (at level 8) : action_scope.",
            "VernacNotation",
            "ded09a9d79dc9b1741157b266c95a770832f9b99"
        ],
        [
            "Lemma act0r x : 0 ^@ x = 0.",
            "VernacStartTheoremProof",
            "18f708c450b91d4aeec1bf8a1be2b2ae5b434cfc"
        ],
        [
            "by rewrite /actr conj1g morph1 if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actAr x : {morph actr^~ x : u v / u + v}.",
            "VernacStartTheoremProof",
            "2a8d2ab46221a748364ca5d96e49b09d90ea7dc9"
        ],
        [
            "by move=> u v; apply: val_inj; rewrite !(fmvalA, fmvalJcond) conjMg; case: ifP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition actr_sum x := big_morph _ (actAr x) (act0r x).",
            "VernacDefinition",
            "201b934430b26f6711a65be6d45f46593755183f"
        ],
        [
            "Lemma actNr x : {morph actr^~ x : u / - u}.",
            "VernacStartTheoremProof",
            "a822100619065ad445fda259b7fed1952e740dba"
        ],
        [
            "by move=> u; apply: (addrI (u ^@ x)); rewrite -actAr !subrr act0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actZr x n : {morph actr^~ x : u / u *+ n}.",
            "VernacStartTheoremProof",
            "44df458a0e1c434a1df57135aa96066dc2a69f51"
        ],
        [
            "by move=> u; elim: n => [|n IHn]; rewrite ?act0r // !mulrS actAr IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact actr_is_groupAction : is_groupAction setT 'M.",
            "VernacStartTheoremProof",
            "7eea050fb06c54af6377a2dc7d8ad37fa505c840"
        ],
        [
            "move=> a Na /=; rewrite inE; apply/andP; split.",
            "VernacExtend",
            "9901f82e5ee1133d602812d708a9c1405d183a8b"
        ],
        [
            "by apply/subsetP=> u _; rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/morphicP=> u v _ _; rewrite !permE /= actAr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical actr_groupAction := GroupAction actr_is_groupAction.",
            "VernacDefinition",
            "f27c0195d0abce1e6341c028fea0575e776ed434"
        ],
        [
            "Notation \"''M'\" := actr_groupAction (at level 8) : groupAction_scope.",
            "VernacNotation",
            "d1395ab466deb4cf25a57dc0b0ec83f898c5c3fc"
        ],
        [
            "Lemma actr1 u : u ^@ 1 = u.",
            "VernacStartTheoremProof",
            "21e4d5fa3d112ded4208ff9c29215973ca31ad49"
        ],
        [
            "exact: act1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actrM : {in 'N(A) &, forall x y u, u ^@ (x * y) = u ^@ x ^@ y}.",
            "VernacStartTheoremProof",
            "9548c2f960c60bab573e44a80140931e5714dc5b"
        ],
        [
            "by move=> x y Nx Ny /= u; apply: val_inj; rewrite !fmvalJ ?conjgM ?groupM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actrK x : cancel (actr^~ x) (actr^~ x^-1%g).",
            "VernacStartTheoremProof",
            "b295c469c40b98201bbe03b04c2720048d1da699"
        ],
        [
            "move=> u; apply: val_inj; rewrite !fmvalJcond groupV.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case: ifP => -> //; rewrite conjgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actrKV x : cancel (actr^~ x^-1%g) (actr^~ x).",
            "VernacStartTheoremProof",
            "60a16af14c4232e743d55dbf478ca0c4bf43e43a"
        ],
        [
            "by move=> u; rewrite /= -{2}(invgK x) actrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OneFinMod.",
            "VernacEndSegment",
            "7816c0504f89bf07b7c64ac505cc1c9b5285bc86"
        ],
        [
            "Bind Scope ring_scope with fmod_of.",
            "VernacBindScope",
            "44cfab1b7f45039a12ff882b988f69c8aa8d4671"
        ],
        [
            "Prenex Implicits fmval fmod actr.",
            "VernacExtend",
            "63fb4d6e81394bf61068c1c76aeef30f81303258"
        ],
        [
            "Notation \"u ^@ x\" := (actr u x) : ring_scope.",
            "VernacNotation",
            "3305a2033bc1bdd74e9c9caad4b3211cbe8b6ef1"
        ],
        [
            "Notation \"''M'\" := actr_action (at level 8) : action_scope.",
            "VernacNotation",
            "ded09a9d79dc9b1741157b266c95a770832f9b99"
        ],
        [
            "Notation \"''M'\" := actr_groupAction : groupAction_scope.",
            "VernacNotation",
            "8b778c9bfd039b9188fb11241d9c48a88101bee4"
        ],
        [
            "End FiniteModule.",
            "VernacEndSegment",
            "3e9ca0439fe5a0d87bd69aa535939c676edf3322"
        ],
        [
            "Canonical FiniteModule.fmod_subType.",
            "VernacCanonical",
            "856be96dc02a8b837cf69596156ebc243b3f70ea"
        ],
        [
            "Canonical FiniteModule.fmod_eqType.",
            "VernacCanonical",
            "fdabaa801500edc4d787549c349c316ed7b51ab4"
        ],
        [
            "Canonical FiniteModule.fmod_choiceType.",
            "VernacCanonical",
            "d737bff48218f38c978821f861d33fe1f4036f72"
        ],
        [
            "Canonical FiniteModule.fmod_countType.",
            "VernacCanonical",
            "9c6c502a58003e0886c223d6c4f7cc2f012d8717"
        ],
        [
            "Canonical FiniteModule.fmod_finType.",
            "VernacCanonical",
            "f4cf5888201ca79da5f38b75788ae9b9e839c77d"
        ],
        [
            "Canonical FiniteModule.fmod_subCountType.",
            "VernacCanonical",
            "133e4514e67135b87192a6fc3dff66ad10e5f81e"
        ],
        [
            "Canonical FiniteModule.fmod_subFinType.",
            "VernacCanonical",
            "90cbac4707751ad59c5bc2768584927b08d057fc"
        ],
        [
            "Canonical FiniteModule.fmod_zmodType.",
            "VernacCanonical",
            "864a1cffb87b49f1938561c53305a7212bf9ece9"
        ],
        [
            "Canonical FiniteModule.fmod_finZmodType.",
            "VernacCanonical",
            "34bce9c1ffeb6aab29f84cb34b3c0d26e0832de5"
        ],
        [
            "Canonical FiniteModule.fmod_baseFinGroupType.",
            "VernacCanonical",
            "2179a29f756a700739612baa3ce505134b27e8a5"
        ],
        [
            "Canonical FiniteModule.fmod_finGroupType.",
            "VernacCanonical",
            "0141f559f5a19236273372ff338bd4fc8ce85697"
        ],
        [
            "Arguments FiniteModule.fmodK {gT A} abelA [x] Ax.",
            "VernacArguments",
            "b27ab9df9051b027f48a78b2887e1756d47f4743"
        ],
        [
            "Arguments FiniteModule.fmvalK {gT A abelA} x.",
            "VernacArguments",
            "463e633523618c5cec9b9d80e9ecd63a78f1505e"
        ],
        [
            "Arguments FiniteModule.actrK {gT A abelA} x.",
            "VernacArguments",
            "4eaade05c12eaf9a2cf19722b48b33e564ebb4dd"
        ],
        [
            "Arguments FiniteModule.actrKV {gT A abelA} x.",
            "VernacArguments",
            "005348049c988487889c86a376c67b9ebff68f0c"
        ],
        [
            "Import FiniteModule GroupScope.",
            "VernacImport",
            "d8cefe8bc7c9bf07c50ceceb77f8e6cdd9ad48fc"
        ],
        [
            "Section Gaschutz.",
            "VernacBeginSection",
            "4a5beb65ed33e98260c1778c0f723a911957a455"
        ],
        [
            "Variables (gT : finGroupType) (G H P : {group gT}).",
            "VernacAssumption",
            "1e019300e0eb9ea33947a69e86b03e85c680d2b1"
        ],
        [
            "Implicit Types K L : {group gT}.",
            "VernacReserve",
            "d47a496612d4c681877f94b68a1f0a5424f9f9eb"
        ],
        [
            "Hypotheses (nsHG : H <| G) (sHP : H \\subset P) (sPG : P \\subset G).",
            "VernacAssumption",
            "2cd069f828f3e30a3ead23d820db36e0b3bf834c"
        ],
        [
            "Hypotheses (abelH : abelian H) (coHiPG : coprime #|H| #|G : P|).",
            "VernacAssumption",
            "116f1a00e11245becf625c704e0bce4d759eac45"
        ],
        [
            "Let sHG := normal_sub nsHG.",
            "VernacDefinition",
            "c7f781c1c5f3c43b09fb36fa5b01e8c7c2d0fcf3"
        ],
        [
            "Let nHG := subsetP (normal_norm nsHG).",
            "VernacDefinition",
            "b61ba2182c7248854393aae31abd0d5c45dd51db"
        ],
        [
            "Let m := (expg_invn H #|G : P|).",
            "VernacDefinition",
            "871a51cc597665b8888052446bc7301fb84c1e84"
        ],
        [
            "Implicit Types a b : fmod_of abelH.",
            "VernacReserve",
            "d3fcf8ca58e6ec58b4f39973dac9fb48d4522217"
        ],
        [
            "Local Notation fmod := (fmod abelH).",
            "VernacSyntacticDefinition",
            "172280dc078468c099523c76d8a9170027e70138"
        ],
        [
            "Theorem Gaschutz_split : [splits G, over H] = [splits P, over H].",
            "VernacStartTheoremProof",
            "2bde11e6fa308a68afa7082d908f45c76279bfa9"
        ],
        [
            "apply/splitsP/splitsP=> [[K /complP[tiHK eqHK]] | [Q /complP[tiHQ eqHQ]]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exists (K :&: P)%G; rewrite inE setICA (setIidPl sHP) setIC tiHK eqxx.",
            "VernacExtend",
            "f55a870e3fb219c5433f3335c4050ad9f512e86d"
        ],
        [
            "by rewrite group_modl // eqHK (sameP eqP setIidPr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sQP: Q \\subset P by rewrite -eqHQ mulG_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose rP x := repr (P :* x); pose pP x := x * (rP x)^-1.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have PpP x: pP x \\in P by rewrite -mem_rcoset rcoset_repr rcoset_refl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have rPmul x y: x \\in P -> rP (x * y) = rP y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> Px; rewrite /rP rcosetM rcoset_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose pQ x := remgr H Q x; pose rH x := pQ (pP x) * rP x.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have pQhq: {in H & Q, forall h q, pQ (h * q) = q} by apply: remgrMid.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have pQmul: {in P &, {morph pQ : x y / x * y}}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: remgrM; [apply/complP | apply: normalS (nsHG)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have HrH x: rH x \\in H :* x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite rcoset_sym mem_rcoset invMg mulgA mem_divgr // eqHQ PpP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have GrH x: x \\in G -> rH x \\in G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Gx; case/rcosetP: (HrH x) => y Hy ->.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite groupM // (subsetP sHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have rH_Pmul x y: x \\in P -> rH (x * y) = pQ x * rH y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> Px; rewrite /rH mulgA -pQmul; first by rewrite /pP rPmul ?mulgA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have rH_Hmul h y: h \\in H -> rH (h * y) = rH y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> Hh; rewrite rH_Pmul ?(subsetP sHP) // -(mulg1 h) pQhq ?mul1g.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose mu x y := fmod ((rH x * rH y)^-1 * rH (x * y)).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose nu y := (\\sum_(Px in rcosets P G) mu (repr Px) y)%R.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have rHmul: {in G &, forall x y, rH (x * y) = rH x * rH y * val (mu x y)}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> x y Gx Gy; rewrite /= fmodK ?mulKVg // -mem_lcoset lcoset_sym.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -norm_rlcoset; last by rewrite nHG ?GrH ?groupM.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (rcoset_eqP (HrH _)) -rcoset_mul ?nHG ?GrH // mem_mulg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have actrH a x: x \\in G -> (a ^@ rH x = a ^@ x)%R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Gx; apply: val_inj; rewrite /= !fmvalJ ?nHG ?GrH //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "case/rcosetP: (HrH x) => b /(fmodK abelH) <- ->; rewrite conjgM.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by congr (_ ^ _); rewrite conjgE -fmvalN -!fmvalA (addrC a) addKr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have mu_Pmul x y z: x \\in P -> mu (x * y) z = mu y z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Px; congr fmod; rewrite -mulgA !(rH_Pmul x) ?rPmul //.",
            "VernacExtend",
            "9c100dc6a2234325e38cb436a82baebbe2445916"
        ],
        [
            "by rewrite -mulgA invMg -mulgA mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have mu_Hmul x y z: x \\in G -> y \\in H -> mu x (y * z) = mu x z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Gx Hy; congr fmod; rewrite (mulgA x) (conjgCV x) -mulgA 2?rH_Hmul //.",
            "VernacExtend",
            "9c100dc6a2234325e38cb436a82baebbe2445916"
        ],
        [
            "by rewrite -mem_conjg (normP _) ?nHG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{mu_Hmul} nu_Hmul y z: y \\in H -> nu (y * z) = nu z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Hy; apply: eq_bigr => _ /rcosetsP[x Gx ->]; apply: mu_Hmul y z _ Hy.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by rewrite -(groupMl _ (subsetP sPG _ (PpP x))) mulgKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have cocycle_mu: {in G & &, forall x y z, mu (x * y)%g z + mu x y ^@ z = mu y z + mu x (y * z)%g}%R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> x y z Gx Gy Gz; apply: val_inj.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: (mulgI (rH x * rH y * rH z)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -(actrH _ _ Gz) addrC fmvalA fmvalJ ?nHG ?GrH //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulgA -(mulgA _ (rH z)) -conjgC mulgA -!rHmul ?groupM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulgA -mulgA -2!(mulgA (rH x)) -!rHmul ?groupM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: mu => mu in rHmul mu_Pmul cocycle_mu nu nu_Hmul.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have{cocycle_mu} cocycle_nu: {in G &, forall y z, nu z + nu y ^@ z = mu y z *+ #|G : P| + nu (y * z)%g}%R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> y z Gy Gz; rewrite /= (actr_sum z) /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have ->: (nu z = \\sum_(Px in rcosets P G) mu (repr Px * y)%g z)%R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /nu (reindex_acts _ (actsRs_rcosets P G) Gy) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => _ /rcosetsP[x Gx /= ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite rcosetE -rcosetM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: repr_rcosetP=> p1 Pp1; case: repr_rcosetP=> p2 Pp2.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite -mulgA [x * y]lock !mu_Pmul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -sumr_const -!big_split /=; apply: eq_bigr => _ /rcosetsP[x Gx ->].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -cocycle_mu //; case: repr_rcosetP => p1 Pp1.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite groupMr // (subsetP sPG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: nu => nu in nu_Hmul cocycle_nu.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "pose f x := rH x * val (nu x *+ m)%R.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have{cocycle_nu} fM: {in G &, {morph f : x y / x * y}}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> x y Gx Gy; rewrite /f ?rHmul // -3!mulgA; congr (_ * _).",
            "VernacExtend",
            "485e46f06ecb626ff6a640f6969694ae3ffba974"
        ],
        [
            "rewrite (mulgA _ (rH y)) (conjgC _ (rH y)) -mulgA; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite -fmvalJ ?actrH ?nHG ?GrH // -!fmvalA actZr -mulrnDl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(addrC (nu y)) cocycle_nu // mulrnDl !fmvalA; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite !fmvalZ expgK ?fmodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (Morphism fM @* G)%G; apply/complP; split.",
            "VernacExtend",
            "89f0067f135f01a9ffa4a0fe144deca5a8d9e189"
        ],
        [
            "apply/trivgP/subsetP=> x /setIP[Hx /morphimP[y _ Gy eq_x]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/set1P; move: Hx; rewrite {x}eq_x /= groupMr ?subgP //.",
            "VernacExtend",
            "892743169f9b7a8d1078a131ab1583767aafbf69"
        ],
        [
            "rewrite -{1}(mulgKV y (rH y)) groupMl -?mem_rcoset // => Hy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -(mulg1 y) /f nu_Hmul // rH_Hmul //; apply: (morph1 (Morphism fM)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/setP=> x; apply/mulsgP/idP=> [[h y Hh fy ->{x}] | Gx].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite groupMl; last exact: (subsetP sHG).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/morphimP: fy => z _ Gz ->{h Hh y}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite /= /f groupMl ?GrH // (subsetP sHG) ?fmodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (x * (f x)^-1) (f x); last first; first by rewrite mulgKV.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/morphimP; exists x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -groupV invMg invgK -mulgA (conjgC (val _)) mulgA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite groupMl -(mem_rcoset, mem_conjg) // (normP _) ?nHG ?fmodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Gaschutz_transitive : {in [complements to H in G] &, forall K L, K :&: P = L :&: P -> exists2 x, x \\in H & L :=: K :^ x}.",
            "VernacStartTheoremProof",
            "6802160799bcf6159d55bee56cbc56dd9bcd6110"
        ],
        [
            "move=> K L /=; set Q := K :&: P => /complP[tiHK eqHK] cpHL QeqLP.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have [trHL eqHL] := complP cpHL.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose nu x := fmod (divgr H L x^-1).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have sKG: {subset K <= G} by apply/subsetP; rewrite -eqHK mulG_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sLG: {subset L <= G} by apply/subsetP; rewrite -eqHL mulG_subr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have val_nu x: x \\in G -> val (nu x) = divgr H L x^-1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> Gx; rewrite fmodK // mem_divgr // eqHL groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nu_cocycle: {in G &, forall x y, nu (x * y)%g = nu x ^@ y + nu y}%R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> x y Gx Gy; apply: val_inj; rewrite fmvalA fmvalJ ?nHG //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite !val_nu ?groupM // /divgr conjgE !mulgA mulgK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !(invMg, remgrM cpHL) ?groupV ?mulgA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nuL x: x \\in L -> nu x = 0%R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Lx; apply: val_inj; rewrite val_nu ?sLG //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite /divgr remgr_id ?groupV ?mulgV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (fmval ((\\sum_(X in rcosets Q K) nu (repr X)) *+ m)).",
            "VernacExtend",
            "56bf9d4236c7949ccff0ff938c9997e4dd004f75"
        ],
        [
            "exact: fmodP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEcard; apply/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cardJg -(leq_pmul2l (cardG_gt0 H)) -!TI_cardMg // eqHL eqHK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subsetP=> _ /imsetP[x Kx ->]; rewrite conjgE mulgA (conjgC _ x).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have Gx: x \\in G by rewrite sKG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite conjVg -mulgA -fmvalJ ?nHG // -fmvalN -fmvalA (_ : _ + _ = nu x)%R.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite val_nu // mulKVg groupV mem_remgr // eqHL groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite actZr -!mulNrn -mulrnDl actr_sum.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addrC (reindex_acts _ (actsRs_rcosets _ K) Kx) -sumrB /= -/Q.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (eq_bigr (fun _ => nu x)) => [|_ /imsetP[y Ky ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !rcosetE -rcosetM QeqLP.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: repr_rcosetP => z /setIP[Lz _]; case: repr_rcosetP => t /setIP[Lt _].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite !nu_cocycle ?groupM ?(sKG y) // ?sLG //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (nuL z) ?(nuL t) // !act0r !add0r addrC addKr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: val_inj; rewrite sumr_const !fmvalZ.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -{2}(expgK coHiPG (fmodP (nu x))); congr (_ ^+ _ ^+ _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite -[#|_|]divgS ?subsetIl // -(divnMl (cardG_gt0 H)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!TI_cardMg //; last by rewrite setIA setIAC (setIidPl sHP).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite group_modl // eqHK (setIidPr sPG) divgS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Gaschutz.",
            "VernacEndSegment",
            "e6cea608de685fc7db1d37607f83305ffd55a74a"
        ],
        [
            "Lemma coprime_abel_cent_TI (gT : finGroupType) (A G : {group gT}) : A \\subset 'N(G) -> coprime #|G| #|A| -> abelian G -> 'C_[~: G, A](A) = 1.",
            "VernacStartTheoremProof",
            "0bf42bf85e14825ab52e4d31d45b5ceffaa0e371"
        ],
        [
            "move=> nGA coGA abG; pose f x := val (\\sum_(a in A) fmod abG x ^@ a)%R.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have fM: {in G &, {morph f : x y / x * y}}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> x y Gx Gy /=; rewrite -fmvalA -big_split /=; congr (fmval _).",
            "VernacExtend",
            "485e46f06ecb626ff6a640f6969694ae3ffba974"
        ],
        [
            "by apply: eq_bigr => a Aa; rewrite fmodM // actAr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nfA x a: a \\in A -> f (x ^ a) = f x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Aa; rewrite {2}/f (reindex_inj (mulgI a)) /=; congr (fmval _).",
            "VernacExtend",
            "485e46f06ecb626ff6a640f6969694ae3ffba974"
        ],
        [
            "apply: eq_big => [b | b Ab]; first by rewrite groupMl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -!fmodJ ?groupM ?(subsetP nGA) // conjgM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have kerR: [~: G, A] \\subset 'ker (Morphism fM).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite gen_subG; apply/subsetP=> xa; case/imset2P=> x a Gx Aa -> {xa}.",
            "VernacExtend",
            "e653a755ab5d693b79348e5a2832d3e386fea3c7"
        ],
        [
            "have Gxa: x ^ a \\in G by rewrite memJ_norm ?(subsetP nGA).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite commgEl; apply/kerP; rewrite (groupM, morphM) ?(groupV, morphV) //=.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by rewrite nfA ?mulVg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/trivgP; apply/subsetP=> x /setIP[Rx cAx]; apply/set1P.",
            "VernacExtend",
            "6e77d60b6fe9e5152bca0bfa572494ee57c5c96d"
        ],
        [
            "have Gx: x \\in G by apply: subsetP Rx; rewrite commg_subl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(expgK coGA Gx) (_ : x ^+ _ = 1) ?expg1n //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(fmodK abG Gx) -fmvalZ -(mker (subsetP kerR x Rx)); congr fmval.",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite -GRing.sumr_const; apply: eq_bigr => a Aa.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -fmodJ ?(subsetP nGA) // /conjg (centP cAx) // mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Transfer.",
            "VernacBeginSection",
            "68ecc280f70705faf83d6953c92a194189b5f2b4"
        ],
        [
            "Variables (gT aT : finGroupType) (G H : {group gT}).",
            "VernacAssumption",
            "8303a812423f4556d196531f84489992aab1066d"
        ],
        [
            "Variable alpha : {morphism H >-> aT}.",
            "VernacAssumption",
            "4e62119ee35ab7b036db1dc5e67811b0b2a75315"
        ],
        [
            "Hypotheses (sHG : H \\subset G) (abelA : abelian (alpha @* H)).",
            "VernacAssumption",
            "ae469914531f56f7b9f428fbbba67cf45bfda000"
        ],
        [
            "Local Notation HG := (rcosets (gval H) (gval G)).",
            "VernacSyntacticDefinition",
            "58b622d8626fd25f5cbc174b30896a9545b09172"
        ],
        [
            "Fact transfer_morph_subproof : H \\subset alpha @*^-1 (alpha @* H).",
            "VernacStartTheoremProof",
            "8b296d77ebe0c3d3c2d336c6e88379b8b77526c7"
        ],
        [
            "by rewrite -sub_morphim_pre.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let fmalpha := restrm transfer_morph_subproof (fmod abelA \\o alpha).",
            "VernacDefinition",
            "cd640c5b79c8867a4fbd5e893668e57f2e9a1da1"
        ],
        [
            "Let V (rX : {set gT} -> gT) g := \\sum_(Hx in rcosets H G) fmalpha (rX Hx * g * (rX (Hx :* g))^-1).",
            "VernacDefinition",
            "e0a1d61bc86feaaad192bddf13d290edfb94e970"
        ],
        [
            "Definition transfer g := V repr g.",
            "VernacDefinition",
            "6c4c1aec58a5c7adead60aa49085a05e1d3bb052"
        ],
        [
            "Lemma transferM : {in G &, {morph transfer : x y / (x * y)%g >-> x + y}}.",
            "VernacStartTheoremProof",
            "ff3c371d24c1dc606ea876219cb17ea71d2b37e3"
        ],
        [
            "move=> s t Gs Gt /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite [transfer t](reindex_acts 'Rs _ Gs) ?actsRs_rcosets //= -big_split /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => _ /rcosetsP[x Gx ->]; rewrite !rcosetE -!rcosetM.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -zmodMgE -morphM -?mem_rcoset; first by rewrite !mulgA mulgKV rcosetM.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite rcoset_repr rcosetM mem_rcoset mulgK mem_repr_rcoset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite rcoset_repr (rcosetM _ _ t) mem_rcoset mulgK mem_repr_rcoset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical transfer_morphism := Morphism transferM.",
            "VernacDefinition",
            "de2cf0f6b84d648b7b387d12b4ca8c030e58ec5b"
        ],
        [
            "Lemma transfer_indep X (rX := transversal_repr 1 X) : is_transversal X HG G -> {in G, transfer =1 V rX}.",
            "VernacStartTheoremProof",
            "3e1b0e005d001cc8215935b7e37c5afeea479b78"
        ],
        [
            "move=> trX g Gg; have mem_rX := repr_mem_pblock trX 1; rewrite -/rX in mem_rX.",
            "VernacExtend",
            "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
        ],
        [
            "apply: (addrI (\\sum_(Hx in HG) fmalpha (repr Hx * (rX Hx)^-1))).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite {1}(reindex_acts 'Rs _ Gg) ?actsRs_rcosets // -!big_split /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => _ /rcosetsP[x Gx ->]; rewrite !rcosetE -!rcosetM.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case: repr_rcosetP => h1 Hh1; case: repr_rcosetP => h2 Hh2.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have: H :* (x * g) \\in rcosets H G by rewrite -rcosetE mem_imset ?groupM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: H :* x \\in rcosets H G by rewrite -rcosetE mem_imset.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/mem_rX/rcosetP=> h3 Hh3 -> /mem_rX/rcosetP[h4 Hh4 ->].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -!(mulgA h1) -!(mulgA h2) -!(mulgA h3) !(mulKVg, invMg).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addrC -!zmodMgE -!morphM ?groupM ?groupV // -!mulgA !mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section FactorTransfer.",
            "VernacBeginSection",
            "22c157705ca35c31c859377d46a787ae8fc708f0"
        ],
        [
            "Variable g : gT.",
            "VernacAssumption",
            "bfdd7c7aac6cdb344e6e108853522aee82575d9b"
        ],
        [
            "Hypothesis Gg : g \\in G.",
            "VernacAssumption",
            "ce808fe1a925980f5dd34a0d628216a0bd876637"
        ],
        [
            "Let sgG : <[g]> \\subset G.",
            "VernacDefinition",
            "4cf931286843293a14f390dcdc2c54bde002d726"
        ],
        [
            "by rewrite cycle_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let H_g_rcosets x : {set {set gT}} := rcosets (H :* x) <[g]>.",
            "VernacDefinition",
            "14ce41969b1b4739906f523eb2b9582d1c86d7d4"
        ],
        [
            "Let n_ x := #|<[g]> : H :* x|.",
            "VernacDefinition",
            "1a40241d27fe9a67c7d5e15cb027156325b21e28"
        ],
        [
            "Lemma mulg_exp_card_rcosets x : x * (g ^+ n_ x) \\in H :* x.",
            "VernacStartTheoremProof",
            "6ee68c38183c6e0476af358289ff3118289e7f8c"
        ],
        [
            "rewrite /n_ /indexg -orbitRs -pcycle_actperm ?inE //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{2}(iter_pcycle (actperm 'Rs g) (H :* x)) -permX -morphX ?inE //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite actpermE //= rcosetE -rcosetM rcoset_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let HGg : {set {set {set gT}}} := orbit 'Rs <[g]> @: HG.",
            "VernacDefinition",
            "25b93731b09cb38b41524c200876d8298b4855c7"
        ],
        [
            "Let partHG : partition HG G := rcosets_partition sHG.",
            "VernacDefinition",
            "74f0c9138ccc1b2a6d4c2784dd08ce26e1d41266"
        ],
        [
            "Let actsgHG : [acts <[g]>, on HG | 'Rs].",
            "VernacDefinition",
            "001584abd431c9ca6e861797f7f4b26a1d299f12"
        ],
        [
            "exact: subset_trans sgG (actsRs_rcosets H G).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let partHGg : partition HGg HG := orbit_partition actsgHG.",
            "VernacDefinition",
            "3961ec063af850c807515358b79001d3cabac1da"
        ],
        [
            "Let injHGg : {in HGg &, injective cover}.",
            "VernacDefinition",
            "f0f1318507e7bc15795f6b5ac1434cca24aa0fbd"
        ],
        [
            "by have [] := partition_partition partHG partHGg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let defHGg : HG :* <[g]> = cover @: HGg.",
            "VernacDefinition",
            "686ce28f80308961f99d29dc22c8bc21e1a19294"
        ],
        [
            "rewrite -imset_comp [_ :* _]imset2_set1r; apply: eq_imset => Hx /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite cover_imset -curry_imset2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rcosets_cycle_partition : partition (HG :* <[g]>) G.",
            "VernacStartTheoremProof",
            "33478ad08669ed93732f8f8a956fd7178ec15627"
        ],
        [
            "by rewrite defHGg; have [] := partition_partition partHG partHGg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable X : {set gT}.",
            "VernacAssumption",
            "b277d2c83af5ea90d9ee28c50b756bc4421e6d3f"
        ],
        [
            "Hypothesis trX : is_transversal X (HG :* <[g]>) G.",
            "VernacAssumption",
            "8a13187432b023e99970282bb9197ec8ea5ef0c7"
        ],
        [
            "Let sXG : {subset X <= G}.",
            "VernacDefinition",
            "14784ad20808b67b4ddb212a381728fdcc8cb011"
        ],
        [
            "exact/subsetP/(transversal_sub trX).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rcosets_cycle_transversal : H_g_rcosets @: X = HGg.",
            "VernacStartTheoremProof",
            "79b69e87372bd2a85cea502ff62e11db11c260fc"
        ],
        [
            "have sHXgHGg x: x \\in X -> H_g_rcosets x \\in HGg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move/sXG=> Gx; apply: mem_imset; rewrite -rcosetE mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/setP=> Hxg; apply/imsetP/idP=> [[x /sHXgHGg HGgHxg -> //] | HGgHxg].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "have [_ /rcosetsP[z Gz ->] ->] := imsetP HGgHxg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose Hzg := H :* z * <[g]>; pose x := transversal_repr 1 X Hzg.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have HGgHzg: Hzg \\in HG :* <[g]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mem_mulg ?set11 // -rcosetE mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Hzg_x: x \\in Hzg by rewrite (repr_mem_pblock trX).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists x; first by rewrite (repr_mem_transversal trX).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/mulsgP: Hzg_x => y u /rcoset_eqP <- /(orbit_act 'Rs) <- -> /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite rcosetE -rcosetM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation defHgX := rcosets_cycle_transversal.",
            "VernacSyntacticDefinition",
            "2148ddb7a10fedacd4df54655df88b1565cafc5d"
        ],
        [
            "Let injHg: {in X &, injective H_g_rcosets}.",
            "VernacDefinition",
            "dea68f3e18eda5c368757ce469b32de698a4463e"
        ],
        [
            "apply/imset_injP; rewrite defHgX (card_transversal trX) defHGg.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (card_in_imset injHGg).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_index_rcosets_cycle : (\\sum_(x in X) n_ x)%N = #|G : H|.",
            "VernacStartTheoremProof",
            "9d4b73ef0612fc0fa4835b1a3c6c1146718e5125"
        ],
        [
            "by rewrite [#|G : H|](card_partition partHGg) -defHgX big_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma transfer_cycle_expansion : transfer g = \\sum_(x in X) fmalpha ((g ^+ n_ x) ^ x^-1).",
            "VernacStartTheoremProof",
            "8827548a2d0831dd2a68c3604de3beb1a14fbd37"
        ],
        [
            "pose Y := \\bigcup_(x in X) [set x * g ^+ i | i : 'I_(n_ x)].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose rY := transversal_repr 1 Y.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose pcyc x := pcycle (actperm 'Rs g) (H :* x).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose traj x := traject (actperm 'Rs g) (H :* x) #|pcyc x|.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have Hgr_eq x: H_g_rcosets x = pcyc x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /H_g_rcosets -orbitRs -pcycle_actperm ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have pcyc_eq x: pcyc x =i traj x by apply: pcycle_traject.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have uniq_traj x: uniq (traj x) by apply: uniq_traject_pcycle.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have n_eq x: n_ x = #|pcyc x| by rewrite -Hgr_eq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have size_traj x: size (traj x) = n_ x by rewrite n_eq size_traject.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nth_traj x j: j < n_ x -> nth (H :* x) (traj x) j = H :* (x * g ^+ j).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> lt_j_x; rewrite nth_traject -?n_eq //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -permX -morphX ?inE // actpermE //= rcosetE rcosetM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sYG: Y \\subset G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/bigcupsP=> x Xx; apply/subsetP=> _ /imsetP[i _ ->].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite groupM ?groupX // sXG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have trY: is_transversal Y HG G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/and3P; split=> //; apply/forall_inP=> Hy.",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "have /and3P[/eqP <- _ _] := partHGg; rewrite -defHgX cover_imset.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case/bigcupP=> x Xx; rewrite Hgr_eq pcyc_eq => /trajectP[i].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite -n_eq -permX -morphX ?in_setT // actpermE /= rcosetE -rcosetM => lti.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "set y := x * _ => ->{Hy}; pose oi := Ordinal lti.",
            "VernacExtend",
            "9d8fbc7ebaadb48200c542591ceec3e0f555a812"
        ],
        [
            "have Yy: y \\in Y by apply/bigcupP; exists x => //; apply/imsetP; exists oi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/cards1P; exists y; apply/esym/eqP.",
            "VernacExtend",
            "98433fee7ffdb3294ab15a678d05b8a65ed5027d"
        ],
        [
            "rewrite eqEsubset sub1set inE Yy rcoset_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> _ /setIP[/bigcupP[x' Xx' /imsetP[j _ ->]] Hy_x'gj].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have eq_xx': x = x'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (pblock_inj trX) => //; have /andP[/and3P[_ tiX _] _] := trX.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "have HGgHyg: H :* y * <[g]> \\in HG :* <[g]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mem_mulg ?set11 // -rcosetE mem_imset ?(subsetP sYG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !(def_pblock tiX HGgHyg) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[x'](mulgK (g ^+ j)) mem_mulg // groupV mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -[x](mulgK (g ^+ i)) mem_mulg ?rcoset_refl // groupV mem_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/set1P; rewrite /y eq_xx'; congr (_ * _ ^+ _) => //; apply/eqP.",
            "VernacExtend",
            "e60668cfac8f082d0bbbc92af246840de6224a4b"
        ],
        [
            "rewrite -(@nth_uniq _ (H :* x) (traj x)) ?size_traj // ?eq_xx' //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !nth_traj ?(rcoset_eqP Hy_x'gj) // -eq_xx'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have rYE x i : x \\in X -> i < n_ x -> rY (H :* x :* g ^+ i) = x * g ^+ i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Xx lt_i_x; rewrite -rcosetM; apply: (canLR_in (pblockK trY 1)).",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by apply/bigcupP; exists x => //; apply/imsetP; exists (Ordinal lt_i_x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/esym/def_pblock; last exact: rcoset_refl; first by case/and3P: partHG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -rcosetE mem_imset ?groupM ?groupX // sXG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (transfer_indep trY Gg) /V -/rY (set_partition_big _ partHGg) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -defHgX big_imset /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/imset_injP; rewrite defHgX (card_transversal trX) defHGg.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (card_in_imset injHGg).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply eq_bigr=> x Xx; rewrite Hgr_eq (eq_bigl _ _ (pcyc_eq x)) -big_uniq //=.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "have n_gt0: 0 < n_ x by rewrite indexg_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /traj -n_eq; case def_n: (n_ x) (n_gt0) => // [n] _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite conjgE invgK -{1}[H :* x]rcoset1 -{1}(expg0 g).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: {1 3}n 0%N (addn0 n) => [|m IHm] i def_i /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite big_seq1 {i}[i]def_i rYE // ?def_n //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(mulgA _ _ g) -rcosetM -expgSr -[(H :* x) :* _]rcosetE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -actpermE morphX ?inE // permX // -{2}def_n n_eq iter_pcycle mulgA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[H :* x]rcoset1 (rYE _ 0%N) ?mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite big_cons rYE //; last by rewrite def_n -def_i ltnS leq_addl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite permE /= rcosetE -rcosetM -(mulgA _ _ g) -expgSr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addSnnS in def_i; rewrite IHm //.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "rewrite rYE //; last by rewrite def_n -def_i ltnS leq_addl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mulgV [fmalpha 1]morph1 add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FactorTransfer.",
            "VernacEndSegment",
            "a73ac38f4ad9c1c2829f80e220aad3ce296dc4d5"
        ],
        [
            "End Transfer.",
            "VernacEndSegment",
            "61a6fc0e90ad73d5e0c687ce0d3d12cd2c9b7bd4"
        ]
    ],
    "proofs": [
        {
            "name": "fmod_add0r",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "by move=> u; apply: val_inj; apply: mul1g.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmod_addrA",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "by move=> u v w; apply: val_inj; apply: mulgA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmod_addNr",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "by move=> u; apply: val_inj; apply: mulVg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmod_addrC",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "by case=> x Ax [y Ay]; apply: val_inj; apply: (centsP abelA).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmodP",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "exact: valP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmod_inj",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "exact: val_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "congr_fmod",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "exact: congr1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmvalA",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmvalN",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmval0",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmvalZ",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "by move=> u; rewrite /= morphX ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmodKcond",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "by rewrite /= /fmval /= val_insubd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmodK",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "exact: subgK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmvalK",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "by case=> x Ax; apply: val_inj; rewrite /fmod /= sgvalK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmod1",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "by rewrite -fmval0 fmvalK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmodM",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "by move=> x y Ax Ay /=; apply: val_inj; rewrite /fmod morphM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmodX",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "exact: morphX.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmodV",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "move=> x; apply: val_inj; rewrite fmvalN !fmodKcond groupV.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case: (x \\in A); rewrite ?invg1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injm_fmod",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "by apply/injmP=> x y Ax Ay []; move/val_inj; apply: (injmP (injm_subg A)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmvalJcond",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "by case: ifP => Nx; rewrite /actr Nx ?fmodK // memJ_norm ?fmodP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmvalJ",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "by move=> Nx; rewrite fmvalJcond Nx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fmodJ",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "move=> Ny; apply: val_inj; rewrite fmvalJ ?fmodKcond ?memJ_norm //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => // _; rewrite conj1g.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actr_is_action",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "split=> [a u v eq_uv_a | u a b Na Nb].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case Na: (a \\in 'N(A)); last by rewrite /actr Na in eq_uv_a.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: val_inj; apply: (conjg_inj a); rewrite -!fmvalJ ?eq_uv_a.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: val_inj; rewrite !fmvalJ ?groupM ?conjgM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "act0r",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "by rewrite /actr conj1g morph1 if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actAr",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "by move=> u v; apply: val_inj; rewrite !(fmvalA, fmvalJcond) conjMg; case: ifP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actNr",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "by move=> u; apply: (addrI (u ^@ x)); rewrite -actAr !subrr act0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actZr",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "by move=> u; elim: n => [|n IHn]; rewrite ?act0r // !mulrS actAr IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actr_is_groupAction",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "move=> a Na /=; rewrite inE; apply/andP; split.",
                        "VernacExtend",
                        "9901f82e5ee1133d602812d708a9c1405d183a8b"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> u _; rewrite inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/morphicP=> u v _ _; rewrite !permE /= actAr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actr1",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "exact: act1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actrM",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "by move=> x y Nx Ny /= u; apply: val_inj; rewrite !fmvalJ ?conjgM ?groupM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actrK",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "move=> u; apply: val_inj; rewrite !fmvalJcond groupV.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => -> //; rewrite conjgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actrKV",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "by move=> u; rewrite /= -{2}(invgK x) actrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transfer_morph_subproof",
            "line_nb": 334,
            "steps": [
                {
                    "command": [
                        "by rewrite -sub_morphim_pre.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transferM",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "move=> s t Gs Gt /=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite [transfer t](reindex_acts 'Rs _ Gs) ?actsRs_rcosets //= -big_split /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => _ /rcosetsP[x Gx ->]; rewrite !rcosetE -!rcosetM.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite -zmodMgE -morphM -?mem_rcoset; first by rewrite !mulgA mulgKV rcosetM.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite rcoset_repr rcosetM mem_rcoset mulgK mem_repr_rcoset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rcoset_repr (rcosetM _ _ t) mem_rcoset mulgK mem_repr_rcoset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgG",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "by rewrite cycle_subG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulg_exp_card_rcosets",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "rewrite /n_ /indexg -orbitRs -pcycle_actperm ?inE //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}(iter_pcycle (actperm 'Rs g) (H :* x)) -permX -morphX ?inE //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite actpermE //= rcosetE -rcosetM rcoset_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actsgHG",
            "line_nb": 376,
            "steps": [
                {
                    "command": [
                        "exact: subset_trans sgG (actsRs_rcosets H G).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injHGg",
            "line_nb": 380,
            "steps": [
                {
                    "command": [
                        "by have [] := partition_partition partHG partHGg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defHGg",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "rewrite -imset_comp [_ :* _]imset2_set1r; apply: eq_imset => Hx /=.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite cover_imset -curry_imset2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcosets_cycle_partition",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "by rewrite defHGg; have [] := partition_partition partHG partHGg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sXG",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "exact/subsetP/(transversal_sub trX).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcosets_cycle_transversal",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "have sHXgHGg x: x \\in X -> H_g_rcosets x \\in HGg.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move/sXG=> Gx; apply: mem_imset; rewrite -rcosetE mem_imset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> Hxg; apply/imsetP/idP=> [[x /sHXgHGg HGgHxg -> //] | HGgHxg].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "have [_ /rcosetsP[z Gz ->] ->] := imsetP HGgHxg.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose Hzg := H :* z * <[g]>; pose x := transversal_repr 1 X Hzg.",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have HGgHzg: Hzg \\in HG :* <[g]>.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite mem_mulg ?set11 // -rcosetE mem_imset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Hzg_x: x \\in Hzg by rewrite (repr_mem_pblock trX).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists x; first by rewrite (repr_mem_transversal trX).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/mulsgP: Hzg_x => y u /rcoset_eqP <- /(orbit_act 'Rs) <- -> /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rcosetE -rcosetM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injHg",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "apply/imset_injP; rewrite defHgX (card_transversal trX) defHGg.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (card_in_imset injHGg).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_index_rcosets_cycle",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "by rewrite [#|G : H|](card_partition partHGg) -defHgX big_imset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}