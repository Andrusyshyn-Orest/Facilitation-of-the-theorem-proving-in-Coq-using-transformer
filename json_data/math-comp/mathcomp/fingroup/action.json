{
    "filename": "mathcomp/fingroup/action.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat div seq fintype.",
            "VernacRequire",
            "a6e36bce5d83e86b75495908fd6be2e43b5dcae0"
        ],
        [
            "From mathcomp Require Import bigop finset fingroup morphism perm automorphism quotient.",
            "VernacRequire",
            "3544c1147eb217c3a8167ff1c51c1ad2fcb0eec4"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope.",
            "VernacImport",
            "89fd18b7dcbcc46edcd02262df11c799856485fc"
        ],
        [
            "Section ActionDef.",
            "VernacBeginSection",
            "69609e43228ae6d0f892e3cc4b013f4869137d65"
        ],
        [
            "Variables (aT : finGroupType) (D : {set aT}) (rT : Type).",
            "VernacAssumption",
            "95146f5835466bd06e686a79e07c06ebcf65aae3"
        ],
        [
            "Implicit Types a b : aT.",
            "VernacReserve",
            "ecf8c67ac95b6955fc8f6b5e3c73282f9bfd1f13"
        ],
        [
            "Implicit Type x : rT.",
            "VernacReserve",
            "7675f0d05ae00fc9666a877ab9a13dbb49b95d37"
        ],
        [
            "Definition act_morph to x := forall a b, to x (a * b) = to (to x a) b.",
            "VernacDefinition",
            "6de0026308a9334a70fba9162ad119b064edd3f8"
        ],
        [
            "Definition is_action to := left_injective to /\\ forall x, {in D &, act_morph to x}.",
            "VernacDefinition",
            "5d9713c255a44a923d3de44240d75a498d71619d"
        ],
        [
            "Record action := Action {act :> rT -> aT -> rT; _ : is_action act}.",
            "VernacInductive",
            "61c4b6a594c20b52498df6c602c4b84b82099917"
        ],
        [
            "Definition clone_action to := let: Action _ toP := to return {type of Action for to} -> action in fun k => k toP.",
            "VernacDefinition",
            "68777fa0194e19093480a4ad80c9810ef7306605"
        ],
        [
            "End ActionDef.",
            "VernacEndSegment",
            "531c350a53771f1fed674f7792a390643f6aa12a"
        ],
        [
            "Delimit Scope action_scope with act.",
            "VernacDelimiters",
            "60d75c4ca73df47be7256580205a8c02c552f97c"
        ],
        [
            "Bind Scope action_scope with action.",
            "VernacBindScope",
            "773f0d564d399344bcff429190828b5a43b08975"
        ],
        [
            "Arguments act_morph {aT rT%type} to x%g.",
            "VernacArguments",
            "1f0fe9e3da5f9d413b3f1452f751574b6ae9d668"
        ],
        [
            "Arguments is_action {aT} D%g {rT} to.",
            "VernacArguments",
            "133e8c11bc8a50f08578665d7d19c2e0e53e4732"
        ],
        [
            "Arguments act {aT D%g rT%type} to%act x%g a%g : rename.",
            "VernacArguments",
            "3fe1edfe344d81384790bd561a8d4cb57cf70896"
        ],
        [
            "Arguments clone_action [aT D%g rT%type to%act] _.",
            "VernacArguments",
            "6bd4d35e4c9c0be0e635144a9a0c3b094187c03f"
        ],
        [
            "Notation \"{ 'action' aT &-> T }\" := (action [set: aT] T) (at level 0, format \"{ 'action' aT &-> T }\") : type_scope.",
            "VernacNotation",
            "f4f29efdc164529c7a81dc2ccb5b70b1e1639f44"
        ],
        [
            "Notation \"[ 'action' 'of' to ]\" := (clone_action (@Action _ _ _ to)) (at level 0, format \"[ 'action' 'of' to ]\") : form_scope.",
            "VernacNotation",
            "0193b043e92d875cfa87a490d3bbd22ba6f434b7"
        ],
        [
            "Definition act_dom aT D rT of @action aT D rT := D.",
            "VernacDefinition",
            "3dafe3882af07fbeb95ef9c9ef3a9b5aab9d6111"
        ],
        [
            "Section TotalAction.",
            "VernacBeginSection",
            "23be68454c5a683a2c798453e8bce8cd1f8fe1a1"
        ],
        [
            "Variables (aT : finGroupType) (rT : Type) (to : rT -> aT -> rT).",
            "VernacAssumption",
            "6a175c42acde943a2864e255176606376f991f85"
        ],
        [
            "Hypotheses (to1 : to^~ 1 =1 id) (toM : forall x, act_morph to x).",
            "VernacAssumption",
            "1f4e6ba6f952e7fbcf015f2b4bb9fa3a46f5c993"
        ],
        [
            "Lemma is_total_action : is_action setT to.",
            "VernacStartTheoremProof",
            "85791b8f25f741290406b73e9112cb145368782e"
        ],
        [
            "split=> [a | x a b _ _] /=; last by rewrite toM.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: can_inj (to^~ a^-1) _ => x; rewrite -toM ?mulgV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition TotalAction := Action is_total_action.",
            "VernacDefinition",
            "6c7e1eff9ed462d20f95d8746ccae5330eafb9de"
        ],
        [
            "End TotalAction.",
            "VernacEndSegment",
            "803e0e74fcc659f16131fc858f4401743765e028"
        ],
        [
            "Section ActionDefs.",
            "VernacBeginSection",
            "f70cf1fe940b89115a3f19e7b31dcfe2394337b4"
        ],
        [
            "Variables (aT aT' : finGroupType) (D : {set aT}) (D' : {set aT'}).",
            "VernacAssumption",
            "bfc0a5e9ed180c6be3ba67d2cc98faf97025e169"
        ],
        [
            "Definition morph_act rT rT' (to : action D rT) (to' : action D' rT') f fA := forall x a, f (to x a) = to' (f x) (fA a).",
            "VernacDefinition",
            "69f9c2106d5b58aafc6b0cbebdef74aaaf9af56d"
        ],
        [
            "Variable rT : finType.",
            "VernacAssumption",
            "f3f924737963ca1711007527ea33e64499d0622a"
        ],
        [
            "Implicit Type to : action D rT.",
            "VernacReserve",
            "5547c45515e0b796290ddeba25c2858b009bab3e"
        ],
        [
            "Implicit Type A : {set aT}.",
            "VernacReserve",
            "ee3779257cd003c0985795fc4e8b8630d6d2d22e"
        ],
        [
            "Implicit Type S : {set rT}.",
            "VernacReserve",
            "6fa89eafa2e04d4f611434b90dec50d86c9a15f0"
        ],
        [
            "Definition actm to a := if a \\in D then to^~ a else id.",
            "VernacDefinition",
            "d1baa8f07823be13b9f9dd4308f426f1e2fb5c11"
        ],
        [
            "Definition setact to S a := [set to x a | x in S].",
            "VernacDefinition",
            "659ebead6a3fcfa8a2fdf994186341bc67fa8d90"
        ],
        [
            "Definition orbit to A x := to x @: A.",
            "VernacDefinition",
            "456718142dd3556d42d5d4199e3d529a1bb54aa5"
        ],
        [
            "Definition amove to A x y := [set a in A | to x a == y].",
            "VernacDefinition",
            "08564888b96c92738387ef8a0fd87bd24d873688"
        ],
        [
            "Definition afix to A := [set x | A \\subset [set a | to x a == x]].",
            "VernacDefinition",
            "8699556873491e092d574b7001ccabece466bf6e"
        ],
        [
            "Definition astab S to := D :&: [set a | S \\subset [set x | to x a == x]].",
            "VernacDefinition",
            "e71a0046728c26ad31adde44dea66b70f702c4b2"
        ],
        [
            "Definition astabs S to := D :&: [set a | S \\subset to^~ a @^-1: S].",
            "VernacDefinition",
            "9e62ddf989d4531dff5d572b4a50b8e59ed86284"
        ],
        [
            "Definition acts_on A S to := {in A, forall a x, (to x a \\in S) = (x \\in S)}.",
            "VernacDefinition",
            "d5b549f172e1e7f039f0b09ef30c062aeb0a4aa3"
        ],
        [
            "Definition atrans A S to := S \\in orbit to A @: S.",
            "VernacDefinition",
            "ad3f9fa38069d1b82c77fa9e8dba924ca342fa0c"
        ],
        [
            "Definition faithful A S to := A :&: astab S to \\subset [1].",
            "VernacDefinition",
            "36bc060957cc8ed42bf58c634d60d7bd1a501364"
        ],
        [
            "End ActionDefs.",
            "VernacEndSegment",
            "dfb84c765accd5cf70022f0e58e4dd3acd942b87"
        ],
        [
            "Arguments setact {aT D%g rT} to%act S%g a%g.",
            "VernacArguments",
            "3b5a402abc6fbf13bac2cd8bda63db187e2b83b5"
        ],
        [
            "Arguments orbit {aT D%g rT} to%act A%g x%g.",
            "VernacArguments",
            "a2838e1c65f8d7e3faaec67780c65b8acc9afc01"
        ],
        [
            "Arguments amove {aT D%g rT} to%act A%g x%g y%g.",
            "VernacArguments",
            "8d5e687020b23ef6b4c498a3179f989f8c51e1b5"
        ],
        [
            "Arguments afix {aT D%g rT} to%act A%g.",
            "VernacArguments",
            "99d79c3b61dd51a36af34b6a91bcc3f77bdf04a1"
        ],
        [
            "Arguments astab {aT D%g rT} S%g to%act.",
            "VernacArguments",
            "f94933c8f53a1b8304b9fe263eb3054675760b91"
        ],
        [
            "Arguments astabs {aT D%g rT} S%g to%act.",
            "VernacArguments",
            "88739ebb9011110c4b0ba041f8a2e2e9eb5cf1bd"
        ],
        [
            "Arguments acts_on {aT D%g rT} A%g S%g to%act.",
            "VernacArguments",
            "ba8e08d1efcfae6f0428c78fc416fce818e9e10b"
        ],
        [
            "Arguments atrans {aT D%g rT} A%g S%g to%act.",
            "VernacArguments",
            "02d9a3040eda5ab7077b742ca5ed8d2d71937f1b"
        ],
        [
            "Arguments faithful {aT D%g rT} A%g S%g to%act.",
            "VernacArguments",
            "709c5c7e6f316ddb86f0b3eb9808c21ae0a8258e"
        ],
        [
            "Notation \"to ^*\" := (setact to) (at level 2, format \"to ^*\") : fun_scope.",
            "VernacNotation",
            "c32f9ce241c91421347d2387926b4aaa4f106b04"
        ],
        [
            "Prenex Implicits orbit amove.",
            "VernacExtend",
            "bdf6cdb7c41b65cb2953ab7597d62dac65950e71"
        ],
        [
            "Notation \"''Fix_' to ( A )\" := (afix to A) (at level 8, to at level 2, format \"''Fix_' to ( A )\") : group_scope.",
            "VernacNotation",
            "5aa1f5b672503ae133773193bf9b3947e58a8f59"
        ],
        [
            "Notation \"''Fix_' ( to ) ( A )\" := 'Fix_to(A) (at level 8, only parsing) : group_scope.",
            "VernacNotation",
            "fbc679e1145d940981305d9e7adacda474879909"
        ],
        [
            "Notation \"''Fix_' ( S | to ) ( A )\" := (S :&: 'Fix_to(A)) (at level 8, format \"''Fix_' ( S | to ) ( A )\") : group_scope.",
            "VernacNotation",
            "61d9a6d74cfbff7610458d7ce4ad8986d7affe04"
        ],
        [
            "Notation \"''Fix_' to [ a ]\" := ('Fix_to([set a])) (at level 8, to at level 2, format \"''Fix_' to [ a ]\") : group_scope.",
            "VernacNotation",
            "52e9df4619cf021e096391ba4a4cc10956f286b6"
        ],
        [
            "Notation \"''Fix_' ( S | to ) [ a ]\" := (S :&: 'Fix_to[a]) (at level 8, format \"''Fix_' ( S | to ) [ a ]\") : group_scope.",
            "VernacNotation",
            "57b37a61a128e2efb01710c439845f0dc0b7609d"
        ],
        [
            "Notation \"''C' ( S | to )\" := (astab S to) (at level 8, format \"''C' ( S | to )\") : group_scope.",
            "VernacNotation",
            "2624cabcf74cf9fc6d07a6987c7c7ca88ea580c9"
        ],
        [
            "Notation \"''C_' A ( S | to )\" := (A :&: 'C(S | to)) (at level 8, A at level 2, format \"''C_' A ( S | to )\") : group_scope.",
            "VernacNotation",
            "c8a582c1a75fc65ffc1a98afa4f90e26fdee8975"
        ],
        [
            "Notation \"''C_' ( A ) ( S | to )\" := 'C_A(S | to) (at level 8, only parsing) : group_scope.",
            "VernacNotation",
            "ef72368174ddbb548aafd55b1f69ae2f06a8cc71"
        ],
        [
            "Notation \"''C' [ x | to ]\" := ('C([set x] | to)) (at level 8, format \"''C' [ x | to ]\") : group_scope.",
            "VernacNotation",
            "e3c6f024c1eca3b1e3112d7be2e284eb7436863b"
        ],
        [
            "Notation \"''C_' A [ x | to ]\" := (A :&: 'C[x | to]) (at level 8, A at level 2, format \"''C_' A [ x | to ]\") : group_scope.",
            "VernacNotation",
            "1ee2141d87b4b5d21e08f844057ed7ebcdd4ce04"
        ],
        [
            "Notation \"''C_' ( A ) [ x | to ]\" := 'C_A[x | to] (at level 8, only parsing) : group_scope.",
            "VernacNotation",
            "8409b16936b65b56c69af1df115abbcf8d41fbec"
        ],
        [
            "Notation \"''N' ( S | to )\" := (astabs S to) (at level 8, format \"''N' ( S | to )\") : group_scope.",
            "VernacNotation",
            "6f875a886010f2512cbdd5b2cf627d8d48db97e4"
        ],
        [
            "Notation \"''N_' A ( S | to )\" := (A :&: 'N(S | to)) (at level 8, A at level 2, format \"''N_' A ( S | to )\") : group_scope.",
            "VernacNotation",
            "80ff7e1c8ac2e4918e0f0b4b350861e528d5d462"
        ],
        [
            "Notation \"[ 'acts' A , 'on' S | to ]\" := (A \\subset pred_of_set 'N(S | to)) (at level 0, format \"[ 'acts' A , 'on' S | to ]\") : form_scope.",
            "VernacNotation",
            "7de0257480bd5760766f487c57c287514de0e1df"
        ],
        [
            "Notation \"{ 'acts' A , 'on' S | to }\" := (acts_on A S to) (at level 0, format \"{ 'acts' A , 'on' S | to }\") : form_scope.",
            "VernacNotation",
            "dc374a4dc6ea90867b242f02daa69d06425effaf"
        ],
        [
            "Notation \"[ 'transitive' A , 'on' S | to ]\" := (atrans A S to) (at level 0, format \"[ 'transitive' A , 'on' S | to ]\") : form_scope.",
            "VernacNotation",
            "d6a796b5d408e6c2bb8b0b810a8bc0d1bcb847e4"
        ],
        [
            "Notation \"[ 'faithful' A , 'on' S | to ]\" := (faithful A S to) (at level 0, format \"[ 'faithful' A , 'on' S | to ]\") : form_scope.",
            "VernacNotation",
            "29c3f89161a5217e027c1da331fa37653cba0f62"
        ],
        [
            "Section RawAction.",
            "VernacBeginSection",
            "0ddc3e09b512d5d24b30d83fcd73a0f9dedac717"
        ],
        [
            "Variables (aT : finGroupType) (D : {set aT}) (rT : finType) (to : action D rT).",
            "VernacAssumption",
            "2c8f0225361eea610882203a0efc31ba9dbbb3ee"
        ],
        [
            "Implicit Types (a : aT) (x y : rT) (A B : {set aT}) (S T : {set rT}).",
            "VernacReserve",
            "7fdfd56878ddcd841e1ef08bc4ee3cf4e0c93db5"
        ],
        [
            "Lemma act_inj : left_injective to.",
            "VernacStartTheoremProof",
            "38359ee1bbab38c77b8f64e7d04c38c82d077f28"
        ],
        [
            "by case: to => ? [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments act_inj : clear implicits.",
            "VernacArguments",
            "cf1a953b78d88bcaae72bfc92731b0bc70c6169e"
        ],
        [
            "Lemma actMin x : {in D &, act_morph to x}.",
            "VernacStartTheoremProof",
            "01025a1b289b766c8a39585524781ba75bea6b5c"
        ],
        [
            "by case: to => ? [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actmEfun a : a \\in D -> actm to a = to^~ a.",
            "VernacStartTheoremProof",
            "a6ba50569d8e1b69389fe479bfb9100c590dc63d"
        ],
        [
            "by rewrite /actm => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actmE a : a \\in D -> actm to a =1 to^~ a.",
            "VernacStartTheoremProof",
            "c401e5ae800fc03362d5cef9d3ed80109383b6b6"
        ],
        [
            "by move=> Da; rewrite actmEfun.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma setactE S a : to^* S a = [set to x a | x in S].",
            "VernacStartTheoremProof",
            "628bdad3ec42d868e10143b79cc1e1ff4a7412ba"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_setact S a x : x \\in S -> to x a \\in to^* S a.",
            "VernacStartTheoremProof",
            "0fefcb9788a2e3bc55f45ff253fa915711600404"
        ],
        [
            "exact: mem_imset.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_setact S a : #|to^* S a| = #|S|.",
            "VernacStartTheoremProof",
            "9e2e9da21b3e9afbd43895c5dfa1be648cd19276"
        ],
        [
            "by apply: card_imset; apply: act_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma setact_is_action : is_action D to^*.",
            "VernacStartTheoremProof",
            "9aa9c5a372f5d57b71a04e732680f5b2a376f85f"
        ],
        [
            "split=> [a R S eqRS | a b Da Db S]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /setact /= -imset_comp; apply: eq_imset => x; apply: actMin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/setP=> x; apply/idP/idP=> /(mem_setact a).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite eqRS => /imsetP[y Sy /act_inj->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -eqRS => /imsetP[y Sy /act_inj->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical set_action := Action setact_is_action.",
            "VernacDefinition",
            "64cf3b3a0314f407bb2da9842d548c503a479778"
        ],
        [
            "Lemma orbitE A x : orbit to A x = to x @: A.",
            "VernacStartTheoremProof",
            "bd35f7ec1f3e75e92fa0c146bc5cafca47ed69f2"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbitP A x y : reflect (exists2 a, a \\in A & to x a = y) (y \\in orbit to A x).",
            "VernacStartTheoremProof",
            "26715ea26210ac3f10b93d19678858e7e205d7fb"
        ],
        [
            "by apply: (iffP imsetP) => [] [a]; exists a.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_orbit A x a : a \\in A -> to x a \\in orbit to A x.",
            "VernacStartTheoremProof",
            "cde2adc65b1a5ece5fe68225ec735946dfebc707"
        ],
        [
            "exact: mem_imset.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afixP A x : reflect (forall a, a \\in A -> to x a = x) (x \\in 'Fix_to(A)).",
            "VernacStartTheoremProof",
            "2227669526e75f6b70d62d3f486211c924668823"
        ],
        [
            "rewrite inE; apply: (iffP subsetP) => [xfix a /xfix | xfix a Aa].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite inE => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite inE xfix.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afixS A B : A \\subset B -> 'Fix_to(B) \\subset 'Fix_to(A).",
            "VernacStartTheoremProof",
            "7c92c4087a5d2207f4e759cbb832106b388b47c8"
        ],
        [
            "by move=> sAB; apply/subsetP=> u; rewrite !inE; apply: subset_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afixU A B : 'Fix_to(A :|: B) = 'Fix_to(A) :&: 'Fix_to(B).",
            "VernacStartTheoremProof",
            "829b56ba9e8ccee9990385d533c1a54ce205e994"
        ],
        [
            "by apply/setP=> x; rewrite !inE subUset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afix1P a x : reflect (to x a = x) (x \\in 'Fix_to[a]).",
            "VernacStartTheoremProof",
            "22a68fb1ef3bcc5de1f46fbd07a84d7a3f9cc17b"
        ],
        [
            "by rewrite inE sub1set inE; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabIdom S : 'C_D(S | to) = 'C(S | to).",
            "VernacStartTheoremProof",
            "a827f5ee1dcf4c41c460ca73b63924fc99d08799"
        ],
        [
            "by rewrite setIA setIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_dom S : {subset 'C(S | to) <= D}.",
            "VernacStartTheoremProof",
            "ed4fef2db72f70546de61e9b43a8db4552dbd51b"
        ],
        [
            "by move=> a /setIP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_act S a x : a \\in 'C(S | to) -> x \\in S -> to x a = x.",
            "VernacStartTheoremProof",
            "100d55fb0c88ad1697c743602716fa5e8414df23"
        ],
        [
            "rewrite 2!inE => /andP[_ cSa] Sx; apply/eqP.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by have:= subsetP cSa x Sx; rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabS S1 S2 : S1 \\subset S2 -> 'C(S2 | to) \\subset 'C(S1 | to).",
            "VernacStartTheoremProof",
            "6c1ba722f313e57310898e4b2b53ce9b53a76861"
        ],
        [
            "move=> sS12; apply/subsetP=> x; rewrite !inE => /andP[->].",
            "VernacExtend",
            "b7d55d5cc9e609b184db748f6780e12224901e48"
        ],
        [
            "exact: subset_trans.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabsIdom S : 'N_D(S | to) = 'N(S | to).",
            "VernacStartTheoremProof",
            "4680e846ccf8ba59d7068d3339d83133061f53e7"
        ],
        [
            "by rewrite setIA setIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_dom S : {subset 'N(S | to) <= D}.",
            "VernacStartTheoremProof",
            "9a06dfece0a8a4770b6307ab7ffbb6e0231c7a3e"
        ],
        [
            "by move=> a /setIdP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_act S a x : a \\in 'N(S | to) -> (to x a \\in S) = (x \\in S).",
            "VernacStartTheoremProof",
            "c6944dc1ae93c05825823b32471d8dac40be47f5"
        ],
        [
            "rewrite 2!inE subEproper properEcard => /andP[_].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (card_preimset _ (act_inj _)) ltnn andbF orbF => /eqP{2}->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_sub S : 'C(S | to) \\subset 'N(S | to).",
            "VernacStartTheoremProof",
            "8d85d611eef51c21da939a76e4c59fbbe93813e4"
        ],
        [
            "apply/subsetP=> a cSa; rewrite !inE (astab_dom cSa).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply/subsetP=> x Sx; rewrite inE (astab_act cSa).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabsC S : 'N(~: S | to) = 'N(S | to).",
            "VernacStartTheoremProof",
            "d5b36e2a7306fd2c1ae8a73ee79055d1fa6092ee"
        ],
        [
            "apply/setP=> a; apply/idP/idP=> nSa; rewrite !inE (astabs_dom nSa).",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by rewrite -setCS -preimsetC; apply/subsetP=> x; rewrite inE astabs_act.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite preimsetC setCS; apply/subsetP=> x; rewrite inE astabs_act.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabsI S T : 'N(S | to) :&: 'N(T | to) \\subset 'N(S :&: T | to).",
            "VernacStartTheoremProof",
            "91f5ea53fdb6306bc43878445a935da8c3714e51"
        ],
        [
            "apply/subsetP=> a; rewrite !inE -!andbA preimsetI => /and4P[-> nSa _ nTa] /=.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite setISS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_setact S a : a \\in 'N(S | to) -> to^* S a = S.",
            "VernacStartTheoremProof",
            "ef6a94bc1590913faf313c052a0695fbb027d52d"
        ],
        [
            "move=> nSa; apply/eqP; rewrite eqEcard card_setact leqnn andbT.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by apply/subsetP=> _ /imsetP[x Sx ->]; rewrite astabs_act.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab1_set S : 'C[S | set_action] = 'N(S | to).",
            "VernacStartTheoremProof",
            "33bc71caf632868a4811db0e13da75fababdbdd4"
        ],
        [
            "apply/setP=> a; apply/idP/idP=> nSa.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "case/setIdP: nSa => Da; rewrite !inE Da sub1set inE => /eqP defS.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by apply/subsetP=> x Sx; rewrite inE -defS mem_setact.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite !inE (astabs_dom nSa) sub1set inE /= astabs_setact.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_set1 x : 'N([set x] | to) = 'C[x | to].",
            "VernacStartTheoremProof",
            "eeb43fb14a7f155f061a689a9cf6283e82e5f032"
        ],
        [
            "apply/eqP; rewrite eqEsubset astab_sub andbC setIS //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply/subsetP=> a; rewrite ?(inE,sub1set).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_dom A S : [acts A, on S | to] -> A \\subset D.",
            "VernacStartTheoremProof",
            "b7e174d933971ad1265cf78e7c459428ae6b735a"
        ],
        [
            "by move=> nSA; rewrite (subset_trans nSA) ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_act A S : [acts A, on S | to] -> {acts A, on S | to}.",
            "VernacStartTheoremProof",
            "292dc4962252784e3d5399cb9aa3c0275e0b9e5c"
        ],
        [
            "by move=> nAS a Aa x; rewrite astabs_act ?(subsetP nAS).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabCin A S : A \\subset D -> (A \\subset 'C(S | to)) = (S \\subset 'Fix_to(A)).",
            "VernacStartTheoremProof",
            "7f76592f7313923b8a680cf662c514ebb17450e6"
        ],
        [
            "move=> sAD; apply/subsetP/subsetP=> [sAC x xS | sSF a aA].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply/afixP=> a aA; apply: astab_act (sAC _ aA) xS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !inE (subsetP sAD _ aA); apply/subsetP=> x xS.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by move/afixP/(_ _ aA): (sSF _ xS); rewrite inE => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ActsSetop.",
            "VernacBeginSection",
            "b6ab72ccd8d895f61c5a18730847247c2faa19c1"
        ],
        [
            "Variables (A : {set aT}) (S T : {set rT}).",
            "VernacAssumption",
            "37c4d998b6d1c3c06ecf79811333a14f7b903548"
        ],
        [
            "Hypotheses (AactS : [acts A, on S | to]) (AactT : [acts A, on T | to]).",
            "VernacAssumption",
            "d5528d05a38e4bb9af6eb2933ff4fc60cbb7a1e0"
        ],
        [
            "Lemma astabU : 'C(S :|: T | to) = 'C(S | to) :&: 'C(T | to).",
            "VernacStartTheoremProof",
            "53e83e8e62c1cf79752ad185d03fba5ea3f792ee"
        ],
        [
            "by apply/setP=> a; rewrite !inE subUset; case: (a \\in D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabsU : 'N(S | to) :&: 'N(T | to) \\subset 'N(S :|: T | to).",
            "VernacStartTheoremProof",
            "3d3cf1e412a0ef32a4aac945ea5102235c2daa67"
        ],
        [
            "by rewrite -(astabsC S) -(astabsC T) -(astabsC (S :|: T)) setCU astabsI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabsD : 'N(S | to) :&: 'N(T | to) \\subset 'N(S :\\: T| to).",
            "VernacStartTheoremProof",
            "91395eb04582aeab1d92d2f5730da3e1ee0176fa"
        ],
        [
            "by rewrite setDE -(astabsC T) astabsI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actsI : [acts A, on S :&: T | to].",
            "VernacStartTheoremProof",
            "3c9409be4318f08a79c9cab7b0569937b630828a"
        ],
        [
            "by apply: subset_trans (astabsI S T); rewrite subsetI AactS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actsU : [acts A, on S :|: T | to].",
            "VernacStartTheoremProof",
            "d79859bb8943901556c173e29d0a893b19b1aa4f"
        ],
        [
            "by apply: subset_trans astabsU; rewrite subsetI AactS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actsD : [acts A, on S :\\: T | to].",
            "VernacStartTheoremProof",
            "937962e3cf8603da2e8df813e583ffb26f9a1de6"
        ],
        [
            "by apply: subset_trans astabsD; rewrite subsetI AactS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ActsSetop.",
            "VernacEndSegment",
            "d391a2aba1c4b84e02a93668e20b1fac0b40eded"
        ],
        [
            "Lemma acts_in_orbit A S x y : [acts A, on S | to] -> y \\in orbit to A x -> x \\in S -> y \\in S.",
            "VernacStartTheoremProof",
            "ceee54c176b374711b43b99710a35aca822ac318"
        ],
        [
            "by move=> nSA/imsetP[a Aa ->{y}] Sx; rewrite (astabs_act _ (subsetP nSA a Aa)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_faithful A B S : B \\subset A -> [faithful A, on S | to] -> [faithful B, on S | to].",
            "VernacStartTheoremProof",
            "6a21d12193db94fe71543063f5bc0f66de5ade8d"
        ],
        [
            "by move=> sAB; apply: subset_trans; apply: setSI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Reindex.",
            "VernacBeginSection",
            "fa5f4368ea35a2c9c01d27aec0359da2465f687b"
        ],
        [
            "Variables (vT : Type) (idx : vT) (op : Monoid.com_law idx) (S : {set rT}).",
            "VernacAssumption",
            "2c372d99bd4e0d4cd00fa4a80bc971b5b7b9a6ee"
        ],
        [
            "Lemma reindex_astabs a F : a \\in 'N(S | to) -> \\big[op/idx]_(i in S) F i = \\big[op/idx]_(i in S) F (to i a).",
            "VernacStartTheoremProof",
            "837302dcc4251fbae4b30b7d9d6e62eb6ee1ffce"
        ],
        [
            "move=> nSa; rewrite (reindex_inj (act_inj a)); apply: eq_bigl => x.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "exact: astabs_act.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reindex_acts A a F : [acts A, on S | to] -> a \\in A -> \\big[op/idx]_(i in S) F i = \\big[op/idx]_(i in S) F (to i a).",
            "VernacStartTheoremProof",
            "bc86677f1c308cb30c1dde3d0a1d7a19dfb104b0"
        ],
        [
            "by move=> nSA /(subsetP nSA); apply: reindex_astabs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Reindex.",
            "VernacEndSegment",
            "fcd24418dd7fa49bbb0342f7a75373cabb85c7cc"
        ],
        [
            "End RawAction.",
            "VernacEndSegment",
            "a26b60ae8d675a7e9c77f2bd130ee6d7056d462a"
        ],
        [
            "Arguments act_inj {aT D rT} to a [x1 x2] : rename.",
            "VernacArguments",
            "808560d385b7881c28692ed1da32947c6cf14ebd"
        ],
        [
            "Notation \"to ^*\" := (set_action to) : action_scope.",
            "VernacNotation",
            "0a4bbf75551fa52fa2209580a55284271ddc8d71"
        ],
        [
            "Arguments orbitP {aT D rT to A x y}.",
            "VernacArguments",
            "d4fa21c8217c08f4d25421f8835ed7467ac6784b"
        ],
        [
            "Arguments afixP {aT D rT to A x}.",
            "VernacArguments",
            "52e6b55d9f0b323a79e61e65e47e6a620bbcf86d"
        ],
        [
            "Arguments afix1P {aT D rT to a x}.",
            "VernacArguments",
            "beb21b74fd4f67255fe66d415061b5ade21bc804"
        ],
        [
            "Arguments reindex_astabs [aT D rT] to [vT idx op S] a [F].",
            "VernacArguments",
            "67c3475d732dc8b29d15750341bf0eb0fd2eac26"
        ],
        [
            "Arguments reindex_acts [aT D rT] to [vT idx op S A a F].",
            "VernacArguments",
            "9286f4cb3910da6f977b90190ae8784243739c35"
        ],
        [
            "Section PartialAction.",
            "VernacBeginSection",
            "45c005a856b956f65ab7ecdeb469c50504201c90"
        ],
        [
            "Variables (aT : finGroupType) (D : {group aT}) (rT : finType).",
            "VernacAssumption",
            "e632a6871b54377db454f7de7407029cf8b1537e"
        ],
        [
            "Variable to : action D rT.",
            "VernacAssumption",
            "b9526a37c12151838390355907ab0fad44bfeba3"
        ],
        [
            "Implicit Types a : aT.",
            "VernacReserve",
            "bc3b416d36b1e868f76f882270c5aa23f533787d"
        ],
        [
            "Implicit Types x y : rT.",
            "VernacReserve",
            "36469a28aad1f28e2428c29091ed36e94178c5ce"
        ],
        [
            "Implicit Types A B : {set aT}.",
            "VernacReserve",
            "cba199870ca25ade6760f7a7db6e8bf94a611b90"
        ],
        [
            "Implicit Types G H : {group aT}.",
            "VernacReserve",
            "a13fcfdf12efc37659f1b02da060aa8f6a0df4de"
        ],
        [
            "Implicit Types S : {set rT}.",
            "VernacReserve",
            "6fa89eafa2e04d4f611434b90dec50d86c9a15f0"
        ],
        [
            "Lemma act1 x : to x 1 = x.",
            "VernacStartTheoremProof",
            "919ea04b1dd8a9643a7bf8f6626b7e7a64835084"
        ],
        [
            "by apply: (act_inj to 1); rewrite -actMin ?mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actKin : {in D, right_loop invg to}.",
            "VernacStartTheoremProof",
            "9370edbce5ffaa8ab0297ce74f7cf85251660e21"
        ],
        [
            "by move=> a Da /= x; rewrite -actMin ?groupV // mulgV act1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actKVin : {in D, rev_right_loop invg to}.",
            "VernacStartTheoremProof",
            "28fce4becb630594d07c22cc35cb05b6e014690c"
        ],
        [
            "by move=> a Da /= x; rewrite -{2}(invgK a) actKin ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma setactVin S a : a \\in D -> to^* S a^-1 = to^~ a @^-1: S.",
            "VernacStartTheoremProof",
            "10ae742b57b22fca8f844e3bc0f56b964c903c3d"
        ],
        [
            "by move=> Da; apply: can2_imset_pre; [apply: actKVin | apply: actKin].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actXin x a i : a \\in D -> to x (a ^+ i) = iter i (to^~ a) x.",
            "VernacStartTheoremProof",
            "d2735929b0825515156193b47087eec609b01ab2"
        ],
        [
            "move=> Da; elim: i => /= [|i <-]; first by rewrite act1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite expgSr actMin ?groupX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afix1 : 'Fix_to(1) = setT.",
            "VernacStartTheoremProof",
            "cfcdd01c705a40d8ea1a6da8f2f34e03af47ef8f"
        ],
        [
            "by apply/setP=> x; rewrite !inE sub1set inE act1 eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afixD1 G : 'Fix_to(G^#) = 'Fix_to(G).",
            "VernacStartTheoremProof",
            "5d2807500bc10eb0d25e132dee5a662a7c2a1854"
        ],
        [
            "by rewrite -{2}(setD1K (group1 G)) afixU afix1 setTI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_refl G x : x \\in orbit to G x.",
            "VernacStartTheoremProof",
            "a1fe2ac1a0229b1fc5eba0516183a941e1fb9c1d"
        ],
        [
            "by rewrite -{1}[x]act1 mem_orbit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation orbit_rel A := (fun x y => x \\in orbit to A y).",
            "VernacSyntacticDefinition",
            "2972a8dc5cfa8e8da8c6f87b0d805381260c575c"
        ],
        [
            "Lemma contra_orbit G x y : x \\notin orbit to G y -> x != y.",
            "VernacStartTheoremProof",
            "f0506783a364e1325b024ef1e9cbd59b04d23a41"
        ],
        [
            "by apply: contraNneq => ->; apply: orbit_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_in_sym G : G \\subset D -> symmetric (orbit_rel G).",
            "VernacStartTheoremProof",
            "1ec90c6cb160e2b83d2352ace1103e7288a321eb"
        ],
        [
            "move=> sGD; apply: symmetric_from_pre => x y /imsetP[a Ga].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by move/(canLR (actKin (subsetP sGD a Ga))) <-; rewrite mem_orbit ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_in_trans G : G \\subset D -> transitive (orbit_rel G).",
            "VernacStartTheoremProof",
            "b99d54e117c8a4df11bc16ddb09164439bda0b8e"
        ],
        [
            "move=> sGD _ _ z /imsetP[a Ga ->] /imsetP[b Gb ->].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite -actMin ?mem_orbit ?groupM // (subsetP sGD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_in_eqP G x y : G \\subset D -> reflect (orbit to G x = orbit to G y) (x \\in orbit to G y).",
            "VernacStartTheoremProof",
            "ab688b74128c68da45c08b4c282f698c0004773d"
        ],
        [
            "move=> sGD; apply: (iffP idP) => [yGx|<-]; last exact: orbit_refl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/setP=> z; apply/idP/idP=> /orbit_in_trans-> //; rewrite orbit_in_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_in_transl G x y z : G \\subset D -> y \\in orbit to G x -> (y \\in orbit to G z) = (x \\in orbit to G z).",
            "VernacStartTheoremProof",
            "b1a738f62ea11196b04ca7e49295114522d77ba1"
        ],
        [
            "by move=> sGD Gxy; rewrite !(orbit_in_sym sGD _ z) (orbit_in_eqP y x sGD Gxy).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_act_in x a G : G \\subset D -> a \\in G -> orbit to G (to x a) = orbit to G x.",
            "VernacStartTheoremProof",
            "dc940dd01a3b56ad7f927fad19c1e882ab407760"
        ],
        [
            "by move=> sGD /mem_orbit/orbit_in_eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_actr_in x a G y : G \\subset D -> a \\in G -> (to y a \\in orbit to G x) = (y \\in orbit to G x).",
            "VernacStartTheoremProof",
            "bdb8f733f5eaf8c56d2bbdf0650cd20d1d3c1ffb"
        ],
        [
            "by move=> sGD /mem_orbit/orbit_in_transl->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_inv_in A x y : A \\subset D -> (y \\in orbit to A^-1 x) = (x \\in orbit to A y).",
            "VernacStartTheoremProof",
            "146e6c8493a51458cc8d906437f216b8ce7f73d5"
        ],
        [
            "move/subsetP=> sAD; apply/imsetP/imsetP=> [] [a Aa ->].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by exists a^-1; rewrite -?mem_invg ?actKin // -groupV sAD -?mem_invg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists a^-1; rewrite ?memV_invg ?actKin // sAD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_lcoset_in A a x : A \\subset D -> a \\in D -> orbit to (a *: A) x = orbit to A (to x a).",
            "VernacStartTheoremProof",
            "91d93a9e079775c1fb13e99c259c8c705756f5ba"
        ],
        [
            "move/subsetP=> sAD Da; apply/setP=> y; apply/imsetP/imsetP=> [] [b Ab ->{y}].",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by exists (a^-1 * b); rewrite -?actMin ?mulKVg // ?sAD -?mem_lcoset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists (a * b); rewrite ?mem_mulg ?set11 ?actMin // sAD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_rcoset_in A a x y : A \\subset D -> a \\in D -> (to y a \\in orbit to (A :* a) x) = (y \\in orbit to A x).",
            "VernacStartTheoremProof",
            "1d29aa6ef1845000217fdbcddb08b76ae94de3ab"
        ],
        [
            "move=> sAD Da; rewrite -orbit_inv_in ?mul_subG ?sub1set // invMg.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite invg_set1 orbit_lcoset_in ?inv_subG ?groupV ?actKin ?orbit_inv_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_conjsg_in A a x y : A \\subset D -> a \\in D -> (to y a \\in orbit to (A :^ a) (to x a)) = (y \\in orbit to A x).",
            "VernacStartTheoremProof",
            "25b47959d53fee990b72f7e26e005d39cb7019f6"
        ],
        [
            "move=> sAD Da; rewrite conjsgE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite orbit_lcoset_in ?groupV ?mul_subG ?sub1set ?actKin ?orbit_rcoset_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit1P G x : reflect (orbit to G x = [set x]) (x \\in 'Fix_to(G)).",
            "VernacStartTheoremProof",
            "d460108b3cdcc96b976cd52dc6d500eb64fac238"
        ],
        [
            "apply: (iffP afixP) => [xfix | xfix a Ga].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/eqP; rewrite eq_sym eqEsubset sub1set -{1}[x]act1 mem_imset //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply/subsetP=> y; case/imsetP=> a Ga ->; rewrite inE xfix.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/set1P; rewrite -xfix mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_orbit1 G x : #|orbit to G x| = 1%N -> orbit to G x = [set x].",
            "VernacStartTheoremProof",
            "0df2a77e916a2a278459af00460dd62ecae12b14"
        ],
        [
            "move=> orb1; apply/eqP; rewrite eq_sym eqEcard {}orb1 cards1.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite sub1set orbit_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_partition G S : [acts G, on S | to] -> partition (orbit to G @: S) S.",
            "VernacStartTheoremProof",
            "4fdd7368f2bfe823366ace879c572fd7d412d119"
        ],
        [
            "move=> actsGS; have sGD := acts_dom actsGS.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have eqiG: {in S & &, equivalence_rel [rel x y | y \\in orbit to G x]}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> x y z * /=; rewrite orbit_refl; split=> // /orbit_in_eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr (partition _ _): (equivalence_partitionP eqiG).",
            "VernacExtend",
            "f3a9615ebe5fa15549c1ecd556f50efbdb2824d9"
        ],
        [
            "apply: eq_in_imset => x Sx; apply/setP=> y.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite inE /= andb_idl // => /acts_in_orbit->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition orbit_transversal A S := transversal (orbit to A @: S) S.",
            "VernacDefinition",
            "949b90a136de48ede7c9492fd8e4475544b44679"
        ],
        [
            "Lemma orbit_transversalP G S (P := orbit to G @: S) (X := orbit_transversal G S) : [acts G, on S | to] -> [/\\ is_transversal X P S, X \\subset S, {in X &, forall x y, (y \\in orbit to G x) = (x == y)} & forall x, x \\in S -> exists2 a, a \\in G & to x a \\in X].",
            "VernacStartTheoremProof",
            "d699f0487a0c2ed74138d23d6b96383a2c832a96"
        ],
        [
            "move/orbit_partition; rewrite -/P => partP.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have [/eqP defS tiP _] := and3P partP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have trXP: is_transversal X P S := transversalP partP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sXS: X \\subset S := transversal_sub trXP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=> // [x y Xx Xy /= | x Sx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have Sx := subsetP sXS x Xx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(inj_in_eq (pblock_inj trXP)) // eq_pblock ?defS //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (def_pblock tiP (mem_imset _ Sx)) ?orbit_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /imsetP[y Xy defxG]: orbit to G x \\in pblock P @: X.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (pblock_transversal trXP) ?mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices /orbitP[a Ga def_y]: y \\in orbit to G x by exists a; rewrite ?def_y.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite defxG mem_pblock defS (subsetP sXS).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma group_set_astab S : group_set 'C(S | to).",
            "VernacStartTheoremProof",
            "68bf69dcf7e6b5b2fa6676cb9ad0ab70a3761172"
        ],
        [
            "apply/group_setP; split=> [|a b cSa cSb].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite !inE group1; apply/subsetP=> x _; rewrite inE act1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !inE groupM ?(@astab_dom _ _ _ to S) //; apply/subsetP=> x Sx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite inE actMin ?(@astab_dom _ _ _ to S) ?(astab_act _ Sx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical astab_group S := group (group_set_astab S).",
            "VernacDefinition",
            "4e380a7d49fe08c84a9014cb5de4361883809bcd"
        ],
        [
            "Lemma afix_gen_in A : A \\subset D -> 'Fix_to(<<A>>) = 'Fix_to(A).",
            "VernacStartTheoremProof",
            "95ea348c4dc469605941db0338abee67fc668ce9"
        ],
        [
            "move=> sAD; apply/eqP; rewrite eqEsubset afixS ?sub_gen //=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -astabCin gen_subG ?astabCin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afix_cycle_in a : a \\in D -> 'Fix_to(<[a]>) = 'Fix_to[a].",
            "VernacStartTheoremProof",
            "9b50b68574f29e2f991c982d254daa9b2059df94"
        ],
        [
            "by move=> Da; rewrite afix_gen_in ?sub1set.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afixYin A B : A \\subset D -> B \\subset D -> 'Fix_to(A <*> B) = 'Fix_to(A) :&: 'Fix_to(B).",
            "VernacStartTheoremProof",
            "5538ca076d9758a529e395e1e2c65638d45b6aee"
        ],
        [
            "by move=> sAD sBD; rewrite afix_gen_in ?afixU // subUset sAD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afixMin G H : G \\subset D -> H \\subset D -> 'Fix_to(G * H) = 'Fix_to(G) :&: 'Fix_to(H).",
            "VernacStartTheoremProof",
            "86b1cf16299156980644e43aa4ab6ac961e1b2c5"
        ],
        [
            "by move=> sGD sHD; rewrite -afix_gen_in ?mul_subG // genM_join afixYin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_astab1_in A x : A \\subset D -> (A \\subset 'C[x | to]) = (x \\in 'Fix_to(A)).",
            "VernacStartTheoremProof",
            "b3bb29f78b036d90edd186ba132e23ab4b2c61d3"
        ],
        [
            "by move=> sAD; rewrite astabCin ?sub1set.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma group_set_astabs S : group_set 'N(S | to).",
            "VernacStartTheoremProof",
            "a27ae31268749b105770d5915d1a0c5ab05780f6"
        ],
        [
            "apply/group_setP; split=> [|a b cSa cSb].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite !inE group1; apply/subsetP=> x Sx; rewrite inE act1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !inE groupM ?(@astabs_dom _ _ _ to S) //; apply/subsetP=> x Sx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite inE actMin ?(@astabs_dom _ _ _ to S) ?astabs_act.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical astabs_group S := group (group_set_astabs S).",
            "VernacDefinition",
            "016d0c62d7ea1b248187d4b095ce44559f2c6f2a"
        ],
        [
            "Lemma astab_norm S : 'N(S | to) \\subset 'N('C(S | to)).",
            "VernacStartTheoremProof",
            "b750fb7d1645c5cd2dd6f418997007f38d94a354"
        ],
        [
            "apply/subsetP=> a nSa; rewrite inE sub_conjg; apply/subsetP=> b cSb.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "have [Da Db] := (astabs_dom nSa, astab_dom cSb).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mem_conjgV !inE groupJ //; apply/subsetP=> x Sx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite inE !actMin ?groupM ?groupV //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (astab_act cSb) ?actKVin ?astabs_act ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_normal S : 'C(S | to) <| 'N(S | to).",
            "VernacStartTheoremProof",
            "0ce154480d31a08e56a0059e461fed2bfc0d9ec2"
        ],
        [
            "by rewrite /normal astab_sub astab_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_sub_orbit G S x : [acts G, on S | to] -> (orbit to G x \\subset S) = (x \\in S).",
            "VernacStartTheoremProof",
            "22bc08913fc573b58fc22caf1d278c997b1bdb9c"
        ],
        [
            "move/acts_act=> GactS.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply/subsetP/idP=> [| Sx y]; first by apply; apply: orbit_refl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/orbitP=> a Ga <-{y}; rewrite GactS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_orbit G x : G \\subset D -> [acts G, on orbit to G x | to].",
            "VernacStartTheoremProof",
            "ef2b15ead6c71a1b2013b55a7dfb06c0a97bf8e9"
        ],
        [
            "move/subsetP=> sGD; apply/subsetP=> a Ga; rewrite !inE sGD //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply/subsetP=> _ /imsetP[b Gb ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite inE -actMin ?sGD // mem_imset ?groupM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_subnorm_fix A : [acts 'N_D(A), on 'Fix_to(D :&: A) | to].",
            "VernacStartTheoremProof",
            "e288b16380970c8e5b514a33a8b0e4b3c6d43aea"
        ],
        [
            "apply/subsetP=> a nAa; have [Da _] := setIP nAa; rewrite !inE Da.",
            "VernacExtend",
            "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
        ],
        [
            "apply/subsetP=> x Cx; rewrite inE; apply/afixP=> b DAb.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "have [Db _]:= setIP DAb; rewrite -actMin // conjgCV actMin ?groupJ ?groupV //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite /= (afixP Cx) // memJ_norm // groupV (subsetP (normsGI _ _) _ nAa).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atrans_orbit G x : [transitive G, on orbit to G x | to].",
            "VernacStartTheoremProof",
            "417c4c4c5c3238e7d92901a3bd133fe32e724955"
        ],
        [
            "by apply: mem_imset; apply: orbit_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section OrbitStabilizer.",
            "VernacBeginSection",
            "13484800e6f922fc64fd78a43036632e590c7ac8"
        ],
        [
            "Variables (G : {group aT}) (x : rT).",
            "VernacAssumption",
            "445c8d46306a7b1165405c6e9e4f3cf14e64674e"
        ],
        [
            "Hypothesis sGD : G \\subset D.",
            "VernacAssumption",
            "e5bee542dae4b94e2f2a5d0212db17bcb357c2f3"
        ],
        [
            "Let ssGD := subsetP sGD.",
            "VernacDefinition",
            "496d831012b77214832471262b19ae4a7384f61a"
        ],
        [
            "Lemma amove_act a : a \\in G -> amove to G x (to x a) = 'C_G[x | to] :* a.",
            "VernacStartTheoremProof",
            "818453aa31ad186c277551bde1ba05467cced64c"
        ],
        [
            "move=> Ga; apply/setP=> b; have Da := ssGD Ga.",
            "VernacExtend",
            "fcbc4db6275a8d44907e8ed4b44d2f7f279ee662"
        ],
        [
            "rewrite mem_rcoset !(inE, sub1set) !groupMr ?groupV //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case Gb: (b \\in G); rewrite //= actMin ?groupV ?ssGD ?(canF_eq (actKVin Da)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma amove_orbit : amove to G x @: orbit to G x = rcosets 'C_G[x | to] G.",
            "VernacStartTheoremProof",
            "aeaf60035a670a1f347cabb523b056abb37a6dda"
        ],
        [
            "apply/setP => Ha; apply/imsetP/rcosetsP=> [[y] | [a Ga ->]].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by case/imsetP=> b Gb -> ->{Ha y}; exists b => //; rewrite amove_act.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -amove_act //; exists (to x a); first apply: mem_orbit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma amoveK : {in orbit to G x, cancel (amove to G x) (fun Ca => to x (repr Ca))}.",
            "VernacStartTheoremProof",
            "7b7eaf518779ac539613d6e280684025f0c4085f"
        ],
        [
            "move=> _ /orbitP[a Ga <-]; rewrite amove_act //= -[G :&: _]/(gval _).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: repr_rcosetP => b; rewrite !(inE, sub1set)=> /and3P[Gb _ xbx].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite actMin ?ssGD ?(eqP xbx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_stabilizer : orbit to G x = [set to x (repr Ca) | Ca in rcosets 'C_G[x | to] G].",
            "VernacStartTheoremProof",
            "84e2981a731186ff0e9fdf1ce2cc4e469dbca405"
        ],
        [
            "rewrite -amove_orbit -imset_comp /=; apply/setP=> z.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply/idP/imsetP=> [xGz | [y xGy ->]]; first exists z; rewrite /= ?amoveK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma act_reprK : {in rcosets 'C_G[x | to] G, cancel (to x \\o repr) (amove to G x)}.",
            "VernacStartTheoremProof",
            "d246e3da3dad57a8c616db6dd170d01b0761dd12"
        ],
        [
            "move=> _ /rcosetsP[a Ga ->] /=; rewrite amove_act ?rcoset_repr //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -[G :&: _]/(gval _); case: repr_rcosetP => b /setIP[Gb _].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "exact: groupM.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OrbitStabilizer.",
            "VernacEndSegment",
            "c6017dd980e0564cb801c475c793a12505587962"
        ],
        [
            "Lemma card_orbit_in G x : G \\subset D -> #|orbit to G x| = #|G : 'C_G[x | to]|.",
            "VernacStartTheoremProof",
            "e866128df820359c017843ff0294de332b9eb342"
        ],
        [
            "move=> sGD; rewrite orbit_stabilizer 1?card_in_imset //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "exact: can_in_inj (act_reprK _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_orbit_in_stab G x : G \\subset D -> (#|orbit to G x| * #|'C_G[x | to]|)%N = #|G|.",
            "VernacStartTheoremProof",
            "0596d6ee0850831eb245c06176d71f904c68ebb2"
        ],
        [
            "by move=> sGD; rewrite mulnC card_orbit_in ?Lagrange ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_sum_card_orbit G S : [acts G, on S | to] -> \\sum_(T in orbit to G @: S) #|T| = #|S|.",
            "VernacStartTheoremProof",
            "96c67582d18606f634eeaa1b037f8a0312fc913d"
        ],
        [
            "by move/orbit_partition/card_partition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_setact_in S a : a \\in D -> 'C(to^* S a | to) = 'C(S | to) :^ a.",
            "VernacStartTheoremProof",
            "479a9b6e93508afbc0cbe281683ecf729d357d4c"
        ],
        [
            "move=> Da; apply/setP=> b; rewrite mem_conjg !inE -mem_conjg conjGid //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply: andb_id2l => Db; rewrite sub_imset_pre; apply: eq_subset_r => x.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite !inE !actMin ?groupM ?groupV // invgK (canF_eq (actKVin Da)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab1_act_in x a : a \\in D -> 'C[to x a | to] = 'C[x | to] :^ a.",
            "VernacStartTheoremProof",
            "64ecc776ff56f9b8a44d53d106704d8cf850a33f"
        ],
        [
            "by move=> Da; rewrite -astab_setact_in // /setact imset_set1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Frobenius_Cauchy G S : [acts G, on S | to] -> \\sum_(a in G) #|'Fix_(S | to)[a]| = (#|orbit to G @: S| * #|G|)%N.",
            "VernacStartTheoremProof",
            "21efe5e23a60b5a5a00c75e7eb20e8f46cd45b60"
        ],
        [
            "move=> GactS; have sGD := acts_dom GactS.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "transitivity (\\sum_(a in G) \\sum_(x in 'Fix_(S | to)[a]) 1%N).",
            "VernacExtend",
            "fcae5129231c3313daf6c0632385cff91918fa47"
        ],
        [
            "by apply: eq_bigr => a _; rewrite -sum1_card.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (exchange_big_dep (mem S)) /= => [|a x _]; last by case/setIP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (set_partition_big _ (orbit_partition GactS)) -sum_nat_const /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => _ /imsetP[x Sx ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -(card_orbit_in_stab x sGD) -sum_nat_const.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => y; rewrite orbit_in_sym // => /imsetP[a Ga defx].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite defx astab1_act_in ?(subsetP sGD) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{2}(conjGid Ga) -conjIg cardJg -sum1_card setIA (setIidPl sGD).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigl => b; rewrite !(sub1set, inE) -(acts_act GactS Ga) -defx Sx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atrans_dvd_index_in G S : G \\subset D -> [transitive G, on S | to] -> #|S| %| #|G : 'C_G(S | to)|.",
            "VernacStartTheoremProof",
            "964a25120ad170350f680ce3d7819a4a4876f3af"
        ],
        [
            "move=> sGD /imsetP[x Sx {1}->]; rewrite card_orbit_in //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite indexgS // setIS // astabS // sub1set.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atrans_dvd_in G S : G \\subset D -> [transitive G, on S | to] -> #|S| %| #|G|.",
            "VernacStartTheoremProof",
            "14565447f3079467547fe217f3aef0964719ced9"
        ],
        [
            "move=> sGD transG; apply: dvdn_trans (atrans_dvd_index_in sGD transG) _.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "exact: dvdn_indexg.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atransPin G S : G \\subset D -> [transitive G, on S | to] -> forall x, x \\in S -> orbit to G x = S.",
            "VernacStartTheoremProof",
            "c9cb67b9650e7a6e6c62dae3a1995f90262e97da"
        ],
        [
            "by move=> sGD /imsetP[y _ ->] x; apply/orbit_in_eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atransP2in G S : G \\subset D -> [transitive G, on S | to] -> {in S &, forall x y, exists2 a, a \\in G & y = to x a}.",
            "VernacStartTheoremProof",
            "0b8e0fdc458fa04f81ad3651e5bfd3cd85669e02"
        ],
        [
            "by move=> sGD transG x y /(atransPin sGD transG) <- /imsetP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atrans_acts_in G S : G \\subset D -> [transitive G, on S | to] -> [acts G, on S | to].",
            "VernacStartTheoremProof",
            "11d92ec22d41c8a7ee9e9e2a78a2961f6e4e098f"
        ],
        [
            "move=> sGD transG; apply/subsetP=> a Ga; rewrite !inE (subsetP sGD) //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by apply/subsetP=> x /(atransPin sGD transG) <-; rewrite inE mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subgroup_transitivePin G H S x : x \\in S -> H \\subset G -> G \\subset D -> [transitive G, on S | to] -> reflect ('C_G[x | to] * H = G) [transitive H, on S | to].",
            "VernacStartTheoremProof",
            "eb360cb0390e42255df2d5ce6e7e65d8379559e6"
        ],
        [
            "move=> Sx sHG sGD trG; have sHD := subset_trans sHG sGD.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply: (iffP idP) => [trH | defG].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite group_modr //; apply/setIidPl/subsetP=> a Ga.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have Sxa: to x a \\in S by rewrite (acts_act (atrans_acts_in sGD trG)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [b Hb xab]:= atransP2in sHD trH Sxa Sx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Da := subsetP sGD a Ga; have Db := subsetP sHD b Hb.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite -(mulgK b a) mem_mulg ?groupV // !inE groupM //= sub1set inE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite actMin -?xab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/imsetP; exists x => //; apply/setP=> y; rewrite -(atransPin sGD trG Sx).",
            "VernacExtend",
            "e9117678ab574c7b2c67a766017142cd191e8dff"
        ],
        [
            "apply/imsetP/imsetP=> [] [a]; last by exists a; first apply: (subsetP sHG).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -defG => /imset2P[c b /setIP[_ cxc] Hb ->] ->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exists b; rewrite ?actMin ?(astab_dom cxc) ?(subsetP sHD) //.",
            "VernacExtend",
            "063ddaff9732edb582a17c99c117fd04ff949391"
        ],
        [
            "by rewrite (astab_act cxc) ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PartialAction.",
            "VernacEndSegment",
            "46197dd2a18364c41495e8a997d9e0848907f404"
        ],
        [
            "Arguments orbit_transversal {aT D%g rT} to%act A%g S%g.",
            "VernacArguments",
            "b44cd8dbb62cc63c66924f6e84a927c7407ea31a"
        ],
        [
            "Arguments orbit_in_eqP {aT D rT to G x y}.",
            "VernacArguments",
            "9950f8fefec322e31bca793fedcefd02fd027620"
        ],
        [
            "Arguments orbit1P {aT D rT to G x}.",
            "VernacArguments",
            "32d02c8a6ffbd497dac1d1ab2a23c9ae926aa016"
        ],
        [
            "Arguments contra_orbit [aT D rT] to G [x y].",
            "VernacArguments",
            "d85c660d0b91c79cfa3ffffc2ed1c5da89f4f50d"
        ],
        [
            "Notation \"''C' ( S | to )\" := (astab_group to S) : Group_scope.",
            "VernacNotation",
            "fd63584d5c5607b8f55053be93173e5f6b5ff708"
        ],
        [
            "Notation \"''C_' A ( S | to )\" := (setI_group A 'C(S | to)) : Group_scope.",
            "VernacNotation",
            "a7f165d88aa9f8a56412f6ff4cfcaead3e997383"
        ],
        [
            "Notation \"''C_' ( A ) ( S | to )\" := (setI_group A 'C(S | to)) (only parsing) : Group_scope.",
            "VernacNotation",
            "192d2bc169a5bac765cce66835fd25dd6944c778"
        ],
        [
            "Notation \"''C' [ x | to ]\" := (astab_group to [set x%g]) : Group_scope.",
            "VernacNotation",
            "17fdb9e003552e0e1494d8bc276fa6f4c6c221ff"
        ],
        [
            "Notation \"''C_' A [ x | to ]\" := (setI_group A 'C[x | to]) : Group_scope.",
            "VernacNotation",
            "b4f038c315c5a9f1bebe694696f510b38ff9c85d"
        ],
        [
            "Notation \"''C_' ( A ) [ x | to ]\" := (setI_group A 'C[x | to]) (only parsing) : Group_scope.",
            "VernacNotation",
            "614b7cecf9b9ae66fa2b6460e50d9aca7a042d1e"
        ],
        [
            "Notation \"''N' ( S | to )\" := (astabs_group to S) : Group_scope.",
            "VernacNotation",
            "82ed1cdf9d2d58c9b338e27c0546e9a3fa9d2a00"
        ],
        [
            "Notation \"''N_' A ( S | to )\" := (setI_group A 'N(S | to)) : Group_scope.",
            "VernacNotation",
            "3fc9c816abd08cc41bcbaf934c9e676c3846db08"
        ],
        [
            "Section TotalActions.",
            "VernacBeginSection",
            "ddd791b6f51ac2d8e853469b0576dcecfc8cf3f1"
        ],
        [
            "Variable (aT : finGroupType) (rT : finType).",
            "VernacAssumption",
            "2ace556b72dc0674db46f467736ba11a72d9e641"
        ],
        [
            "Variable to : {action aT &-> rT}.",
            "VernacAssumption",
            "bf00432864aa13650e5f56f6ba2f454aa226ce3e"
        ],
        [
            "Implicit Types (a b : aT) (x y z : rT) (A B : {set aT}) (G H : {group aT}).",
            "VernacReserve",
            "5f9e7b2b65edb4fcda37d85e9b8cf3d61d710a58"
        ],
        [
            "Implicit Type S : {set rT}.",
            "VernacReserve",
            "6fa89eafa2e04d4f611434b90dec50d86c9a15f0"
        ],
        [
            "Lemma actM x a b : to x (a * b) = to (to x a) b.",
            "VernacStartTheoremProof",
            "038228f0ac1730679bc43a1fe6b933e5383629e8"
        ],
        [
            "by rewrite actMin ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actK : right_loop invg to.",
            "VernacStartTheoremProof",
            "e7db3fd8f1874ef133bdc29811d7d1f21e422bc3"
        ],
        [
            "by move=> a; apply: actKin; rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actKV : rev_right_loop invg to.",
            "VernacStartTheoremProof",
            "9d3491a9d18e31780191ac1d8591da9828a3248f"
        ],
        [
            "by move=> a; apply: actKVin; rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actX x a n : to x (a ^+ n) = iter n (to^~ a) x.",
            "VernacStartTheoremProof",
            "c7c7305db787522a1c56020e52a3f4bc9d2df862"
        ],
        [
            "by elim: n => [|n /= <-]; rewrite ?act1 // -actM expgSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actCJ a b x : to (to x a) b = to (to x b) (a ^ b).",
            "VernacStartTheoremProof",
            "ec6e4285c69840036d75fa87865feac01b338054"
        ],
        [
            "by rewrite !actM actK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actCJV a b x : to (to x a) b = to (to x (b ^ a^-1)) a.",
            "VernacStartTheoremProof",
            "0cc457554100dcdbc94dd50ca9c880541a58e634"
        ],
        [
            "by rewrite (actCJ _ a) conjgKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_sym G x y : (x \\in orbit to G y) = (y \\in orbit to G x).",
            "VernacStartTheoremProof",
            "770426cb166c541c7cfe9b44b019bd54e04e5382"
        ],
        [
            "exact/orbit_in_sym/subsetT.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_trans G x y z : x \\in orbit to G y -> y \\in orbit to G z -> x \\in orbit to G z.",
            "VernacStartTheoremProof",
            "231c04eb803c6d51a60dba94227bdd80e259fca4"
        ],
        [
            "exact/orbit_in_trans/subsetT.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_eqP G x y : reflect (orbit to G x = orbit to G y) (x \\in orbit to G y).",
            "VernacStartTheoremProof",
            "2fa3cc8253b19d79cec2c81c9db56f3634f2a1cc"
        ],
        [
            "exact/orbit_in_eqP/subsetT.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_transl G x y z : y \\in orbit to G x -> (y \\in orbit to G z) = (x \\in orbit to G z).",
            "VernacStartTheoremProof",
            "8015861494f052e2d8dacbbbcade42e637eecf09"
        ],
        [
            "exact/orbit_in_transl/subsetT.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_act G a x: a \\in G -> orbit to G (to x a) = orbit to G x.",
            "VernacStartTheoremProof",
            "897c419e3ae915087306ea9045dcf68ccbaa5879"
        ],
        [
            "exact/orbit_act_in/subsetT.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_actr G a x y : a \\in G -> (to y a \\in orbit to G x) = (y \\in orbit to G x).",
            "VernacStartTheoremProof",
            "87f4ea7b6f24c304dffdcfd558f7e320b606b358"
        ],
        [
            "by move/mem_orbit/orbit_transl; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_eq_mem G x y : (orbit to G x == orbit to G y) = (x \\in orbit to G y).",
            "VernacStartTheoremProof",
            "55f492b0e178743ddedcc9ca1779032674abca28"
        ],
        [
            "exact: sameP eqP (orbit_eqP G x y).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_inv A x y : (y \\in orbit to A^-1 x) = (x \\in orbit to A y).",
            "VernacStartTheoremProof",
            "50847595480bd06ece9ceae8c76ff67eb263620e"
        ],
        [
            "by rewrite orbit_inv_in ?subsetT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_lcoset A a x : orbit to (a *: A) x = orbit to A (to x a).",
            "VernacStartTheoremProof",
            "ad8333004d6729f0a838077ff0dd06e959b10056"
        ],
        [
            "by rewrite orbit_lcoset_in ?subsetT ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_rcoset A a x y : (to y a \\in orbit to (A :* a) x) = (y \\in orbit to A x).",
            "VernacStartTheoremProof",
            "44534505003797fb124735a9d15ee9f93a30efc2"
        ],
        [
            "by rewrite orbit_rcoset_in ?subsetT ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbit_conjsg A a x y : (to y a \\in orbit to (A :^ a) (to x a)) = (y \\in orbit to A x).",
            "VernacStartTheoremProof",
            "963d13e3c7c816cfca83365a6e34de9176c96d96"
        ],
        [
            "by rewrite orbit_conjsg_in ?subsetT ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabP S a : reflect (forall x, x \\in S -> to x a = x) (a \\in 'C(S | to)).",
            "VernacStartTheoremProof",
            "1a533d656b1a8936b1312d97694503e50cbc06a1"
        ],
        [
            "apply: (iffP idP) => [cSa x|cSa]; first exact: astab_act.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !inE; apply/subsetP=> x Sx; rewrite inE cSa.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab1P x a : reflect (to x a = x) (a \\in 'C[x | to]).",
            "VernacStartTheoremProof",
            "a64fae44af4c57121ca94723f049ad2c4bfb2a60"
        ],
        [
            "by rewrite !inE sub1set inE; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_astab1 A x : (A \\subset 'C[x | to]) = (x \\in 'Fix_to(A)).",
            "VernacStartTheoremProof",
            "dfe628041c3066103a0e2e8271b01a7a0abb95d3"
        ],
        [
            "by rewrite sub_astab1_in ?subsetT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabC A S : (A \\subset 'C(S | to)) = (S \\subset 'Fix_to(A)).",
            "VernacStartTheoremProof",
            "21a9f8044e81ab4dd4995fb0f4355017db47e00e"
        ],
        [
            "by rewrite astabCin ?subsetT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afix_cycle a : 'Fix_to(<[a]>) = 'Fix_to[a].",
            "VernacStartTheoremProof",
            "653e649ca955fa85e6c23c8c9db9c3f2df004864"
        ],
        [
            "by rewrite afix_cycle_in ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afix_gen A : 'Fix_to(<<A>>) = 'Fix_to(A).",
            "VernacStartTheoremProof",
            "47ed4c21d5422b1f824e5772960c6c2d106d3f84"
        ],
        [
            "by rewrite afix_gen_in ?subsetT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afixM G H : 'Fix_to(G * H) = 'Fix_to(G) :&: 'Fix_to(H).",
            "VernacStartTheoremProof",
            "10e2815b18cd344d9560de8b97ebafafaca7744a"
        ],
        [
            "by rewrite afixMin ?subsetT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabsP S a : reflect (forall x, (to x a \\in S) = (x \\in S)) (a \\in 'N(S | to)).",
            "VernacStartTheoremProof",
            "06aa1c44a93663f9583d32062a7e223258be4481"
        ],
        [
            "apply: (iffP idP) => [nSa x|nSa]; first exact: astabs_act.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !inE; apply/subsetP=> x; rewrite inE nSa.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_orbit G x : #|orbit to G x| = #|G : 'C_G[x | to]|.",
            "VernacStartTheoremProof",
            "14e4e55071d4a6c50ba1bc1a1c53004515ff52f8"
        ],
        [
            "by rewrite card_orbit_in ?subsetT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_orbit G x : #|orbit to G x| %| #|G|.",
            "VernacStartTheoremProof",
            "3f8f10dbd73fa0f8e146e2c373ed26b5a741bbc1"
        ],
        [
            "by rewrite card_orbit dvdn_indexg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_orbit_stab G x : (#|orbit to G x| * #|'C_G[x | to]|)%N = #|G|.",
            "VernacStartTheoremProof",
            "81dab10f7d39b7958b5ae3a13afa32eee1329f98"
        ],
        [
            "by rewrite mulnC card_orbit Lagrange ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actsP A S : reflect {acts A, on S | to} [acts A, on S | to].",
            "VernacStartTheoremProof",
            "fc71c525d886f4d1096ca9650fae461acc7db7c6"
        ],
        [
            "apply: (iffP idP) => [nSA x|nSA]; first exact: acts_act.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/subsetP=> a Aa; rewrite !inE; apply/subsetP=> x; rewrite inE nSA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments actsP {A S}.",
            "VernacArguments",
            "11860bff456df83660983cbd9731e3fc0d8cc432"
        ],
        [
            "Lemma setact_orbit A x b : to^* (orbit to A x) b = orbit to (A :^ b) (to x b).",
            "VernacStartTheoremProof",
            "71a0fb77b19529ad72c44aa93a9c46179b2ae9ab"
        ],
        [
            "apply/setP=> y; apply/idP/idP=> /imsetP[_ /imsetP[a Aa ->] ->{y}].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite actCJ mem_orbit ?memJ_conjg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -actCJ mem_setact ?mem_orbit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_setact S a : 'C(to^* S a | to) = 'C(S | to) :^ a.",
            "VernacStartTheoremProof",
            "e4d9a4c121e2eaf93e248d43b448aad2515dafa2"
        ],
        [
            "apply/setP=> b; rewrite mem_conjg.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/astabP/astabP=> stab x => [Sx|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite conjgE invgK !actM stab ?actK //; apply/imsetP; exists x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/imsetP=> y Sy ->{x}; rewrite -actM conjgCV actM stab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab1_act x a : 'C[to x a | to] = 'C[x | to] :^ a.",
            "VernacStartTheoremProof",
            "af7d71fc5cc7c3390796d250b445abbeb7633315"
        ],
        [
            "by rewrite -astab_setact /setact imset_set1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atransP G S : [transitive G, on S | to] -> forall x, x \\in S -> orbit to G x = S.",
            "VernacStartTheoremProof",
            "b953720d9386a90cb061b7fb7e32f8b62723a8bc"
        ],
        [
            "by case/imsetP=> x _ -> y; apply/orbit_eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atransP2 G S : [transitive G, on S | to] -> {in S &, forall x y, exists2 a, a \\in G & y = to x a}.",
            "VernacStartTheoremProof",
            "961891d86e4429deadcacee59949a193ae965a4e"
        ],
        [
            "by move=> GtrS x y /(atransP GtrS) <- /imsetP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atrans_acts G S : [transitive G, on S | to] -> [acts G, on S | to].",
            "VernacStartTheoremProof",
            "6e525cc0098b7f47c073e9d5be178a51f8535ecf"
        ],
        [
            "move=> GtrS; apply/subsetP=> a Ga; rewrite !inE.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by apply/subsetP=> x /(atransP GtrS) <-; rewrite inE mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atrans_supgroup G H S : G \\subset H -> [transitive G, on S | to] -> [transitive H, on S | to] = [acts H, on S | to].",
            "VernacStartTheoremProof",
            "0bc882e20f3d80816c4d7cf884958f6aa2744076"
        ],
        [
            "move=> sGH trG; apply/idP/idP=> [|actH]; first exact: atrans_acts.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/imsetP: trG => x Sx defS; apply/imsetP; exists x => //.",
            "VernacExtend",
            "58168c4367f5c8fd5aef7600205b564e8c5f4f4d"
        ],
        [
            "by apply/eqP; rewrite eqEsubset acts_sub_orbit ?Sx // defS imsetS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atrans_acts_card G S : [transitive G, on S | to] = [acts G, on S | to] && (#|orbit to G @: S| == 1%N).",
            "VernacStartTheoremProof",
            "77239238ff72006861d63a7e1eee516f2db3e5d7"
        ],
        [
            "apply/idP/andP=> [GtrS | [nSG]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split; first exact: atrans_acts.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite ((_ @: S =P [set S]) _) ?cards1 // eqEsubset sub1set.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/andP; split=> //; apply/subsetP=> _ /imsetP[x Sx ->].",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "by rewrite inE (atransP GtrS).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqn_leq andbC lt0n => /andP[/existsP[X /imsetP[x Sx X_Gx]]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (cardD1 X) {X}X_Gx mem_imset // ltnS leqn0 => /eqP GtrS.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/imsetP; exists x => //; apply/eqP.",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "rewrite eqEsubset acts_sub_orbit // Sx andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> y Sy; have:= card0_eq GtrS (orbit to G y).",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "by rewrite !inE /= mem_imset // andbT => /eqP <-; apply: orbit_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atrans_dvd G S : [transitive G, on S | to] -> #|S| %| #|G|.",
            "VernacStartTheoremProof",
            "03069c0a996b71cc1d1c00120324bd1ed68d2ae6"
        ],
        [
            "by case/imsetP=> x _ ->; apply: dvdn_orbit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_fix_norm A B : A \\subset 'N(B) -> [acts A, on 'Fix_to(B) | to].",
            "VernacStartTheoremProof",
            "603d51ac9251d863175ffd6217aceb71c4865ed9"
        ],
        [
            "move=> nAB; have:= acts_subnorm_fix to B; rewrite !setTI.",
            "VernacExtend",
            "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
        ],
        [
            "exact: subset_trans.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma faithfulP A S : reflect (forall a, a \\in A -> {in S, to^~ a =1 id} -> a = 1) [faithful A, on S | to].",
            "VernacStartTheoremProof",
            "5db336b14bbbb6bd68efc90bf77dfdd69694f093"
        ],
        [
            "apply: (iffP subsetP) => [Cto1 a Aa Ca | Cto1 a].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/set1P; rewrite Cto1 // inE Aa; apply/astabP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/setIP=> Aa /astabP Ca; apply/set1P; apply: Cto1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_trans_gcore G S u : [transitive G, on S | to] -> u \\in S -> 'C(S | to) = gcore 'C[u | to] G.",
            "VernacStartTheoremProof",
            "eb95ba809700d6d2661a476399011bf277183dae"
        ],
        [
            "move=> transG Su; apply/eqP; rewrite eqEsubset.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite gcore_max ?astabS ?sub1set //=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exact: subset_trans (atrans_acts transG) (astab_norm _ _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "apply/subsetP=> x cSx; apply/astabP=> uy.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "case/(atransP2 transG Su) => y Gy ->{uy}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply/astab1P; rewrite astab1_act (bigcapP cSx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem subgroup_transitiveP G H S x : x \\in S -> H \\subset G -> [transitive G, on S | to] -> reflect ('C_G[x | to] * H = G) [transitive H, on S | to].",
            "VernacStartTheoremProof",
            "53120494d26fb093f23a5c106bf3b583cea072b7"
        ],
        [
            "by move=> Sx sHG; apply: subgroup_transitivePin (subsetT G).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_subnorm_fixP x G H S : let C := 'C_G[x | to] in let T := 'Fix_(S | to)(H) in [transitive G, on S | to] -> x \\in S -> H \\subset C -> reflect ((H :^: G) ::&: C = H :^: C) [transitive 'N_G(H), on T | to].",
            "VernacStartTheoremProof",
            "535d74950c6586082966661668cbc2671ea14829"
        ],
        [
            "move=> C T trGS Sx sHC; have actGS := acts_act (atrans_acts trGS).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have:= sHC; rewrite subsetI sub_astab1 => /andP[sHG cHx].",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "have Tx: x \\in T by rewrite inE Sx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (iffP idP) => [trN | trC].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/setP=> Ha; apply/setIdP/imsetP=> [[]|[a Ca ->{Ha}]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite conj_subG //; case/setIP: Ca => Ga _; rewrite mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/imsetP=> a Ga ->{Ha}; rewrite subsetI !sub_conjg => /andP[_ sHCa].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have Txa: to x a^-1 \\in T.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite inE -sub_astab1 astab1_act actGS ?Sx ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [b] := atransP2 trN Tx Txa; case/setIP=> Gb nHb cxba.",
            "VernacExtend",
            "c6d2532ed4a224baf57de7930305ff767fdbd834"
        ],
        [
            "exists (b * a); last by rewrite conjsgM (normP nHb).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite inE groupM //; apply/astab1P; rewrite actM -cxba actKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/imsetP; exists x => //; apply/setP=> y; apply/idP/idP=> [Ty|].",
            "VernacExtend",
            "17c51c8715699a310487472b40726c6d5e6c73fd"
        ],
        [
            "have [Sy cHy]:= setIP Ty; have [a Ga defy] := atransP2 trGS Sx Sy.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have: H :^ a^-1 \\in H :^: C.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -trC inE subsetI mem_imset 1?conj_subG ?groupV // sub_conjgV.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -astab1_act -defy sub_astab1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/imsetP=> b /setIP[Gb /astab1P cxb] defHb.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite defy -{1}cxb -actM mem_orbit // inE groupM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/normP; rewrite conjsgM -defHb conjsgKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/imsetP=> a /setIP[Ga nHa] ->{y}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite inE actGS // Sx (acts_act (acts_fix_norm _) nHa).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TotalActions.",
            "VernacEndSegment",
            "af28e3553f0e742cb4f2a513dca1eabcb9981d7c"
        ],
        [
            "Arguments astabP {aT rT to S a}.",
            "VernacArguments",
            "74096e7e280bf12e3f14d270a17056db1ad7f76d"
        ],
        [
            "Arguments orbit_eqP {aT rT to G x y}.",
            "VernacArguments",
            "e5ea62356dc2d1a8dd3e082d72c74683a6aef565"
        ],
        [
            "Arguments astab1P {aT rT to x a}.",
            "VernacArguments",
            "3bf5782897f1a6306895a00d8cb4183578c58d28"
        ],
        [
            "Arguments astabsP {aT rT to S a}.",
            "VernacArguments",
            "4dc5e3263ef6e17695f64558df8291fdbda876e7"
        ],
        [
            "Arguments atransP {aT rT to G S}.",
            "VernacArguments",
            "e984e5cb8242332a5a4b804bc78e030641d39386"
        ],
        [
            "Arguments actsP {aT rT to A S}.",
            "VernacArguments",
            "98651c2cb2b8903da9886e38544a4cf70d2f069c"
        ],
        [
            "Arguments faithfulP {aT rT to A S}.",
            "VernacArguments",
            "628be1690cb857b77acc2ddfadbf5d0cf5fb0ece"
        ],
        [
            "Section Restrict.",
            "VernacBeginSection",
            "457b91c4635da7a08fdf3f3bda44e7aa7a4a51b1"
        ],
        [
            "Variables (aT : finGroupType) (D : {set aT}) (rT : Type).",
            "VernacAssumption",
            "95146f5835466bd06e686a79e07c06ebcf65aae3"
        ],
        [
            "Variables (to : action D rT) (A : {set aT}).",
            "VernacAssumption",
            "db2341166a92d94654008a89e97e19245a4b07f3"
        ],
        [
            "Definition ract of A \\subset D := act to.",
            "VernacDefinition",
            "7856ae525f12323daaaed3fbb430fb88eafe2271"
        ],
        [
            "Variable sAD : A \\subset D.",
            "VernacAssumption",
            "2d9a1df7090953db9bb92dac71b36ac2e2f8ad04"
        ],
        [
            "Lemma ract_is_action : is_action A (ract sAD).",
            "VernacStartTheoremProof",
            "8cdf23e3f68acd1cd2d4c923d6dc3f1464787613"
        ],
        [
            "rewrite /ract; case: to => f [injf fM].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by split=> // x; apply: (sub_in2 (subsetP sAD)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical raction := Action ract_is_action.",
            "VernacDefinition",
            "b00f963bb1dc1dd4a791ffd5bdfc51df7ee56598"
        ],
        [
            "Lemma ractE : raction =1 to.",
            "VernacStartTheoremProof",
            "ea18b0664e7cec2699cdc6a6c37dc2964d16644c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Restrict.",
            "VernacEndSegment",
            "746f669aebca461bfe6449478db2d94d3e29eaab"
        ],
        [
            "Notation \"to \\ sAD\" := (raction to sAD) (at level 50) : action_scope.",
            "VernacNotation",
            "a3e511bd59324a40a43178726e005976fea908da"
        ],
        [
            "Section ActBy.",
            "VernacBeginSection",
            "59609b36436d2930e1ea4197d3078f00b66f9f27"
        ],
        [
            "Variables (aT : finGroupType) (D : {set aT}) (rT : finType).",
            "VernacAssumption",
            "4ec88d65d61706217187312ede664807b1965fee"
        ],
        [
            "Definition actby_cond (A : {set aT}) R (to : action D rT) : Prop := [acts A, on R | to].",
            "VernacDefinition",
            "1189e7c2cd16ee10f58260a5fd3657f8b0c54a6a"
        ],
        [
            "Definition actby A R to of actby_cond A R to := fun x a => if (x \\in R) && (a \\in A) then to x a else x.",
            "VernacDefinition",
            "03478c770ece6821b6369fd3b758fff6c30f7bb2"
        ],
        [
            "Variables (A : {group aT}) (R : {set rT}) (to : action D rT).",
            "VernacAssumption",
            "f1af00338d08c9700f38dce2e46032c83f3f338e"
        ],
        [
            "Hypothesis nRA : actby_cond A R to.",
            "VernacAssumption",
            "69f4a86d0aaf1ed7a2f00ea09d280045dd3910d9"
        ],
        [
            "Lemma actby_is_action : is_action A (actby nRA).",
            "VernacStartTheoremProof",
            "bf4791e46d5ed40210cb344584855663f9b6f3d1"
        ],
        [
            "rewrite /actby; split=> [a x y | x a b Aa Ab /=]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite Aa Ab groupM // !andbT actMin ?(subsetP (acts_dom nRA)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case Rx: (x \\in R); rewrite ?(acts_act nRA) ?Rx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case Aa: (a \\in A); rewrite ?andbF ?andbT //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case Rx: (x \\in R); case Ry: (y \\in R) => // eqxy; first exact: act_inj eqxy.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -eqxy (acts_act nRA Aa) Rx in Ry.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite eqxy (acts_act nRA Aa) Ry in Rx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical action_by := Action actby_is_action.",
            "VernacDefinition",
            "7bd1fa95c79547072eb208069f45f9b73c4523aa"
        ],
        [
            "Local Notation \"<[nRA]>\" := action_by : action_scope.",
            "VernacNotation",
            "58c556c7a8ef47ef703a8461ee626e86ac9f2d60"
        ],
        [
            "Lemma actbyE x a : x \\in R -> a \\in A -> <[nRA]>%act x a = to x a.",
            "VernacStartTheoremProof",
            "ab5729295d8e7dbdc16fad88b0a35939a846c5f6"
        ],
        [
            "by rewrite /= /actby => -> ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afix_actby B : 'Fix_<[nRA]>(B) = ~: R :|: 'Fix_to(A :&: B).",
            "VernacStartTheoremProof",
            "905b85c6ca86d7469f6ec5952542793b86c137fe"
        ],
        [
            "apply/setP=> x; rewrite !inE /= /actby.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case: (x \\in R); last by apply/subsetP=> a _; rewrite !inE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/subsetP/subsetP=> [cBx a | cABx a Ba]; rewrite !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case/andP=> Aa /cBx; rewrite inE Aa.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: ifP => //= Aa; have:= cABx a; rewrite !inE Aa => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_actby S : 'C(S | <[nRA]>) = 'C_A(R :&: S | to).",
            "VernacStartTheoremProof",
            "fc98787369d69d8d68a8b0b7fc3df8054ac1bcd4"
        ],
        [
            "apply/setP=> a; rewrite setIA (setIidPl (acts_dom nRA)) !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case Aa: (a \\in A) => //=; apply/subsetP/subsetP=> cRSa x => [|Sx].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by case/setIP=> Rx /cRSa; rewrite !inE actbyE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by have:= cRSa x; rewrite !inE /= /actby Aa Sx; case: (x \\in R) => //; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_actby S : 'N(S | <[nRA]>) = 'N_A(R :&: S | to).",
            "VernacStartTheoremProof",
            "ce089de1f22f8b7e4cb5a577bccaf41b661f449a"
        ],
        [
            "apply/setP=> a; rewrite setIA (setIidPl (acts_dom nRA)) !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case Aa: (a \\in A) => //=; apply/subsetP/subsetP=> nRSa x => [|Sx].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by case/setIP=> Rx /nRSa; rewrite !inE actbyE ?(acts_act nRA) ?Rx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= nRSa x; rewrite !inE /= /actby Aa Sx ?(acts_act nRA) //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by case: (x \\in R) => //; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_actby (B : {set aT}) S : [acts B, on S | <[nRA]>] = (B \\subset A) && [acts B, on R :&: S | to].",
            "VernacStartTheoremProof",
            "be412d40b25c69cd5b325733bc1f4ec447c62619"
        ],
        [
            "by rewrite astabs_actby subsetI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ActBy.",
            "VernacEndSegment",
            "0211706075aa3e5889c3683e19e913f39a75e9de"
        ],
        [
            "Notation \"<[ nRA ] >\" := (action_by nRA) : action_scope.",
            "VernacNotation",
            "51bedd9d6862082578c095a95178de5eb6232593"
        ],
        [
            "Section SubAction.",
            "VernacBeginSection",
            "a7fe30142aca40fc111126f4718726d18b22ee15"
        ],
        [
            "Variables (aT : finGroupType) (D : {group aT}).",
            "VernacAssumption",
            "388922bf2cf5fa8b0012845c1af79129c3175205"
        ],
        [
            "Variables (rT : finType) (sP : pred rT) (sT : subFinType sP) (to : action D rT).",
            "VernacAssumption",
            "afb35b85b7ccb867a179196b5771198a5a7800d4"
        ],
        [
            "Implicit Type A : {set aT}.",
            "VernacReserve",
            "ee3779257cd003c0985795fc4e8b8630d6d2d22e"
        ],
        [
            "Implicit Type u : sT.",
            "VernacReserve",
            "b5b95bddc88d142ff7a0fc3f0f2da690e0e8732a"
        ],
        [
            "Implicit Type S : {set sT}.",
            "VernacReserve",
            "33fe09971944369080d8e02a8db0240cb3ff9a12"
        ],
        [
            "Definition subact_dom := 'N([set x | sP x] | to).",
            "VernacDefinition",
            "be30b155c3779795a8536fd1df9332aee62c130f"
        ],
        [
            "Canonical subact_dom_group := [group of subact_dom].",
            "VernacDefinition",
            "cd33bd39a5d569dcd731169339ac201e50e19c2e"
        ],
        [
            "Implicit Type Na : {a | a \\in subact_dom}.",
            "VernacReserve",
            "a26292244f1c5b063765f3046d7703e1c02a62d8"
        ],
        [
            "Lemma sub_act_proof u Na : sP (to (val u) (val Na)).",
            "VernacStartTheoremProof",
            "05da51cf54551e572fde01a4870a07998c7561a8"
        ],
        [
            "by case: Na => a /= /(astabs_act (val u)); rewrite !inE valP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subact u a := if insub a is Some Na then Sub _ (sub_act_proof u Na) else u.",
            "VernacDefinition",
            "31a8b318c64018f99b7d390a7886e13968d791d6"
        ],
        [
            "Lemma val_subact u a : val (subact u a) = if a \\in subact_dom then to (val u) a else val u.",
            "VernacStartTheoremProof",
            "b69b1e6a076249ed128e178901eea81b0802035d"
        ],
        [
            "by rewrite /subact -if_neg; case: insubP => [Na|] -> //=; rewrite SubK => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subact_is_action : is_action subact_dom subact.",
            "VernacStartTheoremProof",
            "ee6d3f1d644ff9ab733e1f89b6e2ac21188a89f1"
        ],
        [
            "split=> [a u v eq_uv | u a b Na Nb]; apply: val_inj.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "move/(congr1 val): eq_uv; rewrite !val_subact.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: (a \\in _); first move/act_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Da := astabs_dom Na; have Db := astabs_dom Nb.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "by rewrite !val_subact Na Nb groupM ?actMin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical subaction := Action subact_is_action.",
            "VernacDefinition",
            "7794d0646cb2146d11bbc053b68ca185a4978b83"
        ],
        [
            "Lemma astab_subact S : 'C(S | subaction) = subact_dom :&: 'C(val @: S | to).",
            "VernacStartTheoremProof",
            "92f58236bdf38ebb49a9eeff394ae9d20fbf6999"
        ],
        [
            "apply/setP=> a; rewrite inE in_setI; apply: andb_id2l => sDa.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "have [Da _] := setIP sDa; rewrite !inE Da.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "apply/subsetP/subsetP=> [cSa _ /imsetP[x Sx ->] | cSa x Sx]; rewrite !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by have:= cSa x Sx; rewrite inE -val_eqE val_subact sDa.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by have:= cSa _ (mem_imset val Sx); rewrite inE -val_eqE val_subact sDa.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_subact S : 'N(S | subaction) = subact_dom :&: 'N(val @: S | to).",
            "VernacStartTheoremProof",
            "7511cd95a0b82e571913266e072be2c4584dfd0e"
        ],
        [
            "apply/setP=> a; rewrite inE in_setI; apply: andb_id2l => sDa.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "have [Da _] := setIP sDa; rewrite !inE Da.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "apply/subsetP/subsetP=> [nSa _ /imsetP[x Sx ->] | nSa x Sx]; rewrite !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by have:= nSa x Sx; rewrite inE => /(mem_imset val); rewrite val_subact sDa.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= nSa _ (mem_imset val Sx); rewrite inE => /imsetP[y Sy def_y].",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "by rewrite ((_ a =P y) _) // -val_eqE val_subact sDa def_y.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afix_subact A : A \\subset subact_dom -> 'Fix_subaction(A) = val @^-1: 'Fix_to(A).",
            "VernacStartTheoremProof",
            "17fb90c85e7287e371f16eba6b740e2cfa77f07e"
        ],
        [
            "move/subsetP=> sAD; apply/setP=> u.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite !inE !(sameP setIidPl eqP); congr (_ == A).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "apply/setP=> a; rewrite !inE; apply: andb_id2l => Aa.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite -val_eqE val_subact sAD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SubAction.",
            "VernacEndSegment",
            "0e7acc940cf902510ee4ce6ccbf77ff9668a7de6"
        ],
        [
            "Notation \"to ^?\" := (subaction _ to) (at level 2, format \"to ^?\") : action_scope.",
            "VernacNotation",
            "d18a09d61420967a003de3bd8595c4f8a4848af5"
        ],
        [
            "Section QuotientAction.",
            "VernacBeginSection",
            "38c093e59c5b9ce01335cdefa410263cd92f6ae3"
        ],
        [
            "Variables (aT : finGroupType) (D : {group aT}) (rT : finGroupType).",
            "VernacAssumption",
            "c4524cb11529e80644703116d66f68aa2dd8863a"
        ],
        [
            "Variables (to : action D rT) (H : {group rT}).",
            "VernacAssumption",
            "2ef8266e817a798dd4713debf22025bca182803c"
        ],
        [
            "Definition qact_dom := 'N(rcosets H 'N(H) | to^*).",
            "VernacDefinition",
            "8b39e510866e1fbb565bb99c5f5ac79cb75a231a"
        ],
        [
            "Canonical qact_dom_group := [group of qact_dom].",
            "VernacDefinition",
            "745833b4e5dd6e3df3f22fa9ebfce70287adc10a"
        ],
        [
            "Local Notation subdom := (subact_dom (coset_range H) to^*).",
            "VernacSyntacticDefinition",
            "000082453a01fbcb0a29acfe64ae4a39470aac14"
        ],
        [
            "Fact qact_subdomE : subdom = qact_dom.",
            "VernacStartTheoremProof",
            "abf95dcfee43529254a39fd1234a200719706d60"
        ],
        [
            "by congr 'N(_|_); apply/setP=> Hx; rewrite !inE genGid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qact_proof : qact_dom \\subset subdom.",
            "VernacStartTheoremProof",
            "6fcd4db1f74772cd62237464e6b8d142744346df"
        ],
        [
            "by rewrite qact_subdomE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition qact : coset_of H -> aT -> coset_of H := act (to^*^? \\ qact_proof).",
            "VernacDefinition",
            "2dbe0b477fda4fef07680850346285a705f7fb76"
        ],
        [
            "Canonical quotient_action := [action of qact].",
            "VernacDefinition",
            "dda3ef5fa0081ad0a4fc223d845ff284cbfa48cc"
        ],
        [
            "Lemma acts_qact_dom : [acts qact_dom, on 'N(H) | to].",
            "VernacStartTheoremProof",
            "7894e52fbf980c242ccc24d5d430da8920846963"
        ],
        [
            "apply/subsetP=> a nNa; rewrite !inE (astabs_dom nNa); apply/subsetP=> x Nx.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "have: H :* x \\in rcosets H 'N(H) by rewrite -rcosetE mem_imset.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite inE -(astabs_act _ nNa) => /rcosetsP[y Ny defHy].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have: to x a \\in H :* y by rewrite -defHy (mem_imset (to^~a)) ?rcoset_refl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: subsetP; rewrite mul_subG ?sub1set ?normG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qactEcond x a : x \\in 'N(H) -> quotient_action (coset H x) a = coset H (if a \\in qact_dom then to x a else x).",
            "VernacStartTheoremProof",
            "fe19754607f9eae4011d6799d839a5df6f740b7d"
        ],
        [
            "move=> Nx; apply: val_inj; rewrite val_subact //= qact_subdomE.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "have: H :* x \\in rcosets H 'N(H) by rewrite -rcosetE mem_imset.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case nNa: (a \\in _); rewrite // -(astabs_act _ nNa).",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite !val_coset ?(acts_act acts_qact_dom nNa) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/rcosetsP=> y Ny defHy; rewrite defHy; apply: rcoset_eqP.",
            "VernacExtend",
            "7b10d760ecce4015b43936eb8ee3a43374e85678"
        ],
        [
            "by rewrite rcoset_sym -defHy (mem_imset (_^~_)) ?rcoset_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qactE x a : x \\in 'N(H) -> a \\in qact_dom -> quotient_action (coset H x) a = coset H (to x a).",
            "VernacStartTheoremProof",
            "0cef4e875e07ad36f29e618fa54fbece39c340a1"
        ],
        [
            "by move=> Nx nNa; rewrite qactEcond ?nNa.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_quotient (A : {set aT}) (B : {set rT}) : A \\subset 'N_qact_dom(B | to) -> [acts A, on B / H | quotient_action].",
            "VernacStartTheoremProof",
            "81946f6fd64447b5c0a8f7ee9a157b4c6bf458d2"
        ],
        [
            "move=> nBA; apply: subset_trans {A}nBA _; apply/subsetP=> a /setIP[dHa nBa].",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "rewrite inE dHa inE; apply/subsetP=> _ /morphimP[x nHx Bx ->].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite inE /= qactE //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mem_morphim ?(acts_act acts_qact_dom) ?(astabs_act _ nBa).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_quotient (G : {group rT}) : H <| G -> 'N(G / H | quotient_action) = 'N_qact_dom(G | to).",
            "VernacStartTheoremProof",
            "7179ff2789d76e925c1555044f76a230d172c092"
        ],
        [
            "move=> nsHG; have [_ nHG] := andP nsHG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/eqP; rewrite eqEsubset acts_quotient // andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/subsetP=> a nGa; have dHa := astabs_dom nGa; have [Da _]:= setIdP dHa.",
            "VernacExtend",
            "979c5acda079ebad8f7bb7da92b264c073e7811e"
        ],
        [
            "rewrite inE dHa 2!inE Da; apply/subsetP=> x Gx; have nHx := subsetP nHG x Gx.",
            "VernacExtend",
            "c6ff91ceee22c8fcb242ad6d0dc8ed6693b7fb7e"
        ],
        [
            "rewrite -(quotientGK nsHG) 2!inE (acts_act acts_qact_dom) ?nHx //= inE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -qactE // (astabs_act _ nGa) mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End QuotientAction.",
            "VernacEndSegment",
            "28ce629dd1aff469ca71ca1302f921afcf4ea550"
        ],
        [
            "Notation \"to / H\" := (quotient_action to H) : action_scope.",
            "VernacNotation",
            "695c9f65aec2f0bf3807434fe9556868b5b47484"
        ],
        [
            "Section ModAction.",
            "VernacBeginSection",
            "ad18577ece133a72aeda3952c45362cc88875422"
        ],
        [
            "Variables (aT : finGroupType) (D : {group aT}) (rT : finType).",
            "VernacAssumption",
            "e632a6871b54377db454f7de7407029cf8b1537e"
        ],
        [
            "Variable to : action D rT.",
            "VernacAssumption",
            "b9526a37c12151838390355907ab0fad44bfeba3"
        ],
        [
            "Implicit Types (G : {group aT}) (S : {set rT}).",
            "VernacReserve",
            "4cdfea81cc14d15013fd5749bc2321089b478e29"
        ],
        [
            "Section GenericMod.",
            "VernacBeginSection",
            "2ede1fc03a71b9fa959242950b44b7e8c07b62b3"
        ],
        [
            "Variable H : {group aT}.",
            "VernacAssumption",
            "76629c96aff8cc0cfa21154c37f148d9b1bae062"
        ],
        [
            "Local Notation dom := 'N_D(H).",
            "VernacSyntacticDefinition",
            "707bde8b7b7eedfe4e9d01e625033e504eb18dec"
        ],
        [
            "Local Notation range := 'Fix_to(D :&: H).",
            "VernacSyntacticDefinition",
            "b847622b39387350bccaecfd18214222d28a0b09"
        ],
        [
            "Let acts_dom : {acts dom, on range | to} := acts_act (acts_subnorm_fix to H).",
            "VernacDefinition",
            "52d9ac14d9ade502394ecbd2dd2888dc45514866"
        ],
        [
            "Definition modact x (Ha : coset_of H) := if x \\in range then to x (repr (D :&: Ha)) else x.",
            "VernacDefinition",
            "77abef0ead357df7fd124460db9a60094dc07e77"
        ],
        [
            "Lemma modactEcond x a : a \\in dom -> modact x (coset H a) = (if x \\in range then to x a else x).",
            "VernacStartTheoremProof",
            "09a6115ef879e024735327d348bd1abeaa17d09f"
        ],
        [
            "case/setIP=> Da Na; case: ifP => Cx; rewrite /modact Cx //.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "rewrite val_coset // -group_modr ?sub1set //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (repr _) / (repr_rcosetP (D :&: H) a) => a' Ha'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite actMin ?(afixP Cx _ Ha') //; case/setIP: Ha'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modactE x a : a \\in D -> a \\in 'N(H) -> x \\in range -> modact x (coset H a) = to x a.",
            "VernacStartTheoremProof",
            "1db0f459166b9e7816fb2fe86ecfae6793f75152"
        ],
        [
            "by move=> Da Na Rx; rewrite modactEcond ?Rx // inE Da.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modact_is_action : is_action (D / H) modact.",
            "VernacStartTheoremProof",
            "a8f2737edbb56b3d68aed1b979e6ff0b230d7665"
        ],
        [
            "split=> [Ha x y | x Ha Hb]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/morphimP=> a Na Da ->{Ha}; case/morphimP=> b Nb Db ->{Hb}.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite -morphM //= !modactEcond // ?groupM ?(introT setIP _) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: ifP => Cx; rewrite ?(acts_dom, Cx, actMin, introT setIP _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (set_0Vmem (D :&: Ha)) => [Da0 | [a /setIP[Da NHa]]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite /modact Da0 repr_set0 !act1 !if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Na := subsetP (coset_norm _) _ NHa.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have NDa: a \\in 'N_D(H) by rewrite inE Da.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(coset_mem NHa) !modactEcond //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "do 2![case: ifP]=> Cy Cx // eqxy; first exact: act_inj eqxy.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -eqxy acts_dom ?Cx in Cy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite eqxy acts_dom ?Cy in Cx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical mod_action := Action modact_is_action.",
            "VernacDefinition",
            "462b5aa7a7e228019597822b97aae5343b8b3da7"
        ],
        [
            "Section Stabilizers.",
            "VernacBeginSection",
            "16b513cf236f5dfcd4b512ea8cf4dd01006c3479"
        ],
        [
            "Variable S : {set rT}.",
            "VernacAssumption",
            "0b3ade27737c565c5c932e23f4cd6e0b96f3b785"
        ],
        [
            "Hypothesis cSH : H \\subset 'C(S | to).",
            "VernacAssumption",
            "9fd99d6f4de4672c1a711b4e59a6acfd1ccff1d5"
        ],
        [
            "Let fixSH : S \\subset 'Fix_to(D :&: H).",
            "VernacDefinition",
            "0ec63cb43d27918d4bb29172531260f13f8c6286"
        ],
        [
            "by rewrite -astabCin ?subsetIl // subIset ?cSH ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_mod : 'N(S | mod_action) = 'N(S | to) / H.",
            "VernacStartTheoremProof",
            "a99a0d95c2d7b7bdfc410c705544786e48d76973"
        ],
        [
            "apply/setP=> Ha; apply/idP/morphimP=> [nSa | [a nHa nSa ->]].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "case/morphimP: (astabs_dom nSa) => a nHa Da defHa.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists a => //; rewrite !inE Da; apply/subsetP=> x Sx; rewrite !inE.",
            "VernacExtend",
            "df71004946f731ff47e27c4e5401fed0d7184b9d"
        ],
        [
            "by have:= Sx; rewrite -(astabs_act x nSa) defHa /= modactE ?(subsetP fixSH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Da := astabs_dom nSa; rewrite !inE mem_quotient //; apply/subsetP=> x Sx.",
            "VernacExtend",
            "4266062387bb5ba3b4b273358c36b198e35325af"
        ],
        [
            "by rewrite !inE /= modactE ?(astabs_act x nSa) ?(subsetP fixSH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_mod : 'C(S | mod_action) = 'C(S | to) / H.",
            "VernacStartTheoremProof",
            "00b9cbd115e7ffff5861213453c665acec9bf008"
        ],
        [
            "apply/setP=> Ha; apply/idP/morphimP=> [cSa | [a nHa cSa ->]].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "case/morphimP: (astab_dom cSa) => a nHa Da defHa.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists a => //; rewrite !inE Da; apply/subsetP=> x Sx; rewrite !inE.",
            "VernacExtend",
            "df71004946f731ff47e27c4e5401fed0d7184b9d"
        ],
        [
            "by rewrite -{2}[x](astab_act cSa) // defHa /= modactE ?(subsetP fixSH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Da := astab_dom cSa; rewrite !inE mem_quotient //; apply/subsetP=> x Sx.",
            "VernacExtend",
            "4266062387bb5ba3b4b273358c36b198e35325af"
        ],
        [
            "by rewrite !inE /= modactE ?(astab_act cSa) ?(subsetP fixSH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Stabilizers.",
            "VernacEndSegment",
            "1fad5d3326e1627a005ae9266e0eb10e6205a144"
        ],
        [
            "Lemma afix_mod G S : H \\subset 'C(S | to) -> G \\subset 'N_D(H) -> 'Fix_(S | mod_action)(G / H) = 'Fix_(S | to)(G).",
            "VernacStartTheoremProof",
            "de7e6525aa8c8e4788eedabef3ebd58817e48ec0"
        ],
        [
            "move=> cSH /subsetIP[sGD nHG].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply/eqP; rewrite eqEsubset !subsetI !subsetIl /= -!astabCin ?quotientS //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have cfixH F: H \\subset 'C(S :&: F | to).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (subset_trans cSH) // astabS ?subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite andbC astab_mod ?quotientS //=; last by rewrite astabCin ?subsetIr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(quotientSGK nHG) //= -astab_mod // astabCin ?quotientS ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GenericMod.",
            "VernacEndSegment",
            "340f6ac83148addc079b7403af00f3419d3f3cb9"
        ],
        [
            "Lemma modact_faithful G S : [faithful G / 'C_G(S | to), on S | mod_action 'C_G(S | to)].",
            "VernacStartTheoremProof",
            "46bad4d189644d5389e64bd3e6c8c27e8f43184e"
        ],
        [
            "rewrite /faithful astab_mod ?subsetIr //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -quotientIG ?subsetIr ?trivg_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ModAction.",
            "VernacEndSegment",
            "218e4c5986f1c0b105f1175dab51f1c626044bcd"
        ],
        [
            "Notation \"to %% H\" := (mod_action to H) : action_scope.",
            "VernacNotation",
            "3ea4387f02704f2b74a72932433ab7967b7e6188"
        ],
        [
            "Section ActPerm.",
            "VernacBeginSection",
            "149b2b1de79538733e5f274a85c9a860079a63f4"
        ],
        [
            "Variables (aT : finGroupType) (D : {set aT}) (rT : finType).",
            "VernacAssumption",
            "4ec88d65d61706217187312ede664807b1965fee"
        ],
        [
            "Variable to : action D rT.",
            "VernacAssumption",
            "b9526a37c12151838390355907ab0fad44bfeba3"
        ],
        [
            "Definition actperm a := perm (act_inj to a).",
            "VernacDefinition",
            "473482182c8ff6fa2e92b245bfe51947f0ea362c"
        ],
        [
            "Lemma actpermM : {in D &, {morph actperm : a b / a * b}}.",
            "VernacStartTheoremProof",
            "fd88518fd54fb051b54d8377baed73342ad225cf"
        ],
        [
            "by move=> a b Da Db; apply/permP=> x; rewrite permM !permE actMin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical actperm_morphism := Morphism actpermM.",
            "VernacDefinition",
            "ebe5f67a442a691d622bbd0f62a64d2bca28f013"
        ],
        [
            "Lemma actpermE a x : actperm a x = to x a.",
            "VernacStartTheoremProof",
            "b10572597bea0d54c46b3f9bbdd6dd2a134d7c92"
        ],
        [
            "by rewrite permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actpermK x a : aperm x (actperm a) = to x a.",
            "VernacStartTheoremProof",
            "d0687de47c8f4f04e5e441b5c76a415793a326e3"
        ],
        [
            "exact: actpermE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ker_actperm : 'ker actperm = 'C(setT | to).",
            "VernacStartTheoremProof",
            "5bb54938443a51c8336d647ece1d96a1791db9df"
        ],
        [
            "congr (_ :&: _); apply/setP=> a; rewrite !inE /=.",
            "VernacExtend",
            "e02c5e37d306c924c86ea325376d95ddc0d1741e"
        ],
        [
            "apply/eqP/subsetP=> [a1 x _ | a1]; first by rewrite inE -actpermE a1 perm1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/permP=> x; apply/eqP; have:= a1 x; rewrite !inE actpermE perm1 => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ActPerm.",
            "VernacEndSegment",
            "26544026de724afbbae2d4ebcece9b1025c3acc8"
        ],
        [
            "Section RestrictActionTheory.",
            "VernacBeginSection",
            "0373ed008b037f573e01f80c6d257ecf6b3e5ab0"
        ],
        [
            "Variables (aT : finGroupType) (D : {set aT}) (rT : finType).",
            "VernacAssumption",
            "4ec88d65d61706217187312ede664807b1965fee"
        ],
        [
            "Variables (to : action D rT).",
            "VernacAssumption",
            "b9526a37c12151838390355907ab0fad44bfeba3"
        ],
        [
            "Lemma faithful_isom (A : {group aT}) S (nSA : actby_cond A S to) : [faithful A, on S | to] -> isom A (actperm <[nSA]> @* A) (actperm <[nSA]>).",
            "VernacStartTheoremProof",
            "42e4eb2d4ea0126609f687c834bdee0c10b9a912"
        ],
        [
            "by move=> ffulAS; apply/isomP; rewrite ker_actperm astab_actby setIT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variables (A : {set aT}) (sAD : A \\subset D).",
            "VernacAssumption",
            "e13576978e66e07cc842a5c75ac8ec1f5172ebc2"
        ],
        [
            "Lemma ractpermE : actperm (to \\ sAD) =1 actperm to.",
            "VernacStartTheoremProof",
            "e9c1e162c0e1e092aaa24913bd46d9706953fa7a"
        ],
        [
            "by move=> a; apply/permP=> x; rewrite !permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afix_ract B : 'Fix_(to \\ sAD)(B) = 'Fix_to(B).",
            "VernacStartTheoremProof",
            "5441c91c495b3d83af2bfd55a2e85eb2f221992a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_ract S : 'C(S | to \\ sAD) = 'C_A(S | to).",
            "VernacStartTheoremProof",
            "df5c627b12c5ef667611fab2ade2983c98987a1f"
        ],
        [
            "by rewrite setIA (setIidPl sAD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_ract S : 'N(S | to \\ sAD) = 'N_A(S | to).",
            "VernacStartTheoremProof",
            "fda883cf0efcbbb6741feac3b6c84685e2a58224"
        ],
        [
            "by rewrite setIA (setIidPl sAD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_ract (B : {set aT}) S : [acts B, on S | to \\ sAD] = (B \\subset A) && [acts B, on S | to].",
            "VernacStartTheoremProof",
            "abc8dd4213b436ea6d89231c7663d755f75ee9d6"
        ],
        [
            "by rewrite astabs_ract subsetI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RestrictActionTheory.",
            "VernacEndSegment",
            "50b5a28e24f92630e834320ec2513b81f194ecea"
        ],
        [
            "Section MorphAct.",
            "VernacBeginSection",
            "c7b62107d66f913839c78308275b31e6351eedd2"
        ],
        [
            "Variables (aT : finGroupType) (D : {group aT}) (rT : finType).",
            "VernacAssumption",
            "e632a6871b54377db454f7de7407029cf8b1537e"
        ],
        [
            "Variable phi : {morphism D >-> {perm rT}}.",
            "VernacAssumption",
            "41fb2747d3f1f9d43d4dbf24f1fa32a8e2ac7cd6"
        ],
        [
            "Definition mact x a := phi a x.",
            "VernacDefinition",
            "ac46b08aa6dbad8c78884e17aa406f6a9cb6cad9"
        ],
        [
            "Lemma mact_is_action : is_action D mact.",
            "VernacStartTheoremProof",
            "e2b26a6003fc795d09e80c0a3b05d802f3e3c8c2"
        ],
        [
            "split=> [a x y | x a b Da Db]; first exact: perm_inj.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /mact morphM //= permM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical morph_action := Action mact_is_action.",
            "VernacDefinition",
            "4697fb692136e3af9be836abcdba965da6756e38"
        ],
        [
            "Lemma mactE x a : morph_action x a = phi a x.",
            "VernacStartTheoremProof",
            "d03d375e5a9c0076d26709b75f95bf168d8758bd"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_faithful : 'injm phi -> [faithful D, on setT | morph_action].",
            "VernacStartTheoremProof",
            "bf6d422c75858942c7b87a83c587c920b317c406"
        ],
        [
            "move/injmP=> phi_inj; apply/subsetP=> a /setIP[Da /astab_act a1].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply/set1P/phi_inj => //; apply/permP=> x.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite morph1 perm1 -mactE a1 ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_mact a : actperm morph_action a = phi a.",
            "VernacStartTheoremProof",
            "aca9ecc600edaca04e3fa3529826ae59f078324a"
        ],
        [
            "by apply/permP=> x; rewrite permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MorphAct.",
            "VernacEndSegment",
            "91e37b01f030da7805ffc009f83464d4764aabad"
        ],
        [
            "Notation \"<< phi >>\" := (morph_action phi) : action_scope.",
            "VernacNotation",
            "fa9528cda72000ebd45289dca3127dbe40779833"
        ],
        [
            "Section CompAct.",
            "VernacBeginSection",
            "601e2f5108d6522fb5d1ecce4005dcdc269491ed"
        ],
        [
            "Variables (gT aT : finGroupType) (rT : finType).",
            "VernacAssumption",
            "bdeacc12016f478cd4faaf571011c458be75f951"
        ],
        [
            "Variables (D : {set aT}) (to : action D rT).",
            "VernacAssumption",
            "5a824e7d6f48ac3cb19e77c1422078a5cf89886a"
        ],
        [
            "Variables (B : {set gT}) (f : {morphism B >-> aT}).",
            "VernacAssumption",
            "bdc67769b61065ef6607ca9a26b068cf274d3734"
        ],
        [
            "Definition comp_act x e := to x (f e).",
            "VernacDefinition",
            "0409ed1821ce69a8941ae084e1e5c3c67f4f6dcb"
        ],
        [
            "Lemma comp_is_action : is_action (f @*^-1 D) comp_act.",
            "VernacStartTheoremProof",
            "baf98788a5cc30c4522a779f9a10d1c0e1db9f89"
        ],
        [
            "split=> [e | x e1 e2]; first exact: act_inj.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/morphpreP=> Be1 Dfe1; case/morphpreP=> Be2 Dfe2.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite /comp_act morphM ?actMin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical comp_action := Action comp_is_action.",
            "VernacDefinition",
            "2c8e5735462a0e2f70cb1cb6a8e2c8a47dab93a0"
        ],
        [
            "Lemma comp_actE x e : comp_action x e = to x (f e).",
            "VernacStartTheoremProof",
            "eaffbb0931a9fbd77606c8fb91ec75eb68c4935c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afix_comp (A : {set gT}) : A \\subset B -> 'Fix_comp_action(A) = 'Fix_to(f @* A).",
            "VernacStartTheoremProof",
            "c518b2a658d73b4eaef09b190ab8c660432ef820"
        ],
        [
            "move=> sAB; apply/setP=> x; rewrite !inE /morphim (setIidPr sAB).",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply/subsetP/subsetP=> [cAx _ /imsetP[a Aa ->] | cfAx a Aa].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move/cAx: Aa; rewrite !inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite inE; move/(_ (f a)): cfAx; rewrite inE mem_imset // => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_comp S : 'C(S | comp_action) = f @*^-1 'C(S | to).",
            "VernacStartTheoremProof",
            "d33018eab5d6256c1de77f77006f964e167c6c84"
        ],
        [
            "by apply/setP=> x; rewrite !inE -andbA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_comp S : 'N(S | comp_action) = f @*^-1 'N(S | to).",
            "VernacStartTheoremProof",
            "4de38893d3183558ee45ce384678e157a95cfe05"
        ],
        [
            "by apply/setP=> x; rewrite !inE -andbA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CompAct.",
            "VernacEndSegment",
            "e05caa23d57651490d7bf3849db1c5dd636c0afc"
        ],
        [
            "Notation \"to \\o f\" := (comp_action to f) : action_scope.",
            "VernacNotation",
            "67be9f792b78c9f42b271556275588656790c848"
        ],
        [
            "Section PermAction.",
            "VernacBeginSection",
            "e11cbbc0b175d163407a1763fd66c8497836e3ef"
        ],
        [
            "Variable rT : finType.",
            "VernacAssumption",
            "f3f924737963ca1711007527ea33e64499d0622a"
        ],
        [
            "Local Notation gT := {perm rT}.",
            "VernacSyntacticDefinition",
            "e396c2ec08a2248f8e3fd8fbc4eac66e0da44293"
        ],
        [
            "Implicit Types a b c : gT.",
            "VernacReserve",
            "de85dd0c542a1f71283b395c836f37641e3896f0"
        ],
        [
            "Lemma aperm_is_action : is_action setT (@aperm rT).",
            "VernacStartTheoremProof",
            "21505e97a7ffcd61f700447cbdff00ee78bb10de"
        ],
        [
            "by apply: is_total_action => [x|x a b]; rewrite apermE (perm1, permM).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical perm_action := Action aperm_is_action.",
            "VernacDefinition",
            "506eb7ff5a4d71b0455dc772a6c991470b794143"
        ],
        [
            "Lemma pcycleE a : pcycle a = orbit perm_action <[a]>%g.",
            "VernacStartTheoremProof",
            "368cb2e9ab183501020221d5ec62da44c23fd66c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_act1P a : reflect (forall x, aperm x a = x) (a == 1).",
            "VernacStartTheoremProof",
            "c582eadb470cf9c0c55187a872c07485cc5a5c0d"
        ],
        [
            "apply: (iffP eqP) => [-> x | a1]; first exact: act1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/permP=> x; rewrite -apermE a1 perm1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_faithful A : [faithful A, on setT | perm_action].",
            "VernacStartTheoremProof",
            "d9e7213bfae89b73bdc955ededb24182b6ba80f1"
        ],
        [
            "apply/subsetP=> a /setIP[Da crTa].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/set1P; apply/permP=> x; rewrite -apermE perm1 (astabP crTa) ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actperm_id p : actperm perm_action p = p.",
            "VernacStartTheoremProof",
            "74338920a9ed90d57865d65c1f7d6c83ec9277b5"
        ],
        [
            "by apply/permP=> x; rewrite permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PermAction.",
            "VernacEndSegment",
            "58158d5c794d157d25a830c46c4a9621e7ae801a"
        ],
        [
            "Arguments perm_act1P {rT a}.",
            "VernacArguments",
            "bc16b8701c1cba67247fc12c7451103b0e350c67"
        ],
        [
            "Notation \"'P\" := (perm_action _) (at level 8) : action_scope.",
            "VernacNotation",
            "9422fd704bb15eb151eff73fa6d0835a60d1868d"
        ],
        [
            "Section ActpermOrbits.",
            "VernacBeginSection",
            "956376d2a70c209a035f762f6b1e8b227c55b136"
        ],
        [
            "Variables (aT : finGroupType) (D : {group aT}) (rT : finType).",
            "VernacAssumption",
            "e632a6871b54377db454f7de7407029cf8b1537e"
        ],
        [
            "Variable to : action D rT.",
            "VernacAssumption",
            "b9526a37c12151838390355907ab0fad44bfeba3"
        ],
        [
            "Lemma orbit_morphim_actperm (A : {set aT}) : A \\subset D -> orbit 'P (actperm to @* A) =1 orbit to A.",
            "VernacStartTheoremProof",
            "165d25dccab17cbdabdaae844e68d15f2b68fda6"
        ],
        [
            "move=> sAD x; rewrite morphimEsub // /orbit -imset_comp.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: eq_imset => a //=; rewrite actpermK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcycle_actperm (a : aT) : a \\in D -> pcycle (actperm to a) =1 orbit to <[a]>.",
            "VernacStartTheoremProof",
            "64b309059b8d92df8bf9e9baf7f2c5fa9b511fed"
        ],
        [
            "move=> Da x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite pcycleE -orbit_morphim_actperm ?cycle_subG ?morphim_cycle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ActpermOrbits.",
            "VernacEndSegment",
            "2e994bdb88af8096cbafd0da8f5f79afd8fd77bc"
        ],
        [
            "Section RestrictPerm.",
            "VernacBeginSection",
            "d2ce2b7e3788a888cab9810e56b6860529c2846d"
        ],
        [
            "Variables (T : finType) (S : {set T}).",
            "VernacAssumption",
            "992631637f82964a90317d8756bbbab5a24d457e"
        ],
        [
            "Definition restr_perm := actperm (<[subxx 'N(S | 'P)]>).",
            "VernacDefinition",
            "fb4597091ddd1fa87facc4d949dca0f41c4ed51e"
        ],
        [
            "Canonical restr_perm_morphism := [morphism of restr_perm].",
            "VernacDefinition",
            "9cd0c436d061186f8a6974816a01f5bf719cab75"
        ],
        [
            "Lemma restr_perm_on p : perm_on S (restr_perm p).",
            "VernacStartTheoremProof",
            "6f839dc17c598dfd5218fdb5c3d21e4a97332e15"
        ],
        [
            "apply/subsetP=> x; apply: contraR => notSx.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite permE /= /actby (negPf notSx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triv_restr_perm p : p \\notin 'N(S | 'P) -> restr_perm p = 1.",
            "VernacStartTheoremProof",
            "3a17a408552f6b5310eb1c65d5fc37ff97286ebd"
        ],
        [
            "move=> not_nSp; apply/permP=> x.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite !permE /= /actby (negPf not_nSp) andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma restr_permE : {in 'N(S | 'P) & S, forall p, restr_perm p =1 p}.",
            "VernacStartTheoremProof",
            "c46612e7e03081bc0e103bd8ca10de8644576995"
        ],
        [
            "by move=> y x nSp Sx; rewrite /= actpermE actbyE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ker_restr_perm : 'ker restr_perm = 'C(S | 'P).",
            "VernacStartTheoremProof",
            "9fa0493b4c9c8277970d4a6470ac1a5ee0ddb5e4"
        ],
        [
            "by rewrite ker_actperm astab_actby setIT (setIidPr (astab_sub _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma im_restr_perm p : restr_perm p @: S = S.",
            "VernacStartTheoremProof",
            "689424d977e8da9e8176fbdb68f3461dae68c0e7"
        ],
        [
            "exact: im_perm_on (restr_perm_on p).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RestrictPerm.",
            "VernacEndSegment",
            "742886a2b10e754ac8e0f71c3eb4fd2bb0f444e6"
        ],
        [
            "Section AutIn.",
            "VernacBeginSection",
            "75166b3061f5d8400ba74e7a53b073b49dd7cf50"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Definition Aut_in A (B : {set gT}) := 'N_A(B | 'P) / 'C_A(B | 'P).",
            "VernacDefinition",
            "33604b12b939fd68fb078ba2202a9e684814be41"
        ],
        [
            "Variables G H : {group gT}.",
            "VernacAssumption",
            "b7838ac911594f2718dd1e9de8e135dda3e6f9f8"
        ],
        [
            "Hypothesis sHG: H \\subset G.",
            "VernacAssumption",
            "e6a1d44b7def616917f2606808485d59eddc6886"
        ],
        [
            "Lemma Aut_restr_perm a : a \\in Aut G -> restr_perm H a \\in Aut H.",
            "VernacStartTheoremProof",
            "b797cf90fc6b8fd0480eb0b7e0f6c361cc4e43be"
        ],
        [
            "move=> AutGa.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case nHa: (a \\in 'N(H | 'P)); last by rewrite triv_restr_perm ?nHa ?group1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite inE restr_perm_on; apply/morphicP=> x y Hx Hy /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !restr_permE ?groupM // -(autmE AutGa) morphM ?(subsetP sHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma restr_perm_Aut : restr_perm H @* Aut G \\subset Aut H.",
            "VernacStartTheoremProof",
            "ff52a4d1d2381b80d87106d24e08c2a40c70b9c8"
        ],
        [
            "by apply/subsetP=> a'; case/morphimP=> a _ AutGa ->{a'}; apply: Aut_restr_perm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Aut_in_isog : Aut_in (Aut G) H \\isog restr_perm H @* Aut G.",
            "VernacStartTheoremProof",
            "ce96f78bd2760a9896d0f14e9f2f5a9f549d3daf"
        ],
        [
            "rewrite /Aut_in -ker_restr_perm kerE -morphpreIdom -morphimIdom -kerE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite setIA (setIC _ (Aut G)) first_isog_loc ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Aut_sub_fullP : reflect (forall h : {morphism H >-> gT}, 'injm h -> h @* H = H -> exists g : {morphism G >-> gT}, [/\\ 'injm g, g @* G = G & {in H, g =1 h}]) (Aut_in (Aut G) H \\isog Aut H).",
            "VernacStartTheoremProof",
            "b1e1481877a7b9f492efbd7b660de5c251ee9d45"
        ],
        [
            "rewrite (isog_transl _ Aut_in_isog) /=; set rG := _ @* _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "apply: (iffP idP) => [iso_rG h injh hH| AutHinG].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have: aut injh hH \\in rG; last case/morphimP=> g nHg AutGg def_g.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "suffices ->: rG = Aut H by apply: Aut_aut.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by apply/eqP; rewrite eqEcard restr_perm_Aut /= (card_isog iso_rG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (autm_morphism AutGg); rewrite injm_autm im_autm; split=> // x Hx.",
            "VernacExtend",
            "2148f3ea1d428f351ad8ac80e073b69e15ae2ab9"
        ],
        [
            "by rewrite -(autE injh hH Hx) def_g actpermE actbyE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices ->: rG = Aut H by apply: isog_refl.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply/eqP; rewrite eqEsubset restr_perm_Aut /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/subsetP=> h AutHh; have hH := im_autm AutHh.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "have [g [injg gG eq_gh]] := AutHinG _ (injm_autm AutHh) hH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [Ng AutGg]: aut injg gG \\in 'N(H | 'P) /\\ aut injg gG \\in Aut G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Aut_aut !inE; split=> //; apply/subsetP=> x Hx.",
            "VernacExtend",
            "b6a6e2560678dcfd8f1a5f2ca82748c79b5f92ee"
        ],
        [
            "by rewrite inE /= /aperm autE ?(subsetP sHG) // -hH eq_gh ?mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/morphimP; exists (aut injg gG) => //; apply: (eq_Aut AutHh) => [|x Hx].",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "by rewrite (subsetP restr_perm_Aut) // mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite restr_permE //= /aperm autE ?eq_gh ?(subsetP sHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AutIn.",
            "VernacEndSegment",
            "8192f9a2e847ef86abdf75d9ee1c16ca2b145d9a"
        ],
        [
            "Arguments Aut_in {gT} A%g B%g.",
            "VernacArguments",
            "b8868b8185c0952fc7d0a090f11f8afbc996e249"
        ],
        [
            "Section InjmAutIn.",
            "VernacBeginSection",
            "9b7001bc598a2405300b9506e391916b10d969f0"
        ],
        [
            "Variables (gT rT : finGroupType) (D G H : {group gT}) (f : {morphism D >-> rT}).",
            "VernacAssumption",
            "0ef592293b3e0ffb58d3c1cf4af1936c8fafb6b1"
        ],
        [
            "Hypotheses (injf : 'injm f) (sGD : G \\subset D) (sHG : H \\subset G).",
            "VernacAssumption",
            "e3a385497f0564615deef0b6cf60022c9f5fb24d"
        ],
        [
            "Let sHD := subset_trans sHG sGD.",
            "VernacDefinition",
            "b4c493cd0106048289ebdbc63411ba4a5dbbeb2b"
        ],
        [
            "Local Notation fGisom := (Aut_isom injf sGD).",
            "VernacSyntacticDefinition",
            "0f7c2b95a93c2079d90100a2bf0f034c9cab20f3"
        ],
        [
            "Local Notation fHisom := (Aut_isom injf sHD).",
            "VernacSyntacticDefinition",
            "58f6fbde060d1907ce60ba3e844a2faa95734300"
        ],
        [
            "Local Notation inH := (restr_perm H).",
            "VernacSyntacticDefinition",
            "537aacdb224b4242b3ccdf968dd835ab48b30a1b"
        ],
        [
            "Local Notation infH := (restr_perm (f @* H)).",
            "VernacSyntacticDefinition",
            "2e1e88590481262dc5d003d1cc291e898fcae2df"
        ],
        [
            "Lemma astabs_Aut_isom a : a \\in Aut G -> (fGisom a \\in 'N(f @* H | 'P)) = (a \\in 'N(H | 'P)).",
            "VernacStartTheoremProof",
            "493924583f29f2a9f3df1ab2b605f15c062890ae"
        ],
        [
            "move=> AutGa; rewrite !inE sub_morphim_pre // subsetI sHD /= /aperm.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite !(sameP setIidPl eqP) !eqEsubset !subsetIl; apply: eq_subset_r => x.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite !inE; apply: andb_id2l => Hx; have Gx: x \\in G := subsetP sHG x Hx.",
            "VernacExtend",
            "c6ff91ceee22c8fcb242ad6d0dc8ed6693b7fb7e"
        ],
        [
            "have Dax: a x \\in D by rewrite (subsetP sGD) // Aut_closed.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite Aut_isomE // -!sub1set -morphim_set1 // injmSK ?sub1set.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isom_restr_perm a : a \\in Aut G -> fHisom (inH a) = infH (fGisom a).",
            "VernacStartTheoremProof",
            "8d49b3637d75e1e60fa222d2756c7fc9baaebaf4"
        ],
        [
            "move=> AutGa; case nHa: (a \\in 'N(H | 'P)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !triv_restr_perm ?astabs_Aut_isom ?nHa ?morph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (eq_Aut (Aut_Aut_isom injf sHD _)) => [|fx Hfx /=].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite (Aut_restr_perm (morphimS f sHG)) ?Aut_Aut_isom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [x Dx Hx def_fx] := morphimP Hfx; have Gx := subsetP sHG x Hx.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite {1}def_fx Aut_isomE ?(Aut_restr_perm sHG) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !restr_permE ?astabs_Aut_isom // def_fx Aut_isomE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma restr_perm_isom : isom (inH @* Aut G) (infH @* Aut (f @* G)) fHisom.",
            "VernacStartTheoremProof",
            "90709dd0dfaa6e81c30d99497686efd9bcb82aa7"
        ],
        [
            "apply: sub_isom; rewrite ?restr_perm_Aut ?injm_Aut_isom //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(im_Aut_isom injf sGD) -!morphim_comp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_in_morphim; last exact: isom_restr_perm.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/setP=> a; rewrite 2!in_setI; apply: andb_id2r => AutGa.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite /= inE andbC inE (Aut_restr_perm sHG) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by symmetry; rewrite inE AutGa inE astabs_Aut_isom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_Aut_sub : Aut_in (Aut (f @* G)) (f @* H) \\isog Aut_in (Aut G) H.",
            "VernacStartTheoremProof",
            "323bc58c4526f58d0b519b10853653a8d2eabb91"
        ],
        [
            "do 2!rewrite isog_sym (isog_transl _ (Aut_in_isog _ _)).",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "by rewrite isog_sym (isom_isog _ _ restr_perm_isom) // restr_perm_Aut.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_Aut_full : (Aut_in (Aut (f @* G)) (f @* H) \\isog Aut (f @* H)) = (Aut_in (Aut G) H \\isog Aut H).",
            "VernacStartTheoremProof",
            "439193c9b16b34b9a1252afa033614c75f58c7bf"
        ],
        [
            "by rewrite (isog_transl _ injm_Aut_sub) (isog_transr _ (injm_Aut injf sHD)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InjmAutIn.",
            "VernacEndSegment",
            "3211458e246ae2a7014c953408c4e70847dd5f04"
        ],
        [
            "Section GroupAction.",
            "VernacBeginSection",
            "7518571778d5a8c79cc54168beeedbaf9ab11738"
        ],
        [
            "Variables (aT rT : finGroupType) (D : {set aT}) (R : {set rT}).",
            "VernacAssumption",
            "4b109159a0623bb5f37ad0e23cc39b4ba34a54a0"
        ],
        [
            "Local Notation actT := (action D rT).",
            "VernacSyntacticDefinition",
            "5b54a2f97fa6c0fc02f271c90739206da4f75000"
        ],
        [
            "Definition is_groupAction (to : actT) := {in D, forall a, actperm to a \\in Aut R}.",
            "VernacDefinition",
            "b0dfc0488e48a275e3ae5687f437c3b6310ac47b"
        ],
        [
            "Structure groupAction := GroupAction {gact :> actT; _ : is_groupAction gact}.",
            "VernacInductive",
            "9fdb19fccd03c3c7d3a58674ca7f0699a18670a9"
        ],
        [
            "Definition clone_groupAction to := let: GroupAction _ toA := to return {type of GroupAction for to} -> _ in fun k => k toA : groupAction.",
            "VernacDefinition",
            "0ed47375fbcae0a8831c85e5f020a4891de1ba47"
        ],
        [
            "End GroupAction.",
            "VernacEndSegment",
            "939ec5df44435b6c60d5bc8066edf5ea5b309398"
        ],
        [
            "Delimit Scope groupAction_scope with gact.",
            "VernacDelimiters",
            "67ef49f41d9fc38cee7fcc00df6921be1b0d90d6"
        ],
        [
            "Bind Scope groupAction_scope with groupAction.",
            "VernacBindScope",
            "8e5e1ffe8bb32269130006c8a318787f010ce101"
        ],
        [
            "Arguments is_groupAction {aT rT D%g} R%g to%act.",
            "VernacArguments",
            "b6791e4a206ea6d6320464ae44f60b6d96aeec2e"
        ],
        [
            "Arguments groupAction {aT rT} D%g R%g.",
            "VernacArguments",
            "592418efb1b7364bcb2fba9ba7ba37b6b5cb577b"
        ],
        [
            "Arguments gact {aT rT D%g R%g} to%gact : rename.",
            "VernacArguments",
            "cd51f5e817f92df109396b83bb72437e92fce86f"
        ],
        [
            "Notation \"[ 'groupAction' 'of' to ]\" := (clone_groupAction (@GroupAction _ _ _ _ to)) (at level 0, format \"[ 'groupAction' 'of' to ]\") : form_scope.",
            "VernacNotation",
            "b94320c54535fef15cf0a63a5327a9c27e80955f"
        ],
        [
            "Section GroupActionDefs.",
            "VernacBeginSection",
            "cf408f5936b55dd77e6c7adff67544c84b5e77a7"
        ],
        [
            "Variables (aT rT : finGroupType) (D : {set aT}) (R : {set rT}).",
            "VernacAssumption",
            "4b109159a0623bb5f37ad0e23cc39b4ba34a54a0"
        ],
        [
            "Implicit Type A : {set aT}.",
            "VernacReserve",
            "ee3779257cd003c0985795fc4e8b8630d6d2d22e"
        ],
        [
            "Implicit Type S : {set rT}.",
            "VernacReserve",
            "6fa89eafa2e04d4f611434b90dec50d86c9a15f0"
        ],
        [
            "Implicit Type to : groupAction D R.",
            "VernacReserve",
            "535abf056593e7c0c5732d0d52127647345c12ac"
        ],
        [
            "Definition gact_range of groupAction D R := R.",
            "VernacDefinition",
            "6a148de30f004e336a54d18977d1b932ef795a32"
        ],
        [
            "Definition gacent to A := 'Fix_(R | to)(D :&: A).",
            "VernacDefinition",
            "201369da0440b354c7fa639d95684317c3a9410f"
        ],
        [
            "Definition acts_on_group A S to := [acts A, on S | to] /\\ S \\subset R.",
            "VernacDefinition",
            "fa904d145023edf4f34950eb8f18be6d60555213"
        ],
        [
            "Coercion actby_cond_group A S to : acts_on_group A S to -> actby_cond A S to := @proj1 _ _.",
            "VernacDefinition",
            "31185d432d1b73ea594c09116ebd06dd95cfccda"
        ],
        [
            "Definition acts_irreducibly A S to := [min S of G | G :!=: 1 & [acts A, on G | to]].",
            "VernacDefinition",
            "c0baaf5ead22fdf354f68bd550d716c7115bddbe"
        ],
        [
            "End GroupActionDefs.",
            "VernacEndSegment",
            "b2e6601f53d4e79bf8669b8465b3cd8b8a65bbcf"
        ],
        [
            "Arguments gacent {aT rT D%g R%g} to%gact A%g.",
            "VernacArguments",
            "8ee51180ceb0ae2c689f25ccfc205fa2bce81eed"
        ],
        [
            "Arguments acts_on_group {aT rT D%g R%g} A%g S%g to%gact.",
            "VernacArguments",
            "6f9f6670853c19005752dfa286a0374bb1d1e3be"
        ],
        [
            "Arguments acts_irreducibly {aT rT D%g R%g} A%g S%g to%gact.",
            "VernacArguments",
            "7289b0d57f51ac18fd30a15fa5b98e56ddaf34e0"
        ],
        [
            "Notation \"''C_' ( | to ) ( A )\" := (gacent to A) (at level 8, format \"''C_' ( | to ) ( A )\") : group_scope.",
            "VernacNotation",
            "17dcffc99aa7c4fee95354b33bacd0e48ce9a2e6"
        ],
        [
            "Notation \"''C_' ( G | to ) ( A )\" := (G :&: 'C_(|to)(A)) (at level 8, format \"''C_' ( G | to ) ( A )\") : group_scope.",
            "VernacNotation",
            "8ad1dde9f985f75a3cd584aae4b7226aba1787f8"
        ],
        [
            "Notation \"''C_' ( | to ) [ a ]\" := 'C_(|to)([set a]) (at level 8, format \"''C_' ( | to ) [ a ]\") : group_scope.",
            "VernacNotation",
            "5fef5557b311931f9b100258f91968484a350c22"
        ],
        [
            "Notation \"''C_' ( G | to ) [ a ]\" := 'C_(G | to)([set a]) (at level 8, format \"''C_' ( G | to ) [ a ]\") : group_scope.",
            "VernacNotation",
            "9e7c6277f8b8837004d4f0328f88de4ae912d73d"
        ],
        [
            "Notation \"{ 'acts' A , 'on' 'group' G | to }\" := (acts_on_group A G to) (at level 0, format \"{ 'acts' A , 'on' 'group' G | to }\") : form_scope.",
            "VernacNotation",
            "5f94fd3cc976f16d585a81e7b106c6e383416557"
        ],
        [
            "Section RawGroupAction.",
            "VernacBeginSection",
            "728f3b6aff49b70c58ed7863fdd3c98b3cd541d9"
        ],
        [
            "Variables (aT rT : finGroupType) (D : {set aT}) (R : {set rT}).",
            "VernacAssumption",
            "4b109159a0623bb5f37ad0e23cc39b4ba34a54a0"
        ],
        [
            "Variable to : groupAction D R.",
            "VernacAssumption",
            "cfe4a4e1f3d29e06fefc34a050489a593becd22f"
        ],
        [
            "Lemma actperm_Aut : is_groupAction R to.",
            "VernacStartTheoremProof",
            "c58f97a38d5afe9abee9480961c0192e33c1741f"
        ],
        [
            "by case: to.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma im_actperm_Aut : actperm to @* D \\subset Aut R.",
            "VernacStartTheoremProof",
            "14c2d4d432d05749109ef604e0732add87f56e7d"
        ],
        [
            "by apply/subsetP=> _ /morphimP[a _ Da ->]; apply: actperm_Aut.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gact_out x a : a \\in D -> x \\notin R -> to x a = x.",
            "VernacStartTheoremProof",
            "cf4fe4fba5c2ded609745be15cc782fd0d721dc3"
        ],
        [
            "by move=> Da Rx; rewrite -actpermE (out_Aut _ Rx) ?actperm_Aut.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gactM : {in D, forall a, {in R &, {morph to^~ a : x y / x * y}}}.",
            "VernacStartTheoremProof",
            "c7e9bbf014409cca03d62ea8cab06a88d31fecde"
        ],
        [
            "move=> a Da /= x y; rewrite -!(actpermE to); apply: morphicP x y.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite Aut_morphic ?actperm_Aut.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actmM a : {in R &, {morph actm to a : x y / x * y}}.",
            "VernacStartTheoremProof",
            "4f0977b720e5251155bb9eead6b8d04cc8bb462f"
        ],
        [
            "by rewrite /actm; case: ifP => //; apply: gactM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical act_morphism a := Morphism (actmM a).",
            "VernacDefinition",
            "da7e3daf5d805155fd0fcb40fecf1d992b8308ef"
        ],
        [
            "Lemma morphim_actm : {in D, forall a (S : {set rT}), S \\subset R -> actm to a @* S = to^* S a}.",
            "VernacStartTheoremProof",
            "9321d45d5c68a119a2c2ae1be5c6444968fd5c75"
        ],
        [
            "by move=> a Da /= S sSR; rewrite /morphim /= actmEfun ?(setIidPr _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variables (a : aT) (A B : {set aT}) (S : {set rT}).",
            "VernacAssumption",
            "307ccad43702e7ecb0707fb72db95b0a25c8d689"
        ],
        [
            "Lemma gacentIdom : 'C_(|to)(D :&: A) = 'C_(|to)(A).",
            "VernacStartTheoremProof",
            "c3aaef04bb9eb2c31d7740b1a61426bb114fef62"
        ],
        [
            "by rewrite /gacent setIA setIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacentIim : 'C_(R | to)(A) = 'C_(|to)(A).",
            "VernacStartTheoremProof",
            "b8a698155ae9bea440fe45903e788dc7fd0bb77b"
        ],
        [
            "by rewrite setIA setIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacentS : A \\subset B -> 'C_(|to)(B) \\subset 'C_(|to)(A).",
            "VernacStartTheoremProof",
            "ec548ec9e38a9fbdc129bfe257072fc5da64c25a"
        ],
        [
            "by move=> sAB; rewrite !(setIS, afixS).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacentU : 'C_(|to)(A :|: B) = 'C_(|to)(A) :&: 'C_(|to)(B).",
            "VernacStartTheoremProof",
            "c8499ca4239c73264844892f21dbf04c02cca34d"
        ],
        [
            "by rewrite -setIIr -afixU -setIUr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypotheses (Da : a \\in D) (sAD : A \\subset D) (sSR : S \\subset R).",
            "VernacAssumption",
            "f60e86fe80647c07ffbf24fc03d2ddc7709228e7"
        ],
        [
            "Lemma gacentE : 'C_(|to)(A) = 'Fix_(R | to)(A).",
            "VernacStartTheoremProof",
            "6057009e558781430340fbd48f9aab02f854ef57"
        ],
        [
            "by rewrite -{2}(setIidPr sAD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacent1E : 'C_(|to)[a] = 'Fix_(R | to)[a].",
            "VernacStartTheoremProof",
            "82f5b252b2f805bd0554b1489d5de82dc59b4894"
        ],
        [
            "by rewrite /gacent [D :&: _](setIidPr _) ?sub1set.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subgacentE : 'C_(S | to)(A) = 'Fix_(S | to)(A).",
            "VernacStartTheoremProof",
            "4139c83c5d8835a38d7ac4d89d276cd68ae458f0"
        ],
        [
            "by rewrite gacentE setIA (setIidPl sSR).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subgacent1E : 'C_(S | to)[a] = 'Fix_(S | to)[a].",
            "VernacStartTheoremProof",
            "576c8f9e707702ba1421da9ac5dc9edc6ecf4e79"
        ],
        [
            "by rewrite gacent1E setIA (setIidPl sSR).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RawGroupAction.",
            "VernacEndSegment",
            "e747bf75b39ebb6652b27252c18be29e7a484ecb"
        ],
        [
            "Section GroupActionTheory.",
            "VernacBeginSection",
            "b0162c5bac8e6edb6ad892b8dec7bb2ae0313244"
        ],
        [
            "Variables aT rT : finGroupType.",
            "VernacAssumption",
            "c03f9f132a62f50e5b8a55602b7e57809fe23d94"
        ],
        [
            "Variables (D : {group aT}) (R : {group rT}) (to : groupAction D R).",
            "VernacAssumption",
            "b128df8c5264aabbf8988c2e1cc0e4e8bbdf5693"
        ],
        [
            "Implicit Type A B : {set aT}.",
            "VernacReserve",
            "cba199870ca25ade6760f7a7db6e8bf94a611b90"
        ],
        [
            "Implicit Types G H : {group aT}.",
            "VernacReserve",
            "a13fcfdf12efc37659f1b02da060aa8f6a0df4de"
        ],
        [
            "Implicit Type S : {set rT}.",
            "VernacReserve",
            "6fa89eafa2e04d4f611434b90dec50d86c9a15f0"
        ],
        [
            "Implicit Types M N : {group rT}.",
            "VernacReserve",
            "03538643b2bb130e7117dca007c0469c5f873c4f"
        ],
        [
            "Lemma gact1 : {in D, forall a, to 1 a = 1}.",
            "VernacStartTheoremProof",
            "89957839ee2ad87728a14b3775c5bfee594d8a5a"
        ],
        [
            "by move=> a Da; rewrite /= -actmE ?morph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gactV : {in D, forall a, {in R, {morph to^~ a : x / x^-1}}}.",
            "VernacStartTheoremProof",
            "4d54df54237732d3370493cfa273fd77ae774a2d"
        ],
        [
            "by move=> a Da /= x Rx; move; rewrite -!actmE ?morphV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gactX : {in D, forall a n, {in R, {morph to^~ a : x / x ^+ n}}}.",
            "VernacStartTheoremProof",
            "517eb906f2aebeea65e98d0adef05b6dceefbcc8"
        ],
        [
            "by move=> a Da /= n x Rx; rewrite -!actmE // morphX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gactJ : {in D, forall a, {in R &, {morph to^~ a : x y / x ^ y}}}.",
            "VernacStartTheoremProof",
            "84f0a5b73b914757b700402d5c120b2a87fee8c3"
        ],
        [
            "by move=> a Da /= x Rx y Ry; rewrite -!actmE // morphJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gactR : {in D, forall a, {in R &, {morph to^~ a : x y / [~ x, y]}}}.",
            "VernacStartTheoremProof",
            "16c9039a3e4cf63c39f34120510ecf4bfba4b8cb"
        ],
        [
            "by move=> a Da /= x Rx y Ry; rewrite -!actmE // morphR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gact_stable : {acts D, on R | to}.",
            "VernacStartTheoremProof",
            "fda81f044b946ba83da9a83ba3f08df8f462c325"
        ],
        [
            "apply: acts_act; apply/subsetP=> a Da; rewrite !inE Da.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "apply/subsetP=> x; rewrite inE; apply: contraLR => R'xa.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite -(actKin to Da x) gact_out ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma group_set_gacent A : group_set 'C_(|to)(A).",
            "VernacStartTheoremProof",
            "15139a34f31340681ccc5461d9365226d46dfff9"
        ],
        [
            "apply/group_setP; split=> [|x y].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite !inE group1; apply/subsetP=> a /setIP[Da _]; rewrite inE gact1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/setIP=> Rx /afixP cAx /setIP[Ry /afixP cAy].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite inE groupM //; apply/afixP=> a Aa.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite gactM ?cAx ?cAy //; case/setIP: Aa.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical gacent_group A := Group (group_set_gacent A).",
            "VernacDefinition",
            "796e8644133dda95f838ec54f22bfed3f064e96a"
        ],
        [
            "Lemma gacent1 : 'C_(|to)(1) = R.",
            "VernacStartTheoremProof",
            "0eac5e5aa87d8250916b69d4ee8c5ea10f88081e"
        ],
        [
            "by rewrite /gacent (setIidPr (sub1G _)) afix1 setIT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacent_gen A : A \\subset D -> 'C_(|to)(<<A>>) = 'C_(|to)(A).",
            "VernacStartTheoremProof",
            "edd89943b7a49d24466f342bb4432c1d6dfa45c1"
        ],
        [
            "by move=> sAD; rewrite /gacent ![D :&: _](setIidPr _) ?gen_subG ?afix_gen_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacentD1 A : 'C_(|to)(A^#) = 'C_(|to)(A).",
            "VernacStartTheoremProof",
            "3c70a9e874f8ce754517cad05c82751620e21f83"
        ],
        [
            "rewrite -gacentIdom -gacent_gen ?subsetIl // setIDA genD1 ?group1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite gacent_gen ?subsetIl // gacentIdom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacent_cycle a : a \\in D -> 'C_(|to)(<[a]>) = 'C_(|to)[a].",
            "VernacStartTheoremProof",
            "11e9490ad29316de20105615e67b99f5d1dd98d5"
        ],
        [
            "by move=> Da; rewrite gacent_gen ?sub1set.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacentY A B : A \\subset D -> B \\subset D -> 'C_(|to)(A <*> B) = 'C_(|to)(A) :&: 'C_(|to)(B).",
            "VernacStartTheoremProof",
            "1bfb27eae1364e591ea64850a89ba7ebf4aa4a3e"
        ],
        [
            "by move=> sAD sBD; rewrite gacent_gen ?gacentU // subUset sAD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacentM G H : G \\subset D -> H \\subset D -> 'C_(|to)(G * H) = 'C_(|to)(G) :&: 'C_(|to)(H).",
            "VernacStartTheoremProof",
            "9035bae5dce9c9771b3f9178c3049ba552c19801"
        ],
        [
            "by move=> sGD sHB; rewrite -gacent_gen ?mul_subG // genM_join gacentY.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab1 : 'C(1 | to) = D.",
            "VernacStartTheoremProof",
            "2cf29134a63d1af1a6cbc9791437aad8eaf1cf64"
        ],
        [
            "by apply/setP=> x; rewrite ?(inE, sub1set) andb_idr //; move/gact1=> ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_range : 'C(R | to) = 'C(setT | to).",
            "VernacStartTheoremProof",
            "6529b8a9524ae47bd59575134d8354f65af3c2d3"
        ],
        [
            "apply/eqP; rewrite eqEsubset andbC astabS ?subsetT //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/subsetP=> a cRa; have Da := astab_dom cRa; rewrite !inE Da.",
            "VernacExtend",
            "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
        ],
        [
            "apply/subsetP=> x; rewrite -(setUCr R) !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case/orP=> ?; [rewrite (astab_act cRa) | rewrite gact_out].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacentC A S : A \\subset D -> S \\subset R -> (S \\subset 'C_(|to)(A)) = (A \\subset 'C(S | to)).",
            "VernacStartTheoremProof",
            "c1562d1525e2827706a0847ec53657b538385995"
        ],
        [
            "by move=> sAD sSR; rewrite subsetI sSR astabCin // (setIidPr sAD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab_gen S : S \\subset R -> 'C(<<S>> | to) = 'C(S | to).",
            "VernacStartTheoremProof",
            "990a2418fc6755b7570516bb03bfdc36374813a7"
        ],
        [
            "move=> sSR; apply/setP=> a; case Da: (a \\in D); last by rewrite !inE Da.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -!sub1set -!gacentC ?sub1set ?gen_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabM M N : M \\subset R -> N \\subset R -> 'C(M * N | to) = 'C(M | to) :&: 'C(N | to).",
            "VernacStartTheoremProof",
            "166dfe533f3a7c2ac55d06f9e9067a1d80ae87f4"
        ],
        [
            "move=> sMR sNR; rewrite -astabU -astab_gen ?mul_subG // genM_join.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite astab_gen // subUset sMR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs1 : 'N(1 | to) = D.",
            "VernacStartTheoremProof",
            "aee6c0b8249a08f5ecfbfe56b23b24c9b866de29"
        ],
        [
            "by rewrite astabs_set1 astab1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabs_range : 'N(R | to) = D.",
            "VernacStartTheoremProof",
            "b9d5f65c87e61d6e50909fc647cb266fdf8742e7"
        ],
        [
            "apply/setIidPl; apply/subsetP=> a Da; rewrite inE.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by apply/subsetP=> x Rx; rewrite inE gact_stable.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabsD1 S : 'N(S^# | to) = 'N(S | to).",
            "VernacStartTheoremProof",
            "e9314c00042eff0d48af3bc3ccfbd6e995908d7f"
        ],
        [
            "case S1: (1 \\in S); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (setDidPl _) // disjoint_sym disjoints_subset sub1set inE S1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite eqEsubset andbC -{1}astabsIdom -{1}astabs1 setIC astabsD /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -{2}(setD1K S1) -astabsIdom -{1}astabs1 astabsU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacts_range A : A \\subset D -> {acts A, on group R | to}.",
            "VernacStartTheoremProof",
            "7ba3f1ec08712dbe6ba307bf04a09fbad3e13971"
        ],
        [
            "by move=> sAD; split; rewrite ?astabs_range.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_subnorm_gacent A : A \\subset D -> [acts 'N_D(A), on 'C_(| to)(A) | to].",
            "VernacStartTheoremProof",
            "395723772f3eb79ff85bb490742bb234f901427f"
        ],
        [
            "move=> sAD; rewrite gacentE // actsI ?astabs_range ?subsetIl //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -{2}(setIidPr sAD) acts_subnorm_fix.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_subnorm_subgacent A B S : A \\subset D -> [acts B, on S | to] -> [acts 'N_B(A), on 'C_(S | to)(A) | to].",
            "VernacStartTheoremProof",
            "a8ed994403a76b8c3d3a8ab18c0f79e6a4320ff1"
        ],
        [
            "move=> sAD actsB; rewrite actsI //; first by rewrite subIset ?actsB.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (subset_trans _ (acts_subnorm_gacent sAD)) ?setSI ?(acts_dom actsB).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_gen A S : S \\subset R -> [acts A, on S | to] -> [acts A, on <<S>> | to].",
            "VernacStartTheoremProof",
            "75152646924b6c9135b921effa855303de78505d"
        ],
        [
            "move=> sSR actsA; apply: {A}subset_trans actsA _.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply/subsetP=> a nSa; have Da := astabs_dom nSa; rewrite !inE Da.",
            "VernacExtend",
            "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
        ],
        [
            "apply: subset_trans (_ : <<S>> \\subset actm to a @*^-1 <<S>>) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite gen_subG subsetI sSR; apply/subsetP=> x Sx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite inE /= actmE ?mem_gen // astabs_act.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/subsetP=> x; rewrite !inE; case/andP=> Rx; rewrite /= actmE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_joing A M N : M \\subset R -> N \\subset R -> [acts A, on M | to] -> [acts A, on N | to] -> [acts A, on M <*> N | to].",
            "VernacStartTheoremProof",
            "c8300d88827f0a52354dbbfdc24ac5bf11629d0c"
        ],
        [
            "by move=> sMR sNR nMA nNA; rewrite acts_gen ?actsU // subUset sMR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injm_actm a : 'injm (actm to a).",
            "VernacStartTheoremProof",
            "c3327d4bb0523b598530a67bec0c46a712039835"
        ],
        [
            "apply/injmP=> x y Rx Ry; rewrite /= /actm; case: ifP => Da //.",
            "VernacExtend",
            "5caed936835e366e9e533d8f19382dcfedbf86d4"
        ],
        [
            "exact: act_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma im_actm a : actm to a @* R = R.",
            "VernacStartTheoremProof",
            "9a09c3fea677ad79f9d6d68314a37c0355242e57"
        ],
        [
            "apply/eqP; rewrite eqEcard (card_injm (injm_actm a)) // leqnn andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/subsetP=> _ /morphimP[x Rx _ ->] /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite /actm; case: ifP => // Da; rewrite gact_stable.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_char G M : G \\subset D -> M \\char R -> [acts G, on M | to].",
            "VernacStartTheoremProof",
            "5356315fc5ded1812b852d1373a07739261f70f7"
        ],
        [
            "move=> sGD /charP[sMR charM].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply/subsetP=> a Ga; have Da := subsetP sGD a Ga; rewrite !inE Da.",
            "VernacExtend",
            "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
        ],
        [
            "apply/subsetP=> x Mx; have Rx := subsetP sMR x Mx.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "by rewrite inE -(charM _ (injm_actm a) (im_actm a)) -actmE // mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacts_char G M : G \\subset D -> M \\char R -> {acts G, on group M | to}.",
            "VernacStartTheoremProof",
            "5d018f3c6ea3c0ea7e39d8e51cf0dd38d70166d4"
        ],
        [
            "by move=> sGD charM; split; rewrite (acts_char, char_sub).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Restrict.",
            "VernacBeginSection",
            "457b91c4635da7a08fdf3f3bda44e7aa7a4a51b1"
        ],
        [
            "Variables (A : {group aT}) (sAD : A \\subset D).",
            "VernacAssumption",
            "bf8124649ff258ff6ed4f5419fcae8c3e8b2c327"
        ],
        [
            "Lemma ract_is_groupAction : is_groupAction R (to \\ sAD).",
            "VernacStartTheoremProof",
            "83f00532c02b0c3bf8cc91a6b7d3c3fa1abcb650"
        ],
        [
            "by move=> a Aa /=; rewrite ractpermE actperm_Aut ?(subsetP sAD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical ract_groupAction := GroupAction ract_is_groupAction.",
            "VernacDefinition",
            "c374b715450c44501d9f7751eb739fd00163c35b"
        ],
        [
            "Lemma gacent_ract B : 'C_(|ract_groupAction)(B) = 'C_(|to)(A :&: B).",
            "VernacStartTheoremProof",
            "d5612c1d6c0cc39b1f19699a84868f8bb4882519"
        ],
        [
            "by rewrite /gacent afix_ract setIA (setIidPr sAD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Restrict.",
            "VernacEndSegment",
            "746f669aebca461bfe6449478db2d94d3e29eaab"
        ],
        [
            "Section ActBy.",
            "VernacBeginSection",
            "59609b36436d2930e1ea4197d3078f00b66f9f27"
        ],
        [
            "Variables (A : {group aT}) (G : {group rT}) (nGAg : {acts A, on group G | to}).",
            "VernacAssumption",
            "c2918eede562ede5a398007e8f02f0e464f130ef"
        ],
        [
            "Lemma actby_is_groupAction : is_groupAction G <[nGAg]>.",
            "VernacStartTheoremProof",
            "454cea2614bb8803967ce7274a44cbbee1661121"
        ],
        [
            "move=> a Aa; rewrite /= inE; apply/andP; split.",
            "VernacExtend",
            "9901f82e5ee1133d602812d708a9c1405d183a8b"
        ],
        [
            "apply/subsetP=> x; apply: contraR => Gx.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite actpermE /= /actby (negbTE Gx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/morphicP=> x y Gx Gy; rewrite !actpermE /= /actby Aa groupM ?Gx ?Gy //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case nGAg; move/acts_dom; do 2!move/subsetP=> ?; rewrite gactM; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical actby_groupAction := GroupAction actby_is_groupAction.",
            "VernacDefinition",
            "187e5f6f13e3709884b23666807699ad81492617"
        ],
        [
            "Lemma gacent_actby B : 'C_(|actby_groupAction)(B) = 'C_(G | to)(A :&: B).",
            "VernacStartTheoremProof",
            "9f8856713790c3f0f0627b65d420393860f8a81e"
        ],
        [
            "rewrite /gacent afix_actby !setIA setIid setIUr setICr set0U.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by have [nAG sGR] := nGAg; rewrite (setIidPr (acts_dom nAG)) (setIidPl sGR).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ActBy.",
            "VernacEndSegment",
            "0211706075aa3e5889c3683e19e913f39a75e9de"
        ],
        [
            "Section Quotient.",
            "VernacBeginSection",
            "42863e3b9465542087051a31120f1713f465d640"
        ],
        [
            "Variable H : {group rT}.",
            "VernacAssumption",
            "49ab8cbc514cdb00b4f92dabb20e2a70bd22ef42"
        ],
        [
            "Lemma acts_qact_dom_norm : {acts qact_dom to H, on 'N(H) | to}.",
            "VernacStartTheoremProof",
            "ec7590a31f4d7694586ec0b7e8e0c3627699a3ed"
        ],
        [
            "move=> a HDa /= x; rewrite {2}(('N(H) =P to^~ a @^-1: 'N(H)) _) ?inE {x}//.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite eqEcard (card_preimset _ (act_inj _ _)) leqnn andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> x Nx; rewrite inE; move/(astabs_act (H :* x)): HDa.",
            "VernacExtend",
            "dc718d25de68f54fd287715597f582bd4482cb79"
        ],
        [
            "rewrite mem_rcosets mulSGid ?normG // Nx => /rcosetsP[y Ny defHy].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "suffices: to x a \\in H :* y by apply: subsetP; rewrite mul_subG ?sub1set ?normG.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite -defHy; apply: mem_imset; apply: rcoset_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qact_is_groupAction : is_groupAction (R / H) (to / H).",
            "VernacStartTheoremProof",
            "e6218e1888bbbeb1006411b2cf7d407e30b994d7"
        ],
        [
            "move=> a HDa /=; have Da := astabs_dom HDa.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite inE; apply/andP; split.",
            "VernacExtend",
            "563747ab88f591bd67f85e19847b20501f275f62"
        ],
        [
            "apply/subsetP=> Hx /=; case: (cosetP Hx) => x Nx ->{Hx}.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "apply: contraR => R'Hx; rewrite actpermE qactE // gact_out //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: contra R'Hx; apply: mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/morphicP=> Hx Hy; rewrite !actpermE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case/morphimP=> x Nx Gx ->{Hx}; case/morphimP=> y Ny Gy ->{Hy}.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite -morphM ?qactE ?groupM ?gactM // morphM ?acts_qact_dom_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical quotient_groupAction := GroupAction qact_is_groupAction.",
            "VernacDefinition",
            "ce9d35d537e68ba0e6a4b0ee68231be8738b32ba"
        ],
        [
            "Lemma qact_domE : H \\subset R -> qact_dom to H = 'N(H | to).",
            "VernacStartTheoremProof",
            "665e2e04d9a3bed2178ab04389744edb1dce244c"
        ],
        [
            "move=> sHR; apply/setP=> a; apply/idP/idP=> nHa; have Da := astabs_dom nHa.",
            "VernacExtend",
            "d86e9afca293441ddfbf3c45b6a7765e546426cd"
        ],
        [
            "rewrite !inE Da; apply/subsetP=> x Hx; rewrite inE -(rcoset1 H).",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "have /rcosetsP[y Ny defHy]: to^~ a @: H \\in rcosets H 'N(H).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (astabs_act _ nHa); apply/rcosetsP; exists 1; rewrite ?mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite (rcoset_eqP (_ : 1 \\in H :* y)) -defHy -1?(gact1 Da) mem_setact.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !inE Da; apply/subsetP=> Hx; rewrite inE => /rcosetsP[x Nx ->{Hx}].",
            "VernacExtend",
            "0288f65064e83af8559a49f90a2eba4421e03fd4"
        ],
        [
            "apply/imsetP; exists (to x a).",
            "VernacExtend",
            "e8ae80e36ff64b78129a7892bbcdd756998b37eb"
        ],
        [
            "case Rx: (x \\in R); last by rewrite gact_out ?Rx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite inE; apply/subsetP=> _ /imsetP[y Hy ->].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -(actKVin to Da y) -gactJ // ?(subsetP sHR, astabs_act, groupV) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite memJ_norm // astabs_act ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite rcosetE eqEcard.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (card_imset _ (act_inj _ _)) !card_rcoset leqnn andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> _ /imsetP[y Hxy ->]; rewrite !mem_rcoset in Hxy *.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have Rxy := subsetP sHR _ Hxy; rewrite -(mulgKV x y).",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case Rx: (x \\in R); last by rewrite !gact_out ?mulgK // 1?groupMl ?Rx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -gactV // -gactM 1?groupMr ?groupV // mulgK astabs_act.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Quotient.",
            "VernacEndSegment",
            "2f78ece027a30c5be7689abb99041a16475da9f7"
        ],
        [
            "Section Mod.",
            "VernacBeginSection",
            "4cfdbe7c22f1c919d4f67fb485036a5480f799e1"
        ],
        [
            "Variable H : {group aT}.",
            "VernacAssumption",
            "76629c96aff8cc0cfa21154c37f148d9b1bae062"
        ],
        [
            "Lemma modact_is_groupAction : is_groupAction 'C_(|to)(H) (to %% H).",
            "VernacStartTheoremProof",
            "ace3fba28dae972fbae90aae3473f0116fc7df0e"
        ],
        [
            "move=> Ha /morphimP[a Na Da ->]; have NDa: a \\in 'N_D(H) by apply/setIP.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite inE; apply/andP; split.",
            "VernacExtend",
            "563747ab88f591bd67f85e19847b20501f275f62"
        ],
        [
            "apply/subsetP=> x; rewrite 2!inE andbC actpermE /= modactEcond //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: contraR; case: ifP => // E Rx; rewrite gact_out.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/morphicP=> x y /setIP[Rx cHx] /setIP[Ry cHy].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite /= !actpermE /= !modactE ?gactM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suffices: x * y \\in 'C_(|to)(H) by case/setIP.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite groupM //; apply/setIP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical mod_groupAction := GroupAction modact_is_groupAction.",
            "VernacDefinition",
            "3c7b8c93aba1fb29770cbbd4c6099984a7d5993c"
        ],
        [
            "Lemma modgactE x a : H \\subset 'C(R | to) -> a \\in 'N_D(H) -> (to %% H)%act x (coset H a) = to x a.",
            "VernacStartTheoremProof",
            "630dc9f6c8fcfbf724c9e421a15a9991a89fc260"
        ],
        [
            "move=> cRH NDa /=; have [Da Na] := setIP NDa.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [Rx | notRx] := boolP (x \\in R).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite modactE //; apply/afixP=> b /setIP[_ /(subsetP cRH)/astab_act->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite gact_out //= /modact; case: ifP => // _; rewrite gact_out //.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "suffices: a \\in D :&: coset H a by case/mem_repr/setIP.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite inE Da val_coset // rcoset_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacent_mod G M : H \\subset 'C(M | to) -> G \\subset 'N(H) -> 'C_(M | mod_groupAction)(G / H) = 'C_(M | to)(G).",
            "VernacStartTheoremProof",
            "cedb3696e543550433fd0a0d8c8c4a31dcb86b2c"
        ],
        [
            "move=> cMH nHG; rewrite -gacentIdom gacentE ?subsetIl // setICA.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have sHD: H \\subset D by rewrite (subset_trans cMH) ?subsetIl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -quotientGI // afix_mod ?setIS // setICA -gacentIim (setIC R) -setIA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -gacentE ?subsetIl // gacentIdom setICA (setIidPr _) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite gacentC // ?(subset_trans cMH) ?astabS ?subsetIl // setICA subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_irr_mod G M : H \\subset 'C(M | to) -> G \\subset 'N(H) -> acts_irreducibly G M to -> acts_irreducibly (G / H) M mod_groupAction.",
            "VernacStartTheoremProof",
            "04d9cf169639d35f3ffe9c0796cead53a7768809"
        ],
        [
            "move=> cMH nHG /mingroupP[/andP[ntM nMG] minM].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply/mingroupP; rewrite ntM astabs_mod ?quotientS //; split=> // L modL ntL.",
            "VernacExtend",
            "877072eca2b60ab32889d658e076eb026578eeca"
        ],
        [
            "have cLH: H \\subset 'C(L | to) by rewrite (subset_trans cMH) ?astabS //.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: minM => //; case/andP: modL => ->; rewrite astabs_mod ?quotientSGK //.",
            "VernacExtend",
            "cbc4844cce0ad896dcb7bc2a887cf6aae5047c5f"
        ],
        [
            "by rewrite (subset_trans cLH) ?astab_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Mod.",
            "VernacEndSegment",
            "5c0bf9853d71ec656bcad8ea0622995e8fd26c65"
        ],
        [
            "Lemma modact_coset_astab x a : a \\in D -> (to %% 'C(R | to))%act x (coset _ a) = to x a.",
            "VernacStartTheoremProof",
            "028ea4608ba9c554ce48b83356fb98f59b1acf8d"
        ],
        [
            "move=> Da; apply: modgactE => {x}//.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite !inE Da; apply/subsetP=> _ /imsetP[c Cc ->].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have Dc := astab_dom Cc; rewrite !inE groupJ //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "apply/subsetP=> x Rx; rewrite inE conjgE !actMin ?groupM ?groupV //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (astab_act Cc) ?actKVin // gact_stable ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acts_irr_mod_astab G M : acts_irreducibly G M to -> acts_irreducibly (G / 'C_G(M | to)) M (mod_groupAction _).",
            "VernacStartTheoremProof",
            "a6e9228469a31fa069738febcf4f5aa1835926a9"
        ],
        [
            "move=> irrG; have /andP[_ nMG] := mingroupp irrG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply: acts_irr_mod irrG; first exact: subsetIr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite normsI ?normG // (subset_trans nMG) // astab_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section CompAct.",
            "VernacBeginSection",
            "601e2f5108d6522fb5d1ecce4005dcdc269491ed"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (f : {morphism G >-> aT}).",
            "VernacAssumption",
            "6820e9684893235e715ffa501cc4771fff6a8995"
        ],
        [
            "Lemma comp_is_groupAction : is_groupAction R (comp_action to f).",
            "VernacStartTheoremProof",
            "791237ab4abe08ab4d08da515c3509b6844c617e"
        ],
        [
            "move=> a /morphpreP[Ba Dfa]; apply: etrans (actperm_Aut to Dfa).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by congr (_ \\in Aut R); apply/permP=> x; rewrite !actpermE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical comp_groupAction := GroupAction comp_is_groupAction.",
            "VernacDefinition",
            "4e3e0d0e4d167338afc295fef54e773e043509ef"
        ],
        [
            "Lemma gacent_comp U : 'C_(|comp_groupAction)(U) = 'C_(|to)(f @* U).",
            "VernacStartTheoremProof",
            "99d0af9c1c58c62b67712f7a3a60a8295fc1d2c7"
        ],
        [
            "rewrite /gacent afix_comp ?subIset ?subxx //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(setIC U) (setIC D) morphim_setIpre.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CompAct.",
            "VernacEndSegment",
            "e05caa23d57651490d7bf3849db1c5dd636c0afc"
        ],
        [
            "End GroupActionTheory.",
            "VernacEndSegment",
            "d7db7621bd29381aa09f4fa628f720a08c993f6b"
        ],
        [
            "Notation \"''C_' ( | to ) ( A )\" := (gacent_group to A) : Group_scope.",
            "VernacNotation",
            "d19de0fec1412d61f80106ae93fd2770461447ea"
        ],
        [
            "Notation \"''C_' ( G | to ) ( A )\" := (setI_group G 'C_(|to)(A)) : Group_scope.",
            "VernacNotation",
            "a32bdd81e0d238f3f98b4e1a23e2704d9abb88a9"
        ],
        [
            "Notation \"''C_' ( | to ) [ a ]\" := (gacent_group to [set a%g]) : Group_scope.",
            "VernacNotation",
            "f73f3e131d9c9efccea65ce08999533ea62115d6"
        ],
        [
            "Notation \"''C_' ( G | to ) [ a ]\" := (setI_group G 'C_(|to)[a]) : Group_scope.",
            "VernacNotation",
            "faf1015425524d35a7a7ebe5c0f8aed79e5d483b"
        ],
        [
            "Notation \"to \\ sAD\" := (ract_groupAction to sAD) : groupAction_scope.",
            "VernacNotation",
            "2d53e9cd2b6523c6a9f3da6f89cc667f8435d0d7"
        ],
        [
            "Notation \"<[ nGA ] >\" := (actby_groupAction nGA) : groupAction_scope.",
            "VernacNotation",
            "feba1dbb2eb35e7b9f4f7ba2a3016547fba8c030"
        ],
        [
            "Notation \"to / H\" := (quotient_groupAction to H) : groupAction_scope.",
            "VernacNotation",
            "c4e5c7d017647c9fe782180a43573bb0d8e73fdc"
        ],
        [
            "Notation \"to %% H\" := (mod_groupAction to H) : groupAction_scope.",
            "VernacNotation",
            "2bd6ece172476af02ec56bb62e8b73706753fd5e"
        ],
        [
            "Notation \"to \\o f\" := (comp_groupAction to f) : groupAction_scope.",
            "VernacNotation",
            "1d241d3e005e5b8767001adeeafb7606d9bae7b0"
        ],
        [
            "Section MorphAction.",
            "VernacBeginSection",
            "a25ff20c3c9ef0c3dedfd47cc972ff30e3af59cd"
        ],
        [
            "Variables (aT1 aT2 : finGroupType) (rT1 rT2 : finType).",
            "VernacAssumption",
            "3df190259bedb02aa7688be2fa9c764849c9d916"
        ],
        [
            "Variables (D1 : {group aT1}) (D2 : {group aT2}).",
            "VernacAssumption",
            "55ab79d239798c728884f985d79fdfc8faf801a7"
        ],
        [
            "Variables (to1 : action D1 rT1) (to2 : action D2 rT2).",
            "VernacAssumption",
            "201fa5b6b7eaa6b41b26eb0de233c48f00240873"
        ],
        [
            "Variables (A : {set aT1}) (R S : {set rT1}).",
            "VernacAssumption",
            "900b9503060d81d1cb341a0d278fc3305600e00e"
        ],
        [
            "Variables (h : rT1 -> rT2) (f : {morphism D1 >-> aT2}).",
            "VernacAssumption",
            "faf8cd018539574f5a83d5801e9a6a58e50c2431"
        ],
        [
            "Hypotheses (actsDR : {acts D1, on R | to1}) (injh : {in R &, injective h}).",
            "VernacAssumption",
            "f02539d50546c303be11572ef211a917be67890b"
        ],
        [
            "Hypothesis defD2 : f @* D1 = D2.",
            "VernacAssumption",
            "0701daf0d4841f4ffcdac7f9258348e36d895138"
        ],
        [
            "Hypotheses (sSR : S \\subset R) (sAD1 : A \\subset D1).",
            "VernacAssumption",
            "b59f9fc88d242d47faaacbdac749101a9e71b2d6"
        ],
        [
            "Hypothesis hfJ : {in S & D1, morph_act to1 to2 h f}.",
            "VernacAssumption",
            "e8468d4351dfe789c7b4291dfa2a2ad0abf1b2d8"
        ],
        [
            "Lemma morph_astabs : f @* 'N(S | to1) = 'N(h @: S | to2).",
            "VernacStartTheoremProof",
            "cda15d9ce987b410420e53264eb1d58693bd631f"
        ],
        [
            "apply/setP=> fx; apply/morphimP/idP=> [[x D1x nSx ->] | nSx].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite 2!inE -{1}defD2 mem_morphim //=; apply/subsetP=> _ /imsetP[u Su ->].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite inE -hfJ ?mem_imset // (astabs_act _ nSx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [|x D1x _ def_fx] := morphimP (_ : fx \\in f @* D1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite defD2 (astabs_dom nSx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists x => //; rewrite !inE D1x; apply/subsetP=> u Su.",
            "VernacExtend",
            "9c74624cac92f94e452c274a33342e43b2955888"
        ],
        [
            "have /imsetP[u' Su' /injh def_u']: h (to1 u x) \\in h @: S.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite hfJ // -def_fx (astabs_act _ nSx) mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite inE def_u' ?actsDR ?(subsetP sSR).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morph_astab : f @* 'C(S | to1) = 'C(h @: S | to2).",
            "VernacStartTheoremProof",
            "d1edc6b93499c79e4726e69bde98212361ef5802"
        ],
        [
            "apply/setP=> fx; apply/morphimP/idP=> [[x D1x cSx ->] | cSx].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite 2!inE -{1}defD2 mem_morphim //=; apply/subsetP=> _ /imsetP[u Su ->].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite inE -hfJ // (astab_act cSx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [|x D1x _ def_fx] := morphimP (_ : fx \\in f @* D1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite defD2 (astab_dom cSx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists x => //; rewrite !inE D1x; apply/subsetP=> u Su.",
            "VernacExtend",
            "9c74624cac92f94e452c274a33342e43b2955888"
        ],
        [
            "rewrite inE -(inj_in_eq injh) ?actsDR ?(subsetP sSR) ?hfJ //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -def_fx (astab_act cSx) ?mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morph_afix : h @: 'Fix_(S | to1)(A) = 'Fix_(h @: S | to2)(f @* A).",
            "VernacStartTheoremProof",
            "9c74694c9edd338b6b4a11b9ef716019f5a6c4a8"
        ],
        [
            "apply/setP=> hu; apply/imsetP/setIP=> [[u /setIP[Su cAu] ->]|].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "split; first by rewrite mem_imset.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/afixP=> _ /morphimP[x D1x Ax ->]; rewrite -hfJ ?(afixP cAu).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=> /imsetP[u Su ->] /afixP c_hu_fA; exists u; rewrite // inE Su.",
            "VernacExtend",
            "305b561725637ec4441e7a20bb13bf443974197b"
        ],
        [
            "apply/afixP=> x Ax; have Dx := subsetP sAD1 x Ax.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "by apply: injh; rewrite ?actsDR ?(subsetP sSR) ?hfJ // c_hu_fA ?mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MorphAction.",
            "VernacEndSegment",
            "ab02fe53f249c832112e24fdf2e117575460cc9d"
        ],
        [
            "Section MorphGroupAction.",
            "VernacBeginSection",
            "0fd5380c6a6bdf7f9e8dc0419a03274ac37586ff"
        ],
        [
            "Variables (aT1 aT2 rT1 rT2 : finGroupType).",
            "VernacAssumption",
            "51474aa2b23edf11146bfbd29e4f40b82ca59910"
        ],
        [
            "Variables (D1 : {group aT1}) (D2 : {group aT2}).",
            "VernacAssumption",
            "55ab79d239798c728884f985d79fdfc8faf801a7"
        ],
        [
            "Variables (R1 : {group rT1}) (R2 : {group rT2}).",
            "VernacAssumption",
            "5752e703e8fcf90acc00dec44758680e450e2cff"
        ],
        [
            "Variables (to1 : groupAction D1 R1) (to2 : groupAction D2 R2).",
            "VernacAssumption",
            "37ff136f795146a038b52e2bcdfdb5fac478215a"
        ],
        [
            "Variables (h : {morphism R1 >-> rT2}) (f : {morphism D1 >-> aT2}).",
            "VernacAssumption",
            "85e11ba98940a949dfe320f09cdaca25ec6a1fdd"
        ],
        [
            "Hypotheses (iso_h : isom R1 R2 h) (iso_f : isom D1 D2 f).",
            "VernacAssumption",
            "42fd3f4c139b3f57a53fb5aaa9f7d3e4b83ea7c7"
        ],
        [
            "Hypothesis hfJ : {in R1 & D1, morph_act to1 to2 h f}.",
            "VernacAssumption",
            "62f16c24b77a87749cb9a619d16fd7a7afe45ce3"
        ],
        [
            "Implicit Types (A : {set aT1}) (S : {set rT1}) (M : {group rT1}).",
            "VernacReserve",
            "4fb2a8746053d449d8e6b29d5dfe605fe15f021c"
        ],
        [
            "Lemma morph_gastabs S : S \\subset R1 -> f @* 'N(S | to1) = 'N(h @* S | to2).",
            "VernacStartTheoremProof",
            "22e36b62ea77b7c000d7184f69fdce8b172fd304"
        ],
        [
            "have [[_ defD2] [injh _]] := (isomP iso_f, isomP iso_h).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> sSR1; rewrite (morphimEsub _ sSR1).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: (morph_astabs (gact_stable to1) (injmP injh)) => // u x.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move/(subsetP sSR1); apply: hfJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morph_gastab S : S \\subset R1 -> f @* 'C(S | to1) = 'C(h @* S | to2).",
            "VernacStartTheoremProof",
            "8effab779b7be3ac968cd460425a5077726eab99"
        ],
        [
            "have [[_ defD2] [injh _]] := (isomP iso_f, isomP iso_h).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> sSR1; rewrite (morphimEsub _ sSR1).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: (morph_astab (gact_stable to1) (injmP injh)) => // u x.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move/(subsetP sSR1); apply: hfJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morph_gacent A : A \\subset D1 -> h @* 'C_(|to1)(A) = 'C_(|to2)(f @* A).",
            "VernacStartTheoremProof",
            "bdd67352359c87fb22aeae8bb0316a128d5a2cdb"
        ],
        [
            "have [[_ defD2] [injh defR2]] := (isomP iso_f, isomP iso_h).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> sAD1; rewrite !gacentE //; last by rewrite -defD2 morphimS.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite morphimEsub ?subsetIl // -{1}defR2 morphimEdom.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: (morph_afix (gact_stable to1) (injmP injh)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morph_gact_irr A M : A \\subset D1 -> M \\subset R1 -> acts_irreducibly (f @* A) (h @* M) to2 = acts_irreducibly A M to1.",
            "VernacStartTheoremProof",
            "51fb91ea4cfcb89eda2245c6bd0974321b6ebadb"
        ],
        [
            "move=> sAD1 sMR1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [[injf defD2] [injh defR2]] := (isomP iso_f, isomP iso_h).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have h_eq1 := morphim_injm_eq1 injh.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/mingroupP/mingroupP=> [] [/andP[ntM actAM] minM].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split=> [|U]; first by rewrite -h_eq1 // ntM -(injmSK injf) ?morph_gastabs.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=> ntU acts_fAU sUM; have sUR1 := subset_trans sUM sMR1.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "apply: (injm_morphim_inj injh) => //; apply: minM; last exact: morphimS.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite h_eq1 // ntU -morph_gastabs ?morphimS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> [|U]; first by rewrite h_eq1 // ntM -morph_gastabs ?morphimS.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=> ntU acts_fAU sUhM.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have sUhR1 := subset_trans sUhM (morphimS h sMR1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sU'M: h @*^-1 U \\subset M by rewrite sub_morphpre_injm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /= -(minM _ _ sU'M) ?morphpreK // -h_eq1 ?subsetIl // -(injmSK injf) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite morph_gastabs ?(subset_trans sU'M) // morphpreK ?ntU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MorphGroupAction.",
            "VernacEndSegment",
            "8e51a7729250cfdcc817e2f4e521b8e287ea13a4"
        ],
        [
            "Section InternalActionDefs.",
            "VernacBeginSection",
            "d156979a272378bc88203169649fa3cf89499a39"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Type A : {set gT}.",
            "VernacReserve",
            "9772b5af643f783f57b66c3ebd0c3767bf1adb53"
        ],
        [
            "Implicit Type G : {group gT}.",
            "VernacReserve",
            "69191693445dc2dbe8fdddf7d73e414747afe899"
        ],
        [
            "Definition mulgr_action := TotalAction (@mulg1 gT) (@mulgA gT).",
            "VernacDefinition",
            "523b0b61c9e6679bf8e56e8886c1269fe31bfa83"
        ],
        [
            "Canonical conjg_action := TotalAction (@conjg1 gT) (@conjgM gT).",
            "VernacDefinition",
            "9acada431d7785782c22a6d097932431a81390ca"
        ],
        [
            "Lemma conjg_is_groupAction : is_groupAction setT conjg_action.",
            "VernacStartTheoremProof",
            "6e353a5429d8f3007ec3026e53e44e496088cee4"
        ],
        [
            "move=> a _; rewrite /= inE; apply/andP; split.",
            "VernacExtend",
            "9901f82e5ee1133d602812d708a9c1405d183a8b"
        ],
        [
            "by apply/subsetP=> x _; rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/morphicP=> x y _ _; rewrite !actpermE /= conjMg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical conjg_groupAction := GroupAction conjg_is_groupAction.",
            "VernacDefinition",
            "4f60bf96078f6219e90881c8c8be5a5d4c9dc3c0"
        ],
        [
            "Lemma rcoset_is_action : is_action setT (@rcoset gT).",
            "VernacStartTheoremProof",
            "cced020e80829b891fc9ab60919d6a8da59b37ab"
        ],
        [
            "by apply: is_total_action => [A|A x y]; rewrite !rcosetE (mulg1, rcosetM).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical rcoset_action := Action rcoset_is_action.",
            "VernacDefinition",
            "11c0b9435c66ddc2b70cf74c199c7e7eac3687bc"
        ],
        [
            "Canonical conjsg_action := TotalAction (@conjsg1 gT) (@conjsgM gT).",
            "VernacDefinition",
            "d8aadc9e01942b441ac07c074102a55c2ab320d8"
        ],
        [
            "Lemma conjG_is_action : is_action setT (@conjG_group gT).",
            "VernacStartTheoremProof",
            "307d13057a86ac97a78b30ec679d07458e16dd4e"
        ],
        [
            "apply: is_total_action => [G | G x y]; apply: val_inj; rewrite /= ?act1 //.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "exact: actM.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition conjG_action := Action conjG_is_action.",
            "VernacDefinition",
            "b52e2aec4b291286f3756334cd27f9000766140b"
        ],
        [
            "End InternalActionDefs.",
            "VernacEndSegment",
            "e429eeafebe3cca4906102e15d9558e06380efcb"
        ],
        [
            "Notation \"'R\" := (@mulgr_action _) (at level 8) : action_scope.",
            "VernacNotation",
            "bcf0ee32a2da12f2f17e85db19c89fba7c8ff2f1"
        ],
        [
            "Notation \"'Rs\" := (@rcoset_action _) (at level 8) : action_scope.",
            "VernacNotation",
            "d6ffe65873cfdd7025c49abeef31eb04bbe53eac"
        ],
        [
            "Notation \"'J\" := (@conjg_action _) (at level 8) : action_scope.",
            "VernacNotation",
            "7a90d11b8acda1075c107a6c5cdd7baaae064e67"
        ],
        [
            "Notation \"'J\" := (@conjg_groupAction _) (at level 8) : groupAction_scope.",
            "VernacNotation",
            "561e9ee4cc8f2a799870532ea0f7015ed8f1b090"
        ],
        [
            "Notation \"'Js\" := (@conjsg_action _) (at level 8) : action_scope.",
            "VernacNotation",
            "2fe09aade1831396ef09cd66252ff24017ad53d5"
        ],
        [
            "Notation \"'JG\" := (@conjG_action _) (at level 8) : action_scope.",
            "VernacNotation",
            "1b3dec7112b06bd731d3fb1492748f1181b06c1b"
        ],
        [
            "Notation \"'Q\" := ('J / _)%act (at level 8) : action_scope.",
            "VernacNotation",
            "83f74702c0c703c962ac145938547bc43a71ee23"
        ],
        [
            "Notation \"'Q\" := ('J / _)%gact (at level 8) : groupAction_scope.",
            "VernacNotation",
            "23fdc8c474ec5784d5c256d55ce52077b849611e"
        ],
        [
            "Section InternalGroupAction.",
            "VernacBeginSection",
            "a03663e71af1f2e03b0d893c7fd2ff9f2838f188"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types A B : {set gT}.",
            "VernacReserve",
            "dc66c4436fcce945710dc03f4404abaa29535990"
        ],
        [
            "Implicit Types G H : {group gT}.",
            "VernacReserve",
            "2d1554a20c0748003cfaab87843b3f58de3d66ce"
        ],
        [
            "Implicit Type x : gT.",
            "VernacReserve",
            "05c308f8cb3382d532d8dbfbeb5fcf81459defc8"
        ],
        [
            "Lemma orbitR G x : orbit 'R G x = x *: G.",
            "VernacStartTheoremProof",
            "ee70b5f8e8d40c0003a375e7610e90bbe008a28f"
        ],
        [
            "by rewrite -lcosetE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab1R x : 'C[x | 'R] = 1.",
            "VernacStartTheoremProof",
            "580aa59f41704e4ffdf55da5c30d5402f545baa9"
        ],
        [
            "apply/trivgP/subsetP=> y cxy.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -(mulKg x y) [x * y](astab1P cxy) mulVg set11.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabR G : 'C(G | 'R) = 1.",
            "VernacStartTheoremProof",
            "f38dd7a3a6fcca90f2346f48797d533e2a131d3c"
        ],
        [
            "apply/trivgP/subsetP=> x cGx.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -(mul1g x) [1 * x](astabP cGx) group1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabsR G : 'N(G | 'R) = G.",
            "VernacStartTheoremProof",
            "138bef6e2051925056a42c7572879a3fab47b3e8"
        ],
        [
            "apply/setP=> x; rewrite !inE -setactVin ?inE //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -groupV -{1 3}(mulg1 G) rcoset_sym -sub1set -mulGS -!rcosetE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma atransR G : [transitive G, on G | 'R].",
            "VernacStartTheoremProof",
            "db443b311e40662b300b3b507cc1a43ade0d2fc6"
        ],
        [
            "by rewrite /atrans -{1}(mul1g G) -orbitR mem_imset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma faithfulR G : [faithful G, on G | 'R].",
            "VernacStartTheoremProof",
            "073f422b89484f7fbb7ca4692e81aae8e87ed32d"
        ],
        [
            "by rewrite /faithful astabR subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Cayley_repr G := actperm <[atrans_acts (atransR G)]>.",
            "VernacDefinition",
            "c5161f013dd93978ecddfb9316a7016ef11bccdd"
        ],
        [
            "Theorem Cayley_isom G : isom G (Cayley_repr G @* G) (Cayley_repr G).",
            "VernacStartTheoremProof",
            "bacf242cb176e665a8529ddf7fc731f161543ac7"
        ],
        [
            "exact: faithful_isom (faithfulR G).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Cayley_isog G : G \\isog Cayley_repr G @* G.",
            "VernacStartTheoremProof",
            "bac7dce8f071c3b472836d2f91f4d6aff201cd87"
        ],
        [
            "exact: isom_isog (Cayley_isom G).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbitJ G x : orbit 'J G x = x ^: G.",
            "VernacStartTheoremProof",
            "40481d55d758202037aebdd1cac49629e9daf6f1"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afixJ A : 'Fix_('J)(A) = 'C(A).",
            "VernacStartTheoremProof",
            "df773cb7e9e97bf985e0ab6612ba99556e6c20d8"
        ],
        [
            "apply/setP=> x; apply/afixP/centP=> cAx y Ay /=.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite /commute conjgC cAx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite conjgE cAx ?mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabJ A : 'C(A |'J) = 'C(A).",
            "VernacStartTheoremProof",
            "a70434712c4f99052073a30aa83831601693573c"
        ],
        [
            "apply/setP=> x; apply/astabP/centP=> cAx y Ay /=.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by apply: esym; rewrite conjgC cAx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite conjgE -cAx ?mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab1J x : 'C[x |'J] = 'C[x].",
            "VernacStartTheoremProof",
            "48daba50493cf4c0b4a10e04f79ebb6677f1e543"
        ],
        [
            "by rewrite astabJ cent_set1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabsJ A : 'N(A | 'J) = 'N(A).",
            "VernacStartTheoremProof",
            "d09b875795222c0e0dd0b3912a84fad5cc208574"
        ],
        [
            "by apply/setP=> x; rewrite -2!groupV !inE -conjg_preim -sub_conjg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma setactJ A x : 'J^*%act A x = A :^ x.",
            "VernacStartTheoremProof",
            "e19417d9013656566ec1d86454a913c5422c8fde"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gacentJ A : 'C_(|'J)(A) = 'C(A).",
            "VernacStartTheoremProof",
            "3172f358f6769d193e7beb85c51467007eda6939"
        ],
        [
            "by rewrite gacentE ?setTI ?subsetT ?afixJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbitRs G A : orbit 'Rs G A = rcosets A G.",
            "VernacStartTheoremProof",
            "7b8c5aed00c7de8da0791b785463230440020d7c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_afixRs_norms G x A : (G :* x \\in 'Fix_('Rs)(A)) = (A \\subset G :^ x).",
            "VernacStartTheoremProof",
            "c84005d2c5a9746f043ba023e4714616be03b9d8"
        ],
        [
            "rewrite inE /=; apply: eq_subset_r => a.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite inE rcosetE -(can2_eq (rcosetKV x) (rcosetK x)) -!rcosetM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite eqEcard card_rcoset leqnn andbT mulgA (conjgCV x) mulgK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -{2 3}(mulGid G) mulGS sub1set -mem_conjg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_afixRs_norm G x : (G :* x \\in 'Fix_('Rs)(G)) = (x \\in 'N(G)).",
            "VernacStartTheoremProof",
            "23b362dd24c5250ea286d122b29920d0675afa66"
        ],
        [
            "by rewrite sub_afixRs_norms -groupV inE sub_conjgV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afixRs_rcosets A G : 'Fix_(rcosets G A | 'Rs)(G) = rcosets G 'N_A(G).",
            "VernacStartTheoremProof",
            "8576b164985c131937ef632bc72c39f298d1322c"
        ],
        [
            "apply/setP=> Gx; apply/setIP/rcosetsP=> [[/rcosetsP[x Ax ->]]|[x]].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite sub_afixRs_norm => Nx; exists x; rewrite // inE Ax.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/setIP=> Ax Nx ->; rewrite -{1}rcosetE mem_imset // sub_afixRs_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab1Rs G : 'C[G : {set gT} | 'Rs] = G.",
            "VernacStartTheoremProof",
            "746172cad18c6eafdb798a2f0f43c5fae1f4c070"
        ],
        [
            "apply/setP=> x.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/astab1P/idP=> /= [<- | Gx]; rewrite rcosetE ?rcoset_refl ?rcoset_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actsRs_rcosets H G : [acts G, on rcosets H G | 'Rs].",
            "VernacStartTheoremProof",
            "b857adc8890e346d4a4ab2e834b64d8fd6e5fbce"
        ],
        [
            "by rewrite -orbitRs acts_orbit ?subsetT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma transRs_rcosets H G : [transitive G, on rcosets H G | 'Rs].",
            "VernacStartTheoremProof",
            "63014adb9bc2207240f6e73c40af8f85c1141054"
        ],
        [
            "by rewrite -orbitRs atrans_orbit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabRs_rcosets H G : 'C(rcosets H G | 'Rs) = gcore H G.",
            "VernacStartTheoremProof",
            "0de7c8a859380d6c169e3d01987e9d172924a7b7"
        ],
        [
            "have transGH := transRs_rcosets H G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (astab_trans_gcore transGH (orbit_refl _ G _)) astab1Rs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbitJs G A : orbit 'Js G A = A :^: G.",
            "VernacStartTheoremProof",
            "5f5f720fc8f6956aa5c5b9e9ddbff6e9aaa25c28"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab1Js A : 'C[A | 'Js] = 'N(A).",
            "VernacStartTheoremProof",
            "7e882c73df0a7d3cd4c4ae2a310a1ab9a2ecf9c4"
        ],
        [
            "by apply/setP=> x; apply/astab1P/normP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_conjugates A G : #|A :^: G| = #|G : 'N_G(A)|.",
            "VernacStartTheoremProof",
            "e18d137168195c16bcc0e07d73a162176466f512"
        ],
        [
            "by rewrite card_orbit astab1Js.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma afixJG G A : (G \\in 'Fix_('JG)(A)) = (A \\subset 'N(G)).",
            "VernacStartTheoremProof",
            "4c8dbac08c2a7631ab829349dcb69eb17093fcde"
        ],
        [
            "by apply/afixP/normsP=> nG x Ax; apply/eqP; move/eqP: (nG x Ax).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astab1JG G : 'C[G | 'JG] = 'N(G).",
            "VernacStartTheoremProof",
            "6e8acca071ac3b054d170a977a21d8b4362a4d59"
        ],
        [
            "by apply/setP=> x; apply/astab1P/normP=> [/congr_group | /group_inj].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_qactJ H : qact_dom 'J H = 'N(H).",
            "VernacStartTheoremProof",
            "04109527f186111f6e677b7dfbf8873b4f7da894"
        ],
        [
            "by rewrite qact_domE ?subsetT ?astabsJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma qactJ H (Hy : coset_of H) x : 'Q%act Hy x = if x \\in 'N(H) then Hy ^ coset H x else Hy.",
            "VernacStartTheoremProof",
            "ea2651dd76e0de3503c99777f2f132dcfb78b0bd"
        ],
        [
            "case: (cosetP Hy) => y Ny ->{Hy}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite qactEcond // dom_qactJ; case Nx: (x \\in 'N(H)); rewrite ?morphJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma actsQ A B H : A \\subset 'N(H) -> A \\subset 'N(B) -> [acts A, on B / H | 'Q].",
            "VernacStartTheoremProof",
            "cc41373955df94d6ecdfd8f3b5006a1ed4afd899"
        ],
        [
            "by move=> nHA nBA; rewrite acts_quotient // subsetI dom_qactJ nHA astabsJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabsQ G H : H <| G -> 'N(G / H | 'Q) = 'N(H) :&: 'N(G).",
            "VernacStartTheoremProof",
            "6e509b75a82cc525cc9919815ab125e9dd094234"
        ],
        [
            "by move=> nsHG; rewrite astabs_quotient // dom_qactJ astabsJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabQ H Abar : 'C(Abar |'Q) = coset H @*^-1 'C(Abar).",
            "VernacStartTheoremProof",
            "e467fe78fb4d191391748b3504446ccbb8484275"
        ],
        [
            "apply/setP=> x; rewrite inE /= dom_qactJ morphpreE in_setI /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: andb_id2l => Nx; rewrite !inE -sub1set centsC cent_set1.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: eq_subset_r => {Abar} Hy; rewrite inE qactJ Nx (sameP eqP conjg_fixP).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (sameP cent1P eqP) (sameP commgP eqP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_astabQ A H Bbar : (A \\subset 'C(Bbar | 'Q)) = (A \\subset 'N(H)) && (A / H \\subset 'C(Bbar)).",
            "VernacStartTheoremProof",
            "0f21e43584d5e319f7176bdc2b414755c717e7cf"
        ],
        [
            "rewrite astabQ -morphpreIdom subsetI; apply: andb_id2l => nHA.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -sub_quotient_pre.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_astabQR A B H : A \\subset 'N(H) -> B \\subset 'N(H) -> (A \\subset 'C(B / H | 'Q)) = ([~: A, B] \\subset H).",
            "VernacStartTheoremProof",
            "a5f06690af17d583649bbdbb8f66d46d43495bd5"
        ],
        [
            "move=> nHA nHB; rewrite sub_astabQ nHA /= (sameP commG1P eqP).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite eqEsubset sub1G andbT -quotientR // quotient_sub1 // comm_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma astabQR A H : A \\subset 'N(H) -> 'C(A / H | 'Q) = [set x in 'N(H) | [~: [set x], A] \\subset H].",
            "VernacStartTheoremProof",
            "ecb4dca6fe89162d5ea3361e0965983004223aa3"
        ],
        [
            "move=> nHA; apply/setP=> x; rewrite astabQ -morphpreIdom 2!inE -astabQ.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case nHx: (x \\in _); rewrite //= -sub1set sub_astabQR ?sub1set.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quotient_astabQ H Abar : 'C(Abar | 'Q) / H = 'C(Abar).",
            "VernacStartTheoremProof",
            "1991d5939429fb638c4e198a8bb03286fca010b5"
        ],
        [
            "by rewrite astabQ cosetpreK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_astabQ A H x : x \\in 'N(H) -> 'C(A / H | 'Q) :^ x = 'C(A :^ x / H | 'Q).",
            "VernacStartTheoremProof",
            "6460c1f0732195c319eb6620b5f522d001fc307f"
        ],
        [
            "move=> nHx; apply/setP=> y; rewrite !astabQ mem_conjg !in_setI -mem_conjg.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite -normJ (normP nHx) quotientJ //; apply/andb_id2l => nHy.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !inE centJ morphJ ?groupV ?morphV // -mem_conjg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section CardClass.",
            "VernacBeginSection",
            "b7594f5c6ae57a4a95b9b7a76fac53a4b523bf4e"
        ],
        [
            "Variable G : {group gT}.",
            "VernacAssumption",
            "a4eac84d173e53c6bd7c7941e403af4d790fced0"
        ],
        [
            "Lemma index_cent1 x : #|G : 'C_G[x]| = #|x ^: G|.",
            "VernacStartTheoremProof",
            "5f4ed6d1b8b3f7056cbc6dea1de879fa0aca4e41"
        ],
        [
            "by rewrite -astab1J -card_orbit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma classes_partition : partition (classes G) G.",
            "VernacStartTheoremProof",
            "d937cb09652f7c9c66420acd0d7e317218ca7c01"
        ],
        [
            "by apply: orbit_partition; apply/actsP=> x Gx y; apply: groupJr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_card_class : \\sum_(C in classes G) #|C| = #|G|.",
            "VernacStartTheoremProof",
            "db57fe17f957d3c8e96cbe9fdd20c0e87171780d"
        ],
        [
            "by apply: acts_sum_card_orbit; apply/actsP=> x Gx y; apply: groupJr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma class_formula : \\sum_(C in classes G) #|G : 'C_G[repr C]| = #|G|.",
            "VernacStartTheoremProof",
            "1c69e5a779930e2b3a611c5ea81691236611cf17"
        ],
        [
            "rewrite -sum_card_class; apply: eq_bigr => _ /imsetP[x Gx ->].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have: x \\in x ^: G by rewrite -{1}(conjg1 x) mem_imset.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/mem_repr/imsetP=> y Gy ->; rewrite index_cent1 classGidl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abelian_classP : reflect {in G, forall x, x ^: G = [set x]} (abelian G).",
            "VernacStartTheoremProof",
            "677d7df94b9137eb292d06ca937597c64894fe24"
        ],
        [
            "rewrite /abelian -astabJ astabC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (iffP subsetP) => cGG x Gx; apply/orbit1P; apply: cGG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_classes_abelian : abelian G = (#|classes G| == #|G|).",
            "VernacStartTheoremProof",
            "9135d63360d193d7615bc4238639c50c4d27766f"
        ],
        [
            "have cGgt0 C: C \\in classes G -> 1 <= #|C| ?= iff (#|C| == 1)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/imsetP=> x _ ->; rewrite eq_sym -index_cent1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -sum_card_class -sum1_card (leqif_sum cGgt0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/abelian_classP/forall_inP=> [cGG _ /imsetP[x Gx ->]| cGG x Gx].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite cGG ?cards1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/esym/eqP; rewrite eqEcard sub1set cards1 class_refl leq_eqVlt cGG //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "exact: mem_imset.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CardClass.",
            "VernacEndSegment",
            "477fe95d9b1bed950efb1907a44a6ef3beb6673b"
        ],
        [
            "End InternalGroupAction.",
            "VernacEndSegment",
            "78e21e9b20e3ef4dd614aabd20957bab9afda3d9"
        ],
        [
            "Lemma gacentQ (gT : finGroupType) (H : {group gT}) (A : {set gT}) : 'C_(|'Q)(A) = 'C(A / H).",
            "VernacStartTheoremProof",
            "53c177952d3491d0003798a4d64a2acf94b0c57e"
        ],
        [
            "apply/setP=> Hx; case: (cosetP Hx) => x Nx ->{Hx}.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "rewrite -sub_cent1 -astab1J astabC sub1set -(quotientInorm H A).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have defD: qact_dom 'J H = 'N(H) by rewrite qact_domE ?subsetT ?astabsJ.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !(inE, mem_quotient) //= defD setIC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP/subsetP=> [cAx _ /morphimP[a Na Aa ->] | cAx a Aa].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move/cAx: Aa; rewrite !inE qactE ?defD ?morphJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [_ Na] := setIP Aa; move/implyP: (cAx (coset H a)); rewrite mem_morphim //.",
            "VernacExtend",
            "35d5e9f960e64b85a458b0ee5e9027dbf16506bb"
        ],
        [
            "by rewrite !inE qactE ?defD ?morphJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section AutAct.",
            "VernacBeginSection",
            "b9c39a291dbeea28a1f2e4a573de5752af10a711"
        ],
        [
            "Variable (gT : finGroupType) (G : {set gT}).",
            "VernacAssumption",
            "eaf7622bd8f5e17280717c4e204e23e15d8ec2be"
        ],
        [
            "Definition autact := act ('P \\ subsetT (Aut G)).",
            "VernacDefinition",
            "08dbef76b6c091d6cd6a552c5f69094515914ece"
        ],
        [
            "Canonical aut_action := [action of autact].",
            "VernacDefinition",
            "f1307d7f9170e02cc3ddec921252724a9e781575"
        ],
        [
            "Lemma autactK a : actperm aut_action a = a.",
            "VernacStartTheoremProof",
            "ef5d407da37d4bbbdde9e209b4412977ad691b98"
        ],
        [
            "by apply/permP=> x; rewrite permE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma autact_is_groupAction : is_groupAction G aut_action.",
            "VernacStartTheoremProof",
            "4157ff4809d40e8356af79326d392dc4a68d119c"
        ],
        [
            "by move=> a Aa /=; rewrite autactK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical aut_groupAction := GroupAction autact_is_groupAction.",
            "VernacDefinition",
            "99b80d3e5878c5b6d81083d52dd221f3fe405b30"
        ],
        [
            "End AutAct.",
            "VernacEndSegment",
            "366f9c12a6754d43edefea123e1c81323a68a405"
        ],
        [
            "Arguments autact {gT} G%g.",
            "VernacArguments",
            "9ed33dba8e98583847ea76606a61b143d3ef3d90"
        ],
        [
            "Arguments aut_action {gT} G%g.",
            "VernacArguments",
            "11f87f6cb5ae2bf90cb2f7c8e4d858c452aaf950"
        ],
        [
            "Arguments aut_groupAction {gT} G%g.",
            "VernacArguments",
            "f4287419c1155b67ec57a55651397683a1b9b3d1"
        ],
        [
            "Notation \"[ 'Aut' G ]\" := (aut_action G) : action_scope.",
            "VernacNotation",
            "c1c7d922b638ad07e499b7f568d6f9ca105ca8cf"
        ],
        [
            "Notation \"[ 'Aut' G ]\" := (aut_groupAction G) : groupAction_scope.",
            "VernacNotation",
            "ea779e703c183664254761735e8af5a483ec7a57"
        ]
    ],
    "proofs": [
        {
            "name": "is_total_action",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "split=> [a | x a b _ _] /=; last by rewrite toM.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: can_inj (to^~ a^-1) _ => x; rewrite -toM ?mulgV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "act_inj",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "by case: to => ? [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actMin",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "by case: to => ? [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actmEfun",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "by rewrite /actm => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actmE",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "by move=> Da; rewrite actmEfun.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setactE",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_setact",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "exact: mem_imset.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_setact",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "by apply: card_imset; apply: act_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setact_is_action",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "split=> [a R S eqRS | a b Da Db S]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /setact /= -imset_comp; apply: eq_imset => x; apply: actMin.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> x; apply/idP/idP=> /(mem_setact a).",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqRS => /imsetP[y Sy /act_inj->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -eqRS => /imsetP[y Sy /act_inj->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbitE",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbitP",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP imsetP) => [] [a]; exists a.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_orbit",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "exact: mem_imset.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afixP",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "rewrite inE; apply: (iffP subsetP) => [xfix a /xfix | xfix a Aa].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE xfix.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afixS",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "by move=> sAB; apply/subsetP=> u; rewrite !inE; apply: subset_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afixU",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE subUset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afix1P",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "by rewrite inE sub1set inE; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabIdom",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "by rewrite setIA setIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_dom",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "by move=> a /setIP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabS",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "move=> sS12; apply/subsetP=> x; rewrite !inE => /andP[->].",
                        "VernacExtend",
                        "b7d55d5cc9e609b184db748f6780e12224901e48"
                    ]
                },
                {
                    "command": [
                        "exact: subset_trans.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabsIdom",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "by rewrite setIA setIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_dom",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "by move=> a /setIdP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_act",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "rewrite 2!inE subEproper properEcard => /andP[_].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (card_preimset _ (act_inj _)) ltnn andbF orbF => /eqP{2}->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_sub",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> a cSa; rewrite !inE (astab_dom cSa).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> x Sx; rewrite inE (astab_act cSa).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabsC",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "apply/setP=> a; apply/idP/idP=> nSa; rewrite !inE (astabs_dom nSa).",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "by rewrite -setCS -preimsetC; apply/subsetP=> x; rewrite inE astabs_act.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite preimsetC setCS; apply/subsetP=> x; rewrite inE astabs_act.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabsI",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> a; rewrite !inE -!andbA preimsetI => /and4P[-> nSa _ nTa] /=.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite setISS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_setact",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "move=> nSa; apply/eqP; rewrite eqEcard card_setact leqnn andbT.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> _ /imsetP[x Sx ->]; rewrite astabs_act.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab1_set",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "apply/setP=> a; apply/idP/idP=> nSa.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "case/setIdP: nSa => Da; rewrite !inE Da sub1set inE => /eqP defS.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> x Sx; rewrite inE -defS mem_setact.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE (astabs_dom nSa) sub1set inE /= astabs_setact.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_set1",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubset astab_sub andbC setIS //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> a; rewrite ?(inE,sub1set).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_dom",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "by move=> nSA; rewrite (subset_trans nSA) ?subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_act",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "by move=> nAS a Aa x; rewrite astabs_act ?(subsetP nAS).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabCin",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "move=> sAD; apply/subsetP/subsetP=> [sAC x xS | sSF a aA].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by apply/afixP=> a aA; apply: astab_act (sAC _ aA) xS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE (subsetP sAD _ aA); apply/subsetP=> x xS.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by move/afixP/(_ _ aA): (sSF _ xS); rewrite inE => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabU",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> a; rewrite !inE subUset; case: (a \\in D).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabsU",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "by rewrite -(astabsC S) -(astabsC T) -(astabsC (S :|: T)) setCU astabsI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabsD",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "by rewrite setDE -(astabsC T) astabsI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actsI",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "by apply: subset_trans (astabsI S T); rewrite subsetI AactS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actsU",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "by apply: subset_trans astabsU; rewrite subsetI AactS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actsD",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "by apply: subset_trans astabsD; rewrite subsetI AactS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_in_orbit",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "by move=> nSA/imsetP[a Aa ->{y}] Sx; rewrite (astabs_act _ (subsetP nSA a Aa)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_faithful",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "by move=> sAB; apply: subset_trans; apply: setSI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reindex_astabs",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "move=> nSa; rewrite (reindex_inj (act_inj a)); apply: eq_bigl => x.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "exact: astabs_act.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reindex_acts",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "by move=> nSA /(subsetP nSA); apply: reindex_astabs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "act1",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "by apply: (act_inj to 1); rewrite -actMin ?mulg1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actKin",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "by move=> a Da /= x; rewrite -actMin ?groupV // mulgV act1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actKVin",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "by move=> a Da /= x; rewrite -{2}(invgK a) actKin ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setactVin",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "by move=> Da; apply: can2_imset_pre; [apply: actKVin | apply: actKin].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actXin",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "move=> Da; elim: i => /= [|i <-]; first by rewrite act1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite expgSr actMin ?groupX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afix1",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE sub1set inE act1 eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afixD1",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}(setD1K (group1 G)) afixU afix1 setTI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_refl",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}[x]act1 mem_orbit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_orbit",
            "line_nb": 280,
            "steps": [
                {
                    "command": [
                        "by apply: contraNneq => ->; apply: orbit_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_in_sym",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "move=> sGD; apply: symmetric_from_pre => x y /imsetP[a Ga].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by move/(canLR (actKin (subsetP sGD a Ga))) <-; rewrite mem_orbit ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_in_trans",
            "line_nb": 287,
            "steps": [
                {
                    "command": [
                        "move=> sGD _ _ z /imsetP[a Ga ->] /imsetP[b Gb ->].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite -actMin ?mem_orbit ?groupM // (subsetP sGD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_in_eqP",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "move=> sGD; apply: (iffP idP) => [yGx|<-]; last exact: orbit_refl.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/setP=> z; apply/idP/idP=> /orbit_in_trans-> //; rewrite orbit_in_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_in_transl",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "by move=> sGD Gxy; rewrite !(orbit_in_sym sGD _ z) (orbit_in_eqP y x sGD Gxy).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_act_in",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "by move=> sGD /mem_orbit/orbit_in_eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_actr_in",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "by move=> sGD /mem_orbit/orbit_in_transl->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_inv_in",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "move/subsetP=> sAD; apply/imsetP/imsetP=> [] [a Aa ->].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by exists a^-1; rewrite -?mem_invg ?actKin // -groupV sAD -?mem_invg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists a^-1; rewrite ?memV_invg ?actKin // sAD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_lcoset_in",
            "line_nb": 309,
            "steps": [
                {
                    "command": [
                        "move/subsetP=> sAD Da; apply/setP=> y; apply/imsetP/imsetP=> [] [b Ab ->{y}].",
                        "VernacExtend",
                        "e374b6c583d80c9d8b579c06df7953342f99f751"
                    ]
                },
                {
                    "command": [
                        "by exists (a^-1 * b); rewrite -?actMin ?mulKVg // ?sAD -?mem_lcoset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists (a * b); rewrite ?mem_mulg ?set11 ?actMin // sAD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_rcoset_in",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "move=> sAD Da; rewrite -orbit_inv_in ?mul_subG ?sub1set // invMg.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite invg_set1 orbit_lcoset_in ?inv_subG ?groupV ?actKin ?orbit_inv_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_conjsg_in",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "move=> sAD Da; rewrite conjsgE.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite orbit_lcoset_in ?groupV ?mul_subG ?sub1set ?actKin ?orbit_rcoset_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit1P",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "apply: (iffP afixP) => [xfix | xfix a Ga].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eq_sym eqEsubset sub1set -{1}[x]act1 mem_imset //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> y; case/imsetP=> a Ga ->; rewrite inE xfix.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/set1P; rewrite -xfix mem_imset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_orbit1",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "move=> orb1; apply/eqP; rewrite eq_sym eqEcard {}orb1 cards1.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite sub1set orbit_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_transversalP",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "move/orbit_partition; rewrite -/P => partP.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "have [/eqP defS tiP _] := and3P partP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have trXP: is_transversal X P S := transversalP partP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sXS: X \\subset S := transversal_sub trXP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "split=> // [x y Xx Xy /= | x Sx].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have Sx := subsetP sXS x Xx.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(inj_in_eq (pblock_inj trXP)) // eq_pblock ?defS //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (def_pblock tiP (mem_imset _ Sx)) ?orbit_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /imsetP[y Xy defxG]: orbit to G x \\in pblock P @: X.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (pblock_transversal trXP) ?mem_imset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suffices /orbitP[a Ga def_y]: y \\in orbit to G x by exists a; rewrite ?def_y.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite defxG mem_pblock defS (subsetP sXS).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_set_astab",
            "line_nb": 355,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; split=> [|a b cSa cSb].",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE group1; apply/subsetP=> x _; rewrite inE act1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE groupM ?(@astab_dom _ _ _ to S) //; apply/subsetP=> x Sx.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE actMin ?(@astab_dom _ _ _ to S) ?(astab_act _ Sx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afix_gen_in",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "move=> sAD; apply/eqP; rewrite eqEsubset afixS ?sub_gen //=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite -astabCin gen_subG ?astabCin.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afix_cycle_in",
            "line_nb": 366,
            "steps": [
                {
                    "command": [
                        "by move=> Da; rewrite afix_gen_in ?sub1set.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afixYin",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "by move=> sAD sBD; rewrite afix_gen_in ?afixU // subUset sAD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afixMin",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "by move=> sGD sHD; rewrite -afix_gen_in ?mul_subG // genM_join afixYin.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_astab1_in",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "by move=> sAD; rewrite astabCin ?sub1set.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_set_astabs",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; split=> [|a b cSa cSb].",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE group1; apply/subsetP=> x Sx; rewrite inE act1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE groupM ?(@astabs_dom _ _ _ to S) //; apply/subsetP=> x Sx.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE actMin ?(@astabs_dom _ _ _ to S) ?astabs_act.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_norm",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> a nSa; rewrite inE sub_conjg; apply/subsetP=> b cSb.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "have [Da Db] := (astabs_dom nSa, astab_dom cSb).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_conjgV !inE groupJ //; apply/subsetP=> x Sx.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite inE !actMin ?groupM ?groupV //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (astab_act cSb) ?actKVin ?astabs_act ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_normal",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "by rewrite /normal astab_sub astab_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_sub_orbit",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "move/acts_act=> GactS.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP/idP=> [| Sx y]; first by apply; apply: orbit_refl.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/orbitP=> a Ga <-{y}; rewrite GactS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_orbit",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "move/subsetP=> sGD; apply/subsetP=> a Ga; rewrite !inE sGD //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> _ /imsetP[b Gb ->].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE -actMin ?sGD // mem_imset ?groupM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_subnorm_fix",
            "line_nb": 405,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> a nAa; have [Da _] := setIP nAa; rewrite !inE Da.",
                        "VernacExtend",
                        "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x Cx; rewrite inE; apply/afixP=> b DAb.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "have [Db _]:= setIP DAb; rewrite -actMin // conjgCV actMin ?groupJ ?groupV //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= (afixP Cx) // memJ_norm // groupV (subsetP (normsGI _ _) _ nAa).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atrans_orbit",
            "line_nb": 411,
            "steps": [
                {
                    "command": [
                        "by apply: mem_imset; apply: orbit_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "amove_act",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "move=> Ga; apply/setP=> b; have Da := ssGD Ga.",
                        "VernacExtend",
                        "fcbc4db6275a8d44907e8ed4b44d2f7f279ee662"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_rcoset !(inE, sub1set) !groupMr ?groupV //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case Gb: (b \\in G); rewrite //= actMin ?groupV ?ssGD ?(canF_eq (actKVin Da)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "amove_orbit",
            "line_nb": 423,
            "steps": [
                {
                    "command": [
                        "apply/setP => Ha; apply/imsetP/rcosetsP=> [[y] | [a Ga ->]].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by case/imsetP=> b Gb -> ->{Ha y}; exists b => //; rewrite amove_act.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -amove_act //; exists (to x a); first apply: mem_orbit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "amoveK",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "move=> _ /orbitP[a Ga <-]; rewrite amove_act //= -[G :&: _]/(gval _).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: repr_rcosetP => b; rewrite !(inE, sub1set)=> /and3P[Gb _ xbx].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by rewrite actMin ?ssGD ?(eqP xbx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_stabilizer",
            "line_nb": 433,
            "steps": [
                {
                    "command": [
                        "rewrite -amove_orbit -imset_comp /=; apply/setP=> z.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by apply/idP/imsetP=> [xGz | [y xGy ->]]; first exists z; rewrite /= ?amoveK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "act_reprK",
            "line_nb": 437,
            "steps": [
                {
                    "command": [
                        "move=> _ /rcosetsP[a Ga ->] /=; rewrite amove_act ?rcoset_repr //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite -[G :&: _]/(gval _); case: repr_rcosetP => b /setIP[Gb _].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "exact: groupM.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_orbit_in",
            "line_nb": 443,
            "steps": [
                {
                    "command": [
                        "move=> sGD; rewrite orbit_stabilizer 1?card_in_imset //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "exact: can_in_inj (act_reprK _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_orbit_in_stab",
            "line_nb": 447,
            "steps": [
                {
                    "command": [
                        "by move=> sGD; rewrite mulnC card_orbit_in ?Lagrange ?subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_sum_card_orbit",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "by move/orbit_partition/card_partition.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_setact_in",
            "line_nb": 453,
            "steps": [
                {
                    "command": [
                        "move=> Da; apply/setP=> b; rewrite mem_conjg !inE -mem_conjg conjGid //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "apply: andb_id2l => Db; rewrite sub_imset_pre; apply: eq_subset_r => x.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE !actMin ?groupM ?groupV // invgK (canF_eq (actKVin Da)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab1_act_in",
            "line_nb": 458,
            "steps": [
                {
                    "command": [
                        "by move=> Da; rewrite -astab_setact_in // /setact imset_set1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Frobenius_Cauchy",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "move=> GactS; have sGD := acts_dom GactS.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "transitivity (\\sum_(a in G) \\sum_(x in 'Fix_(S | to)[a]) 1%N).",
                        "VernacExtend",
                        "fcae5129231c3313daf6c0632385cff91918fa47"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => a _; rewrite -sum1_card.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (exchange_big_dep (mem S)) /= => [|a x _]; last by case/setIP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite (set_partition_big _ (orbit_partition GactS)) -sum_nat_const /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => _ /imsetP[x Sx ->].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite -(card_orbit_in_stab x sGD) -sum_nat_const.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => y; rewrite orbit_in_sym // => /imsetP[a Ga defx].",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "rewrite defx astab1_act_in ?(subsetP sGD) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}(conjGid Ga) -conjIg cardJg -sum1_card setIA (setIidPl sGD).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigl => b; rewrite !(sub1set, inE) -(acts_act GactS Ga) -defx Sx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atrans_dvd_index_in",
            "line_nb": 474,
            "steps": [
                {
                    "command": [
                        "move=> sGD /imsetP[x Sx {1}->]; rewrite card_orbit_in //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite indexgS // setIS // astabS // sub1set.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atransPin",
            "line_nb": 482,
            "steps": [
                {
                    "command": [
                        "by move=> sGD /imsetP[y _ ->] x; apply/orbit_in_eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atransP2in",
            "line_nb": 485,
            "steps": [
                {
                    "command": [
                        "by move=> sGD transG x y /(atransPin sGD transG) <- /imsetP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atrans_acts_in",
            "line_nb": 488,
            "steps": [
                {
                    "command": [
                        "move=> sGD transG; apply/subsetP=> a Ga; rewrite !inE (subsetP sGD) //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> x /(atransPin sGD transG) <-; rewrite inE mem_imset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subgroup_transitivePin",
            "line_nb": 492,
            "steps": [
                {
                    "command": [
                        "move=> Sx sHG sGD trG; have sHD := subset_trans sHG sGD.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply: (iffP idP) => [trH | defG].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite group_modr //; apply/setIidPl/subsetP=> a Ga.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "have Sxa: to x a \\in S by rewrite (acts_act (atrans_acts_in sGD trG)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [b Hb xab]:= atransP2in sHD trH Sxa Sx.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have Da := subsetP sGD a Ga; have Db := subsetP sHD b Hb.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "rewrite -(mulgK b a) mem_mulg ?groupV // !inE groupM //= sub1set inE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite actMin -?xab.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/imsetP; exists x => //; apply/setP=> y; rewrite -(atransPin sGD trG Sx).",
                        "VernacExtend",
                        "e9117678ab574c7b2c67a766017142cd191e8dff"
                    ]
                },
                {
                    "command": [
                        "apply/imsetP/imsetP=> [] [a]; last by exists a; first apply: (subsetP sHG).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -defG => /imset2P[c b /setIP[_ cxc] Hb ->] ->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "exists b; rewrite ?actMin ?(astab_dom cxc) ?(subsetP sHD) //.",
                        "VernacExtend",
                        "063ddaff9732edb582a17c99c117fd04ff949391"
                    ]
                },
                {
                    "command": [
                        "by rewrite (astab_act cxc) ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actM",
            "line_nb": 525,
            "steps": [
                {
                    "command": [
                        "by rewrite actMin ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actK",
            "line_nb": 528,
            "steps": [
                {
                    "command": [
                        "by move=> a; apply: actKin; rewrite inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actKV",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "by move=> a; apply: actKVin; rewrite inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actX",
            "line_nb": 534,
            "steps": [
                {
                    "command": [
                        "by elim: n => [|n /= <-]; rewrite ?act1 // -actM expgSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actCJ",
            "line_nb": 537,
            "steps": [
                {
                    "command": [
                        "by rewrite !actM actK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actCJV",
            "line_nb": 540,
            "steps": [
                {
                    "command": [
                        "by rewrite (actCJ _ a) conjgKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_sym",
            "line_nb": 543,
            "steps": [
                {
                    "command": [
                        "exact/orbit_in_sym/subsetT.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_trans",
            "line_nb": 546,
            "steps": [
                {
                    "command": [
                        "exact/orbit_in_trans/subsetT.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_eqP",
            "line_nb": 549,
            "steps": [
                {
                    "command": [
                        "exact/orbit_in_eqP/subsetT.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_transl",
            "line_nb": 552,
            "steps": [
                {
                    "command": [
                        "exact/orbit_in_transl/subsetT.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_act",
            "line_nb": 555,
            "steps": [
                {
                    "command": [
                        "exact/orbit_act_in/subsetT.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_actr",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "by move/mem_orbit/orbit_transl; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_eq_mem",
            "line_nb": 561,
            "steps": [
                {
                    "command": [
                        "exact: sameP eqP (orbit_eqP G x y).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_inv",
            "line_nb": 564,
            "steps": [
                {
                    "command": [
                        "by rewrite orbit_inv_in ?subsetT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_lcoset",
            "line_nb": 567,
            "steps": [
                {
                    "command": [
                        "by rewrite orbit_lcoset_in ?subsetT ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_rcoset",
            "line_nb": 570,
            "steps": [
                {
                    "command": [
                        "by rewrite orbit_rcoset_in ?subsetT ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_conjsg",
            "line_nb": 573,
            "steps": [
                {
                    "command": [
                        "by rewrite orbit_conjsg_in ?subsetT ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabP",
            "line_nb": 576,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [cSa x|cSa]; first exact: astab_act.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE; apply/subsetP=> x Sx; rewrite inE cSa.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab1P",
            "line_nb": 580,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE sub1set inE; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_astab1",
            "line_nb": 583,
            "steps": [
                {
                    "command": [
                        "by rewrite sub_astab1_in ?subsetT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabC",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "by rewrite astabCin ?subsetT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afix_cycle",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "by rewrite afix_cycle_in ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afix_gen",
            "line_nb": 592,
            "steps": [
                {
                    "command": [
                        "by rewrite afix_gen_in ?subsetT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afixM",
            "line_nb": 595,
            "steps": [
                {
                    "command": [
                        "by rewrite afixMin ?subsetT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabsP",
            "line_nb": 598,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [nSa x|nSa]; first exact: astabs_act.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE; apply/subsetP=> x; rewrite inE nSa.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_orbit",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "by rewrite card_orbit_in ?subsetT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_orbit",
            "line_nb": 605,
            "steps": [
                {
                    "command": [
                        "by rewrite card_orbit dvdn_indexg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_orbit_stab",
            "line_nb": 608,
            "steps": [
                {
                    "command": [
                        "by rewrite mulnC card_orbit Lagrange ?subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actsP",
            "line_nb": 611,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [nSA x|nSA]; first exact: acts_act.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> a Aa; rewrite !inE; apply/subsetP=> x; rewrite inE nSA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setact_orbit",
            "line_nb": 616,
            "steps": [
                {
                    "command": [
                        "apply/setP=> y; apply/idP/idP=> /imsetP[_ /imsetP[a Aa ->] ->{y}].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite actCJ mem_orbit ?memJ_conjg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -actCJ mem_setact ?mem_orbit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_setact",
            "line_nb": 621,
            "steps": [
                {
                    "command": [
                        "apply/setP=> b; rewrite mem_conjg.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/astabP/astabP=> stab x => [Sx|].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite conjgE invgK !actM stab ?actK //; apply/imsetP; exists x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/imsetP=> y Sy ->{x}; rewrite -actM conjgCV actM stab.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab1_act",
            "line_nb": 627,
            "steps": [
                {
                    "command": [
                        "by rewrite -astab_setact /setact imset_set1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atransP",
            "line_nb": 630,
            "steps": [
                {
                    "command": [
                        "by case/imsetP=> x _ -> y; apply/orbit_eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atransP2",
            "line_nb": 633,
            "steps": [
                {
                    "command": [
                        "by move=> GtrS x y /(atransP GtrS) <- /imsetP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atrans_acts",
            "line_nb": 636,
            "steps": [
                {
                    "command": [
                        "move=> GtrS; apply/subsetP=> a Ga; rewrite !inE.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> x /(atransP GtrS) <-; rewrite inE mem_imset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atrans_supgroup",
            "line_nb": 640,
            "steps": [
                {
                    "command": [
                        "move=> sGH trG; apply/idP/idP=> [|actH]; first exact: atrans_acts.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/imsetP: trG => x Sx defS; apply/imsetP; exists x => //.",
                        "VernacExtend",
                        "58168c4367f5c8fd5aef7600205b564e8c5f4f4d"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite eqEsubset acts_sub_orbit ?Sx // defS imsetS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atrans_dvd",
            "line_nb": 658,
            "steps": [
                {
                    "command": [
                        "by case/imsetP=> x _ ->; apply: dvdn_orbit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_fix_norm",
            "line_nb": 661,
            "steps": [
                {
                    "command": [
                        "move=> nAB; have:= acts_subnorm_fix to B; rewrite !setTI.",
                        "VernacExtend",
                        "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
                    ]
                },
                {
                    "command": [
                        "exact: subset_trans.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "faithfulP",
            "line_nb": 665,
            "steps": [
                {
                    "command": [
                        "apply: (iffP subsetP) => [Cto1 a Aa Ca | Cto1 a].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply/set1P; rewrite Cto1 // inE Aa; apply/astabP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/setIP=> Aa /astabP Ca; apply/set1P; apply: Cto1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_trans_gcore",
            "line_nb": 670,
            "steps": [
                {
                    "command": [
                        "move=> transG Su; apply/eqP; rewrite eqEsubset.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite gcore_max ?astabS ?sub1set //=; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exact: subset_trans (atrans_acts transG) (astab_norm _ _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x cSx; apply/astabP=> uy.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "case/(atransP2 transG Su) => y Gy ->{uy}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply/astab1P; rewrite astab1_act (bigcapP cSx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subgroup_transitiveP",
            "line_nb": 678,
            "steps": [
                {
                    "command": [
                        "by move=> Sx sHG; apply: subgroup_transitivePin (subsetT G).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ract_is_action",
            "line_nb": 718,
            "steps": [
                {
                    "command": [
                        "rewrite /ract; case: to => f [injf fM].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by split=> // x; apply: (sub_in2 (subsetP sAD)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ractE",
            "line_nb": 723,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actby_is_action",
            "line_nb": 734,
            "steps": [
                {
                    "command": [
                        "rewrite /actby; split=> [a x y | x a b Aa Ab /=]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite Aa Ab groupM // !andbT actMin ?(subsetP (acts_dom nRA)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case Rx: (x \\in R); rewrite ?(acts_act nRA) ?Rx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case Aa: (a \\in A); rewrite ?andbF ?andbT //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case Rx: (x \\in R); case Ry: (y \\in R) => // eqxy; first exact: act_inj eqxy.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -eqxy (acts_act nRA Aa) Rx in Ry.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqxy (acts_act nRA Aa) Ry in Rx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actbyE",
            "line_nb": 745,
            "steps": [
                {
                    "command": [
                        "by rewrite /= /actby => -> ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afix_actby",
            "line_nb": 748,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE /= /actby.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case: (x \\in R); last by apply/subsetP=> a _; rewrite !inE.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP/subsetP=> [cBx a | cABx a Ba]; rewrite !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case/andP=> Aa /cBx; rewrite inE Aa.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => //= Aa; have:= cABx a; rewrite !inE Aa => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_actby",
            "line_nb": 755,
            "steps": [
                {
                    "command": [
                        "apply/setP=> a; rewrite setIA (setIidPl (acts_dom nRA)) !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case Aa: (a \\in A) => //=; apply/subsetP/subsetP=> cRSa x => [|Sx].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by case/setIP=> Rx /cRSa; rewrite !inE actbyE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by have:= cRSa x; rewrite !inE /= /actby Aa Sx; case: (x \\in R) => //; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_actby",
            "line_nb": 761,
            "steps": [
                {
                    "command": [
                        "apply/setP=> a; rewrite setIA (setIidPl (acts_dom nRA)) !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case Aa: (a \\in A) => //=; apply/subsetP/subsetP=> nRSa x => [|Sx].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by case/setIP=> Rx /nRSa; rewrite !inE actbyE ?(acts_act nRA) ?Rx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have:= nRSa x; rewrite !inE /= /actby Aa Sx ?(acts_act nRA) //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by case: (x \\in R) => //; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_actby",
            "line_nb": 768,
            "steps": [
                {
                    "command": [
                        "by rewrite astabs_actby subsetI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_act_proof",
            "line_nb": 782,
            "steps": [
                {
                    "command": [
                        "by case: Na => a /= /(astabs_act (val u)); rewrite !inE valP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_subact",
            "line_nb": 786,
            "steps": [
                {
                    "command": [
                        "by rewrite /subact -if_neg; case: insubP => [Na|] -> //=; rewrite SubK => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_subact",
            "line_nb": 797,
            "steps": [
                {
                    "command": [
                        "apply/setP=> a; rewrite inE in_setI; apply: andb_id2l => sDa.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "have [Da _] := setIP sDa; rewrite !inE Da.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP/subsetP=> [cSa _ /imsetP[x Sx ->] | cSa x Sx]; rewrite !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by have:= cSa x Sx; rewrite inE -val_eqE val_subact sDa.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by have:= cSa _ (mem_imset val Sx); rewrite inE -val_eqE val_subact sDa.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_subact",
            "line_nb": 804,
            "steps": [
                {
                    "command": [
                        "apply/setP=> a; rewrite inE in_setI; apply: andb_id2l => sDa.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "have [Da _] := setIP sDa; rewrite !inE Da.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP/subsetP=> [nSa _ /imsetP[x Sx ->] | nSa x Sx]; rewrite !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by have:= nSa x Sx; rewrite inE => /(mem_imset val); rewrite val_subact sDa.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have:= nSa _ (mem_imset val Sx); rewrite inE => /imsetP[y Sy def_y].",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "by rewrite ((_ a =P y) _) // -val_eqE val_subact sDa def_y.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qact_subdomE",
            "line_nb": 826,
            "steps": [
                {
                    "command": [
                        "by congr 'N(_|_); apply/setP=> Hx; rewrite !inE genGid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qact_proof",
            "line_nb": 829,
            "steps": [
                {
                    "command": [
                        "by rewrite qact_subdomE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_qact_dom",
            "line_nb": 834,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> a nNa; rewrite !inE (astabs_dom nNa); apply/subsetP=> x Nx.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "have: H :* x \\in rcosets H 'N(H) by rewrite -rcosetE mem_imset.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite inE -(astabs_act _ nNa) => /rcosetsP[y Ny defHy].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have: to x a \\in H :* y by rewrite -defHy (mem_imset (to^~a)) ?rcoset_refl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: subsetP; rewrite mul_subG ?sub1set ?normG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qactE",
            "line_nb": 849,
            "steps": [
                {
                    "command": [
                        "by move=> Nx nNa; rewrite qactEcond ?nNa.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_quotient",
            "line_nb": 852,
            "steps": [
                {
                    "command": [
                        "move=> nBA; apply: subset_trans {A}nBA _; apply/subsetP=> a /setIP[dHa nBa].",
                        "VernacExtend",
                        "e374b6c583d80c9d8b579c06df7953342f99f751"
                    ]
                },
                {
                    "command": [
                        "rewrite inE dHa inE; apply/subsetP=> _ /morphimP[x nHx Bx ->].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite inE /= qactE //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mem_morphim ?(acts_act acts_qact_dom) ?(astabs_act _ nBa).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_quotient",
            "line_nb": 858,
            "steps": [
                {
                    "command": [
                        "move=> nsHG; have [_ nHG] := andP nsHG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubset acts_quotient // andbT.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> a nGa; have dHa := astabs_dom nGa; have [Da _]:= setIdP dHa.",
                        "VernacExtend",
                        "979c5acda079ebad8f7bb7da92b264c073e7811e"
                    ]
                },
                {
                    "command": [
                        "rewrite inE dHa 2!inE Da; apply/subsetP=> x Gx; have nHx := subsetP nHG x Gx.",
                        "VernacExtend",
                        "c6ff91ceee22c8fcb242ad6d0dc8ed6693b7fb7e"
                    ]
                },
                {
                    "command": [
                        "rewrite -(quotientGK nsHG) 2!inE (acts_act acts_qact_dom) ?nHx //= inE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -qactE // (astabs_act _ nGa) mem_morphim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modactEcond",
            "line_nb": 878,
            "steps": [
                {
                    "command": [
                        "case/setIP=> Da Na; case: ifP => Cx; rewrite /modact Cx //.",
                        "VernacExtend",
                        "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
                    ]
                },
                {
                    "command": [
                        "rewrite val_coset // -group_modr ?sub1set //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (repr _) / (repr_rcosetP (D :&: H) a) => a' Ha'.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite actMin ?(afixP Cx _ Ha') //; case/setIP: Ha'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modactE",
            "line_nb": 884,
            "steps": [
                {
                    "command": [
                        "by move=> Da Na Rx; rewrite modactEcond ?Rx // inE Da.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modact_is_action",
            "line_nb": 887,
            "steps": [
                {
                    "command": [
                        "split=> [Ha x y | x Ha Hb]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/morphimP=> a Na Da ->{Ha}; case/morphimP=> b Nb Db ->{Hb}.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "rewrite -morphM //= !modactEcond // ?groupM ?(introT setIP _) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => Cx; rewrite ?(acts_dom, Cx, actMin, introT setIP _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (set_0Vmem (D :&: Ha)) => [Da0 | [a /setIP[Da NHa]]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /modact Da0 repr_set0 !act1 !if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Na := subsetP (coset_norm _) _ NHa.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have NDa: a \\in 'N_D(H) by rewrite inE Da.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(coset_mem NHa) !modactEcond //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "do 2![case: ifP]=> Cy Cx // eqxy; first exact: act_inj eqxy.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -eqxy acts_dom ?Cx in Cy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqxy acts_dom ?Cy in Cx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fixSH",
            "line_nb": 905,
            "steps": [
                {
                    "command": [
                        "by rewrite -astabCin ?subsetIl // subIset ?cSH ?orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_mod",
            "line_nb": 908,
            "steps": [
                {
                    "command": [
                        "apply/setP=> Ha; apply/idP/morphimP=> [nSa | [a nHa nSa ->]].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "case/morphimP: (astabs_dom nSa) => a nHa Da defHa.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists a => //; rewrite !inE Da; apply/subsetP=> x Sx; rewrite !inE.",
                        "VernacExtend",
                        "df71004946f731ff47e27c4e5401fed0d7184b9d"
                    ]
                },
                {
                    "command": [
                        "by have:= Sx; rewrite -(astabs_act x nSa) defHa /= modactE ?(subsetP fixSH).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Da := astabs_dom nSa; rewrite !inE mem_quotient //; apply/subsetP=> x Sx.",
                        "VernacExtend",
                        "4266062387bb5ba3b4b273358c36b198e35325af"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE /= modactE ?(astabs_act x nSa) ?(subsetP fixSH).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_mod",
            "line_nb": 916,
            "steps": [
                {
                    "command": [
                        "apply/setP=> Ha; apply/idP/morphimP=> [cSa | [a nHa cSa ->]].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "case/morphimP: (astab_dom cSa) => a nHa Da defHa.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists a => //; rewrite !inE Da; apply/subsetP=> x Sx; rewrite !inE.",
                        "VernacExtend",
                        "df71004946f731ff47e27c4e5401fed0d7184b9d"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{2}[x](astab_act cSa) // defHa /= modactE ?(subsetP fixSH).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Da := astab_dom cSa; rewrite !inE mem_quotient //; apply/subsetP=> x Sx.",
                        "VernacExtend",
                        "4266062387bb5ba3b4b273358c36b198e35325af"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE /= modactE ?(astab_act cSa) ?(subsetP fixSH).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afix_mod",
            "line_nb": 925,
            "steps": [
                {
                    "command": [
                        "move=> cSH /subsetIP[sGD nHG].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubset !subsetI !subsetIl /= -!astabCin ?quotientS //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have cfixH F: H \\subset 'C(S :&: F | to).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subset_trans cSH) // astabS ?subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite andbC astab_mod ?quotientS //=; last by rewrite astabCin ?subsetIr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(quotientSGK nHG) //= -astab_mod // astabCin ?quotientS ?subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modact_faithful",
            "line_nb": 934,
            "steps": [
                {
                    "command": [
                        "rewrite /faithful astab_mod ?subsetIr //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -quotientIG ?subsetIr ?trivg_quotient.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actpermM",
            "line_nb": 944,
            "steps": [
                {
                    "command": [
                        "by move=> a b Da Db; apply/permP=> x; rewrite permM !permE actMin.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actpermE",
            "line_nb": 948,
            "steps": [
                {
                    "command": [
                        "by rewrite permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actpermK",
            "line_nb": 951,
            "steps": [
                {
                    "command": [
                        "exact: actpermE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ker_actperm",
            "line_nb": 954,
            "steps": [
                {
                    "command": [
                        "congr (_ :&: _); apply/setP=> a; rewrite !inE /=.",
                        "VernacExtend",
                        "e02c5e37d306c924c86ea325376d95ddc0d1741e"
                    ]
                },
                {
                    "command": [
                        "apply/eqP/subsetP=> [a1 x _ | a1]; first by rewrite inE -actpermE a1 perm1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/permP=> x; apply/eqP; have:= a1 x; rewrite !inE actpermE perm1 => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "faithful_isom",
            "line_nb": 963,
            "steps": [
                {
                    "command": [
                        "by move=> ffulAS; apply/isomP; rewrite ker_actperm astab_actby setIT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ractpermE",
            "line_nb": 967,
            "steps": [
                {
                    "command": [
                        "by move=> a; apply/permP=> x; rewrite !permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afix_ract",
            "line_nb": 970,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_ract",
            "line_nb": 973,
            "steps": [
                {
                    "command": [
                        "by rewrite setIA (setIidPl sAD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_ract",
            "line_nb": 976,
            "steps": [
                {
                    "command": [
                        "by rewrite setIA (setIidPl sAD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_ract",
            "line_nb": 979,
            "steps": [
                {
                    "command": [
                        "by rewrite astabs_ract subsetI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mact_is_action",
            "line_nb": 987,
            "steps": [
                {
                    "command": [
                        "split=> [a x y | x a b Da Db]; first exact: perm_inj.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /mact morphM //= permM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mactE",
            "line_nb": 992,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injm_faithful",
            "line_nb": 995,
            "steps": [
                {
                    "command": [
                        "move/injmP=> phi_inj; apply/subsetP=> a /setIP[Da /astab_act a1].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "apply/set1P/phi_inj => //; apply/permP=> x.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite morph1 perm1 -mactE a1 ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_mact",
            "line_nb": 1000,
            "steps": [
                {
                    "command": [
                        "by apply/permP=> x; rewrite permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_is_action",
            "line_nb": 1010,
            "steps": [
                {
                    "command": [
                        "split=> [e | x e1 e2]; first exact: act_inj.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/morphpreP=> Be1 Dfe1; case/morphpreP=> Be2 Dfe2.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by rewrite /comp_act morphM ?actMin.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_actE",
            "line_nb": 1016,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afix_comp",
            "line_nb": 1019,
            "steps": [
                {
                    "command": [
                        "move=> sAB; apply/setP=> x; rewrite !inE /morphim (setIidPr sAB).",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP/subsetP=> [cAx _ /imsetP[a Aa ->] | cfAx a Aa].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by move/cAx: Aa; rewrite !inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE; move/(_ (f a)): cfAx; rewrite inE mem_imset // => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_comp",
            "line_nb": 1025,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE -andbA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_comp",
            "line_nb": 1028,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE -andbA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aperm_is_action",
            "line_nb": 1037,
            "steps": [
                {
                    "command": [
                        "by apply: is_total_action => [x|x a b]; rewrite apermE (perm1, permM).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcycleE",
            "line_nb": 1041,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_act1P",
            "line_nb": 1044,
            "steps": [
                {
                    "command": [
                        "apply: (iffP eqP) => [-> x | a1]; first exact: act1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/permP=> x; rewrite -apermE a1 perm1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_faithful",
            "line_nb": 1048,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> a /setIP[Da crTa].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply/set1P; apply/permP=> x; rewrite -apermE perm1 (astabP crTa) ?inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actperm_id",
            "line_nb": 1052,
            "steps": [
                {
                    "command": [
                        "by apply/permP=> x; rewrite permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbit_morphim_actperm",
            "line_nb": 1061,
            "steps": [
                {
                    "command": [
                        "move=> sAD x; rewrite morphimEsub // /orbit -imset_comp.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_imset => a //=; rewrite actpermK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcycle_actperm",
            "line_nb": 1065,
            "steps": [
                {
                    "command": [
                        "move=> Da x.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite pcycleE -orbit_morphim_actperm ?cycle_subG ?morphim_cycle.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restr_perm_on",
            "line_nb": 1074,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> x; apply: contraR => notSx.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite permE /= /actby (negPf notSx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triv_restr_perm",
            "line_nb": 1078,
            "steps": [
                {
                    "command": [
                        "move=> not_nSp; apply/permP=> x.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite !permE /= /actby (negPf not_nSp) andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restr_permE",
            "line_nb": 1082,
            "steps": [
                {
                    "command": [
                        "by move=> y x nSp Sx; rewrite /= actpermE actbyE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ker_restr_perm",
            "line_nb": 1085,
            "steps": [
                {
                    "command": [
                        "by rewrite ker_actperm astab_actby setIT (setIidPr (astab_sub _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "im_restr_perm",
            "line_nb": 1088,
            "steps": [
                {
                    "command": [
                        "exact: im_perm_on (restr_perm_on p).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Aut_restr_perm",
            "line_nb": 1097,
            "steps": [
                {
                    "command": [
                        "move=> AutGa.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case nHa: (a \\in 'N(H | 'P)); last by rewrite triv_restr_perm ?nHa ?group1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite inE restr_perm_on; apply/morphicP=> x y Hx Hy /=.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !restr_permE ?groupM // -(autmE AutGa) morphM ?(subsetP sHG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restr_perm_Aut",
            "line_nb": 1103,
            "steps": [
                {
                    "command": [
                        "by apply/subsetP=> a'; case/morphimP=> a _ AutGa ->{a'}; apply: Aut_restr_perm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Aut_in_isog",
            "line_nb": 1106,
            "steps": [
                {
                    "command": [
                        "rewrite /Aut_in -ker_restr_perm kerE -morphpreIdom -morphimIdom -kerE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite setIA (setIC _ (Aut G)) first_isog_loc ?subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_Aut_isom",
            "line_nb": 1139,
            "steps": [
                {
                    "command": [
                        "move=> AutGa; rewrite !inE sub_morphim_pre // subsetI sHD /= /aperm.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite !(sameP setIidPl eqP) !eqEsubset !subsetIl; apply: eq_subset_r => x.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE; apply: andb_id2l => Hx; have Gx: x \\in G := subsetP sHG x Hx.",
                        "VernacExtend",
                        "c6ff91ceee22c8fcb242ad6d0dc8ed6693b7fb7e"
                    ]
                },
                {
                    "command": [
                        "have Dax: a x \\in D by rewrite (subsetP sGD) // Aut_closed.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite Aut_isomE // -!sub1set -morphim_set1 // injmSK ?sub1set.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injm_Aut_sub",
            "line_nb": 1163,
            "steps": [
                {
                    "command": [
                        "do 2!rewrite isog_sym (isog_transl _ (Aut_in_isog _ _)).",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "by rewrite isog_sym (isom_isog _ _ restr_perm_isom) // restr_perm_Aut.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injm_Aut_full",
            "line_nb": 1167,
            "steps": [
                {
                    "command": [
                        "by rewrite (isog_transl _ injm_Aut_sub) (isog_transr _ (injm_Aut injf sHD)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actperm_Aut",
            "line_nb": 1206,
            "steps": [
                {
                    "command": [
                        "by case: to.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "im_actperm_Aut",
            "line_nb": 1209,
            "steps": [
                {
                    "command": [
                        "by apply/subsetP=> _ /morphimP[a _ Da ->]; apply: actperm_Aut.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gact_out",
            "line_nb": 1212,
            "steps": [
                {
                    "command": [
                        "by move=> Da Rx; rewrite -actpermE (out_Aut _ Rx) ?actperm_Aut.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gactM",
            "line_nb": 1215,
            "steps": [
                {
                    "command": [
                        "move=> a Da /= x y; rewrite -!(actpermE to); apply: morphicP x y.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "by rewrite Aut_morphic ?actperm_Aut.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actmM",
            "line_nb": 1219,
            "steps": [
                {
                    "command": [
                        "by rewrite /actm; case: ifP => //; apply: gactM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphim_actm",
            "line_nb": 1223,
            "steps": [
                {
                    "command": [
                        "by move=> a Da /= S sSR; rewrite /morphim /= actmEfun ?(setIidPr _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentIdom",
            "line_nb": 1227,
            "steps": [
                {
                    "command": [
                        "by rewrite /gacent setIA setIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentIim",
            "line_nb": 1230,
            "steps": [
                {
                    "command": [
                        "by rewrite setIA setIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentS",
            "line_nb": 1233,
            "steps": [
                {
                    "command": [
                        "by move=> sAB; rewrite !(setIS, afixS).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentU",
            "line_nb": 1236,
            "steps": [
                {
                    "command": [
                        "by rewrite -setIIr -afixU -setIUr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentE",
            "line_nb": 1240,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}(setIidPr sAD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacent1E",
            "line_nb": 1243,
            "steps": [
                {
                    "command": [
                        "by rewrite /gacent [D :&: _](setIidPr _) ?sub1set.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subgacentE",
            "line_nb": 1246,
            "steps": [
                {
                    "command": [
                        "by rewrite gacentE setIA (setIidPl sSR).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subgacent1E",
            "line_nb": 1249,
            "steps": [
                {
                    "command": [
                        "by rewrite gacent1E setIA (setIidPl sSR).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gact1",
            "line_nb": 1260,
            "steps": [
                {
                    "command": [
                        "by move=> a Da; rewrite /= -actmE ?morph1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gactV",
            "line_nb": 1263,
            "steps": [
                {
                    "command": [
                        "by move=> a Da /= x Rx; move; rewrite -!actmE ?morphV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gactX",
            "line_nb": 1266,
            "steps": [
                {
                    "command": [
                        "by move=> a Da /= n x Rx; rewrite -!actmE // morphX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gactJ",
            "line_nb": 1269,
            "steps": [
                {
                    "command": [
                        "by move=> a Da /= x Rx y Ry; rewrite -!actmE // morphJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gactR",
            "line_nb": 1272,
            "steps": [
                {
                    "command": [
                        "by move=> a Da /= x Rx y Ry; rewrite -!actmE // morphR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gact_stable",
            "line_nb": 1275,
            "steps": [
                {
                    "command": [
                        "apply: acts_act; apply/subsetP=> a Da; rewrite !inE Da.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x; rewrite inE; apply: contraLR => R'xa.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(actKin to Da x) gact_out ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_set_gacent",
            "line_nb": 1280,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; split=> [|x y].",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE group1; apply/subsetP=> a /setIP[Da _]; rewrite inE gact1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/setIP=> Rx /afixP cAx /setIP[Ry /afixP cAy].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite inE groupM //; apply/afixP=> a Aa.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite gactM ?cAx ?cAy //; case/setIP: Aa.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacent1",
            "line_nb": 1288,
            "steps": [
                {
                    "command": [
                        "by rewrite /gacent (setIidPr (sub1G _)) afix1 setIT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacent_gen",
            "line_nb": 1291,
            "steps": [
                {
                    "command": [
                        "by move=> sAD; rewrite /gacent ![D :&: _](setIidPr _) ?gen_subG ?afix_gen_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentD1",
            "line_nb": 1294,
            "steps": [
                {
                    "command": [
                        "rewrite -gacentIdom -gacent_gen ?subsetIl // setIDA genD1 ?group1 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite gacent_gen ?subsetIl // gacentIdom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacent_cycle",
            "line_nb": 1298,
            "steps": [
                {
                    "command": [
                        "by move=> Da; rewrite gacent_gen ?sub1set.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentY",
            "line_nb": 1301,
            "steps": [
                {
                    "command": [
                        "by move=> sAD sBD; rewrite gacent_gen ?gacentU // subUset sAD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentM",
            "line_nb": 1304,
            "steps": [
                {
                    "command": [
                        "by move=> sGD sHB; rewrite -gacent_gen ?mul_subG // genM_join gacentY.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab1",
            "line_nb": 1307,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite ?(inE, sub1set) andb_idr //; move/gact1=> ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_range",
            "line_nb": 1310,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubset andbC astabS ?subsetT //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> a cRa; have Da := astab_dom cRa; rewrite !inE Da.",
                        "VernacExtend",
                        "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x; rewrite -(setUCr R) !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case/orP=> ?; [rewrite (astab_act cRa) | rewrite gact_out].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentC",
            "line_nb": 1316,
            "steps": [
                {
                    "command": [
                        "by move=> sAD sSR; rewrite subsetI sSR astabCin // (setIidPr sAD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab_gen",
            "line_nb": 1319,
            "steps": [
                {
                    "command": [
                        "move=> sSR; apply/setP=> a; case Da: (a \\in D); last by rewrite !inE Da.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!sub1set -!gacentC ?sub1set ?gen_subG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabM",
            "line_nb": 1323,
            "steps": [
                {
                    "command": [
                        "move=> sMR sNR; rewrite -astabU -astab_gen ?mul_subG // genM_join.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite astab_gen // subUset sMR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs1",
            "line_nb": 1327,
            "steps": [
                {
                    "command": [
                        "by rewrite astabs_set1 astab1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabs_range",
            "line_nb": 1330,
            "steps": [
                {
                    "command": [
                        "apply/setIidPl; apply/subsetP=> a Da; rewrite inE.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> x Rx; rewrite inE gact_stable.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabsD1",
            "line_nb": 1334,
            "steps": [
                {
                    "command": [
                        "case S1: (1 \\in S); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (setDidPl _) // disjoint_sym disjoints_subset sub1set inE S1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubset andbC -{1}astabsIdom -{1}astabs1 setIC astabsD /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{2}(setD1K S1) -astabsIdom -{1}astabs1 astabsU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacts_range",
            "line_nb": 1340,
            "steps": [
                {
                    "command": [
                        "by move=> sAD; split; rewrite ?astabs_range.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_subnorm_gacent",
            "line_nb": 1343,
            "steps": [
                {
                    "command": [
                        "move=> sAD; rewrite gacentE // actsI ?astabs_range ?subsetIl //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{2}(setIidPr sAD) acts_subnorm_fix.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_subnorm_subgacent",
            "line_nb": 1347,
            "steps": [
                {
                    "command": [
                        "move=> sAD actsB; rewrite actsI //; first by rewrite subIset ?actsB.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subset_trans _ (acts_subnorm_gacent sAD)) ?setSI ?(acts_dom actsB).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_joing",
            "line_nb": 1359,
            "steps": [
                {
                    "command": [
                        "by move=> sMR sNR nMA nNA; rewrite acts_gen ?actsU // subUset sMR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injm_actm",
            "line_nb": 1362,
            "steps": [
                {
                    "command": [
                        "apply/injmP=> x y Rx Ry; rewrite /= /actm; case: ifP => Da //.",
                        "VernacExtend",
                        "5caed936835e366e9e533d8f19382dcfedbf86d4"
                    ]
                },
                {
                    "command": [
                        "exact: act_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "im_actm",
            "line_nb": 1366,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqEcard (card_injm (injm_actm a)) // leqnn andbT.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> _ /morphimP[x Rx _ ->] /=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /actm; case: ifP => // Da; rewrite gact_stable.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_char",
            "line_nb": 1371,
            "steps": [
                {
                    "command": [
                        "move=> sGD /charP[sMR charM].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> a Ga; have Da := subsetP sGD a Ga; rewrite !inE Da.",
                        "VernacExtend",
                        "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x Mx; have Rx := subsetP sMR x Mx.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE -(charM _ (injm_actm a) (im_actm a)) -actmE // mem_morphim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacts_char",
            "line_nb": 1377,
            "steps": [
                {
                    "command": [
                        "by move=> sGD charM; split; rewrite (acts_char, char_sub).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ract_is_groupAction",
            "line_nb": 1382,
            "steps": [
                {
                    "command": [
                        "by move=> a Aa /=; rewrite ractpermE actperm_Aut ?(subsetP sAD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacent_ract",
            "line_nb": 1386,
            "steps": [
                {
                    "command": [
                        "by rewrite /gacent afix_ract setIA (setIidPr sAD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actby_is_groupAction",
            "line_nb": 1392,
            "steps": [
                {
                    "command": [
                        "move=> a Aa; rewrite /= inE; apply/andP; split.",
                        "VernacExtend",
                        "9901f82e5ee1133d602812d708a9c1405d183a8b"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x; apply: contraR => Gx.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite actpermE /= /actby (negbTE Gx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/morphicP=> x y Gx Gy; rewrite !actpermE /= /actby Aa groupM ?Gx ?Gy //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case nGAg; move/acts_dom; do 2!move/subsetP=> ?; rewrite gactM; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacent_actby",
            "line_nb": 1400,
            "steps": [
                {
                    "command": [
                        "rewrite /gacent afix_actby !setIA setIid setIUr setICr set0U.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by have [nAG sGR] := nGAg; rewrite (setIidPr (acts_dom nAG)) (setIidPl sGR).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_qact_dom_norm",
            "line_nb": 1407,
            "steps": [
                {
                    "command": [
                        "move=> a HDa /= x; rewrite {2}(('N(H) =P to^~ a @^-1: 'N(H)) _) ?inE {x}//.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite eqEcard (card_preimset _ (act_inj _ _)) leqnn andbT.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x Nx; rewrite inE; move/(astabs_act (H :* x)): HDa.",
                        "VernacExtend",
                        "dc718d25de68f54fd287715597f582bd4482cb79"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_rcosets mulSGid ?normG // Nx => /rcosetsP[y Ny defHy].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "suffices: to x a \\in H :* y by apply: subsetP; rewrite mul_subG ?sub1set ?normG.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -defHy; apply: mem_imset; apply: rcoset_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qact_is_groupAction",
            "line_nb": 1415,
            "steps": [
                {
                    "command": [
                        "move=> a HDa /=; have Da := astabs_dom HDa.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite inE; apply/andP; split.",
                        "VernacExtend",
                        "563747ab88f591bd67f85e19847b20501f275f62"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> Hx /=; case: (cosetP Hx) => x Nx ->{Hx}.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "apply: contraR => R'Hx; rewrite actpermE qactE // gact_out //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: contra R'Hx; apply: mem_morphim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/morphicP=> Hx Hy; rewrite !actpermE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case/morphimP=> x Nx Gx ->{Hx}; case/morphimP=> y Ny Gy ->{Hy}.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by rewrite -morphM ?qactE ?groupM ?gactM // morphM ?acts_qact_dom_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qact_domE",
            "line_nb": 1426,
            "steps": [
                {
                    "command": [
                        "move=> sHR; apply/setP=> a; apply/idP/idP=> nHa; have Da := astabs_dom nHa.",
                        "VernacExtend",
                        "d86e9afca293441ddfbf3c45b6a7765e546426cd"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE Da; apply/subsetP=> x Hx; rewrite inE -(rcoset1 H).",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "have /rcosetsP[y Ny defHy]: to^~ a @: H \\in rcosets H 'N(H).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (astabs_act _ nHa); apply/rcosetsP; exists 1; rewrite ?mulg1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (rcoset_eqP (_ : 1 \\in H :* y)) -defHy -1?(gact1 Da) mem_setact.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE Da; apply/subsetP=> Hx; rewrite inE => /rcosetsP[x Nx ->{Hx}].",
                        "VernacExtend",
                        "0288f65064e83af8559a49f90a2eba4421e03fd4"
                    ]
                },
                {
                    "command": [
                        "apply/imsetP; exists (to x a).",
                        "VernacExtend",
                        "e8ae80e36ff64b78129a7892bbcdd756998b37eb"
                    ]
                },
                {
                    "command": [
                        "case Rx: (x \\in R); last by rewrite gact_out ?Rx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite inE; apply/subsetP=> _ /imsetP[y Hy ->].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite -(actKVin to Da y) -gactJ // ?(subsetP sHR, astabs_act, groupV) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite memJ_norm // astabs_act ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite rcosetE eqEcard.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite (card_imset _ (act_inj _ _)) !card_rcoset leqnn andbT.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> _ /imsetP[y Hxy ->]; rewrite !mem_rcoset in Hxy *.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have Rxy := subsetP sHR _ Hxy; rewrite -(mulgKV x y).",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "case Rx: (x \\in R); last by rewrite !gact_out ?mulgK // 1?groupMl ?Rx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -gactV // -gactM 1?groupMr ?groupV // mulgK astabs_act.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modact_is_groupAction",
            "line_nb": 1448,
            "steps": [
                {
                    "command": [
                        "move=> Ha /morphimP[a Na Da ->]; have NDa: a \\in 'N_D(H) by apply/setIP.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite inE; apply/andP; split.",
                        "VernacExtend",
                        "563747ab88f591bd67f85e19847b20501f275f62"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x; rewrite 2!inE andbC actpermE /= modactEcond //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: contraR; case: ifP => // E Rx; rewrite gact_out.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/morphicP=> x y /setIP[Rx cHx] /setIP[Ry cHy].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite /= !actpermE /= !modactE ?gactM //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suffices: x * y \\in 'C_(|to)(H) by case/setIP.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite groupM //; apply/setIP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modgactE",
            "line_nb": 1459,
            "steps": [
                {
                    "command": [
                        "move=> cRH NDa /=; have [Da Na] := setIP NDa.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have [Rx | notRx] := boolP (x \\in R).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite modactE //; apply/afixP=> b /setIP[_ /(subsetP cRH)/astab_act->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite gact_out //= /modact; case: ifP => // _; rewrite gact_out //.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "suffices: a \\in D :&: coset H a by case/mem_repr/setIP.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE Da val_coset // rcoset_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacent_mod",
            "line_nb": 1467,
            "steps": [
                {
                    "command": [
                        "move=> cMH nHG; rewrite -gacentIdom gacentE ?subsetIl // setICA.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have sHD: H \\subset D by rewrite (subset_trans cMH) ?subsetIl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -quotientGI // afix_mod ?setIS // setICA -gacentIim (setIC R) -setIA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -gacentE ?subsetIl // gacentIdom setICA (setIidPr _) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite gacentC // ?(subset_trans cMH) ?astabS ?subsetIl // setICA subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_irr_mod",
            "line_nb": 1474,
            "steps": [
                {
                    "command": [
                        "move=> cMH nHG /mingroupP[/andP[ntM nMG] minM].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply/mingroupP; rewrite ntM astabs_mod ?quotientS //; split=> // L modL ntL.",
                        "VernacExtend",
                        "877072eca2b60ab32889d658e076eb026578eeca"
                    ]
                },
                {
                    "command": [
                        "have cLH: H \\subset 'C(L | to) by rewrite (subset_trans cMH) ?astabS //.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: minM => //; case/andP: modL => ->; rewrite astabs_mod ?quotientSGK //.",
                        "VernacExtend",
                        "cbc4844cce0ad896dcb7bc2a887cf6aae5047c5f"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subset_trans cLH) ?astab_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modact_coset_astab",
            "line_nb": 1482,
            "steps": [
                {
                    "command": [
                        "move=> Da; apply: modgactE => {x}//.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE Da; apply/subsetP=> _ /imsetP[c Cc ->].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "have Dc := astab_dom Cc; rewrite !inE groupJ //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x Rx; rewrite inE conjgE !actMin ?groupM ?groupV //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (astab_act Cc) ?actKVin // gact_stable ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acts_irr_mod_astab",
            "line_nb": 1489,
            "steps": [
                {
                    "command": [
                        "move=> irrG; have /andP[_ nMG] := mingroupp irrG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply: acts_irr_mod irrG; first exact: subsetIr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite normsI ?normG // (subset_trans nMG) // astab_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacent_comp",
            "line_nb": 1501,
            "steps": [
                {
                    "command": [
                        "rewrite /gacent afix_comp ?subIset ?subxx //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(setIC U) (setIC D) morphim_setIpre.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_astabs",
            "line_nb": 1526,
            "steps": [
                {
                    "command": [
                        "apply/setP=> fx; apply/morphimP/idP=> [[x D1x nSx ->] | nSx].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!inE -{1}defD2 mem_morphim //=; apply/subsetP=> _ /imsetP[u Su ->].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE -hfJ ?mem_imset // (astabs_act _ nSx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [|x D1x _ def_fx] := morphimP (_ : fx \\in f @* D1).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite defD2 (astabs_dom nSx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists x => //; rewrite !inE D1x; apply/subsetP=> u Su.",
                        "VernacExtend",
                        "9c74624cac92f94e452c274a33342e43b2955888"
                    ]
                },
                {
                    "command": [
                        "have /imsetP[u' Su' /injh def_u']: h (to1 u x) \\in h @: S.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite hfJ // -def_fx (astabs_act _ nSx) mem_imset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE def_u' ?actsDR ?(subsetP sSR).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_astab",
            "line_nb": 1537,
            "steps": [
                {
                    "command": [
                        "apply/setP=> fx; apply/morphimP/idP=> [[x D1x cSx ->] | cSx].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!inE -{1}defD2 mem_morphim //=; apply/subsetP=> _ /imsetP[u Su ->].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE -hfJ // (astab_act cSx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [|x D1x _ def_fx] := morphimP (_ : fx \\in f @* D1).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite defD2 (astab_dom cSx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists x => //; rewrite !inE D1x; apply/subsetP=> u Su.",
                        "VernacExtend",
                        "9c74624cac92f94e452c274a33342e43b2955888"
                    ]
                },
                {
                    "command": [
                        "rewrite inE -(inj_in_eq injh) ?actsDR ?(subsetP sSR) ?hfJ //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -def_fx (astab_act cSx) ?mem_imset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_gastabs",
            "line_nb": 1565,
            "steps": [
                {
                    "command": [
                        "have [[_ defD2] [injh _]] := (isomP iso_f, isomP iso_h).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> sSR1; rewrite (morphimEsub _ sSR1).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply: (morph_astabs (gact_stable to1) (injmP injh)) => // u x.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by move/(subsetP sSR1); apply: hfJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_gastab",
            "line_nb": 1571,
            "steps": [
                {
                    "command": [
                        "have [[_ defD2] [injh _]] := (isomP iso_f, isomP iso_h).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> sSR1; rewrite (morphimEsub _ sSR1).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply: (morph_astab (gact_stable to1) (injmP injh)) => // u x.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by move/(subsetP sSR1); apply: hfJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_gacent",
            "line_nb": 1577,
            "steps": [
                {
                    "command": [
                        "have [[_ defD2] [injh defR2]] := (isomP iso_f, isomP iso_h).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> sAD1; rewrite !gacentE //; last by rewrite -defD2 morphimS.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite morphimEsub ?subsetIl // -{1}defR2 morphimEdom.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: (morph_afix (gact_stable to1) (injmP injh)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_gact_irr",
            "line_nb": 1583,
            "steps": [
                {
                    "command": [
                        "move=> sAD1 sMR1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [[injf defD2] [injh defR2]] := (isomP iso_f, isomP iso_h).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have h_eq1 := morphim_injm_eq1 injh.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/mingroupP/mingroupP=> [] [/andP[ntM actAM] minM].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "split=> [|U]; first by rewrite -h_eq1 // ntM -(injmSK injf) ?morph_gastabs.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/andP=> ntU acts_fAU sUM; have sUR1 := subset_trans sUM sMR1.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "apply: (injm_morphim_inj injh) => //; apply: minM; last exact: morphimS.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite h_eq1 // ntU -morph_gastabs ?morphimS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=> [|U]; first by rewrite h_eq1 // ntM -morph_gastabs ?morphimS.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/andP=> ntU acts_fAU sUhM.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have sUhR1 := subset_trans sUhM (morphimS h sMR1).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sU'M: h @*^-1 U \\subset M by rewrite sub_morphpre_injm.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /= -(minM _ _ sU'M) ?morphpreK // -h_eq1 ?subsetIl // -(injmSK injf) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite morph_gastabs ?(subset_trans sU'M) // morphpreK ?ntU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjg_is_groupAction",
            "line_nb": 1606,
            "steps": [
                {
                    "command": [
                        "move=> a _; rewrite /= inE; apply/andP; split.",
                        "VernacExtend",
                        "9901f82e5ee1133d602812d708a9c1405d183a8b"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> x _; rewrite inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/morphicP=> x y _ _; rewrite !actpermE /= conjMg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcoset_is_action",
            "line_nb": 1612,
            "steps": [
                {
                    "command": [
                        "by apply: is_total_action => [A|A x y]; rewrite !rcosetE (mulg1, rcosetM).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjG_is_action",
            "line_nb": 1617,
            "steps": [
                {
                    "command": [
                        "apply: is_total_action => [G | G x y]; apply: val_inj; rewrite /= ?act1 //.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "exact: actM.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbitR",
            "line_nb": 1636,
            "steps": [
                {
                    "command": [
                        "by rewrite -lcosetE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab1R",
            "line_nb": 1639,
            "steps": [
                {
                    "command": [
                        "apply/trivgP/subsetP=> y cxy.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(mulKg x y) [x * y](astab1P cxy) mulVg set11.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabR",
            "line_nb": 1643,
            "steps": [
                {
                    "command": [
                        "apply/trivgP/subsetP=> x cGx.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(mul1g x) [1 * x](astabP cGx) group1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabsR",
            "line_nb": 1647,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE -setactVin ?inE //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -groupV -{1 3}(mulg1 G) rcoset_sym -sub1set -mulGS -!rcosetE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "atransR",
            "line_nb": 1651,
            "steps": [
                {
                    "command": [
                        "by rewrite /atrans -{1}(mul1g G) -orbitR mem_imset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "faithfulR",
            "line_nb": 1654,
            "steps": [
                {
                    "command": [
                        "by rewrite /faithful astabR subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cayley_isom",
            "line_nb": 1658,
            "steps": [
                {
                    "command": [
                        "exact: faithful_isom (faithfulR G).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cayley_isog",
            "line_nb": 1661,
            "steps": [
                {
                    "command": [
                        "exact: isom_isog (Cayley_isom G).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbitJ",
            "line_nb": 1664,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afixJ",
            "line_nb": 1667,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; apply/afixP/centP=> cAx y Ay /=.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite /commute conjgC cAx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite conjgE cAx ?mulKg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabJ",
            "line_nb": 1672,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; apply/astabP/centP=> cAx y Ay /=.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by apply: esym; rewrite conjgC cAx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite conjgE -cAx ?mulKg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab1J",
            "line_nb": 1677,
            "steps": [
                {
                    "command": [
                        "by rewrite astabJ cent_set1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabsJ",
            "line_nb": 1680,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite -2!groupV !inE -conjg_preim -sub_conjg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setactJ",
            "line_nb": 1683,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentJ",
            "line_nb": 1686,
            "steps": [
                {
                    "command": [
                        "by rewrite gacentE ?setTI ?subsetT ?afixJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbitRs",
            "line_nb": 1689,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_afixRs_norms",
            "line_nb": 1692,
            "steps": [
                {
                    "command": [
                        "rewrite inE /=; apply: eq_subset_r => a.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite inE rcosetE -(can2_eq (rcosetKV x) (rcosetK x)) -!rcosetM.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite eqEcard card_rcoset leqnn andbT mulgA (conjgCV x) mulgK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{2 3}(mulGid G) mulGS sub1set -mem_conjg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_afixRs_norm",
            "line_nb": 1698,
            "steps": [
                {
                    "command": [
                        "by rewrite sub_afixRs_norms -groupV inE sub_conjgV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afixRs_rcosets",
            "line_nb": 1701,
            "steps": [
                {
                    "command": [
                        "apply/setP=> Gx; apply/setIP/rcosetsP=> [[/rcosetsP[x Ax ->]]|[x]].",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite sub_afixRs_norm => Nx; exists x; rewrite // inE Ax.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/setIP=> Ax Nx ->; rewrite -{1}rcosetE mem_imset // sub_afixRs_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab1Rs",
            "line_nb": 1706,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply/astab1P/idP=> /= [<- | Gx]; rewrite rcosetE ?rcoset_refl ?rcoset_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actsRs_rcosets",
            "line_nb": 1710,
            "steps": [
                {
                    "command": [
                        "by rewrite -orbitRs acts_orbit ?subsetT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "transRs_rcosets",
            "line_nb": 1713,
            "steps": [
                {
                    "command": [
                        "by rewrite -orbitRs atrans_orbit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabRs_rcosets",
            "line_nb": 1716,
            "steps": [
                {
                    "command": [
                        "have transGH := transRs_rcosets H G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (astab_trans_gcore transGH (orbit_refl _ G _)) astab1Rs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbitJs",
            "line_nb": 1720,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab1Js",
            "line_nb": 1723,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; apply/astab1P/normP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_conjugates",
            "line_nb": 1726,
            "steps": [
                {
                    "command": [
                        "by rewrite card_orbit astab1Js.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "afixJG",
            "line_nb": 1729,
            "steps": [
                {
                    "command": [
                        "by apply/afixP/normsP=> nG x Ax; apply/eqP; move/eqP: (nG x Ax).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astab1JG",
            "line_nb": 1732,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; apply/astab1P/normP=> [/congr_group | /group_inj].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_qactJ",
            "line_nb": 1735,
            "steps": [
                {
                    "command": [
                        "by rewrite qact_domE ?subsetT ?astabsJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qactJ",
            "line_nb": 1738,
            "steps": [
                {
                    "command": [
                        "case: (cosetP Hy) => y Ny ->{Hy}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite qactEcond // dom_qactJ; case Nx: (x \\in 'N(H)); rewrite ?morphJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "actsQ",
            "line_nb": 1742,
            "steps": [
                {
                    "command": [
                        "by move=> nHA nBA; rewrite acts_quotient // subsetI dom_qactJ nHA astabsJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabsQ",
            "line_nb": 1745,
            "steps": [
                {
                    "command": [
                        "by move=> nsHG; rewrite astabs_quotient // dom_qactJ astabsJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabQ",
            "line_nb": 1748,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite inE /= dom_qactJ morphpreE in_setI /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply: andb_id2l => Nx; rewrite !inE -sub1set centsC cent_set1.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply: eq_subset_r => {Abar} Hy; rewrite inE qactJ Nx (sameP eqP conjg_fixP).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (sameP cent1P eqP) (sameP commgP eqP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_astabQ",
            "line_nb": 1754,
            "steps": [
                {
                    "command": [
                        "rewrite astabQ -morphpreIdom subsetI; apply: andb_id2l => nHA.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite -sub_quotient_pre.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_astabQR",
            "line_nb": 1758,
            "steps": [
                {
                    "command": [
                        "move=> nHA nHB; rewrite sub_astabQ nHA /= (sameP commG1P eqP).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqEsubset sub1G andbT -quotientR // quotient_sub1 // comm_subG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "astabQR",
            "line_nb": 1762,
            "steps": [
                {
                    "command": [
                        "move=> nHA; apply/setP=> x; rewrite astabQ -morphpreIdom 2!inE -astabQ.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case nHx: (x \\in _); rewrite //= -sub1set sub_astabQR ?sub1set.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quotient_astabQ",
            "line_nb": 1766,
            "steps": [
                {
                    "command": [
                        "by rewrite astabQ cosetpreK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_astabQ",
            "line_nb": 1769,
            "steps": [
                {
                    "command": [
                        "move=> nHx; apply/setP=> y; rewrite !astabQ mem_conjg !in_setI -mem_conjg.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite -normJ (normP nHx) quotientJ //; apply/andb_id2l => nHy.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE centJ morphJ ?groupV ?morphV // -mem_conjg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "index_cent1",
            "line_nb": 1776,
            "steps": [
                {
                    "command": [
                        "by rewrite -astab1J -card_orbit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classes_partition",
            "line_nb": 1779,
            "steps": [
                {
                    "command": [
                        "by apply: orbit_partition; apply/actsP=> x Gx y; apply: groupJr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_card_class",
            "line_nb": 1782,
            "steps": [
                {
                    "command": [
                        "by apply: acts_sum_card_orbit; apply/actsP=> x Gx y; apply: groupJr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "class_formula",
            "line_nb": 1785,
            "steps": [
                {
                    "command": [
                        "rewrite -sum_card_class; apply: eq_bigr => _ /imsetP[x Gx ->].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "have: x \\in x ^: G by rewrite -{1}(conjg1 x) mem_imset.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case/mem_repr/imsetP=> y Gy ->; rewrite index_cent1 classGidl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abelian_classP",
            "line_nb": 1790,
            "steps": [
                {
                    "command": [
                        "rewrite /abelian -astabJ astabC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: (iffP subsetP) => cGG x Gx; apply/orbit1P; apply: cGG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_classes_abelian",
            "line_nb": 1794,
            "steps": [
                {
                    "command": [
                        "have cGgt0 C: C \\in classes G -> 1 <= #|C| ?= iff (#|C| == 1)%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case/imsetP=> x _ ->; rewrite eq_sym -index_cent1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -sum_card_class -sum1_card (leqif_sum cGgt0).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/abelian_classP/forall_inP=> [cGG _ /imsetP[x Gx ->]| cGG x Gx].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite cGG ?cards1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/esym/eqP; rewrite eqEcard sub1set cards1 class_refl leq_eqVlt cGG //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "exact: mem_imset.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gacentQ",
            "line_nb": 1805,
            "steps": [
                {
                    "command": [
                        "apply/setP=> Hx; case: (cosetP Hx) => x Nx ->{Hx}.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub_cent1 -astab1J astabC sub1set -(quotientInorm H A).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have defD: qact_dom 'J H = 'N(H) by rewrite qact_domE ?subsetT ?astabsJ.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !(inE, mem_quotient) //= defD setIC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP/subsetP=> [cAx _ /morphimP[a Na Aa ->] | cAx a Aa].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by move/cAx: Aa; rewrite !inE qactE ?defD ?morphJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [_ Na] := setIP Aa; move/implyP: (cAx (coset H a)); rewrite mem_morphim //.",
                        "VernacExtend",
                        "35d5e9f960e64b85a458b0ee5e9027dbf16506bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE qactE ?defD ?morphJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "autactK",
            "line_nb": 1819,
            "steps": [
                {
                    "command": [
                        "by apply/permP=> x; rewrite permE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "autact_is_groupAction",
            "line_nb": 1822,
            "steps": [
                {
                    "command": [
                        "by move=> a Aa /=; rewrite autactK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}