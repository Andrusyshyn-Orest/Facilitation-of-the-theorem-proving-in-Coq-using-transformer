{
    "filename": "mathcomp/ssreflect/div.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat seq.",
            "VernacRequire",
            "8545ccf335ab63fd28b87a2c32b12f2259513a2c"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Definition edivn_rec d := fix loop m q := if m - d is m'.+1 then loop m' q.+1 else (q, m).",
            "VernacDefinition",
            "3d58bf15ce8bcf89533dc28fb23392a53e464140"
        ],
        [
            "Definition edivn m d := if d > 0 then edivn_rec d.-1 m 0 else (0, m).",
            "VernacDefinition",
            "655b1e12ccebc10cc5c0dfeaf7b19d8c31670dfd"
        ],
        [
            "Variant edivn_spec m d : nat * nat -> Type := EdivnSpec q r of m = q * d + r & (d > 0) ==> (r < d) : edivn_spec m d (q, r).",
            "VernacInductive",
            "9eee699d303c3559b3e9a22be264435d2334ea2f"
        ],
        [
            "Lemma edivnP m d : edivn_spec m d (edivn m d).",
            "VernacStartTheoremProof",
            "a797f9fe08204a3073d866df7a02b446f345aa39"
        ],
        [
            "rewrite -{1}[m]/(0 * d + m) /edivn; case: d => //= d.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "elim: m {-2}m 0 (leqnn m) => [|n IHn] [|m] q //= le_mn.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have le_m'n: m - d <= n by rewrite (leq_trans (leq_subr d m)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite subn_if_gt; case: ltnP => [// | le_dm].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite -{1}(subnKC le_dm) -addSn addnA -mulSnr; apply: IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma edivn_eq d q r : r < d -> edivn (q * d + r) d = (q, r).",
            "VernacStartTheoremProof",
            "2b74b9de460472ca0a674ddc610c5a5fc79390ce"
        ],
        [
            "move=> lt_rd; have d_gt0: 0 < d by apply: leq_trans lt_rd.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case: edivnP lt_rd => q' r'; rewrite d_gt0 /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "wlog: q q' r r' / q <= q' by case/orP: (leq_total q q'); last symmetry; eauto.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "rewrite leq_eqVlt; case/predU1P => [-> /addnI-> |] //=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite -(leq_pmul2r d_gt0) => /leq_add lt_qr eq_qr _ /lt_qr {lt_qr}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite addnS ltnNge mulSn -addnA eq_qr addnCA addnA leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition divn m d := (edivn m d).1.",
            "VernacDefinition",
            "d583cc0430b53ee81cf667465db2bf78352571b4"
        ],
        [
            "Notation \"m %/ d\" := (divn m d) : nat_scope.",
            "VernacNotation",
            "825c2fe605ebc9b7ae3bf06bdf0846903e4bfc79"
        ],
        [
            "Definition modn_rec d := fix loop m := if m - d is m'.+1 then loop m' else m.",
            "VernacDefinition",
            "8b29b830f1949026c3102f2a5f6a9ca9682521ac"
        ],
        [
            "Definition modn m d := if d > 0 then modn_rec d.-1 m else m.",
            "VernacDefinition",
            "42a98f8ae8d1f6b52bf7b88277a057b322ce676b"
        ],
        [
            "Notation \"m %% d\" := (modn m d) : nat_scope.",
            "VernacNotation",
            "acbee0e64068ef404249cff3c92d518d9acbdb08"
        ],
        [
            "Notation \"m = n %[mod d ]\" := (m %% d = n %% d) : nat_scope.",
            "VernacNotation",
            "d84595cfbb5ead8ffda5ed4597a61bf8c5d893c6"
        ],
        [
            "Notation \"m == n %[mod d ]\" := (m %% d == n %% d) : nat_scope.",
            "VernacNotation",
            "dcdf7c486cd9f15dc37ad8b3b2020f20669d1c41"
        ],
        [
            "Notation \"m <> n %[mod d ]\" := (m %% d <> n %% d) : nat_scope.",
            "VernacNotation",
            "f3e9be6cadf5776d1873423d17b99d09058d9fd7"
        ],
        [
            "Notation \"m != n %[mod d ]\" := (m %% d != n %% d) : nat_scope.",
            "VernacNotation",
            "28b39d4695170eb0e8cd6cac33884df94be8b1a8"
        ],
        [
            "Lemma modn_def m d : m %% d = (edivn m d).2.",
            "VernacStartTheoremProof",
            "404638a20d9c4439c1abfdeb3317a140500f373d"
        ],
        [
            "case: d => //= d; rewrite /modn /edivn /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "elim: m {-2}m 0 (leqnn m) => [|n IHn] [|m] q //=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite ltnS !subn_if_gt; case: (d <= m) => // le_mn.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply: IHn; apply: leq_trans le_mn; apply: leq_subr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma edivn_def m d : edivn m d = (m %/ d, m %% d).",
            "VernacStartTheoremProof",
            "6d8edbcdea6e8ff4443c3e72fda3f160af9df590"
        ],
        [
            "by rewrite /divn modn_def; case: (edivn m d).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divn_eq m d : m = m %/ d * d + m %% d.",
            "VernacStartTheoremProof",
            "c0c37e0c172cbbef3dcdcfa40e4f56ed1f6582e7"
        ],
        [
            "by rewrite /divn modn_def; case: edivnP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div0n d : 0 %/ d = 0.",
            "VernacStartTheoremProof",
            "bd8f86edc23c8c4db3de72da57bda6bbd5093f10"
        ],
        [
            "by case: d.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divn0 m : m %/ 0 = 0.",
            "VernacStartTheoremProof",
            "1b5c25a6f7c995751a6b5c8e5a4697989ac82251"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod0n d : 0 %% d = 0.",
            "VernacStartTheoremProof",
            "2575a9bf1bf775e3dadcb5102013a95f86d39430"
        ],
        [
            "by case: d.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modn0 m : m %% 0 = m.",
            "VernacStartTheoremProof",
            "ad7a5f5e943879843e996b631349b37486f7494f"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divn_small m d : m < d -> m %/ d = 0.",
            "VernacStartTheoremProof",
            "d0a5a91d4a88de167dd0fb47b4b72a47df673bbb"
        ],
        [
            "by move=> lt_md; rewrite /divn (edivn_eq 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divnMDl q m d : 0 < d -> (q * d + m) %/ d = q + m %/ d.",
            "VernacStartTheoremProof",
            "381956e8593889fd08ed70b4cc640167214bdd62"
        ],
        [
            "move=> d_gt0; rewrite {1}(divn_eq m d) addnA -mulnDl.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite /divn edivn_eq // modn_def; case: edivnP; rewrite d_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulnK m d : 0 < d -> m * d %/ d = m.",
            "VernacStartTheoremProof",
            "4e979a5facc3f468a647cbdc2c263a4155a93e41"
        ],
        [
            "by move=> d_gt0; rewrite -[m * d]addn0 divnMDl // div0n addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulKn m d : 0 < d -> d * m %/ d = m.",
            "VernacStartTheoremProof",
            "e8016b8f1622fe1031454901cac4fea1479ba4b2"
        ],
        [
            "by move=> d_gt0; rewrite mulnC mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expnB p m n : p > 0 -> m >= n -> p ^ (m - n) = p ^ m %/ p ^ n.",
            "VernacStartTheoremProof",
            "f31611b219cb3b31a8d93317aae7e6bff5bd27c1"
        ],
        [
            "by move=> p_gt0 /subnK{2}<-; rewrite expnD mulnK // expn_gt0 p_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modn1 m : m %% 1 = 0.",
            "VernacStartTheoremProof",
            "c50f45bab2b59f124aae83af65e86b0b19219a25"
        ],
        [
            "by rewrite modn_def; case: edivnP => ? [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divn1 m : m %/ 1 = m.",
            "VernacStartTheoremProof",
            "7345d755531e345afa3a27145395e2f38366eafa"
        ],
        [
            "by rewrite {2}(@divn_eq m 1) // modn1 addn0 muln1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divnn d : d %/ d = (0 < d).",
            "VernacStartTheoremProof",
            "8e35842dc522e5dc32d540e3b9d9982bd9786784"
        ],
        [
            "by case: d => // d; rewrite -{1}[d.+1]muln1 mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divnMl p m d : p > 0 -> p * m %/ (p * d) = m %/ d.",
            "VernacStartTheoremProof",
            "1d1ddeca45800e9c65817bacdc182d813a25d6c5"
        ],
        [
            "move=> p_gt0; case: (posnP d) => [-> | d_gt0]; first by rewrite muln0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite {2}/divn; case: edivnP; rewrite d_gt0 /= => q r ->{m} lt_rd.",
            "VernacExtend",
            "2253759ff5c580854290fce82296a80357452125"
        ],
        [
            "rewrite mulnDr mulnCA divnMDl; last by rewrite muln_gt0 p_gt0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite addnC divn_small // ltn_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments divnMl [p m d].",
            "VernacArguments",
            "ba011e1e80bd7c1b82154a34a346809056d34990"
        ],
        [
            "Lemma divnMr p m d : p > 0 -> m * p %/ (d * p) = m %/ d.",
            "VernacStartTheoremProof",
            "0211b1e3409468ff5221ddfb0426d15201fb8320"
        ],
        [
            "by move=> p_gt0; rewrite -!(mulnC p) divnMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments divnMr [p m d].",
            "VernacArguments",
            "8ee79350a466fea74d23321886038c035e4b5cd5"
        ],
        [
            "Lemma ltn_mod m d : (m %% d < d) = (0 < d).",
            "VernacStartTheoremProof",
            "4e8d30dbc17a137cb743ad3d064b20faee716848"
        ],
        [
            "by case: d => // d; rewrite modn_def; case: edivnP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_pmod m d : 0 < d -> m %% d < d.",
            "VernacStartTheoremProof",
            "0c221e180517c91f002796710fa9d4e94dedf0f8"
        ],
        [
            "by rewrite ltn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_trunc_div m d : m %/ d * d <= m.",
            "VernacStartTheoremProof",
            "b67ff7a2766d1fea8356b29fbd8e9cd2ab51352f"
        ],
        [
            "by rewrite {2}(divn_eq m d) leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_mod m d : m %% d <= m.",
            "VernacStartTheoremProof",
            "2d6155a37c840c295afd02962f9a9c430ac11cf6"
        ],
        [
            "by rewrite {2}(divn_eq m d) leq_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_div m d : m %/ d <= m.",
            "VernacStartTheoremProof",
            "3d38b5095d96dd3d5bac14766c405225c185398a"
        ],
        [
            "by case: d => // d; apply: leq_trans (leq_pmulr _ _) (leq_trunc_div _ _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_ceil m d : 0 < d -> m < (m %/ d).+1 * d.",
            "VernacStartTheoremProof",
            "10a656f723af451b2a767ba00a0817e360ef161c"
        ],
        [
            "by move=> d_gt0; rewrite {1}(divn_eq m d) -addnS mulSnr leq_add2l ltn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_divLR m n d : d > 0 -> (m %/ d < n) = (m < n * d).",
            "VernacStartTheoremProof",
            "aca27d142105648d729080b290a2a63186dab61c"
        ],
        [
            "move=> d_gt0; apply/idP/idP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -(leq_pmul2r d_gt0); apply: leq_trans (ltn_ceil _ _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !ltnNge -(@leq_pmul2r d n) //; apply: contra => le_nd_floor.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "exact: leq_trans le_nd_floor (leq_trunc_div _ _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_divRL m n d : d > 0 -> (m <= n %/ d) = (m * d <= n).",
            "VernacStartTheoremProof",
            "58e05e9c66f6fbb835efea6e9fc06e12a6ccdbe1"
        ],
        [
            "by move=> d_gt0; rewrite leqNgt ltn_divLR // -leqNgt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_Pdiv m d : 1 < d -> 0 < m -> m %/ d < m.",
            "VernacStartTheoremProof",
            "dc7672e713cbb88d5b903b45a55c070c2b32fb5c"
        ],
        [
            "by move=> d_gt1 m_gt0; rewrite ltn_divLR ?ltn_Pmulr // ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divn_gt0 d m : 0 < d -> (0 < m %/ d) = (d <= m).",
            "VernacStartTheoremProof",
            "39ee95ea8d2a2c980d237a3a111743a04bf52a4f"
        ],
        [
            "by move=> d_gt0; rewrite leq_divRL ?mul1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_div2r d m n : m <= n -> m %/ d <= n %/ d.",
            "VernacStartTheoremProof",
            "9ac8ba0019cea3be851109c17f306a7ece43a886"
        ],
        [
            "have [-> //| d_gt0 le_mn] := posnP d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite leq_divRL // (leq_trans _ le_mn) -?leq_divRL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_div2l m d e : 0 < d -> d <= e -> m %/ e <= m %/ d.",
            "VernacStartTheoremProof",
            "cad794fbf0e8be3e60c95293f63d14a6cda7bb78"
        ],
        [
            "move/leq_divRL=> -> le_de.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: leq_trans (leq_trunc_div m e); apply: leq_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_divDl p m n : (m + n) %/ p <= m %/ p + n %/ p + 1.",
            "VernacStartTheoremProof",
            "37824fed360686136c7e646215ffb69658a16bb3"
        ],
        [
            "have [-> //| p_gt0] := posnP p; rewrite -ltnS -addnS ltn_divLR // ltnW //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite {1}(divn_eq n p) {1}(divn_eq m p) addnACA !mulnDl -3!addnS leq_add2l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mul2n -addnn -addSn leq_add // ltn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma geq_divBl k m p : k %/ p - m %/ p <= (k - m) %/ p + 1.",
            "VernacStartTheoremProof",
            "3c0ec54ab4ba917feae7cbc9bc84be277bdffe94"
        ],
        [
            "rewrite leq_subLR addnA; apply: leq_trans (leq_divDl _ _ _).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -maxnE leq_div2r ?leq_maxr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divnMA m n p : m %/ (n * p) = m %/ n %/ p.",
            "VernacStartTheoremProof",
            "3d601909ab5f46d5aaa39732b83951696429f918"
        ],
        [
            "case: n p => [|n] [|p]; rewrite ?muln0 ?div0n //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite {2}(divn_eq m (n.+1 * p.+1)) mulnA mulnAC !divnMDl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [_ %/ p.+1]divn_small ?addn0 // ltn_divLR // mulnC ltn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divnAC m n p : m %/ n %/ p = m %/ p %/ n.",
            "VernacStartTheoremProof",
            "f352b87d40a9efe92446a38de2b73dabece5f4b7"
        ],
        [
            "by rewrite -!divnMA mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modn_small m d : m < d -> m %% d = m.",
            "VernacStartTheoremProof",
            "51b7de2492a7fe9c36b91f6f62b88de6388e3fca"
        ],
        [
            "by move=> lt_md; rewrite {2}(divn_eq m d) divn_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modn_mod m d : m %% d = m %[mod d].",
            "VernacStartTheoremProof",
            "8011b66128ba8ec5b219256a99e072e0b3458da1"
        ],
        [
            "by case: d => // d; apply: modn_small; rewrite ltn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnMDl p m d : p * d + m = m %[mod d].",
            "VernacStartTheoremProof",
            "2241298c0116f1ce87da5604ac5922fc3d175a1c"
        ],
        [
            "case: (posnP d) => [-> | d_gt0]; first by rewrite muln0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite {1}(divn_eq m d) addnA -mulnDl modn_def edivn_eq // ltn_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma muln_modr {p m d} : 0 < p -> p * (m %% d) = (p * m) %% (p * d).",
            "VernacStartTheoremProof",
            "92f5c25d8a6bf435798d7b5eafe7537ce6bf21f8"
        ],
        [
            "move=> p_gt0; apply: (@addnI (p * (m %/ d * d))).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -mulnDr -divn_eq mulnCA -(divnMl p_gt0) -divn_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma muln_modl {p m d} : 0 < p -> (m %% d) * p = (m * p) %% (d * p).",
            "VernacStartTheoremProof",
            "ef23fb70f8d5f7552dd856d1d49f596c6b167692"
        ],
        [
            "by rewrite -!(mulnC p); apply: muln_modr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnDl m d : d + m = m %[mod d].",
            "VernacStartTheoremProof",
            "deb2573ed3e1a4484e2ce9c99d1bb790829c31e0"
        ],
        [
            "by rewrite -{1}[d]mul1n modnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnDr m d : m + d = m %[mod d].",
            "VernacStartTheoremProof",
            "3682ce0cca3308d4fa74f90e2d42422f03546dc5"
        ],
        [
            "by rewrite addnC modnDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnn d : d %% d = 0.",
            "VernacStartTheoremProof",
            "5bc1e9117e63808549015e671bc11f4f44e232b9"
        ],
        [
            "by rewrite -{1}[d]addn0 modnDl mod0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnMl p d : p * d %% d = 0.",
            "VernacStartTheoremProof",
            "d6ca0cd20c5c2878c6620c08bbc7db1d3d8d4800"
        ],
        [
            "by rewrite -[p * d]addn0 modnMDl mod0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnMr p d : d * p %% d = 0.",
            "VernacStartTheoremProof",
            "a55604203d3c07da3424187310f2c3f386cd2d5e"
        ],
        [
            "by rewrite mulnC modnMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnDml m n d : m %% d + n = m + n %[mod d].",
            "VernacStartTheoremProof",
            "73d9f1ad25517e13f3cad55cac5133e0247dd70b"
        ],
        [
            "by rewrite {2}(divn_eq m d) -addnA modnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnDmr m n d : m + n %% d = m + n %[mod d].",
            "VernacStartTheoremProof",
            "f4fc11416728fd7487104ee38d550a3bfa4ca0e1"
        ],
        [
            "by rewrite !(addnC m) modnDml.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnDm m n d : m %% d + n %% d = m + n %[mod d].",
            "VernacStartTheoremProof",
            "3b32ac018810ba5e9f6ab358fc755dac537a68b8"
        ],
        [
            "by rewrite modnDml modnDmr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqn_modDl p m n d : (p + m == p + n %[mod d]) = (m == n %[mod d]).",
            "VernacStartTheoremProof",
            "de27f16d2b53df558f53fc58d3d98153abdfefb9"
        ],
        [
            "case: d => [|d]; first by rewrite !modn0 eqn_add2l.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP/eqP=> eq_mn; last by rewrite -modnDmr eq_mn modnDmr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -(modnMDl p m) -(modnMDl p n) !mulnSr -!addnA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -modnDmr eq_mn modnDmr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqn_modDr p m n d : (m + p == n + p %[mod d]) = (m == n %[mod d]).",
            "VernacStartTheoremProof",
            "cd34b83bd6da934477c0d0386853f36057d63949"
        ],
        [
            "by rewrite -!(addnC p) eqn_modDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnMml m n d : m %% d * n = m * n %[mod d].",
            "VernacStartTheoremProof",
            "15c1f673df0d3b169e4b28147218552e3c9e3529"
        ],
        [
            "by rewrite {2}(divn_eq m d) mulnDl mulnAC modnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnMmr m n d : m * (n %% d) = m * n %[mod d].",
            "VernacStartTheoremProof",
            "e75256dce756f7abae21fd1ef229b38576c19944"
        ],
        [
            "by rewrite !(mulnC m) modnMml.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnMm m n d : m %% d * (n %% d) = m * n %[mod d].",
            "VernacStartTheoremProof",
            "57d05496d334124f922b6b95334f671ae555f01e"
        ],
        [
            "by rewrite modnMml modnMmr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modn2 m : m %% 2 = odd m.",
            "VernacStartTheoremProof",
            "08d1e5d1c279d71a04db6e0a715076d13bee7e2d"
        ],
        [
            "by elim: m => //= m IHm; rewrite -addn1 -modnDml IHm; case odd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divn2 m : m %/ 2 = m./2.",
            "VernacStartTheoremProof",
            "327b246c682b33ed252e3b410b716bb03850a4f1"
        ],
        [
            "by rewrite {2}(divn_eq m 2) modn2 muln2 addnC half_bit_double.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_mod m d : odd d = false -> odd (m %% d) = odd m.",
            "VernacStartTheoremProof",
            "d95ecdc76f71351447e31ce039436706e53c0d50"
        ],
        [
            "by move=> d_even; rewrite {2}(divn_eq m d) odd_add odd_mul d_even andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modnXm m n a : (a %% n) ^ m = a ^ m %[mod n].",
            "VernacStartTheoremProof",
            "63edc5145a799c5cff4054e7026444b017e62f6c"
        ],
        [
            "by elim: m => // m IHm; rewrite !expnS -modnMmr IHm modnMml modnMmr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition dvdn d m := m %% d == 0.",
            "VernacDefinition",
            "314888338386f6a82303d3221405e16fbb1415bb"
        ],
        [
            "Notation \"m %| d\" := (dvdn m d) : nat_scope.",
            "VernacNotation",
            "3f12960876c3703bb000bc11e6e2e318e4003bd7"
        ],
        [
            "Lemma dvdnP d m : reflect (exists k, m = k * d) (d %| m).",
            "VernacStartTheoremProof",
            "8b67844bea611cfa8035c598ce0692371d0ac804"
        ],
        [
            "apply: (iffP eqP) => [md0 | [k ->]]; last by rewrite modnMl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists (m %/ d); rewrite {1}(divn_eq m d) md0 addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments dvdnP {d m}.",
            "VernacArguments",
            "73129b87a3c66508daf27fb2a81a0207136aac7c"
        ],
        [
            "Lemma dvdn0 d : d %| 0.",
            "VernacStartTheoremProof",
            "e8f7b3c2bffd0f6895199862e838899ffb49d373"
        ],
        [
            "by case: d.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvd0n n : (0 %| n) = (n == 0).",
            "VernacStartTheoremProof",
            "81850bcd1aea501ef81c492d9b8f9951a39f8fd8"
        ],
        [
            "by case: n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn1 d : (d %| 1) = (d == 1).",
            "VernacStartTheoremProof",
            "d6a8c45c2ec390c3ab9fc64faab5303686bc6aa7"
        ],
        [
            "by case: d => [|[|d]] //; rewrite /dvdn modn_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvd1n m : 1 %| m.",
            "VernacStartTheoremProof",
            "5794b78dfd01164309650f704faec7b58fda2644"
        ],
        [
            "by rewrite /dvdn modn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_gt0 d m : m > 0 -> d %| m -> d > 0.",
            "VernacStartTheoremProof",
            "b456d3f6cab2d33a10a3c9bd04337a75e9473903"
        ],
        [
            "by case: d => // /prednK <-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdnn m : m %| m.",
            "VernacStartTheoremProof",
            "45ed237caa0f7eb05d5765c49f70e38121f347f3"
        ],
        [
            "by rewrite /dvdn modnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_mull d m n : d %| n -> d %| m * n.",
            "VernacStartTheoremProof",
            "83f2a6fd8503d4350de3fd00f77da72938e76721"
        ],
        [
            "by case/dvdnP=> n' ->; rewrite /dvdn mulnA modnMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_mulr d m n : d %| m -> d %| m * n.",
            "VernacStartTheoremProof",
            "af87a3d003b5552ddf57a38375dec05add11b006"
        ],
        [
            "by move=> d_m; rewrite mulnC dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dvdn0 dvd1n dvdnn dvdn_mull dvdn_mulr : core.",
            "VernacHints",
            "f241bd8baa84d36f0d02500fc65067a1b9e63def"
        ],
        [
            "Lemma dvdn_mul d1 d2 m1 m2 : d1 %| m1 -> d2 %| m2 -> d1 * d2 %| m1 * m2.",
            "VernacStartTheoremProof",
            "d4b8f8d099e0c70d544457cf9aa403fc6f5ac231"
        ],
        [
            "by move=> /dvdnP[q1 ->] /dvdnP[q2 ->]; rewrite mulnCA -mulnA 2?dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_trans n d m : d %| n -> n %| m -> d %| m.",
            "VernacStartTheoremProof",
            "35167b67d35df056f00fb59071420a6a6d9a1dcc"
        ],
        [
            "by move=> d_dv_n /dvdnP[n1 ->]; apply: dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_eq d m : (d %| m) = (m %/ d * d == m).",
            "VernacStartTheoremProof",
            "088c19499b97a60f55acc9e1ef1d2fbec33f43f4"
        ],
        [
            "apply/eqP/eqP=> [modm0 | <-]; last exact: modnMl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite {2}(divn_eq m d) modm0 addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn2 n : (2 %| n) = ~~ odd n.",
            "VernacStartTheoremProof",
            "2fd651b6108c9d89fc459740f19d4278ad1f7942"
        ],
        [
            "by rewrite /dvdn modn2; case (odd n).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_odd m n : m %| n -> odd n -> odd m.",
            "VernacStartTheoremProof",
            "2535f263f46fa1fa5645c749143ef4ab1f27752a"
        ],
        [
            "by move=> m_dv_n; apply: contraTT; rewrite -!dvdn2 => /dvdn_trans->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divnK d m : d %| m -> m %/ d * d = m.",
            "VernacStartTheoremProof",
            "9d3c719480804e342b21a189c432472c0693d078"
        ],
        [
            "by rewrite dvdn_eq; move/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_divLR d m n : d %| m -> (m %/ d <= n) = (m <= n * d).",
            "VernacStartTheoremProof",
            "b28ad877d90ae3533f8e480d9021ac4f3e332918"
        ],
        [
            "by case: d m => [|d] [|m] ///divnK=> {2}<-; rewrite leq_pmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_divRL d m n : d %| m -> (n < m %/ d) = (n * d < m).",
            "VernacStartTheoremProof",
            "ecc88af789c7894145d042f1f7c572e0ff1a01e8"
        ],
        [
            "by move=> dv_d_m; rewrite !ltnNge leq_divLR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqn_div d m n : d > 0 -> d %| m -> (n == m %/ d) = (n * d == m).",
            "VernacStartTheoremProof",
            "9ec576a00593b015c808d380334d664b95f9af6d"
        ],
        [
            "by move=> d_gt0 dv_d_m; rewrite -(eqn_pmul2r d_gt0) divnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqn_mul d m n : d > 0 -> d %| m -> (m == n * d) = (m %/ d == n).",
            "VernacStartTheoremProof",
            "114822000bab1b1c48b5dfe5222994acdb88afa1"
        ],
        [
            "by move=> d_gt0 dv_d_m; rewrite eq_sym -eqn_div // eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divn_mulAC d m n : d %| m -> m %/ d * n = m * n %/ d.",
            "VernacStartTheoremProof",
            "510f34f2a3b28fae3c8ef868a502edba79c23d57"
        ],
        [
            "case: d m => [[] //| d m] dv_d_m; apply/eqP.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by rewrite eqn_div ?dvdn_mulr // mulnAC divnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma muln_divA d m n : d %| n -> m * (n %/ d) = m * n %/ d.",
            "VernacStartTheoremProof",
            "27d58db7bda451aeefd2e7b43927efb404d6997f"
        ],
        [
            "by move=> dv_d_m; rewrite !(mulnC m) divn_mulAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma muln_divCA d m n : d %| m -> d %| n -> m * (n %/ d) = n * (m %/ d).",
            "VernacStartTheoremProof",
            "d8b55bc1814b7394847d8e0b13fe55cba8ea7b60"
        ],
        [
            "by move=> dv_d_m dv_d_n; rewrite mulnC divn_mulAC ?muln_divA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divnA m n p : p %| n -> m %/ (n %/ p) = m * p %/ n.",
            "VernacStartTheoremProof",
            "1111981f08a87de20614998b099a0c663d939e13"
        ],
        [
            "by case: p => [|p] dv_n; rewrite -{2}(divnK dv_n) // divnMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modn_dvdm m n d : d %| m -> n %% m = n %[mod d].",
            "VernacStartTheoremProof",
            "be6dab9092256380ebc042e1886a3e48b6ac7bca"
        ],
        [
            "by case/dvdnP=> q def_m; rewrite {2}(divn_eq n m) {3}def_m mulnA modnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_leq d m : 0 < m -> d %| m -> d <= m.",
            "VernacStartTheoremProof",
            "a874296d4cd03b13054426725ac10559869abb9a"
        ],
        [
            "by move=> m_gt0 /dvdnP[[|k] Dm]; rewrite Dm // leq_addr in m_gt0 *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtnNdvd n d : 0 < n -> n < d -> (d %| n) = false.",
            "VernacStartTheoremProof",
            "9cf1c226c1d60bdde1d2c3443b5e9f231b6a0d38"
        ],
        [
            "by move=> n_gt0 lt_nd; rewrite /dvdn eqn0Ngt modn_small ?n_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqn_dvd m n : (m == n) = (m %| n) && (n %| m).",
            "VernacStartTheoremProof",
            "24a8a39028c9fbbcacc7f47585c4584c25a8c7e5"
        ],
        [
            "case: m n => [|m] [|n] //; apply/idP/andP; first by move/eqP->; auto.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite eqn_leq => [[Hmn Hnm]]; apply/andP; have:= dvdn_leq; auto.",
            "VernacExtend",
            "007f80f502092bf510b8f48bb4bd83b0e4ef7288"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_pmul2l p d m : 0 < p -> (p * d %| p * m) = (d %| m).",
            "VernacStartTheoremProof",
            "d58a937f07d594a53a29fc99218259a5a165d029"
        ],
        [
            "by case: p => // p _; rewrite /dvdn -muln_modr // muln_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments dvdn_pmul2l [p d m].",
            "VernacArguments",
            "ce51b42141879afb027014dacb5ecfd1f4515555"
        ],
        [
            "Lemma dvdn_pmul2r p d m : 0 < p -> (d * p %| m * p) = (d %| m).",
            "VernacStartTheoremProof",
            "d05c39243b5797b94922c0d3f85552bea6ca53f8"
        ],
        [
            "by move=> p_gt0; rewrite -!(mulnC p) dvdn_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments dvdn_pmul2r [p d m].",
            "VernacArguments",
            "764b35e5b96d9e457809110507e813accde18c00"
        ],
        [
            "Lemma dvdn_divLR p d m : 0 < p -> p %| d -> (d %/ p %| m) = (d %| m * p).",
            "VernacStartTheoremProof",
            "44928298e11dae5bfac19a8549c57ddfb50d4162"
        ],
        [
            "by move=> /(@dvdn_pmul2r p _ m) <- /divnK->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_divRL p d m : p %| m -> (d %| m %/ p) = (d * p %| m).",
            "VernacStartTheoremProof",
            "21e3af634fa233825b15adfd185be97c7b6de094"
        ],
        [
            "have [-> | /(@dvdn_pmul2r p d) <- /divnK-> //] := posnP p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite divn0 muln0 dvdn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_div d m : d %| m -> m %/ d %| m.",
            "VernacStartTheoremProof",
            "e7fa250b5cd36d9cce1517e67317d3a974ba815d"
        ],
        [
            "by move/divnK=> {2}<-; apply: dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_exp2l p m n : m <= n -> p ^ m %| p ^ n.",
            "VernacStartTheoremProof",
            "319facd51f18123deb174994577997b222dafa9d"
        ],
        [
            "by move/subnK <-; rewrite expnD dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_Pexp2l p m n : p > 1 -> (p ^ m %| p ^ n) = (m <= n).",
            "VernacStartTheoremProof",
            "d1ea93ddc0e47cb5703b82702a98170d1a3d9b97"
        ],
        [
            "move=> p_gt1; case: leqP => [|gt_n_m]; first exact: dvdn_exp2l.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gtnNdvd ?ltn_exp2l ?expn_gt0 // ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_exp2r m n k : m %| n -> m ^ k %| n ^ k.",
            "VernacStartTheoremProof",
            "d5ed42ea699606620624a7d7fb78b8d01dff3bd8"
        ],
        [
            "by case/dvdnP=> q ->; rewrite expnMn dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_addr m d n : d %| m -> (d %| m + n) = (d %| n).",
            "VernacStartTheoremProof",
            "0e59fb5167eff8acbc9f5044c4d07bc6804e4fa1"
        ],
        [
            "by case/dvdnP=> q ->; rewrite /dvdn modnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_addl n d m : d %| n -> (d %| m + n) = (d %| m).",
            "VernacStartTheoremProof",
            "b1ca53e96a551b0cbd738d513a1539f2766e2509"
        ],
        [
            "by rewrite addnC; apply: dvdn_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_add d m n : d %| m -> d %| n -> d %| m + n.",
            "VernacStartTheoremProof",
            "0e1e75e457024a292d481e9835ee636c57ee0636"
        ],
        [
            "by move/dvdn_addr->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_add_eq d m n : d %| m + n -> (d %| m) = (d %| n).",
            "VernacStartTheoremProof",
            "961e0a715a994f9b2ff8f6ed6c1f69c06ed8411d"
        ],
        [
            "by move=> dv_d_mn; apply/idP/idP => [/dvdn_addr | /dvdn_addl] <-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_subr d m n : n <= m -> d %| m -> (d %| m - n) = (d %| n).",
            "VernacStartTheoremProof",
            "a3a667e601fa2e773a47b6879f9e6a39ae5adf13"
        ],
        [
            "by move=> le_n_m dv_d_m; apply: dvdn_add_eq; rewrite subnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_subl d m n : n <= m -> d %| n -> (d %| m - n) = (d %| m).",
            "VernacStartTheoremProof",
            "abcd1a32ab3bdf274fdbe5d7347f7ee74d91fbbf"
        ],
        [
            "by move=> le_n_m dv_d_m; rewrite -(dvdn_addl _ dv_d_m) subnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_sub d m n : d %| m -> d %| n -> d %| m - n.",
            "VernacStartTheoremProof",
            "05ba7223193414b7b22a605520f4efad81108270"
        ],
        [
            "by case: (leqP n m) => [le_nm /dvdn_subr <- // | /ltnW/eqnP ->]; rewrite dvdn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_exp k d m : 0 < k -> d %| m -> d %| (m ^ k).",
            "VernacStartTheoremProof",
            "9386f763d5f45978cd061cfde56b4bb2c70c3b91"
        ],
        [
            "by case: k => // k _ d_dv_m; rewrite expnS dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_fact m n : 0 < m <= n -> m %| n`!.",
            "VernacStartTheoremProof",
            "94330d6862ebd815180e1dc08a017cb901af5e0d"
        ],
        [
            "case: m => //= m; elim: n => //= n IHn; rewrite ltnS leq_eqVlt.",
            "VernacExtend",
            "810b24f801b6f73dbb85b7524f481afcf2d89973"
        ],
        [
            "by case/predU1P=> [-> | /IHn]; [apply: dvdn_mulr | apply: dvdn_mull].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dvdn_add dvdn_sub dvdn_exp : core.",
            "VernacHints",
            "d50238fbc731f79b4248bf62a0451f237c7f5874"
        ],
        [
            "Lemma eqn_mod_dvd d m n : n <= m -> (m == n %[mod d]) = (d %| m - n).",
            "VernacStartTheoremProof",
            "21f62640956c4260b970cfb75776607cbf3f0dd5"
        ],
        [
            "by move=> le_mn; rewrite -{1}[n]add0n -{1}(subnK le_mn) eqn_modDr mod0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divnDl m n d : d %| m -> (m + n) %/ d = m %/ d + n %/ d.",
            "VernacStartTheoremProof",
            "56f95edece14b6252f7c7e85dbe561ba0c28bbce"
        ],
        [
            "by case: d => // d /divnK{1}<-; rewrite divnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divnDr m n d : d %| n -> (m + n) %/ d = m %/ d + n %/ d.",
            "VernacStartTheoremProof",
            "4cb83f106be5551eb9db2385a821cb4b5d940f6a"
        ],
        [
            "by move=> dv_n; rewrite addnC divnDl // addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint gcdn_rec m n := let n' := n %% m in if n' is 0 then m else if m - n'.-1 is m'.+1 then gcdn_rec (m' %% n') n' else n'.",
            "VernacFixpoint",
            "f0278d8a180186739194472d6be8b4428f5e74f5"
        ],
        [
            "Definition gcdn := nosimpl gcdn_rec.",
            "VernacDefinition",
            "e16b32201ea3d50599d151ef7c3a47e77c7b6367"
        ],
        [
            "Lemma gcdnE m n : gcdn m n = if m == 0 then n else gcdn (n %% m) m.",
            "VernacStartTheoremProof",
            "0d0205edc5277d694dfcff023761e8f5ffd7caea"
        ],
        [
            "rewrite /gcdn; elim: m {-2}m (leqnn m) n => [|s IHs] [|m] le_ms [|n] //=.",
            "VernacExtend",
            "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
        ],
        [
            "case def_n': (_ %% _) => // [n'].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have{def_n'} lt_n'm: n' < m by rewrite -def_n' -ltnS ltn_pmod.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {}IHs ?(leq_trans lt_n'm) // subn_if_gt ltnW //=; congr gcdn_rec.",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite -{2}(subnK (ltnW lt_n'm)) -addnS modnDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnn : idempotent gcdn.",
            "VernacStartTheoremProof",
            "b96fa187212fd13c43417ddf237ead8b4e69b7cb"
        ],
        [
            "by case=> // n; rewrite gcdnE modnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnC : commutative gcdn.",
            "VernacStartTheoremProof",
            "193119d330e5441f766385dc0943b234dad96b0d"
        ],
        [
            "move=> m n; wlog lt_nm: m n / n < m.",
            "VernacExtend",
            "6dbaea969dd2e1a08b50e55e2e4c4949c4d27249"
        ],
        [
            "by case: (ltngtP n m) => [||-> //]; last symmetry; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite gcdnE -{1}(ltn_predK lt_nm) modn_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd0n : left_id 0 gcdn.",
            "VernacStartTheoremProof",
            "f3b14fcdcf2fc89b0b8ecf5677614d120c4ce559"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdn0 : right_id 0 gcdn.",
            "VernacStartTheoremProof",
            "52df9532e7885abc7bb3013f2ffbf49595adff3b"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd1n : left_zero 1 gcdn.",
            "VernacStartTheoremProof",
            "d9074cf136f404dad75d214c3625bdcc3a6dd5bf"
        ],
        [
            "by move=> n; rewrite gcdnE modn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdn1 : right_zero 1 gcdn.",
            "VernacStartTheoremProof",
            "ebbf15f042c0d0c32593b67a17b5ff51514f5ade"
        ],
        [
            "by move=> n; rewrite gcdnC gcd1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_gcdr m n : gcdn m n %| n.",
            "VernacStartTheoremProof",
            "830436b0dde4be3eb615ad45eade8e7dac6133b9"
        ],
        [
            "elim: m {-2}m (leqnn m) n => [|s IHs] [|m] le_ms [|n] //.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite gcdnE; case def_n': (_ %% _) => [|n']; first by rewrite /dvdn def_n'.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have lt_n's: n' < s by rewrite -ltnS (leq_trans _ le_ms) // -def_n' ltn_pmod.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /= (divn_eq n.+1 m.+1) def_n' dvdn_addr ?dvdn_mull //; last exact: IHs.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gcdnE /= IHs // (leq_trans _ lt_n's) // ltnW // ltn_pmod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_gcdl m n : gcdn m n %| m.",
            "VernacStartTheoremProof",
            "ab4934b5aa8959aab446ab8360bba36e0636134d"
        ],
        [
            "by rewrite gcdnC dvdn_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdn_gt0 m n : (0 < gcdn m n) = (0 < m) || (0 < n).",
            "VernacStartTheoremProof",
            "eb494db0ede4ed8b96b99ead9307379dcba0d6b6"
        ],
        [
            "by case: m n => [|m] [|n] //; apply: (@dvdn_gt0 _ m.+1) => //; apply: dvdn_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnMDl k m n : gcdn m (k * m + n) = gcdn m n.",
            "VernacStartTheoremProof",
            "b6961d4876d47412c050a3474f8738fc6f64ed45"
        ],
        [
            "by rewrite !(gcdnE m) modnMDl mulnC; case: m.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnDl m n : gcdn m (m + n) = gcdn m n.",
            "VernacStartTheoremProof",
            "8d473b0babb122f2bbebabf65c62f7d46fdcbd92"
        ],
        [
            "by rewrite -{2}(mul1n m) gcdnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnDr m n : gcdn m (n + m) = gcdn m n.",
            "VernacStartTheoremProof",
            "6a216aba20c7c30128b37f39ffbc825f8b3f4d2b"
        ],
        [
            "by rewrite addnC gcdnDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnMl n m : gcdn n (m * n) = n.",
            "VernacStartTheoremProof",
            "4d0f79b33695b517cd1cfc0e4dfe7ebc3d5974e5"
        ],
        [
            "by case: n => [|n]; rewrite gcdnE modnMl gcd0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnMr n m : gcdn n (n * m) = n.",
            "VernacStartTheoremProof",
            "9db0bb58892f0826b98b43d5774b2153ce060c2d"
        ],
        [
            "by rewrite mulnC gcdnMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdn_idPl {m n} : reflect (gcdn m n = m) (m %| n).",
            "VernacStartTheoremProof",
            "dc8abbc8083bb7c85c4bc0523f55c23288043a19"
        ],
        [
            "by apply: (iffP idP) => [/dvdnP[q ->] | <-]; rewrite (gcdnMl, dvdn_gcdr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdn_idPr {m n} : reflect (gcdn m n = n) (n %| m).",
            "VernacStartTheoremProof",
            "1d39e801cdd1f1676650a54a73020dc1a3c60a77"
        ],
        [
            "by rewrite gcdnC; apply: gcdn_idPl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expn_min e m n : e ^ minn m n = gcdn (e ^ m) (e ^ n).",
            "VernacStartTheoremProof",
            "07792d77a4590a16e0e1c93bce7dd6ff38c85082"
        ],
        [
            "rewrite /minn; case: leqP; [rewrite gcdnC | move/ltnW]; by move/(dvdn_exp2l e)/gcdn_idPl.",
            "VernacExtend",
            "de3039c5418fc877e9679446cac67823ca7af3f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdn_modr m n : gcdn m (n %% m) = gcdn m n.",
            "VernacStartTheoremProof",
            "810c42a9e5374a7358fe4ab8b1aaa960e9763d62"
        ],
        [
            "by rewrite {2}(divn_eq n m) gcdnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdn_modl m n : gcdn (m %% n) n = gcdn m n.",
            "VernacStartTheoremProof",
            "f88f8efa239601dfb63dbedd99e98fb8f022fee7"
        ],
        [
            "by rewrite !(gcdnC _ n) gcdn_modr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint Bezout_rec km kn qs := if qs is q :: qs' then Bezout_rec kn (NatTrec.add_mul q kn km) qs' else (km, kn).",
            "VernacFixpoint",
            "447aee67039bea9aa736c75f0309c6d56dfb6dbd"
        ],
        [
            "Fixpoint egcdn_rec m n s qs := if s is s'.+1 then let: (q, r) := edivn m n in if r > 0 then egcdn_rec n r s' (q :: qs) else if odd (size qs) then qs else q.-1 :: qs else [::0].",
            "VernacFixpoint",
            "f50c4154ac768f1d2720759afcfb7510f8ef6e85"
        ],
        [
            "Definition egcdn m n := Bezout_rec 0 1 (egcdn_rec m n n [::]).",
            "VernacDefinition",
            "155632f12f83f352ffd831e2a822837d5032ddde"
        ],
        [
            "Variant egcdn_spec m n : nat * nat -> Type := EgcdnSpec km kn of km * m = kn * n + gcdn m n & kn * gcdn m n < m : egcdn_spec m n (km, kn).",
            "VernacInductive",
            "60d519fdc3df4d0ba495d313e98e0a5d4c8fd937"
        ],
        [
            "Lemma egcd0n n : egcdn 0 n = (1, 0).",
            "VernacStartTheoremProof",
            "23a15153a65f2f1a367780b8fb8225d83127e3c9"
        ],
        [
            "by case: n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma egcdnP m n : m > 0 -> egcdn_spec m n (egcdn m n).",
            "VernacStartTheoremProof",
            "c9603cf66b5dd2dcab024b07fe3cb3f77ba72bda"
        ],
        [
            "rewrite /egcdn; have: (n, m) = Bezout_rec n m [::] by [].",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "case: (posnP n) => [-> /=|]; first by split; rewrite // mul1n gcdn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: {2 6}n {4 6}n {1 4}m [::] (ltnSn n) => s n0 m0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: s n m => [[]//|s IHs] n m qs /= le_ns n_gt0 def_mn0 m_gt0.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case: edivnP => q r def_m; rewrite n_gt0 /= => lt_rn.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case: posnP => [r0 {s le_ns IHs lt_rn}|r_gt0]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IHs => //=; [rewrite (leq_trans lt_rn) | rewrite natTrecE -def_m].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {r}r0 addn0 in def_m; set b := odd _; pose d := gcdn m n.",
            "VernacExtend",
            "e556373b70cb34b473e8523ad36270d6045b09a5"
        ],
        [
            "pose km := ~~ b : nat; pose kn := if b then 1 else q.-1.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "rewrite (_ : Bezout_rec _ _ _ = Bezout_rec km kn qs); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /kn /km; case: (b) => //=; rewrite natTrecE addn0 muln1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_d: d = n by rewrite /d def_m gcdnC gcdnE modnMl gcd0n -[n]prednK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: km * m + 2 * b * d = kn * n + d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {}/kn {}/km def_m def_d -mulSnr; case: b; rewrite //= addn0 mul1n.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "by rewrite prednK //; apply: dvdn_gt0 m_gt0 _; rewrite def_m dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{def_m}: kn * d <= m.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have q_gt0 : 0 < q by rewrite def_m muln_gt0 n_gt0 ?andbT in m_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /kn; case b; rewrite def_d def_m leq_pmul2r // leq_pred.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{def_d}: km * d <= n by rewrite -[n]mul1n def_d leq_pmul2r // leq_b1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: km {q}kn m_gt0 n_gt0 def_mn0; rewrite {}/d {}/b.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "elim: qs m n => [|q qs IHq] n r kn kr n_gt0 r_gt0 /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case=> -> -> {m0 n0}; rewrite !addn0 => le_kn_r _ def_d; split=> //.",
            "VernacExtend",
            "72e880078fb607de26a67bd241d717d95e1ced6b"
        ],
        [
            "have d_gt0: 0 < gcdn n r by rewrite gcdn_gt0 n_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: 0 < kn * n by rewrite def_d addn_gt0 d_gt0 orbT.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite muln_gt0 n_gt0 andbT; move/ltn_pmul2l <-.",
            "VernacExtend",
            "9d45b3f5079bd11fa9301fef8a859fbbb0c29729"
        ],
        [
            "by rewrite def_d -addn1 leq_add // mulnCA leq_mul2l le_kn_r orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !natTrecE; set m:= _ + r; set km := _ * _ + kn; pose d := gcdn m n.",
            "VernacExtend",
            "588087b925024a2c93c5c978766df5eed1d9b0c5"
        ],
        [
            "have ->: gcdn n r = d by rewrite [d]gcdnC gcdnMDl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have m_gt0: 0 < m by rewrite addn_gt0 r_gt0 orbT.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have d_gt0: 0 < d by rewrite gcdn_gt0 m_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/IHq=> {IHq} IHq le_kn_r le_kr_n def_d; apply: IHq => //; rewrite -/d.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite mulnDl leq_add // -mulnA leq_mul2l le_kr_n orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (@addIn d); rewrite -!addnA addnn addnCA mulnDr -addnA addnCA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /km mulnDl mulnCA mulnA -addnA; congr (_ + _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite -def_d addnC -addnA -mulnDl -mulnDr addn_negb -mul2n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Bezoutl m n : m > 0 -> {a | a < m & m %| gcdn m n + a * n}.",
            "VernacStartTheoremProof",
            "c67f18c263d4707abbe7dc08a0f0b5780df4ac0f"
        ],
        [
            "move=> m_gt0; case: (egcdnP n m_gt0) => km kn def_d lt_kn_m.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "exists kn; last by rewrite addnC -def_d dvdn_mull.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: leq_ltn_trans lt_kn_m.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -{1}[kn]muln1 leq_mul2l gcdn_gt0 m_gt0 orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Bezoutr m n : n > 0 -> {a | a < n & n %| gcdn m n + a * m}.",
            "VernacStartTheoremProof",
            "56bd8b150fe0c8cf697b4475764ec6601b8ef528"
        ],
        [
            "by rewrite gcdnC; apply: Bezoutl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_gcd p m n : p %| gcdn m n = (p %| m) && (p %| n).",
            "VernacStartTheoremProof",
            "7e77b32e1e44c9d4ab24ee598235cc5df6d9ea6c"
        ],
        [
            "apply/idP/andP=> [dv_pmn | [dv_pm dv_pn]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite !(dvdn_trans dv_pmn) ?dvdn_gcdl ?dvdn_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case (posnP n) => [->|n_gt0]; first by rewrite gcdn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (Bezoutr m n_gt0) => // km _ /(dvdn_trans dv_pn).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite dvdn_addl // dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnAC : right_commutative gcdn.",
            "VernacStartTheoremProof",
            "ef4bf4572a41e578eb67ba803859ada75486247a"
        ],
        [
            "suffices dvd m n p: gcdn (gcdn m n) p %| gcdn (gcdn m p) n.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by move=> m n p; apply/eqP; rewrite eqn_dvd !dvd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !dvdn_gcd dvdn_gcdr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !(dvdn_trans (dvdn_gcdl _ p)) ?dvdn_gcdl ?dvdn_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnA : associative gcdn.",
            "VernacStartTheoremProof",
            "2b22b08f4febe8417c29592f59e00b87b7a6edfc"
        ],
        [
            "by move=> m n p; rewrite !(gcdnC m) gcdnAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnCA : left_commutative gcdn.",
            "VernacStartTheoremProof",
            "ea467de0a2a6d01f9840efce18c490ea9375100e"
        ],
        [
            "by move=> m n p; rewrite !gcdnA (gcdnC m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdnACA : interchange gcdn gcdn.",
            "VernacStartTheoremProof",
            "0f2a63530b4606dececc0e96e1197bfab0837d91"
        ],
        [
            "by move=> m n p q; rewrite -!gcdnA (gcdnCA n).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma muln_gcdr : right_distributive muln gcdn.",
            "VernacStartTheoremProof",
            "d8220021e5b1d6b808b9cf7d66b795196dccf850"
        ],
        [
            "move=> p m n; case: (posnP p) => [-> //| p_gt0].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "elim: {m}m.+1 {-2}m n (ltnSn m) => // s IHs m n; rewrite ltnS => le_ms.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "rewrite gcdnE [rhs in _ = rhs]gcdnE muln_eq0 (gtn_eqF p_gt0) -muln_modr //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: posnP => // m_gt0; apply: IHs; apply: leq_trans le_ms; apply: ltn_pmod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma muln_gcdl : left_distributive muln gcdn.",
            "VernacStartTheoremProof",
            "912381dd7f2b7ba70ef34ac1a70a87c2a5d9628a"
        ],
        [
            "by move=> m n p; rewrite -!(mulnC p) muln_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdn_def d m n : d %| m -> d %| n -> (forall d', d' %| m -> d' %| n -> d' %| d) -> gcdn m n = d.",
            "VernacStartTheoremProof",
            "06091f9fb0dc0069e216585b0545f63ac7ac8892"
        ],
        [
            "move=> dv_dm dv_dn gdv_d; apply/eqP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite eqn_dvd dvdn_gcd dv_dm dv_dn gdv_d ?dvdn_gcdl ?dvdn_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma muln_divCA_gcd n m : n * (m %/ gcdn n m) = m * (n %/ gcdn n m).",
            "VernacStartTheoremProof",
            "5d2a2ff9e89e4b9ee203da2f4083685919e5f09c"
        ],
        [
            "by rewrite muln_divCA ?dvdn_gcdl ?dvdn_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lcmn m n := m * n %/ gcdn m n.",
            "VernacDefinition",
            "60290597b7294e29bfa561754e499533222fd956"
        ],
        [
            "Lemma lcmnC : commutative lcmn.",
            "VernacStartTheoremProof",
            "48f0f573bf0fbe68682c0126739748b8d4dfdadf"
        ],
        [
            "by move=> m n; rewrite /lcmn mulnC gcdnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm0n : left_zero 0 lcmn.",
            "VernacStartTheoremProof",
            "7afae0411fce10c012fb59e1c6acb22d24051558"
        ],
        [
            "by move=> n; apply: div0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmn0 : right_zero 0 lcmn.",
            "VernacStartTheoremProof",
            "f6d3bd6f2a19a1cc953cf107fa43774e4dd2e7d8"
        ],
        [
            "by move=> n; rewrite lcmnC lcm0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm1n : left_id 1 lcmn.",
            "VernacStartTheoremProof",
            "56872c8c972946a13ea00a2c2320e0caaac60aee"
        ],
        [
            "by move=> n; rewrite /lcmn gcd1n mul1n divn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmn1 : right_id 1 lcmn.",
            "VernacStartTheoremProof",
            "676e7559b54873ecc6fd1ce3b524b96cebff15f4"
        ],
        [
            "by move=> n; rewrite lcmnC lcm1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma muln_lcm_gcd m n : lcmn m n * gcdn m n = m * n.",
            "VernacStartTheoremProof",
            "6ed9d495c929373e60ed75050b5ed55b6f8f6805"
        ],
        [
            "by apply/eqP; rewrite divnK ?dvdn_mull ?dvdn_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmn_gt0 m n : (0 < lcmn m n) = (0 < m) && (0 < n).",
            "VernacStartTheoremProof",
            "936c21be88e723f0879f96e98be038475cd88c25"
        ],
        [
            "by rewrite -muln_gt0 ltn_divRL ?dvdn_mull ?dvdn_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma muln_lcmr : right_distributive muln lcmn.",
            "VernacStartTheoremProof",
            "813ac718935f93947f09c7be3f0188a373b3ccf8"
        ],
        [
            "case=> // m n p; rewrite /lcmn -muln_gcdr -!mulnA divnMl // mulnCA.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite muln_divA ?dvdn_mull ?dvdn_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma muln_lcml : left_distributive muln lcmn.",
            "VernacStartTheoremProof",
            "e52d52bc6d802e1ae12b1fc11d8aa4bc579918b2"
        ],
        [
            "by move=> m n p; rewrite -!(mulnC p) muln_lcmr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmnA : associative lcmn.",
            "VernacStartTheoremProof",
            "7d2a5ed7e5a8391d519193414d25475e4c833fdb"
        ],
        [
            "move=> m n p; rewrite {1 3}/lcmn mulnC !divn_mulAC ?dvdn_mull ?dvdn_gcdr //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -!divnMA ?dvdn_mulr ?dvdn_gcdl // mulnC mulnA !muln_gcdr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ![_ * lcmn _ _]mulnC !muln_lcm_gcd !muln_gcdl -!(mulnC m) gcdnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmnCA : left_commutative lcmn.",
            "VernacStartTheoremProof",
            "2ae43f13f47de43c7b28f7d7640b2a31f0c705b4"
        ],
        [
            "by move=> m n p; rewrite !lcmnA (lcmnC m).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmnAC : right_commutative lcmn.",
            "VernacStartTheoremProof",
            "4d7a22378b8bf228d7f236a868e5ea25d408ac0b"
        ],
        [
            "by move=> m n p; rewrite -!lcmnA (lcmnC n).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmnACA : interchange lcmn lcmn.",
            "VernacStartTheoremProof",
            "f2e6ff8c7eac5d1477d5d6d9dcb6d36e8e2fed6f"
        ],
        [
            "by move=> m n p q; rewrite -!lcmnA (lcmnCA n).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_lcml d1 d2 : d1 %| lcmn d1 d2.",
            "VernacStartTheoremProof",
            "a4794d3e9da8ea305b18fbf1413f1fdf65878e2a"
        ],
        [
            "by rewrite /lcmn -muln_divA ?dvdn_gcdr ?dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_lcmr d1 d2 : d2 %| lcmn d1 d2.",
            "VernacStartTheoremProof",
            "09f8d3b23c6ef0fc502cda793f2d14467d72e617"
        ],
        [
            "by rewrite lcmnC dvdn_lcml.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_lcm d1 d2 m : lcmn d1 d2 %| m = (d1 %| m) && (d2 %| m).",
            "VernacStartTheoremProof",
            "6b8b08a7594117222697d7bd9791f22d8fabe6a0"
        ],
        [
            "case: d1 d2 => [|d1] [|d2]; try by case: m => [|m]; rewrite ?lcmn0 ?andbF.",
            "VernacExtend",
            "700e4ba7c43aef376de752aa78d70ea0bf66a54e"
        ],
        [
            "rewrite -(@dvdn_pmul2r (gcdn d1.+1 d2.+1)) ?gcdn_gt0 // muln_lcm_gcd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite muln_gcdr dvdn_gcd {1}mulnC andbC !dvdn_pmul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmnMl m n : lcmn m (m * n) = m * n.",
            "VernacStartTheoremProof",
            "0d9c6b52b7dbc6c89bf8f75706cd0bc2f3a9eb70"
        ],
        [
            "by case: m => // m; rewrite /lcmn gcdnMr mulKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmnMr m n : lcmn n (m * n) = m * n.",
            "VernacStartTheoremProof",
            "55b1a308c50e5b148cf01d0cdf4a064d733d073c"
        ],
        [
            "by rewrite mulnC lcmnMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmn_idPr {m n} : reflect (lcmn m n = n) (m %| n).",
            "VernacStartTheoremProof",
            "0855ae899b0a977a104420e4144d6464b1399ff1"
        ],
        [
            "by apply: (iffP idP) => [/dvdnP[q ->] | <-]; rewrite (lcmnMr, dvdn_lcml).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmn_idPl {m n} : reflect (lcmn m n = m) (n %| m).",
            "VernacStartTheoremProof",
            "cb43bbe41e5d28942d6c888a51d738c024bfdcee"
        ],
        [
            "by rewrite lcmnC; apply: lcmn_idPr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expn_max e m n : e ^ maxn m n = lcmn (e ^ m) (e ^ n).",
            "VernacStartTheoremProof",
            "9be20d6d2d52029a3ee4fd8398c1b267d77bbfb1"
        ],
        [
            "rewrite /maxn; case: leqP; [rewrite lcmnC | move/ltnW]; by move/(dvdn_exp2l e)/lcmn_idPr.",
            "VernacExtend",
            "de3039c5418fc877e9679446cac67823ca7af3f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition coprime m n := gcdn m n == 1.",
            "VernacDefinition",
            "92222b8dce3f44adfa147dd19caa04c26784d9e4"
        ],
        [
            "Lemma coprime1n n : coprime 1 n.",
            "VernacStartTheoremProof",
            "08d82153f8b614062bc06afeb0f521d045f98079"
        ],
        [
            "by rewrite /coprime gcd1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimen1 n : coprime n 1.",
            "VernacStartTheoremProof",
            "2940a72b25aa595a75d7494aeda29d93957676ed"
        ],
        [
            "by rewrite /coprime gcdn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_sym m n : coprime m n = coprime n m.",
            "VernacStartTheoremProof",
            "08453e6f956e213195217e3fe008253602c860c3"
        ],
        [
            "by rewrite /coprime gcdnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_modl m n : coprime (m %% n) n = coprime m n.",
            "VernacStartTheoremProof",
            "c0022b731498595fba6e6365107a527403df8017"
        ],
        [
            "by rewrite /coprime gcdn_modl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_modr m n : coprime m (n %% m) = coprime m n.",
            "VernacStartTheoremProof",
            "c2829b245001e9b41c97faaaad9e6654bc5b82ac"
        ],
        [
            "by rewrite /coprime gcdn_modr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime2n n : coprime 2 n = odd n.",
            "VernacStartTheoremProof",
            "6bbc912254402306598ded417f0c161f9bde29b9"
        ],
        [
            "by rewrite -coprime_modr modn2; case: (odd n).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimen2 n : coprime n 2 = odd n.",
            "VernacStartTheoremProof",
            "d4068904c50dd5413f4827d96add5867223fd567"
        ],
        [
            "by rewrite coprime_sym coprime2n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeSn n : coprime n.+1 n.",
            "VernacStartTheoremProof",
            "7958a25dbbc968ce3ba7347b859592add4573cb6"
        ],
        [
            "by rewrite -coprime_modl (modnDr 1) coprime_modl coprime1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimenS n : coprime n n.+1.",
            "VernacStartTheoremProof",
            "bb05bb06b929f5c9233fc41eeff3d704a4b12490"
        ],
        [
            "by rewrite coprime_sym coprimeSn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimePn n : n > 0 -> coprime n.-1 n.",
            "VernacStartTheoremProof",
            "f596f4888919c11f1a5d3e2bc37f63ba3b042f03"
        ],
        [
            "by case: n => // n _; rewrite coprimenS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimenP n : n > 0 -> coprime n n.-1.",
            "VernacStartTheoremProof",
            "c991a7d462ed0345baaffdb9484cd9a863cb83e6"
        ],
        [
            "by case: n => // n _; rewrite coprimeSn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeP n m : n > 0 -> reflect (exists u, u.1 * n - u.2 * m = 1) (coprime n m).",
            "VernacStartTheoremProof",
            "23e21799b9c711cde21b829ebe88f5159183a772"
        ],
        [
            "move=> n_gt0; apply: (iffP eqP) => [<-| [[kn km] /= kn_km_1]].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by have [kn km kg _] := egcdnP m n_gt0; exists (kn, km); rewrite kg addKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply gcdn_def; rewrite ?dvd1n // => d dv_d_n dv_d_m.",
            "VernacExtend",
            "8103e50bb5116877ffbdb6fe80207e439ad7f1e4"
        ],
        [
            "by rewrite -kn_km_1 dvdn_subr ?dvdn_mull // ltnW // -subn_gt0 kn_km_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modn_coprime k n : 0 < k -> (exists u, (k * u) %% n = 1) -> coprime k n.",
            "VernacStartTheoremProof",
            "c55c442e21bbcbbd5b10ef9559d0b1e9b9ca005c"
        ],
        [
            "move=> k_gt0 [u Hu]; apply/coprimeP=> //.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by exists (u, k * u %/ n); rewrite /= mulnC {1}(divn_eq (k * u) n) addKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_dvd m n p : coprime m n -> (m * n %| p) = (m %| p) && (n %| p).",
            "VernacStartTheoremProof",
            "21045063d5abc5dc7122772d417b567d83d44ce6"
        ],
        [
            "by move=> co_mn; rewrite -muln_lcm_gcd (eqnP co_mn) muln1 dvdn_lcm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_dvdr m n p : coprime m n -> (m %| n * p) = (m %| p).",
            "VernacStartTheoremProof",
            "f623c9086b85b5c5863a534cda1c5d4ef6ae8b74"
        ],
        [
            "case: n => [|n] co_mn; first by case: m co_mn => [|[]] // _; rewrite !dvd1n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by symmetry; rewrite mulnC -(@dvdn_pmul2r n.+1) ?Gauss_dvd // andbC dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_dvdl m n p : coprime m p -> (m %| n * p) = (m %| n).",
            "VernacStartTheoremProof",
            "b2765396a234669faa609ad37730117c2bb5762f"
        ],
        [
            "by rewrite mulnC; apply: Gauss_dvdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_double_leq m n : m %| n -> odd m -> ~~ odd n -> 0 < n -> m.*2 <= n.",
            "VernacStartTheoremProof",
            "5381073ad6f41e50e2dc74f60d665a82eb204e55"
        ],
        [
            "move=> m_dv_n odd_m even_n n_gt0.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite -muln2 dvdn_leq // Gauss_dvd ?coprimen2 ?m_dv_n ?dvdn2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_double_ltn m n : m %| n.-1 -> odd m -> odd n -> 1 < n -> m.*2 < n.",
            "VernacStartTheoremProof",
            "d0b53126363d4bc7bc11072dd359a2a2b739f960"
        ],
        [
            "by case: n => //; apply: dvdn_double_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_gcdr p m n : coprime p m -> gcdn p (m * n) = gcdn p n.",
            "VernacStartTheoremProof",
            "3ea5e7860cf9f09bb21a966299dc9cc3e3a5c3d4"
        ],
        [
            "move=> co_pm; apply/eqP; rewrite eqn_dvd !dvdn_gcd !dvdn_gcdl /=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite andbC dvdn_mull ?dvdn_gcdr //= -(@Gauss_dvdr _ m) ?dvdn_gcdr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /coprime gcdnAC (eqnP co_pm) gcd1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_gcdl p m n : coprime p n -> gcdn p (m * n) = gcdn p m.",
            "VernacStartTheoremProof",
            "1edc058b10debb68a1fde8a7e3e9e752e636a17a"
        ],
        [
            "by move=> co_pn; rewrite mulnC Gauss_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_mulr p m n : coprime p (m * n) = coprime p m && coprime p n.",
            "VernacStartTheoremProof",
            "287e568f3bba351ca87c9e4adbd81eced6b16790"
        ],
        [
            "case co_pm: (coprime p m) => /=; first by rewrite /coprime Gauss_gcdr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP=> co_p_mn; case/eqnP: co_pm; apply gcdn_def => // d dv_dp dv_dm.",
            "VernacExtend",
            "28975652938dd8bbe0131de332439a54e4a7849e"
        ],
        [
            "by rewrite -co_p_mn dvdn_gcd dv_dp dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_mull p m n : coprime (m * n) p = coprime m p && coprime n p.",
            "VernacStartTheoremProof",
            "e488d30aba909d5f087c4e8c656666f9ac8fd5fd"
        ],
        [
            "by rewrite -!(coprime_sym p) coprime_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_pexpl k m n : 0 < k -> coprime (m ^ k) n = coprime m n.",
            "VernacStartTheoremProof",
            "c103b84d6e61cd8d16b68b126e4888291c212645"
        ],
        [
            "case: k => // k _; elim: k => [|k IHk]; first by rewrite expn1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite expnS coprime_mull -IHk; case coprime.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_pexpr k m n : 0 < k -> coprime m (n ^ k) = coprime m n.",
            "VernacStartTheoremProof",
            "ba5dc7eaacf7bebb40a911df909c941f7183d765"
        ],
        [
            "by move=> k_gt0; rewrite !(coprime_sym m) coprime_pexpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_expl k m n : coprime m n -> coprime (m ^ k) n.",
            "VernacStartTheoremProof",
            "98e00771bee4cd395772846117002ed1e1c21db5"
        ],
        [
            "by case: k => [|k] co_pm; rewrite ?coprime1n // coprime_pexpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_expr k m n : coprime m n -> coprime m (n ^ k).",
            "VernacStartTheoremProof",
            "816e10056b7c40dd674d041feb9e21db41b31fc7"
        ],
        [
            "by rewrite !(coprime_sym m); apply: coprime_expl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_dvdl m n p : m %| n -> coprime n p -> coprime m p.",
            "VernacStartTheoremProof",
            "598c5167d41063f9eba4d60aa344c1b65cda3b20"
        ],
        [
            "by case/dvdnP=> d ->; rewrite coprime_mull => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_dvdr m n p : m %| n -> coprime p n -> coprime p m.",
            "VernacStartTheoremProof",
            "700b2c17e66f53dec92ce7a70822d0c7b9f05b2e"
        ],
        [
            "by rewrite !(coprime_sym p); apply: coprime_dvdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_egcdn n m : n > 0 -> coprime (egcdn n m).1 (egcdn n m).2.",
            "VernacStartTheoremProof",
            "34ada8d28777e1b6a3abae14b786e0868e16a233"
        ],
        [
            "move=> n_gt0; case: (egcdnP m n_gt0) => kn km /= /eqP.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "have [/dvdnP[u defn] /dvdnP[v defm]] := (dvdn_gcdl n m, dvdn_gcdr n m).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -[gcdn n m]mul1n {1}defm {1}defn !mulnA -mulnDl addnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite eqn_pmul2r ?gcdn_gt0 ?n_gt0 //; case: kn => // kn /eqP def_knu _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply/coprimeP=> //; exists (u, v); rewrite mulnC def_knu mulnC addnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_pexp2r m n k : k > 0 -> (m ^ k %| n ^ k) = (m %| n).",
            "VernacStartTheoremProof",
            "85107e054ed15e1793b50a55a5c1742871afdd9e"
        ],
        [
            "move=> k_gt0; apply/idP/idP=> [dv_mn_k|]; last exact: dvdn_exp2r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (posnP n) => [-> | n_gt0]; first by rewrite dvdn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [n' def_n] := dvdnP (dvdn_gcdr m n); set d := gcdn m n in def_n.",
            "VernacExtend",
            "81881a093b2294c76be3b432fbe83612064d7bc9"
        ],
        [
            "have [m' def_m] := dvdnP (dvdn_gcdl m n); rewrite -/d in def_m.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have d_gt0: d > 0 by rewrite gcdn_gt0 n_gt0 orbT.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite def_m def_n !expnMn dvdn_pmul2r ?expn_gt0 ?d_gt0 // in dv_mn_k.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have: coprime (m' ^ k) (n' ^ k).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite coprime_pexpl // coprime_pexpr // /coprime -(eqn_pmul2r d_gt0) mul1n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite muln_gcdl -def_m -def_n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /coprime -gcdn_modr (eqnP dv_mn_k) gcdn0 -(exp1n k).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (inj_eq (expIn k_gt0)) def_m; move/eqP->; rewrite mul1n dvdn_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Chinese.",
            "VernacBeginSection",
            "42818b185fd1099ce7214c7ceb4422c5cc1520aa"
        ],
        [
            "Variables m1 m2 : nat.",
            "VernacAssumption",
            "01b95a18d08219db2bc304719d1b7b2ac1b70804"
        ],
        [
            "Hypothesis co_m12 : coprime m1 m2.",
            "VernacAssumption",
            "cc425fc68374111a748a32a3ce932be9b9c794f6"
        ],
        [
            "Lemma chinese_remainder x y : (x == y %[mod m1 * m2]) = (x == y %[mod m1]) && (x == y %[mod m2]).",
            "VernacStartTheoremProof",
            "2df3545c32a7141ad9521b75f09ee6067b5d9e34"
        ],
        [
            "wlog le_yx : x y / y <= x; last by rewrite !eqn_mod_dvd // Gauss_dvd.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/orP: (leq_total y x); last rewrite !(eq_sym (x %% _)); auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition chinese r1 r2 := r1 * m2 * (egcdn m2 m1).1 + r2 * m1 * (egcdn m1 m2).1.",
            "VernacDefinition",
            "95abb06ca7b877be80220524974bd64ab42a8f43"
        ],
        [
            "Lemma chinese_modl r1 r2 : chinese r1 r2 = r1 %[mod m1].",
            "VernacStartTheoremProof",
            "b93479d79b0b5b83f19b0d63117ccfc21101effc"
        ],
        [
            "rewrite /chinese; case: (posnP m2) co_m12 => [-> /eqnP | m2_gt0 _].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite gcdn0 => ->; rewrite !modn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: egcdnP => // k2 k1 def_m1 _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite mulnAC -mulnA def_m1 gcdnC (eqnP co_m12) mulnDr mulnA muln1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addnAC (mulnAC _ m1) -mulnDl modnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma chinese_modr r1 r2 : chinese r1 r2 = r2 %[mod m2].",
            "VernacStartTheoremProof",
            "8180d88e3d05851af293aac4bc599bd88cf84786"
        ],
        [
            "rewrite /chinese; case: (posnP m1) co_m12 => [-> /eqnP | m1_gt0 _].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite gcd0n => ->; rewrite !modn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (egcdnP m2) => // k1 k2 def_m2 _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite addnC mulnAC -mulnA def_m2 (eqnP co_m12) mulnDr mulnA muln1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addnAC (mulnAC _ m2) -mulnDl modnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma chinese_mod x : x = chinese (x %% m1) (x %% m2) %[mod m1 * m2].",
            "VernacStartTheoremProof",
            "70b3a09e270df415dde3913dfa68bd4d4ccae9d4"
        ],
        [
            "apply/eqP; rewrite chinese_remainder //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite chinese_modl chinese_modr !modn_mod !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Chinese.",
            "VernacEndSegment",
            "3619201e4265d5410f4025b4232dbbdcfd4be3a2"
        ]
    ],
    "proofs": [
        {
            "name": "edivnP",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "rewrite -{1}[m]/(0 * d + m) /edivn; case: d => //= d.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "elim: m {-2}m 0 (leqnn m) => [|n IHn] [|m] q //= le_mn.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "have le_m'n: m - d <= n by rewrite (leq_trans (leq_subr d m)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite subn_if_gt; case: ltnP => [// | le_dm].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}(subnKC le_dm) -addSn addnA -mulSnr; apply: IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "edivn_eq",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "move=> lt_rd; have d_gt0: 0 < d by apply: leq_trans lt_rd.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "case: edivnP lt_rd => q' r'; rewrite d_gt0 /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "wlog: q q' r r' / q <= q' by case/orP: (leq_total q q'); last symmetry; eauto.",
                        "VernacExtend",
                        "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
                    ]
                },
                {
                    "command": [
                        "rewrite leq_eqVlt; case/predU1P => [-> /addnI-> |] //=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite -(leq_pmul2r d_gt0) => /leq_add lt_qr eq_qr _ /lt_qr {lt_qr}.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite addnS ltnNge mulSn -addnA eq_qr addnCA addnA leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modn_def",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "case: d => //= d; rewrite /modn /edivn /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "elim: m {-2}m 0 (leqnn m) => [|n IHn] [|m] q //=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS !subn_if_gt; case: (d <= m) => // le_mn.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by apply: IHn; apply: leq_trans le_mn; apply: leq_subr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "edivn_def",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "by rewrite /divn modn_def; case: (edivn m d).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divn_eq",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "by rewrite /divn modn_def; case: edivnP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div0n",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by case: d.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divn0",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod0n",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by case: d.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modn0",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divn_small",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "by move=> lt_md; rewrite /divn (edivn_eq 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divnMDl",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "move=> d_gt0; rewrite {1}(divn_eq m d) addnA -mulnDl.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite /divn edivn_eq // modn_def; case: edivnP; rewrite d_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulnK",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "by move=> d_gt0; rewrite -[m * d]addn0 divnMDl // div0n addn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulKn",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "by move=> d_gt0; rewrite mulnC mulnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expnB",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "by move=> p_gt0 /subnK{2}<-; rewrite expnD mulnK // expn_gt0 p_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modn1",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "by rewrite modn_def; case: edivnP => ? [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divn1",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "by rewrite {2}(@divn_eq m 1) // modn1 addn0 muln1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divnn",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "by case: d => // d; rewrite -{1}[d.+1]muln1 mulKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divnMl",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "move=> p_gt0; case: (posnP d) => [-> | d_gt0]; first by rewrite muln0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}/divn; case: edivnP; rewrite d_gt0 /= => q r ->{m} lt_rd.",
                        "VernacExtend",
                        "2253759ff5c580854290fce82296a80357452125"
                    ]
                },
                {
                    "command": [
                        "rewrite mulnDr mulnCA divnMDl; last by rewrite muln_gt0 p_gt0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite addnC divn_small // ltn_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divnMr",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "by move=> p_gt0; rewrite -!(mulnC p) divnMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_mod",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "by case: d => // d; rewrite modn_def; case: edivnP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_pmod",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "by rewrite ltn_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_trunc_div",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "by rewrite {2}(divn_eq m d) leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_mod",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "by rewrite {2}(divn_eq m d) leq_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_div",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "by case: d => // d; apply: leq_trans (leq_pmulr _ _) (leq_trunc_div _ _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_ceil",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "by move=> d_gt0; rewrite {1}(divn_eq m d) -addnS mulSnr leq_add2l ltn_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_divRL",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "by move=> d_gt0; rewrite leqNgt ltn_divLR // -leqNgt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_Pdiv",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "by move=> d_gt1 m_gt0; rewrite ltn_divLR ?ltn_Pmulr // ltnW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divn_gt0",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "by move=> d_gt0; rewrite leq_divRL ?mul1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_div2r",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "have [-> //| d_gt0 le_mn] := posnP d.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite leq_divRL // (leq_trans _ le_mn) -?leq_divRL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_div2l",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "move/leq_divRL=> -> le_de.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans (leq_trunc_div m e); apply: leq_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_divDl",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "have [-> //| p_gt0] := posnP p; rewrite -ltnS -addnS ltn_divLR // ltnW //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}(divn_eq n p) {1}(divn_eq m p) addnACA !mulnDl -3!addnS leq_add2l.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul2n -addnn -addSn leq_add // ltn_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divnMA",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "case: n p => [|n] [|p]; rewrite ?muln0 ?div0n //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}(divn_eq m (n.+1 * p.+1)) mulnA mulnAC !divnMDl //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite [_ %/ p.+1]divn_small ?addn0 // ltn_divLR // mulnC ltn_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divnAC",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "by rewrite -!divnMA mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modn_small",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "by move=> lt_md; rewrite {2}(divn_eq m d) divn_small.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modn_mod",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "by case: d => // d; apply: modn_small; rewrite ltn_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnMDl",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "case: (posnP d) => [-> | d_gt0]; first by rewrite muln0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite {1}(divn_eq m d) addnA -mulnDl modn_def edivn_eq // ltn_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "muln_modl",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "by rewrite -!(mulnC p); apply: muln_modr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnDl",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}[d]mul1n modnMDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnDr",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "by rewrite addnC modnDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnn",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "by rewrite -{1}[d]addn0 modnDl mod0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnMl",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "by rewrite -[p * d]addn0 modnMDl mod0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnMr",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "by rewrite mulnC modnMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnDml",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "by rewrite {2}(divn_eq m d) -addnA modnMDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnDmr",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "by rewrite !(addnC m) modnDml.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnDm",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "by rewrite modnDml modnDmr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqn_modDl",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "case: d => [|d]; first by rewrite !modn0 eqn_add2l.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP/eqP=> eq_mn; last by rewrite -modnDmr eq_mn modnDmr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -(modnMDl p m) -(modnMDl p n) !mulnSr -!addnA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -modnDmr eq_mn modnDmr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqn_modDr",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "by rewrite -!(addnC p) eqn_modDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnMml",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "by rewrite {2}(divn_eq m d) mulnDl mulnAC modnMDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnMmr",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "by rewrite !(mulnC m) modnMml.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnMm",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "by rewrite modnMml modnMmr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modn2",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "by elim: m => //= m IHm; rewrite -addn1 -modnDml IHm; case odd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divn2",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "by rewrite {2}(divn_eq m 2) modn2 muln2 addnC half_bit_double.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_mod",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "by move=> d_even; rewrite {2}(divn_eq m d) odd_add odd_mul d_even andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modnXm",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "by elim: m => // m IHm; rewrite !expnS -modnMmr IHm modnMml modnMmr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdnP",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "apply: (iffP eqP) => [md0 | [k ->]]; last by rewrite modnMl.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists (m %/ d); rewrite {1}(divn_eq m d) md0 addn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn0",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "by case: d.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvd0n",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "by case: n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn1",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "by case: d => [|[|d]] //; rewrite /dvdn modn_small.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvd1n",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "by rewrite /dvdn modn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_gt0",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "by case: d => // /prednK <-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdnn",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "by rewrite /dvdn modnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_mull",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "by case/dvdnP=> n' ->; rewrite /dvdn mulnA modnMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_mulr",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "by move=> d_m; rewrite mulnC dvdn_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_mul",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "by move=> /dvdnP[q1 ->] /dvdnP[q2 ->]; rewrite mulnCA -mulnA 2?dvdn_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_trans",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "by move=> d_dv_n /dvdnP[n1 ->]; apply: dvdn_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_eq",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "apply/eqP/eqP=> [modm0 | <-]; last exact: modnMl.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite {2}(divn_eq m d) modm0 addn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn2",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "by rewrite /dvdn modn2; case (odd n).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_odd",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "by move=> m_dv_n; apply: contraTT; rewrite -!dvdn2 => /dvdn_trans->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divnK",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "by rewrite dvdn_eq; move/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_divLR",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "by case: d m => [|d] [|m] ///divnK=> {2}<-; rewrite leq_pmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_divRL",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "by move=> dv_d_m; rewrite !ltnNge leq_divLR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqn_div",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "by move=> d_gt0 dv_d_m; rewrite -(eqn_pmul2r d_gt0) divnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqn_mul",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "by move=> d_gt0 dv_d_m; rewrite eq_sym -eqn_div // eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "muln_divA",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "by move=> dv_d_m; rewrite !(mulnC m) divn_mulAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "muln_divCA",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "by move=> dv_d_m dv_d_n; rewrite mulnC divn_mulAC ?muln_divA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divnA",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "by case: p => [|p] dv_n; rewrite -{2}(divnK dv_n) // divnMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modn_dvdm",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "by case/dvdnP=> q def_m; rewrite {2}(divn_eq n m) {3}def_m mulnA modnMDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_leq",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "by move=> m_gt0 /dvdnP[[|k] Dm]; rewrite Dm // leq_addr in m_gt0 *.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtnNdvd",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0 lt_nd; rewrite /dvdn eqn0Ngt modn_small ?n_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_pmul2l",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "by case: p => // p _; rewrite /dvdn -muln_modr // muln_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_pmul2r",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "by move=> p_gt0; rewrite -!(mulnC p) dvdn_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_divLR",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "by move=> /(@dvdn_pmul2r p _ m) <- /divnK->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_divRL",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "have [-> | /(@dvdn_pmul2r p d) <- /divnK-> //] := posnP p.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite divn0 muln0 dvdn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_div",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "by move/divnK=> {2}<-; apply: dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_exp2l",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "by move/subnK <-; rewrite expnD dvdn_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_Pexp2l",
            "line_nb": 331,
            "steps": [
                {
                    "command": [
                        "move=> p_gt1; case: leqP => [|gt_n_m]; first exact: dvdn_exp2l.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite gtnNdvd ?ltn_exp2l ?expn_gt0 // ltnW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_exp2r",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "by case/dvdnP=> q ->; rewrite expnMn dvdn_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_addr",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "by case/dvdnP=> q ->; rewrite /dvdn modnMDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_addl",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "by rewrite addnC; apply: dvdn_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_add",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "by move/dvdn_addr->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_add_eq",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "by move=> dv_d_mn; apply/idP/idP => [/dvdn_addr | /dvdn_addl] <-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_subr",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "by move=> le_n_m dv_d_m; apply: dvdn_add_eq; rewrite subnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_subl",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "by move=> le_n_m dv_d_m; rewrite -(dvdn_addl _ dv_d_m) subnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_sub",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "by case: (leqP n m) => [le_nm /dvdn_subr <- // | /ltnW/eqnP ->]; rewrite dvdn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_exp",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "by case: k => // k _ d_dv_m; rewrite expnS dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_fact",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "case: m => //= m; elim: n => //= n IHn; rewrite ltnS leq_eqVlt.",
                        "VernacExtend",
                        "810b24f801b6f73dbb85b7524f481afcf2d89973"
                    ]
                },
                {
                    "command": [
                        "by case/predU1P=> [-> | /IHn]; [apply: dvdn_mulr | apply: dvdn_mull].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqn_mod_dvd",
            "line_nb": 367,
            "steps": [
                {
                    "command": [
                        "by move=> le_mn; rewrite -{1}[n]add0n -{1}(subnK le_mn) eqn_modDr mod0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divnDl",
            "line_nb": 370,
            "steps": [
                {
                    "command": [
                        "by case: d => // d /divnK{1}<-; rewrite divnMDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divnDr",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "by move=> dv_n; rewrite addnC divnDl // addnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnn",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "by case=> // n; rewrite gcdnE modnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnC",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "move=> m n; wlog lt_nm: m n / n < m.",
                        "VernacExtend",
                        "6dbaea969dd2e1a08b50e55e2e4c4949c4d27249"
                    ]
                },
                {
                    "command": [
                        "by case: (ltngtP n m) => [||-> //]; last symmetry; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcdnE -{1}(ltn_predK lt_nm) modn_small.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd0n",
            "line_nb": 393,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdn0",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd1n",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "by move=> n; rewrite gcdnE modn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdn1",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "by move=> n; rewrite gcdnC gcd1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_gcdr",
            "line_nb": 405,
            "steps": [
                {
                    "command": [
                        "elim: m {-2}m (leqnn m) n => [|s IHs] [|m] le_ms [|n] //.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite gcdnE; case def_n': (_ %% _) => [|n']; first by rewrite /dvdn def_n'.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have lt_n's: n' < s by rewrite -ltnS (leq_trans _ le_ms) // -def_n' ltn_pmod.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /= (divn_eq n.+1 m.+1) def_n' dvdn_addr ?dvdn_mull //; last exact: IHs.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcdnE /= IHs // (leq_trans _ lt_n's) // ltnW // ltn_pmod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_gcdl",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "by rewrite gcdnC dvdn_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdn_gt0",
            "line_nb": 415,
            "steps": [
                {
                    "command": [
                        "by case: m n => [|m] [|n] //; apply: (@dvdn_gt0 _ m.+1) => //; apply: dvdn_gcdl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnMDl",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "by rewrite !(gcdnE m) modnMDl mulnC; case: m.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnDl",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}(mul1n m) gcdnMDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnDr",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "by rewrite addnC gcdnDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnMl",
            "line_nb": 427,
            "steps": [
                {
                    "command": [
                        "by case: n => [|n]; rewrite gcdnE modnMl gcd0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnMr",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "by rewrite mulnC gcdnMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdn_idPl",
            "line_nb": 433,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP idP) => [/dvdnP[q ->] | <-]; rewrite (gcdnMl, dvdn_gcdr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdn_idPr",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "by rewrite gcdnC; apply: gcdn_idPl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expn_min",
            "line_nb": 439,
            "steps": [
                {
                    "command": [
                        "rewrite /minn; case: leqP; [rewrite gcdnC | move/ltnW]; by move/(dvdn_exp2l e)/gcdn_idPl.",
                        "VernacExtend",
                        "de3039c5418fc877e9679446cac67823ca7af3f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdn_modr",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "by rewrite {2}(divn_eq n m) gcdnMDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdn_modl",
            "line_nb": 445,
            "steps": [
                {
                    "command": [
                        "by rewrite !(gcdnC _ n) gcdn_modr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "egcd0n",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "by case: n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bezoutl",
            "line_nb": 492,
            "steps": [
                {
                    "command": [
                        "move=> m_gt0; case: (egcdnP n m_gt0) => km kn def_d lt_kn_m.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "exists kn; last by rewrite addnC -def_d dvdn_mull.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: leq_ltn_trans lt_kn_m.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}[kn]muln1 leq_mul2l gcdn_gt0 m_gt0 orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bezoutr",
            "line_nb": 498,
            "steps": [
                {
                    "command": [
                        "by rewrite gcdnC; apply: Bezoutl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_gcd",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "apply/idP/andP=> [dv_pmn | [dv_pm dv_pn]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(dvdn_trans dv_pmn) ?dvdn_gcdl ?dvdn_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case (posnP n) => [->|n_gt0]; first by rewrite gcdn0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (Bezoutr m n_gt0) => // km _ /(dvdn_trans dv_pn).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdn_addl // dvdn_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnAC",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "suffices dvd m n p: gcdn (gcdn m n) p %| gcdn (gcdn m p) n.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by move=> m n p; apply/eqP; rewrite eqn_dvd !dvd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !dvdn_gcd dvdn_gcdr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(dvdn_trans (dvdn_gcdl _ p)) ?dvdn_gcdl ?dvdn_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnA",
            "line_nb": 514,
            "steps": [
                {
                    "command": [
                        "by move=> m n p; rewrite !(gcdnC m) gcdnAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnCA",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "by move=> m n p; rewrite !gcdnA (gcdnC m).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdnACA",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "by move=> m n p q; rewrite -!gcdnA (gcdnCA n).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "muln_gcdr",
            "line_nb": 523,
            "steps": [
                {
                    "command": [
                        "move=> p m n; case: (posnP p) => [-> //| p_gt0].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "elim: {m}m.+1 {-2}m n (ltnSn m) => // s IHs m n; rewrite ltnS => le_ms.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "rewrite gcdnE [rhs in _ = rhs]gcdnE muln_eq0 (gtn_eqF p_gt0) -muln_modr //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: posnP => // m_gt0; apply: IHs; apply: leq_trans le_ms; apply: ltn_pmod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "muln_gcdl",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "by move=> m n p; rewrite -!(mulnC p) muln_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "muln_divCA_gcd",
            "line_nb": 536,
            "steps": [
                {
                    "command": [
                        "by rewrite muln_divCA ?dvdn_gcdl ?dvdn_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmnC",
            "line_nb": 540,
            "steps": [
                {
                    "command": [
                        "by move=> m n; rewrite /lcmn mulnC gcdnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm0n",
            "line_nb": 543,
            "steps": [
                {
                    "command": [
                        "by move=> n; apply: div0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmn0",
            "line_nb": 546,
            "steps": [
                {
                    "command": [
                        "by move=> n; rewrite lcmnC lcm0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm1n",
            "line_nb": 549,
            "steps": [
                {
                    "command": [
                        "by move=> n; rewrite /lcmn gcd1n mul1n divn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmn1",
            "line_nb": 552,
            "steps": [
                {
                    "command": [
                        "by move=> n; rewrite lcmnC lcm1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "muln_lcm_gcd",
            "line_nb": 555,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite divnK ?dvdn_mull ?dvdn_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmn_gt0",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "by rewrite -muln_gt0 ltn_divRL ?dvdn_mull ?dvdn_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "muln_lcmr",
            "line_nb": 561,
            "steps": [
                {
                    "command": [
                        "case=> // m n p; rewrite /lcmn -muln_gcdr -!mulnA divnMl // mulnCA.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite muln_divA ?dvdn_mull ?dvdn_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "muln_lcml",
            "line_nb": 565,
            "steps": [
                {
                    "command": [
                        "by move=> m n p; rewrite -!(mulnC p) muln_lcmr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmnA",
            "line_nb": 568,
            "steps": [
                {
                    "command": [
                        "move=> m n p; rewrite {1 3}/lcmn mulnC !divn_mulAC ?dvdn_mull ?dvdn_gcdr //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite -!divnMA ?dvdn_mulr ?dvdn_gcdl // mulnC mulnA !muln_gcdr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ![_ * lcmn _ _]mulnC !muln_lcm_gcd !muln_gcdl -!(mulnC m) gcdnA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmnCA",
            "line_nb": 573,
            "steps": [
                {
                    "command": [
                        "by move=> m n p; rewrite !lcmnA (lcmnC m).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmnAC",
            "line_nb": 576,
            "steps": [
                {
                    "command": [
                        "by move=> m n p; rewrite -!lcmnA (lcmnC n).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmnACA",
            "line_nb": 579,
            "steps": [
                {
                    "command": [
                        "by move=> m n p q; rewrite -!lcmnA (lcmnCA n).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_lcml",
            "line_nb": 582,
            "steps": [
                {
                    "command": [
                        "by rewrite /lcmn -muln_divA ?dvdn_gcdr ?dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_lcmr",
            "line_nb": 585,
            "steps": [
                {
                    "command": [
                        "by rewrite lcmnC dvdn_lcml.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_lcm",
            "line_nb": 588,
            "steps": [
                {
                    "command": [
                        "case: d1 d2 => [|d1] [|d2]; try by case: m => [|m]; rewrite ?lcmn0 ?andbF.",
                        "VernacExtend",
                        "700e4ba7c43aef376de752aa78d70ea0bf66a54e"
                    ]
                },
                {
                    "command": [
                        "rewrite -(@dvdn_pmul2r (gcdn d1.+1 d2.+1)) ?gcdn_gt0 // muln_lcm_gcd.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite muln_gcdr dvdn_gcd {1}mulnC andbC !dvdn_pmul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmnMl",
            "line_nb": 593,
            "steps": [
                {
                    "command": [
                        "by case: m => // m; rewrite /lcmn gcdnMr mulKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmnMr",
            "line_nb": 596,
            "steps": [
                {
                    "command": [
                        "by rewrite mulnC lcmnMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmn_idPr",
            "line_nb": 599,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP idP) => [/dvdnP[q ->] | <-]; rewrite (lcmnMr, dvdn_lcml).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmn_idPl",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "by rewrite lcmnC; apply: lcmn_idPr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expn_max",
            "line_nb": 605,
            "steps": [
                {
                    "command": [
                        "rewrite /maxn; case: leqP; [rewrite lcmnC | move/ltnW]; by move/(dvdn_exp2l e)/lcmn_idPr.",
                        "VernacExtend",
                        "de3039c5418fc877e9679446cac67823ca7af3f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime1n",
            "line_nb": 609,
            "steps": [
                {
                    "command": [
                        "by rewrite /coprime gcd1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimen1",
            "line_nb": 612,
            "steps": [
                {
                    "command": [
                        "by rewrite /coprime gcdn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_sym",
            "line_nb": 615,
            "steps": [
                {
                    "command": [
                        "by rewrite /coprime gcdnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_modl",
            "line_nb": 618,
            "steps": [
                {
                    "command": [
                        "by rewrite /coprime gcdn_modl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_modr",
            "line_nb": 621,
            "steps": [
                {
                    "command": [
                        "by rewrite /coprime gcdn_modr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime2n",
            "line_nb": 624,
            "steps": [
                {
                    "command": [
                        "by rewrite -coprime_modr modn2; case: (odd n).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimen2",
            "line_nb": 627,
            "steps": [
                {
                    "command": [
                        "by rewrite coprime_sym coprime2n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeSn",
            "line_nb": 630,
            "steps": [
                {
                    "command": [
                        "by rewrite -coprime_modl (modnDr 1) coprime_modl coprime1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimenS",
            "line_nb": 633,
            "steps": [
                {
                    "command": [
                        "by rewrite coprime_sym coprimeSn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimePn",
            "line_nb": 636,
            "steps": [
                {
                    "command": [
                        "by case: n => // n _; rewrite coprimenS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimenP",
            "line_nb": 639,
            "steps": [
                {
                    "command": [
                        "by case: n => // n _; rewrite coprimeSn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeP",
            "line_nb": 642,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; apply: (iffP eqP) => [<-| [[kn km] /= kn_km_1]].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by have [kn km kg _] := egcdnP m n_gt0; exists (kn, km); rewrite kg addKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply gcdn_def; rewrite ?dvd1n // => d dv_d_n dv_d_m.",
                        "VernacExtend",
                        "8103e50bb5116877ffbdb6fe80207e439ad7f1e4"
                    ]
                },
                {
                    "command": [
                        "by rewrite -kn_km_1 dvdn_subr ?dvdn_mull // ltnW // -subn_gt0 kn_km_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_dvd",
            "line_nb": 652,
            "steps": [
                {
                    "command": [
                        "by move=> co_mn; rewrite -muln_lcm_gcd (eqnP co_mn) muln1 dvdn_lcm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_dvdr",
            "line_nb": 655,
            "steps": [
                {
                    "command": [
                        "case: n => [|n] co_mn; first by case: m co_mn => [|[]] // _; rewrite !dvd1n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by symmetry; rewrite mulnC -(@dvdn_pmul2r n.+1) ?Gauss_dvd // andbC dvdn_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_dvdl",
            "line_nb": 659,
            "steps": [
                {
                    "command": [
                        "by rewrite mulnC; apply: Gauss_dvdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_double_leq",
            "line_nb": 662,
            "steps": [
                {
                    "command": [
                        "move=> m_dv_n odd_m even_n n_gt0.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite -muln2 dvdn_leq // Gauss_dvd ?coprimen2 ?m_dv_n ?dvdn2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_double_ltn",
            "line_nb": 666,
            "steps": [
                {
                    "command": [
                        "by case: n => //; apply: dvdn_double_leq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_gcdr",
            "line_nb": 669,
            "steps": [
                {
                    "command": [
                        "move=> co_pm; apply/eqP; rewrite eqn_dvd !dvdn_gcd !dvdn_gcdl /=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite andbC dvdn_mull ?dvdn_gcdr //= -(@Gauss_dvdr _ m) ?dvdn_gcdr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite /coprime gcdnAC (eqnP co_pm) gcd1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_gcdl",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "by move=> co_pn; rewrite mulnC Gauss_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_mulr",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "case co_pm: (coprime p m) => /=; first by rewrite /coprime Gauss_gcdr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP=> co_p_mn; case/eqnP: co_pm; apply gcdn_def => // d dv_dp dv_dm.",
                        "VernacExtend",
                        "28975652938dd8bbe0131de332439a54e4a7849e"
                    ]
                },
                {
                    "command": [
                        "by rewrite -co_p_mn dvdn_gcd dv_dp dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_mull",
            "line_nb": 682,
            "steps": [
                {
                    "command": [
                        "by rewrite -!(coprime_sym p) coprime_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_pexpl",
            "line_nb": 685,
            "steps": [
                {
                    "command": [
                        "case: k => // k _; elim: k => [|k IHk]; first by rewrite expn1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite expnS coprime_mull -IHk; case coprime.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_pexpr",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "by move=> k_gt0; rewrite !(coprime_sym m) coprime_pexpl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_expl",
            "line_nb": 692,
            "steps": [
                {
                    "command": [
                        "by case: k => [|k] co_pm; rewrite ?coprime1n // coprime_pexpl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_expr",
            "line_nb": 695,
            "steps": [
                {
                    "command": [
                        "by rewrite !(coprime_sym m); apply: coprime_expl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_dvdl",
            "line_nb": 698,
            "steps": [
                {
                    "command": [
                        "by case/dvdnP=> d ->; rewrite coprime_mull => /andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_dvdr",
            "line_nb": 701,
            "steps": [
                {
                    "command": [
                        "by rewrite !(coprime_sym p); apply: coprime_dvdl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_egcdn",
            "line_nb": 704,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; case: (egcdnP m n_gt0) => kn km /= /eqP.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "have [/dvdnP[u defn] /dvdnP[v defm]] := (dvdn_gcdl n m, dvdn_gcdr n m).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -[gcdn n m]mul1n {1}defm {1}defn !mulnA -mulnDl addnC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite eqn_pmul2r ?gcdn_gt0 ?n_gt0 //; case: kn => // kn /eqP def_knu _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by apply/coprimeP=> //; exists (u, v); rewrite mulnC def_knu mulnC addnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_pexp2r",
            "line_nb": 711,
            "steps": [
                {
                    "command": [
                        "move=> k_gt0; apply/idP/idP=> [dv_mn_k|]; last exact: dvdn_exp2r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (posnP n) => [-> | n_gt0]; first by rewrite dvdn0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [n' def_n] := dvdnP (dvdn_gcdr m n); set d := gcdn m n in def_n.",
                        "VernacExtend",
                        "81881a093b2294c76be3b432fbe83612064d7bc9"
                    ]
                },
                {
                    "command": [
                        "have [m' def_m] := dvdnP (dvdn_gcdl m n); rewrite -/d in def_m.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "have d_gt0: d > 0 by rewrite gcdn_gt0 n_gt0 orbT.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite def_m def_n !expnMn dvdn_pmul2r ?expn_gt0 ?d_gt0 // in dv_mn_k.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have: coprime (m' ^ k) (n' ^ k).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite coprime_pexpl // coprime_pexpr // /coprime -(eqn_pmul2r d_gt0) mul1n.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite muln_gcdl -def_m -def_n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /coprime -gcdn_modr (eqnP dv_mn_k) gcdn0 -(exp1n k).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (inj_eq (expIn k_gt0)) def_m; move/eqP->; rewrite mul1n dvdn_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "chinese_remainder",
            "line_nb": 727,
            "steps": [
                {
                    "command": [
                        "wlog le_yx : x y / y <= x; last by rewrite !eqn_mod_dvd // Gauss_dvd.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/orP: (leq_total y x); last rewrite !(eq_sym (x %% _)); auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "chinese_modl",
            "line_nb": 732,
            "steps": [
                {
                    "command": [
                        "rewrite /chinese; case: (posnP m2) co_m12 => [-> /eqnP | m2_gt0 _].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcdn0 => ->; rewrite !modn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: egcdnP => // k2 k1 def_m1 _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulnAC -mulnA def_m1 gcdnC (eqnP co_m12) mulnDr mulnA muln1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addnAC (mulnAC _ m1) -mulnDl modnMDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "chinese_modr",
            "line_nb": 739,
            "steps": [
                {
                    "command": [
                        "rewrite /chinese; case: (posnP m1) co_m12 => [-> /eqnP | m1_gt0 _].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcd0n => ->; rewrite !modn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (egcdnP m2) => // k1 k2 def_m2 _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite addnC mulnAC -mulnA def_m2 (eqnP co_m12) mulnDr mulnA muln1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addnAC (mulnAC _ m2) -mulnDl modnMDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "chinese_mod",
            "line_nb": 746,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite chinese_remainder //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite chinese_modl chinese_modr !modn_mod !eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}