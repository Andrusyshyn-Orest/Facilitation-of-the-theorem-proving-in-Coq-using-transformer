{
    "filename": "mathcomp/ssreflect/prime.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat seq path fintype.",
            "VernacRequire",
            "b129a41c9d68bf4661b5c15a77264a75c3e9092c"
        ],
        [
            "From mathcomp Require Import div bigop.",
            "VernacRequire",
            "2ddfc21a143500e6006f202e32c906758b8a0909"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Fixpoint edivn2 q r := if r is r'.+2 then edivn2 q.+1 r' else (q, r).",
            "VernacFixpoint",
            "f0908a2b135302e413d58dd301b9b6a39f14e2d5"
        ],
        [
            "Lemma edivn2P n : edivn_spec n 2 (edivn2 0 n).",
            "VernacStartTheoremProof",
            "ea7a3b2493c0e79caeea16d60f111f207da40a20"
        ],
        [
            "rewrite -[n]odd_double_half addnC -{1}[n./2]addn0 -{1}mul2n mulnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: n./2 {1 4}0 => [|r IHr] q; first by case (odd n) => /=.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite addSnnS; apply: IHr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint elogn2 e q r {struct q} := match q, r with | 0, _ | _, 0 => (e, q) | q'.+1, 1 => elogn2 e.+1 q' q' | q'.+1, r'.+2 => elogn2 e q' r' end.",
            "VernacFixpoint",
            "6507bd11c2ae9ca0219b6b31ab1cf9a0c4f60c99"
        ],
        [
            "Variant elogn2_spec n : nat * nat -> Type := Elogn2Spec e m of n = 2 ^ e * m.*2.+1 : elogn2_spec n (e, m).",
            "VernacInductive",
            "e6311d310e03f7bf96eff18d941071688dd554f3"
        ],
        [
            "Lemma elogn2P n : elogn2_spec n.+1 (elogn2 0 n n).",
            "VernacStartTheoremProof",
            "912c20493c9b9d49531255f7ffb50821e6c41308"
        ],
        [
            "rewrite -{1}[n.+1]mul1n -[1]/(2 ^ 0) -{1}(addKn n n) addnn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: n {1 4 6}n {2 3}0 (leqnn n) => [|q IHq] [|[|r]] e //=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/ltnW; apply: IHq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear 1; rewrite subn1 -[_.-1.+1]doubleS -mul2n mulnA -expnSr.",
            "VernacExtend",
            "7269f567828888ee8d89e5a0af3221fc3b3a61d5"
        ],
        [
            "by rewrite -{1}(addKn q q) addnn; apply: IHq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ifnz T n (x y : T) := if n is 0 then y else x.",
            "VernacDefinition",
            "098e34eb37f66fd28bbb7663ffa5fc10573a0258"
        ],
        [
            "Variant ifnz_spec T n (x y : T) : T -> Type := | IfnzPos of n > 0 : ifnz_spec n x y x | IfnzZero of n = 0 : ifnz_spec n x y y.",
            "VernacInductive",
            "ae985fb7297e790b85c19f101baf734608c6c1ab"
        ],
        [
            "Lemma ifnzP T n (x y : T) : ifnz_spec n x y (ifnz n x y).",
            "VernacStartTheoremProof",
            "68ac155da64716486584026ed5f99f969aa0c3c4"
        ],
        [
            "by case: n => [|n]; [right | left].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition NumFactor (f : nat * nat) := ([Num of f.1], f.2).",
            "VernacDefinition",
            "ac8689659a9bbe205a1ea52d5936a7b649bc69e6"
        ],
        [
            "Definition pfactor p e := p ^ e.",
            "VernacDefinition",
            "4ecb121d69047bae61ff577e2c23b6707039cad5"
        ],
        [
            "Definition cons_pfactor (p e : nat) pd := ifnz e ((p, e) :: pd) pd.",
            "VernacDefinition",
            "0744351688ce1a2f6061c3207b0004772a97dc29"
        ],
        [
            "Local Notation \"p ^? e :: pd\" := (cons_pfactor p e pd) (at level 30, e at level 30, pd at level 60) : nat_scope.",
            "VernacNotation",
            "113202ae3f7e439def0aa82a5c90efcbf3adb337"
        ],
        [
            "Section prime_decomp.",
            "VernacBeginSection",
            "d98c3a570b6dfada168b733e5bdd8a691109b534"
        ],
        [
            "Import NatTrec.",
            "VernacImport",
            "3fd9423feb5bef67b8445432ed6db13142dd3e2a"
        ],
        [
            "Fixpoint prime_decomp_rec m k a b c e := let p := k.*2.+1 in if a is a'.+1 then if b - (ifnz e 1 k - c) is b'.+1 then [rec m, k, a', b', ifnz c c.-1 (ifnz e p.-2 1), e] else if (b == 0) && (c == 0) then let b' := k + a' in [rec b'.*2.+3, k, a', b', k.-1, e.+1] else let bc' := ifnz e (ifnz b (k, 0) (edivn2 0 c)) (b, c) in p ^? e :: ifnz a' [rec m, k.+1, a'.-1, bc'.1 + a', bc'.2, 0] [:: (m, 1)] else if (b == 0) && (c == 0) then [:: (p, e.+2)] else p ^? e :: [:: (m, 1)] where \"[ 'rec' m , k , a , b , c , e ]\" := (prime_decomp_rec m k a b c e).",
            "VernacFixpoint",
            "e9bd5718836bd216b4ff664c9d6e74890551ac4c"
        ],
        [
            "Definition prime_decomp n := let: (e2, m2) := elogn2 0 n.-1 n.-1 in if m2 < 2 then 2 ^? e2 :: 3 ^? m2 :: [::] else let: (a, bc) := edivn m2.-2 3 in let: (b, c) := edivn (2 - bc) 2 in 2 ^? e2 :: [rec m2.*2.+1, 1, a, b, c, 0].",
            "VernacDefinition",
            "4e77d2ad475e9deaa7e7d157d3071a82889dce91"
        ],
        [
            "Definition add_divisors f divs := let: (p, e) := f in let add1 divs' := merge leq (map (NatTrec.mul p) divs') divs in iter e add1 divs.",
            "VernacDefinition",
            "cff56b6321cd569b687b92a28871c43b227e0bdf"
        ],
        [
            "Definition add_totient_factor f m := let: (p, e) := f in p.-1 * p ^ e.-1 * m.",
            "VernacDefinition",
            "d1a6d87d4dffcc66ccbf44bd0c902f17e4c8b637"
        ],
        [
            "End prime_decomp.",
            "VernacEndSegment",
            "2685a248ef2a7053bd7de4699d33ee7a9c5b9f8a"
        ],
        [
            "Definition primes n := unzip1 (prime_decomp n).",
            "VernacDefinition",
            "cf960c04891cb2034849bc9acf4b5160e58ea62a"
        ],
        [
            "Definition prime p := if prime_decomp p is [:: (_ , 1)] then true else false.",
            "VernacDefinition",
            "4a22a9470bd762bcd4adc3b7fec55b724af86b6b"
        ],
        [
            "Definition nat_pred := simpl_pred nat.",
            "VernacDefinition",
            "4f4b1c6be568baa5876438adac3cec1b300c33a4"
        ],
        [
            "Definition pi_unwrapped_arg := nat.",
            "VernacDefinition",
            "b0293e32258131acdf1a5d40ec30c1a52a59f53d"
        ],
        [
            "Definition pi_wrapped_arg := wrapped nat.",
            "VernacDefinition",
            "2ce123f7e7a4c2a6a33d806a1114c537f3f9a71e"
        ],
        [
            "Coercion unwrap_pi_arg (wa : pi_wrapped_arg) : pi_unwrapped_arg := unwrap wa.",
            "VernacDefinition",
            "62f15623c5c927ca1714d94e06199d33e0799268"
        ],
        [
            "Coercion pi_arg_of_nat (n : nat) := Wrap n : pi_wrapped_arg.",
            "VernacDefinition",
            "9c5c84204fcca570ad7c3c0494011ceb35816d80"
        ],
        [
            "Coercion pi_arg_of_fin_pred T pT (A : @fin_pred_sort T pT) : pi_wrapped_arg := Wrap #|A|.",
            "VernacDefinition",
            "b8b3406a53d9aed6b6e9c302c2bbad47a6a8806e"
        ],
        [
            "Definition pi_of (n : pi_unwrapped_arg) : nat_pred := [pred p in primes n].",
            "VernacDefinition",
            "240d99ab3462617554f17018c9329fa02da45621"
        ],
        [
            "Notation \"\\pi ( n )\" := (pi_of n) (at level 2, format \"\\pi ( n )\") : nat_scope.",
            "VernacNotation",
            "c2a25123694e8933e3182fdaa5ae0f6492ca91a8"
        ],
        [
            "Notation \"\\p 'i' ( A )\" := \\pi(#|A|) (at level 2, format \"\\p 'i' ( A )\") : nat_scope.",
            "VernacNotation",
            "de000cc19313112265f75285f442917de2fe22c0"
        ],
        [
            "Definition pdiv n := head 1 (primes n).",
            "VernacDefinition",
            "308bdbce63e26c1313ba7610352d64d83b6bc7e5"
        ],
        [
            "Definition max_pdiv n := last 1 (primes n).",
            "VernacDefinition",
            "3d9d9d767cd596c299656834e10616b0a5d71a1b"
        ],
        [
            "Definition divisors n := foldr add_divisors [:: 1] (prime_decomp n).",
            "VernacDefinition",
            "63bfb5cb46ebd0b68e068fe32c57a254edff8cf0"
        ],
        [
            "Definition totient n := foldr add_totient_factor (n > 0) (prime_decomp n).",
            "VernacDefinition",
            "4fea7284803c0a8f9dbe08e659c782cf62b7ac86"
        ],
        [
            "Lemma prime_decomp_correct : let pd_val pd := \\prod_(f <- pd) pfactor f.1 f.2 in let lb_dvd q m := ~~ has [pred d | d %| m] (index_iota 2 q) in let pf_ok f := lb_dvd f.1 f.1 && (0 < f.2) in let pd_ord q pd := path ltn q (unzip1 pd) in let pd_ok q n pd := [/\\ n = pd_val pd, all pf_ok pd & pd_ord q pd] in forall n, n > 0 -> pd_ok 1 n (prime_decomp n).",
            "VernacStartTheoremProof",
            "c3216ba6514bbb28ddd7ce2aeaa33bdaeead4fe9"
        ],
        [
            "rewrite unlock => pd_val lb_dvd pf_ok pd_ord pd_ok.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have leq_pd_ok m p q pd: q <= p -> pd_ok p m pd -> pd_ok q m pd.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /pd_ok /pd_ord; case: pd => [|[r _] pd] //= leqp [<- ->].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case/andP=> /(leq_trans _)->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have apd_ok m e q p pd: lb_dvd p p || (e == 0) -> q < p -> pd_ok p m pd -> pd_ok q (p ^ e * m) (p ^? e :: pd).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: e => [|e]; rewrite orbC /= => pr_p ltqp.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite mul1n; apply: leq_pd_ok; apply: ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /pd_ok /pd_ord /pf_ok /= pr_p ltqp => [[<- -> ->]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=> // n _; rewrite /prime_decomp.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: elogn2P => e2 m2 -> {n}; case: m2 => [|[|abc]]; try exact: apd_ok.",
            "VernacExtend",
            "5f6810a08b87723027f380f5f5a916c4d0cd1c85"
        ],
        [
            "rewrite [_.-2]/= !ltnS ltn0 natTrecE; case: edivnP => a bc ->{abc}.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case: edivnP => b c def_bc /= ltc2 ltbc3; apply: (apd_ok) => //.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "move def_m: _.*2.+1 => m; set k := {2}1; rewrite -[2]/k.*2; set e := 0.",
            "VernacExtend",
            "754effea06246679543e613d0a2eac0333a1504e"
        ],
        [
            "pose p := k.*2.+1; rewrite -{1}[m]mul1n -[1]/(p ^ e)%N.",
            "VernacExtend",
            "de7a4b42b1ef81b17722dd81c9c5b9378b46a6e7"
        ],
        [
            "have{def_m bc def_bc ltc2 ltbc3}: let kb := (ifnz e k 1).*2 in [&& k > 0, p < m, lb_dvd p m, c < kb & lb_dvd p p || (e == 0)] /\\ m + (b * kb + c).*2 = p ^ 2 + (a * p).*2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -{-2}def_m; split=> //=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -def_bc addSn -doubleD 2!addSn -addnA subnKC // addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ltc2 /lb_dvd /index_iota /= dvdn2 -def_m.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [_.+2]lock /= odd_double.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: {2}a.+1 (ltnSn a) => n; clearbody k e.",
            "VernacExtend",
            "69f762ded9ef13df492164d119030d4051e77cdd"
        ],
        [
            "elim: n => // n IHn in a k p m b c e *; rewrite ltnS => le_a_n [].",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "set kb := _.*2; set d := _ + c => /and5P[lt0k ltpm leppm ltc pr_p def_m].",
            "VernacExtend",
            "ced270260aea2dd3ab523a646806c84962140531"
        ],
        [
            "have def_k1: k.-1.+1 = k := ltn_predK lt0k.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_kb1: kb.-1.+1 = kb by rewrite /kb -def_k1; case e.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have eq_bc_0: (b == 0) && (c == 0) = (d == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite addn_eq0 muln_eq0 orbC -def_kb1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have lt1p: 1 < p by rewrite ltnS double_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have co_p_2: coprime p 2 by rewrite /coprime gcdnC gcdnE modn2 /= odd_double.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have if_d0: d = 0 -> [/\\ m = (p + a.*2) * p, lb_dvd p p & lb_dvd p (p + a.*2)].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> d0; have{d0 def_m} def_m: m = (p + a.*2) * p.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite d0 addn0 -mulnn -!mul2n mulnA -mulnDl in def_m *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> //; apply/hasPn=> r /(hasPn leppm); apply: contra => /= dv_r.",
            "VernacExtend",
            "c03c49ee818673107bc66d70827b13050eb69520"
        ],
        [
            "by rewrite def_m dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite def_m dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case def_a: a => [|a'] /= in le_a_n *; rewrite !natTrecE -/p {}eq_bc_0.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: d if_d0 def_m => [[//| def_m {pr_p}pr_p pr_m'] _ | d _ def_m] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite def_m def_a addn0 mulnA -2!expnSr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by split; rewrite /pd_ord /pf_ok /= ?muln1 ?pr_p ?leqnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: apd_ok; rewrite // /pd_ok /= /pfactor expn1 muln1 /pd_ord /= ltpm.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /pf_ok !andbT /=; split=> //; apply: contra leppm.",
            "VernacExtend",
            "b6a6e2560678dcfd8f1a5f2ca82748c79b5f92ee"
        ],
        [
            "case/hasP=> r /=; rewrite mem_index_iota => /andP[lt1r ltrm] dvrm; apply/hasP.",
            "VernacExtend",
            "c9a31b5c3dbfd076b1a173b39b5981bc72187636"
        ],
        [
            "have [ltrp | lepr] := ltnP r p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists r; rewrite // mem_index_iota lt1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/dvdnP: dvrm => q def_q; exists q; last by rewrite def_q /= dvdn_mulr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite mem_index_iota -(ltn_pmul2r (ltnW lt1r)) -def_q mul1n ltrm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: def_m; rewrite def_a addn0 -(@ltn_pmul2r p) // mulnn => <-.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply: (@leq_ltn_trans m); first by rewrite def_q leq_mul.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -addn1 leq_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_k2: k.*2 = ifnz e 1 k * kb.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /kb; case: (e) => [|e']; rewrite (mul1n, muln2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case def_b': (b - _) => [|b']; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have ->: ifnz e k.*2.-1 1 = kb.-1 by rewrite /kb; case e.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: IHn => {n le_a_n}//; rewrite -/p -/kb; split=> //.",
            "VernacExtend",
            "877072eca2b60ab32889d658e076eb026578eeca"
        ],
        [
            "rewrite lt0k ltpm leppm pr_p andbT /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: ifnzP; [move/ltn_predK->; apply: ltnW | rewrite def_kb1].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (@addIn p.*2).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -2!addnA -!doubleD -addnA -mulSnr -def_a -def_m /d.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have ->: b * kb = b' * kb + (k.*2 - c * kb + kb).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite addnCA addnC -mulSnr -def_b' def_k2 -mulnBl -mulnDl subnK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ltnW // -subn_gt0 def_b'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -addnA; congr (_ + (_ + _).*2).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "case: (c) ltc; first by rewrite -addSnnS def_kb1 subn0 addn0 addnC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /kb; case e => [[] // _ | e' c' _] /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite subnDA subnn addnC addSnnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite mul1n -doubleB -doubleD subn1 !addn1 def_k1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ltdp: d < p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/eqP: def_b'; rewrite subn_eq0 -(@leq_pmul2r kb); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -def_kb1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulnBl -def_k2 ltnS -(leq_add2r c); move/leq_trans; apply.",
            "VernacExtend",
            "51aaa5926a842aa51cb89019951e89d84e9e8192"
        ],
        [
            "have{ltc} ltc: c < k.*2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: (leq_trans ltc); rewrite leq_double /kb; case e.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{2}(subnK (ltnW ltc)) leq_add2r leq_sub2l //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -def_kb1 mulnS leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case def_d: d if_d0 => [|d'] => [[//|{def_m ltdp pr_p} def_m pr_p pr_m'] | _].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite eqxx -doubleS -addnS -def_a doubleD -addSn -/p def_m.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulnCA mulnC -expnSr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: IHn => {n le_a_n}//; rewrite -/p -/kb; split.",
            "VernacExtend",
            "6042563d4769908a43211445d5113940496ff2e8"
        ],
        [
            "rewrite lt0k -addn1 leq_add2l {1}def_a pr_m' pr_p /= def_k1 -addnn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -addnA -doubleD addnCA def_a addSnnS def_k1 -(addnC k) -mulnSr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[_.*2.+1]/p mulnDl doubleD addnA -mul2n mulnA mul2n -mulSn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -/p mulnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have next_pm: lb_dvd p.+2 m.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /lb_dvd /index_iota 2!subSS subn0 -(subnK lt1p) iota_add.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite has_cat; apply/norP; split=> //=; rewrite orbF subnKC // orbC.",
            "VernacExtend",
            "973ea40551376b84174b5c46cddc941522854480"
        ],
        [
            "apply/norP; split; apply/dvdnP=> [[q def_q]].",
            "VernacExtend",
            "acf5855cc010871228abcccac05ae5fee2482818"
        ],
        [
            "case/hasP: leppm; exists 2; first by rewrite /p -(subnKC lt0k).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /= def_q dvdn_mull // dvdn2 /= odd_double.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/(congr1 (dvdn p)): def_m; rewrite -mulnn -!mul2n mulnA -mulnDl.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite dvdn_mull // dvdn_addr; last by rewrite def_q dvdn_mull.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/dvdnP=> r; rewrite mul2n => def_r; move: ltdp (congr1 odd def_r).",
            "VernacExtend",
            "a89caf520f181bf9e13d79da0c490f8a4f248ff2"
        ],
        [
            "rewrite odd_double -ltn_double {1}def_r -mul2n ltn_pmul2r //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: r def_r => [|[|[]]] //; rewrite def_d // mul1n /= odd_double.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: apd_ok => //; case: a' def_a le_a_n => [|a'] def_a => [_ | lta] /=.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite /pd_ok /= /pfactor expn1 muln1 /pd_ord /= ltpm /pf_ok !andbT /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split=> //; apply: contra next_pm.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "case/hasP=> q; rewrite mem_index_iota => /andP[lt1q ltqm] dvqm; apply/hasP.",
            "VernacExtend",
            "c9a31b5c3dbfd076b1a173b39b5981bc72187636"
        ],
        [
            "have [ltqp | lepq] := ltnP q p.+2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists q; rewrite // mem_index_iota lt1q.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/dvdnP: dvqm => r def_r; exists r; last by rewrite def_r /= dvdn_mulr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite mem_index_iota -(ltn_pmul2r (ltnW lt1q)) -def_r mul1n ltqm /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(@ltn_pmul2l p.+2) //; apply: (@leq_ltn_trans m).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite def_r mulnC leq_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -addn2 mulnn sqrnD mul2n muln2 -addnn addnCA -addnA addnCA addnA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite def_a mul1n in def_m; rewrite -def_m addnS -addnA ltnS leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set bc := ifnz _ _ _; apply: leq_pd_ok (leqnSn _) _.",
            "VernacExtend",
            "0efc893cd6f40fa03714e330608ed1eb1de1560e"
        ],
        [
            "rewrite -doubleS -{1}[m]mul1n -[1]/(k.+1.*2.+1 ^ 0)%N.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: IHn; first exact: ltnW.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite doubleS -/p [ifnz 0 _ _]/=; do 2?split => //.",
            "VernacExtend",
            "6a72213b8ff230d3c557d3c0d5b7e6e6d5c919ed"
        ],
        [
            "rewrite orbT next_pm /= -(leq_add2r d.*2) def_m 2!addSnnS -doubleS leq_add.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: ltc; rewrite /kb {}/bc andbT; case e => //= e' _; case: ifnzP => //.",
            "VernacExtend",
            "74f1efb856395639440c5697bc92e5df6d1bb64a"
        ],
        [
            "by case: edivn2P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -{1}[p]muln1 -mulnn ltn_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite leq_double def_a mulSn (leq_trans ltdp) ?leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulnDl !muln2 -addnA addnCA doubleD addnCA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (_ : _ + bc.2 = d); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /d {}/bc /kb -muln2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (e) (b) def_b' => //= _ []; first by case: edivn2P.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case c; do 2?case; rewrite // mul1n /= muln2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite def_m 3!doubleS addnC -(addn2 p) sqrnD mul2n muln2 -3!addnA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (_ + _); rewrite 4!addnS -!doubleD; congr _.*2.+2.+2.",
            "VernacExtend",
            "516f18a2bd545145111a2197b98c801fe2c297f5"
        ],
        [
            "by rewrite def_a -add2n mulnDl -addnA -muln2 -mulnDr mul2n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primePn n : reflect (n < 2 \\/ exists2 d, 1 < d < n & d %| n) (~~ prime n).",
            "VernacStartTheoremProof",
            "7d88cd8270a712b1c25a045610c04b118e5bbb8e"
        ],
        [
            "rewrite /prime; case: n => [|[|p2]]; try by do 2!left.",
            "VernacExtend",
            "17c267b15499613694207e94ac80f6b00681f671"
        ],
        [
            "case: (@prime_decomp_correct p2.+2) => //; rewrite unlock.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: prime_decomp => [|[q [|[|e]]] pd] //=; last first; last by rewrite andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite {1}/pfactor 2!expnS -!mulnA /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (_ ^ _ * _) => [|u -> _ /andP[lt1q _]]; first by rewrite !muln0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "left; right; exists q; last by rewrite dvdn_mulr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have lt0q := ltnW lt1q; rewrite lt1q -{1}[q]muln1 ltn_pmul2l //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite -[2]muln1 leq_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}/pfactor expn1; case: pd => [|[r e] pd] /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: e => [|e] /=; first by rewrite !andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite {1}/pfactor expnS -mulnA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (_ ^ _ * _) => [|u -> _ /and3P[lt1q ltqr _]]; first by rewrite !muln0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "left; right; exists q; last by rewrite dvdn_mulr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite lt1q -{1}[q]mul1n ltn_mul // -[q.+1]muln1 leq_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite muln1 !andbT => def_q pr_q lt1q; right=> [[]] // [d].",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "by rewrite def_q -mem_index_iota => in_d_2q dv_d_q; case/hasP: pr_q; exists d.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primeP p : reflect (p > 1 /\\ forall d, d %| p -> xpred2 1 p d) (prime p).",
            "VernacStartTheoremProof",
            "e057c1b3e3ced88db897b25e4b5a8c4dc90419ec"
        ],
        [
            "rewrite -[prime p]negbK; have [npr_p | pr_p] := primePn p.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "right=> [[lt1p pr_p]]; case: npr_p => [|[d n1pd]].",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "by rewrite ltnNge lt1p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/pr_p=> /orP[] /eqP def_d; rewrite def_d ltnn ?andbF in n1pd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [lep1 | lt1p] := leqP; first by case: pr_p; left.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "left; split=> // d dv_d_p; apply/norP=> [[nd1 ndp]]; case: pr_p; right.",
            "VernacExtend",
            "7c17ff5f141c4fca1110ee2aeb76337518a0b7da"
        ],
        [
            "exists d; rewrite // andbC 2!ltn_neqAle ndp eq_sym nd1.",
            "VernacExtend",
            "5feff67e5aab0a5d8cc350202e7f92898c264a30"
        ],
        [
            "by have lt0p := ltnW lt1p; rewrite dvdn_leq // (dvdn_gt0 lt0p).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prime_nt_dvdP d p : prime p -> d != 1 -> reflect (d = p) (d %| p).",
            "VernacStartTheoremProof",
            "aae73b656214511e2b13f9290cc3fd665e9fca4f"
        ],
        [
            "case/primeP=> _ min_p d_neq1; apply: (iffP idP) => [/min_p|-> //].",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by rewrite (negPf d_neq1) /= => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments primeP {p}.",
            "VernacArguments",
            "897ac3f8eec895574b6815037fd5453795c80cfe"
        ],
        [
            "Arguments primePn {n}.",
            "VernacArguments",
            "3dd06d0b2df49e46a8db58cc96b4b2595e614f19"
        ],
        [
            "Lemma prime_gt1 p : prime p -> 1 < p.",
            "VernacStartTheoremProof",
            "c6a3ab6057c931624aa2407b3453d0855bc37e78"
        ],
        [
            "by case/primeP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prime_gt0 p : prime p -> 0 < p.",
            "VernacStartTheoremProof",
            "4b8bfb8b3b9c9da257142d5a542c856824c79c38"
        ],
        [
            "by move/prime_gt1; apply: ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve prime_gt1 prime_gt0 : core.",
            "VernacHints",
            "4435e50c0b190a77607c0e1332f46ab6378bd27f"
        ],
        [
            "Lemma prod_prime_decomp n : n > 0 -> n = \\prod_(f <- prime_decomp n) f.1 ^ f.2.",
            "VernacStartTheoremProof",
            "ed9d89f303e2713f044ebe930a4923a6b947d449"
        ],
        [
            "by case/prime_decomp_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_prime p : prime p -> p = 2 \\/ odd p.",
            "VernacStartTheoremProof",
            "82853ccdbc7217b7373c5844fcfbadd4c8c3e057"
        ],
        [
            "move=> pr_p; case odd_p: (odd p); [by right | left].",
            "VernacExtend",
            "2bd32265a7edcab01d08991c29e54f5dd6b32892"
        ],
        [
            "have: 2 %| p by rewrite dvdn2 odd_p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/primeP: pr_p => _ dv_p /dv_p/(2 =P p).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prime_oddPn p : prime p -> reflect (p = 2) (~~ odd p).",
            "VernacStartTheoremProof",
            "6de3fa29deddbc493db7bf2d09cf4eaf15a09172"
        ],
        [
            "by move=> p_pr; apply: (iffP idP) => [|-> //]; case/even_prime: p_pr => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_prime_gt2 p : odd p -> prime p -> p > 2.",
            "VernacStartTheoremProof",
            "a4fa6cae4f6d5c3261d59f6b74b7f36de33f42fb"
        ],
        [
            "by move=> odd_p /prime_gt1; apply: odd_gt2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_prime_decomp n p e : (p, e) \\in prime_decomp n -> [/\\ prime p, e > 0 & p ^ e %| n].",
            "VernacStartTheoremProof",
            "2ba4e786cd5f9b446e02bd5f18d75ba7a8301808"
        ],
        [
            "case: (posnP n) => [-> //| /prime_decomp_correct[def_n mem_pd ord_pd pd_pe]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have /andP[pr_p ->] := allP mem_pd _ pd_pe; split=> //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/splitPr: pd_pe def_n => pd1 pd2 ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite big_cat big_cons /= mulnCA dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have lt1p: 1 < p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (allP (order_path_min ltn_trans ord_pd)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/mapP; exists (p, e).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/primeP; split=> // d dv_d_p; apply/norP=> [[nd1 ndp]].",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "case/hasP: pr_p; exists d => //.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite mem_index_iota andbC 2!ltn_neqAle ndp eq_sym nd1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by have lt0p := ltnW lt1p; rewrite dvdn_leq // (dvdn_gt0 lt0p).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prime_coprime p m : prime p -> coprime p m = ~~ (p %| m).",
            "VernacStartTheoremProof",
            "41d9a5cfe6700db293bd9fdc747a9c8e21d3ecc8"
        ],
        [
            "case/primeP=> p_gt1 p_pr; apply/eqP/negP=> [d1 | ndv_pm].",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "case/dvdnP=> k def_m; rewrite -(addn0 m) def_m gcdnMDl gcdn0 in d1.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite d1 in p_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: gcdn_def => // d /p_pr /orP[] /eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_prime2 p q : prime p -> prime q -> (p %| q) = (p == q).",
            "VernacStartTheoremProof",
            "d14d2d0a2729a7476b3b63508281bebba74466e9"
        ],
        [
            "move=> pr_p pr_q; apply: negb_inj.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite eqn_dvd negb_and -!prime_coprime // coprime_sym orbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Euclid_dvdM m n p : prime p -> (p %| m * n) = (p %| m) || (p %| n).",
            "VernacStartTheoremProof",
            "8470259ffff18efbeaec1d5314ac1248116ad962"
        ],
        [
            "move=> pr_p; case dv_pm: (p %| m); first exact: dvdn_mulr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite Gauss_dvdr // prime_coprime // dv_pm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Euclid_dvd1 p : prime p -> (p %| 1) = false.",
            "VernacStartTheoremProof",
            "e3c411b32b79292f70688a01e48c3ebb6abe7258"
        ],
        [
            "by rewrite dvdn1; case: eqP => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Euclid_dvdX m n p : prime p -> (p %| m ^ n) = (p %| m) && (n > 0).",
            "VernacStartTheoremProof",
            "d9943fd52a12f5c66a9c911e51713f84b42f4766"
        ],
        [
            "case: n => [|n] pr_p; first by rewrite andbF Euclid_dvd1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: (inv_inj negbK); rewrite !andbT -!prime_coprime // coprime_pexpr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_primes p n : (p \\in primes n) = [&& prime p, n > 0 & p %| n].",
            "VernacStartTheoremProof",
            "3aad16746eae5da313a0209cd8a5d13141811d34"
        ],
        [
            "rewrite andbCA; case: posnP => [-> // | /= n_gt0].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply/mapP/andP=> [[[q e]]|[pr_p]] /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case/mem_prime_decomp=> pr_q e_gt0; case/dvdnP=> u -> -> {p}.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite -(prednK e_gt0) expnS mulnCA dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}(prod_prime_decomp n_gt0) big_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply big_ind => [| u v IHu IHv | [q e] /= mem_qe dv_p_qe].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite Euclid_dvd1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite Euclid_dvdM // => /orP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (q, e) => //=; case/mem_prime_decomp: mem_qe => pr_q _ _.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "by rewrite Euclid_dvdX // dvdn_prime2 // in dv_p_qe; case: eqP dv_p_qe.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_primes n : sorted ltn (primes n).",
            "VernacStartTheoremProof",
            "443b03f73842b804eeade66f7d311ed0fda680e2"
        ],
        [
            "by case: (posnP n) => [-> // | /prime_decomp_correct[_ _]]; apply: path_sorted.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_primes m n : (primes m =i primes n) <-> (primes m = primes n).",
            "VernacStartTheoremProof",
            "7baa744ee28c1e93b41df1bc1eed5c9f17edeb8c"
        ],
        [
            "split=> [eqpr| -> //].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply: (eq_sorted_irr ltn_trans ltnn); rewrite ?sorted_primes.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primes_uniq n : uniq (primes n).",
            "VernacStartTheoremProof",
            "8e92112c358247bbe3316482c61ce3a5c98f3c76"
        ],
        [
            "exact: (sorted_uniq ltn_trans ltnn (sorted_primes n)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi_pdiv n : (pdiv n \\in \\pi(n)) = (n > 1).",
            "VernacStartTheoremProof",
            "6e2b29c74efaab0e92fb3e2cf24f11eca07c148b"
        ],
        [
            "case: n => [|[|n]] //; rewrite /pdiv !inE /primes.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "have:= prod_prime_decomp (ltn0Sn n.+1); rewrite unlock.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by case: prime_decomp => //= pf pd _; rewrite mem_head.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pdiv_prime n : 1 < n -> prime (pdiv n).",
            "VernacStartTheoremProof",
            "dd3b6799a2545ff6578393fec8cbc8538a4f926c"
        ],
        [
            "by rewrite -pi_pdiv mem_primes; case/and3P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pdiv_dvd n : pdiv n %| n.",
            "VernacStartTheoremProof",
            "676d62041ded589c8c7a5ae655e62000def0a9ea"
        ],
        [
            "by case: n (pi_pdiv n) => [|[|n]] //; rewrite mem_primes=> /and3P[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi_max_pdiv n : (max_pdiv n \\in \\pi(n)) = (n > 1).",
            "VernacStartTheoremProof",
            "d2e36e4a1cf004d96bc4e7bda3505c50625eafa9"
        ],
        [
            "rewrite !inE -pi_pdiv /max_pdiv /pdiv !inE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (primes n) => //= p ps; rewrite mem_head mem_last.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_pdiv_prime n : n > 1 -> prime (max_pdiv n).",
            "VernacStartTheoremProof",
            "b54f10a043a909252beb6e904a526c518815c62f"
        ],
        [
            "by rewrite -pi_max_pdiv mem_primes => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_pdiv_dvd n : max_pdiv n %| n.",
            "VernacStartTheoremProof",
            "bf9fab9a4bc3225ee807bdbd9dacfd973564184b"
        ],
        [
            "by case: n (pi_max_pdiv n) => [|[|n]] //; rewrite mem_primes => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pdiv_leq n : 0 < n -> pdiv n <= n.",
            "VernacStartTheoremProof",
            "dbe6b34f38ad2258dda57412a53ae609031f4aa4"
        ],
        [
            "by move=> n_gt0; rewrite dvdn_leq // pdiv_dvd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_pdiv_leq n : 0 < n -> max_pdiv n <= n.",
            "VernacStartTheoremProof",
            "aa277d611c918cdeb5ee325d4b83ade608d12d1f"
        ],
        [
            "by move=> n_gt0; rewrite dvdn_leq // max_pdiv_dvd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pdiv_gt0 n : 0 < pdiv n.",
            "VernacStartTheoremProof",
            "8b2ce2aca4e4d1e5f3bc174c9380aaf588265dff"
        ],
        [
            "by case: n => [|[|n]] //; rewrite prime_gt0 ?pdiv_prime.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_pdiv_gt0 n : 0 < max_pdiv n.",
            "VernacStartTheoremProof",
            "b65278beb7989384bc0613f81c1e80b2ba1231c4"
        ],
        [
            "by case: n => [|[|n]] //; rewrite prime_gt0 ?max_pdiv_prime.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve pdiv_gt0 max_pdiv_gt0 : core.",
            "VernacHints",
            "49d764aa5b3ca782553169d6084dcf5c343c4a74"
        ],
        [
            "Lemma pdiv_min_dvd m d : 1 < d -> d %| m -> pdiv m <= d.",
            "VernacStartTheoremProof",
            "0757cde82f1de82ac05eb7883bfaf4c63e8b23bf"
        ],
        [
            "move=> lt1d dv_d_m; case: (posnP m) => [->|mpos]; first exact: ltnW.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /pdiv; apply: leq_trans (pdiv_leq (ltnW lt1d)).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have: pdiv d \\in primes m.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mem_primes mpos pdiv_prime // (dvdn_trans (pdiv_dvd d)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (primes m) (sorted_primes m) => //= p pm ord_pm.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite inE => /predU1P[-> //|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by move/(allP (order_path_min ltn_trans ord_pm)); apply: ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_pdiv_max n p : p \\in \\pi(n) -> p <= max_pdiv n.",
            "VernacStartTheoremProof",
            "31e3500f115f6ebffbc5bf6bab08be6804c78813"
        ],
        [
            "rewrite /max_pdiv !inE => n_p.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case/splitPr: n_p (sorted_primes n) => p1 p2; rewrite last_cat -cat_rcons /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite headI /= cat_path -(last_cons 0) -headI last_rcons; case/andP=> _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "move/(order_path_min ltn_trans); case/lastP: p2 => //= p2 q.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite all_rcons last_rcons ltn_neqAle -andbA => /and3P[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_pdiv2_prime n : 0 < n -> n < pdiv n ^ 2 -> prime n.",
            "VernacStartTheoremProof",
            "c53144879b32e573af1ba33237dd28d2c04fadd2"
        ],
        [
            "case def_n: n => [|[|n']] // _; rewrite -def_n => lt_n_p2.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "suffices ->: n = pdiv n by rewrite pdiv_prime ?def_n.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply/eqP; rewrite eqn_leq leqNgt andbC pdiv_leq; last by rewrite def_n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: lt_n_p2; rewrite ltnNge; apply: contra => lt_pm_m.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "case/dvdnP: (pdiv_dvd n) => q def_q.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite {2}def_q -mulnn leq_pmul2r // pdiv_min_dvd //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[pdiv n]mul1n {2}def_q ltn_pmul2r in lt_pm_m.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite def_q dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primePns n : reflect (n < 2 \\/ exists p, [/\\ prime p, p ^ 2 <= n & p %| n]) (~~ prime n).",
            "VernacStartTheoremProof",
            "3f552e6891898e79e56c3805c8f05a9a94a1fb96"
        ],
        [
            "apply: (iffP idP) => [npr_p|]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=> [|[p [pr_p le_p2_n dv_p_n]]]; first by case: n => [|[]].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/negP=> pr_n; move: dv_p_n le_p2_n; rewrite dvdn_prime2 //; move/eqP->.",
            "VernacExtend",
            "23205f4e0b8f82cda8ff94731d8406ff304cce11"
        ],
        [
            "by rewrite leqNgt -{1}[n]muln1 -mulnn ltn_pmul2l ?prime_gt1 ?prime_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: leqP => [lt1p|]; [right | by left].",
            "VernacExtend",
            "9b12f10f3d016e6339c50363a2a3659ff043d1c0"
        ],
        [
            "exists (pdiv n); rewrite pdiv_dvd pdiv_prime //; split=> //.",
            "VernacExtend",
            "9219addbc84ec2d6255b88eeba833dc15897c5ff"
        ],
        [
            "by case: leqP npr_p => //; move/ltn_pdiv2_prime->; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments primePns {n}.",
            "VernacArguments",
            "e3a402e3f15a19dc3b809c7f3ee09091c6a2ce72"
        ],
        [
            "Lemma pdivP n : n > 1 -> {p | prime p & p %| n}.",
            "VernacStartTheoremProof",
            "3dc42283f2b5be8c6ff655e61b1a24a8ac29651d"
        ],
        [
            "by move=> lt1n; exists (pdiv n); rewrite ?pdiv_dvd ?pdiv_prime.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primes_mul m n p : m > 0 -> n > 0 -> (p \\in primes (m * n)) = (p \\in primes m) || (p \\in primes n).",
            "VernacStartTheoremProof",
            "332936649cce082207777f128dde8a0404279a37"
        ],
        [
            "move=> m_gt0 n_gt0; rewrite !mem_primes muln_gt0 m_gt0 n_gt0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case pr_p: (prime p); rewrite // Euclid_dvdM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primes_exp m n : n > 0 -> primes (m ^ n) = primes m.",
            "VernacStartTheoremProof",
            "280de177ce23e29ff66f37b04dd301213b2dbd9d"
        ],
        [
            "case: n => // n _; rewrite expnS; case: (posnP m) => [-> //| m_gt0].",
            "VernacExtend",
            "1dd33488047dbf70f12e12a749f59bfa780f9e04"
        ],
        [
            "apply/eq_primes => /= p; elim: n => [|n IHn]; first by rewrite muln1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite primes_mul ?(expn_gt0, expnS, IHn, orbb, m_gt0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primes_prime p : prime p -> primes p = [::p].",
            "VernacStartTheoremProof",
            "d34ccb8de88c4f75bc8c5483d5ab833c9fa3f670"
        ],
        [
            "move=> pr_p; apply: (eq_sorted_irr ltn_trans ltnn) => // [|q].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "exact: sorted_primes.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite mem_seq1 mem_primes prime_gt0 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/andP/idP=> [[pr_q q_p] | /eqP-> //]; rewrite -dvdn_prime2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_has_primes m n : m > 0 -> n > 0 -> coprime m n = ~~ has (mem (primes m)) (primes n).",
            "VernacStartTheoremProof",
            "5d2f84f5e174dfc3621e4ba5316955ea31752fb5"
        ],
        [
            "move=> m_gt0 n_gt0; apply/eqnP/hasPn=> [mn1 p | no_p_mn].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite /= !mem_primes m_gt0 n_gt0 /= => /andP[pr_p p_n].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have:= prime_gt1 pr_p; rewrite pr_p ltnNge -mn1 /=; apply: contra => p_m.",
            "VernacExtend",
            "4266062387bb5ba3b4b273358c36b198e35325af"
        ],
        [
            "by rewrite dvdn_leq ?gcdn_gt0 ?m_gt0 // dvdn_gcd ?p_m.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (ltngtP (gcdn m n) 1) => //; first by rewrite ltnNge gcdn_gt0 ?m_gt0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/pdiv_prime; set p := pdiv _ => pr_p.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move/implyP: (no_p_mn p); rewrite /= !mem_primes m_gt0 n_gt0 pr_p /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !(dvdn_trans (pdiv_dvd _)) // (dvdn_gcdl, dvdn_gcdr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pdiv_id p : prime p -> pdiv p = p.",
            "VernacStartTheoremProof",
            "a41951e98dd4b02fb904f42792172e3a491f81ef"
        ],
        [
            "by move=> p_pr; rewrite /pdiv primes_prime.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pdiv_pfactor p k : prime p -> pdiv (p ^ k.+1) = p.",
            "VernacStartTheoremProof",
            "32586471e01cf7727677cb3ae3ac825a7da6a892"
        ],
        [
            "by move=> p_pr; rewrite /pdiv primes_exp ?primes_prime.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prime_above m : {p | m < p & prime p}.",
            "VernacStartTheoremProof",
            "dcd7b69901a4516cf61b057e23003ce88e93ba4f"
        ],
        [
            "have /pdivP[p pr_p p_dv_m1]: 1 < m`! + 1 by rewrite addn1 ltnS fact_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists p => //; rewrite ltnNge; apply: contraL p_dv_m1 => p_le_m.",
            "VernacExtend",
            "9c74624cac92f94e452c274a33342e43b2955888"
        ],
        [
            "by rewrite dvdn_addr ?dvdn_fact ?prime_gt0 // gtnNdvd ?prime_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint logn_rec d m r := match r, edivn m d with | r'.+1, (_.+1 as m', 0) => (logn_rec d m' r').+1 | _, _ => 0 end.",
            "VernacFixpoint",
            "d1ceae7c9b92ff54b401b967f324a020d3792ae2"
        ],
        [
            "Definition logn p m := if prime p then logn_rec p m m else 0.",
            "VernacDefinition",
            "cd8963791dcc64f8a391c629801eea2dd0518d1d"
        ],
        [
            "Lemma lognE p m : logn p m = if [&& prime p, 0 < m & p %| m] then (logn p (m %/ p)).+1 else 0.",
            "VernacStartTheoremProof",
            "a9b597c937226b396e06535211c77bfcafc06373"
        ],
        [
            "rewrite /logn /dvdn; case p_pr: (prime p) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite /divn modn_def; case def_m: {2 3}m => [|m'] //=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case: edivnP def_m => [[|q] [|r] -> _] // def_m; congr _.+1; rewrite [_.1]/=.",
            "VernacExtend",
            "23f215449c5c6ca9ab389881c2419bdf490a3e5e"
        ],
        [
            "have{m def_m}: q < m'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -ltnS -def_m addn0 mulnC -{1}[q.+1]mul1n ltn_pmul2r // prime_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: {m' q}_.+1 {-2}m' q.+1 (ltnSn m') (ltn0Sn q) => // s IHs.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case=> [[]|r] //= m; rewrite ltnS => lt_rs m_gt0 le_mr.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite -{3}[m]prednK //=; case: edivnP => [[|q] [|_] def_q _] //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have{def_q} lt_qm': q < m.-1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -[q.+1]muln1 -ltnS prednK // def_q addn0 ltn_pmul2l // prime_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{le_mr} le_m'r: m.-1 <= r by rewrite -ltnS prednK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (IHs r) ?(IHs m.-1) // ?(leq_trans lt_qm', leq_trans _ lt_rs).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logn_gt0 p n : (0 < logn p n) = (p \\in primes n).",
            "VernacStartTheoremProof",
            "7b623f908b5c14dd022e7fdc870e7f5321b4710e"
        ],
        [
            "by rewrite lognE -mem_primes; case: {+}(p \\in _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_log0 p n : n < p -> logn p n = 0.",
            "VernacStartTheoremProof",
            "b039379be9565b223d617ff1c63ca27d19fcd581"
        ],
        [
            "by case: n => [|n] ltnp; rewrite lognE ?andbF // gtnNdvd ?andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logn0 p : logn p 0 = 0.",
            "VernacStartTheoremProof",
            "73752bdcdda561aac34603e079c08797128368b3"
        ],
        [
            "by rewrite /logn if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logn1 p : logn p 1 = 0.",
            "VernacStartTheoremProof",
            "839a17c2a0488ce9661439205ed7cc56740f5af6"
        ],
        [
            "by rewrite lognE dvdn1 /= andbC; case: eqP => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfactor_gt0 p n : 0 < p ^ logn p n.",
            "VernacStartTheoremProof",
            "aa8f877a430bc6900eb9ae1838eaf0f34bba7bdf"
        ],
        [
            "by rewrite expn_gt0 lognE; case: (posnP p) => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve pfactor_gt0 : core.",
            "VernacHints",
            "51fd1a8e4e3f7f698f5a8250a1a4f31c67253163"
        ],
        [
            "Lemma pfactor_dvdn p n m : prime p -> m > 0 -> (p ^ n %| m) = (n <= logn p m).",
            "VernacStartTheoremProof",
            "b206b7ca13bd4891d42d4a2e0fded403fdad41ad"
        ],
        [
            "move=> p_pr; elim: n m => [|n IHn] m m_gt0; first exact: dvd1n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite lognE p_pr m_gt0 /=; case dv_pm: (p %| m); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/dvdnP=> [] [/= q def_m].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite def_m expnS mulnCA dvdn_mulr in dv_pm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/dvdnP: dv_pm m_gt0 => q ->{m}; rewrite muln_gt0 => /andP[p_gt0 q_gt0].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite expnSr dvdn_pmul2r // mulnK // IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfactor_dvdnn p n : p ^ logn p n %| n.",
            "VernacStartTheoremProof",
            "2e0240fb735329162ec88588a4ad606be7da3856"
        ],
        [
            "case: n => // n; case pr_p: (prime p); first by rewrite pfactor_dvdn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite lognE pr_p dvd1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logn_prime p q : prime q -> logn p q = (p == q).",
            "VernacStartTheoremProof",
            "6a0b9a3fcaa5fb7b8d8bf0d8c010c7cbec6a860d"
        ],
        [
            "move=> pr_q; have q_gt0 := prime_gt0 pr_q; rewrite lognE q_gt0 /=.",
            "VernacExtend",
            "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
        ],
        [
            "case pr_p: (prime p); last by case: eqP pr_p pr_q => // -> ->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite dvdn_prime2 //; case: eqP => // ->; rewrite divnn q_gt0 logn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfactor_coprime p n : prime p -> n > 0 -> {m | coprime p m & n = m * p ^ logn p n}.",
            "VernacStartTheoremProof",
            "4a56704dc96d2c79abc28ca29aa132142ca6ea96"
        ],
        [
            "move=> p_pr n_gt0; set k := logn p n.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "have dv_pk_n: p ^ k %| n by rewrite pfactor_dvdn.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (n %/ p ^ k); last by rewrite divnK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite prime_coprime // -(@dvdn_pmul2r (p ^ k)) ?expn_gt0 ?prime_gt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -expnS divnK // pfactor_dvdn // ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfactorK p n : prime p -> logn p (p ^ n) = n.",
            "VernacStartTheoremProof",
            "e3024238be1670e2334e134d236dc2a4f86736b6"
        ],
        [
            "move=> p_pr; have pn_gt0: p ^ n > 0 by rewrite expn_gt0 prime_gt0.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/eqP; rewrite eqn_leq -pfactor_dvdn // dvdnn andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -(leq_exp2l _ _ (prime_gt1 p_pr)) dvdn_leq // pfactor_dvdn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfactorKpdiv p n : prime p -> logn (pdiv (p ^ n)) (p ^ n) = n.",
            "VernacStartTheoremProof",
            "33aae20d4277430bb0cdac72abc9d010e5483041"
        ],
        [
            "by case: n => // n p_pr; rewrite pdiv_pfactor ?pfactorK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_leq_log p m n : 0 < n -> m %| n -> logn p m <= logn p n.",
            "VernacStartTheoremProof",
            "51ba49f4d0fe90e16bacfe039c61f986ef36a488"
        ],
        [
            "move=> n_gt0 dv_m_n; have m_gt0 := dvdn_gt0 n_gt0 dv_m_n.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case p_pr: (prime p); last by do 2!rewrite lognE p_pr /=.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -pfactor_dvdn //; apply: dvdn_trans dv_m_n; rewrite pfactor_dvdn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_logl p n : 0 < n -> logn p n < n.",
            "VernacStartTheoremProof",
            "490e4589387513eeb7e10a61833e9fea0bfd7153"
        ],
        [
            "move=> n_gt0; have [p_gt1 | p_le1] := boolP (1 < p).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite (leq_trans (ltn_expl _ p_gt1)) // dvdn_leq ?pfactor_dvdnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite lognE (contraNF (@prime_gt1 _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logn_Gauss p m n : coprime p m -> logn p (m * n) = logn p n.",
            "VernacStartTheoremProof",
            "0e8d641916a7ffa9b3f0ced5295116db37318e12"
        ],
        [
            "move=> co_pm; case p_pr: (prime p); last by rewrite /logn p_pr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [-> | n_gt0] := posnP n; first by rewrite muln0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [m0 | m_gt0] := posnP m; first by rewrite m0 prime_coprime ?dvdn0 in co_pm.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have mn_gt0: m * n > 0 by rewrite muln_gt0 m_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqn_leq andbC dvdn_leq_log ?dvdn_mull //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "set k := logn p _; have: p ^ k %| m * n by rewrite pfactor_dvdn.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "by rewrite Gauss_dvdr ?coprime_expl // -pfactor_dvdn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lognM p m n : 0 < m -> 0 < n -> logn p (m * n) = logn p m + logn p n.",
            "VernacStartTheoremProof",
            "693b565a27d4b6421a3adcd4fde2d661d1967c39"
        ],
        [
            "case p_pr: (prime p); last by rewrite /logn p_pr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have xlp := pfactor_coprime p_pr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/xlp=> m' co_m' def_m /xlp[n' co_n' def_n] {xlp}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite {1}def_m {1}def_n mulnCA -mulnA -expnD !logn_Gauss // pfactorK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lognX p m n : logn p (m ^ n) = n * logn p m.",
            "VernacStartTheoremProof",
            "ed448ae1b52baad4c1df0384e13d2db6d76b4982"
        ],
        [
            "case p_pr: (prime p); last by rewrite /logn p_pr muln0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "elim: n => [|n IHn]; first by rewrite logn1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [->|m_gt0] := posnP m; first by rewrite exp0n // lognE andbF muln0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite expnS lognM ?IHn // expn_gt0 m_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logn_div p m n : m %| n -> logn p (n %/ m) = logn p n - logn p m.",
            "VernacStartTheoremProof",
            "0862b87a2570695a99f27a83ed66c3bd10e7d1a1"
        ],
        [
            "rewrite dvdn_eq => /eqP def_n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (posnP n) => [-> |]; first by rewrite div0n logn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -{1 3}def_n muln_gt0 => /andP[q_gt0 m_gt0]; rewrite lognM ?addnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_pfactor p d n : prime p -> reflect (exists2 m, m <= n & d = p ^ m) (d %| p ^ n).",
            "VernacStartTheoremProof",
            "0687f43c4e6f075ed314493f29bf5e3545150513"
        ],
        [
            "move=> p_pr; have pn_gt0: p ^ n > 0 by rewrite expn_gt0 prime_gt0.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply: (iffP idP) => [dv_d_pn|[m le_m_n ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(subnK le_m_n) expnD dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (logn p d); first by rewrite -(pfactorK n p_pr) dvdn_leq_log.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have d_gt0: d > 0 by apply: dvdn_gt0 dv_d_pn.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (pfactor_coprime p_pr d_gt0) => q co_p_q def_d.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite {1}def_d ((q =P 1) _) ?mul1n // -dvdn1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff: q %| p ^ n * 1 by rewrite Gauss_dvdr // coprime_sym coprime_expl.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite muln1 (dvdn_trans _ dv_d_pn) // def_d dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prime_decompE n : prime_decomp n = [seq (p, logn p n) | p <- primes n].",
            "VernacStartTheoremProof",
            "5079a839a4614ce8289bffe3d1028c2141344a22"
        ],
        [
            "case: n => // n; pose f0 := (0, 0); rewrite -map_comp.",
            "VernacExtend",
            "ed669a7b6a215c12fddb5899cb8f22def1b5c9ce"
        ],
        [
            "apply: (@eq_from_nth _ f0) => [|i lt_i_n]; first by rewrite size_map.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (nth_map f0) //; case def_f: (nth _ _ i) => [p e] /=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "congr (_, _); rewrite [n.+1]prod_prime_decomp //.",
            "VernacExtend",
            "90723b7805fdae0b93bd8b98ae215a5658363919"
        ],
        [
            "have: (p, e) \\in prime_decomp n.+1 by rewrite -def_f mem_nth.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/mem_prime_decomp=> pr_p _ _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite (big_nth f0) big_mkord (bigD1 (Ordinal lt_i_n)) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite def_f mulnC logn_Gauss ?pfactorK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply big_ind => [|m1 m2 com1 com2| [j ltj] /=]; first exact: coprimen1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite coprime_mulr com1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -val_eqE /= => nji; case def_j: (nth _ _ j) => [q e1] /=.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "have: (q, e1) \\in prime_decomp n.+1 by rewrite -def_j mem_nth.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/mem_prime_decomp=> pr_q e1_gt0 _; rewrite coprime_pexpr //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite prime_coprime // dvdn_prime2 //; apply: contra nji => eq_pq.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -(nth_uniq 0 _ _ (primes_uniq n.+1)) ?size_map //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !(nth_map f0) // def_f def_j /= eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divn_count_dvd d n : n %/ d = \\sum_(1 <= i < n.+1) (d %| i).",
            "VernacStartTheoremProof",
            "d52f9203de94ec643afc5afde2bb3034d73abdf7"
        ],
        [
            "have [-> | d_gt0] := posnP d; first by rewrite big_add1 divn0 big1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: (@addnI (d %| 0)); rewrite -(@big_ltn _ 0 _ 0 _ (dvdn d)) // big_mkord.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (partition_big (fun i : 'I_n.+1 => inord (i %/ d)) 'I_(n %/ d).+1) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite dvdn0 add1n -{1}[_.+1]card_ord -sum1_card; apply: eq_bigr => [[q ?] _].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (bigD1 (inord (q * d))) /eq_op /= !inordK ?ltnS -?leq_divRL ?mulnK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite dvdn_mull ?big1 // => [[i /= ?] /andP[/eqP <- /negPf]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite eq_sym dvdn_eq inordK ?ltnS ?leq_div2r // => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logn_count_dvd p n : prime p -> logn p n = \\sum_(1 <= k < n) (p ^ k %| n).",
            "VernacStartTheoremProof",
            "9f1aad2378b6c65cc13617f3a4092bf277c616af"
        ],
        [
            "rewrite big_add1 => p_prime; case: n => [|n]; first by rewrite logn0 big_geq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite big_mkord -big_mkcond (eq_bigl _ _ (fun _ => pfactor_dvdn _ _ _)) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite big_ord_narrow ?sum1_card ?card_ord // -ltnS ltn_logl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition trunc_log p n := let fix loop n k := if k is k'.+1 then if p <= n then (loop (n %/ p) k').+1 else 0 else 0 in loop n n.",
            "VernacDefinition",
            "fa503bf9e14b08d45c64236878bbf4352179d26d"
        ],
        [
            "Lemma trunc_log_bounds p n : 1 < p -> 0 < n -> let k := trunc_log p n in p ^ k <= n < p ^ k.+1.",
            "VernacStartTheoremProof",
            "c32d7563ba5800f59d122d292617fe3fb3f4593c"
        ],
        [
            "rewrite {+}/trunc_log => p_gt1; have p_gt0 := ltnW p_gt1.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "elim: n {-2 5}n (leqnn n) => [|m IHm] [|n] //=; rewrite ltnS => le_n_m _.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "have [le_p_n | // ] := leqP p _; rewrite 2!expnSr -leq_divRL -?ltn_divLR //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by apply: IHm; rewrite ?divn_gt0 // -ltnS (leq_trans (ltn_Pdiv _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trunc_log_ltn p n : 1 < p -> n < p ^ (trunc_log p n).+1.",
            "VernacStartTheoremProof",
            "0cd86a47411efa25640682f7d3fafbcde3ed8e91"
        ],
        [
            "have [-> | n_gt0] := posnP n; first by move=> /ltnW; rewrite expn_gt0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/trunc_log_bounds/(_ n_gt0)/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trunc_logP p n : 1 < p -> 0 < n -> p ^ trunc_log p n <= n.",
            "VernacStartTheoremProof",
            "65640443dbceee40dcb20146e1d34340ce8e98b9"
        ],
        [
            "by move=> p_gt1 /(trunc_log_bounds p_gt1)/andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trunc_log_max p k j : 1 < p -> p ^ j <= k -> j <= trunc_log p k.",
            "VernacStartTheoremProof",
            "fe0ea076cc9c15e3c34b3e0aea3418074dec3155"
        ],
        [
            "move=> p_gt1 le_pj_k; rewrite -ltnS -(@ltn_exp2l p) //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "exact: leq_ltn_trans (trunc_log_ltn _ _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical nat_pred_pred := Eval hnf in [predType of nat_pred].",
            "VernacDefinition",
            "805dc7a0ddccd1be84cfb3d2a74abaa18ff5aadd"
        ],
        [
            "Coercion nat_pred_of_nat (p : nat) : nat_pred := pred1 p.",
            "VernacDefinition",
            "072e9cdee5ff5365f0755803ccd774ac81042cc3"
        ],
        [
            "Section NatPreds.",
            "VernacBeginSection",
            "f79f9b9aae45ab9e8ed5d0afb9fe8587e6bc6828"
        ],
        [
            "Variables (n : nat) (pi : nat_pred).",
            "VernacAssumption",
            "1d0ea12631bfd3e84daa2717cb92dc107bd278d4"
        ],
        [
            "Definition negn : nat_pred := [predC pi].",
            "VernacDefinition",
            "cbb5783a111c4912f7125e9b3e8d155ef278fa59"
        ],
        [
            "Definition pnat : pred nat := fun m => (m > 0) && all (mem pi) (primes m).",
            "VernacDefinition",
            "8be65cf421bc902a34c8fe787faa46ccbd638ac4"
        ],
        [
            "Definition partn := \\prod_(0 <= p < n.+1 | p \\in pi) p ^ logn p n.",
            "VernacDefinition",
            "ed7ea512c36af4b26e429326a126780de5a7969a"
        ],
        [
            "End NatPreds.",
            "VernacEndSegment",
            "87c90db8353267809db490f724b61f637345df29"
        ],
        [
            "Notation \"pi ^'\" := (negn pi) (at level 2, format \"pi ^'\") : nat_scope.",
            "VernacNotation",
            "7a5aa04d706baafe57edf0518e5f0dc76cd0f281"
        ],
        [
            "Notation \"pi .-nat\" := (pnat pi) (at level 2, format \"pi .-nat\") : nat_scope.",
            "VernacNotation",
            "a0a226cce0cde85cf3d2c53eb4f8444db537fa86"
        ],
        [
            "Notation \"n `_ pi\" := (partn n pi) : nat_scope.",
            "VernacNotation",
            "fa177c858ac5b9814546dc761a2077d78394f87d"
        ],
        [
            "Section PnatTheory.",
            "VernacBeginSection",
            "35aac247a880b8ba8955c70b6bf0aeeda22eacac"
        ],
        [
            "Implicit Types (n p : nat) (pi rho : nat_pred).",
            "VernacReserve",
            "f98d33e2ca89376b16afa5fa103693141e3f70d5"
        ],
        [
            "Lemma negnK pi : pi^'^' =i pi.",
            "VernacStartTheoremProof",
            "75fb87c31e445e586c9fbfb549d0579f9e0f7399"
        ],
        [
            "by move=> p; apply: negbK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_negn pi1 pi2 : pi1 =i pi2 -> pi1^' =i pi2^'.",
            "VernacStartTheoremProof",
            "8b413dc6c99974d91779ed1689e569a8d58aa086"
        ],
        [
            "by move=> eq_pi n; rewrite 3!inE /= eq_pi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_piP m n : \\pi(m) =i \\pi(n) <-> \\pi(m) = \\pi(n).",
            "VernacStartTheoremProof",
            "207a81c3ae54d515dd14f904b9f7f2348dc7813d"
        ],
        [
            "rewrite /pi_of; have eqs := eq_sorted_irr ltn_trans ltnn.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by split=> [|-> //]; move/(eqs _ _ (sorted_primes m) (sorted_primes n)) ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma part_gt0 pi n : 0 < n`_pi.",
            "VernacStartTheoremProof",
            "89ed6c692b0d808d8fcec29df065b86fdb083b17"
        ],
        [
            "exact: prodn_gt0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve part_gt0 : core.",
            "VernacHints",
            "82ca9723061f9aeb0908fbd3cdb3d759fbdd5912"
        ],
        [
            "Lemma sub_in_partn pi1 pi2 n : {in \\pi(n), {subset pi1 <= pi2}} -> n`_pi1 %| n`_pi2.",
            "VernacStartTheoremProof",
            "d74c9d273fae4c6c4477b56732099198223d10ff"
        ],
        [
            "move=> pi12; rewrite ![n`__]big_mkcond /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply (big_ind2 (fun m1 m2 => m1 %| m2)) => // [*|p _]; first exact: dvdn_mul.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite lognE -mem_primes; case: ifP => pi1p; last exact: dvd1n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: ifP => pr_p; [rewrite pi12 | rewrite if_same].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_in_partn pi1 pi2 n : {in \\pi(n), pi1 =i pi2} -> n`_pi1 = n`_pi2.",
            "VernacStartTheoremProof",
            "d492e92f3e17508b25fd35744d78293f52c9dc01"
        ],
        [
            "by move=> pi12; apply/eqP; rewrite eqn_dvd ?sub_in_partn // => p /pi12->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_partn pi1 pi2 n : pi1 =i pi2 -> n`_pi1 = n`_pi2.",
            "VernacStartTheoremProof",
            "896d288b28c32f001b6a0804bb4b1e20caa4eaf9"
        ],
        [
            "by move=> pi12; apply: eq_in_partn => p _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partnNK pi n : n`_pi^'^' = n`_pi.",
            "VernacStartTheoremProof",
            "cdbf492dd9c7487ff8543fc11b26d0e105622da1"
        ],
        [
            "by apply: eq_partn; apply: negnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma widen_partn m pi n : n <= m -> n`_pi = \\prod_(0 <= p < m.+1 | p \\in pi) p ^ logn p n.",
            "VernacStartTheoremProof",
            "ae1eaff579b505e57f4d024f1f4608b973f6af6d"
        ],
        [
            "move=> le_n_m; rewrite big_mkcond /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite [n`_pi](big_nat_widen _ _ m.+1) // big_mkcond /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => p _; rewrite ltnS lognE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: and3P => [[_ n_gt0 p_dv_n]|]; rewrite ?if_same // andbC dvdn_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partn0 pi : 0`_pi = 1.",
            "VernacStartTheoremProof",
            "60b28ec7821f3a45dc3dcf84a550a7da96725801"
        ],
        [
            "by apply: big1_seq => [] [|n]; rewrite andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partn1 pi : 1`_pi = 1.",
            "VernacStartTheoremProof",
            "8c85b410f81190841cd76406f7428007fe23c02a"
        ],
        [
            "by apply: big1_seq => [] [|[|n]]; rewrite andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partnM pi m n : m > 0 -> n > 0 -> (m * n)`_pi = m`_pi * n`_pi.",
            "VernacStartTheoremProof",
            "338134d1640f1bbc0cf2a1d6cf69bd4c35453472"
        ],
        [
            "have le_pmul m' n': m' > 0 -> n' <= m' * n' by move/prednK <-; apply: leq_addr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> mpos npos; rewrite !(@widen_partn (n * m)) 3?(le_pmul, mulnC) //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite !big_mkord -big_split; apply: eq_bigr => p _ /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite lognM // expnD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partnX pi m n : (m ^ n)`_pi = m`_pi ^ n.",
            "VernacStartTheoremProof",
            "aa0b9b62e224f11a341451902251f49802e849a2"
        ],
        [
            "elim: n => [|n IHn]; first exact: partn1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite expnS; case: (posnP m) => [->|m_gt0]; first by rewrite partn0 exp1n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite expnS partnM ?IHn // expn_gt0 m_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partn_dvd pi m n : n > 0 -> m %| n -> m`_pi %| n`_pi.",
            "VernacStartTheoremProof",
            "1fd3dd1f5ed457cec924c2a6de77b5d59c02c9c4"
        ],
        [
            "move=> n_gt0 dvmn; case/dvdnP: dvmn n_gt0 => q ->{n}.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite muln_gt0 => /andP[q_gt0 m_gt0]; rewrite partnM ?dvdn_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma p_part p n : n`_p = p ^ logn p n.",
            "VernacStartTheoremProof",
            "183ee0aa5706525ae3bc66dbe547a20c6ea7f30e"
        ],
        [
            "case (posnP (logn p n)) => [log0 |].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite log0 [n`_p]big1_seq // => q; case/andP; move/eqnP->; rewrite log0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite logn_gt0 mem_primes; case/and3P=> _ n_gt0 dv_p_n.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have le_p_n: p < n.+1 by rewrite ltnS dvdn_leq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite [n`_p]big_mkord (big_pred1 (Ordinal le_p_n)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma p_part_eq1 p n : (n`_p == 1) = (p \\notin \\pi(n)).",
            "VernacStartTheoremProof",
            "c20ebe0aff9697e79b547ae9e63dc62ed62aefaf"
        ],
        [
            "rewrite mem_primes p_part lognE; case: and3P => // [[p_pr _ _]].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite -dvdn1 pfactor_dvdn // logn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma p_part_gt1 p n : (n`_p > 1) = (p \\in \\pi(n)).",
            "VernacStartTheoremProof",
            "35e706cc99cafb4aa3d3f3a3df76480878e4c2f5"
        ],
        [
            "by rewrite ltn_neqAle part_gt0 andbT eq_sym p_part_eq1 negbK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primes_part pi n : primes n`_pi = filter (mem pi) (primes n).",
            "VernacStartTheoremProof",
            "50c69c09aa8c42ee2e775042dc5a7185c1040c83"
        ],
        [
            "have ltnT := ltn_trans.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (posnP n) => [-> | n_gt0]; first by rewrite partn0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: (eq_sorted_irr ltnT ltnn); rewrite ?(sorted_primes, sorted_filter) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "move=> p; rewrite mem_filter /= !mem_primes n_gt0 part_gt0 /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply/andP/and3P=> [[p_pr] | [pi_p p_pr dv_p_n]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite /partn; apply big_ind => [|n1 n2 IHn1 IHn2|q pi_q].",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite dvdn1; case: eqP p_pr => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite Euclid_dvdM //; case/orP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}(expn1 p) pfactor_dvdn // lognX muln_gt0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite logn_gt0 mem_primes n_gt0 - andbA /=; case/and3P=> pr_q dv_q_n.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite logn_prime //; case: eqP => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have le_p_n: p < n.+1 by rewrite ltnS dvdn_leq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite [n`_pi]big_mkord (bigD1 (Ordinal le_p_n)) //= dvdn_mulr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite lognE p_pr n_gt0 dv_p_n expnS dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_pi_of n m : n < m -> filter \\pi(n) (index_iota 0 m) = primes n.",
            "VernacStartTheoremProof",
            "2d33bcddc9e60d35ae8f2f98facd4d315d87a7fd"
        ],
        [
            "move=> lt_n_m; have ltnT := ltn_trans; apply: (eq_sorted_irr ltnT ltnn).",
            "VernacExtend",
            "7a69517207288e46da9dd503cb8095e3bbc839fc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite sorted_filter // iota_ltn_sorted.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: sorted_primes.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move=> p; rewrite mem_filter mem_index_iota /= mem_primes; case: and3P => //.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by case=> _ n_gt0 dv_p_n; apply: leq_ltn_trans lt_n_m; apply: dvdn_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partn_pi n : n > 0 -> n`_\\pi(n) = n.",
            "VernacStartTheoremProof",
            "f969c79b00fe6158da6460c8b1b2e195cb6cbf82"
        ],
        [
            "move=> n_gt0; rewrite {3}(prod_prime_decomp n_gt0) prime_decompE big_map.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -[n`__]big_filter filter_pi_of.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partnT n : n > 0 -> n`_predT = n.",
            "VernacStartTheoremProof",
            "d8724d73483198bef1477435d3dfe081f32a72b8"
        ],
        [
            "move=> n_gt0; rewrite -{2}(partn_pi n_gt0) {2}/partn big_mkcond /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: eq_bigr => p _; rewrite -logn_gt0; case: (logn p _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partnC pi n : n > 0 -> n`_pi * n`_pi^' = n.",
            "VernacStartTheoremProof",
            "64427b301e7b37d2e0c008272a0340e8deba06b1"
        ],
        [
            "move=> n_gt0; rewrite -{3}(partnT n_gt0) /partn.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "do 2!rewrite mulnC big_mkcond /=; rewrite -big_split; apply: eq_bigr => p _ /=.",
            "VernacExtend",
            "ec9e03779ece674c610c44b1516bd3f63e1b8216"
        ],
        [
            "by rewrite mulnC inE /=; case: (p \\in pi); rewrite /= (muln1, mul1n).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_part pi n : n`_pi %| n.",
            "VernacStartTheoremProof",
            "889f6b25b4f2f2817482fa4cbc57e834e32387fc"
        ],
        [
            "by case: n => // n; rewrite -{2}[n.+1](@partnC pi) // dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logn_part p m : logn p m`_p = logn p m.",
            "VernacStartTheoremProof",
            "cd1c45b394715d9293a8d67e1407a52eb1d7340d"
        ],
        [
            "case p_pr: (prime p); first by rewrite p_part pfactorK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite lognE (lognE p m) p_pr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partn_lcm pi m n : m > 0 -> n > 0 -> (lcmn m n)`_pi = lcmn m`_pi n`_pi.",
            "VernacStartTheoremProof",
            "40d62f3625d5bd674fb1d05321d7f907cee678ea"
        ],
        [
            "move=> m_gt0 n_gt0; have p_gt0: lcmn m n > 0 by rewrite lcmn_gt0 m_gt0.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/eqP; rewrite eqn_dvd dvdn_lcm !partn_dvd ?dvdn_lcml ?dvdn_lcmr //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(dvdn_pmul2r (part_gt0 pi^' (lcmn m n))) partnC // dvdn_lcm !andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{1}(partnC pi m_gt0) andbC -{1}(partnC pi n_gt0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !dvdn_mul ?partn_dvd ?dvdn_lcml ?dvdn_lcmr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partn_gcd pi m n : m > 0 -> n > 0 -> (gcdn m n)`_pi = gcdn m`_pi n`_pi.",
            "VernacStartTheoremProof",
            "b8a4736515b40b0e470f3d0145faa78e20c0f521"
        ],
        [
            "move=> m_gt0 n_gt0; have p_gt0: gcdn m n > 0 by rewrite gcdn_gt0 m_gt0.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/eqP; rewrite eqn_dvd dvdn_gcd !partn_dvd ?dvdn_gcdl ?dvdn_gcdr //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(dvdn_pmul2r (part_gt0 pi^' (gcdn m n))) partnC // dvdn_gcd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{3}(partnC pi m_gt0) andbC -{3}(partnC pi n_gt0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !dvdn_mul ?partn_dvd ?dvdn_gcdl ?dvdn_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partn_biglcm (I : finType) (P : pred I) F pi : (forall i, P i -> F i > 0) -> (\\big[lcmn/1%N]_(i | P i) F i)`_pi = \\big[lcmn/1%N]_(i | P i) (F i)`_pi.",
            "VernacStartTheoremProof",
            "40e881bd656724c60893634fdf22944458322e63"
        ],
        [
            "move=> F_gt0; set m := \\big[lcmn/1%N]_(i | P i) F i.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "have m_gt0: 0 < m by elim/big_ind: m => // p q p_gt0; rewrite lcmn_gt0 p_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqn_dvd andbC; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "by apply/dvdn_biglcmP=> i Pi; rewrite partn_dvd // (@biglcmn_sup _ i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(dvdn_pmul2r (part_gt0 pi^' m)) partnC //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/dvdn_biglcmP=> i Pi; rewrite -(partnC pi (F_gt0 i Pi)) dvdn_mul //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (@biglcmn_sup _ i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite partn_dvd // (@biglcmn_sup _ i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partn_biggcd (I : finType) (P : pred I) F pi : #|SimplPred P| > 0 -> (forall i, P i -> F i > 0) -> (\\big[gcdn/0]_(i | P i) F i)`_pi = \\big[gcdn/0]_(i | P i) (F i)`_pi.",
            "VernacStartTheoremProof",
            "8f249a96f80f0386c64a754d2268a4a30dfdff15"
        ],
        [
            "move=> ntP F_gt0; set d := \\big[gcdn/0]_(i | P i) F i.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "have d_gt0: 0 < d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/card_gt0P: ntP => i /= Pi; have:= F_gt0 i Pi.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "rewrite !lt0n -!dvd0n; apply: contra => dv0d.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite (dvdn_trans dv0d) // (@biggcdn_inf _ i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite eqn_dvd; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "by apply/dvdn_biggcdP=> i Pi; rewrite partn_dvd ?F_gt0 // (@biggcdn_inf _ i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(dvdn_pmul2r (part_gt0 pi^' d)) partnC //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/dvdn_biggcdP=> i Pi; rewrite -(partnC pi (F_gt0 i Pi)) dvdn_mul //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (@biggcdn_inf _ i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite partn_dvd ?F_gt0 // (@biggcdn_inf _ i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_in_pnat pi rho n : {in \\pi(n), {subset pi <= rho}} -> pi.-nat n -> rho.-nat n.",
            "VernacStartTheoremProof",
            "f79d4da1bf2d12aba65d3bcfff35f9baf7569d1d"
        ],
        [
            "rewrite /pnat => subpi /andP[-> pi_n].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply/allP=> p pr_p; apply: subpi => //; apply: (allP pi_n).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_in_pnat pi rho n : {in \\pi(n), pi =i rho} -> pi.-nat n = rho.-nat n.",
            "VernacStartTheoremProof",
            "44142e6b9ff461d31346fe582c7fb3d648f3f0e3"
        ],
        [
            "by move=> eqpi; apply/idP/idP; apply: sub_in_pnat => p /eqpi->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_pnat pi rho n : pi =i rho -> pi.-nat n = rho.-nat n.",
            "VernacStartTheoremProof",
            "89baa50acbda9533c11125d2edcf8209325b02de"
        ],
        [
            "by move=> eqpi; apply: eq_in_pnat => p _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnatNK pi n : pi^'^'.-nat n = pi.-nat n.",
            "VernacStartTheoremProof",
            "317ed4d2e2d2bb644e0ff07052045d028faed488"
        ],
        [
            "exact: eq_pnat (negnK pi).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnatI pi rho n : [predI pi & rho].-nat n = pi.-nat n && rho.-nat n.",
            "VernacStartTheoremProof",
            "11f46e1fba9bfccfd0cbaf56151a94fe22c20121"
        ],
        [
            "by rewrite /pnat andbCA all_predI !andbA andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnat_mul pi m n : pi.-nat (m * n) = pi.-nat m && pi.-nat n.",
            "VernacStartTheoremProof",
            "6aec407861275c31e7592e736747b18253c39f59"
        ],
        [
            "rewrite /pnat muln_gt0 andbCA -andbA andbCA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: posnP => // n_gt0; case: posnP => //= m_gt0.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "apply/allP/andP=> [pi_mn | [pi_m pi_n] p].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by split; apply/allP=> p m_p; apply: pi_mn; rewrite primes_mul // m_p ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite primes_mul // => /orP[]; [apply: (allP pi_m) | apply: (allP pi_n)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnat_exp pi m n : pi.-nat (m ^ n) = pi.-nat m || (n == 0).",
            "VernacStartTheoremProof",
            "21ce844f18238a47c3f2a146533f10552c51f3a5"
        ],
        [
            "by case: n => [|n]; rewrite orbC // /pnat expn_gt0 orbC primes_exp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma part_pnat pi n : pi.-nat n`_pi.",
            "VernacStartTheoremProof",
            "60cebe800b9e51047f09586530f450d3aa662e5d"
        ],
        [
            "rewrite /pnat primes_part part_gt0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/allP=> p; rewrite mem_filter => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnatE pi p : prime p -> pi.-nat p = (p \\in pi).",
            "VernacStartTheoremProof",
            "33d01c33948292c62375bd1b08a646a384500ef1"
        ],
        [
            "by move=> pr_p; rewrite /pnat prime_gt0 ?primes_prime //= andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnat_id p : prime p -> p.-nat p.",
            "VernacStartTheoremProof",
            "38e250e410a0bc327ea714277c4ee35e637c8c2d"
        ],
        [
            "by move=> pr_p; rewrite pnatE ?inE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_pi' m n : m > 0 -> n > 0 -> coprime m n = \\pi(m)^'.-nat n.",
            "VernacStartTheoremProof",
            "17fe32f4b342f5d8a18a8eb48cbbefc79cb9ad82"
        ],
        [
            "by move=> m_gt0 n_gt0; rewrite /pnat n_gt0 all_predC coprime_has_primes.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnat_pi n : n > 0 -> \\pi(n).-nat n.",
            "VernacStartTheoremProof",
            "a5f0043696f1f4c824bd5f35079ef2a493c3e58a"
        ],
        [
            "by rewrite /pnat => ->; apply/allP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi_of_dvd m n : m %| n -> n > 0 -> {subset \\pi(m) <= \\pi(n)}.",
            "VernacStartTheoremProof",
            "b49127b6e222fa22b7e025444cd74ff839dca26b"
        ],
        [
            "move=> m_dv_n n_gt0 p; rewrite !mem_primes n_gt0 => /and3P[-> _ p_dv_m].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "exact: dvdn_trans p_dv_m m_dv_n.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi_ofM m n : m > 0 -> n > 0 -> \\pi(m * n) =i [predU \\pi(m) & \\pi(n)].",
            "VernacStartTheoremProof",
            "acc8dc353168d7126eb9c5ea6f85e61a65ef949a"
        ],
        [
            "by move=> m_gt0 n_gt0 p; apply: primes_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi_of_part pi n : n > 0 -> \\pi(n`_pi) =i [predI \\pi(n) & pi].",
            "VernacStartTheoremProof",
            "4596c9c536d41d29b3878501aa30419f072f5bbb"
        ],
        [
            "by move=> n_gt0 p; rewrite /pi_of primes_part mem_filter andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi_of_exp p n : n > 0 -> \\pi(p ^ n) = \\pi(p).",
            "VernacStartTheoremProof",
            "fdc8e76c74b1f3099f67b03eb233b82c23016936"
        ],
        [
            "by move=> n_gt0; rewrite /pi_of primes_exp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi_of_prime p : prime p -> \\pi(p) =i (p : nat_pred).",
            "VernacStartTheoremProof",
            "283402c3e996103a66d1e613ad99650475e2cedc"
        ],
        [
            "by move=> pr_p q; rewrite /pi_of primes_prime // mem_seq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma p'natEpi p n : n > 0 -> p^'.-nat n = (p \\notin \\pi(n)).",
            "VernacStartTheoremProof",
            "a1efc20e749fdaa10b12079166826345f83ae8ec"
        ],
        [
            "by case: n => // n _; rewrite /pnat all_predC has_pred1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma p'natE p n : prime p -> p^'.-nat n = ~~ (p %| n).",
            "VernacStartTheoremProof",
            "9a967c793efdf63bea743e679a9aff2f97e6f49b"
        ],
        [
            "case: n => [|n] p_pr; first by case: p p_pr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite p'natEpi // mem_primes p_pr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnatPpi pi n p : pi.-nat n -> p \\in \\pi(n) -> p \\in pi.",
            "VernacStartTheoremProof",
            "8c95798cac2fe077630ca8f897392146cc61a088"
        ],
        [
            "by case/andP=> _ /allP; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnat_dvd m n pi : m %| n -> pi.-nat n -> pi.-nat m.",
            "VernacStartTheoremProof",
            "1e2220fb2190d44824761a1f20201e7ffc97f885"
        ],
        [
            "by case/dvdnP=> q ->; rewrite pnat_mul; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnat_div m n pi : m %| n -> pi.-nat n -> pi.-nat (n %/ m).",
            "VernacStartTheoremProof",
            "dd0207bc282158e0eebdcde145aa73a3a00347ad"
        ],
        [
            "case/dvdnP=> q ->; rewrite pnat_mul andbC => /andP[].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by case: m => // m _; rewrite mulnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnat_coprime pi m n : pi.-nat m -> pi^'.-nat n -> coprime m n.",
            "VernacStartTheoremProof",
            "d4862da8a64959e27f5a0a63ccd32bbe9a631cec"
        ],
        [
            "case/andP=> m_gt0 pi_m /andP[n_gt0 pi'_n]; rewrite coprime_has_primes //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by apply/hasPn=> p /(allP pi'_n); apply/contra/allP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma p'nat_coprime pi m n : pi^'.-nat m -> pi.-nat n -> coprime m n.",
            "VernacStartTheoremProof",
            "09e664ba085b76c1647bd16a3b46533eb0a2266b"
        ],
        [
            "by move=> pi'm pi_n; rewrite (pnat_coprime pi'm) ?pnatNK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_pnat_coprime pi rho m n : {subset rho <= pi^'} -> pi.-nat m -> rho.-nat n -> coprime m n.",
            "VernacStartTheoremProof",
            "b294d8bac03356243e1f7bdab589e4a6a24e55b3"
        ],
        [
            "by move=> pi'rho pi_m; move/(sub_in_pnat (in1W pi'rho)); apply: pnat_coprime.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime_partC pi m n : coprime m`_pi n`_pi^'.",
            "VernacStartTheoremProof",
            "5a928fb2571fb02f354fe54b2673fd1aafb4dcf5"
        ],
        [
            "by apply: (@pnat_coprime pi); apply: part_pnat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnat_1 pi n : pi.-nat n -> pi^'.-nat n -> n = 1.",
            "VernacStartTheoremProof",
            "ca3ea3ecbfc401dc3a0fe74043a7ed91431e8306"
        ],
        [
            "by move=> pi_n pi'_n; rewrite -(eqnP (pnat_coprime pi_n pi'_n)) gcdnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma part_pnat_id pi n : pi.-nat n -> n`_pi = n.",
            "VernacStartTheoremProof",
            "d955db52f440a31540c205c8560ce2212b4d257b"
        ],
        [
            "case/andP=> n_gt0 pi_n.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -{2}(partnT n_gt0) /partn big_mkcond; apply: eq_bigr=> p _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "case: (posnP (logn p n)) => [-> |]; first by rewrite if_same.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite logn_gt0 => /(allP pi_n)/= ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma part_p'nat pi n : pi^'.-nat n -> n`_pi = 1.",
            "VernacStartTheoremProof",
            "791bbe16739e3a571d78a5334a8e5142c52067ea"
        ],
        [
            "case/andP=> n_gt0 pi'_n; apply: big1_seq => p /andP[pi_p _].",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "case: (posnP (logn p n)) => [-> //|].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite logn_gt0; move/(allP pi'_n); case/negP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partn_eq1 pi n : n > 0 -> (n`_pi == 1) = pi^'.-nat n.",
            "VernacStartTheoremProof",
            "327e174fa295be5ab0d5f5ef693aa390ebeb603c"
        ],
        [
            "move=> n_gt0; apply/eqP/idP=> [pi_n_1|]; last exact: part_p'nat.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(partnC pi n_gt0) pi_n_1 mul1n part_pnat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pnatP pi n : n > 0 -> reflect (forall p, prime p -> p %| n -> p \\in pi) (pi.-nat n).",
            "VernacStartTheoremProof",
            "bb776f0448ea81edefd613ab1036e011a410ad03"
        ],
        [
            "move=> n_gt0; rewrite /pnat n_gt0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: (iffP allP) => /= pi_n p => [pr_p p_n|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite pi_n // mem_primes pr_p n_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite mem_primes n_gt0 /=; case/andP; move: p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi_pnat pi p n : p.-nat n -> p \\in pi -> pi.-nat n.",
            "VernacStartTheoremProof",
            "c85827d284c6f5cdb8d5f406d80b94c0022acfbc"
        ],
        [
            "move=> p_n pi_p; have [n_gt0 _] := andP p_n.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by apply/pnatP=> // q q_pr /(pnatP _ n_gt0 p_n _ q_pr)/eqnP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma p_natP p n : p.-nat n -> {k | n = p ^ k}.",
            "VernacStartTheoremProof",
            "656716e613fc02437da91473dd02ed98fcbb196b"
        ],
        [
            "by move=> p_n; exists (logn p n); rewrite -p_part part_pnat_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi'_p'nat pi p n : pi^'.-nat n -> p \\in pi -> p^'.-nat n.",
            "VernacStartTheoremProof",
            "bbfaec799634f1ca596f53b274be90a6e9085f74"
        ],
        [
            "move=> pi'n pi_p; apply: sub_in_pnat pi'n => q _.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply: contraNneq => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi_p'nat p pi n : pi.-nat n -> p \\in pi^' -> p^'.-nat n.",
            "VernacStartTheoremProof",
            "b82dd78f07aeb110d5ea6bd3acd3f82fe344b435"
        ],
        [
            "by move=> pi_n; apply: pi'_p'nat; rewrite pnatNK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partn_part pi rho n : {subset pi <= rho} -> n`_rho`_pi = n`_pi.",
            "VernacStartTheoremProof",
            "5a101aba3cc679d0960ec6b402c4fd3b509da121"
        ],
        [
            "move=> pi_sub_rho; have [->|n_gt0] := posnP n; first by rewrite !partn0 partn1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -{2}(partnC rho n_gt0) partnM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suffices: pi^'.-nat n`_rho^' by move/part_p'nat->; rewrite muln1.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by apply: sub_in_pnat (part_pnat _ _) => q _; apply/contra/pi_sub_rho.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partnI pi rho n : n`_[predI pi & rho] = n`_pi`_rho.",
            "VernacStartTheoremProof",
            "b4c9a8ee006455ad0a6c25988dd179af0c862597"
        ],
        [
            "rewrite -(@partnC [predI pi & rho] _`_rho) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "symmetry; rewrite 2?partn_part; try by move=> p /andP [].",
            "VernacExtend",
            "a2d710628ebd834ac0738db9fcfa4e5062776b56"
        ],
        [
            "rewrite mulnC part_p'nat ?mul1n // pnatNK pnatI part_pnat andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: pnat_dvd (dvdn_part _ _) (part_pnat _ _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_2'nat n : odd n = 2^'.-nat n.",
            "VernacStartTheoremProof",
            "a2571e5a741af1763e54ee0865c4a9063a048575"
        ],
        [
            "by case: n => // n; rewrite p'natE // dvdn2 negbK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PnatTheory.",
            "VernacEndSegment",
            "f27facf6a773c36f7d14f12250511663b981fd9f"
        ],
        [
            "Hint Resolve part_gt0 : core.",
            "VernacHints",
            "82ca9723061f9aeb0908fbd3cdb3d759fbdd5912"
        ],
        [
            "Lemma divisors_correct n : n > 0 -> [/\\ uniq (divisors n), sorted leq (divisors n) & forall d, (d \\in divisors n) = (d %| n)].",
            "VernacStartTheoremProof",
            "4f858f3896c11065f3c59b3a510d3a4f2ab0a5f3"
        ],
        [
            "move/prod_prime_decomp=> def_n; rewrite {4}def_n {def_n}.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have: all prime (primes n) by apply/allP=> p; rewrite mem_primes; case/andP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= primes_uniq n; rewrite /primes /divisors; move/prime_decomp: n.",
            "VernacExtend",
            "8a8d913dd69d1714bcd5e07d5116dab2a7edffae"
        ],
        [
            "elim=> [|[p e] pd] /=; first by split=> // d; rewrite big_nil dvdn1 mem_seq1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite big_cons /=; move: (foldr _ _ pd) => divs.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "move=> IHpd /andP[npd_p Upd] /andP[pr_p pr_pd].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have lt0p: 0 < p by apply: prime_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have {IHpd Upd}[Udivs Odivs mem_divs] := IHpd Upd pr_pd.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ndivs_p m: p * m \\notin divs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices: p \\notin divs; rewrite !mem_divs.",
            "VernacExtend",
            "0c8ba50b72da45a37386d34fb62b5fd81590c814"
        ],
        [
            "by apply: contra => /dvdnP[n ->]; rewrite mulnCA dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ndv_p_1: ~~(p %| 1) by rewrite dvdn1 neq_ltn orbC prime_gt1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite big_seq; elim/big_ind: _ => [//|u v npu npv|[q f] /= pd_qf].",
            "VernacExtend",
            "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
        ],
        [
            "by rewrite Euclid_dvdM //; apply/norP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: (f) => // f'; rewrite expnS Euclid_dvdM // orbC negb_or => -> {f'}/=.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "have pd_q: q \\in unzip1 pd by apply/mapP; exists (q, f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contra npd_p; rewrite dvdn_prime2 // ?(allP pr_pd) // => /eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: e => [|e] /=; first by split=> // d; rewrite mul1n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have Tmulp_inj: injective (NatTrec.mul p).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> u v /eqP; rewrite !natTrecE eqn_pmul2l // => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (iter e _ _) => divs' [Udivs' Odivs' mem_divs']; split=> [||d].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite merge_uniq cat_uniq map_inj_uniq // Udivs Udivs' andbT /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/hasP=> [[d dv_d /mapP[d' _ def_d]]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by case/idPn: dv_d; rewrite def_d natTrecE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (merge_sorted leq_total) //; case: (divs') Odivs' => //= d ds.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite (@map_path _ _ _ _ leq xpred0) ?has_pred0 // => u v _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !natTrecE leq_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mem_merge mem_cat; case dv_d_p: (p %| d).",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case/dvdnP: dv_d_p => d' ->{d}; rewrite mulnC (negbTE (ndivs_p d')) orbF.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite expnS -mulnA dvdn_pmul2l // -mem_divs'.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(mem_map Tmulp_inj divs') natTrecE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case pdiv_d: (_ \\in _).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case/mapP: pdiv_d dv_d_p => d' _ ->; rewrite natTrecE dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mem_divs Gauss_dvdr // coprime_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite coprime_expl ?prime_coprime ?dv_d_p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_divisors n : sorted leq (divisors n).",
            "VernacStartTheoremProof",
            "f0745e30e3e696d505e1e5c6b136c3f6be9c9ed5"
        ],
        [
            "by case: (posnP n) => [-> | /divisors_correct[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divisors_uniq n : uniq (divisors n).",
            "VernacStartTheoremProof",
            "8fc794103ce6d3652c095cb2f5fd34c2e149e548"
        ],
        [
            "by case: (posnP n) => [-> | /divisors_correct[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_divisors_ltn n : sorted ltn (divisors n).",
            "VernacStartTheoremProof",
            "860f75ecf40189ad0a09279e540b48c8aa30fa02"
        ],
        [
            "by rewrite ltn_sorted_uniq_leq divisors_uniq sorted_divisors.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_divisors d m : 0 < m -> (d %| m) = (d \\in divisors m).",
            "VernacStartTheoremProof",
            "b4c2880b636135382374fde4283443e1f9bc1a90"
        ],
        [
            "by case/divisors_correct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divisor1 n : 1 \\in divisors n.",
            "VernacStartTheoremProof",
            "050c9eddf42329ed339903fc07aadc65fda4c402"
        ],
        [
            "by case: n => // n; rewrite -dvdn_divisors // dvd1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divisors_id n : 0 < n -> n \\in divisors n.",
            "VernacStartTheoremProof",
            "15d17038a58bc041b21ac690f0c8c4fc2c10dc87"
        ],
        [
            "by move/dvdn_divisors <-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_sum d I r (K : pred I) F : (forall i, K i -> d %| F i) -> d %| \\sum_(i <- r | K i) F i.",
            "VernacStartTheoremProof",
            "33cc1ce0ceeb78e50a02e0c0591cb2369f57c9a0"
        ],
        [
            "by move=> dF; elim/big_ind: _ => //; apply: dvdn_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_partP n m : 0 < n -> reflect (forall p, p \\in \\pi(n) -> n`_p %| m) (n %| m).",
            "VernacStartTheoremProof",
            "8dd4f0b33713fe8573ce53fa31c32cc1b0c69254"
        ],
        [
            "move=> n_gt0; apply: (iffP idP) => n_dvd_m => [p _|].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by apply: dvdn_trans n_dvd_m; apply: dvdn_part.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [-> // | m_gt0] := posnP m.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(partnT n_gt0) -(partnT m_gt0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !(@widen_partn (m + n)) ?leq_addl ?leq_addr // /in_mem /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim/big_ind2: _ => // [* | q _]; first exact: dvdn_mul.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [-> // | ] := posnP (logn q n); rewrite logn_gt0 => q_n.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "have pr_q: prime q by move: q_n; rewrite mem_primes; case/andP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by have:= n_dvd_m q q_n; rewrite p_part !pfactor_dvdn // pfactorK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modn_partP n a b : 0 < n -> reflect (forall p : nat, p \\in \\pi(n) -> a = b %[mod n`_p]) (a == b %[mod n]).",
            "VernacStartTheoremProof",
            "8b1b6c697aedf3f2055cf64fa4376c0c8c1687e2"
        ],
        [
            "move=> n_gt0; wlog le_b_a: a b / b <= a.",
            "VernacExtend",
            "6dbaea969dd2e1a08b50e55e2e4c4949c4d27249"
        ],
        [
            "move=> IH; case: (leqP b a) => [|/ltnW] /IH {IH}// IH.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by rewrite eq_sym; apply: (iffP IH) => eqab p; move/eqab.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqn_mod_dvd //; apply: (iffP (dvdn_partP _ n_gt0)) => eqab p /eqab; by rewrite -eqn_mod_dvd // => /eqP.",
            "VernacExtend",
            "96e34964c36bc94366c4f8af7a32b94c647d6647"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma totientE n : n > 0 -> totient n = \\prod_(p <- primes n) (p.-1 * p ^ (logn p n).-1).",
            "VernacStartTheoremProof",
            "e925cf4f3995916063b7801a1e8f27c64fb41510"
        ],
        [
            "move=> n_gt0; rewrite /totient n_gt0 prime_decompE unlock.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by elim: (primes n) => //= [p pr ->]; rewrite !natTrecE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma totient_gt0 n : (0 < totient n) = (0 < n).",
            "VernacStartTheoremProof",
            "586eddfed575c854323c1ea7111467ef3a0d0d16"
        ],
        [
            "case: n => // n; rewrite totientE // big_seq_cond prodn_cond_gt0 // => p.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite mem_primes muln_gt0 expn_gt0; case: p => [|[|]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma totient_pfactor p e : prime p -> e > 0 -> totient (p ^ e) = p.-1 * p ^ e.-1.",
            "VernacStartTheoremProof",
            "093cc8feb0a8134419612e589d4f3ea9dc60935f"
        ],
        [
            "move=> p_pr e_gt0; rewrite totientE ?expn_gt0 ?prime_gt0 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite primes_exp // primes_prime // unlock /= muln1 pfactorK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma totient_coprime m n : coprime m n -> totient (m * n) = totient m * totient n.",
            "VernacStartTheoremProof",
            "72011825881c2cf197c92e21fd7af3fa3797698b"
        ],
        [
            "move=> co_mn; have [-> //| m_gt0] := posnP m.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [->|n_gt0] := posnP n; first by rewrite !muln0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !totientE ?muln_gt0 ?m_gt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /(eq_big_perm _)->: perm_eq (primes (m * n)) (primes m ++ primes n).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: uniq_perm_eq => [||p]; first exact: primes_uniq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cat_uniq !primes_uniq -coprime_has_primes // co_mn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite mem_cat primes_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite big_cat /= !big_seq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (_ * _); apply: eq_bigr => p; rewrite mem_primes => /and3P[_ _ dvp].",
            "VernacExtend",
            "56bc78d8bb1a71d15be349821aa36e25641f1ff9"
        ],
        [
            "rewrite (mulnC m) logn_Gauss //; move: co_mn.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "by rewrite -(divnK dvp) coprime_mull => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite logn_Gauss //; move: co_mn.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "by rewrite coprime_sym -(divnK dvp) coprime_mull => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma totient_count_coprime n : totient n = \\sum_(0 <= d < n) coprime n d.",
            "VernacStartTheoremProof",
            "fd44df29be4071d0257a7a885ff38694ba7ffc85"
        ],
        [
            "elim: {n}_.+1 {-2}n (ltnSn n) => // m IHm n; rewrite ltnS => le_n_m.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "case: (leqP n 1) => [|lt1n]; first by rewrite unlock; case: (n) => [|[]].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose p := pdiv n; have p_pr: prime p by apply: pdiv_prime.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have p1 := prime_gt1 p_pr; have p0 := ltnW p1.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "pose np := n`_p; pose np' := n`_p^'.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have co_npp': coprime np np' by rewrite coprime_partC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [n0 np0 np'0]: [/\\ n > 0, np > 0 & np' > 0] by rewrite ltnW ?part_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_n: n = np * np' by rewrite partnC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have lnp0: 0 < logn p n by rewrite lognE p_pr n0 pdiv_dvd.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose in_mod k (k0 : k > 0) d := Ordinal (ltn_pmod d k0).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite {1}def_n totient_coprime // {IHm}(IHm np') ?big_mkord; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: leq_trans le_n_m; rewrite def_n ltn_Pmull //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite /np p_part -(expn0 p) ltn_exp2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ->: totient np = #|[pred d : 'I_np | coprime np d]|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {1}[np]p_part totient_pfactor //=; set q := p ^ _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "apply: (@addnI (1 * q)); rewrite -mulnDl [1 + _]prednK // mul1n.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have def_np: np = p * q by rewrite -expnS prednK // -p_part.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose mulp := [fun d : 'I_q => in_mod _ np0 (p * d)].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite -def_np -{1}[np]card_ord -(cardC (mem (codom mulp))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite card_in_image => [|[d1 ltd1] [d2 ltd2] /= _ _ []]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP; rewrite def_np -!muln_modr ?modn_small //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite eqn_pmul2l // => eq_op12; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite card_ord; congr (q + _); apply: eq_card => d /=.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "rewrite !inE [np in coprime np _]p_part coprime_pexpl ?prime_coprime //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (~~ _); apply/codomP/idP=> [[d' -> /=] | /dvdnP[r def_d]].",
            "VernacExtend",
            "385739dd8a4f73703d3828c61e1780a276bfaa31"
        ],
        [
            "by rewrite def_np -muln_modr // dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "do [rewrite mulnC; case: d => d ltd /=] in def_d *.",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "have ltr: r < q by rewrite -(ltn_pmul2l p0) -def_np -def_d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists (Ordinal ltr); apply: val_inj; rewrite /= -def_d modn_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose h (d : 'I_n) := (in_mod _ np0 d, in_mod _ np'0 d).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose h' (d : 'I_np * 'I_np') := in_mod _ n0 (chinese np np' d.1 d.2).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite -!big_mkcond -sum_nat_const pair_big (reindex_onto h h') => [|[d d'] _].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: eq_bigl => [[d ltd] /=]; rewrite !inE /= -val_eqE /= andbC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite !coprime_modr def_n -chinese_mod // -coprime_mull -def_n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite modn_small ?eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite /eq_op /= /eq_op /= !modn_dvdm ?dvdn_part //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite chinese_modl // chinese_modr // !modn_small ?eqxx ?ltn_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "edivn2P",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "rewrite -[n]odd_double_half addnC -{1}[n./2]addn0 -{1}mul2n mulnC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: n./2 {1 4}0 => [|r IHr] q; first by case (odd n) => /=.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite addSnnS; apply: IHr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elogn2P",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "rewrite -{1}[n.+1]mul1n -[1]/(2 ^ 0) -{1}(addKn n n) addnn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: n {1 4 6}n {2 3}0 (leqnn n) => [|q IHq] [|[|r]] e //=; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/ltnW; apply: IHq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "clear 1; rewrite subn1 -[_.-1.+1]doubleS -mul2n mulnA -expnSr.",
                        "VernacExtend",
                        "7269f567828888ee8d89e5a0af3221fc3b3a61d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}(addKn q q) addnn; apply: IHq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ifnzP",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "by case: n => [|n]; [right | left].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "primePn",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "rewrite /prime; case: n => [|[|p2]]; try by do 2!left.",
                        "VernacExtend",
                        "17c267b15499613694207e94ac80f6b00681f671"
                    ]
                },
                {
                    "command": [
                        "case: (@prime_decomp_correct p2.+2) => //; rewrite unlock.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: prime_decomp => [|[q [|[|e]]] pd] //=; last first; last by rewrite andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}/pfactor 2!expnS -!mulnA /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (_ ^ _ * _) => [|u -> _ /andP[lt1q _]]; first by rewrite !muln0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "left; right; exists q; last by rewrite dvdn_mulr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have lt0q := ltnW lt1q; rewrite lt1q -{1}[q]muln1 ltn_pmul2l //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[2]muln1 leq_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}/pfactor expn1; case: pd => [|[r e] pd] /=; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: e => [|e] /=; first by rewrite !andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}/pfactor expnS -mulnA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (_ ^ _ * _) => [|u -> _ /and3P[lt1q ltqr _]]; first by rewrite !muln0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "left; right; exists q; last by rewrite dvdn_mulr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite lt1q -{1}[q]mul1n ltn_mul // -[q.+1]muln1 leq_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite muln1 !andbT => def_q pr_q lt1q; right=> [[]] // [d].",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "by rewrite def_q -mem_index_iota => in_d_2q dv_d_q; case/hasP: pr_q; exists d.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "primeP",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "rewrite -[prime p]negbK; have [npr_p | pr_p] := primePn p.",
                        "VernacExtend",
                        "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
                    ]
                },
                {
                    "command": [
                        "right=> [[lt1p pr_p]]; case: npr_p => [|[d n1pd]].",
                        "VernacExtend",
                        "4a95f82aca0fc9a50f43053eca44fc9141212abe"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnNge lt1p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move/pr_p=> /orP[] /eqP def_d; rewrite def_d ltnn ?andbF in n1pd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [lep1 | lt1p] := leqP; first by case: pr_p; left.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "left; split=> // d dv_d_p; apply/norP=> [[nd1 ndp]]; case: pr_p; right.",
                        "VernacExtend",
                        "7c17ff5f141c4fca1110ee2aeb76337518a0b7da"
                    ]
                },
                {
                    "command": [
                        "exists d; rewrite // andbC 2!ltn_neqAle ndp eq_sym nd1.",
                        "VernacExtend",
                        "5feff67e5aab0a5d8cc350202e7f92898c264a30"
                    ]
                },
                {
                    "command": [
                        "by have lt0p := ltnW lt1p; rewrite dvdn_leq // (dvdn_gt0 lt0p).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prime_nt_dvdP",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "case/primeP=> _ min_p d_neq1; apply: (iffP idP) => [/min_p|-> //].",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negPf d_neq1) /= => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prime_gt1",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "by case/primeP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prime_gt0",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "by move/prime_gt1; apply: ltnW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod_prime_decomp",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "by case/prime_decomp_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_prime",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "move=> pr_p; case odd_p: (odd p); [by right | left].",
                        "VernacExtend",
                        "2bd32265a7edcab01d08991c29e54f5dd6b32892"
                    ]
                },
                {
                    "command": [
                        "have: 2 %| p by rewrite dvdn2 odd_p.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case/primeP: pr_p => _ dv_p /dv_p/(2 =P p).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prime_oddPn",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "by move=> p_pr; apply: (iffP idP) => [|-> //]; case/even_prime: p_pr => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_prime_gt2",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "by move=> odd_p /prime_gt1; apply: odd_gt2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prime_coprime",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "case/primeP=> p_gt1 p_pr; apply/eqP/negP=> [d1 | ndv_pm].",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "case/dvdnP=> k def_m; rewrite -(addn0 m) def_m gcdnMDl gcdn0 in d1.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite d1 in p_gt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: gcdn_def => // d /p_pr /orP[] /eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Euclid_dvdM",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "move=> pr_p; case dv_pm: (p %| m); first exact: dvdn_mulr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite Gauss_dvdr // prime_coprime // dv_pm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Euclid_dvd1",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "by rewrite dvdn1; case: eqP => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Euclid_dvdX",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "case: n => [|n] pr_p; first by rewrite andbF Euclid_dvd1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: (inv_inj negbK); rewrite !andbT -!prime_coprime // coprime_pexpr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_primes",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "rewrite andbCA; case: posnP => [-> // | /= n_gt0].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply/mapP/andP=> [[[q e]]|[pr_p]] /=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "case/mem_prime_decomp=> pr_q e_gt0; case/dvdnP=> u -> -> {p}.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(prednK e_gt0) expnS mulnCA dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}(prod_prime_decomp n_gt0) big_seq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply big_ind => [| u v IHu IHv | [q e] /= mem_qe dv_p_qe].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite Euclid_dvd1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite Euclid_dvdM // => /orP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (q, e) => //=; case/mem_prime_decomp: mem_qe => pr_q _ _.",
                        "VernacExtend",
                        "4a95f82aca0fc9a50f43053eca44fc9141212abe"
                    ]
                },
                {
                    "command": [
                        "by rewrite Euclid_dvdX // dvdn_prime2 // in dv_p_qe; case: eqP dv_p_qe.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sorted_primes",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "by case: (posnP n) => [-> // | /prime_decomp_correct[_ _]]; apply: path_sorted.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_primes",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "split=> [eqpr| -> //].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply: (eq_sorted_irr ltn_trans ltnn); rewrite ?sorted_primes.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "primes_uniq",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "exact: (sorted_uniq ltn_trans ltnn (sorted_primes n)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi_pdiv",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "case: n => [|[|n]] //; rewrite /pdiv !inE /primes.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "have:= prod_prime_decomp (ltn0Sn n.+1); rewrite unlock.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by case: prime_decomp => //= pf pd _; rewrite mem_head.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdiv_prime",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "by rewrite -pi_pdiv mem_primes; case/and3P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdiv_dvd",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "by case: n (pi_pdiv n) => [|[|n]] //; rewrite mem_primes=> /and3P[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi_max_pdiv",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "rewrite !inE -pi_pdiv /max_pdiv /pdiv !inE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (primes n) => //= p ps; rewrite mem_head mem_last.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_pdiv_prime",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "by rewrite -pi_max_pdiv mem_primes => /andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_pdiv_dvd",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "by case: n (pi_max_pdiv n) => [|[|n]] //; rewrite mem_primes => /andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdiv_leq",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite dvdn_leq // pdiv_dvd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_pdiv_leq",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite dvdn_leq // max_pdiv_dvd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdiv_gt0",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "by case: n => [|[|n]] //; rewrite prime_gt0 ?pdiv_prime.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_pdiv_gt0",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "by case: n => [|[|n]] //; rewrite prime_gt0 ?max_pdiv_prime.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_pdiv_max",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "rewrite /max_pdiv !inE => n_p.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case/splitPr: n_p (sorted_primes n) => p1 p2; rewrite last_cat -cat_rcons /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite headI /= cat_path -(last_cons 0) -headI last_rcons; case/andP=> _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "move/(order_path_min ltn_trans); case/lastP: p2 => //= p2 q.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by rewrite all_rcons last_rcons ltn_neqAle -andbA => /and3P[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_pdiv2_prime",
            "line_nb": 343,
            "steps": [
                {
                    "command": [
                        "case def_n: n => [|[|n']] // _; rewrite -def_n => lt_n_p2.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "suffices ->: n = pdiv n by rewrite pdiv_prime ?def_n.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_leq leqNgt andbC pdiv_leq; last by rewrite def_n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move: lt_n_p2; rewrite ltnNge; apply: contra => lt_pm_m.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "case/dvdnP: (pdiv_dvd n) => q def_q.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}def_q -mulnn leq_pmul2r // pdiv_min_dvd //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[pdiv n]mul1n {2}def_q ltn_pmul2r in lt_pm_m.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite def_q dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdivP",
            "line_nb": 363,
            "steps": [
                {
                    "command": [
                        "by move=> lt1n; exists (pdiv n); rewrite ?pdiv_dvd ?pdiv_prime.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "primes_mul",
            "line_nb": 366,
            "steps": [
                {
                    "command": [
                        "move=> m_gt0 n_gt0; rewrite !mem_primes muln_gt0 m_gt0 n_gt0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case pr_p: (prime p); rewrite // Euclid_dvdM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "primes_exp",
            "line_nb": 370,
            "steps": [
                {
                    "command": [
                        "case: n => // n _; rewrite expnS; case: (posnP m) => [-> //| m_gt0].",
                        "VernacExtend",
                        "1dd33488047dbf70f12e12a749f59bfa780f9e04"
                    ]
                },
                {
                    "command": [
                        "apply/eq_primes => /= p; elim: n => [|n IHn]; first by rewrite muln1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite primes_mul ?(expn_gt0, expnS, IHn, orbb, m_gt0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_has_primes",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "move=> m_gt0 n_gt0; apply/eqnP/hasPn=> [mn1 p | no_p_mn].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "rewrite /= !mem_primes m_gt0 n_gt0 /= => /andP[pr_p p_n].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have:= prime_gt1 pr_p; rewrite pr_p ltnNge -mn1 /=; apply: contra => p_m.",
                        "VernacExtend",
                        "4266062387bb5ba3b4b273358c36b198e35325af"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdn_leq ?gcdn_gt0 ?m_gt0 // dvdn_gcd ?p_m.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (ltngtP (gcdn m n) 1) => //; first by rewrite ltnNge gcdn_gt0 ?m_gt0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/pdiv_prime; set p := pdiv _ => pr_p.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "move/implyP: (no_p_mn p); rewrite /= !mem_primes m_gt0 n_gt0 pr_p /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(dvdn_trans (pdiv_dvd _)) // (dvdn_gcdl, dvdn_gcdr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdiv_id",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "by move=> p_pr; rewrite /pdiv primes_prime.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdiv_pfactor",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "by move=> p_pr; rewrite /pdiv primes_exp ?primes_prime.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prime_above",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "have /pdivP[p pr_p p_dv_m1]: 1 < m`! + 1 by rewrite addn1 ltnS fact_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists p => //; rewrite ltnNge; apply: contraL p_dv_m1 => p_le_m.",
                        "VernacExtend",
                        "9c74624cac92f94e452c274a33342e43b2955888"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdn_addr ?dvdn_fact ?prime_gt0 // gtnNdvd ?prime_gt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lognE",
            "line_nb": 404,
            "steps": [
                {
                    "command": [
                        "rewrite /logn /dvdn; case p_pr: (prime p) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite /divn modn_def; case def_m: {2 3}m => [|m'] //=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "case: edivnP def_m => [[|q] [|r] -> _] // def_m; congr _.+1; rewrite [_.1]/=.",
                        "VernacExtend",
                        "23f215449c5c6ca9ab389881c2419bdf490a3e5e"
                    ]
                },
                {
                    "command": [
                        "have{m def_m}: q < m'.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS -def_m addn0 mulnC -{1}[q.+1]mul1n ltn_pmul2r // prime_gt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: {m' q}_.+1 {-2}m' q.+1 (ltnSn m') (ltn0Sn q) => // s IHs.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "case=> [[]|r] //= m; rewrite ltnS => lt_rs m_gt0 le_mr.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "rewrite -{3}[m]prednK //=; case: edivnP => [[|q] [|_] def_q _] //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "have{def_q} lt_qm': q < m.-1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[q.+1]muln1 -ltnS prednK // def_q addn0 ltn_pmul2l // prime_gt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{le_mr} le_m'r: m.-1 <= r by rewrite -ltnS prednK.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (IHs r) ?(IHs m.-1) // ?(leq_trans lt_qm', leq_trans _ lt_rs).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logn_gt0",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "by rewrite lognE -mem_primes; case: {+}(p \\in _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_log0",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "by case: n => [|n] ltnp; rewrite lognE ?andbF // gtnNdvd ?andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logn0",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "by rewrite /logn if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logn1",
            "line_nb": 427,
            "steps": [
                {
                    "command": [
                        "by rewrite lognE dvdn1 /= andbC; case: eqP => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfactor_gt0",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "by rewrite expn_gt0 lognE; case: (posnP p) => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfactor_dvdn",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "move=> p_pr; elim: n m => [|n IHn] m m_gt0; first exact: dvd1n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite lognE p_pr m_gt0 /=; case dv_pm: (p %| m); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/dvdnP=> [] [/= q def_m].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite def_m expnS mulnCA dvdn_mulr in dv_pm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/dvdnP: dv_pm m_gt0 => q ->{m}; rewrite muln_gt0 => /andP[p_gt0 q_gt0].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by rewrite expnSr dvdn_pmul2r // mulnK // IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfactor_dvdnn",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "case: n => // n; case pr_p: (prime p); first by rewrite pfactor_dvdn.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite lognE pr_p dvd1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logn_prime",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "move=> pr_q; have q_gt0 := prime_gt0 pr_q; rewrite lognE q_gt0 /=.",
                        "VernacExtend",
                        "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
                    ]
                },
                {
                    "command": [
                        "case pr_p: (prime p); last by case: eqP pr_p pr_q => // -> ->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdn_prime2 //; case: eqP => // ->; rewrite divnn q_gt0 logn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfactor_coprime",
            "line_nb": 451,
            "steps": [
                {
                    "command": [
                        "move=> p_pr n_gt0; set k := logn p n.",
                        "VernacExtend",
                        "fd0300d8899563f42d81dc09cab8269e61be7289"
                    ]
                },
                {
                    "command": [
                        "have dv_pk_n: p ^ k %| n by rewrite pfactor_dvdn.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (n %/ p ^ k); last by rewrite divnK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite prime_coprime // -(@dvdn_pmul2r (p ^ k)) ?expn_gt0 ?prime_gt0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -expnS divnK // pfactor_dvdn // ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfactorK",
            "line_nb": 458,
            "steps": [
                {
                    "command": [
                        "move=> p_pr; have pn_gt0: p ^ n > 0 by rewrite expn_gt0 prime_gt0.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_leq -pfactor_dvdn // dvdnn andbT.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(leq_exp2l _ _ (prime_gt1 p_pr)) dvdn_leq // pfactor_dvdn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfactorKpdiv",
            "line_nb": 463,
            "steps": [
                {
                    "command": [
                        "by case: n => // n p_pr; rewrite pdiv_pfactor ?pfactorK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_leq_log",
            "line_nb": 466,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0 dv_m_n; have m_gt0 := dvdn_gt0 n_gt0 dv_m_n.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "case p_pr: (prime p); last by do 2!rewrite lognE p_pr /=.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -pfactor_dvdn //; apply: dvdn_trans dv_m_n; rewrite pfactor_dvdn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_logl",
            "line_nb": 471,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; have [p_gt1 | p_le1] := boolP (1 < p).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite (leq_trans (ltn_expl _ p_gt1)) // dvdn_leq ?pfactor_dvdnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite lognE (contraNF (@prime_gt1 _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logn_Gauss",
            "line_nb": 476,
            "steps": [
                {
                    "command": [
                        "move=> co_pm; case p_pr: (prime p); last by rewrite /logn p_pr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [-> | n_gt0] := posnP n; first by rewrite muln0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [m0 | m_gt0] := posnP m; first by rewrite m0 prime_coprime ?dvdn0 in co_pm.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have mn_gt0: m * n > 0 by rewrite muln_gt0 m_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_leq andbC dvdn_leq_log ?dvdn_mull //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "set k := logn p _; have: p ^ k %| m * n by rewrite pfactor_dvdn.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "by rewrite Gauss_dvdr ?coprime_expl // -pfactor_dvdn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lognM",
            "line_nb": 485,
            "steps": [
                {
                    "command": [
                        "case p_pr: (prime p); last by rewrite /logn p_pr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have xlp := pfactor_coprime p_pr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/xlp=> m' co_m' def_m /xlp[n' co_n' def_n] {xlp}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite {1}def_m {1}def_n mulnCA -mulnA -expnD !logn_Gauss // pfactorK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lognX",
            "line_nb": 491,
            "steps": [
                {
                    "command": [
                        "case p_pr: (prime p); last by rewrite /logn p_pr muln0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "elim: n => [|n IHn]; first by rewrite logn1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [->|m_gt0] := posnP m; first by rewrite exp0n // lognE andbF muln0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite expnS lognM ?IHn // expn_gt0 m_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logn_div",
            "line_nb": 497,
            "steps": [
                {
                    "command": [
                        "rewrite dvdn_eq => /eqP def_n.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (posnP n) => [-> |]; first by rewrite div0n logn0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1 3}def_n muln_gt0 => /andP[q_gt0 m_gt0]; rewrite lognM ?addnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_pfactor",
            "line_nb": 502,
            "steps": [
                {
                    "command": [
                        "move=> p_pr; have pn_gt0: p ^ n > 0 by rewrite expn_gt0 prime_gt0.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply: (iffP idP) => [dv_d_pn|[m le_m_n ->]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(subnK le_m_n) expnD dvdn_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (logn p d); first by rewrite -(pfactorK n p_pr) dvdn_leq_log.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have d_gt0: d > 0 by apply: dvdn_gt0 dv_d_pn.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (pfactor_coprime p_pr d_gt0) => q co_p_q def_d.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}def_d ((q =P 1) _) ?mul1n // -dvdn1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suff: q %| p ^ n * 1 by rewrite Gauss_dvdr // coprime_sym coprime_expl.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite muln1 (dvdn_trans _ dv_d_pn) // def_d dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prime_decompE",
            "line_nb": 513,
            "steps": [
                {
                    "command": [
                        "case: n => // n; pose f0 := (0, 0); rewrite -map_comp.",
                        "VernacExtend",
                        "ed669a7b6a215c12fddb5899cb8f22def1b5c9ce"
                    ]
                },
                {
                    "command": [
                        "apply: (@eq_from_nth _ f0) => [|i lt_i_n]; first by rewrite size_map.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite (nth_map f0) //; case def_f: (nth _ _ i) => [p e] /=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "congr (_, _); rewrite [n.+1]prod_prime_decomp //.",
                        "VernacExtend",
                        "90723b7805fdae0b93bd8b98ae215a5658363919"
                    ]
                },
                {
                    "command": [
                        "have: (p, e) \\in prime_decomp n.+1 by rewrite -def_f mem_nth.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/mem_prime_decomp=> pr_p _ _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite (big_nth f0) big_mkord (bigD1 (Ordinal lt_i_n)) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite def_f mulnC logn_Gauss ?pfactorK //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply big_ind => [|m1 m2 com1 com2| [j ltj] /=]; first exact: coprimen1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite coprime_mulr com1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -val_eqE /= => nji; case def_j: (nth _ _ j) => [q e1] /=.",
                        "VernacExtend",
                        "4a95f82aca0fc9a50f43053eca44fc9141212abe"
                    ]
                },
                {
                    "command": [
                        "have: (q, e1) \\in prime_decomp n.+1 by rewrite -def_j mem_nth.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/mem_prime_decomp=> pr_q e1_gt0 _; rewrite coprime_pexpr //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite prime_coprime // dvdn_prime2 //; apply: contra nji => eq_pq.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite -(nth_uniq 0 _ _ (primes_uniq n.+1)) ?size_map //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(nth_map f0) // def_f def_j /= eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divn_count_dvd",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "have [-> | d_gt0] := posnP d; first by rewrite big_add1 divn0 big1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: (@addnI (d %| 0)); rewrite -(@big_ltn _ 0 _ 0 _ (dvdn d)) // big_mkord.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite (partition_big (fun i : 'I_n.+1 => inord (i %/ d)) 'I_(n %/ d).+1) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdn0 add1n -{1}[_.+1]card_ord -sum1_card; apply: eq_bigr => [[q ?] _].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite (bigD1 (inord (q * d))) /eq_op /= !inordK ?ltnS -?leq_divRL ?mulnK //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdn_mull ?big1 // => [[i /= ?] /andP[/eqP <- /negPf]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym dvdn_eq inordK ?ltnS ?leq_div2r // => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logn_count_dvd",
            "line_nb": 540,
            "steps": [
                {
                    "command": [
                        "rewrite big_add1 => p_prime; case: n => [|n]; first by rewrite logn0 big_geq.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite big_mkord -big_mkcond (eq_bigl _ _ (fun _ => pfactor_dvdn _ _ _)) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite big_ord_narrow ?sum1_card ?card_ord // -ltnS ltn_logl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trunc_log_bounds",
            "line_nb": 546,
            "steps": [
                {
                    "command": [
                        "rewrite {+}/trunc_log => p_gt1; have p_gt0 := ltnW p_gt1.",
                        "VernacExtend",
                        "d2991b7607b6316c9d43d28c85f87ca601299ca6"
                    ]
                },
                {
                    "command": [
                        "elim: n {-2 5}n (leqnn n) => [|m IHm] [|n] //=; rewrite ltnS => le_n_m _.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "have [le_p_n | // ] := leqP p _; rewrite 2!expnSr -leq_divRL -?ltn_divLR //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by apply: IHm; rewrite ?divn_gt0 // -ltnS (leq_trans (ltn_Pdiv _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trunc_log_ltn",
            "line_nb": 552,
            "steps": [
                {
                    "command": [
                        "have [-> | n_gt0] := posnP n; first by move=> /ltnW; rewrite expn_gt0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/trunc_log_bounds/(_ n_gt0)/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trunc_logP",
            "line_nb": 556,
            "steps": [
                {
                    "command": [
                        "by move=> p_gt1 /(trunc_log_bounds p_gt1)/andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trunc_log_max",
            "line_nb": 559,
            "steps": [
                {
                    "command": [
                        "move=> p_gt1 le_pj_k; rewrite -ltnS -(@ltn_exp2l p) //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "exact: leq_ltn_trans (trunc_log_ltn _ _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negnK",
            "line_nb": 576,
            "steps": [
                {
                    "command": [
                        "by move=> p; apply: negbK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_negn",
            "line_nb": 579,
            "steps": [
                {
                    "command": [
                        "by move=> eq_pi n; rewrite 3!inE /= eq_pi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_piP",
            "line_nb": 582,
            "steps": [
                {
                    "command": [
                        "rewrite /pi_of; have eqs := eq_sorted_irr ltn_trans ltnn.",
                        "VernacExtend",
                        "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
                    ]
                },
                {
                    "command": [
                        "by split=> [|-> //]; move/(eqs _ _ (sorted_primes m) (sorted_primes n)) ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "part_gt0",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "exact: prodn_gt0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_in_partn",
            "line_nb": 590,
            "steps": [
                {
                    "command": [
                        "move=> pi12; rewrite ![n`__]big_mkcond /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply (big_ind2 (fun m1 m2 => m1 %| m2)) => // [*|p _]; first exact: dvdn_mul.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite lognE -mem_primes; case: ifP => pi1p; last exact: dvd1n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => pr_p; [rewrite pi12 | rewrite if_same].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_in_partn",
            "line_nb": 596,
            "steps": [
                {
                    "command": [
                        "by move=> pi12; apply/eqP; rewrite eqn_dvd ?sub_in_partn // => p /pi12->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_partn",
            "line_nb": 599,
            "steps": [
                {
                    "command": [
                        "by move=> pi12; apply: eq_in_partn => p _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partnNK",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "by apply: eq_partn; apply: negnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "widen_partn",
            "line_nb": 605,
            "steps": [
                {
                    "command": [
                        "move=> le_n_m; rewrite big_mkcond /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite [n`_pi](big_nat_widen _ _ m.+1) // big_mkcond /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => p _; rewrite ltnS lognE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: and3P => [[_ n_gt0 p_dv_n]|]; rewrite ?if_same // andbC dvdn_leq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partn0",
            "line_nb": 611,
            "steps": [
                {
                    "command": [
                        "by apply: big1_seq => [] [|n]; rewrite andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partn1",
            "line_nb": 614,
            "steps": [
                {
                    "command": [
                        "by apply: big1_seq => [] [|[|n]]; rewrite andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partnM",
            "line_nb": 617,
            "steps": [
                {
                    "command": [
                        "have le_pmul m' n': m' > 0 -> n' <= m' * n' by move/prednK <-; apply: leq_addr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> mpos npos; rewrite !(@widen_partn (n * m)) 3?(le_pmul, mulnC) //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite !big_mkord -big_split; apply: eq_bigr => p _ /=.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite lognM // expnD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partnX",
            "line_nb": 623,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IHn]; first exact: partn1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite expnS; case: (posnP m) => [->|m_gt0]; first by rewrite partn0 exp1n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite expnS partnM ?IHn // expn_gt0 m_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partn_dvd",
            "line_nb": 628,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0 dvmn; case/dvdnP: dvmn n_gt0 => q ->{n}.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by rewrite muln_gt0 => /andP[q_gt0 m_gt0]; rewrite partnM ?dvdn_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "p_part",
            "line_nb": 632,
            "steps": [
                {
                    "command": [
                        "case (posnP (logn p n)) => [log0 |].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite log0 [n`_p]big1_seq // => q; case/andP; move/eqnP->; rewrite log0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite logn_gt0 mem_primes; case/and3P=> _ n_gt0 dv_p_n.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "have le_p_n: p < n.+1 by rewrite ltnS dvdn_leq.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite [n`_p]big_mkord (big_pred1 (Ordinal le_p_n)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "p_part_eq1",
            "line_nb": 639,
            "steps": [
                {
                    "command": [
                        "rewrite mem_primes p_part lognE; case: and3P => // [[p_pr _ _]].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite -dvdn1 pfactor_dvdn // logn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "p_part_gt1",
            "line_nb": 643,
            "steps": [
                {
                    "command": [
                        "by rewrite ltn_neqAle part_gt0 andbT eq_sym p_part_eq1 negbK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partn_pi",
            "line_nb": 673,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; rewrite {3}(prod_prime_decomp n_gt0) prime_decompE big_map.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[n`__]big_filter filter_pi_of.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partnT",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; rewrite -{2}(partn_pi n_gt0) {2}/partn big_mkcond /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => p _; rewrite -logn_gt0; case: (logn p _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partnC",
            "line_nb": 681,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; rewrite -{3}(partnT n_gt0) /partn.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "do 2!rewrite mulnC big_mkcond /=; rewrite -big_split; apply: eq_bigr => p _ /=.",
                        "VernacExtend",
                        "ec9e03779ece674c610c44b1516bd3f63e1b8216"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulnC inE /=; case: (p \\in pi); rewrite /= (muln1, mul1n).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_part",
            "line_nb": 686,
            "steps": [
                {
                    "command": [
                        "by case: n => // n; rewrite -{2}[n.+1](@partnC pi) // dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logn_part",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "case p_pr: (prime p); first by rewrite p_part pfactorK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite lognE (lognE p m) p_pr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partn_lcm",
            "line_nb": 693,
            "steps": [
                {
                    "command": [
                        "move=> m_gt0 n_gt0; have p_gt0: lcmn m n > 0 by rewrite lcmn_gt0 m_gt0.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_dvd dvdn_lcm !partn_dvd ?dvdn_lcml ?dvdn_lcmr //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite -(dvdn_pmul2r (part_gt0 pi^' (lcmn m n))) partnC // dvdn_lcm !andbT.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}(partnC pi m_gt0) andbC -{1}(partnC pi n_gt0).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !dvdn_mul ?partn_dvd ?dvdn_lcml ?dvdn_lcmr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partn_gcd",
            "line_nb": 700,
            "steps": [
                {
                    "command": [
                        "move=> m_gt0 n_gt0; have p_gt0: gcdn m n > 0 by rewrite gcdn_gt0 m_gt0.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_dvd dvdn_gcd !partn_dvd ?dvdn_gcdl ?dvdn_gcdr //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite -(dvdn_pmul2r (part_gt0 pi^' (gcdn m n))) partnC // dvdn_gcd.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -{3}(partnC pi m_gt0) andbC -{3}(partnC pi n_gt0).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !dvdn_mul ?partn_dvd ?dvdn_gcdl ?dvdn_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partn_biglcm",
            "line_nb": 707,
            "steps": [
                {
                    "command": [
                        "move=> F_gt0; set m := \\big[lcmn/1%N]_(i | P i) F i.",
                        "VernacExtend",
                        "fd0300d8899563f42d81dc09cab8269e61be7289"
                    ]
                },
                {
                    "command": [
                        "have m_gt0: 0 < m by elim/big_ind: m => // p q p_gt0; rewrite lcmn_gt0 p_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_dvd andbC; apply/andP; split.",
                        "VernacExtend",
                        "c6080ad6de433b4aac1c6523f45011ac63415378"
                    ]
                },
                {
                    "command": [
                        "by apply/dvdn_biglcmP=> i Pi; rewrite partn_dvd // (@biglcmn_sup _ i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(dvdn_pmul2r (part_gt0 pi^' m)) partnC //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/dvdn_biglcmP=> i Pi; rewrite -(partnC pi (F_gt0 i Pi)) dvdn_mul //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (@biglcmn_sup _ i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite partn_dvd // (@biglcmn_sup _ i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partn_biggcd",
            "line_nb": 717,
            "steps": [
                {
                    "command": [
                        "move=> ntP F_gt0; set d := \\big[gcdn/0]_(i | P i) F i.",
                        "VernacExtend",
                        "fd0300d8899563f42d81dc09cab8269e61be7289"
                    ]
                },
                {
                    "command": [
                        "have d_gt0: 0 < d.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/card_gt0P: ntP => i /= Pi; have:= F_gt0 i Pi.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "rewrite !lt0n -!dvd0n; apply: contra => dv0d.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite (dvdn_trans dv0d) // (@biggcdn_inf _ i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_dvd; apply/andP; split.",
                        "VernacExtend",
                        "c6080ad6de433b4aac1c6523f45011ac63415378"
                    ]
                },
                {
                    "command": [
                        "by apply/dvdn_biggcdP=> i Pi; rewrite partn_dvd ?F_gt0 // (@biggcdn_inf _ i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(dvdn_pmul2r (part_gt0 pi^' d)) partnC //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/dvdn_biggcdP=> i Pi; rewrite -(partnC pi (F_gt0 i Pi)) dvdn_mul //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (@biggcdn_inf _ i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite partn_dvd ?F_gt0 // (@biggcdn_inf _ i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_in_pnat",
            "line_nb": 730,
            "steps": [
                {
                    "command": [
                        "rewrite /pnat => subpi /andP[-> pi_n].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply/allP=> p pr_p; apply: subpi => //; apply: (allP pi_n).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_in_pnat",
            "line_nb": 734,
            "steps": [
                {
                    "command": [
                        "by move=> eqpi; apply/idP/idP; apply: sub_in_pnat => p /eqpi->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_pnat",
            "line_nb": 737,
            "steps": [
                {
                    "command": [
                        "by move=> eqpi; apply: eq_in_pnat => p _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnatNK",
            "line_nb": 740,
            "steps": [
                {
                    "command": [
                        "exact: eq_pnat (negnK pi).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnatI",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "by rewrite /pnat andbCA all_predI !andbA andbb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnat_mul",
            "line_nb": 746,
            "steps": [
                {
                    "command": [
                        "rewrite /pnat muln_gt0 andbCA -andbA andbCA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: posnP => // n_gt0; case: posnP => //= m_gt0.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "apply/allP/andP=> [pi_mn | [pi_m pi_n] p].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by split; apply/allP=> p m_p; apply: pi_mn; rewrite primes_mul // m_p ?orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite primes_mul // => /orP[]; [apply: (allP pi_m) | apply: (allP pi_n)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnat_exp",
            "line_nb": 753,
            "steps": [
                {
                    "command": [
                        "by case: n => [|n]; rewrite orbC // /pnat expn_gt0 orbC primes_exp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "part_pnat",
            "line_nb": 756,
            "steps": [
                {
                    "command": [
                        "rewrite /pnat primes_part part_gt0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/allP=> p; rewrite mem_filter => /andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnatE",
            "line_nb": 760,
            "steps": [
                {
                    "command": [
                        "by move=> pr_p; rewrite /pnat prime_gt0 ?primes_prime //= andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnat_id",
            "line_nb": 763,
            "steps": [
                {
                    "command": [
                        "by move=> pr_p; rewrite pnatE ?inE /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_pi'",
            "line_nb": 766,
            "steps": [
                {
                    "command": [
                        "by move=> m_gt0 n_gt0; rewrite /pnat n_gt0 all_predC coprime_has_primes.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnat_pi",
            "line_nb": 769,
            "steps": [
                {
                    "command": [
                        "by rewrite /pnat => ->; apply/allP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi_of_dvd",
            "line_nb": 772,
            "steps": [
                {
                    "command": [
                        "move=> m_dv_n n_gt0 p; rewrite !mem_primes n_gt0 => /and3P[-> _ p_dv_m].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "exact: dvdn_trans p_dv_m m_dv_n.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi_ofM",
            "line_nb": 776,
            "steps": [
                {
                    "command": [
                        "by move=> m_gt0 n_gt0 p; apply: primes_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi_of_part",
            "line_nb": 779,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0 p; rewrite /pi_of primes_part mem_filter andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi_of_exp",
            "line_nb": 782,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite /pi_of primes_exp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi_of_prime",
            "line_nb": 785,
            "steps": [
                {
                    "command": [
                        "by move=> pr_p q; rewrite /pi_of primes_prime // mem_seq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "p'natEpi",
            "line_nb": 788,
            "steps": [
                {
                    "command": [
                        "by case: n => // n _; rewrite /pnat all_predC has_pred1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "p'natE",
            "line_nb": 791,
            "steps": [
                {
                    "command": [
                        "case: n => [|n] p_pr; first by case: p p_pr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite p'natEpi // mem_primes p_pr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnatPpi",
            "line_nb": 795,
            "steps": [
                {
                    "command": [
                        "by case/andP=> _ /allP; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnat_dvd",
            "line_nb": 798,
            "steps": [
                {
                    "command": [
                        "by case/dvdnP=> q ->; rewrite pnat_mul; case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnat_div",
            "line_nb": 801,
            "steps": [
                {
                    "command": [
                        "case/dvdnP=> q ->; rewrite pnat_mul andbC => /andP[].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by case: m => // m _; rewrite mulnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnat_coprime",
            "line_nb": 805,
            "steps": [
                {
                    "command": [
                        "case/andP=> m_gt0 pi_m /andP[n_gt0 pi'_n]; rewrite coprime_has_primes //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by apply/hasPn=> p /(allP pi'_n); apply/contra/allP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "p'nat_coprime",
            "line_nb": 809,
            "steps": [
                {
                    "command": [
                        "by move=> pi'm pi_n; rewrite (pnat_coprime pi'm) ?pnatNK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_pnat_coprime",
            "line_nb": 812,
            "steps": [
                {
                    "command": [
                        "by move=> pi'rho pi_m; move/(sub_in_pnat (in1W pi'rho)); apply: pnat_coprime.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime_partC",
            "line_nb": 815,
            "steps": [
                {
                    "command": [
                        "by apply: (@pnat_coprime pi); apply: part_pnat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnat_1",
            "line_nb": 818,
            "steps": [
                {
                    "command": [
                        "by move=> pi_n pi'_n; rewrite -(eqnP (pnat_coprime pi_n pi'_n)) gcdnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "part_pnat_id",
            "line_nb": 821,
            "steps": [
                {
                    "command": [
                        "case/andP=> n_gt0 pi_n.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}(partnT n_gt0) /partn big_mkcond; apply: eq_bigr=> p _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "case: (posnP (logn p n)) => [-> |]; first by rewrite if_same.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite logn_gt0 => /(allP pi_n)/= ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "part_p'nat",
            "line_nb": 827,
            "steps": [
                {
                    "command": [
                        "case/andP=> n_gt0 pi'_n; apply: big1_seq => p /andP[pi_p _].",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "case: (posnP (logn p n)) => [-> //|].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite logn_gt0; move/(allP pi'_n); case/negP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partn_eq1",
            "line_nb": 832,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; apply/eqP/idP=> [pi_n_1|]; last exact: part_p'nat.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(partnC pi n_gt0) pi_n_1 mul1n part_pnat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pnatP",
            "line_nb": 836,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; rewrite /pnat n_gt0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply: (iffP allP) => /= pi_n p => [pr_p p_n|].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite pi_n // mem_primes pr_p n_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mem_primes n_gt0 /=; case/andP; move: p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi_pnat",
            "line_nb": 842,
            "steps": [
                {
                    "command": [
                        "move=> p_n pi_p; have [n_gt0 _] := andP p_n.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by apply/pnatP=> // q q_pr /(pnatP _ n_gt0 p_n _ q_pr)/eqnP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "p_natP",
            "line_nb": 846,
            "steps": [
                {
                    "command": [
                        "by move=> p_n; exists (logn p n); rewrite -p_part part_pnat_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi'_p'nat",
            "line_nb": 849,
            "steps": [
                {
                    "command": [
                        "move=> pi'n pi_p; apply: sub_in_pnat pi'n => q _.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by apply: contraNneq => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi_p'nat",
            "line_nb": 853,
            "steps": [
                {
                    "command": [
                        "by move=> pi_n; apply: pi'_p'nat; rewrite pnatNK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partn_part",
            "line_nb": 856,
            "steps": [
                {
                    "command": [
                        "move=> pi_sub_rho; have [->|n_gt0] := posnP n; first by rewrite !partn0 partn1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}(partnC rho n_gt0) partnM //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suffices: pi^'.-nat n`_rho^' by move/part_p'nat->; rewrite muln1.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by apply: sub_in_pnat (part_pnat _ _) => q _; apply/contra/pi_sub_rho.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partnI",
            "line_nb": 862,
            "steps": [
                {
                    "command": [
                        "rewrite -(@partnC [predI pi & rho] _`_rho) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "symmetry; rewrite 2?partn_part; try by move=> p /andP [].",
                        "VernacExtend",
                        "a2d710628ebd834ac0738db9fcfa4e5062776b56"
                    ]
                },
                {
                    "command": [
                        "rewrite mulnC part_p'nat ?mul1n // pnatNK pnatI part_pnat andbT.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: pnat_dvd (dvdn_part _ _) (part_pnat _ _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_2'nat",
            "line_nb": 868,
            "steps": [
                {
                    "command": [
                        "by case: n => // n; rewrite p'natE // dvdn2 negbK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divisors_correct",
            "line_nb": 873,
            "steps": [
                {
                    "command": [
                        "move/prod_prime_decomp=> def_n; rewrite {4}def_n {def_n}.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have: all prime (primes n) by apply/allP=> p; rewrite mem_primes; case/andP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have:= primes_uniq n; rewrite /primes /divisors; move/prime_decomp: n.",
                        "VernacExtend",
                        "8a8d913dd69d1714bcd5e07d5116dab2a7edffae"
                    ]
                },
                {
                    "command": [
                        "elim=> [|[p e] pd] /=; first by split=> // d; rewrite big_nil dvdn1 mem_seq1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite big_cons /=; move: (foldr _ _ pd) => divs.",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "move=> IHpd /andP[npd_p Upd] /andP[pr_p pr_pd].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have lt0p: 0 < p by apply: prime_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have {IHpd Upd}[Udivs Odivs mem_divs] := IHpd Upd pr_pd.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have ndivs_p m: p * m \\notin divs.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suffices: p \\notin divs; rewrite !mem_divs.",
                        "VernacExtend",
                        "0c8ba50b72da45a37386d34fb62b5fd81590c814"
                    ]
                },
                {
                    "command": [
                        "by apply: contra => /dvdnP[n ->]; rewrite mulnCA dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have ndv_p_1: ~~(p %| 1) by rewrite dvdn1 neq_ltn orbC prime_gt1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite big_seq; elim/big_ind: _ => [//|u v npu npv|[q f] /= pd_qf].",
                        "VernacExtend",
                        "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
                    ]
                },
                {
                    "command": [
                        "by rewrite Euclid_dvdM //; apply/norP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: (f) => // f'; rewrite expnS Euclid_dvdM // orbC negb_or => -> {f'}/=.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "have pd_q: q \\in unzip1 pd by apply/mapP; exists (q, f).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: contra npd_p; rewrite dvdn_prime2 // ?(allP pr_pd) // => /eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: e => [|e] /=; first by split=> // d; rewrite mul1n.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have Tmulp_inj: injective (NatTrec.mul p).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move=> u v /eqP; rewrite !natTrecE eqn_pmul2l // => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (iter e _ _) => divs' [Udivs' Odivs' mem_divs']; split=> [||d].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite merge_uniq cat_uniq map_inj_uniq // Udivs Udivs' andbT /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/hasP=> [[d dv_d /mapP[d' _ def_d]]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by case/idPn: dv_d; rewrite def_d natTrecE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (merge_sorted leq_total) //; case: (divs') Odivs' => //= d ds.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite (@map_path _ _ _ _ leq xpred0) ?has_pred0 // => u v _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !natTrecE leq_pmul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_merge mem_cat; case dv_d_p: (p %| d).",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "case/dvdnP: dv_d_p => d' ->{d}; rewrite mulnC (negbTE (ndivs_p d')) orbF.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite expnS -mulnA dvdn_pmul2l // -mem_divs'.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(mem_map Tmulp_inj divs') natTrecE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case pdiv_d: (_ \\in _).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case/mapP: pdiv_d dv_d_p => d' _ ->; rewrite natTrecE dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_divs Gauss_dvdr // coprime_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite coprime_expl ?prime_coprime ?dv_d_p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sorted_divisors",
            "line_nb": 912,
            "steps": [
                {
                    "command": [
                        "by case: (posnP n) => [-> | /divisors_correct[]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divisors_uniq",
            "line_nb": 915,
            "steps": [
                {
                    "command": [
                        "by case: (posnP n) => [-> | /divisors_correct[]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sorted_divisors_ltn",
            "line_nb": 918,
            "steps": [
                {
                    "command": [
                        "by rewrite ltn_sorted_uniq_leq divisors_uniq sorted_divisors.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_divisors",
            "line_nb": 921,
            "steps": [
                {
                    "command": [
                        "by case/divisors_correct.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divisor1",
            "line_nb": 924,
            "steps": [
                {
                    "command": [
                        "by case: n => // n; rewrite -dvdn_divisors // dvd1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divisors_id",
            "line_nb": 927,
            "steps": [
                {
                    "command": [
                        "by move/dvdn_divisors <-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_sum",
            "line_nb": 930,
            "steps": [
                {
                    "command": [
                        "by move=> dF; elim/big_ind: _ => //; apply: dvdn_add.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdn_partP",
            "line_nb": 933,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; apply: (iffP idP) => n_dvd_m => [p _|].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by apply: dvdn_trans n_dvd_m; apply: dvdn_part.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [-> // | m_gt0] := posnP m.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(partnT n_gt0) -(partnT m_gt0).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite !(@widen_partn (m + n)) ?leq_addl ?leq_addr // /in_mem /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim/big_ind2: _ => // [* | q _]; first exact: dvdn_mul.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [-> // | ] := posnP (logn q n); rewrite logn_gt0 => q_n.",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "have pr_q: prime q by move: q_n; rewrite mem_primes; case/andP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by have:= n_dvd_m q q_n; rewrite p_part !pfactor_dvdn // pfactorK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modn_partP",
            "line_nb": 944,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; wlog le_b_a: a b / b <= a.",
                        "VernacExtend",
                        "6dbaea969dd2e1a08b50e55e2e4c4949c4d27249"
                    ]
                },
                {
                    "command": [
                        "move=> IH; case: (leqP b a) => [|/ltnW] /IH {IH}// IH.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym; apply: (iffP IH) => eqab p; move/eqab.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite eqn_mod_dvd //; apply: (iffP (dvdn_partP _ n_gt0)) => eqab p /eqab; by rewrite -eqn_mod_dvd // => /eqP.",
                        "VernacExtend",
                        "96e34964c36bc94366c4f8af7a32b94c647d6647"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "totientE",
            "line_nb": 950,
            "steps": [
                {
                    "command": [
                        "move=> n_gt0; rewrite /totient n_gt0 prime_decompE unlock.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by elim: (primes n) => //= [p pr ->]; rewrite !natTrecE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "totient_gt0",
            "line_nb": 954,
            "steps": [
                {
                    "command": [
                        "case: n => // n; rewrite totientE // big_seq_cond prodn_cond_gt0 // => p.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by rewrite mem_primes muln_gt0 expn_gt0; case: p => [|[|]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "totient_pfactor",
            "line_nb": 958,
            "steps": [
                {
                    "command": [
                        "move=> p_pr e_gt0; rewrite totientE ?expn_gt0 ?prime_gt0 //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite primes_exp // primes_prime // unlock /= muln1 pfactorK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "totient_count_coprime",
            "line_nb": 977,
            "steps": [
                {
                    "command": [
                        "elim: {n}_.+1 {-2}n (ltnSn n) => // m IHm n; rewrite ltnS => le_n_m.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "case: (leqP n 1) => [|lt1n]; first by rewrite unlock; case: (n) => [|[]].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "pose p := pdiv n; have p_pr: prime p by apply: pdiv_prime.",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "have p1 := prime_gt1 p_pr; have p0 := ltnW p1.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "pose np := n`_p; pose np' := n`_p^'.",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have co_npp': coprime np np' by rewrite coprime_partC.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [n0 np0 np'0]: [/\\ n > 0, np > 0 & np' > 0] by rewrite ltnW ?part_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have def_n: n = np * np' by rewrite partnC.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have lnp0: 0 < logn p n by rewrite lognE p_pr n0 pdiv_dvd.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose in_mod k (k0 : k > 0) d := Ordinal (ltn_pmod d k0).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}def_n totient_coprime // {IHm}(IHm np') ?big_mkord; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: leq_trans le_n_m; rewrite def_n ltn_Pmull //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite /np p_part -(expn0 p) ltn_exp2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have ->: totient np = #|[pred d : 'I_np | coprime np d]|.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}[np]p_part totient_pfactor //=; set q := p ^ _.",
                        "VernacExtend",
                        "c1f58f36c5711f022b4a54717f37c2782f34a159"
                    ]
                },
                {
                    "command": [
                        "apply: (@addnI (1 * q)); rewrite -mulnDl [1 + _]prednK // mul1n.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have def_np: np = p * q by rewrite -expnS prednK // -p_part.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose mulp := [fun d : 'I_q => in_mod _ np0 (p * d)].",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "rewrite -def_np -{1}[np]card_ord -(cardC (mem (codom mulp))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite card_in_image => [|[d1 ltd1] [d2 ltd2] /= _ _ []]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/eqP; rewrite def_np -!muln_modr ?modn_small //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqn_pmul2l // => eq_op12; apply/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite card_ord; congr (q + _); apply: eq_card => d /=.",
                        "VernacExtend",
                        "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE [np in coprime np _]p_part coprime_pexpl ?prime_coprime //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "congr (~~ _); apply/codomP/idP=> [[d' -> /=] | /dvdnP[r def_d]].",
                        "VernacExtend",
                        "385739dd8a4f73703d3828c61e1780a276bfaa31"
                    ]
                },
                {
                    "command": [
                        "by rewrite def_np -muln_modr // dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "do [rewrite mulnC; case: d => d ltd /=] in def_d *.",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "have ltr: r < q by rewrite -(ltn_pmul2l p0) -def_np -def_d.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists (Ordinal ltr); apply: val_inj; rewrite /= -def_d modn_small.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose h (d : 'I_n) := (in_mod _ np0 d, in_mod _ np'0 d).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "pose h' (d : 'I_np * 'I_np') := in_mod _ n0 (chinese np np' d.1 d.2).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "rewrite -!big_mkcond -sum_nat_const pair_big (reindex_onto h h') => [|[d d'] _].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigl => [[d ltd] /=]; rewrite !inE /= -val_eqE /= andbC.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite !coprime_modr def_n -chinese_mod // -coprime_mull -def_n.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite modn_small ?eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite /eq_op /= /eq_op /= !modn_dvdm ?dvdn_part //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite chinese_modl // chinese_modr // !modn_small ?eqxx ?ltn_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}