{
    "filename": "mathcomp/character/character.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq path div choice.",
            "VernacRequire",
            "28f7cc4746e8608411d0ebf22fadc6cf30a98194"
        ],
        [
            "From mathcomp Require Import fintype tuple finfun bigop prime ssralg poly finset gproduct.",
            "VernacRequire",
            "38b290bf2d8ab1bdcfd1b2a3a45169ad73c12500"
        ],
        [
            "From mathcomp Require Import fingroup morphism perm automorphism quotient finalg action.",
            "VernacRequire",
            "f7aa06ce69a2a83b2101824f34d6286c74fbb71d"
        ],
        [
            "From mathcomp Require Import zmodp commutator cyclic center pgroup nilpotent sylow abelian.",
            "VernacRequire",
            "3f87704a0beb681f390239f452a5ffe62320754e"
        ],
        [
            "From mathcomp Require Import matrix mxalgebra mxpoly mxrepresentation vector ssrnum algC.",
            "VernacRequire",
            "edd38c056ec3a8a852b0ac6551d2944958c4af0a"
        ],
        [
            "From mathcomp Require Import classfun.",
            "VernacRequire",
            "a6c8f89eeff3e0ac73076a39435b2ea06c53ec06"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope GRing.Theory Num.Theory.",
            "VernacImport",
            "8d87fd9194cd0dee18ad3305b14d36d18908f225"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Local Notation algCF := [fieldType of algC].",
            "VernacSyntacticDefinition",
            "f1f80fa1b2309af30a1459b2478fd363c9b8ebd2"
        ],
        [
            "Section AlgC.",
            "VernacBeginSection",
            "c4b3bbd2bb71634e8b3a653e6f7766b16aa27a3d"
        ],
        [
            "Variable (gT : finGroupType).",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Lemma groupC : group_closure_field algCF gT.",
            "VernacStartTheoremProof",
            "92382c93807d16f043c7ac630dd0508e1d394e98"
        ],
        [
            "exact: group_closure_closed_field.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AlgC.",
            "VernacEndSegment",
            "b0e2bcb6b1f7f615b535deaa3179d343240dd714"
        ],
        [
            "Section Tensor.",
            "VernacBeginSection",
            "c60bf6d47fd23fe15fc7d952e13c85030406eaf0"
        ],
        [
            "Variable (F : fieldType).",
            "VernacAssumption",
            "dfbeb3104cff90ac5c843c17124389867a4c6a4a"
        ],
        [
            "Fixpoint trow (n1 : nat) : forall (A : 'rV[F]_n1) m2 n2 (B : 'M[F]_(m2,n2)), 'M[F]_(m2,n1 * n2) := if n1 is n'1.+1 then fun (A : 'M[F]_(1,(1 + n'1))) m2 n2 (B : 'M[F]_(m2,n2)) => (row_mx (lsubmx A 0 0 *: B) (trow (rsubmx A) B)) else (fun _ _ _ _ => 0).",
            "VernacFixpoint",
            "a1845f073f1336e23d86870f4804825ea4d97bee"
        ],
        [
            "Lemma trow0 n1 m2 n2 B : @trow n1 0 m2 n2 B = 0.",
            "VernacStartTheoremProof",
            "ecbcfc44ed7b500a12477c557d6d86e9b68ee6af"
        ],
        [
            "elim: n1=> //= n1 IH.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite !mxE scale0r linear0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite IH //; apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by case: split=> *; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition trowb n1 m2 n2 B A := @trow n1 A m2 n2 B.",
            "VernacDefinition",
            "8f2fe4e9d9239d5219b01e473f77871e4cc00c04"
        ],
        [
            "Lemma trowbE n1 m2 n2 A B : trowb B A = @trow n1 A m2 n2 B.",
            "VernacStartTheoremProof",
            "44cab377ae8cf83f13537e6c7fc65a30be244c86"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trowb_is_linear n1 m2 n2 (B : 'M_(m2,n2)) : linear (@trowb n1 m2 n2 B).",
            "VernacStartTheoremProof",
            "a16294ba9beea6bfc8a958f84f8006eeabfb8904"
        ],
        [
            "elim: n1=> [|n1 IH] //= k A1 A2 /=; first by rewrite scaler0 add0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite linearD /= linearZ.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/matrixP=> i j.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite !mxE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: split=> a.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite !mxE mulrDl mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite linearD /= linearZ IH !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure trowb_linear n1 m2 n2 B := Linear (@trowb_is_linear n1 m2 n2 B).",
            "VernacDefinition",
            "1213e0712338719fada32073d16c1adeaae1a4de"
        ],
        [
            "Lemma trow_is_linear n1 m2 n2 (A : 'rV_n1) : linear (@trow n1 A m2 n2).",
            "VernacStartTheoremProof",
            "d09c07466af68d747a9b1868866ff7cebf2026d1"
        ],
        [
            "elim: n1 A => [|n1 IH] //= A k A1 A2 /=; first by rewrite scaler0 add0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite linearD /= linearZ /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: split=> a; rewrite ?IH !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure trow_linear n1 m2 n2 A := Linear (@trow_is_linear n1 m2 n2 A).",
            "VernacDefinition",
            "b9478c47a7d497a663d06b84e94ce6d25840a281"
        ],
        [
            "Fixpoint tprod (m1 : nat) : forall n1 (A : 'M[F]_(m1,n1)) m2 n2 (B : 'M[F]_(m2,n2)), 'M[F]_(m1 * m2,n1 * n2) := if m1 is m'1.+1 return forall n1 (A : 'M[F]_(m1,n1)) m2 n2 (B : 'M[F]_(m2,n2)), 'M[F]_(m1 * m2,n1 * n2) then fun n1 (A : 'M[F]_(1 + m'1,n1)) m2 n2 B => (col_mx (trow (usubmx A) B) (tprod (dsubmx A) B)) else (fun _ _ _ _ _ => 0).",
            "VernacFixpoint",
            "3951356e414d62307be23cedae8c3597546c54c8"
        ],
        [
            "Lemma dsumx_mul m1 m2 n p A B : dsubmx ((A *m B) : 'M[F]_(m1 + m2, n)) = dsubmx (A : 'M_(m1 + m2, p)) *m B.",
            "VernacStartTheoremProof",
            "30293a946223cd715da39aaec8df91129679429d"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE; apply: eq_bigr=> k _.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma usumx_mul m1 m2 n p A B : usubmx ((A *m B) : 'M[F]_(m1 + m2, n)) = usubmx (A : 'M_(m1 + m2, p)) *m B.",
            "VernacStartTheoremProof",
            "f07fe9807720b7979233d3be282f11b08cd75b7d"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE; apply: eq_bigr=> k _; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let trow_mul (m1 m2 n2 p2 : nat) (A : 'rV_m1) (B1: 'M[F]_(m2,n2)) (B2 :'M[F]_(n2,p2)) : trow A (B1 *m B2) = B1 *m trow A B2.",
            "VernacDefinition",
            "2274b654ef60fb7e020810e4b77aa277d858674f"
        ],
        [
            "elim: m1 A => [|m1 IH] A /=; first by rewrite mulmx0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite IH mul_mx_row -scalemxAr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tprodE m1 n1 p1 (A1 :'M[F]_(m1,n1)) (A2 :'M[F]_(n1,p1)) m2 n2 p2 (B1 :'M[F]_(m2,n2)) (B2 :'M[F]_(n2,p2)) : tprod (A1 *m A2) (B1 *m B2) = (tprod A1 B1) *m (tprod A2 B2).",
            "VernacStartTheoremProof",
            "4f9f294ee51119976ebec23070c6ac75c539ae80"
        ],
        [
            "elim: m1 n1 p1 A1 A2 m2 n2 p2 B1 B2 => /= [|m1 IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by move=> *; rewrite mul0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> n1 p1 A1 A2 m2 n2 p2 B1 B2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite mul_col_mx -IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr col_mx; last by rewrite dsumx_mul.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite usumx_mul.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: n1 {A1}(usubmx (A1: 'M_(1 + m1, n1))) p1 A2=> //= [u p1 A2|].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite [A2](flatmx0) !mulmx0 -trowbE linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> n1 IH1 A p1 A2 //=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "set Al := lsubmx _; set Ar := rsubmx _.",
            "VernacExtend",
            "7405ffc63057f1493a790d3f39e251cc5fefe81f"
        ],
        [
            "set Su := usubmx _; set Sd := dsubmx _.",
            "VernacExtend",
            "7405ffc63057f1493a790d3f39e251cc5fefe81f"
        ],
        [
            "rewrite mul_row_col -IH1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{1}(@hsubmxK F 1 1 n1 A).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{1}(@vsubmxK F 1 n1 p1 A2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (@mul_row_col F 1 1 n1 p1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -trowbE linearD /= trowbE -/Al.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (_ + _).",
            "VernacExtend",
            "f3a9615ebe5fa15549c1ecd556f50efbdb2824d9"
        ],
        [
            "rewrite {1}[Al]mx11_scalar mul_scalar_mx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -trowbE linearZ /= trowbE -/Su trow_mul scalemxAl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let tprod_tr m1 n1 (A :'M[F]_(m1, 1 + n1)) m2 n2 (B :'M[F]_(m2, n2)) : tprod A B = row_mx (trow (lsubmx A)^T B^T)^T (tprod (rsubmx A) B).",
            "VernacDefinition",
            "01a4c9aa910eb46b17a8e993c1ebd1452214f1a8"
        ],
        [
            "elim: m1 n1 A m2 n2 B=> [|m1 IH] n1 A m2 n2 B //=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite trmx0 row_mx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose A1 := A : 'M_(1 + m1, 1 + n1).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have F1: dsubmx (rsubmx A1) = rsubmx (dsubmx A1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have F2: rsubmx (usubmx A1) = usubmx (rsubmx A1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have F3: lsubmx (dsubmx A1) = dsubmx (lsubmx A1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite tr_row_mx -block_mxEv -block_mxEh !(F1,F2,F3); congr block_mx.",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !mxE linearZ /= trmxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -trmx_dsub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tprod1 m n : tprod (1%:M : 'M[F]_(m,m)) (1%:M : 'M[F]_(n,n)) = 1%:M.",
            "VernacStartTheoremProof",
            "98e0fe69ba3b2bb595a5cc99b1feab6e9511e12c"
        ],
        [
            "elim: m n => [|m IH] n //=; first by rewrite [1%:M]flatmx0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite tprod_tr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set u := rsubmx _; have->: u = 0.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: i; case: j=> /= j Hj; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set v := lsubmx (dsubmx _); have->: v = 0.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: i; case: j; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set w := rsubmx _; have->: w = 1%:M.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: i; case: j; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite IH -!trowbE !linear0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -block_mxEv.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set z := (lsubmx _) 0 0; have->: z = 1.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "by rewrite /z !mxE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite scale1r scalar_mx_block.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_prod m n (A :'M[F]_(m)) (B :'M[F]_(n)) : \\tr (tprod A B) = \\tr A * \\tr B.",
            "VernacStartTheoremProof",
            "eb51bdc30eb46bc881f90c06316955945deec493"
        ],
        [
            "elim: m n A B => [|m IH] n A B //=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite [A]flatmx0 mxtrace0 mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite tprod_tr -block_mxEv mxtrace_block IH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite linearZ /= -mulrDl; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite -trace_mx11 .",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose A1 := A : 'M_(1 + m).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite -{3}[A](@submxK _ 1 m 1 m A1).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (@mxtrace_block _ _ _ (ulsubmx A1)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Tensor.",
            "VernacEndSegment",
            "b1649e3152371494a05c329be8185584d7ab5e63"
        ],
        [
            "Section StandardRepresentation.",
            "VernacBeginSection",
            "538102091cace292b4bb04e501b99fa2da8ed265"
        ],
        [
            "Variables (R : fieldType) (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "6efeb3f654e72ee3bb7c1f6610befa3cb10861c7"
        ],
        [
            "Local Notation reprG := (mx_representation R G).",
            "VernacSyntacticDefinition",
            "d15d91d45f68f477f0ed4ef1954d1effed54c646"
        ],
        [
            "Record representation := Representation {rdegree; mx_repr_of_repr :> reprG rdegree}.",
            "VernacInductive",
            "ba572c07c4e5656bc023702055fad62ba7beb464"
        ],
        [
            "Lemma mx_repr0 : mx_repr G (fun _ : gT => 1%:M : 'M[R]_0).",
            "VernacStartTheoremProof",
            "34efb8ae2e0b92c0c3238d23f84f7a03e6654c64"
        ],
        [
            "by split=> // g h Hg Hx; rewrite mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition grepr0 := Representation (MxRepresentation mx_repr0).",
            "VernacDefinition",
            "0f6605536029213f62b510100abe3b507c5e1e09"
        ],
        [
            "Lemma add_mx_repr (rG1 rG2 : representation) : mx_repr G (fun g => block_mx (rG1 g) 0 0 (rG2 g)).",
            "VernacStartTheoremProof",
            "d60f660e15f6db601f367c5225a268b8efd22dc9"
        ],
        [
            "split=> [|x y Hx Hy]; first by rewrite !repr_mx1 -scalar_mx_block.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mulmx_block !(mulmx0, mul0mx, addr0, add0r, repr_mxM).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition dadd_grepr rG1 rG2 := Representation (MxRepresentation (add_mx_repr rG1 rG2)).",
            "VernacDefinition",
            "60ce9f5d7af1637634e3a3573ab104790815173d"
        ],
        [
            "Section DsumRepr.",
            "VernacBeginSection",
            "3bb3ebe519a07d2d61e155b2b68d0a338ed6c728"
        ],
        [
            "Variables (n : nat) (rG : reprG n).",
            "VernacAssumption",
            "0d6afc7400b2f9b7892fb32a42c8dcf09fc290ce"
        ],
        [
            "Lemma mx_rsim_dadd (U V W : 'M_n) (rU rV : representation) (modU : mxmodule rG U) (modV : mxmodule rG V) (modW : mxmodule rG W) : (U + V :=: W)%MS -> mxdirect (U + V) -> mx_rsim (submod_repr modU) rU -> mx_rsim (submod_repr modV) rV -> mx_rsim (submod_repr modW) (dadd_grepr rU rV).",
            "VernacStartTheoremProof",
            "9f981a270eb4b3b038775db106e502bbab8c1fe4"
        ],
        [
            "case: rU; case: rV=> nV rV nU rU defW dxUV /=.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have tiUV := mxdirect_addsP dxUV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> [fU def_nU]; rewrite -{nU}def_nU in rU fU * => inv_fU hom_fU.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move=> [fV def_nV]; rewrite -{nV}def_nV in rV fV * => inv_fV hom_fV.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "pose pU := in_submod U (proj_mx U V) *m fU.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose pV := in_submod V (proj_mx V U) *m fV.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "exists (val_submod 1%:M *m row_mx pU pV) => [||g Gg].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -defW (mxdirectP dxUV).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/row_freeP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "pose pU' := invmx fU *m val_submod 1%:M.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose pV' := invmx fV *m val_submod 1%:M.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "exists (in_submod _ (col_mx pU' pV')).",
            "VernacExtend",
            "793b9fb4a1871922132bdeeeb13be95fba5537c1"
        ],
        [
            "rewrite in_submodE mulmxA -in_submodE -mulmxA mul_row_col mulmxDr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[pU *m _]mulmxA -[pV *m _]mulmxA !mulKVmx -?row_free_unit //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addrC (in_submodE V) 2![val_submod 1%:M *m _]mulmxA -in_submodE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addrC (in_submodE U) 2![val_submod 1%:M *m _]mulmxA -in_submodE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!val_submodE !in_submodK ?proj_mx_sub //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite add_proj_mx ?val_submodK // val_submod1 defW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulmxA -val_submodE -[submod_repr _ g]mul1mx val_submodJ //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(mulmxA _ (rG g)) mul_mx_row -mulmxA mul_row_block !mulmx0 addr0 add0r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !mul_mx_row; set W' := val_submod 1%:M; congr (row_mx _ _).",
            "VernacExtend",
            "b1c4910e3091a1f339e1ae0a2dad1fb3e9015be8"
        ],
        [
            "rewrite 3!mulmxA in_submodE mulmxA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have hom_pU: (W' <= dom_hom_mx rG (proj_mx U V))%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite val_submod1 -defW proj_mx_hom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (hom_mxP hom_pU) // -in_submodE (in_submodJ modU) ?proj_mx_sub //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(mulmxA _ _ fU) hom_fU // in_submodE -2!(mulmxA W') -in_submodE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -mulmxA (mulmxA _ fU).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite 3!mulmxA in_submodE mulmxA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have hom_pV: (W' <= dom_hom_mx rG (proj_mx V U))%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite val_submod1 -defW addsmxC proj_mx_hom // capmxC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (hom_mxP hom_pV) // -in_submodE (in_submodJ modV) ?proj_mx_sub //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(mulmxA _ _ fV) hom_fV // in_submodE -2!(mulmxA W') -in_submodE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -mulmxA (mulmxA _ fV).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_dsum (I : finType) (P : pred I) U rU (W : 'M_n) (modU : forall i, mxmodule rG (U i)) (modW : mxmodule rG W) : let S := (\\sum_(i | P i) U i)%MS in (S :=: W)%MS -> mxdirect S -> (forall i, mx_rsim (submod_repr (modU i)) (rU i : representation)) -> mx_rsim (submod_repr modW) (\\big[dadd_grepr/grepr0]_(i | P i) rU i).",
            "VernacStartTheoremProof",
            "42e70fc396591ada8a43da8ca87d04b2d4f9e66d"
        ],
        [
            "move=> /= defW dxW rsimU.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite mxdirectE /= -!(big_filter _ P) in dxW defW *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: {P}(filter P _) => [|i e IHe] in W modW dxW defW *.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite !big_nil /= in defW *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by exists 0 => [||? _]; rewrite ?mul0mx ?mulmx0 // /row_free -defW !mxrank0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !big_cons /= in dxW defW *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite 2!(big_nth i) !big_mkord /= in IHe dxW defW.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set Wi := (\\sum_i _)%MS in defW dxW IHe.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite -mxdirectE mxdirect_addsE !mxdirectE eqxx /= -/Wi in dxW.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have modWi: mxmodule rG Wi by apply: sumsmx_module.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/andP: dxW; move/(IHe Wi modWi) {IHe}; move/(_ (eqmx_refl _))=> rsimWi.",
            "VernacExtend",
            "ad9703cddf270cbbe68f7e9fd9d34355dc053bfe"
        ],
        [
            "by move/eqP; move/mxdirect_addsP=> dxUiWi; apply: mx_rsim_dadd (rsimU i) rsimWi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition muln_grepr rW k := \\big[dadd_grepr/grepr0]_(i < k) rW.",
            "VernacDefinition",
            "de2b9382d05722578aec6e5b6b98c45fae0ffc59"
        ],
        [
            "Lemma mx_rsim_socle (sG : socleType rG) (W : sG) (rW : representation) : let modW : mxmodule rG W := component_mx_module rG (socle_base W) in mx_rsim (socle_repr W) rW -> mx_rsim (submod_repr modW) (muln_grepr rW (socle_mult W)).",
            "VernacStartTheoremProof",
            "398c6be0d99541259154343b35ed628ce06453e3"
        ],
        [
            "set M := socle_base W => modW rsimM.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have simM: mxsimple rG M := socle_simple W.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have rankM_gt0: (\\rank M > 0)%N by rewrite lt0n mxrank_eq0; case: simM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [I /= U_I simU]: mxsemisimple rG W by apply: component_mx_semisimple.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose U (i : 'I_#|I|) := U_I (enum_val i).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have reindexI := reindex _ (onW_bij I (enum_val_bij I)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mxdirectE /= !reindexI -mxdirectE /= => defW dxW.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have isoU: forall i, mx_iso rG M (U i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> i; have sUiW: (U i <= W)%MS by rewrite -defW (sumsmx_sup i).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "exact: component_mx_iso (simU _) sUiW.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have ->: socle_mult W = #|I|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(mulnK #|I| rankM_gt0); congr (_ %/ _)%N.",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite -defW (mxdirectP dxW) /= -sum_nat_const reindexI /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite -(mxrank_iso (isoU i)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have modU: mxmodule rG (U _) := mxsimple_module (simU _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suff: mx_rsim (submod_repr (modU _)) rW by apply: mx_rsim_dsum defW dxW.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by move=> i; apply: mx_rsim_trans (mx_rsim_sym _) rsimM; apply/mx_rsim_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DsumRepr.",
            "VernacEndSegment",
            "7cf8263209bfeb68d4022dc78b09e42d9c1eb5ea"
        ],
        [
            "Section ProdRepr.",
            "VernacBeginSection",
            "7e491c67e85f5356238e752d2c0f65ce4cc688e7"
        ],
        [
            "Variables (n1 n2 : nat) (rG1 : reprG n1) (rG2 : reprG n2).",
            "VernacAssumption",
            "16ac204f54be0e78ae4c19d59ba19a5dff8616e9"
        ],
        [
            "Lemma prod_mx_repr : mx_repr G (fun g => tprod (rG1 g) (rG2 g)).",
            "VernacStartTheoremProof",
            "83a65246208f27412743f452d4fcd896dca77873"
        ],
        [
            "split=>[|i j InG JnG]; first by rewrite !repr_mx1 tprod1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !repr_mxM // tprodE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition prod_repr := MxRepresentation prod_mx_repr.",
            "VernacDefinition",
            "4c16ef8fce82a97a39848c47a2015780ff9f6938"
        ],
        [
            "End ProdRepr.",
            "VernacEndSegment",
            "77b39592cf8d171287e65f022ef7f76133ba1d73"
        ],
        [
            "Lemma prod_repr_lin n2 (rG1 : reprG 1) (rG2 : reprG n2) : {in G, forall x, let cast_n2 := esym (mul1n n2) in prod_repr rG1 rG2 x = castmx (cast_n2, cast_n2) (rG1 x 0 0 *: rG2 x)}.",
            "VernacStartTheoremProof",
            "74f8f6934dd7704675e9ea4267aca2a234b9f57e"
        ],
        [
            "move=> x Gx /=; set cast_n2 := esym _; rewrite /prod_repr /= !mxE !lshift0.",
            "VernacExtend",
            "d4d61c56bbbcb3df906124c1f38d5b03e55e4a88"
        ],
        [
            "apply/matrixP=> i j; rewrite castmxE /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "do 2![rewrite mxE; case: splitP => [? ? | []//]].",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "by congr ((_ *: rG2 x) _ _); apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End StandardRepresentation.",
            "VernacEndSegment",
            "647d70cc93d3fd8cf30a86a57d5056175e197ac0"
        ],
        [
            "Arguments grepr0 {R gT G}.",
            "VernacArguments",
            "fece7e4c28fcac1ad7cc94420419835f117652bb"
        ],
        [
            "Prenex Implicits dadd_grepr.",
            "VernacExtend",
            "b0e32a867d0dc8e12706a3856d3cbabd5428976a"
        ],
        [
            "Section Char.",
            "VernacBeginSection",
            "108d1bec2bc404424babce7460d08a7daf3b262a"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Fact cfRepr_subproof n (rG : mx_representation algCF G n) : is_class_fun <<G>> [ffun x => \\tr (rG x) *+ (x \\in G)].",
            "VernacStartTheoremProof",
            "9e104e0926bd3668cbb6effb7b6dbc20e8f2391f"
        ],
        [
            "rewrite genGid; apply: intro_class_fun => [x y Gx Gy | _ /negbTE-> //].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite groupJr // !repr_mxM ?groupM ?groupV // mxtrace_mulC repr_mxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cfRepr n rG := Cfun 0 (@cfRepr_subproof n rG).",
            "VernacDefinition",
            "e42fa15da6eff2272e9360e17fb71395a61dcdb6"
        ],
        [
            "Lemma cfRepr1 n rG : @cfRepr n rG 1%g = n%:R.",
            "VernacStartTheoremProof",
            "99db656d793a2449a3b60285c1463320abadfbc6"
        ],
        [
            "by rewrite cfunE group1 repr_mx1 mxtrace1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRepr_sim n1 n2 rG1 rG2 : mx_rsim rG1 rG2 -> @cfRepr n1 rG1 = @cfRepr n2 rG2.",
            "VernacStartTheoremProof",
            "4f9e6ddf012a89cb1a51a8b2541b262033decc07"
        ],
        [
            "case/mx_rsim_def=> f12 [f21] fK def_rG1; apply/cfun_inP=> x Gx.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by rewrite !cfunE def_rG1 // mxtrace_mulC mulmxA fK mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRepr0 : cfRepr grepr0 = 0.",
            "VernacStartTheoremProof",
            "8dd3b23bf778c30db716a4b1150ddd27bc696db4"
        ],
        [
            "by apply/cfun_inP=> x Gx; rewrite !cfunE Gx mxtrace1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRepr_dadd rG1 rG2 : cfRepr (dadd_grepr rG1 rG2) = cfRepr rG1 + cfRepr rG2.",
            "VernacStartTheoremProof",
            "d0a2f20358be0b973acd481d9b8c15f84ba96f87"
        ],
        [
            "by apply/cfun_inP=> x Gx; rewrite !cfunE Gx mxtrace_block.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRepr_dsum I r (P : pred I) rG : cfRepr (\\big[dadd_grepr/grepr0]_(i <- r | P i) rG i) = \\sum_(i <- r | P i) cfRepr (rG i).",
            "VernacStartTheoremProof",
            "86c2a0cbc5b7e26fcc051fa42fe43189056ea847"
        ],
        [
            "exact: (big_morph _ cfRepr_dadd cfRepr0).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRepr_muln rG k : cfRepr (muln_grepr rG k) = cfRepr rG *+ k.",
            "VernacStartTheoremProof",
            "f7ed757a125678e1e827e86b2541ec4f9a17b9ed"
        ],
        [
            "by rewrite cfRepr_dsum /= sumr_const card_ord.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section StandardRepr.",
            "VernacBeginSection",
            "84ac088fd972a179f08624295363c07602bcee18"
        ],
        [
            "Variables (n : nat) (rG : mx_representation algCF G n).",
            "VernacAssumption",
            "c31187959b7d406f08029e0d1957df7cc7bb7bba"
        ],
        [
            "Let sG := DecSocleType rG.",
            "VernacDefinition",
            "7174f96f8922ec816a219f7869dd969e59c69eb6"
        ],
        [
            "Let iG : irrType algCF G := DecSocleType _.",
            "VernacDefinition",
            "632e6bc4e7fb32e27e7ac1e1851d5b253037d9a0"
        ],
        [
            "Definition standard_irr (W : sG) := irr_comp iG (socle_repr W).",
            "VernacDefinition",
            "d4592fd15c3a383726ccbc5d55f9b425a580b176"
        ],
        [
            "Definition standard_socle i := pick [pred W | standard_irr W == i].",
            "VernacDefinition",
            "22efe4d6d51e13eb02be96144af0cd9243830c49"
        ],
        [
            "Local Notation soc := standard_socle.",
            "VernacSyntacticDefinition",
            "521476659d3d093fed6407adfd205c1ba1786a03"
        ],
        [
            "Definition standard_irr_coef i := oapp (fun W => socle_mult W) 0%N (soc i).",
            "VernacDefinition",
            "2d1f1ec340073f7208cf4868d8d406fed01b03bf"
        ],
        [
            "Definition standard_grepr := \\big[dadd_grepr/grepr0]_i muln_grepr (Representation (socle_repr i)) (standard_irr_coef i).",
            "VernacDefinition",
            "104088d2fc707201b70d071f355f7bab011ba1df"
        ],
        [
            "Lemma mx_rsim_standard : mx_rsim rG standard_grepr.",
            "VernacStartTheoremProof",
            "6255760adeffcde6e0168865b69bf558c7c03ae6"
        ],
        [
            "pose W i := oapp val 0 (soc i); pose S := (\\sum_i W i)%MS.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have C'G: [char algC]^'.-group G := algC'G G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [defS dxS]: (S :=: 1%:M)%MS /\\ mxdirect S.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /S mxdirectE /= !(bigID soc xpredT) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addsmxC big1 => [|i]; last by rewrite /W; case (soc i).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite adds0mx_id addnC (@big1 nat) ?add0n => [|i]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /W; case: (soc i); rewrite ?mxrank0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have <-: Socle sG = 1%:M := reducible_Socle1 sG (mx_Maschke rG C'G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [W0 _ | noW] := pickP sG; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "suff no_i: (soc : pred iG) =1 xpred0 by rewrite /Socle !big_pred0 ?mxrank0.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by move=> i; rewrite /soc; case: pickP => // W0; have:= noW W0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have irrK Wi: soc (standard_irr Wi) = Some Wi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /soc; case: pickP => [W' | /(_ Wi)] /= /eqP // eqWi.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply/eqP/socle_rsimP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: mx_rsim_trans (rsim_irr_comp iG C'G (socle_irr _)) (mx_rsim_sym _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite [irr_comp _ _]eqWi; apply: rsim_irr_comp (socle_irr _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have bij_irr: {on [pred i | soc i], bijective standard_irr}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (odflt W0 \\o soc) => [Wi _ | i]; first by rewrite /= irrK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite inE /soc /=; case: pickP => //= Wi; move/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !(reindex standard_irr) {bij_irr}//=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have all_soc Wi: soc (standard_irr Wi) by rewrite irrK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (eq_bigr val) => [|Wi _]; last by rewrite /W irrK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !(eq_bigl _ _ all_soc); split=> //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite (eq_bigr (mxrank \\o val)) => [|Wi _]; last by rewrite /W irrK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -mxdirectE /= Socle_direct.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose modW i : mxmodule rG (W i) := if soc i is Some Wi as oWi return mxmodule rG (oapp val 0 oWi) then component_mx_module rG (socle_base Wi) else mxmodule0 rG n.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "apply: mx_rsim_trans (mx_rsim_sym (rsim_submod1 (mxmodule1 rG) _)) _ => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: mx_rsim_dsum (modW) _ defS dxS _ => i.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite /W /standard_irr_coef /modW /soc; case: pickP => [Wi|_] /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /muln_grepr big_ord0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by exists 0 => [||x _]; rewrite ?mxrank0 ?mulmx0 ?mul0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/eqP=> <-; apply: mx_rsim_socle; apply: rsim_irr_comp (socle_irr Wi).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End StandardRepr.",
            "VernacEndSegment",
            "c476ba56019c0c6d8c45e2f4f7d4a0b73b1bb0ee"
        ],
        [
            "Definition cfReg (B : {set gT}) : 'CF(B) := #|B|%:R *: '1_[1].",
            "VernacDefinition",
            "1fa47e580a7e64e07e6321be0a0c146a0678a75a"
        ],
        [
            "Lemma cfRegE x : @cfReg G x = #|G|%:R *+ (x == 1%g).",
            "VernacStartTheoremProof",
            "ee73fabad201663b585533e6755014de296884e6"
        ],
        [
            "by rewrite cfunE cfuniE ?normal1 // inE mulr_natr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfReprReg : cfRepr (regular_repr algCF G) = cfReg G.",
            "VernacStartTheoremProof",
            "e77acc4e80a7943c493dc1713b1d4a8a742992d6"
        ],
        [
            "apply/cfun_inP=> x Gx; rewrite cfRegE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have [-> | ntx] := altP (x =P 1%g); first by rewrite cfRepr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite cfunE Gx [\\tr _]big1 // => i _; rewrite 2!mxE /=.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite -(inj_eq enum_val_inj) gring_indexK ?groupM ?enum_valP //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eq_mulVg1 mulKg (negbTE ntx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition xcfun (chi : 'CF(G)) A := (gring_row A *m (\\col_(i < #|G|) chi (enum_val i))) 0 0.",
            "VernacDefinition",
            "63ac6e4b77c08db2e90c160a57d3cd1c18ab29fc"
        ],
        [
            "Lemma xcfun_is_additive phi : additive (xcfun phi).",
            "VernacStartTheoremProof",
            "6c616b11fa2c9203e292f65b045c1a08e503f59e"
        ],
        [
            "by move=> A B; rewrite /xcfun linearB mulmxBl !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical xcfun_additive phi := Additive (xcfun_is_additive phi).",
            "VernacDefinition",
            "9556495ca70a3f5e9db37629b1a2541d98309455"
        ],
        [
            "Lemma xcfunZr a phi A : xcfun phi (a *: A) = a * xcfun phi A.",
            "VernacStartTheoremProof",
            "9b1556661a4b5932406bfe87b36e20b861893a3c"
        ],
        [
            "by rewrite /xcfun linearZ -scalemxAl mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition xcfun_r_head k A phi := let: tt := k in xcfun phi A.",
            "VernacDefinition",
            "0dd5fce9b7c6b446a971e8dd57e0fed1b3b5898d"
        ],
        [
            "Local Notation xcfun_r A := (xcfun_r_head tt A).",
            "VernacSyntacticDefinition",
            "61d48da2a5ccf0bd75b40d369d4fd8c57de83073"
        ],
        [
            "Lemma xcfun_rE A chi : xcfun_r A chi = xcfun chi A.",
            "VernacStartTheoremProof",
            "54d61bae45a9a180529c6f58bad63801f82f53c0"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact xcfun_r_is_additive A : additive (xcfun_r A).",
            "VernacStartTheoremProof",
            "bf7e673a9cdc1d11e6b8798ed8d984b246d71139"
        ],
        [
            "move=> phi psi; rewrite /= /xcfun !mxE -sumrB; apply: eq_bigr => i _.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite !mxE !cfunE mulrBr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical xcfun_r_additive A := Additive (xcfun_r_is_additive A).",
            "VernacDefinition",
            "36b8e6a52aa2245d177211f1f5f2b6acd3493a13"
        ],
        [
            "Lemma xcfunZl a phi A : xcfun (a *: phi) A = a * xcfun phi A.",
            "VernacStartTheoremProof",
            "7d0b96a751915bbeea9278e71863a6c91047d54b"
        ],
        [
            "rewrite /xcfun !mxE big_distrr; apply: eq_bigr => i _ /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !mxE cfunE mulrCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xcfun_repr n rG A : xcfun (@cfRepr n rG) A = \\tr (gring_op rG A).",
            "VernacStartTheoremProof",
            "ea04cbe6a42020126200a72ba9847fcee65903fc"
        ],
        [
            "rewrite gring_opE [gring_row A]row_sum_delta !linear_sum /xcfun !mxE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => i _; rewrite !mxE /= !linearZ cfunE enum_valP /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by congr (_ * \\tr _) => {A} /=; rewrite /gring_mx /= -rowE rowK mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Char.",
            "VernacEndSegment",
            "8e868c61fe088c43f061ef174617457bf4cbefcb"
        ],
        [
            "Notation xcfun_r A := (xcfun_r_head tt A).",
            "VernacSyntacticDefinition",
            "5d68ade413195a00c00a0b00f72b66961063d42c"
        ],
        [
            "Notation \"phi .[ A ]\" := (xcfun phi A) : cfun_scope.",
            "VernacNotation",
            "1f3aa3555d155214ceb1eb16d37b18def9b21e42"
        ],
        [
            "Definition pred_Nirr gT B := #|@classes gT B|.-1.",
            "VernacDefinition",
            "50300c8907b6c827c5852a00fc0ef27069fbba11"
        ],
        [
            "Arguments pred_Nirr {gT} B%g.",
            "VernacArguments",
            "444ba190b761ef2905938bfc0138e958bea6ebf1"
        ],
        [
            "Notation Nirr G := (pred_Nirr G).+1.",
            "VernacSyntacticDefinition",
            "620c2b4f8b48f02cd2a48b25b27d56fa37276cf9"
        ],
        [
            "Notation Iirr G := 'I_(Nirr G).",
            "VernacSyntacticDefinition",
            "99e66dab57186b07d380605ba921dbd4648d14af"
        ],
        [
            "Section IrrClassDef.",
            "VernacBeginSection",
            "ccaea551cb929f3a32ad50927edce839e57c20d4"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Let sG := DecSocleType (regular_repr algCF G).",
            "VernacDefinition",
            "e60d87af0647f833cc599b665260de7b0f826ba5"
        ],
        [
            "Lemma NirrE : Nirr G = #|classes G|.",
            "VernacStartTheoremProof",
            "0ed21fa265161a562c191f5d7ac07e31bee482f9"
        ],
        [
            "by rewrite /pred_Nirr (cardD1 [1]) classes1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Iirr_cast : Nirr G = #|sG|.",
            "VernacStartTheoremProof",
            "0fac032329fcebf7833f6e8e229b6d17680a8ee6"
        ],
        [
            "by rewrite NirrE ?card_irr ?algC'G //; apply: groupC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let offset := cast_ord (esym Iirr_cast) (enum_rank [1 sG]%irr).",
            "VernacDefinition",
            "8325843ffcf4fee72ea43678aba2beedf7e5ab1b"
        ],
        [
            "Definition socle_of_Iirr (i : Iirr G) : sG := enum_val (cast_ord Iirr_cast (i + offset)).",
            "VernacDefinition",
            "1637d4cf70a6b44839c6b08a4ee98cb403ee4600"
        ],
        [
            "Definition irr_of_socle (Wi : sG) : Iirr G := cast_ord (esym Iirr_cast) (enum_rank Wi) - offset.",
            "VernacDefinition",
            "4c7266fb96046858a08ed4db0885cbb22a9254e4"
        ],
        [
            "Local Notation W := socle_of_Iirr.",
            "VernacSyntacticDefinition",
            "5d45c35ae13558887d5ad7e34114d8aeecea574c"
        ],
        [
            "Lemma socle_Iirr0 : W 0 = [1 sG]%irr.",
            "VernacStartTheoremProof",
            "f7b2037591821095ba012681941e57c4ce8012c0"
        ],
        [
            "by rewrite /W add0r cast_ordKV enum_rankK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma socle_of_IirrK : cancel W irr_of_socle.",
            "VernacStartTheoremProof",
            "2684555c470d246ab9690131249e5de4fda47a51"
        ],
        [
            "by move=> i; rewrite /irr_of_socle enum_valK cast_ordK addrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_of_socleK : cancel irr_of_socle W.",
            "VernacStartTheoremProof",
            "194b01b06eaf05ce15d4a98487bc35e96e4a21f7"
        ],
        [
            "by move=> Wi; rewrite /W subrK cast_ordKV enum_rankK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve socle_of_IirrK irr_of_socleK : core.",
            "VernacHints",
            "caf5802741e85c262259c49a1681b7be27245aaf"
        ],
        [
            "Lemma irr_of_socle_bij (A : pred (Iirr G)) : {on A, bijective irr_of_socle}.",
            "VernacStartTheoremProof",
            "3c1aee8c8b80c42dbd3c387771db55af55002c5d"
        ],
        [
            "by apply: onW_bij; exists W.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma socle_of_Iirr_bij (A : pred sG) : {on A, bijective W}.",
            "VernacStartTheoremProof",
            "fff0878297488f0366962106b4aea882f7824542"
        ],
        [
            "by apply: onW_bij; exists irr_of_socle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IrrClassDef.",
            "VernacEndSegment",
            "aa1db59cda1ebbd8ba900ec21f091ca8cb9f5035"
        ],
        [
            "Prenex Implicits socle_of_IirrK irr_of_socleK.",
            "VernacExtend",
            "48cfa603c3152dec7763424cf606bdaa968a3df4"
        ],
        [
            "Arguments socle_of_Iirr {gT G%G} i%R.",
            "VernacArguments",
            "d77a26002a5e52cc56033df28af8c4d899efea18"
        ],
        [
            "Notation \"''Chi_' i\" := (irr_repr (socle_of_Iirr i)) (at level 8, i at level 2, format \"''Chi_' i\").",
            "VernacNotation",
            "44afbef7174e83717a9e50dfa04c1647d237d346"
        ],
        [
            "Fact irr_key : unit.",
            "VernacStartTheoremProof",
            "ea330cd96bdb71899203ac161448f734d9965f92"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition irr_def gT B : (Nirr B).-tuple 'CF(B) := let irr_of i := 'Res[B, <<B>>] (@cfRepr gT _ _ 'Chi_(inord i)) in [tuple of mkseq irr_of (Nirr B)].",
            "VernacDefinition",
            "7ceb52d70edccbe3fdde6f5504dc8a777e914033"
        ],
        [
            "Definition irr := locked_with irr_key irr_def.",
            "VernacDefinition",
            "292e90005bb569efcb40ace087a1c87d297cf03c"
        ],
        [
            "Arguments irr {gT} B%g.",
            "VernacArguments",
            "31af52d160ebd8d748059940649b533e1cc555c9"
        ],
        [
            "Notation \"''chi_' i\" := (tnth (irr _) i%R) (at level 8, i at level 2, format \"''chi_' i\") : ring_scope.",
            "VernacNotation",
            "7adde7b1b9d83dafdf4b04f275937b4ae264caa4"
        ],
        [
            "Notation \"''chi[' G ]_ i\" := (tnth (irr G) i%R) (at level 8, i at level 2, only parsing) : ring_scope.",
            "VernacNotation",
            "4917cccc80c14ba986187a705188048858e1d36b"
        ],
        [
            "Section IrrClass.",
            "VernacBeginSection",
            "a27608d3cb1c14a9db35329ef6207a4fd6284ce4"
        ],
        [
            "Variable (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Implicit Types (i : Iirr G) (B : {set gT}).",
            "VernacReserve",
            "17d11e12872149e7cb6a9d1b356fccd3a1a5e7f6"
        ],
        [
            "Open Scope group_ring_scope.",
            "VernacOpenCloseScope",
            "0f6c916f53638e1fb0fec28012fa88dffde4c863"
        ],
        [
            "Lemma congr_irr i1 i2 : i1 = i2 -> 'chi_i1 = 'chi_i2.",
            "VernacStartTheoremProof",
            "8d12d52c5394b183218df046d5bec21b2c6f87ba"
        ],
        [
            "by move->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Iirr1_neq0 : G :!=: 1%g -> inord 1 != 0 :> Iirr G.",
            "VernacStartTheoremProof",
            "3aa3b7d5bf7b1fdcf63bac0ab604033889725f8d"
        ],
        [
            "by rewrite -classes_gt1 -NirrE -val_eqE /= => /inordK->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma has_nonprincipal_irr : G :!=: 1%g -> {i : Iirr G | i != 0}.",
            "VernacStartTheoremProof",
            "75e022ec01357e7283eb1097104eadc1327f0b88"
        ],
        [
            "by move/Iirr1_neq0; exists (inord 1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irrRepr i : cfRepr 'Chi_i = 'chi_i.",
            "VernacStartTheoremProof",
            "81e7d5821fb376672bbc6c2e28e7ad159f40d149"
        ],
        [
            "rewrite [@irr]unlock (tnth_nth 0) nth_mkseq // -[<<G>>]/(gval _) genGidG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfRes_id inord_val.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr0 : 'chi[G]_0 = 1.",
            "VernacStartTheoremProof",
            "12f559b81b6e4b1c681965bfd8cf843677816129"
        ],
        [
            "apply/cfun_inP=> x Gx; rewrite -irrRepr cfun1E cfunE Gx.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite socle_Iirr0 irr1_repr // mxtrace1 degree_irr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfun1_irr : 1 \\in irr G.",
            "VernacStartTheoremProof",
            "c4b6bec2c21603a5610c1815df6dd537dc6db472"
        ],
        [
            "by rewrite -irr0 mem_tnth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_irr i : 'chi_i \\in irr G.",
            "VernacStartTheoremProof",
            "2bfc92d4b0c34aa86ea4304289c05c64129821ee"
        ],
        [
            "exact: mem_tnth.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irrP xi : reflect (exists i, xi = 'chi_i) (xi \\in irr G).",
            "VernacStartTheoremProof",
            "2cabb9cef6db1766bb2847aa5f22aa45c7460cf9"
        ],
        [
            "apply: (iffP idP) => [/(nthP 0)[i] | [i ->]]; last exact: mem_irr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite size_tuple => lt_i_G <-.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by exists (Ordinal lt_i_G); rewrite (tnth_nth 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let sG := DecSocleType (regular_repr algCF G).",
            "VernacDefinition",
            "e60d87af0647f833cc599b665260de7b0f826ba5"
        ],
        [
            "Let C'G := algC'G G.",
            "VernacDefinition",
            "4d54b7cfb61ef236d68b2a10dda2ff6545628cda"
        ],
        [
            "Let closG := @groupC _ G.",
            "VernacDefinition",
            "1a1b73872cfc2a4c058d8e8d3295b15f23be78ba"
        ],
        [
            "Local Notation W i := (@socle_of_Iirr _ G i).",
            "VernacSyntacticDefinition",
            "5ef2b77170ea94a910e180a702e5cd0ade7947b8"
        ],
        [
            "Local Notation \"''n_' i\" := 'n_(W i).",
            "VernacNotation",
            "a6e039ac97ab9158daa810f3bfbef3843f088442"
        ],
        [
            "Local Notation \"''R_' i\" := 'R_(W i).",
            "VernacNotation",
            "9d1b5fca322772546a010afb689e8b7c0ca8eb78"
        ],
        [
            "Local Notation \"''e_' i\" := 'e_(W i).",
            "VernacNotation",
            "b23967c42add12d29ec1b5832f9c50b86810550a"
        ],
        [
            "Lemma irr1_degree i : 'chi_i 1%g = ('n_i)%:R.",
            "VernacStartTheoremProof",
            "d43a48c8dfd4c564e72a36c9f766f7c1663c6d8e"
        ],
        [
            "by rewrite -irrRepr cfRepr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cnat_irr1 i : 'chi_i 1%g \\in Cnat.",
            "VernacStartTheoremProof",
            "720793e26bd808d7f95ea49a7c0f0fbbcc7eb9aa"
        ],
        [
            "by rewrite irr1_degree rpred_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr1_gt0 i : 0 < 'chi_i 1%g.",
            "VernacStartTheoremProof",
            "e57bcd4472cd3513ed36842b174ad74ffe35183b"
        ],
        [
            "by rewrite irr1_degree ltr0n irr_degree_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr1_neq0 i : 'chi_i 1%g != 0.",
            "VernacStartTheoremProof",
            "8c5e0188f5b4f61d13ddc2951b6fad5d5a7f42f7"
        ],
        [
            "by rewrite eqr_le ltr_geF ?irr1_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_neq0 i : 'chi_i != 0.",
            "VernacStartTheoremProof",
            "ac63e84650581ef78841c27ae7fd29382bd05920"
        ],
        [
            "by apply: contraNneq (irr1_neq0 i) => ->; rewrite cfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cfIirr B (chi : 'CF(B)) : Iirr B := inord (index chi (irr B)).",
            "VernacDefinition",
            "ad2e4a844ace65ac2bcf959ac67934ec2e02442d"
        ],
        [
            "Lemma cfIirrE chi : chi \\in irr G -> 'chi_(cfIirr chi) = chi.",
            "VernacStartTheoremProof",
            "99a887b9e65da263ace84a809731d43a11800e54"
        ],
        [
            "move=> chi_irr; rewrite (tnth_nth 0) inordK ?nth_index //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -index_mem size_tuple in chi_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfIirrPE J (f : J -> 'CF(G)) (P : pred J) : (forall j, P j -> f j \\in irr G) -> forall j, P j -> 'chi_(cfIirr (f j)) = f j.",
            "VernacStartTheoremProof",
            "a6c0c493082e63d6a17552415d5dee07acd0ca0c"
        ],
        [
            "by move=> irr_f j /irr_f; apply: cfIirrE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary irr_sum_square : \\sum_i ('chi[G]_i 1%g) ^+ 2 = #|G|%:R.",
            "VernacStartTheoremProof",
            "25a50df335092af4a6acce3dc9ba362984a51a43"
        ],
        [
            "rewrite -(sum_irr_degree sG) // natr_sum (reindex _ (socle_of_Iirr_bij _)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite irr1_degree natrX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfReg_sum : cfReg G = \\sum_i 'chi_i 1%g *: 'chi_i.",
            "VernacStartTheoremProof",
            "bd994ec9f408af13e6bed41b08dbde29d780fc8f"
        ],
        [
            "apply/cfun_inP=> x Gx; rewrite -cfReprReg cfunE Gx (mxtrace_regular sG) //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite sum_cfunE (reindex _ (socle_of_Iirr_bij _)); apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -irrRepr cfRepr1 !cfunE Gx mulr_natl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let aG := regular_repr algCF G.",
            "VernacDefinition",
            "396af75aeba6a085de2e77d2a748928e2bafabfb"
        ],
        [
            "Let R_G := group_ring algCF G.",
            "VernacDefinition",
            "27880f7c990d9e26dbda8ea72d4498b4443877fb"
        ],
        [
            "Lemma xcfun_annihilate i j A : i != j -> (A \\in 'R_j)%MS -> ('chi_i).[A]%CF = 0.",
            "VernacStartTheoremProof",
            "e513948d978d76492a28c0ca2721394a7e2190ad"
        ],
        [
            "move=> neq_ij RjA; rewrite -irrRepr xcfun_repr.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (irr_repr'_op0 _ _ RjA) ?raddf0 // eq_sym (can_eq socle_of_IirrK).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xcfunG phi x : x \\in G -> phi.[aG x]%CF = phi x.",
            "VernacStartTheoremProof",
            "bd0e63e8331b25911bafd1fff757f7d4dc1e4b1f"
        ],
        [
            "by move=> Gx; rewrite /xcfun /gring_row rowK -rowE !mxE !(gring_indexK, mul1g).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xcfun_mul_id i A : (A \\in R_G)%MS -> ('chi_i).['e_i *m A]%CF = ('chi_i).[A]%CF.",
            "VernacStartTheoremProof",
            "23ebf8f3176eda716ed42b1b1d5c1b8c4ae82013"
        ],
        [
            "move=> RG_A; rewrite -irrRepr !xcfun_repr gring_opM //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite op_Wedderburn_id ?mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xcfun_id i j : ('chi_i).['e_j]%CF = 'chi_i 1%g *+ (i == j).",
            "VernacStartTheoremProof",
            "b6450c096d90a439733dfac7deaee8818dde1810"
        ],
        [
            "have [<-{j} | /xcfun_annihilate->//] := altP eqP; last exact: Wedderburn_id_mem.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -xcfunG // repr_mx1 -(xcfun_mul_id _ (envelop_mx1 _)) mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_free : free (irr G).",
            "VernacStartTheoremProof",
            "1e7266dca016047416f1e0a95ad1ddedb0ee7933"
        ],
        [
            "apply/freeP=> s s0 i; apply: (mulIf (irr1_neq0 i)).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite mul0r -(raddf0 (xcfun_r_additive 'e_i)) -{}s0 raddf_sum /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (bigD1 i) //= -tnth_nth xcfunZl xcfun_id eqxx big1 ?addr0 // => j ne_ji.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -tnth_nth xcfunZl xcfun_id (negbTE ne_ji) mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_inj : injective (tnth (irr G)).",
            "VernacStartTheoremProof",
            "5e74f525b8f2cf0c221c91a1835a69e2d9a68cde"
        ],
        [
            "by apply/injectiveP/free_uniq; rewrite map_tnth_enum irr_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irrK : cancel (tnth (irr G)) (@cfIirr G).",
            "VernacStartTheoremProof",
            "598d834afe09817495baf786aa3338ea829737b5"
        ],
        [
            "by move=> i; apply: irr_inj; rewrite cfIirrE ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_eq1 i : ('chi_i == 1) = (i == 0).",
            "VernacStartTheoremProof",
            "d78b328c43c9d427b3b6d59684c6b6e4f48bfc17"
        ],
        [
            "by rewrite -irr0 (inj_eq irr_inj).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cforder_irr_eq1 i : (#['chi_i]%CF == 1%N) = (i == 0).",
            "VernacStartTheoremProof",
            "020a16032aefe4b93551994647899cb3f9af1e21"
        ],
        [
            "by rewrite -dvdn1 dvdn_cforder irr_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_basis : basis_of 'CF(G)%VS (irr G).",
            "VernacStartTheoremProof",
            "f8db2f7614176f2265ac3019dec80278c57ae398"
        ],
        [
            "rewrite /basis_of irr_free andbT -dimv_leqif_eq ?subvf //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite dim_cfun (eqnP irr_free) size_tuple NirrE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_sum_nth_irr a : \\sum_i a i *: 'chi[G]_i = \\sum_i a i *: (irr G)`_i.",
            "VernacStartTheoremProof",
            "36373156046bfd694b5c32dfe4d862ce69cf7965"
        ],
        [
            "by apply: eq_bigr => i; rewrite -tnth_nth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cfun_irr_sum phi : {a | phi = \\sum_i a i *: 'chi[G]_i}.",
            "VernacStartTheoremProof",
            "a9181593f238b86f4a09ed93ec9ce9536872bdaf"
        ],
        [
            "rewrite (coord_basis irr_basis (memvf phi)) -eq_sum_nth_irr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by exists ((coord (irr G))^~ phi).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRepr_standard n (rG : mx_representation algCF G n) : cfRepr (standard_grepr rG) = \\sum_i (standard_irr_coef rG (W i))%:R *: 'chi_i.",
            "VernacStartTheoremProof",
            "ec778b5f8e4e116f7ee1e799d57d17f3c3ab8e2b"
        ],
        [
            "rewrite cfRepr_dsum (reindex _ (socle_of_Iirr_bij _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite scaler_nat cfRepr_muln irrRepr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRepr_inj n1 n2 rG1 rG2 : @cfRepr _ G n1 rG1 = @cfRepr _ G n2 rG2 -> mx_rsim rG1 rG2.",
            "VernacStartTheoremProof",
            "fd59b0b9ba61cfbcd5f083c6c6f618f8d1a6e75d"
        ],
        [
            "move=> eq_repr12; pose c i : algC := (standard_irr_coef _ (W i))%:R.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have [rsim1 rsim2] := (mx_rsim_standard rG1, mx_rsim_standard rG2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: mx_rsim_trans (rsim1) (mx_rsim_sym _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "suffices ->: standard_grepr rG1 = standard_grepr rG2 by [].",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply: eq_bigr => Wi _; congr (muln_grepr _ _); apply/eqP; rewrite -eqC_nat.",
            "VernacExtend",
            "fa6171a79bfbc42d0445547471a3cf297b71778a"
        ],
        [
            "rewrite -[Wi]irr_of_socleK -!/(c _ _ _) -!(coord_sum_free (c _ _) _ irr_free).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!eq_sum_nth_irr -!cfRepr_standard.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(cfRepr_sim rsim1) -(cfRepr_sim rsim2) eq_repr12.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRepr_rsimP n1 n2 rG1 rG2 : reflect (mx_rsim rG1 rG2) (@cfRepr _ G n1 rG1 == @cfRepr _ G n2 rG2).",
            "VernacStartTheoremProof",
            "c684c39a92a554260299735ce0e30b49eb8245b4"
        ],
        [
            "by apply: (iffP eqP) => [/cfRepr_inj | /cfRepr_sim].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_reprP xi : reflect (exists2 rG : representation _ G, mx_irreducible rG & xi = cfRepr rG) (xi \\in irr G).",
            "VernacStartTheoremProof",
            "5c2af0ea969fc456825dc8b70d23d74d37866235"
        ],
        [
            "apply: (iffP (irrP xi)) => [[i ->] | [[n rG] irr_rG ->]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by exists (Representation 'Chi_i); [apply: socle_irr | rewrite irrRepr].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (irr_of_socle (irr_comp sG rG)); rewrite -irrRepr irr_of_socleK /=.",
            "VernacExtend",
            "df8eea71c391f03b8af1d458a891c7ccc6dcd139"
        ],
        [
            "exact/cfRepr_sim/rsim_irr_comp.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_id_expansion i : 'e_i = #|G|%:R^-1 *: \\sum_(x in G) 'chi_i 1%g * 'chi_i x^-1%g *: aG x.",
            "VernacStartTheoremProof",
            "8c238a4e6c1f0898a28a1e1815f9ce8479534e41"
        ],
        [
            "have Rei: ('e_i \\in 'R_i)%MS by apply: Wedderburn_id_mem.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /envelop_mxP[a def_e]: ('e_i \\in R_G)%MS; last rewrite -/aG in def_e.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move: Rei; rewrite genmxE mem_sub_gring => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: canRL (scalerK (neq0CG _)) _; rewrite def_e linear_sum /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: eq_bigr => x Gx; have Gx' := groupVr Gx; rewrite scalerA; congr (_ *: _).",
            "VernacExtend",
            "184231714b997f135dd5a3ee8823aaa5beaade04"
        ],
        [
            "transitivity (cfReg G).['e_i *m aG x^-1%g]%CF.",
            "VernacExtend",
            "7fc1d8bfbcb611897b30c1fb9114e403f75081bb"
        ],
        [
            "rewrite def_e mulmx_suml raddf_sum (bigD1 x) //= -scalemxAl xcfunZr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -repr_mxM // mulgV xcfunG // cfRegE eqxx mulrC big1 ?addr0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move=> y /andP[Gy /negbTE neq_xy]; rewrite -scalemxAl xcfunZr -repr_mxM //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite xcfunG ?groupM // cfRegE -eq_mulgV1 neq_xy mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite cfReg_sum -xcfun_rE raddf_sum /= (bigD1 i) //= xcfunZl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite xcfun_mul_id ?envelop_mx_id ?xcfunG ?groupV ?big1 ?addr0 // => j ne_ji.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite xcfunZl (xcfun_annihilate ne_ji) ?mulr0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /andP[_ /(submx_trans _)-> //] := Wedderburn_ideal (W i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mem_mulsmx // envelop_mx_id ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IrrClass.",
            "VernacEndSegment",
            "df32a79ec894319034b0e8e84aab83bf606cb8fe"
        ],
        [
            "Arguments cfReg {gT} B%g.",
            "VernacArguments",
            "a625aba1003b23e7b65ddc5e79f15200564f5188"
        ],
        [
            "Prenex Implicits cfIirr irrK.",
            "VernacExtend",
            "849908fa36e48d826601e904a3810c0b3ec30ea5"
        ],
        [
            "Arguments irrP {gT G xi}.",
            "VernacArguments",
            "b8155e7c9fe5f94a0e80f45f110b12bb81b59737"
        ],
        [
            "Arguments irr_reprP {gT G xi}.",
            "VernacArguments",
            "f6466ebef23101757e97e0ebb7b7575f9bd15792"
        ],
        [
            "Arguments irr_inj {gT G} [x1 x2].",
            "VernacArguments",
            "766da3a010efae11f8800b478e223b7c8b9b0238"
        ],
        [
            "Section IsChar.",
            "VernacBeginSection",
            "e5b3ed3e6408ea1b59603cf79bb25f8d657d42cf"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Definition character {G : {set gT}} := [qualify a phi : 'CF(G) | [forall i, coord (irr G) i phi \\in Cnat]].",
            "VernacDefinition",
            "bd45bf8e8b0ebc45e2539c6e72aec5f324e7154a"
        ],
        [
            "Fact character_key G : pred_key (@character G).",
            "VernacStartTheoremProof",
            "9cfb5e27e7d3d65034b40c7cd960ccfe11cfab3c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical character_keyed G := KeyedQualifier (character_key G).",
            "VernacDefinition",
            "50e7ac72fdba0a94c345628ca2188b97ff6dba48"
        ],
        [
            "Variable G : {group gT}.",
            "VernacAssumption",
            "a4eac84d173e53c6bd7c7941e403af4d790fced0"
        ],
        [
            "Implicit Types (phi chi xi : 'CF(G)) (i : Iirr G).",
            "VernacReserve",
            "06a1c20e5466de7128df7e2dbc4752a58a85336b"
        ],
        [
            "Lemma irr_char i : 'chi_i \\is a character.",
            "VernacStartTheoremProof",
            "23918fe1ab6a5d18e3432205228776c6b8f8f933"
        ],
        [
            "by apply/forallP=> j; rewrite (tnth_nth 0) coord_free ?irr_free ?isNatC_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfun1_char : (1 : 'CF(G)) \\is a character.",
            "VernacStartTheoremProof",
            "3ad006bc0ae5dcc5b812a61793bac2fcd4160d53"
        ],
        [
            "by rewrite -irr0 irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfun0_char : (0 : 'CF(G)) \\is a character.",
            "VernacStartTheoremProof",
            "007a84b979df003960f049aec527c361ed7ca484"
        ],
        [
            "by apply/forallP=> i; rewrite linear0 rpred0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact add_char : addr_closed (@character G).",
            "VernacStartTheoremProof",
            "3d00feb30a79bf9d5da6f47602f470176a4dc9dd"
        ],
        [
            "split=> [|chi xi /forallP-Nchi /forallP-Nxi]; first exact: cfun0_char.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/forallP=> i; rewrite linearD rpredD /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical character_addrPred := AddrPred add_char.",
            "VernacDefinition",
            "79bc01fbf28f47e7ae5f43db571475bda5b86ce0"
        ],
        [
            "Lemma char_sum_irrP {phi} : reflect (exists n, phi = \\sum_i (n i)%:R *: 'chi_i) (phi \\is a character).",
            "VernacStartTheoremProof",
            "c5243abfc0885bfa11c831d77edec81c93af011c"
        ],
        [
            "apply: (iffP idP)=> [/forallP-Nphi | [n ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: rpred_sum => i _; rewrite scaler_nat rpredMn // irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "do [have [a ->] := cfun_irr_sum phi] in Nphi *; exists (truncC \\o a).",
            "VernacExtend",
            "25b3a64dd4d622653d8464ee268fa1f6073c1d7b"
        ],
        [
            "apply: eq_bigr => i _; congr (_ *: _); have:= eqP (Nphi i).",
            "VernacExtend",
            "8dfdbe98d0d7482e38c2c32f22c7e9a3d554b624"
        ],
        [
            "by rewrite eq_sum_nth_irr coord_sum_free ?irr_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char_sum_irr chi : chi \\is a character -> {r | chi = \\sum_(i <- r) 'chi_i}.",
            "VernacStartTheoremProof",
            "66c461453e3d8b8586d3477a0e77d203ae4a2f42"
        ],
        [
            "move=> Nchi; apply: sig_eqW; case/char_sum_irrP: Nchi => n {chi}->.",
            "VernacExtend",
            "1b05ef00a6bc4c06259b49aa79e4d38841eab3ab"
        ],
        [
            "elim/big_rec: _ => [|i _ _ [r ->]]; first by exists nil; rewrite big_nil.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists (ncons (n i) i r); rewrite scaler_nat.",
            "VernacExtend",
            "7cd5cc06c489218b2376d370ab3a00dca69285c0"
        ],
        [
            "by elim: {n}(n i) => [|n IHn]; rewrite ?add0r //= big_cons mulrS -addrA IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cnat_char1 chi : chi \\is a character -> chi 1%g \\in Cnat.",
            "VernacStartTheoremProof",
            "b16537cdadc85537d45a6bf98ccd759b9e147c08"
        ],
        [
            "case/char_sum_irr=> r ->{chi}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by elim/big_rec: _ => [|i chi _ Nchi1]; rewrite cfunE ?rpredD // Cnat_irr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char1_ge0 chi : chi \\is a character -> 0 <= chi 1%g.",
            "VernacStartTheoremProof",
            "238c48dfc31be42f44092628e9fb9de5bae4ab54"
        ],
        [
            "by move/Cnat_char1/Cnat_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char1_eq0 chi : chi \\is a character -> (chi 1%g == 0) = (chi == 0).",
            "VernacStartTheoremProof",
            "175c9be18bb42c80eaa29bbc2f1edeef33e696dc"
        ],
        [
            "case/char_sum_irr=> r ->; apply/idP/idP=> [|/eqP->]; last by rewrite cfunE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: r => [|i r]; rewrite ?big_nil // sum_cfunE big_cons.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite paddr_eq0 ?sumr_ge0 => // [||j _]; rewrite 1?ltrW ?irr1_gt0 //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite (negbTE (irr1_neq0 i)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char1_gt0 chi : chi \\is a character -> (0 < chi 1%g) = (chi != 0).",
            "VernacStartTheoremProof",
            "57174bdfd011edf2b06d94ccd5966401d3f2eda1"
        ],
        [
            "by move=> Nchi; rewrite -char1_eq0 // Cnat_gt0 ?Cnat_char1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char_reprP phi : reflect (exists rG : representation algCF G, phi = cfRepr rG) (phi \\is a character).",
            "VernacStartTheoremProof",
            "bfd31f23fee5b3ffcadb1a7f9c22e15580e70fb2"
        ],
        [
            "apply: (iffP char_sum_irrP) => [[n ->] | [[n rG] ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists (fun i => standard_irr_coef rG (socle_of_Iirr i)).",
            "VernacExtend",
            "930ec502bc8b4318bf9b638fd6711f051e032a50"
        ],
        [
            "by rewrite -cfRepr_standard (cfRepr_sim (mx_rsim_standard rG)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (\\big[dadd_grepr/grepr0]_i muln_grepr (Representation 'Chi_i) (n i)).",
            "VernacExtend",
            "08ceb646ffaeb3d7a0c95db8304bfa2866679729"
        ],
        [
            "rewrite cfRepr_dsum; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite cfRepr_muln irrRepr scaler_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation reprG := (mx_representation algCF G).",
            "VernacSyntacticDefinition",
            "c7db0cae5489ef415858c1c14436783590a3abe8"
        ],
        [
            "Lemma cfRepr_char n (rG : reprG n) : cfRepr rG \\is a character.",
            "VernacStartTheoremProof",
            "31f982f2087719bfaba02cdf308eeb2b6fcf6431"
        ],
        [
            "by apply/char_reprP; exists (Representation rG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfReg_char : cfReg G \\is a character.",
            "VernacStartTheoremProof",
            "3f33b71f739f6380c14897a2b61369ea0d0b8a72"
        ],
        [
            "by rewrite -cfReprReg cfRepr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRepr_prod n1 n2 (rG1 : reprG n1) (rG2 : reprG n2) : cfRepr rG1 * cfRepr rG2 = cfRepr (prod_repr rG1 rG2).",
            "VernacStartTheoremProof",
            "063815a71ac53beaa411f0f3863e5965c6c7d926"
        ],
        [
            "by apply/cfun_inP=> x Gx; rewrite !cfunE /= Gx mxtrace_prod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_char : mulr_closed (@character G).",
            "VernacStartTheoremProof",
            "6819b69d888dd07fdc2139f1aad4b11f1eefeaf1"
        ],
        [
            "split=> [|_ _ /char_reprP[rG1 ->] /char_reprP[rG2 ->]]; first exact: cfun1_char.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/char_reprP; exists (Representation (prod_repr rG1 rG2)).",
            "VernacExtend",
            "eb84738dea01dfd962c2de921ec33a46e02dffb8"
        ],
        [
            "by rewrite cfRepr_prod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical char_mulrPred := MulrPred mul_char.",
            "VernacDefinition",
            "e7fc12128f6f2f86aab146487cc560218c9c93f5"
        ],
        [
            "Canonical char_semiringPred := SemiringPred mul_char.",
            "VernacDefinition",
            "36c58696f9fbcb2e5186b3bef173cbebdf290174"
        ],
        [
            "End IsChar.",
            "VernacEndSegment",
            "a1ec29fac7e3483c569ee94cf955217e74c0d06d"
        ],
        [
            "Prenex Implicits character.",
            "VernacExtend",
            "54407a1f7dbf36c6bad995a12f07bb2634ecf875"
        ],
        [
            "Arguments char_reprP {gT G phi}.",
            "VernacArguments",
            "2377bfe71199ab95bb4349322a5dffd7e910b286"
        ],
        [
            "Section AutChar.",
            "VernacBeginSection",
            "bf67b8702a0fc8453c21759902f597520be8efb7"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Implicit Type u : {rmorphism algC -> algC}.",
            "VernacReserve",
            "9d1a964ec99cef830fb8af5e583b6738b5948c8c"
        ],
        [
            "Implicit Type chi : 'CF(G).",
            "VernacReserve",
            "b0cd90ac688cfd4713198b73db11d1f8b3222416"
        ],
        [
            "Lemma cfRepr_map u n (rG : mx_representation algCF G n) : cfRepr (map_repr u rG) = cfAut u (cfRepr rG).",
            "VernacStartTheoremProof",
            "7242d596fc2bc5c5d6bd13bb348257b93c45cc15"
        ],
        [
            "by apply/cfun_inP=> x Gx; rewrite !cfunE Gx map_reprE trace_map_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfAut_char u chi : (cfAut u chi \\is a character) = (chi \\is a character).",
            "VernacStartTheoremProof",
            "df9b035f26d1751d633c18ce9fd89f435add8d81"
        ],
        [
            "without loss /char_reprP[rG ->]: u chi / chi \\is a character.",
            "VernacExtend",
            "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
        ],
        [
            "by move=> IHu; apply/idP/idP=> ?; first rewrite -(cfAutK u chi); rewrite IHu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite cfRepr_char; apply/char_reprP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by exists (Representation (map_repr u rG)); rewrite cfRepr_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjC_char chi : (chi^*%CF \\is a character) = (chi \\is a character).",
            "VernacStartTheoremProof",
            "3d7ca79d431b9291d66088ac694e9dcad899a195"
        ],
        [
            "exact: cfAut_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfAut_char1 u (chi : 'CF(G)) : chi \\is a character -> cfAut u chi 1%g = chi 1%g.",
            "VernacStartTheoremProof",
            "be5ee6170737bf23c5a01692e7ab763734fcff6c"
        ],
        [
            "by move/Cnat_char1=> Nchi1; rewrite cfunE aut_Cnat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfAut_irr1 u i : (cfAut u 'chi[G]_i) 1%g = 'chi_i 1%g.",
            "VernacStartTheoremProof",
            "57fd46e59d7798ff177cbcec54c1e2ad16aa9d15"
        ],
        [
            "exact: cfAut_char1 (irr_char i).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjC_char1 (chi : 'CF(G)) : chi \\is a character -> chi^*%CF 1%g = chi 1%g.",
            "VernacStartTheoremProof",
            "a242ba617c1b250cca9f92156b68cdec9eec42c9"
        ],
        [
            "exact: cfAut_char1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjC_irr1 u i : ('chi[G]_i)^*%CF 1%g = 'chi_i 1%g.",
            "VernacStartTheoremProof",
            "c2b71c488bb8eb8bd63611d22f433202087d4218"
        ],
        [
            "exact: cfAut_irr1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AutChar.",
            "VernacEndSegment",
            "bea9533053eb4652552a18b61e2698ca632f6ea7"
        ],
        [
            "Section Linear.",
            "VernacBeginSection",
            "809989470d97d23f25d2454249711ce952aef9dc"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Definition linear_char {B : {set gT}} := [qualify a phi : 'CF(B) | (phi \\is a character) && (phi 1%g == 1)].",
            "VernacDefinition",
            "18920c7437593300544e34406cb3cd9d62c31838"
        ],
        [
            "Section OneChar.",
            "VernacBeginSection",
            "a03a4c4544baaef49fef3a5aac32116820343b20"
        ],
        [
            "Variable xi : 'CF(G).",
            "VernacAssumption",
            "263c0ab29991a0c11c76facead5d6517ca16b328"
        ],
        [
            "Hypothesis CFxi : xi \\is a linear_char.",
            "VernacAssumption",
            "ffd0e84a227faea0d6ab4f2b414e1f0f607f364e"
        ],
        [
            "Lemma lin_char1: xi 1%g = 1.",
            "VernacStartTheoremProof",
            "84bf53a2b2b6960f457f5bbd88f179095d41655e"
        ],
        [
            "by case/andP: CFxi => _ /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_charW : xi \\is a character.",
            "VernacStartTheoremProof",
            "0fa39a2334e9455ebf216d2761b0e85ba5606126"
        ],
        [
            "by case/andP: CFxi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfun1_lin_char : (1 : 'CF(G)) \\is a linear_char.",
            "VernacStartTheoremProof",
            "1579c6eddc870eb7e38d0f0a4df1df92d18458b1"
        ],
        [
            "by rewrite qualifE cfun1_char /= cfun11.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_charM : {in G &, {morph xi : x y / (x * y)%g >-> x * y}}.",
            "VernacStartTheoremProof",
            "667649c902e1f59c4279fa8419f3660bfbc26b84"
        ],
        [
            "move=> x y Gx Gy; case/andP: CFxi => /char_reprP[[n rG] -> /=].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite cfRepr1 pnatr_eq1 => /eqP n1; rewrite {n}n1 in rG *.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite !cfunE Gx Gy groupM //= !mulr1n repr_mxM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [rG x]mx11_scalar [rG y]mx11_scalar -scalar_mxM !mxtrace_scalar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_char_prod I r (P : pred I) (x : I -> gT) : (forall i, P i -> x i \\in G) -> xi (\\prod_(i <- r | P i) x i)%g = \\prod_(i <- r | P i) xi (x i).",
            "VernacStartTheoremProof",
            "b9151c3c292694f122216e4a5276fe1160184aed"
        ],
        [
            "move=> Gx; elim/(big_load (fun y => y \\in G)): _.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "elim/big_rec2: _ => [|i a y Pi [Gy <-]]; first by rewrite lin_char1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite groupM ?lin_charM ?Gx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let xiMV x : x \\in G -> xi x * xi (x^-1)%g = 1.",
            "VernacDefinition",
            "53d76480377537b8958f7b6bd9e4def48b029971"
        ],
        [
            "by move=> Gx; rewrite -lin_charM ?groupV // mulgV lin_char1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_char_neq0 x : x \\in G -> xi x != 0.",
            "VernacStartTheoremProof",
            "40818877878e280d1b3b09a0ae5b3776f40d0555"
        ],
        [
            "by move/xiMV/(congr1 (predC1 0)); rewrite /= oner_eq0 mulf_eq0 => /norP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_charV x : x \\in G -> xi x^-1%g = (xi x)^-1.",
            "VernacStartTheoremProof",
            "a752e5020b851537803c1b9686bfa08d91e4295d"
        ],
        [
            "by move=> Gx; rewrite -[_^-1]mulr1 -(xiMV Gx) mulKf ?lin_char_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_charX x n : x \\in G -> xi (x ^+ n)%g = xi x ^+ n.",
            "VernacStartTheoremProof",
            "b29ec085badda37357abecc5873dafea65adca6d"
        ],
        [
            "move=> Gx; elim: n => [|n IHn]; first exact: lin_char1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite expgS exprS lin_charM ?groupX ?IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_char_unity_root x : x \\in G -> xi x ^+ #[x] = 1.",
            "VernacStartTheoremProof",
            "ae513da303720c415fced335771d13f53f35dfcd"
        ],
        [
            "by move=> Gx; rewrite -lin_charX // expg_order lin_char1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normC_lin_char x : x \\in G -> `|xi x| = 1.",
            "VernacStartTheoremProof",
            "65f9c817c919255c849f296dc2aa31751968e7d6"
        ],
        [
            "move=> Gx; apply/eqP; rewrite -(@pexpr_eq1 _ _ #[x]) ?normr_ge0 //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -normrX // lin_char_unity_root ?normr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_charV_conj x : x \\in G -> xi x^-1%g = (xi x)^*.",
            "VernacStartTheoremProof",
            "98a94bb8b071e9693d7e89a569f4a92d5c94734c"
        ],
        [
            "move=> Gx; rewrite lin_charV // invC_norm mulrC normC_lin_char //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite expr1n divr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_char_irr : xi \\in irr G.",
            "VernacStartTheoremProof",
            "34e2a751868f679599ef6e91c347540aa0963580"
        ],
        [
            "case/andP: CFxi => /char_reprP[rG ->]; rewrite cfRepr1 pnatr_eq1 => /eqP n1.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by apply/irr_reprP; exists rG => //; apply/mx_abs_irrW/linear_mx_abs_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_conjC_lin_char : xi * xi^*%CF = 1.",
            "VernacStartTheoremProof",
            "8d313598c73f6ee58acbd0e4f9d430af821d1830"
        ],
        [
            "apply/cfun_inP=> x Gx.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite !cfunE cfun1E Gx -normCK normC_lin_char ?expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_char_unitr : xi \\in GRing.unit.",
            "VernacStartTheoremProof",
            "ec2a0875deb6bc1705da3696cb440987400500c8"
        ],
        [
            "by apply/unitrPr; exists xi^*%CF; apply: mul_conjC_lin_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invr_lin_char : xi^-1 = xi^*%CF.",
            "VernacStartTheoremProof",
            "e0aea0c8e710c30ab0c7ba057059d61788da0e0f"
        ],
        [
            "by rewrite -[_^-1]mulr1 -mul_conjC_lin_char mulKr ?lin_char_unitr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fful_lin_char_inj : cfaithful xi -> {in G &, injective xi}.",
            "VernacStartTheoremProof",
            "90294c60028a1f816f543baeb67f679dab4612db"
        ],
        [
            "move=> fful_phi x y Gx Gy xi_xy; apply/eqP; rewrite eq_mulgV1 -in_set1.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite (subsetP fful_phi) // inE groupM ?groupV //=; apply/forallP=> z.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have [Gz | G'z] := boolP (z \\in G); last by rewrite !cfun0 ?groupMl ?groupV.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -mulgA lin_charM ?xi_xy -?lin_charM ?groupM ?groupV // mulKVg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OneChar.",
            "VernacEndSegment",
            "8d2c9954373aa60626dbbbb4c8d9909a968a7415"
        ],
        [
            "Lemma cfAut_lin_char u (xi : 'CF(G)) : (cfAut u xi \\is a linear_char) = (xi \\is a linear_char).",
            "VernacStartTheoremProof",
            "04eb4280dae38e428e172d1cc4b0abefa8db876d"
        ],
        [
            "by rewrite qualifE cfAut_char; apply/andb_id2l=> /cfAut_char1->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjC_lin_char (xi : 'CF(G)) : (xi^*%CF \\is a linear_char) = (xi \\is a linear_char).",
            "VernacStartTheoremProof",
            "64741369d5312290e8b547144a9be427755ee66b"
        ],
        [
            "exact: cfAut_lin_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Iirr_abelian : abelian G -> #|Iirr G| = #|G|.",
            "VernacStartTheoremProof",
            "f828f446b2297566d00d04a036496167f2971680"
        ],
        [
            "by rewrite card_ord NirrE card_classes_abelian => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Iirr_cyclic : cyclic G -> #|Iirr G| = #|G|.",
            "VernacStartTheoremProof",
            "5b56479e899442e27b52f3ab94db04dc97cec6e4"
        ],
        [
            "by move/cyclic_abelian/card_Iirr_abelian.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char_abelianP : reflect (forall i : Iirr G, 'chi_i \\is a linear_char) (abelian G).",
            "VernacStartTheoremProof",
            "633139585a39a0d10ef409a9314e1826cdaca51d"
        ],
        [
            "apply: (iffP idP) => [cGG i | CF_G].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite qualifE irr_char /= irr1_degree.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite irr_degree_abelian //; last apply: groupC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite card_classes_abelian -NirrE -eqC_nat -irr_sum_square //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{1}[Nirr G]card_ord -sumr_const; apply/eqP/eq_bigr=> i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite lin_char1 ?expr1n ?CF_G.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_repr_lin_char (i : Iirr G) x : x \\in G -> 'chi_i \\is a linear_char -> irr_repr (socle_of_Iirr i) x = ('chi_i x)%:M.",
            "VernacStartTheoremProof",
            "517df530bd525f0c4252d71aec908dde69becd9b"
        ],
        [
            "move=> Gx CFi; rewrite -irrRepr cfunE Gx.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (_ x); rewrite -[irr_degree _]natCK -irr1_degree lin_char1 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (natCK 1) => A; rewrite trace_mx11 -mx11_scalar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact linear_char_key B : pred_key (@linear_char B).",
            "VernacStartTheoremProof",
            "0f60fda87576babfe0912e0623c4cfdcaac25d2e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical linear_char_keted B := KeyedQualifier (linear_char_key B).",
            "VernacDefinition",
            "c20e517d3f91e41a505db725b3d5cbaa3d70549a"
        ],
        [
            "Fact linear_char_divr : divr_closed (@linear_char G).",
            "VernacStartTheoremProof",
            "96bb31c27f4dcbd5b3ae094d004ac7b645f41463"
        ],
        [
            "split=> [|chi xi Lchi Lxi]; first exact: cfun1_lin_char.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite invr_lin_char // qualifE cfunE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite rpredM ?lin_char1 ?mulr1 ?lin_charW //= cfConjC_lin_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical lin_char_mulrPred := MulrPred linear_char_divr.",
            "VernacDefinition",
            "8f9d6c731fd1ea053494d65222c72d0ebf5d0d7e"
        ],
        [
            "Canonical lin_char_divrPred := DivrPred linear_char_divr.",
            "VernacDefinition",
            "ba73af3e9628fe875b8fe553151b3be3f34bdc52"
        ],
        [
            "Lemma irr_cyclic_lin i : cyclic G -> 'chi[G]_i \\is a linear_char.",
            "VernacStartTheoremProof",
            "88737841edf8b7b3b68ddff191cd439c07072e2e"
        ],
        [
            "by move/cyclic_abelian/char_abelianP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_prime_lin i : prime #|G| -> 'chi[G]_i \\is a linear_char.",
            "VernacStartTheoremProof",
            "e20b0a84534c8831554f857b987d1155cbbe4411"
        ],
        [
            "by move/prime_cyclic/irr_cyclic_lin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Linear.",
            "VernacEndSegment",
            "650f655f21276c75f543f8ea3c6de3cbb24f6f06"
        ],
        [
            "Prenex Implicits linear_char.",
            "VernacExtend",
            "989fa7bf0b98c278c37b7a00c526b4d8d40b64a5"
        ],
        [
            "Section OrthogonalityRelations.",
            "VernacBeginSection",
            "385c64cf5fc8fe81f6b1effbf6eca393b63d5c4c"
        ],
        [
            "Variables aT gT : finGroupType.",
            "VernacAssumption",
            "1d0f27ac2261158fef481e430f60a8f469eff89b"
        ],
        [
            "Lemma repr_rsim_diag (G : {group gT}) f (rG : mx_representation algCF G f) x : x \\in G -> let chi := cfRepr rG in exists e, [/\\ exists2 B, B \\in unitmx & rG x = invmx B *m diag_mx e *m B, (forall i, e 0 i ^+ #[x] = 1) /\\ (forall i, `|e 0 i| = 1), chi x = \\sum_i e 0 i /\\ `|chi x| <= chi 1%g & chi x^-1%g = (chi x)^*].",
            "VernacStartTheoremProof",
            "be233b4613cb48fcfd4cae411bfdde7577af42bd"
        ],
        [
            "move=> Gx; without loss cGG: G rG Gx / abelian G.",
            "VernacExtend",
            "d999ee33e7c6564a01a7bb2262aa207bb3b6058f"
        ],
        [
            "have sXG: <[x]> \\subset G by rewrite cycle_subG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/(_ _ (subg_repr rG sXG) (cycle_id x) (cycle_abelian x)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /= !cfunE !groupV Gx (cycle_id x) !group1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [I U W simU W1 dxW]: mxsemisimple rG 1%:M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(reducible_Socle1 (DecSocleType rG) (mx_Maschke _ (algC'G G))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: Socle_semisimple.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have linU i: \\rank (U i) = 1%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: mxsimple_abelian_linear cGG (simU i); apply: groupC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have castI: f = #|I|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(mxrank1 algCF f) -W1 (eqnP dxW) /= -sum1_card; apply/eq_bigr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose B := \\matrix_j nz_row (U (enum_val (cast_ord castI j))).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have rowU i: (nz_row (U i) :=: U i)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqmxP; rewrite -(geq_leqif (mxrank_leqif_eq (nz_row_sub _))) linU.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite lt0n mxrank_eq0 (nz_row_mxsimple (simU i)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have unitB: B \\in unitmx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -row_full_unit -sub1mx -W1; apply/sumsmx_subP=> i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "pose j := cast_ord (esym castI) (enum_rank i).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "by rewrite (submx_trans _ (row_sub j B)) // rowK cast_ordKV enum_rankK rowU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose e := \\row_j row j (B *m rG x *m invmx B) 0 j.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have rGx: rG x = invmx B *m diag_mx e *m B.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -mulmxA; apply: canRL (mulKmx unitB) _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply/row_matrixP=> j; rewrite 2!row_mul; set u := row j B.",
            "VernacExtend",
            "c0b55a279182ecd0a9c92c4d7ab71c7e81eac100"
        ],
        [
            "have /sub_rVP[a def_ux]: (u *m rG x <= u)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /u rowK rowU (eqmxMr _ (rowU _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: (mxmoduleP (mxsimple_module (simU _))).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite def_ux [u]rowE scalemxAl; congr (_ *m _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "apply/rowP=> k; rewrite 5!mxE !row_mul def_ux [u]rowE scalemxAl mulmxK //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite !mxE !eqxx !mulr_natr eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have exp_e j: e 0 j ^+ #[x] = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices: (diag_mx e j j) ^+ #[x] = (B *m rG (x ^+ #[x])%g *m invmx B) j j.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite expg_order repr_mx1 mulmx1 mulmxV // [e]lock !mxE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: #[x] => [|n IHn]; first by rewrite repr_mx1 mulmx1 mulmxV // !mxE eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite expgS repr_mxM ?groupX // {1}rGx -!mulmxA mulKVmx //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mul_diag_mx mulmxA [M in _ = M]mxE -IHn exprS {1}mxE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have norm1_e j: `|e 0 j| = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite -(@pexpr_eq1 _ _ #[x]) ?normr_ge0 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -normrX exp_e normr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists e; split=> //; first by exists B.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite cfRepr1 !cfunE Gx rGx mxtrace_mulC mulKVmx // mxtrace_diag.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split=> //=; apply: (ler_trans (ler_norm_sum _ _ _)).",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by rewrite (eq_bigr _ (in1W norm1_e)) sumr_const card_ord lerr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !cfunE groupV !mulrb Gx rGx mxtrace_mulC mulKVmx //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -trace_map_mx map_diag_mx; set d' := diag_mx _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "rewrite -[d'](mulKVmx unitB) mxtrace_mulC -[_ *m _](repr_mxK rG Gx) rGx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!mulmxA mulKVmx // (mulmxA d').",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suffices->: d' *m diag_mx e = 1%:M by rewrite mul1mx mulKmx.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite mulmx_diag -diag_const_mx; congr diag_mx; apply/rowP=> j.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "by rewrite [e]lock !mxE mulrC -normCK -lock norm1_e expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variables (A : {group aT}) (G : {group gT}).",
            "VernacAssumption",
            "52cb0fc432ade9367ca962e15af2effbcbd083a6"
        ],
        [
            "Lemma char_inv (chi : 'CF(G)) x : chi \\is a character -> chi x^-1%g = (chi x)^*.",
            "VernacStartTheoremProof",
            "e9251bf6180208e04c8d4885d476887ed6f4af2d"
        ],
        [
            "case Gx: (x \\in G); last by rewrite !cfun0 ?rmorph0 ?groupV ?Gx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/char_reprP=> rG ->; have [e [_ _ _]] := repr_rsim_diag rG Gx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_inv i x : 'chi[G]_i x^-1%g = ('chi_i x)^*.",
            "VernacStartTheoremProof",
            "6f33852a25f5fc7f03e1a8572ce70cf39538e8e1"
        ],
        [
            "exact/char_inv/irr_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem generalized_orthogonality_relation y (i j : Iirr G) : #|G|%:R^-1 * (\\sum_(x in G) 'chi_i (x * y)%g * 'chi_j x^-1%g) = (i == j)%:R * ('chi_i y / 'chi_i 1%g).",
            "VernacStartTheoremProof",
            "a0ecaac1c66562447a3d607f55796e86c67dc7ac"
        ],
        [
            "pose W := @socle_of_Iirr _ G; pose e k := Wedderburn_id (W k).",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "pose aG := regular_repr algCF G.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have [Gy | notGy] := boolP (y \\in G); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite cfun0 // mul0r big1 ?mulr0 // => x Gx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite cfun0 ?groupMl ?mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "transitivity (('chi_i).[e j *m aG y]%CF / 'chi_j 1%g).",
            "VernacExtend",
            "d1807e86e64688d65ec95a07546f43e0a7238b9a"
        ],
        [
            "rewrite [e j]Wedderburn_id_expansion -scalemxAl xcfunZr -mulrA; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite mulmx_suml raddf_sum big_distrl; apply: eq_bigr => x Gx /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -scalemxAl xcfunZr -repr_mxM // xcfunG ?groupM // mulrAC mulrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by congr (_ * _); rewrite mulrC mulKf ?irr1_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulr_natl mulrb; have [<-{j} | neq_ij] := altP eqP.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by congr (_ / _); rewrite xcfun_mul_id ?envelop_mx_id ?xcfunG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (xcfun_annihilate neq_ij) ?mul0r //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/andP: (Wedderburn_ideal (W j)) => _; apply: submx_trans.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by rewrite mem_mulsmx ?Wedderburn_id_mem ?envelop_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary first_orthogonality_relation (i j : Iirr G) : #|G|%:R^-1 * (\\sum_(x in G) 'chi_i x * 'chi_j x^-1%g) = (i == j)%:R.",
            "VernacStartTheoremProof",
            "05c9a9fa868639cdc611442cc267c2622476707a"
        ],
        [
            "have:= generalized_orthogonality_relation 1 i j.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulrA mulfK ?irr1_neq0 // => <-; congr (_ * _).",
            "VernacExtend",
            "d95da12c0095726885402a7f0e86738a30a8e464"
        ],
        [
            "by apply: eq_bigr => x; rewrite mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition irr_class i := enum_val (cast_ord (NirrE G) i).",
            "VernacDefinition",
            "0daa1304bb4d8aa9b01517acb4a0d7eda0c054c6"
        ],
        [
            "Definition class_Iirr xG := cast_ord (esym (NirrE G)) (enum_rank_in (classes1 G) xG).",
            "VernacDefinition",
            "d47069b667be236c129ae667997d0d948e37599d"
        ],
        [
            "Local Notation c := irr_class.",
            "VernacSyntacticDefinition",
            "6cb273950892f792ec3998a5fb3ba413d2bb82e4"
        ],
        [
            "Local Notation g i := (repr (c i)).",
            "VernacSyntacticDefinition",
            "2f73160f24c972768d626f14495fb82108d94b1a"
        ],
        [
            "Local Notation iC := class_Iirr.",
            "VernacSyntacticDefinition",
            "808cb6c400c8d43e002d7759fd353d3b47fa3a15"
        ],
        [
            "Definition character_table := \\matrix_(i, j) 'chi[G]_i (g j).",
            "VernacDefinition",
            "05f9fd02ebac9b41ea32430126ef45bc1a8fb4e0"
        ],
        [
            "Local Notation X := character_table.",
            "VernacSyntacticDefinition",
            "f23a6930a3eb43b8d1727ca3453b2a455fc4a9d2"
        ],
        [
            "Lemma irr_classP i : c i \\in classes G.",
            "VernacStartTheoremProof",
            "735844b0025a7f93a59bf058bdc089806a891671"
        ],
        [
            "exact: enum_valP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_irr_classK i : g i ^: G = c i.",
            "VernacStartTheoremProof",
            "33933409f1821311ab2bc261e42673525b77fe8c"
        ],
        [
            "by case/repr_classesP: (irr_classP i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_classK : cancel c iC.",
            "VernacStartTheoremProof",
            "c39ef4d583f3b1b4519150c934498c81b557cbf5"
        ],
        [
            "by move=> i; rewrite /iC enum_valK_in cast_ordK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma class_IirrK : {in classes G, cancel iC c}.",
            "VernacStartTheoremProof",
            "82a43ec67f0e89ed93378effddcc61496b0ba228"
        ],
        [
            "by move=> xG GxG; rewrite /c cast_ordKV enum_rankK_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reindex_irr_class R idx (op : @Monoid.com_law R idx) F : \\big[op/idx]_(xG in classes G) F xG = \\big[op/idx]_i F (c i).",
            "VernacStartTheoremProof",
            "dc1d04b29b7a3c743db967cab7e723def34119ce"
        ],
        [
            "rewrite (reindex c); first by apply: eq_bigl => i; apply: enum_valP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists iC; [apply: in1W; apply: irr_classK | apply: class_IirrK].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let X' := \\matrix_(i, j) (#|'C_G[g i]|%:R^-1 * ('chi[G]_j (g i))^*).",
            "VernacDefinition",
            "ca3a9e690d0028e5e180103efe1a718790048b58"
        ],
        [
            "Let XX'_1: X *m X' = 1%:M.",
            "VernacDefinition",
            "eea81d49fe9d50c0c3cbc7401fc70917e7e56c84"
        ],
        [
            "apply/matrixP=> i j; rewrite !mxE -first_orthogonality_relation mulr_sumr.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite sum_by_classes => [|u v Gu Gv]; last by rewrite -conjVg !cfunJ.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite reindex_irr_class /=; apply/esym/eq_bigr=> k _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite !mxE irr_inv // -/(g k) -divg_index -indexgI /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (char0_natf_div Cchar) ?dvdn_indexg // index_cent1 invfM invrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite repr_irr_classK mulrCA mulrA mulrCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma character_table_unit : X \\in unitmx.",
            "VernacStartTheoremProof",
            "0248c534211df901cc0cadf0c4a475294b696bce"
        ],
        [
            "by case/mulmx1_unit: XX'_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let uX := character_table_unit.",
            "VernacDefinition",
            "70d5f1560abc3f55affb3e1dc065a7cda1943ed8"
        ],
        [
            "Theorem second_orthogonality_relation x y : y \\in G -> \\sum_i 'chi[G]_i x * ('chi_i y)^* = #|'C_G[x]|%:R *+ (x \\in y ^: G).",
            "VernacStartTheoremProof",
            "cd4f79f97a743b20c8fcd84047392a9aeb395f92"
        ],
        [
            "move=> Gy; pose i_x := iC (x ^: G); pose i_y := iC (y ^: G).",
            "VernacExtend",
            "81927515fc3ecfba885b46cf7f9013852021d404"
        ],
        [
            "have [Gx | notGx] := boolP (x \\in G); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (contraNF (subsetP _ x) notGx) ?class_subG ?big1 // => i _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite cfun0 ?mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "transitivity ((#|'C_G[repr (y ^: G)]|%:R *: (X' *m X)) i_y i_x).",
            "VernacExtend",
            "8e8b0395a05c154dbc3bdff00b4f023f4361f14d"
        ],
        [
            "rewrite scalemxAl !mxE; apply: eq_bigr => k _; rewrite !mxE mulrC -!mulrA.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by rewrite !class_IirrK ?mem_classes // !cfun_repr mulVKf ?neq0CG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulmx1C // !mxE -!divg_index !(index_cent1, =^~ indexgI).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (class_eqP (mem_repr y _)) ?class_refl // mulr_natr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (can_in_eq class_IirrK) ?mem_classes //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [-> | not_yGx] := altP eqP; first by rewrite class_refl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite [x \\in _](contraNF _ not_yGx) // => /class_eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_irr_mem_classP x y : y \\in G -> reflect (forall i, 'chi[G]_i x = 'chi_i y) (x \\in y ^: G).",
            "VernacStartTheoremProof",
            "21c80afedaee79c64d9272fa75a1b0aafaffa7e8"
        ],
        [
            "move=> Gy; apply: (iffP idP) => [/imsetP[z Gz ->] i | xGy]; first exact: cfunJ.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have Gx: x \\in G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "congr is_true: Gy; apply/eqP; rewrite -(can_eq oddb) -eqC_nat -!cfun1E.",
            "VernacExtend",
            "e02c5e37d306c924c86ea325376d95ddc0d1741e"
        ],
        [
            "by rewrite -irr0 xGy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr is_true: (class_refl G x); apply/eqP; rewrite -(can_eq oddb).",
            "VernacExtend",
            "e02c5e37d306c924c86ea325376d95ddc0d1741e"
        ],
        [
            "rewrite -(eqn_pmul2l (cardG_gt0 'C_G[x])) -eqC_nat !mulrnA; apply/eqP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -!second_orthogonality_relation //; apply/eq_bigr=> i _; rewrite xGy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_afix_irr_classes (ito : action A (Iirr G)) (cto : action A _) a : a \\in A -> [acts A, on classes G | cto] -> (forall i x y, x \\in G -> y \\in cto (x ^: G) a -> 'chi_i x = 'chi_(ito i a) y) -> #|'Fix_ito[a]| = #|'Fix_(classes G | cto)[a]|.",
            "VernacStartTheoremProof",
            "b5c6c6b7f71c786bcc1d48440f86e38255b65b69"
        ],
        [
            "move=> Aa actsAG stabAchi; apply/eqP; rewrite -eqC_nat; apply/eqP.",
            "VernacExtend",
            "42e188f64c1b305ed274c1704aedbf73891c3017"
        ],
        [
            "have [[cP cK] iCK] := (irr_classP, irr_classK, class_IirrK).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose icto b i := iC (cto (c i) b).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have Gca i: cto (c i) a \\in classes G by rewrite (acts_act actsAG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have inj_qa: injective (icto a).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: can_inj (icto a^-1%g) _ => i; rewrite /icto iCK ?actKin ?cK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose Pa : 'M[algC]_(Nirr G) := perm_mx (actperm ito a).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose qa := perm inj_qa; pose Qa : 'M[algC]_(Nirr G) := perm_mx qa^-1^-1%g.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "transitivity (\\tr Pa).",
            "VernacExtend",
            "08f1bd7f177d61164d1d544e7f33afe35bbc67d8"
        ],
        [
            "rewrite -sumr_const big_mkcond; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !mxE permE inE sub1set inE; case: ifP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "symmetry; transitivity (\\tr Qa).",
            "VernacExtend",
            "f4e0431ad3f46be73f1e185e63474121420ea89c"
        ],
        [
            "rewrite cardsE -sumr_const -big_filter_cond big_mkcond big_filter /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite reindex_irr_class; apply: eq_bigr => i _; rewrite !mxE invgK permE.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by rewrite inE sub1set inE -(can_eq cK) iCK //; case: ifP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[Pa](mulmxK uX) -[Qa](mulKmx uX) mxtrace_mulC; congr (\\tr(_ *m _)).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite -row_permE -col_permE; apply/matrixP=> i j; rewrite !mxE.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "rewrite -{2}[j](permKV qa); move: {j}(_ j) => j; rewrite !permE iCK //.",
            "VernacExtend",
            "3051a4e8bb68166b140398e2c3c2862857447428"
        ],
        [
            "apply: stabAchi; first by case/repr_classesP: (cP j).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite repr_irr_classK (mem_repr_classes (Gca _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OrthogonalityRelations.",
            "VernacEndSegment",
            "9851c59857859502428b025ccef557148898517e"
        ],
        [
            "Prenex Implicits irr_class class_Iirr irr_classK.",
            "VernacExtend",
            "683a9772141be47142692f220188cd7f40f79363"
        ],
        [
            "Arguments class_IirrK {gT G%G} [xG%g] GxG : rename.",
            "VernacArguments",
            "52c0bc742780529d8851233dc92a2f4e42d0ced6"
        ],
        [
            "Arguments character_table {gT} G%g.",
            "VernacArguments",
            "c2cccd88bc5e8aa8dbfb7e517cef76dc785360c2"
        ],
        [
            "Section InnerProduct.",
            "VernacBeginSection",
            "ba53df3d8159bf38d6a9efa6666ec6c246bf4024"
        ],
        [
            "Variable (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Lemma cfdot_irr i j : '['chi_i, 'chi_j]_G = (i == j)%:R.",
            "VernacStartTheoremProof",
            "3a95b5aa6a3f58701fb1dbf0633ac7168602b639"
        ],
        [
            "rewrite -first_orthogonality_relation; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply: eq_bigr => x Gx; rewrite irr_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfnorm_irr i : '['chi[G]_i] = 1.",
            "VernacStartTheoremProof",
            "a4040e8d4c1cf016ead48436ac53bc5c1a16bb90"
        ],
        [
            "by rewrite cfdot_irr eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_orthonormal : orthonormal (irr G).",
            "VernacStartTheoremProof",
            "9cb242efc17120a623421267e0db4a5e2d6e6d66"
        ],
        [
            "apply/orthonormalP; split; first exact: free_uniq (irr_free G).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> _ _ /irrP[i ->] /irrP[j ->].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite cfdot_irr (inj_eq irr_inj).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coord_cfdot phi i : coord (irr G) i phi = '[phi, 'chi_i].",
            "VernacStartTheoremProof",
            "9c5da563b3f8c9f9aea3e103673706f00c5a53f8"
        ],
        [
            "rewrite {2}(coord_basis (irr_basis G) (memvf phi)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite cfdot_suml (bigD1 i) // cfdotZl /= -tnth_nth cfdot_irr eqxx mulr1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite big1 ?addr0 // => j neq_ji; rewrite cfdotZl /= -tnth_nth cfdot_irr.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite (negbTE neq_ji) mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfun_sum_cfdot phi : phi = \\sum_i '[phi, 'chi_i]_G *: 'chi_i.",
            "VernacStartTheoremProof",
            "0119e946f5d0d72670ada6191e4b70157314330e"
        ],
        [
            "rewrite {1}(coord_basis (irr_basis G) (memvf phi)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite coord_cfdot -tnth_nth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfdot_sum_irr phi psi : '[phi, psi]_G = \\sum_i '[phi, 'chi_i] * '[psi, 'chi_i]^*.",
            "VernacStartTheoremProof",
            "2bd9e8dc11a722481bf572b6bf10de3361335989"
        ],
        [
            "rewrite {1}[phi]cfun_sum_cfdot cfdot_suml; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite cfdotZl -cfdotC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cnat_cfdot_char_irr i phi : phi \\is a character -> '[phi, 'chi_i]_G \\in Cnat.",
            "VernacStartTheoremProof",
            "af6b8704447fea2aee9e13c8c27612f119dc035c"
        ],
        [
            "by move/forallP/(_ i); rewrite coord_cfdot.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfdot_char_r phi chi : chi \\is a character -> '[phi, chi]_G = \\sum_i '[phi, 'chi_i] * '[chi, 'chi_i].",
            "VernacStartTheoremProof",
            "6626be3a1012e907c9bccb9b4a330e59ec9d5e3b"
        ],
        [
            "move=> Nchi; rewrite cfdot_sum_irr; apply: eq_bigr => i _; congr (_ * _).",
            "VernacExtend",
            "9f1820a85b0489202ef75240e2b10b9122acd82d"
        ],
        [
            "by rewrite conj_Cnat ?Cnat_cfdot_char_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cnat_cfdot_char chi xi : chi \\is a character -> xi \\is a character -> '[chi, xi]_G \\in Cnat.",
            "VernacStartTheoremProof",
            "e475b185799175e7c9efdffc29a598701e8ac035"
        ],
        [
            "move=> Nchi Nxi; rewrite cfdot_char_r ?rpred_sum // => i _.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite rpredM ?Cnat_cfdot_char_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfdotC_char chi xi : chi \\is a character-> xi \\is a character -> '[chi, xi]_G = '[xi, chi].",
            "VernacStartTheoremProof",
            "55b43132b370357d1748b8fce345e33b15fa87b3"
        ],
        [
            "by move=> Nchi Nxi; rewrite cfdotC conj_Cnat ?Cnat_cfdot_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irrEchar chi : (chi \\in irr G) = (chi \\is a character) && ('[chi] == 1).",
            "VernacStartTheoremProof",
            "b25e8606f120ef48204b522e512cd574620ba17d"
        ],
        [
            "apply/irrP/andP=> [[i ->] | [Nchi]]; first by rewrite irr_char cfnorm_irr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite cfdot_sum_irr => /eqP/Cnat_sum_eq1[i _| i [_ ci1 cj0]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite rpredM // ?conj_Cnat ?Cnat_cfdot_char_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists i; rewrite [chi]cfun_sum_cfdot (bigD1 i) //=.",
            "VernacExtend",
            "526f5e9a80ed8d5345caa6273d63a7966df33e2b"
        ],
        [
            "rewrite -(@normr_idP _ _ (@Cnat_ge0 _ (Cnat_cfdot_char_irr i Nchi))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite normC_def {}ci1 sqrtC1 scale1r big1 ?addr0 // => j neq_ji.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite (('[_] =P 0) _) ?scale0r // -normr_eq0 normC_def cj0 ?sqrtC0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irrWchar chi : chi \\in irr G -> chi \\is a character.",
            "VernacStartTheoremProof",
            "7f3a966875241618b50d2315774f4c48dbe29bcb"
        ],
        [
            "by rewrite irrEchar => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irrWnorm chi : chi \\in irr G -> '[chi] = 1.",
            "VernacStartTheoremProof",
            "2bdc880f3b136e53ac0402e22e4334d3749a8f38"
        ],
        [
            "by rewrite irrEchar => /andP[_ /eqP].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_lin_irr xi chi : xi \\is a linear_char -> chi \\in irr G -> xi * chi \\in irr G.",
            "VernacStartTheoremProof",
            "19c6975d4ea543df6535fcccccf2da79feff6bd8"
        ],
        [
            "move=> Lxi; rewrite !irrEchar => /andP[Nphi /eqP <-].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite rpredM // ?lin_charW //=; apply/eqP; congr (_ * _).",
            "VernacExtend",
            "470a8ad3c912d4f8cb2e3d688aab7c3a56d118ec"
        ],
        [
            "apply: eq_bigr => x Gx; rewrite !cfunE rmorphM mulrACA -(lin_charV_conj Lxi) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -lin_charM ?groupV // mulgV lin_char1 ?mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_scaled_irr a b i j : (a *: 'chi[G]_i == b *: 'chi_j) = (a == b) && ((a == 0) || (i == j)).",
            "VernacStartTheoremProof",
            "e3f99fec4276117bc26a4674f1a431851ee71158"
        ],
        [
            "apply/eqP/andP=> [|[/eqP-> /pred2P[]-> //]]; last by rewrite !scale0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/(congr1 (cfdotr 'chi__)) => /= eq_ai_bj.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: {eq_ai_bj}(eq_ai_bj i) (esym (eq_ai_bj j)); rewrite !cfdotZl !cfdot_irr.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !mulr_natr !mulrb !eqxx eq_sym orbC; case: ifP => _ -> //= ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_signed_irr (s t : bool) i j : ((-1) ^+ s *: 'chi[G]_i == (-1) ^+ t *: 'chi_j) = (s == t) && (i == j).",
            "VernacStartTheoremProof",
            "aca9b9c8717b4561c8de00561ce781a75cb2e774"
        ],
        [
            "by rewrite eq_scaled_irr signr_eq0 (inj_eq signr_inj).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_scale_irr a (i j : Iirr G) : (a *: 'chi_i == a *: 'chi_j) = (a == 0) || (i == j).",
            "VernacStartTheoremProof",
            "e310d74c616d400ae974c9886d392af6b6903940"
        ],
        [
            "by rewrite eq_scaled_irr eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_addZ_irr a b (i j r t : Iirr G) : (a *: 'chi_i + b *: 'chi_j == a *: 'chi_r + b *: 'chi_t) = [|| [&& (a == 0) || (i == r) & (b == 0) || (j == t)], [&& i == t, j == r & a == b] | [&& i == j, r == t & a == - b]].",
            "VernacStartTheoremProof",
            "a594dcd8f771c7715309395aa6a1e7b1004de8f8"
        ],
        [
            "rewrite -!eq_scale_irr; apply/eqP/idP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/orP; first by case/andP=> /eqP-> /eqP->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/orP=> /and3P[/eqP-> /eqP-> /eqP->]; first by rewrite addrC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !scaleNr !addNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [-> /addrI/eqP-> // | /= ] := altP eqP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite eq_scale_irr => /norP[/negP nz_a /negPf neq_ir].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move/(congr1 (cfdotr 'chi__))/esym/eqP => /= eq_cfdot.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: {eq_cfdot}(eq_cfdot i) (eq_cfdot r); rewrite eq_sym !cfdotDl !cfdotZl.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite !cfdot_irr !mulr_natr !mulrb !eqxx -!(eq_sym i) neq_ir !add0r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [<- _ | _] := i =P t; first by rewrite neq_ir addr0; case: ifP => // _ ->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite 2!fun_if if_arg addr0 addr_eq0; case: eqP => //= <- ->.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite neq_ir 2!fun_if if_arg eq_sym addr0; case: ifP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_subZnat_irr (a b : nat) (i j r t : Iirr G) : (a%:R *: 'chi_i - b%:R *: 'chi_j == a%:R *: 'chi_r - b%:R *: 'chi_t) = [|| a == 0%N | i == r] && [|| b == 0%N | j == t] || [&& i == j, r == t & a == b].",
            "VernacStartTheoremProof",
            "4efcffb96079a74f017300c903a346603c30d025"
        ],
        [
            "rewrite -!scaleNr eq_addZ_irr oppr_eq0 opprK -addr_eq0 -natrD eqr_nat.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !pnatr_eq0 addn_eq0; case: a b => [|a] [|b]; rewrite ?andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InnerProduct.",
            "VernacEndSegment",
            "ca1d21bb9f3bb2ffab916b8597de12b793aa8c4c"
        ],
        [
            "Section IrrConstt.",
            "VernacBeginSection",
            "7166bf983a6b1d3d225351396cdb149f0c42f314"
        ],
        [
            "Variable (gT : finGroupType) (G H : {group gT}).",
            "VernacAssumption",
            "7daa1d9261ae1a6ccdcbdd91ed19876e2639bc72"
        ],
        [
            "Lemma char1_ge_norm (chi : 'CF(G)) x : chi \\is a character -> `|chi x| <= chi 1%g.",
            "VernacStartTheoremProof",
            "1c1afc1e1736b882823069d505e2243f6e245a4f"
        ],
        [
            "case/char_reprP=> rG ->; case Gx: (x \\in G); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cfunE cfRepr1 Gx normr0 ler0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by have [e [_ _ []]] := repr_rsim_diag rG Gx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_cfRepr_norm_scalar n (rG : mx_representation algCF G n) x : x \\in G -> `|cfRepr rG x| = cfRepr rG 1%g -> exists2 c, `|c| = 1 & rG x = c%:M.",
            "VernacStartTheoremProof",
            "ce0bc7cc99b539092296c80006ea7ab2c4445d96"
        ],
        [
            "move=> Gx; have [e [[B uB def_x] [_ e1] [-> _] _]] := repr_rsim_diag rG Gx.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite cfRepr1 -[n in n%:R]card_ord -sumr_const -(eq_bigr _ (in1W e1)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/normC_sum_eq1=> [i _ | c /eqP norm_c_1 def_e]; first by rewrite e1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have{def_e} def_e: e = const_mx c by apply/rowP=> i; rewrite mxE def_e ?andbT.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists c => //; rewrite def_x def_e diag_const_mx scalar_mxC mulmxKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_cfRepr_mx1 n (rG : mx_representation algCF G n) x : x \\in G -> cfRepr rG x = cfRepr rG 1%g -> rG x = 1%:M.",
            "VernacStartTheoremProof",
            "ccebed7bbf220bd2023d11c61804e782c0bf5dc6"
        ],
        [
            "move=> Gx kerGx; have [|c _ def_x] := @max_cfRepr_norm_scalar n rG x Gx.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite kerGx cfRepr1 normr_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP: kerGx; rewrite cfRepr1 cfunE Gx {rG}def_x mxtrace_scalar.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: n => [_|n]; first by rewrite ![_%:M]flatmx0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite mulrb -subr_eq0 -mulrnBl -mulr_natl mulf_eq0 pnatr_eq0 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subr_eq0 => /eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition irr_constt (B : {set gT}) phi := [pred i | '[phi, 'chi_i]_B != 0].",
            "VernacDefinition",
            "183b489bcafe97f10730d41a477c2d7b0cb5cc3b"
        ],
        [
            "Lemma irr_consttE i phi : (i \\in irr_constt phi) = ('[phi, 'chi_i]_G != 0).",
            "VernacStartTheoremProof",
            "05f8b35b6a08a7a63dc784130257ec945c2789a2"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma constt_charP (i : Iirr G) chi : chi \\is a character -> reflect (exists2 chi', chi' \\is a character & chi = 'chi_i + chi') (i \\in irr_constt chi).",
            "VernacStartTheoremProof",
            "2ead381b6ad502558fb718f1bdae580b44ecb9ba"
        ],
        [
            "move=> Nchi; apply: (iffP idP) => [i_in_chi| [chi' Nchi' ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite inE /= cfdotDl cfdot_irr eqxx -(eqP (Cnat_cfdot_char_irr i Nchi')).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -natrD pnatr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (chi - 'chi_i); last by rewrite addrC subrK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/forallP=> j; rewrite coord_cfdot cfdotBl cfdot_irr.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have [<- | _] := eqP; last by rewrite subr0 Cnat_cfdot_char_irr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have := i_in_chi; rewrite inE /= -(eqP (Cnat_cfdot_char_irr i Nchi)) pnatr_eq0.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by case: (truncC _) => // n _; rewrite mulrSr addrK ?isNatC_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfun_sum_constt (phi : 'CF(G)) : phi = \\sum_(i in irr_constt phi) '[phi, 'chi_i] *: 'chi_i.",
            "VernacStartTheoremProof",
            "94b323c20604bde4257689f2c48c7a65cc7186f6"
        ],
        [
            "rewrite {1}[phi]cfun_sum_cfdot (bigID [pred i | '[phi, 'chi_i] == 0]) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite big1 ?add0r // => i /eqP->; rewrite scale0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neq0_has_constt (phi : 'CF(G)) : phi != 0 -> exists i, i \\in irr_constt phi.",
            "VernacStartTheoremProof",
            "7c8d526bef86185f6fdbbe6f6af7876def2af04a"
        ],
        [
            "move=> nz_phi; apply/existsP; apply: contra nz_phi => /pred0P phi0.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by rewrite [phi]cfun_sum_constt big_pred0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma constt_irr i : irr_constt 'chi[G]_i =i pred1 i.",
            "VernacStartTheoremProof",
            "0e7a9777bc58f62e9eb9ef9afaeacb53079062fe"
        ],
        [
            "by move=> j; rewrite !inE cfdot_irr pnatr_eq0 (eq_sym j); case: (i == j).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma char1_ge_constt (i : Iirr G) chi : chi \\is a character -> i \\in irr_constt chi -> 'chi_i 1%g <= chi 1%g.",
            "VernacStartTheoremProof",
            "aa4d55946ab322ff72c94d927ab51151dfa15d9a"
        ],
        [
            "move=> {chi} _ /constt_charP[// | chi Nchi ->].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite cfunE addrC -subr_ge0 addrK char1_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma constt_ortho_char (phi psi : 'CF(G)) i j : phi \\is a character -> psi \\is a character -> i \\in irr_constt phi -> j \\in irr_constt psi -> '[phi, psi] = 0 -> '['chi_i, 'chi_j] = 0.",
            "VernacStartTheoremProof",
            "4e1313c569e661ad3c2949266692b375fa97a108"
        ],
        [
            "move=> _ _ /constt_charP[//|phi1 Nphi1 ->] /constt_charP[//|psi1 Npsi1 ->].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite cfdot_irr; case: eqP => // -> /eqP/idPn[].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite cfdotDl !cfdotDr cfnorm_irr -addrA gtr_eqF ?ltr_paddr ?ltr01 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Cnat_ge0 ?rpredD ?Cnat_cfdot_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IrrConstt.",
            "VernacEndSegment",
            "b577052132629e27a38cf341f4c06282dd1b117f"
        ],
        [
            "Arguments irr_constt {gT B%g} phi%CF.",
            "VernacArguments",
            "bb583be9acc9edbf8426ce1d5f91e4b750e81268"
        ],
        [
            "Section Kernel.",
            "VernacBeginSection",
            "2db985a75e027ef23644e5295a0d3e461670fbf6"
        ],
        [
            "Variable (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Implicit Types (phi chi xi : 'CF(G)) (H : {group gT}).",
            "VernacReserve",
            "42a275f28dd3eb2cfec6f9b332a78d52b32bbe85"
        ],
        [
            "Lemma cfker_repr n (rG : mx_representation algCF G n) : cfker (cfRepr rG) = rker rG.",
            "VernacStartTheoremProof",
            "603e1f1c6ad9515b97ad8dce366d27f7ef34bf70"
        ],
        [
            "apply/esym/setP=> x; rewrite inE mul1mx /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case Gx: (x \\in G); last by rewrite inE Gx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP/idP=> Kx; last by rewrite max_cfRepr_mx1 // cfker1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite inE Gx; apply/forallP=> y; rewrite !cfunE !mulrb groupMl //.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by case: ifP => // Gy; rewrite repr_mxM // Kx mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfkerEchar chi : chi \\is a character -> cfker chi = [set x in G | chi x == chi 1%g].",
            "VernacStartTheoremProof",
            "8f9e6fb787d90df215208a1c44a56e855b8717e6"
        ],
        [
            "move=> Nchi; apply/setP=> x; apply/idP/setIdP=> [Kx | [Gx /eqP chi_x]].",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by rewrite (subsetP (cfker_sub chi)) // cfker1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/char_reprP: Nchi => rG -> in chi_x *; rewrite inE Gx; apply/forallP=> y.",
            "VernacExtend",
            "7b10d760ecce4015b43936eb8ee3a43374e85678"
        ],
        [
            "rewrite !cfunE groupMl // !mulrb; case: ifP => // Gy.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite repr_mxM // max_cfRepr_mx1 ?mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfker_nzcharE chi : chi \\is a character -> chi != 0 -> cfker chi = [set x | chi x == chi 1%g].",
            "VernacStartTheoremProof",
            "27f1a4bf2c57442d38e44421716b37e9438531aa"
        ],
        [
            "move=> Nchi nzchi; apply/setP=> x; rewrite cfkerEchar // !inE andb_idl //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by apply: contraLR => /cfun0-> //; rewrite eq_sym char1_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfkerEirr i : cfker 'chi[G]_i = [set x | 'chi_i x == 'chi_i 1%g].",
            "VernacStartTheoremProof",
            "6fd6a4af0aa993db34c3c7546095fb043a89a656"
        ],
        [
            "by rewrite cfker_nzcharE ?irr_char ?irr_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfker_irr0 : cfker 'chi[G]_0 = G.",
            "VernacStartTheoremProof",
            "5e004221374a657863443d5cf86a90ac18d5a482"
        ],
        [
            "by rewrite irr0 cfker_cfun1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfaithful_reg : cfaithful (cfReg G).",
            "VernacStartTheoremProof",
            "d881ec91d8c0177f5ce6f5f0e74c3790e205e4f2"
        ],
        [
            "apply/subsetP=> x; rewrite cfkerEchar ?cfReg_char // !inE !cfRegE eqxx.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case/andP=> _; apply: contraLR => /negbTE->; rewrite eq_sym neq0CG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfkerE chi : chi \\is a character -> cfker chi = G :&: \\bigcap_(i in irr_constt chi) cfker 'chi_i.",
            "VernacStartTheoremProof",
            "0a50416996bc94964f28f2490500be4d1ea2fbd5"
        ],
        [
            "move=> Nchi; rewrite cfkerEchar //; apply/setP=> x; rewrite !inE.",
            "VernacExtend",
            "291cbed887ee44aa2a2133906ee031c937159d58"
        ],
        [
            "apply: andb_id2l => Gx; rewrite {1 2}[chi]cfun_sum_constt !sum_cfunE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/eqP/bigcapP=> [Kx i Ci | Kx]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: eq_bigr => i /Kx Kx_i; rewrite !cfunE cfker1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite cfkerEirr inE /= -(inj_eq (mulfI Ci)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have:= (normC_sum_upper _ Kx) i; rewrite !cfunE => -> // {i Ci} i _.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "have chi_i_ge0: 0 <= '[chi, 'chi_i].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite Cnat_ge0 ?Cnat_cfdot_char_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite !cfunE normrM (normr_idP _) ?ler_wpmul2l ?char1_ge_norm ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma TI_cfker_irr : \\bigcap_i cfker 'chi[G]_i = [1].",
            "VernacStartTheoremProof",
            "e248fb0e5872c4d65296bab1db4c700ca9da6750"
        ],
        [
            "apply/trivgP; apply: subset_trans cfaithful_reg; rewrite cfkerE ?cfReg_char //.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "rewrite subsetI (bigcap_min 0) //=; last by rewrite cfker_irr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/bigcapsP=> i _; rewrite bigcap_inf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfker_constt i chi : chi \\is a character -> i \\in irr_constt chi -> cfker chi \\subset cfker 'chi[G]_i.",
            "VernacStartTheoremProof",
            "033978dda7042886364cd35cc8e33f10f6e8f583"
        ],
        [
            "by move=> Nchi Ci; rewrite cfkerE ?subIset ?(bigcap_min i) ?orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section KerLin.",
            "VernacBeginSection",
            "3ab490c899077b8ecab813ed2294a6b74460f683"
        ],
        [
            "Variable xi : 'CF(G).",
            "VernacAssumption",
            "263c0ab29991a0c11c76facead5d6517ca16b328"
        ],
        [
            "Hypothesis lin_xi : xi \\is a linear_char.",
            "VernacAssumption",
            "74e274d460a1d77f0092c4e35df2dbc32b965b28"
        ],
        [
            "Let Nxi: xi \\is a character.",
            "VernacDefinition",
            "bf5f702ecc5e387874bdc008173582cb4a7d1775"
        ],
        [
            "by have [] := andP lin_xi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_char_der1 : G^`(1)%g \\subset cfker xi.",
            "VernacStartTheoremProof",
            "be84be338c3e66a6d04b31cea2003c11c0cb518d"
        ],
        [
            "rewrite gen_subG /=; apply/subsetP=> _ /imset2P[x y Gx Gy ->].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite cfkerEchar // inE groupR //= !lin_charM ?lin_charV ?in_group //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrCA mulKf ?mulVf ?lin_char_neq0 // lin_char1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cforder_lin_char : #[xi]%CF = exponent (G / cfker xi)%g.",
            "VernacStartTheoremProof",
            "deaabb290dc31e9694c47d64380603a9ef641d68"
        ],
        [
            "apply/eqP; rewrite eqn_dvd; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "apply/dvdn_cforderP=> x Gx; rewrite -lin_charX // -cfQuoEker ?groupX //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite morphX ?(subsetP (cfker_norm xi)) //= expg_exponent ?mem_quotient //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfQuo1 ?cfker_normal ?lin_char1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have abGbar: abelian (G / cfker xi) := sub_der1_abelian lin_char_der1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [_ /morphimP[x Nx Gx ->] ->] := exponent_witness (abelian_nil abGbar).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite order_dvdn -morphX //= coset_id cfkerEchar // !inE groupX //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite lin_charX ?lin_char1 // (dvdn_cforderP _ _ _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cforder_lin_char_dvdG : #[xi]%CF %| #|G|.",
            "VernacStartTheoremProof",
            "5f4d3ed58da6c808c9eec0e9af57934d3708bed8"
        ],
        [
            "by rewrite cforder_lin_char (dvdn_trans (exponent_dvdn _)) ?dvdn_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cforder_lin_char_gt0 : (0 < #[xi]%CF)%N.",
            "VernacStartTheoremProof",
            "059bd2a926d05027e2994b553bf886ec8022274e"
        ],
        [
            "by rewrite cforder_lin_char exponent_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End KerLin.",
            "VernacEndSegment",
            "fd1b16e4c4d941ed5d3102968ff3dce080164394"
        ],
        [
            "End Kernel.",
            "VernacEndSegment",
            "f770c08b88bd4957640848df511563e05df4c280"
        ],
        [
            "Section Restrict.",
            "VernacBeginSection",
            "457b91c4635da7a08fdf3f3bda44e7aa7a4a51b1"
        ],
        [
            "Variable (gT : finGroupType) (G H : {group gT}).",
            "VernacAssumption",
            "7daa1d9261ae1a6ccdcbdd91ed19876e2639bc72"
        ],
        [
            "Lemma cfRepr_sub n (rG : mx_representation algCF G n) (sHG : H \\subset G) : cfRepr (subg_repr rG sHG) = 'Res[H] (cfRepr rG).",
            "VernacStartTheoremProof",
            "af72ce6f17b80d184bb44fc90de67efae3f30498"
        ],
        [
            "by apply/cfun_inP => x Hx; rewrite cfResE // !cfunE Hx (subsetP sHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRes_char chi : chi \\is a character -> 'Res[H, G] chi \\is a character.",
            "VernacStartTheoremProof",
            "98279bee8e3aa261710a6086f98f24a3cdb6a99f"
        ],
        [
            "have [sHG | not_sHG] := boolP (H \\subset G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/char_reprP=> rG ->; rewrite -(cfRepr_sub rG sHG) cfRepr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/Cnat_char1=> Nchi1; rewrite cfResEout // rpredZ_Cnat ?rpred1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRes_eq0 phi : phi \\is a character -> ('Res[H, G] phi == 0) = (phi == 0).",
            "VernacStartTheoremProof",
            "441642afd1f87a0f1f67ae7b9459c60be7df091c"
        ],
        [
            "by move=> Nchi; rewrite -!char1_eq0 ?cfRes_char // cfRes1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRes_lin_char chi : chi \\is a linear_char -> 'Res[H, G] chi \\is a linear_char.",
            "VernacStartTheoremProof",
            "c7a8f8ece39c7797385c9cdd9458239435ee041c"
        ],
        [
            "by case/andP=> Nchi; rewrite qualifE cfRes_char ?cfRes1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Res_irr_neq0 i : 'Res[H, G] 'chi_i != 0.",
            "VernacStartTheoremProof",
            "fa98b2dd1028cb9efa15ee297be47307e9f33438"
        ],
        [
            "by rewrite cfRes_eq0 ?irr_neq0 ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRes_lin_lin (chi : 'CF(G)) : chi \\is a character -> 'Res[H] chi \\is a linear_char -> chi \\is a linear_char.",
            "VernacStartTheoremProof",
            "513c3b76180f0efa2c28ee3cc6ea22ac763d8d71"
        ],
        [
            "by rewrite !qualifE cfRes1 => -> /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRes_irr_irr chi : chi \\is a character -> 'Res[H] chi \\in irr H -> chi \\in irr G.",
            "VernacStartTheoremProof",
            "a9ac21e01b4f9caff19770dd281c15d6a81c6e90"
        ],
        [
            "have [sHG /char_reprP[rG ->] | not_sHG Nchi] := boolP (H \\subset G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(cfRepr_sub _ sHG) => /irr_reprP[rH irrH def_rH]; apply/irr_reprP.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "suffices /subg_mx_irr: mx_irreducible (subg_repr rG sHG) by exists rG.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by apply: mx_rsim_irr irrH; apply/cfRepr_rsimP/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite cfResEout // => /irrP[j Dchi_j]; apply/lin_char_irr/cfRes_lin_lin=> //.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "suffices j0: j = 0 by rewrite cfResEout // Dchi_j j0 irr0 rpred1.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply: contraNeq (irr1_neq0 j) => nz_j.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have:= xcfun_id j 0; rewrite -Dchi_j cfunE xcfunZl -irr0 xcfun_id eqxx => ->.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "by rewrite (negPf nz_j).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Res_Iirr (A B : {set gT}) i := cfIirr ('Res[B, A] 'chi_i).",
            "VernacDefinition",
            "578f244a5b754a98aca300fd85c4412fa7fa1112"
        ],
        [
            "Lemma Res_Iirr0 : Res_Iirr H (0 : Iirr G) = 0.",
            "VernacStartTheoremProof",
            "989a7e19f4b0ec3e19f95e19f6c91ef08f70e9a4"
        ],
        [
            "by rewrite /Res_Iirr irr0 rmorph1 -irr0 irrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_Res_IirrE i : 'chi[G]_i 1%g = 1 -> 'chi_(Res_Iirr H i) = 'Res 'chi_i.",
            "VernacStartTheoremProof",
            "d5f725f8037493bad2d2a35fb982cb9fb3211ffa"
        ],
        [
            "move=> chi1; rewrite cfIirrE ?lin_char_irr ?cfRes_lin_char //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite qualifE irr_char /= chi1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Restrict.",
            "VernacEndSegment",
            "746f669aebca461bfe6449478db2d94d3e29eaab"
        ],
        [
            "Arguments Res_Iirr {gT A%g} B%g i%R.",
            "VernacArguments",
            "f5d4176f210c301aba85f0648bd515a14d7e6cf8"
        ],
        [
            "Section MoreConstt.",
            "VernacBeginSection",
            "d58cf2520d24fc904027118572819378f4d89895"
        ],
        [
            "Variables (gT : finGroupType) (G H : {group gT}).",
            "VernacAssumption",
            "7daa1d9261ae1a6ccdcbdd91ed19876e2639bc72"
        ],
        [
            "Lemma constt_Ind_Res i j : i \\in irr_constt ('Ind[G] 'chi_j) = (j \\in irr_constt ('Res[H] 'chi_i)).",
            "VernacStartTheoremProof",
            "1e5c9df1554128a0bdcbb2ea61936e902a71c7ce"
        ],
        [
            "by rewrite !irr_consttE cfdotC conjC_eq0 -cfdot_Res_l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfdot_Res_ge_constt i j psi : psi \\is a character -> j \\in irr_constt psi -> '['Res[H, G] 'chi_j, 'chi_i] <= '['Res[H] psi, 'chi_i].",
            "VernacStartTheoremProof",
            "fd129365e8ae9926ab9a6dc67e730c74eb296cd8"
        ],
        [
            "move=> {psi} _ /constt_charP[// | psi Npsi ->].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite linearD cfdotDl addrC -subr_ge0 addrK Cnat_ge0 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Cnat_cfdot_char_irr // cfRes_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma constt_Res_trans j psi : psi \\is a character -> j \\in irr_constt psi -> {subset irr_constt ('Res[H, G] 'chi_j) <= irr_constt ('Res[H] psi)}.",
            "VernacStartTheoremProof",
            "d962b78e43d1b59aeeb84c72786945ca53323eb6"
        ],
        [
            "move=> Npsi Cj i; apply: contraNneq; rewrite eqr_le => {1}<-.",
            "VernacExtend",
            "b7d55d5cc9e609b184db748f6780e12224901e48"
        ],
        [
            "rewrite cfdot_Res_ge_constt ?Cnat_ge0 ?Cnat_cfdot_char_irr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfRes_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MoreConstt.",
            "VernacEndSegment",
            "880689db10304137a8080cc05a8aa514baa70456"
        ],
        [
            "Section Morphim.",
            "VernacBeginSection",
            "4646452bcbeec569fe6b270cd8e4d27da72b6079"
        ],
        [
            "Variables (aT rT : finGroupType) (G D : {group aT}) (f : {morphism D >-> rT}).",
            "VernacAssumption",
            "0f15414801b90443836b235fe222ba6fbef00dbf"
        ],
        [
            "Implicit Type chi : 'CF(f @* G).",
            "VernacReserve",
            "fef6236ff868fc35002488eaedd60a46af48dda3"
        ],
        [
            "Lemma cfRepr_morphim n (rfG : mx_representation algCF (f @* G) n) sGD : cfRepr (morphim_repr rfG sGD) = cfMorph (cfRepr rfG).",
            "VernacStartTheoremProof",
            "52092c0d92bbae9a8829a566f18b144349ac6e3b"
        ],
        [
            "apply/cfun_inP=> x Gx; have Dx: x \\in D := subsetP sGD x Gx.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "by rewrite cfMorphE // !cfunE ?mem_morphim ?Gx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfMorph_char chi : chi \\is a character -> cfMorph chi \\is a character.",
            "VernacStartTheoremProof",
            "f57d81cbfe523d5444992e2c1350c211177c4925"
        ],
        [
            "have [sGD /char_reprP[rfG ->] | outGD Nchi] := boolP (G \\subset D); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cfMorphEout // rpredZ_Cnat ?rpred1 ?Cnat_char1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/char_reprP; exists (Representation (morphim_repr rfG sGD)).",
            "VernacExtend",
            "47e169fc698ed2319e67043d23db8a7f403ff593"
        ],
        [
            "by rewrite cfRepr_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfMorph_lin_char chi : chi \\is a linear_char -> cfMorph chi \\is a linear_char.",
            "VernacStartTheoremProof",
            "ac288bc2856cfd0dcaae34dcef8129156549c3ee"
        ],
        [
            "by case/andP=> Nchi; rewrite qualifE cfMorph1 cfMorph_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfMorph_charE chi : G \\subset D -> (cfMorph chi \\is a character) = (chi \\is a character).",
            "VernacStartTheoremProof",
            "8e42548a92e15419654ccf983045c9d1ec48162b"
        ],
        [
            "move=> sGD; apply/idP/idP=> [/char_reprP[[n rG] /=Dfchi] | /cfMorph_char//].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "pose H := 'ker_G f; have kerH: H \\subset rker rG.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "by rewrite -cfker_repr -Dfchi cfker_morph // setIS // ker_sub_pre.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nHG: G \\subset 'N(H) by rewrite normsI // (subset_trans sGD) ?ker_norm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [h injh im_h] := first_isom_loc f sGD; rewrite -/H in h injh im_h.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have DfG: invm injh @*^-1 (G / H) == (f @* G)%g by rewrite morphpre_invm im_h.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose rfG := eqg_repr (morphpre_repr _ (quo_repr kerH nHG)) DfG.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "apply/char_reprP; exists (Representation rfG).",
            "VernacExtend",
            "59fcf783546cb3036a209a2fb75cd75caa51dc1e"
        ],
        [
            "apply/cfun_inP=> _ /morphimP[x Dx Gx ->]; rewrite -cfMorphE // Dfchi !cfunE Gx.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "pose xH := coset H x; have GxH: xH \\in (G / H)%g by apply: mem_quotient.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "suffices Dfx: f x = h xH by rewrite mem_morphim //= Dfx invmE ?quo_repr_coset.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by apply/set1_inj; rewrite -?morphim_set1 ?im_h ?(subsetP nHG) ?sub1set.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfMorph_lin_charE chi : G \\subset D -> (cfMorph chi \\is a linear_char) = (chi \\is a linear_char).",
            "VernacStartTheoremProof",
            "1afdd7197414193b1d5a739087d0a992263f789c"
        ],
        [
            "by rewrite qualifE cfMorph1 => /cfMorph_charE->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfMorph_irr chi : G \\subset D -> (cfMorph chi \\in irr G) = (chi \\in irr (f @* G)).",
            "VernacStartTheoremProof",
            "0e270672e747a643b72b813496ffc4e8fed5a21b"
        ],
        [
            "by move=> sGD; rewrite !irrEchar cfMorph_charE // cfMorph_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition morph_Iirr i := cfIirr (cfMorph 'chi[f @* G]_i).",
            "VernacDefinition",
            "6b5e83e5f69300a1dcfbb48b28ca1311cce5b19c"
        ],
        [
            "Lemma morph_Iirr0 : morph_Iirr 0 = 0.",
            "VernacStartTheoremProof",
            "f10433dc90b4a87d395793a336a79ef648743a58"
        ],
        [
            "by rewrite /morph_Iirr irr0 rmorph1 -irr0 irrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis sGD : G \\subset D.",
            "VernacAssumption",
            "e5bee542dae4b94e2f2a5d0212db17bcb357c2f3"
        ],
        [
            "Lemma morph_IirrE i : 'chi_(morph_Iirr i) = cfMorph 'chi_i.",
            "VernacStartTheoremProof",
            "2b951cdfce304b987752ac1995fbc27c13ca125d"
        ],
        [
            "by rewrite cfIirrE ?cfMorph_irr ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morph_Iirr_inj : injective morph_Iirr.",
            "VernacStartTheoremProof",
            "003f4d377a4875a6639e876888efb5e02e7ae977"
        ],
        [
            "by move=> i j eq_ij; apply/irr_inj/cfMorph_inj; rewrite // -!morph_IirrE eq_ij.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morph_Iirr_eq0 i : (morph_Iirr i == 0) = (i == 0).",
            "VernacStartTheoremProof",
            "4882eaf22f34d4ed2b284728b7c80cbae6efcf35"
        ],
        [
            "by rewrite -!irr_eq1 morph_IirrE cfMorph_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Morphim.",
            "VernacEndSegment",
            "168fbc3a2a73e55e94c79bdb37226af0d77bd3d8"
        ],
        [
            "Section Isom.",
            "VernacBeginSection",
            "3b418302354b979369510edd8596e8e0394ad147"
        ],
        [
            "Variables (aT rT : finGroupType) (G : {group aT}) (f : {morphism G >-> rT}).",
            "VernacAssumption",
            "95e3b77230b5e100bf2b03f16b216719b9d823b3"
        ],
        [
            "Variables (R : {group rT}) (isoGR : isom G R f).",
            "VernacAssumption",
            "aa4b0b04f5b5946a8962030a26bee9813edcf72e"
        ],
        [
            "Implicit Type chi : 'CF(G).",
            "VernacReserve",
            "b0cd90ac688cfd4713198b73db11d1f8b3222416"
        ],
        [
            "Lemma cfIsom_char chi : (cfIsom isoGR chi \\is a character) = (chi \\is a character).",
            "VernacStartTheoremProof",
            "b4468eb15fbd9410a27da37a0d4b6a88941fe2b6"
        ],
        [
            "rewrite [cfIsom _]locked_withE cfMorph_charE //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (isom_im (isom_sym _)) cfRes_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfIsom_lin_char chi : (cfIsom isoGR chi \\is a linear_char) = (chi \\is a linear_char).",
            "VernacStartTheoremProof",
            "134f43997d60b2ac90d635d3f872d052d547af3f"
        ],
        [
            "by rewrite qualifE cfIsom_char cfIsom1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfIsom_irr chi : (cfIsom isoGR chi \\in irr R) = (chi \\in irr G).",
            "VernacStartTheoremProof",
            "2bac041c0908f2836b89f68e914b61aa6a0691f3"
        ],
        [
            "by rewrite !irrEchar cfIsom_char cfIsom_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition isom_Iirr i := cfIirr (cfIsom isoGR 'chi_i).",
            "VernacDefinition",
            "1a82a3ce30eb075fbe1ee926b259fca57abb102d"
        ],
        [
            "Lemma isom_IirrE i : 'chi_(isom_Iirr i) = cfIsom isoGR 'chi_i.",
            "VernacStartTheoremProof",
            "e9bbfb60fb58f7418ab8c16a93f110ebee960d67"
        ],
        [
            "by rewrite cfIirrE ?cfIsom_irr ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isom_Iirr_inj : injective isom_Iirr.",
            "VernacStartTheoremProof",
            "7af218ae159f27c1a62a6b8c8266aef6502c794d"
        ],
        [
            "by move=> i j eqij; apply/irr_inj/(cfIsom_inj isoGR); rewrite -!isom_IirrE eqij.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isom_Iirr_eq0 i : (isom_Iirr i == 0) = (i == 0).",
            "VernacStartTheoremProof",
            "c2aa625cc41ac3dd95a624d890ab14aa0e795cee"
        ],
        [
            "by rewrite -!irr_eq1 isom_IirrE cfIsom_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isom_Iirr0 : isom_Iirr 0 = 0.",
            "VernacStartTheoremProof",
            "4c0fda6d0877eff96c98e4a47dfcb33b329bbfcc"
        ],
        [
            "by apply/eqP; rewrite isom_Iirr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Isom.",
            "VernacEndSegment",
            "9b4819b77b757eeeedab7f34561f9628fe1bf83a"
        ],
        [
            "Arguments isom_Iirr_inj {aT rT G f R} isoGR [i1 i2] : rename.",
            "VernacArguments",
            "07e93429fdc2c62956307fd8ec11304e78639375"
        ],
        [
            "Section IsomInv.",
            "VernacBeginSection",
            "74063721fe995b91a0d8d2e45f1379e3f7653343"
        ],
        [
            "Variables (aT rT : finGroupType) (G : {group aT}) (f : {morphism G >-> rT}).",
            "VernacAssumption",
            "95e3b77230b5e100bf2b03f16b216719b9d823b3"
        ],
        [
            "Variables (R : {group rT}) (isoGR : isom G R f).",
            "VernacAssumption",
            "aa4b0b04f5b5946a8962030a26bee9813edcf72e"
        ],
        [
            "Lemma isom_IirrK : cancel (isom_Iirr isoGR) (isom_Iirr (isom_sym isoGR)).",
            "VernacStartTheoremProof",
            "d764eb5d89ef6ba012dfb535c5428dbf22ce4dc4"
        ],
        [
            "by move=> i; apply: irr_inj; rewrite !isom_IirrE cfIsomK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isom_IirrKV : cancel (isom_Iirr (isom_sym isoGR)) (isom_Iirr isoGR).",
            "VernacStartTheoremProof",
            "8ad12dd1cf62ca9461d2b9c94a730af2d7d10ee1"
        ],
        [
            "by move=> i; apply: irr_inj; rewrite !isom_IirrE cfIsomKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IsomInv.",
            "VernacEndSegment",
            "33de5736da3c7e110b2c801f433fe1d41b6c2a29"
        ],
        [
            "Section Sdprod.",
            "VernacBeginSection",
            "3ee092e3df495340a617e8da80cafc82243e8555"
        ],
        [
            "Variables (gT : finGroupType) (K H G : {group gT}).",
            "VernacAssumption",
            "f32e4191f939322ab86742dda753f0921a3ed643"
        ],
        [
            "Hypothesis defG : K ><| H = G.",
            "VernacAssumption",
            "813ec0fb558b04dd0355c167c4bfbb2bef103f5d"
        ],
        [
            "Let nKG: G \\subset 'N(K).",
            "VernacDefinition",
            "8f233115c1fff6cef7cca00ab755c1791158b5e5"
        ],
        [
            "by have [/andP[]] := sdprod_context defG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfSdprod_char chi : (cfSdprod defG chi \\is a character) = (chi \\is a character).",
            "VernacStartTheoremProof",
            "baeedae58e36192b240651d8f79b2df9f0d0b623"
        ],
        [
            "by rewrite unlock cfMorph_charE // cfIsom_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfSdprod_lin_char chi : (cfSdprod defG chi \\is a linear_char) = (chi \\is a linear_char).",
            "VernacStartTheoremProof",
            "a3838531d170541adfb7e8dd2568d2c1f3192029"
        ],
        [
            "by rewrite qualifE cfSdprod_char cfSdprod1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfSdprod_irr chi : (cfSdprod defG chi \\in irr G) = (chi \\in irr H).",
            "VernacStartTheoremProof",
            "f731369b009a82c21377755bc7056f952164d87e"
        ],
        [
            "by rewrite !irrEchar cfSdprod_char cfSdprod_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sdprod_Iirr j := cfIirr (cfSdprod defG 'chi_j).",
            "VernacDefinition",
            "ede312b9f43e7be843822974cd7bcd6829c60638"
        ],
        [
            "Lemma sdprod_IirrE j : 'chi_(sdprod_Iirr j) = cfSdprod defG 'chi_j.",
            "VernacStartTheoremProof",
            "e65d994625e86986529cbc272dab27f7ae54f3b1"
        ],
        [
            "by rewrite cfIirrE ?cfSdprod_irr ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sdprod_IirrK : cancel sdprod_Iirr (Res_Iirr H).",
            "VernacStartTheoremProof",
            "93a666167d48dd523624061503f8ecd53157334b"
        ],
        [
            "by move=> j; rewrite /Res_Iirr sdprod_IirrE cfSdprodK irrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sdprod_Iirr_inj : injective sdprod_Iirr.",
            "VernacStartTheoremProof",
            "264e352f65bd2c5a13e6904075aa48f4f00f6fdd"
        ],
        [
            "exact: can_inj sdprod_IirrK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sdprod_Iirr_eq0 i : (sdprod_Iirr i == 0) = (i == 0).",
            "VernacStartTheoremProof",
            "b309868fff1730d1e5174c81d70fded170bc9a7a"
        ],
        [
            "by rewrite -!irr_eq1 sdprod_IirrE cfSdprod_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sdprod_Iirr0 : sdprod_Iirr 0 = 0.",
            "VernacStartTheoremProof",
            "15c3eaf7ae8ff152b86c736a7eaff86c74f16008"
        ],
        [
            "by apply/eqP; rewrite sdprod_Iirr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Res_sdprod_irr phi : K \\subset cfker phi -> phi \\in irr G -> 'Res phi \\in irr H.",
            "VernacStartTheoremProof",
            "9789aee23bf07a06b567b39cc0912f4d3817e9be"
        ],
        [
            "move=> kerK /irrP[i Dphi]; rewrite irrEchar -(cfSdprod_iso defG).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite cfRes_sdprodK // Dphi cfnorm_irr cfRes_char ?irr_char /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sdprod_Res_IirrE i : K \\subset cfker 'chi[G]_i -> 'chi_(Res_Iirr H i) = 'Res 'chi_i.",
            "VernacStartTheoremProof",
            "cfa35cddf1c14007f8dcff87803aa054db4ac507"
        ],
        [
            "by move=> kerK; rewrite cfIirrE ?Res_sdprod_irr ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sdprod_Res_IirrK i : K \\subset cfker 'chi_i -> sdprod_Iirr (Res_Iirr H i) = i.",
            "VernacStartTheoremProof",
            "6c576af5867047db2a25055cee5bdcd75eb9c62e"
        ],
        [
            "by move=> kerK; rewrite /sdprod_Iirr sdprod_Res_IirrE ?cfRes_sdprodK ?irrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Sdprod.",
            "VernacEndSegment",
            "636e5950194cc03ba8f2f63fd656cc2fd4bc5c3f"
        ],
        [
            "Arguments sdprod_Iirr_inj {gT K H G} defG [i1 i2] : rename.",
            "VernacArguments",
            "5b967a06476e739eaaa7587011ed2ad3b7cff718"
        ],
        [
            "Section DProd.",
            "VernacBeginSection",
            "e29416d6ad8e1881a200f5d2077933373d3fb6cd"
        ],
        [
            "Variables (gT : finGroupType) (G K H : {group gT}).",
            "VernacAssumption",
            "4f858719f977f912d8fd5cceff262ca6499eba35"
        ],
        [
            "Hypothesis KxH : K \\x H = G.",
            "VernacAssumption",
            "2aeeb7d1b4e0adf9874a9f7f99bddca6575d103a"
        ],
        [
            "Lemma cfDprodKl_abelian j : abelian H -> cancel ((cfDprod KxH)^~ 'chi_j) 'Res.",
            "VernacStartTheoremProof",
            "0a802cfe4d934ed0501cdeca45337668bc780d7e"
        ],
        [
            "by move=> cHH; apply: cfDprodKl; apply/lin_char1/char_abelianP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprodKr_abelian i : abelian K -> cancel (cfDprod KxH 'chi_i) 'Res.",
            "VernacStartTheoremProof",
            "2ee35bddb49f936b60f32123ba6134a0331c1348"
        ],
        [
            "by move=> cKK; apply: cfDprodKr; apply/lin_char1/char_abelianP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprodl_char phi : (cfDprodl KxH phi \\is a character) = (phi \\is a character).",
            "VernacStartTheoremProof",
            "67e375cad4a1841ccdb11bd81c6da4945a655bb2"
        ],
        [
            "exact: cfSdprod_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprodr_char psi : (cfDprodr KxH psi \\is a character) = (psi \\is a character).",
            "VernacStartTheoremProof",
            "fcd62289e2ffcce201a7f95bfcf02323f65d0412"
        ],
        [
            "exact: cfSdprod_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprod_char phi psi : phi \\is a character -> psi \\is a character -> cfDprod KxH phi psi \\is a character.",
            "VernacStartTheoremProof",
            "db848a4f8299811fd3a081e751499115437d143d"
        ],
        [
            "by move=> Nphi Npsi; rewrite rpredM ?cfDprodl_char ?cfDprodr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprod_eq1 phi psi : phi \\is a character -> psi \\is a character -> (cfDprod KxH phi psi == 1) = (phi == 1) && (psi == 1).",
            "VernacStartTheoremProof",
            "466cf1819d8a482083a961297ecc693d2fc29623"
        ],
        [
            "move=> /Cnat_char1 Nphi /Cnat_char1 Npsi.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply/eqP/andP=> [phi_psi_1 | [/eqP-> /eqP->]]; last by rewrite cfDprod_cfun1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have /andP[/eqP phi1 /eqP psi1]: (phi 1%g == 1) && (psi 1%g == 1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -Cnat_mul_eq1 // -(cfDprod1 KxH) phi_psi_1 cfun11.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[phi](cfDprodKl KxH psi1) -{2}[psi](cfDprodKr KxH phi1) phi_psi_1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !rmorph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprodl_lin_char phi : (cfDprodl KxH phi \\is a linear_char) = (phi \\is a linear_char).",
            "VernacStartTheoremProof",
            "7cdab075430d9e3be6f0ba999238cc8dc8984801"
        ],
        [
            "exact: cfSdprod_lin_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprodr_lin_char psi : (cfDprodr KxH psi \\is a linear_char) = (psi \\is a linear_char).",
            "VernacStartTheoremProof",
            "7953a9d6e972c3ef7204ba0530d6072ce92232e4"
        ],
        [
            "exact: cfSdprod_lin_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprod_lin_char phi psi : phi \\is a linear_char -> psi \\is a linear_char -> cfDprod KxH phi psi \\is a linear_char.",
            "VernacStartTheoremProof",
            "8628544638169528893209e4dab8c84d899484e6"
        ],
        [
            "by move=> Nphi Npsi; rewrite rpredM ?cfSdprod_lin_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprodl_irr chi : (cfDprodl KxH chi \\in irr G) = (chi \\in irr K).",
            "VernacStartTheoremProof",
            "2300b6055dcdb9699fd7a5455c5595d51dadfb52"
        ],
        [
            "exact: cfSdprod_irr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprodr_irr chi : (cfDprodr KxH chi \\in irr G) = (chi \\in irr H).",
            "VernacStartTheoremProof",
            "31602a73c0b6505c28c06151ab004d62c5be729e"
        ],
        [
            "exact: cfSdprod_irr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition dprodl_Iirr i := cfIirr (cfDprodl KxH 'chi_i).",
            "VernacDefinition",
            "c897f9e24224314d8687f69a2ec334f3600a3989"
        ],
        [
            "Lemma dprodl_IirrE i : 'chi_(dprodl_Iirr i) = cfDprodl KxH 'chi_i.",
            "VernacStartTheoremProof",
            "e280865f71ea70bd9e411e286c4bb21b11c99181"
        ],
        [
            "exact: sdprod_IirrE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprodl_IirrK : cancel dprodl_Iirr (Res_Iirr K).",
            "VernacStartTheoremProof",
            "8f2f33c713b92e585b0bef2e887a2c585e5f12e2"
        ],
        [
            "exact: sdprod_IirrK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprodl_Iirr_eq0 i : (dprodl_Iirr i == 0) = (i == 0).",
            "VernacStartTheoremProof",
            "a3cc50c51fbb972ddc42478b649fcfd80f82d069"
        ],
        [
            "exact: sdprod_Iirr_eq0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprodl_Iirr0 : dprodl_Iirr 0 = 0.",
            "VernacStartTheoremProof",
            "c1a548bb58c7767fc54dc8d3f1ef055124ec9c0a"
        ],
        [
            "exact: sdprod_Iirr0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition dprodr_Iirr j := cfIirr (cfDprodr KxH 'chi_j).",
            "VernacDefinition",
            "65995c8da92a9400ffe7a623b20513ac3b69ba5c"
        ],
        [
            "Lemma dprodr_IirrE j : 'chi_(dprodr_Iirr j) = cfDprodr KxH 'chi_j.",
            "VernacStartTheoremProof",
            "8a228a9b4e6045d2880513fd9369bea8aa096855"
        ],
        [
            "exact: sdprod_IirrE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprodr_IirrK : cancel dprodr_Iirr (Res_Iirr H).",
            "VernacStartTheoremProof",
            "6c0c3b7519aab534a174c593c835c37f95754545"
        ],
        [
            "exact: sdprod_IirrK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprodr_Iirr_eq0 j : (dprodr_Iirr j == 0) = (j == 0).",
            "VernacStartTheoremProof",
            "2e5f15c3f4ac8e7e5d32f4100113f1524e13dd39"
        ],
        [
            "exact: sdprod_Iirr_eq0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprodr_Iirr0 : dprodr_Iirr 0 = 0.",
            "VernacStartTheoremProof",
            "efb721f50c3eff782702b0faaf3bbfe0a3aae23b"
        ],
        [
            "exact: sdprod_Iirr0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDprod_irr i j : cfDprod KxH 'chi_i 'chi_j \\in irr G.",
            "VernacStartTheoremProof",
            "dcdc11912b800d3049522501c6ef7acdfd639fd6"
        ],
        [
            "rewrite irrEchar cfDprod_char ?irr_char //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfdot_dprod !cfdot_irr !eqxx mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition dprod_Iirr ij := cfIirr (cfDprod KxH 'chi_ij.1 'chi_ij.2).",
            "VernacDefinition",
            "ebbc530c33265411f49685bc9d18de0643b4d383"
        ],
        [
            "Lemma dprod_IirrE i j : 'chi_(dprod_Iirr (i, j)) = cfDprod KxH 'chi_i 'chi_j.",
            "VernacStartTheoremProof",
            "ae89f86e4118df2557f3e8594014a097c19c1358"
        ],
        [
            "by rewrite cfIirrE ?cfDprod_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprod_IirrEl i : 'chi_(dprod_Iirr (i, 0)) = cfDprodl KxH 'chi_i.",
            "VernacStartTheoremProof",
            "3204df8330484e85306bf03934afcdb4efc7b587"
        ],
        [
            "by rewrite dprod_IirrE /cfDprod irr0 rmorph1 mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprod_IirrEr j : 'chi_(dprod_Iirr (0, j)) = cfDprodr KxH 'chi_j.",
            "VernacStartTheoremProof",
            "139a106ccfcec2b4f3577e8f4b2179dfd21caa89"
        ],
        [
            "by rewrite dprod_IirrE /cfDprod irr0 rmorph1 mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprod_Iirr_inj : injective dprod_Iirr.",
            "VernacStartTheoremProof",
            "68ded16169fc5b0e0c5fbea6e40513005f13ef74"
        ],
        [
            "move=> [i1 j1] [i2 j2] /eqP; rewrite -[_ == _]oddb -(natCK (_ == _)).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -cfdot_irr !dprod_IirrE cfdot_dprod !cfdot_irr -natrM mulnb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite natCK oddb -xpair_eqE => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprod_Iirr0 : dprod_Iirr (0, 0) = 0.",
            "VernacStartTheoremProof",
            "84d954b8e5fb6c02f393044f8425fe029819f485"
        ],
        [
            "by apply/irr_inj; rewrite dprod_IirrE !irr0 cfDprod_cfun1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprod_Iirr0l j : dprod_Iirr (0, j) = dprodr_Iirr j.",
            "VernacStartTheoremProof",
            "551f375b404702c620e97487dd60cda90f4a6674"
        ],
        [
            "by apply/irr_inj; rewrite dprod_IirrE irr0 dprodr_IirrE cfDprod_cfun1l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprod_Iirr0r i : dprod_Iirr (i, 0) = dprodl_Iirr i.",
            "VernacStartTheoremProof",
            "811a0359eaaee0fdc3e74f085919dca9fd9e93e8"
        ],
        [
            "by apply/irr_inj; rewrite dprod_IirrE irr0 dprodl_IirrE cfDprod_cfun1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprod_Iirr_eq0 i j : (dprod_Iirr (i, j) == 0) = (i == 0) && (j == 0).",
            "VernacStartTheoremProof",
            "a9fa7400e1a8834c9a38e9016d6b5c85e5dfc383"
        ],
        [
            "by rewrite -xpair_eqE -(inj_eq dprod_Iirr_inj) dprod_Iirr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfdot_dprod_irr i1 i2 j1 j2 : '['chi_(dprod_Iirr (i1, j1)), 'chi_(dprod_Iirr (i2, j2))] = ((i1 == i2) && (j1 == j2))%:R.",
            "VernacStartTheoremProof",
            "1e5bee4bf90e08d47ea297adfabaec806ab03c96"
        ],
        [
            "by rewrite cfdot_irr (inj_eq dprod_Iirr_inj).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dprod_Iirr_onto k : k \\in codom dprod_Iirr.",
            "VernacStartTheoremProof",
            "6bea5d338edf51f4871fe13c8cfc3c2c0330a49e"
        ],
        [
            "set D := codom _; have Df: dprod_Iirr _ \\in D := codom_f dprod_Iirr _.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "have: 'chi_k 1%g ^+ 2 != 0 by rewrite mulf_neq0 ?irr1_neq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraR => notDk; move/eqP: (irr_sum_square G).",
            "VernacExtend",
            "86bb0d3d5ae27b38aac15f69d532d662f1518315"
        ],
        [
            "rewrite (bigID (mem D)) (reindex _ (bij_on_codom dprod_Iirr_inj (0, 0))) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have ->: #|G|%:R = \\sum_i \\sum_j 'chi_(dprod_Iirr (i, j)) 1%g ^+ 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(dprod_card KxH) natrM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "do 2![rewrite -irr_sum_square (mulr_suml, mulr_sumr); apply: eq_bigr => ? _].",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "by rewrite dprod_IirrE -exprMn -{3}(mulg1 1%g) cfDprodE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (eq_bigl _ _ Df) pair_bigA addrC -subr_eq0 addrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move/eqP/psumr_eq0P=> -> //= i _; rewrite irr1_degree -natrX ler0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition inv_dprod_Iirr i := iinv (dprod_Iirr_onto i).",
            "VernacDefinition",
            "be3ee2808288a8a95e0175b8af42371a36a75749"
        ],
        [
            "Lemma dprod_IirrK : cancel dprod_Iirr inv_dprod_Iirr.",
            "VernacStartTheoremProof",
            "d7f34ec94b19f4b7521ab3883d97beeb753a5f38"
        ],
        [
            "by move=> p; apply: (iinv_f dprod_Iirr_inj).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inv_dprod_IirrK : cancel inv_dprod_Iirr dprod_Iirr.",
            "VernacStartTheoremProof",
            "fcd5a1c21bd07ada3ec2849d5165fd779684f70b"
        ],
        [
            "by move=> i; apply: f_iinv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inv_dprod_Iirr0 : inv_dprod_Iirr 0 = (0, 0).",
            "VernacStartTheoremProof",
            "ab42f7869464bcc496631ede366de5ca24a52e11"
        ],
        [
            "by apply/(canLR dprod_IirrK); rewrite dprod_Iirr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DProd.",
            "VernacEndSegment",
            "74b4777a01a2e5381a808efadec8b86c9530ab3f"
        ],
        [
            "Arguments dprod_Iirr_inj {gT G K H} KxH [i1 i2] : rename.",
            "VernacArguments",
            "f46da8e662b8517bff40db7edb0416e0657daedd"
        ],
        [
            "Lemma dprod_IirrC (gT : finGroupType) (G K H : {group gT}) (KxH : K \\x H = G) (HxK : H \\x K = G) i j : dprod_Iirr KxH (i, j) = dprod_Iirr HxK (j, i).",
            "VernacStartTheoremProof",
            "21ad5566c9e3649495a0eaf43b378ac640d8e5cc"
        ],
        [
            "by apply: irr_inj; rewrite !dprod_IirrE; apply: cfDprodC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section BigDprod.",
            "VernacBeginSection",
            "b7dd04fa6d0ab0857ff17c217a28e954bc8e67ff"
        ],
        [
            "Variables (gT : finGroupType) (I : finType) (P : pred I).",
            "VernacAssumption",
            "69254dfe92e8b6056c735a7426d5547e06769392"
        ],
        [
            "Variables (A : I -> {group gT}) (G : {group gT}).",
            "VernacAssumption",
            "80fcfc21d9705e2f1be5f70e2873aac140630b3a"
        ],
        [
            "Hypothesis defG : \\big[dprod/1%g]_(i | P i) A i = G.",
            "VernacAssumption",
            "92e6d8a86db9291b3cd3fa2d69ee04d305a7c11a"
        ],
        [
            "Let sAG i : P i -> A i \\subset G.",
            "VernacDefinition",
            "052746740faf467d19ae8076ef846f227042c316"
        ],
        [
            "by move=> Pi; rewrite -(bigdprodWY defG) (bigD1 i) ?joing_subl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprodi_char i (phi : 'CF(A i)) : phi \\is a character -> cfBigdprodi defG phi \\is a character.",
            "VernacStartTheoremProof",
            "e74eced3420d93a5759baa8c2870233178d099f5"
        ],
        [
            "by move=> Nphi; rewrite cfDprodl_char cfRes_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprodi_charE i (phi : 'CF(A i)) : P i -> (cfBigdprodi defG phi \\is a character) = (phi \\is a character).",
            "VernacStartTheoremProof",
            "aec4a461c72d94cb9590bd6bc8000c78c11bbcf0"
        ],
        [
            "by move=> Pi; rewrite cfDprodl_char Pi cfRes_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprod_char phi : (forall i, P i -> phi i \\is a character) -> cfBigdprod defG phi \\is a character.",
            "VernacStartTheoremProof",
            "db9451f2dba18db98ce81f5010a672808c95c3f2"
        ],
        [
            "by move=> Nphi; apply: rpred_prod => i /Nphi; apply: cfBigdprodi_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprodi_lin_char i (phi : 'CF(A i)) : phi \\is a linear_char -> cfBigdprodi defG phi \\is a linear_char.",
            "VernacStartTheoremProof",
            "5a11c7fef0d7bca6836f37c8e52a810369a1ae08"
        ],
        [
            "by move=> Lphi; rewrite cfDprodl_lin_char ?cfRes_lin_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprodi_lin_charE i (phi : 'CF(A i)) : P i -> (cfBigdprodi defG phi \\is a linear_char) = (phi \\is a linear_char).",
            "VernacStartTheoremProof",
            "42f0a8939f65274534e0d63cc0bcdd73091bfa44"
        ],
        [
            "by move=> Pi; rewrite qualifE cfBigdprodi_charE // cfBigdprodi1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprod_lin_char phi : (forall i, P i -> phi i \\is a linear_char) -> cfBigdprod defG phi \\is a linear_char.",
            "VernacStartTheoremProof",
            "949d908daaf78ca340c59c7e9ea32e985302b842"
        ],
        [
            "by move=> Lphi; apply/rpred_prod=> i /Lphi; apply: cfBigdprodi_lin_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprodi_irr i chi : P i -> (cfBigdprodi defG chi \\in irr G) = (chi \\in irr (A i)).",
            "VernacStartTheoremProof",
            "d150dd8e0a85ae5126fad5ebbde3794b118bcd36"
        ],
        [
            "by move=> Pi; rewrite !irrEchar cfBigdprodi_charE ?cfBigdprodi_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprod_irr chi : (forall i, P i -> chi i \\in irr (A i)) -> cfBigdprod defG chi \\in irr G.",
            "VernacStartTheoremProof",
            "795650b0064130ef1331a8b09bfb52b049d4a910"
        ],
        [
            "move=> Nchi; rewrite irrEchar cfBigdprod_char => [|i /Nchi/irrWchar] //=.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite cfdot_bigdprod big1 // => i /Nchi/irrWnorm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprod_eq1 phi : (forall i, P i -> phi i \\is a character) -> (cfBigdprod defG phi == 1) = [forall (i | P i), phi i == 1].",
            "VernacStartTheoremProof",
            "3952af043e26b8115cb69b12474f40b72294ea18"
        ],
        [
            "move=> Nphi; set Phi := cfBigdprod defG phi.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "apply/eqP/eqfun_inP=> [Phi1 i Pi | phi1]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: big1 => i /phi1->; rewrite rmorph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Phi1_1: Phi 1%g = 1 by rewrite Phi1 cfun1E group1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nz_Phi1: Phi 1%g != 0 by rewrite Phi1_1 oner_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [_ <-] := cfBigdprodK nz_Phi1 Pi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Phi1_1 divr1 -/Phi Phi1 rmorph1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite prod_cfunE // in Phi1_1; have := Cnat_prod_eq1 _ Phi1_1 Pi.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "rewrite -(cfRes1 (A i)) cfBigdprodiK // => ->; first by rewrite scale1r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> {i Pi} j /Nphi Nphi_j; rewrite Cnat_char1 ?cfBigdprodi_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprod_Res_lin chi : chi \\is a linear_char -> cfBigdprod defG (fun i => 'Res[A i] chi) = chi.",
            "VernacStartTheoremProof",
            "4ed71f5742764c4a81fec2b1c656b37704fba35f"
        ],
        [
            "move=> Lchi; apply/cfun_inP=> _ /(mem_bigdprod defG)[x [Ax -> _]].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite (lin_char_prod Lchi) ?cfBigdprodE // => [|i Pi]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (subsetP (sAG Pi)) ?Ax.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/eq_bigr=> i Pi; rewrite cfResE ?sAG ?Ax.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprodKlin phi : (forall i, P i -> phi i \\is a linear_char) -> forall i, P i -> 'Res (cfBigdprod defG phi) = phi i.",
            "VernacStartTheoremProof",
            "edc552a6d622bf402ae3ffad8fbbbfe6dabfe031"
        ],
        [
            "move=> Lphi i Pi; have Lpsi := cfBigdprod_lin_char Lphi.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [_ <-] := cfBigdprodK (lin_char_neq0 Lpsi (group1 G)) Pi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !lin_char1 ?Lphi // divr1 scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfBigdprodKabelian Iphi (phi := fun i => 'chi_(Iphi i)) : abelian G -> forall i, P i -> 'Res (cfBigdprod defG phi) = 'chi_(Iphi i).",
            "VernacStartTheoremProof",
            "4d3c4e789114f67fef487f03f43711b08997d70c"
        ],
        [
            "move=> /(abelianS _) cGG.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: cfBigdprodKlin => i /sAG/cGG/char_abelianP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BigDprod.",
            "VernacEndSegment",
            "cee42868426d64adfd46d73d985a4e8a6649ac4e"
        ],
        [
            "Section Aut.",
            "VernacBeginSection",
            "9d8b9a555968ec2d50ae000298e7f7584ddb0caa"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Implicit Type u : {rmorphism algC -> algC}.",
            "VernacReserve",
            "9d1a964ec99cef830fb8af5e583b6738b5948c8c"
        ],
        [
            "Lemma conjC_charAut u (chi : 'CF(G)) x : chi \\is a character -> (u (chi x))^* = u (chi x)^*.",
            "VernacStartTheoremProof",
            "b736901a54dc2d5635dc041de5ed774067c37e01"
        ],
        [
            "have [Gx | /cfun0->] := boolP (x \\in G); last by rewrite !rmorph0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/char_reprP=> rG ->; have [e [_ [en1 _] [-> _] _]] := repr_rsim_diag rG Gx.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "by rewrite !rmorph_sum; apply: eq_bigr => i _; apply: aut_unity_rootC (en1 i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjC_irrAut u i x : (u ('chi[G]_i x))^* = u ('chi_i x)^*.",
            "VernacStartTheoremProof",
            "96c8f1772f544602f72f3065a1f76decad63f44d"
        ],
        [
            "exact: conjC_charAut (irr_char i).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfdot_aut_char u (phi chi : 'CF(G)) : chi \\is a character -> '[cfAut u phi, cfAut u chi] = u '[phi, chi].",
            "VernacStartTheoremProof",
            "1e3a6f0983ec8e265d2cad1ec3b7fa195001ca4e"
        ],
        [
            "by move/conjC_charAut=> Nchi; apply: cfdot_cfAut => _ /mapP[x _ ->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfdot_aut_irr u phi i : '[cfAut u phi, cfAut u 'chi[G]_i] = u '[phi, 'chi_i].",
            "VernacStartTheoremProof",
            "0bd247fcefcd52ee81f43c7c5718ddbb53c2bbd6"
        ],
        [
            "exact: cfdot_aut_char (irr_char i).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfAut_irr u chi : (cfAut u chi \\in irr G) = (chi \\in irr G).",
            "VernacStartTheoremProof",
            "9c33417b4a5a3684f76515d8a22b9f17d5569c0f"
        ],
        [
            "rewrite !irrEchar cfAut_char; apply/andb_id2l=> /cfdot_aut_char->.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "exact: fmorph_eq1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjC_irr i : (('chi_i)^*)%CF \\in irr G.",
            "VernacStartTheoremProof",
            "689221cd9e168622154a9697d2dfd5ca6191bbb2"
        ],
        [
            "by rewrite cfAut_irr mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_aut_closed u : cfAut_closed u (irr G).",
            "VernacStartTheoremProof",
            "ded83a867470361ead04af36eb10046358ce2ee5"
        ],
        [
            "by move=> chi; rewrite /= cfAut_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition aut_Iirr u i := cfIirr (cfAut u 'chi[G]_i).",
            "VernacDefinition",
            "d3b9458daca8ffbe15c9ef99bc4ba2036352014b"
        ],
        [
            "Lemma aut_IirrE u i : 'chi_(aut_Iirr u i) = cfAut u 'chi_i.",
            "VernacStartTheoremProof",
            "35c427f9c9f309845d28263df2e687105dfdd062"
        ],
        [
            "by rewrite cfIirrE ?cfAut_irr ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition conjC_Iirr := aut_Iirr conjC.",
            "VernacDefinition",
            "4bf3785e73596dc95a507be69e22e3e972e423e1"
        ],
        [
            "Lemma conjC_IirrE i : 'chi[G]_(conjC_Iirr i) = ('chi_i)^*%CF.",
            "VernacStartTheoremProof",
            "dfd7c4bd271b54b29b5df4e867691e61e3a45422"
        ],
        [
            "exact: aut_IirrE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjC_IirrK : involutive conjC_Iirr.",
            "VernacStartTheoremProof",
            "1e8e9ec2cf6092eabd55d1f9192f62233a82f3f5"
        ],
        [
            "by move=> i; apply: irr_inj; rewrite !conjC_IirrE cfConjCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aut_Iirr0 u : aut_Iirr u 0 = 0 :> Iirr G.",
            "VernacStartTheoremProof",
            "e44c57c4cccdf4c111877807b94306031e91c6a6"
        ],
        [
            "by apply/irr_inj; rewrite aut_IirrE irr0 cfAut_cfun1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjC_Iirr0 : conjC_Iirr 0 = 0 :> Iirr G.",
            "VernacStartTheoremProof",
            "a8bba72771454590a53ffa958c4bb2822c1c64a5"
        ],
        [
            "exact: aut_Iirr0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aut_Iirr_eq0 u i : (aut_Iirr u i == 0) = (i == 0).",
            "VernacStartTheoremProof",
            "4a27551f6775458c28e91bda349ff15638b37282"
        ],
        [
            "by rewrite -!irr_eq1 aut_IirrE cfAut_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjC_Iirr_eq0 i : (conjC_Iirr i == 0 :> Iirr G) = (i == 0).",
            "VernacStartTheoremProof",
            "1ea18b2a92ef48bfef0d6264cacc38f220cfced3"
        ],
        [
            "exact: aut_Iirr_eq0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aut_Iirr_inj u : injective (aut_Iirr u).",
            "VernacStartTheoremProof",
            "2a3438bcd6c5dbbb0c04c3783e5e72695835a931"
        ],
        [
            "by move=> i j eq_ij; apply/irr_inj/(cfAut_inj u); rewrite -!aut_IirrE eq_ij.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Aut.",
            "VernacEndSegment",
            "3f5b50cea48f073d4d0fceb9977124ad193e82f5"
        ],
        [
            "Arguments aut_Iirr_inj {gT G} u [i1 i2] : rename.",
            "VernacArguments",
            "51cdd37dbe53ddeb4cb1153ef174451aa17782e2"
        ],
        [
            "Arguments conjC_IirrK {gT G} i : rename.",
            "VernacArguments",
            "fe1c60490ff866de1cbbca22b3ec234d2d074d19"
        ],
        [
            "Section Coset.",
            "VernacBeginSection",
            "8d1ae0b8486dcb53298258bfec01d3f8cf56d2b6"
        ],
        [
            "Variable (gT : finGroupType).",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types G H : {group gT}.",
            "VernacReserve",
            "2d1554a20c0748003cfaab87843b3f58de3d66ce"
        ],
        [
            "Lemma cfQuo_char G H (chi : 'CF(G)) : chi \\is a character -> (chi / H)%CF \\is a character.",
            "VernacStartTheoremProof",
            "a8deda092f755b9f1d099158481d69e499b01cbb"
        ],
        [
            "move=> Nchi; without loss kerH: / H \\subset cfker chi.",
            "VernacExtend",
            "d999ee33e7c6564a01a7bb2262aa207bb3b6058f"
        ],
        [
            "move/contraNF=> IHchi; apply/wlog_neg=> N'chiH.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "suffices ->: (chi / H)%CF = (chi 1%g)%:A.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite rpredZ_Cnat ?Cnat_char1 ?rpred1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/cfunP=> x; rewrite cfunE cfun1E mulr_natr cfunElock IHchi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "without loss nsHG: G chi Nchi kerH / H <| G.",
            "VernacExtend",
            "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
        ],
        [
            "move=> IHchi; have nsHN := normalSG (subset_trans kerH (cfker_sub chi)).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite cfQuoInorm ?(cfRes_char, IHchi) ?sub_cfker_Res // ?normal_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [rG Dchi] := char_reprP Nchi; rewrite Dchi cfker_repr in kerH.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "apply/char_reprP; exists (Representation (quo_repr kerH (normal_norm nsHG))).",
            "VernacExtend",
            "0d2615b568542b818af25ed7f0aefe9cb5ce5690"
        ],
        [
            "apply/cfun_inP=> _ /morphimP[x nHx Gx ->]; rewrite Dchi cfQuoE ?cfker_repr //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite !cfunE Gx quo_repr_coset ?mem_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfQuo_lin_char G H (chi : 'CF(G)) : chi \\is a linear_char -> (chi / H)%CF \\is a linear_char.",
            "VernacStartTheoremProof",
            "f977d5da53b1c9e653a5db59f45e8486bf7d8fb0"
        ],
        [
            "by case/andP=> Nchi; rewrite qualifE cfQuo_char ?cfQuo1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfMod_char G H (chi : 'CF(G / H)) : chi \\is a character -> (chi %% H)%CF \\is a character.",
            "VernacStartTheoremProof",
            "13dd35839870da8ffc7e3d83193f145e8062e9a7"
        ],
        [
            "exact: cfMorph_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfMod_lin_char G H (chi : 'CF(G / H)) : chi \\is a linear_char -> (chi %% H)%CF \\is a linear_char.",
            "VernacStartTheoremProof",
            "be671d2a826e092d196dedeb0b6043a1c4cb0708"
        ],
        [
            "exact: cfMorph_lin_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfMod_charE G H (chi : 'CF(G / H)) : H <| G -> (chi %% H \\is a character)%CF = (chi \\is a character).",
            "VernacStartTheoremProof",
            "fa352595aad53fd8a19702b115593cc8900f5381"
        ],
        [
            "by case/andP=> _; apply: cfMorph_charE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfMod_lin_charE G H (chi : 'CF(G / H)) : H <| G -> (chi %% H \\is a linear_char)%CF = (chi \\is a linear_char).",
            "VernacStartTheoremProof",
            "b3a8cf310fe1e5c3f38bae06bea7e62704f02e6a"
        ],
        [
            "by case/andP=> _; apply: cfMorph_lin_charE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfQuo_charE G H (chi : 'CF(G)) : H <| G -> H \\subset cfker chi -> (chi / H \\is a character)%CF = (chi \\is a character).",
            "VernacStartTheoremProof",
            "061b1e98d303e8879d1c0c95b68d943295271452"
        ],
        [
            "by move=> nsHG kerH; rewrite -cfMod_charE ?cfQuoK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfQuo_lin_charE G H (chi : 'CF(G)) : H <| G -> H \\subset cfker chi -> (chi / H \\is a linear_char)%CF = (chi \\is a linear_char).",
            "VernacStartTheoremProof",
            "1bf952fe2ce92daa8cb506bfff5d74152d4f784c"
        ],
        [
            "by move=> nsHG kerH; rewrite -cfMod_lin_charE ?cfQuoK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfMod_irr G H chi : H <| G -> (chi %% H \\in irr G)%CF = (chi \\in irr (G / H)).",
            "VernacStartTheoremProof",
            "088c13d8dfecc55acb9e397e5b636e4c934da394"
        ],
        [
            "by case/andP=> _; apply: cfMorph_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mod_Iirr G H i := cfIirr ('chi[G / H]_i %% H)%CF.",
            "VernacDefinition",
            "b687fccca3f4e89dddd874332f8ba3a333734fc1"
        ],
        [
            "Lemma mod_Iirr0 G H : mod_Iirr (0 : Iirr (G / H)) = 0.",
            "VernacStartTheoremProof",
            "42f9757926956ab8d7ce7500c346f01f9f7b4f0e"
        ],
        [
            "exact: morph_Iirr0.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod_IirrE G H i : H <| G -> 'chi_(mod_Iirr i) = ('chi[G / H]_i %% H)%CF.",
            "VernacStartTheoremProof",
            "81960ab963f95e56d1b0f4e5a2f45a500b2aa5bb"
        ],
        [
            "by move=> nsHG; rewrite cfIirrE ?cfMod_irr ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod_Iirr_eq0 G H i : H <| G -> (mod_Iirr i == 0) = (i == 0 :> Iirr (G / H)).",
            "VernacStartTheoremProof",
            "118319e23ede42ab04d86e4d3e6a803e010a3cf6"
        ],
        [
            "by case/andP=> _ /morph_Iirr_eq0->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfQuo_irr G H chi : H <| G -> H \\subset cfker chi -> ((chi / H)%CF \\in irr (G / H)) = (chi \\in irr G).",
            "VernacStartTheoremProof",
            "bbb9a183792043ec6d7da1aa939ea7f625e90654"
        ],
        [
            "by move=> nsHG kerH; rewrite -cfMod_irr ?cfQuoK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition quo_Iirr G H i := cfIirr ('chi[G]_i / H)%CF.",
            "VernacDefinition",
            "bc569cf8eba6c35a69a0adc0ad708efa0329e711"
        ],
        [
            "Lemma quo_Iirr0 G H : quo_Iirr H (0 : Iirr G) = 0.",
            "VernacStartTheoremProof",
            "4e216f0597a52542810d723d2458f23c32e031b9"
        ],
        [
            "by rewrite /quo_Iirr irr0 cfQuo_cfun1 -irr0 irrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quo_IirrE G H i : H <| G -> H \\subset cfker 'chi[G]_i -> 'chi_(quo_Iirr H i) = ('chi_i / H)%CF.",
            "VernacStartTheoremProof",
            "264adcdcfc6c06e3674a1f50451f2a3b16689543"
        ],
        [
            "by move=> nsHG kerH; rewrite cfIirrE ?cfQuo_irr ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quo_Iirr_eq0 G H i : H <| G -> H \\subset cfker 'chi[G]_i -> (quo_Iirr H i == 0) = (i == 0).",
            "VernacStartTheoremProof",
            "efad295a44ece0c6f4143fccd39edfd046824f6b"
        ],
        [
            "by move=> nsHG kerH; rewrite -!irr_eq1 quo_IirrE ?cfQuo_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod_IirrK G H : H <| G -> cancel (@mod_Iirr G H) (@quo_Iirr G H).",
            "VernacStartTheoremProof",
            "b37b6ab6ef8013d9ed906b8410f32cbbbe1b3d2a"
        ],
        [
            "move=> nsHG i; apply: irr_inj.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite quo_IirrE ?mod_IirrE ?cfker_mod // cfModK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quo_IirrK G H i : H <| G -> H \\subset cfker 'chi[G]_i -> mod_Iirr (quo_Iirr H i) = i.",
            "VernacStartTheoremProof",
            "5daafc2d13b3e5b658a2cbbbe2c97cbe3de73b76"
        ],
        [
            "by move=> nsHG kerH; apply: irr_inj; rewrite mod_IirrE ?quo_IirrE ?cfQuoK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quo_IirrKeq G H : H <| G -> forall i, (mod_Iirr (quo_Iirr H i) == i) = (H \\subset cfker 'chi[G]_i).",
            "VernacStartTheoremProof",
            "ce397dbcf0c3a6c563532ee3bbff8b41835676a0"
        ],
        [
            "move=> nsHG i; apply/eqP/idP=> [<- | ]; last exact: quo_IirrK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mod_IirrE ?cfker_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod_Iirr_bij H G : H <| G -> {on [pred i | H \\subset cfker 'chi_i], bijective (@mod_Iirr G H)}.",
            "VernacStartTheoremProof",
            "2104eb069cf368147cf2b1fd132142aadda7d494"
        ],
        [
            "by exists (quo_Iirr H) => [i _ | i]; [apply: mod_IirrK | apply: quo_IirrK].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_norm_irr_quo H G x : x \\in G -> H <| G -> \\sum_i `|'chi[G / H]_i (coset H x)| ^+ 2 = \\sum_(i | H \\subset cfker 'chi_i) `|'chi[G]_i x| ^+ 2.",
            "VernacStartTheoremProof",
            "5464b798109f3e4e4a0844ee55c6c1c5469ef47d"
        ],
        [
            "move=> Gx nsHG; rewrite (reindex _ (mod_Iirr_bij nsHG)) /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply/esym/eq_big=> [i | i _]; rewrite mod_IirrE ?cfker_mod ?cfModE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cap_cfker_normal G H : H <| G -> \\bigcap_(i | H \\subset cfker 'chi[G]_i) (cfker 'chi_i) = H.",
            "VernacStartTheoremProof",
            "e5a1cbc260d20f44c44a8add79f93074f15857d9"
        ],
        [
            "move=> nsHG; have [sHG nHG] := andP nsHG; set lhs := \\bigcap_(i | _) _.",
            "VernacExtend",
            "6906082dc4e4de681fde447f312d63a57f7b8e2d"
        ],
        [
            "have nHlhs: lhs \\subset 'N(H) by rewrite (bigcap_min 0) ?cfker_irr0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/esym/eqP; rewrite eqEsubset (introT bigcapsP) //= -quotient_sub1 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(TI_cfker_irr (G / H)); apply/bigcapsP=> i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite sub_quotient_pre // (bigcap_min (mod_Iirr i)) ?mod_IirrE ?cfker_mod //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfker_morph ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfker_reg_quo G H : H <| G -> cfker (cfReg (G / H)%g %% H) = H.",
            "VernacStartTheoremProof",
            "42fa3c6e8ecdef74dc1a0ad22f2727c88dd32d4c"
        ],
        [
            "move=> nsHG; have [sHG nHG] := andP nsHG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/setP=> x; rewrite cfkerEchar ?cfMod_char ?cfReg_char //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -[in RHS in _ = RHS](setIidPr sHG) !inE; apply: andb_id2l => Gx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite !cfModE // !cfRegE // morph1 eqxx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (sameP eqP (kerP _ (subsetP nHG x Gx))) ker_coset.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!mulrnA eqr_nat eqn_pmul2l ?cardG_gt0 // (can_eq oddb) eqb_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Coset.",
            "VernacEndSegment",
            "67f19be5e3b7dff3ae1a7764fb7dc59d0d923ade"
        ],
        [
            "Section DerivedGroup.",
            "VernacBeginSection",
            "99904375ab24987fae7f3f97c098b552f9c79d25"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types G H : {group gT}.",
            "VernacReserve",
            "2d1554a20c0748003cfaab87843b3f58de3d66ce"
        ],
        [
            "Lemma lin_irr_der1 G i : ('chi_i \\is a linear_char) = (G^`(1)%g \\subset cfker 'chi[G]_i).",
            "VernacStartTheoremProof",
            "f039a91bff98c63f0205819b5f95cbe7e31b994b"
        ],
        [
            "apply/idP/idP=> [|sG'K]; first by apply: lin_char_der1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have nsG'G: G^`(1) <| G := der_normal 1 G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite qualifE irr_char -[i](quo_IirrK nsG'G) // mod_IirrE //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfModE // morph1 lin_char1 //; apply/char_abelianP/der_abelian.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subGcfker G i : (G \\subset cfker 'chi[G]_i) = (i == 0).",
            "VernacStartTheoremProof",
            "29f0c5f013889127a7d47d9a11c15a1365b966e1"
        ],
        [
            "rewrite -irr_eq1; apply/idP/eqP=> [chiG1 | ->]; last by rewrite cfker_cfun1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/cfun_inP=> x Gx; rewrite cfun1E Gx cfker1 ?(subsetP chiG1) ?lin_char1 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite lin_irr_der1 (subset_trans (der_sub 1 G)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_prime_injP G i : prime #|G| -> reflect {in G &, injective 'chi[G]_i} (i != 0).",
            "VernacStartTheoremProof",
            "3a9346a91b14f58835939f450c4978e7fdbc7081"
        ],
        [
            "move=> pr_G; apply: (iffP idP) => [nz_i | inj_chi].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: fful_lin_char_inj (irr_prime_lin i pr_G) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite cfaithfulE -(setIidPr (cfker_sub _)) prime_TIg // subGcfker.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /trivgPn[x Gx ntx]: G :!=: 1%g by rewrite -cardG_gt1 prime_gt1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraNneq ntx => i0; apply/eqP/inj_chi=> //.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite i0 irr0 !cfun1E Gx group1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cap_cfker_lin_irr G : \\bigcap_(i | 'chi[G]_i \\is a linear_char) (cfker 'chi_i) = G^`(1)%g.",
            "VernacStartTheoremProof",
            "d836cac3dcdf35444ad29f70a0a7bff08c22908d"
        ],
        [
            "rewrite -(cap_cfker_normal (der_normal 1 G)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigl => i; rewrite lin_irr_der1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_lin_irr G : #|[pred i | 'chi[G]_i \\is a linear_char]| = #|G : G^`(1)%g|.",
            "VernacStartTheoremProof",
            "d1fe6545550736048a58304946ff6199e49de557"
        ],
        [
            "have nsG'G := der_normal 1 G; rewrite (eq_card (@lin_irr_der1 G)).",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite -(on_card_preimset (mod_Iirr_bij nsG'G)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -card_quotient ?normal_norm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (der_abelian 0 G); rewrite card_classes_abelian; move/eqP<-.",
            "VernacExtend",
            "3a65ea1b6b22307e89e32603f079817b80e7bf25"
        ],
        [
            "rewrite -NirrE -[X in _ = X]card_ord.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_card => i; rewrite !inE mod_IirrE ?cfker_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma solvable_has_lin_char G : G :!=: 1%g -> solvable G -> exists2 i, 'chi[G]_i \\is a linear_char & 'chi_i != 1.",
            "VernacStartTheoremProof",
            "f1177bb10da67c5d409e792af5f8e0d4128e42df"
        ],
        [
            "move=> ntG solG.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suff /subsetPn[i]: ~~ ([pred i | 'chi[G]_i \\is a linear_char] \\subset pred1 0).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite !inE -(inj_eq irr_inj) irr0; exists i.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (contra (@subset_leq_card _ _ _)) // -ltnNge card1 card_lin_irr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite indexg_gt1 proper_subn // (sol_der1_proper solG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_char_group G : {linG : finGroupType & {cF : linG -> 'CF(G) | [/\\ injective cF, #|linG| = #|G : G^`(1)|, forall u, cF u \\is a linear_char & forall phi, phi \\is a linear_char -> exists u, phi = cF u] & [/\\ cF 1%g = 1%R, {morph cF : u v / (u * v)%g >-> (u * v)%R}, forall k, {morph cF : u / (u^+ k)%g >-> u ^+ k}, {morph cF: u / u^-1%g >-> u^-1%CF} & {mono cF: u / #[u]%g >-> #[u]%CF} ]}}.",
            "VernacStartTheoremProof",
            "13adc696a6f0285f1ec971943db4a9ec96993139"
        ],
        [
            "pose linT := {i : Iirr G | 'chi_i \\is a linear_char}.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose cF (u : linT) := 'chi_(sval u).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have cFlin u: cF u \\is a linear_char := svalP u.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cFinj: injective cF := inj_comp irr_inj val_inj.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have inT xi : xi \\is a linear_char -> {u | cF u = xi}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> lin_xi; have /irrP/sig_eqW[i Dxi] := lin_char_irr lin_xi.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by apply: (exist _ (Sub i _)) => //; rewrite -Dxi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [one cFone] := inT 1 (rpred1 _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose inv u := sval (inT _ (rpredVr (cFlin u))).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose mul u v := sval (inT _ (rpredM (cFlin u) (cFlin v))).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have cFmul u v: cF (mul u v) = cF u * cF v := svalP (inT _ _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cFinv u: cF (inv u) = (cF u)^-1 := svalP (inT _ _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have mulA: associative mul by move=> u v w; apply: cFinj; rewrite !cFmul mulrA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have mul1: left_id one mul by move=> u; apply: cFinj; rewrite cFmul cFone mul1r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have mulV: left_inverse one inv mul.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> u; apply: cFinj; rewrite cFmul cFinv cFone mulVr ?lin_char_unitr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose linGm := FinGroup.Mixin mulA mul1 mulV.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose linG := @FinGroupType (BaseFinGroupType linT linGm) mulV.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have cFexp k: {morph cF : u / ((u : linG) ^+ k)%g >-> u ^+ k}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> u; elim: k => // k IHk; rewrite expgS exprS cFmul IHk.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "do [exists linG, cF; split=> //] => [|xi /inT[u <-]|u]; first 2 [by exists u].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have inj_cFI: injective (cfIirr \\o cF).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: can_inj (insubd one) _ => u; apply: val_inj.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite insubdK /= ?irrK //; apply: cFlin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(card_image inj_cFI) -card_lin_irr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/eq_card=> i; rewrite inE; apply/codomP/idP=> [[u ->] | /inT[u Du]].",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite /= irrK; apply: cFlin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists u; apply: irr_inj; rewrite /= irrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite eqn_dvd; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "by rewrite dvdn_cforder; rewrite -cFexp expg_order cFone.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite order_dvdn -(inj_eq cFinj) cFone cFexp exp_cforder.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfExp_prime_transitive G (i j : Iirr G) : prime #|G| -> i != 0 -> j != 0 -> exists2 k, coprime k #['chi_i]%CF & 'chi_j = 'chi_i ^+ k.",
            "VernacStartTheoremProof",
            "83a5b5f56c8e2d185cbcd4810b0c9c61a1618bec"
        ],
        [
            "set p := #|G| => pr_p nz_i nz_j; have cycG := prime_cyclic pr_p.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "have [L [h [injh oL Lh h_ontoL]] [h1 hM hX _ o_h]] := lin_char_group G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (derG1P (cyclic_abelian cycG)) indexg1 -/p in oL.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /fin_all_exists[h' h'K] := h_ontoL _ (irr_cyclic_lin _ cycG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have o_h' k: k != 0 -> #[h' k] = p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -cforder_irr_eq1 h'K -o_h => nt_h'k.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply/prime_nt_dvdP=> //; rewrite cforder_lin_char_dvdG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{oL} genL k: k != 0 -> generator [set: L] (h' k).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> /o_h' o_h'k; rewrite /generator eq_sym eqEcard subsetT /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite cardsT oL -o_h'k.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/(_ =P <[_]>)-> gen_j] := (genL i nz_i, genL j nz_j).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /cycleP[k Dj] := cycle_generator gen_j.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !h'K Dj o_h hX generator_coprime coprime_sym in gen_j *; exists k.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_subcent1_coset G H x : x \\in G -> H <| G -> (#|'C_(G / H)[coset H x]| <= #|'C_G[x]|)%N.",
            "VernacStartTheoremProof",
            "fba448b00c89933c1a2fa6649c1a3cecf16fc996"
        ],
        [
            "move=> Gx nsHG; rewrite -leC_nat.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (second_orthogonality_relation x Gx); rewrite mulrb class_refl => <-.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have GHx: coset H x \\in (G / H)%g by apply: mem_quotient.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (second_orthogonality_relation (coset H x) GHx).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite mulrb class_refl => <-.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -2!(eq_bigr _ (fun _ _ => normCK _)) sum_norm_irr_quo // -subr_ge0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (bigID (fun i => H \\subset cfker 'chi[G]_i)) //= addrC addKr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: sumr_ge0 => i _; rewrite normCK mul_conjC_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DerivedGroup.",
            "VernacEndSegment",
            "401ea6e3bb3e750fa7f0fc4e84a94478d0ccd0ba"
        ],
        [
            "Arguments irr_prime_injP {gT G i}.",
            "VernacArguments",
            "1e9953b57418017d61c3a5895b404789aec3e881"
        ],
        [
            "Section DetOrder.",
            "VernacBeginSection",
            "1785a4595c7c7cc97daf229b6b0266b9f6f1a13e"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Section DetRepr.",
            "VernacBeginSection",
            "6f81f59255ede1ef62e8a30c83c2bf8e1a1751ac"
        ],
        [
            "Variables (n : nat) (rG : mx_representation [fieldType of algC] G n).",
            "VernacAssumption",
            "36b0dfc6e1061eb6dc7165ddb8b0e5356e5964f5"
        ],
        [
            "Definition det_repr_mx x : 'M_1 := (\\det (rG x))%:M.",
            "VernacDefinition",
            "738cd146daf983254e6e241193b1972170bd798c"
        ],
        [
            "Fact det_is_repr : mx_repr G det_repr_mx.",
            "VernacStartTheoremProof",
            "c963772e735b3c3667d87d9e7244faf1514eb726"
        ],
        [
            "split=> [|g h Gg Gh]; first by rewrite /det_repr_mx repr_mx1 det1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /det_repr_mx repr_mxM // det_mulmx !mulmxE scalar_mxM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical det_repr := MxRepresentation det_is_repr.",
            "VernacDefinition",
            "84893fc2c5ec5e199ee9f2dab6ed3d9a5b4461f7"
        ],
        [
            "Definition detRepr := cfRepr det_repr.",
            "VernacDefinition",
            "5585999066d02af7c3bd21efaa517f47e978dba7"
        ],
        [
            "Lemma detRepr_lin_char : detRepr \\is a linear_char.",
            "VernacStartTheoremProof",
            "19c641dc3cb9ed9d25315d22b898e2705610adc9"
        ],
        [
            "by rewrite qualifE cfRepr_char cfunE group1 repr_mx1 mxtrace1 mulr1n /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DetRepr.",
            "VernacEndSegment",
            "8aef1cdaf76a2b13e4dc84c9375bb81e23ccc7a9"
        ],
        [
            "Definition cfDet phi := \\prod_i detRepr 'Chi_i ^+ truncC '[phi, 'chi[G]_i].",
            "VernacDefinition",
            "91a92b20482816ae9f98c3b2b501811333ef1a8f"
        ],
        [
            "Lemma cfDet_lin_char phi : cfDet phi \\is a linear_char.",
            "VernacStartTheoremProof",
            "5589285a5f1f30f9fccb5c4de9f340bf45cd360b"
        ],
        [
            "by apply: rpred_prod => i _; apply: rpredX; apply: detRepr_lin_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDetD : {in character &, {morph cfDet : phi psi / phi + psi >-> phi * psi}}.",
            "VernacStartTheoremProof",
            "94b31ae4cf2ad243cc14c8da74833d3858d84132"
        ],
        [
            "move=> phi psi Nphi Npsi; rewrite /= -big_split; apply: eq_bigr => i _ /=.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite -exprD cfdotDl truncCD ?nnegrE ?Cnat_ge0 // Cnat_cfdot_char_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDet0 : cfDet 0 = 1.",
            "VernacStartTheoremProof",
            "1f13c39d6b664d12b68abcc85e83d53719d21c06"
        ],
        [
            "by rewrite /cfDet big1 // => i _; rewrite cfdot0l truncC0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDetMn k : {in character, {morph cfDet : phi / phi *+ k >-> phi ^+ k}}.",
            "VernacStartTheoremProof",
            "15265ebd09b1a0bd610c2a49be98d016900cdd6f"
        ],
        [
            "move=> phi Nphi; elim: k => [|k IHk]; rewrite ?cfDet0 // mulrS exprS -{}IHk.",
            "VernacExtend",
            "cbbd752ffe762291637c91622d62599b0c60d123"
        ],
        [
            "by rewrite cfDetD ?rpredMn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDetRepr n rG : cfDet (cfRepr rG) = @detRepr n rG.",
            "VernacStartTheoremProof",
            "97a337596527dda7c49ee62b89db1cd4f914a6c1"
        ],
        [
            "transitivity (\\prod_W detRepr (socle_repr W) ^+ standard_irr_coef rG W).",
            "VernacExtend",
            "a38931451dcf70cafe0676558a77d243dbc25985"
        ],
        [
            "rewrite (reindex _ (socle_of_Iirr_bij _)) /cfDet /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => i _; congr (_ ^+ _).",
            "VernacExtend",
            "0fc412f71bc6f463112dd7d405085259e70a06c5"
        ],
        [
            "rewrite (cfRepr_sim (mx_rsim_standard rG)) cfRepr_standard.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite cfdot_suml (bigD1 i) ?big1 //= => [|j i'j]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cfdotZl cfdot_irr (negPf i'j) mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite cfdotZl cfnorm_irr mulr1 addr0 natCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/cfun_inP=> x Gx; rewrite prod_cfunE //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "transitivity (detRepr (standard_grepr rG) x); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !cfunE Gx !trace_mx11 !mxE eqxx !mulrb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (standard_grepr rG) (mx_rsim_standard rG) => /= n1 rG1 [B Dn1].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -{n1}Dn1 in rG1 B *; rewrite row_free_unit => uB rG_B.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by rewrite -[rG x](mulmxK uB) rG_B // !det_mulmx mulrC -!det_mulmx mulKmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /standard_grepr; elim/big_rec2: _ => [|W y _ _ ->].",
            "VernacExtend",
            "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
        ],
        [
            "by rewrite cfunE trace_mx11 mxE Gx det1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !cfunE Gx /= !{1}trace_mx11 !{1}mxE det_ublock; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite exp_cfunE //; elim: (standard_irr_coef rG W) => /= [|k IHk].",
            "VernacExtend",
            "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
        ],
        [
            "by rewrite /muln_grepr big_ord0 det1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite exprS /muln_grepr big_ord_recl det_ublock -IHk; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite cfunE trace_mx11 mxE Gx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDet_id xi : xi \\is a linear_char -> cfDet xi = xi.",
            "VernacStartTheoremProof",
            "d7b8294eb276d2801a3217525860309a8404d46a"
        ],
        [
            "move=> lin_xi; have /irrP[i Dxi] := lin_char_irr lin_xi.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/cfun_inP=> x Gx; rewrite Dxi -irrRepr cfDetRepr !cfunE trace_mx11 mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "move: lin_xi (_ x) => /andP[_]; rewrite Dxi irr1_degree pnatr_eq1 => /eqP-> X.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite {1}[X]mx11_scalar det_scalar1 trace_mx11.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cfDet_order phi := #[cfDet phi]%CF.",
            "VernacDefinition",
            "78a84816e886b3d8b258783fe531d1db96f26cac"
        ],
        [
            "Definition cfDet_order_lin xi : xi \\is a linear_char -> cfDet_order xi = #[xi]%CF.",
            "VernacDefinition",
            "999b3e6f327f89b4eb802b47f801753a1e38fa04"
        ],
        [
            "by rewrite /cfDet_order => /cfDet_id->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cfDet_order_dvdG phi : cfDet_order phi %| #|G|.",
            "VernacDefinition",
            "d70b61c285c69a31f675c70e7cf5161d30af6f62"
        ],
        [
            "by rewrite cforder_lin_char_dvdG ?cfDet_lin_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DetOrder.",
            "VernacEndSegment",
            "9395bb5c1d66ca22c1afd99314daac4b781ac2b9"
        ],
        [
            "Notation \"''o' ( phi )\" := (cfDet_order phi) (at level 8, format \"''o' ( phi )\") : cfun_scope.",
            "VernacNotation",
            "62b2b6caff6e31ba0fa95f3f863f0dbc42c4bfce"
        ],
        [
            "Section CfDetOps.",
            "VernacBeginSection",
            "7604b02adcdc372dae9375e76b5dddc9205d52a2"
        ],
        [
            "Implicit Types gT aT rT : finGroupType.",
            "VernacReserve",
            "abca3443367cb63ade7028aea642dd34ddd232bd"
        ],
        [
            "Lemma cfDetRes gT (G H : {group gT}) phi : phi \\is a character -> cfDet ('Res[H, G] phi) = 'Res (cfDet phi).",
            "VernacStartTheoremProof",
            "bcb34b78ec8fe76186d12a548eb0e60e16a1b338"
        ],
        [
            "move=> Nphi; have [sGH | not_sHG] := boolP (H \\subset G); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have /CnatP[n Dphi1] := Cnat_char1 Nphi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !cfResEout // Dphi1 lin_char1 ?cfDet_lin_char // scale1r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite scaler_nat cfDetMn ?cfDet_id ?rpred1 // expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [rG ->] := char_reprP Nphi; rewrite !(=^~ cfRepr_sub, cfDetRepr) //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "apply: cfRepr_sim; exists 1%:M; rewrite ?row_free_unit ?unitmx1 // => x Hx.",
            "VernacExtend",
            "9e798e521a9db668aedef2dda1df7ee49f2b4edd"
        ],
        [
            "by rewrite mulmx1 mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDetMorph aT rT (D G : {group aT}) (f : {morphism D >-> rT}) (phi : 'CF(f @* G)) : phi \\is a character -> cfDet (cfMorph phi) = cfMorph (cfDet phi).",
            "VernacStartTheoremProof",
            "47c0d1060406bd145dd30a9c02292c469feec057"
        ],
        [
            "move=> Nphi; have [sGD | not_sGD] := boolP (G \\subset D); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have /CnatP[n Dphi1] := Cnat_char1 Nphi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !cfMorphEout // Dphi1 lin_char1 ?cfDet_lin_char // scale1r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite scaler_nat cfDetMn ?cfDet_id ?rpred1 // expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [rG ->] := char_reprP Nphi; rewrite !(=^~ cfRepr_morphim, cfDetRepr) //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "apply: cfRepr_sim; exists 1%:M; rewrite ?row_free_unit ?unitmx1 // => x Hx.",
            "VernacExtend",
            "9e798e521a9db668aedef2dda1df7ee49f2b4edd"
        ],
        [
            "by rewrite mulmx1 mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDetIsom aT rT (G : {group aT}) (R : {group rT}) (f : {morphism G >-> rT}) (isoGR : isom G R f) phi : cfDet (cfIsom isoGR phi) = cfIsom isoGR (cfDet phi).",
            "VernacStartTheoremProof",
            "ce92763910710602c68a2448533b8830ec8a61c4"
        ],
        [
            "rewrite rmorph_prod /cfDet (reindex (isom_Iirr isoGR)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists (isom_Iirr (isom_sym isoGR)) => i; rewrite ?isom_IirrK ?isom_IirrKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: eq_bigr => i; rewrite -!cfDetRepr !irrRepr isom_IirrE rmorphX cfIsom_iso.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite /= ![in cfIsom _]unlock cfDetMorph ?cfRes_char ?cfDetRes ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDet_mul_lin gT (G : {group gT}) (lambda phi : 'CF(G)) : lambda \\is a linear_char -> phi \\is a character -> cfDet (lambda * phi) = lambda ^+ truncC (phi 1%g) * cfDet phi.",
            "VernacStartTheoremProof",
            "15d7d5532fefee7e7b5d5980b7aa0a60d538c477"
        ],
        [
            "case/andP=> /char_reprP[[n1 rG1] ->] /= n1_1 /char_reprP[[n2 rG2] ->] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "do [rewrite !cfRepr1 pnatr_eq1 natCK; move/eqP] in n1_1 *.",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "rewrite {n1}n1_1 in rG1 *; rewrite cfRepr_prod cfDetRepr.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "apply/cfun_inP=> x Gx; rewrite !cfunE cfDetRepr cfunE Gx !mulrb !trace_mx11.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite !mxE prod_repr_lin ?mulrb //=; case: _ / (esym _); rewrite detZ.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "congr (_ * _); case: {rG2}n2 => [|n2]; first by rewrite cfun1E Gx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite expS_cfunE //= cfunE Gx trace_mx11.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CfDetOps.",
            "VernacEndSegment",
            "d1b713e8681fdf1e22d1efd22b425f23164b508e"
        ],
        [
            "Definition cfcenter (gT : finGroupType) (G : {set gT}) (phi : 'CF(G)) := if phi \\is a character then [set g in G | `|phi g| == phi 1%g] else cfker phi.",
            "VernacDefinition",
            "06450f7f5773601e1763426a2dca824629200adf"
        ],
        [
            "Notation \"''Z' ( phi )\" := (cfcenter phi) : cfun_scope.",
            "VernacNotation",
            "f6bfdf6414ad10a2ecab0edf1661cc97f0514695"
        ],
        [
            "Section Center.",
            "VernacBeginSection",
            "5be2ba6bed5467e7ee04cb94b01b66d62ca5c539"
        ],
        [
            "Variable (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Implicit Types (phi chi : 'CF(G)) (H : {group gT}).",
            "VernacReserve",
            "fb83526d96fcc754a087cc7d515c8e913982d858"
        ],
        [
            "Lemma cfcenter_repr n (rG : mx_representation algCF G n) : 'Z(cfRepr rG)%CF = rcenter rG.",
            "VernacStartTheoremProof",
            "f9dbc527bb72aac0fb318f72e53afa9eefd069cd"
        ],
        [
            "rewrite /cfcenter /rcenter cfRepr_char /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/setP=> x; rewrite !inE; apply/andb_id2l=> Gx.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "apply/eqP/is_scalar_mxP=> [|[c rG_c]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by case/max_cfRepr_norm_scalar=> // c; exists c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(sqrCK (char1_ge0 (cfRepr_char rG))) normC_def; congr (sqrtC _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite expr2 -{2}(mulgV x) -char_inv ?cfRepr_char ?cfunE ?groupM ?groupV //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Gx group1 repr_mx1 repr_mxM ?repr_mxV ?groupV // !mulrb rG_c.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite invmx_scalar -scalar_mxM !mxtrace_scalar mulrnAr mulrnAl mulr_natl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact cfcenter_group_set phi : group_set ('Z(phi))%CF.",
            "VernacStartTheoremProof",
            "9d051a4e7ed41c3eab1f800df92ae87683413506"
        ],
        [
            "have [[rG ->] | /negbTE notNphi] := altP (@char_reprP _ G phi).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cfcenter_repr groupP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /cfcenter notNphi groupP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical cfcenter_group f := Group (cfcenter_group_set f).",
            "VernacDefinition",
            "cf9628d8c9953322bc69bb3ce0f2b81bb81855e9"
        ],
        [
            "Lemma char_cfcenterE chi x : chi \\is a character -> x \\in G -> (x \\in ('Z(chi))%CF) = (`|chi x| == chi 1%g).",
            "VernacStartTheoremProof",
            "23f442a4f8fd51286d01d9f0d701af6e8998b336"
        ],
        [
            "by move=> Nchi Gx; rewrite /cfcenter Nchi inE Gx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_cfcenterE i x : x \\in G -> (x \\in 'Z('chi[G]_i)%CF) = (`|'chi_i x| == 'chi_i 1%g).",
            "VernacStartTheoremProof",
            "d4ee1ccc73280fd47e87396524f336db9c651d2c"
        ],
        [
            "by move/char_cfcenterE->; rewrite ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfcenter_sub phi : ('Z(phi))%CF \\subset G.",
            "VernacStartTheoremProof",
            "2d42e4957eab6d62aea2c75790954cce87dae16e"
        ],
        [
            "by rewrite /cfcenter /cfker !setIdE -fun_if subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfker_center_normal phi : cfker phi <| 'Z(phi)%CF.",
            "VernacStartTheoremProof",
            "85d33abb876b01b9e2837014724da49492e38463"
        ],
        [
            "apply: normalS (cfcenter_sub phi) (cfker_normal phi).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite /= /cfcenter; case: ifP => // Hphi; rewrite cfkerEchar //.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "apply/subsetP=> x; rewrite !inE => /andP[-> /eqP->] /=.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite ger0_norm ?char1_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfcenter_normal phi : 'Z(phi)%CF <| G.",
            "VernacStartTheoremProof",
            "05d753d9a760cdcb4973c8d1fac39614e2483b7b"
        ],
        [
            "have [[rG ->] | /negbTE notNphi] := altP (@char_reprP _ _ phi).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cfcenter_repr rcenter_normal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /cfcenter notNphi cfker_normal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfcenter_Res chi : exists2 chi1, chi1 \\is a linear_char & 'Res['Z(chi)%CF] chi = chi 1%g *: chi1.",
            "VernacStartTheoremProof",
            "d45054b22987b41d7f7e1629d4f66249cccdc21e"
        ],
        [
            "have [[rG ->] | /negbTE notNphi] := altP (@char_reprP _ _ chi); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists 1; first exact: cfun1_lin_char.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /cfcenter notNphi; apply/cfun_inP=> x Kx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite cfunE cfun1E Kx mulr1 cfResE ?cfker_sub // cfker1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite cfcenter_repr -(cfRepr_sub _ (normal_sub (rcenter_normal _))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: rG => [[|n] rG] /=; rewrite cfRepr1.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "exists 1; first exact: cfun1_lin_char.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/cfun_inP=> x Zx; rewrite scale0r !cfunE flatmx0 raddf0 Zx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose rZmx x := ((rG x 0 0)%:M : 'M_(1,1)).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have rZmxP: mx_repr [group of rcenter rG] rZmx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=> [|x y]; first by rewrite /rZmx repr_mx1 mxE eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> /setIdP[Gx /is_scalar_mxP[a rGx]] /setIdP[Gy /is_scalar_mxP[b rGy]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /rZmx repr_mxM // rGx rGy -!scalar_mxM !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (cfRepr (MxRepresentation rZmxP)).",
            "VernacExtend",
            "bd72c92adbe592748fbe79605766ce447eb4dee0"
        ],
        [
            "by rewrite qualifE cfRepr_char cfRepr1 eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/cfun_inP=> x Zx; rewrite !cfunE Zx /= /rZmx mulr_natl.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case/setIdP: Zx => Gx /is_scalar_mxP[a ->]; rewrite mxE !mxtrace_scalar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfcenter_cyclic chi : cyclic ('Z(chi)%CF / cfker chi)%g.",
            "VernacStartTheoremProof",
            "e20b424fb9dfa410d84c61599251b55b234cbd1c"
        ],
        [
            "case Nchi: (chi \\is a character); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /cfcenter Nchi trivg_quotient cyclic1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [-> | nz_chi] := eqVneq chi 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite quotientS1 ?cyclic1 //= /cfcenter cfkerEchar ?cfun0_char //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/subsetP=> x /setIdP[Gx _]; rewrite inE Gx /= !cfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [xi Lxi def_chi] := cfcenter_Res chi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "set Z := ('Z(_))%CF in xi Lxi def_chi *.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have sZG: Z \\subset G by apply: cfcenter_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ->: cfker chi = cfker xi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(setIidPr (normal_sub (cfker_center_normal _))) -/Z.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !cfkerEchar // ?lin_charW //= -/Z.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/setP=> x; rewrite !inE; apply: andb_id2l => Zx.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite (subsetP sZG) //= -!(cfResE chi sZG) ?group1 // def_chi !cfunE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (inj_eq (mulfI _)) ?char1_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: abelian (Z / cfker xi) by rewrite sub_der1_abelian ?lin_char_der1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /irr_reprP[rG irrG ->] := lin_char_irr Lxi; rewrite cfker_repr.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "apply: mx_faithful_irr_abelian_cyclic (kquo_mx_faithful rG) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact/quo_mx_irr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfcenter_subset_center chi : ('Z(chi)%CF / cfker chi)%g \\subset 'Z(G / cfker chi)%g.",
            "VernacStartTheoremProof",
            "274eccc230361e2a22c40ff0d52a603d305655f8"
        ],
        [
            "case Nchi: (chi \\is a character); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /cfcenter Nchi trivg_quotient sub1G.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite subsetI quotientS ?cfcenter_sub // quotient_cents2r //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/char_reprP: Nchi => rG ->{chi}; rewrite cfker_repr cfcenter_repr gen_subG.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "apply/subsetP=> _ /imset2P[x y /setIdP[Gx /is_scalar_mxP[c rGx]] Gy ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite inE groupR //= !repr_mxM ?groupM ?groupV // rGx -(scalar_mxC c) -rGx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !mulmxA !repr_mxKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfcenter_eq_center (i : Iirr G) : ('Z('chi_i)%CF / cfker 'chi_i)%g = 'Z(G / cfker 'chi_i)%g.",
            "VernacStartTheoremProof",
            "def5375075ec8928453ec314101d3482c75d77eb"
        ],
        [
            "apply/eqP; rewrite eqEsubset; rewrite cfcenter_subset_center ?irr_char //.",
            "VernacExtend",
            "2a89668b1b89e221294968802af65d9e3b5dccd1"
        ],
        [
            "apply/subsetP=> _ /setIP[/morphimP[x /= _ Gx ->] cGx]; rewrite mem_quotient //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -irrRepr cfker_repr cfcenter_repr inE Gx in cGx *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: mx_abs_irr_cent_scalar 'Chi_i _ _ _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: groupC; apply: socle_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nKG: G \\subset 'N(rker 'Chi_i) by apply: rker_norm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/centgmxP=> y Gy; rewrite [eq]lock -2?(quo_repr_coset (subxx _) nKG) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "move: (quo_repr _ _) => rG; rewrite -2?repr_mxM ?mem_quotient // -lock.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (centP cGx) // mem_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cap_cfcenter_irr : \\bigcap_i 'Z('chi[G]_i)%CF = 'Z(G).",
            "VernacStartTheoremProof",
            "63304f32a373ad8889d4fce4566ca8e0a11bf00b"
        ],
        [
            "apply/esym/eqP; rewrite eqEsubset (introT bigcapsP) /= => [|i _]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -(quotientSGK _ (normal_sub (cfker_center_normal _))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfcenter_eq_center morphim_center.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite subIset // normal_norm // cfker_normal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set Z := \\bigcap_i _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have sZG: Z \\subset G by rewrite (bigcap_min 0) ?cfcenter_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite subsetI sZG (sameP commG1P trivgP) -(TI_cfker_irr G).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/bigcapsP=> i _; have nKiG := normal_norm (cfker_normal 'chi_i).",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite -quotient_cents2 ?(subset_trans sZG) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (subset_trans (quotientS _ (bigcap_inf i _))) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfcenter_eq_center subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfnorm_Res_lerif H phi : H \\subset G -> '['Res[H] phi] <= #|G : H|%:R * '[phi] ?= iff (phi \\in 'CF(G, H)).",
            "VernacStartTheoremProof",
            "bd599f424f701819b0561c467465ad44e3c9aaed"
        ],
        [
            "move=> sHG; rewrite cfun_onE mulrCA natf_indexg // -mulrA mulKf ?neq0CG //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite (big_setID H) (setIidPr sHG) /= addrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mono_lerif (ler_pmul2l _)) ?invr_gt0 ?gt0CG // -lerif_subLR -sumrB.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite big1 => [|x Hx]; last by rewrite !cfResE ?subrr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have ->: (support phi \\subset H) = (G :\\: H \\subset [set x | phi x == 0]).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite subDset setUC -subDset; apply: eq_subset => x.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !inE (andb_idr (contraR _)) // => /cfun0->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (sameP subsetP forall_inP); apply: lerif_0_sum => x _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !inE /<?=%R mul_conjC_ge0 eq_sym mul_conjC_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr1_bound (i : Iirr G) : ('chi_i 1%g) ^+ 2 <= #|G : 'Z('chi_i)%CF|%:R ?= iff ('chi_i \\in 'CF(G, 'Z('chi_i)%CF)).",
            "VernacStartTheoremProof",
            "7f0acb10f3dee67d28fa1e322361e9200e4c2429"
        ],
        [
            "congr (_ <= _ ?= iff _): (cfnorm_Res_lerif 'chi_i (cfcenter_sub 'chi_i)).",
            "VernacExtend",
            "f3a9615ebe5fa15549c1ecd556f50efbdb2824d9"
        ],
        [
            "have [xi Lxi ->] := cfcenter_Res 'chi_i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /irrP[j ->] := lin_char_irr Lxi; rewrite cfdotZl cfdotZr cfdot_irr eqxx.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite mulr1 irr1_degree conjC_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite cfdot_irr eqxx mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr1_abelian_bound (i : Iirr G) : abelian (G / 'Z('chi_i)%CF) -> ('chi_i 1%g) ^+ 2 = #|G : 'Z('chi_i)%CF|%:R.",
            "VernacStartTheoremProof",
            "6a30404272000173ec0633c46f8fe86c6ee8c781"
        ],
        [
            "move=> AbGc; apply/eqP; rewrite irr1_bound cfun_onE; apply/subsetP=> x nz_chi_x.",
            "VernacExtend",
            "42e188f64c1b305ed274c1704aedbf73891c3017"
        ],
        [
            "have Gx: x \\in G by apply: contraR nz_chi_x => /cfun0->.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nKx := subsetP (normal_norm (cfker_normal 'chi_i)) _ Gx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(quotientGK (cfker_center_normal _)) inE nKx inE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite cfcenter_eq_center inE mem_quotient //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/centP=> _ /morphimP[y nKy Gy ->]; apply/commgP; rewrite -morphR //=.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "set z := [~ x, y]; rewrite coset_id //.",
            "VernacExtend",
            "8460a73fe74726b8e94ff0752da65e8d48f68f26"
        ],
        [
            "have: z \\in 'Z('chi_i)%CF.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: subsetP (mem_commg Gx Gy).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite der1_min // normal_norm ?cfcenter_normal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -irrRepr cfker_repr cfcenter_repr !inE in nz_chi_x *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/andP=> Gz /is_scalar_mxP[c Chi_z]; rewrite Gz Chi_z mul1mx /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "apply/eqP; congr _%:M; apply: (mulIf nz_chi_x); rewrite mul1r.",
            "VernacExtend",
            "fa6171a79bfbc42d0445547471a3cf297b71778a"
        ],
        [
            "rewrite -{2}(cfunJ _ x Gy) conjg_mulR -/z !cfunE Gx groupM // !{1}mulrb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite repr_mxM // Chi_z mul_mx_scalar mxtraceZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_faithful_center i : cfaithful 'chi[G]_i -> cyclic 'Z(G).",
            "VernacStartTheoremProof",
            "3bb58786f71375f32b7384c311d407d5f563df7a"
        ],
        [
            "rewrite (isog_cyclic (isog_center (quotient1_isog G))) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move/trivgP <-; rewrite -cfcenter_eq_center cfcenter_cyclic.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfcenter_fful_irr i : cfaithful 'chi[G]_i -> 'Z('chi_i)%CF = 'Z(G).",
            "VernacStartTheoremProof",
            "993f516486975e9c70af231d6f555029155598d9"
        ],
        [
            "move/trivgP=> Ki1; have:= cfcenter_eq_center i; rewrite {}Ki1.",
            "VernacExtend",
            "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
        ],
        [
            "have inj1: 'injm (@coset gT 1%g) by rewrite ker_coset.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -injm_center; first apply: injm_morphim_inj; rewrite ?norms1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pgroup_cyclic_faithful (p : nat) : p.-group G -> cyclic 'Z(G) -> exists i, cfaithful 'chi[G]_i.",
            "VernacStartTheoremProof",
            "cbba25f864c1fc55a6e6ea93b53a1e40384ef2a9"
        ],
        [
            "pose Z := 'Ohm_1('Z(G)) => pG cycZG; have nilG := pgroup_nil pG.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "have [-> | ntG] := eqsVneq G [1]; first by exists 0; apply: cfker_sub.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have{pG} [[p_pr _ _] pZ] := (pgroup_pdiv pG ntG, pgroupS (center_sub G) pG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ntZ: 'Z(G) != [1] by rewrite center_nil_eq1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{pZ} oZ: #|Z| = p by apply: Ohm1_cyclic_pgroup_prime.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/existsP; apply: contraR ntZ; rewrite negb_exists => /forallP-not_ffulG.",
            "VernacExtend",
            "1d32417824786a65f5ff40d1d9dc083be853a4a7"
        ],
        [
            "rewrite -Ohm1_eq1 -subG1 /= -/Z -(TI_cfker_irr G); apply/bigcapsP=> i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite prime_meetG ?oZ // setIC meet_Ohm1 // meet_center_nil ?cfker_normal //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -subG1 not_ffulG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Center.",
            "VernacEndSegment",
            "2dab2854f83f495393af8ef7968578ebf2c54d06"
        ],
        [
            "Section Induced.",
            "VernacBeginSection",
            "152f9b832edb97736f7a7c61269517b4df1bc877"
        ],
        [
            "Variables (gT : finGroupType) (G H : {group gT}).",
            "VernacAssumption",
            "7daa1d9261ae1a6ccdcbdd91ed19876e2639bc72"
        ],
        [
            "Implicit Types (phi : 'CF(G)) (chi : 'CF(H)).",
            "VernacReserve",
            "6afaa21d68647c80b871a9b9f532248fd9114f02"
        ],
        [
            "Lemma cfInd_char chi : chi \\is a character -> 'Ind[G] chi \\is a character.",
            "VernacStartTheoremProof",
            "9fb79d3b8bb9c79a1d388088986aa2467a62dae2"
        ],
        [
            "move=> Nchi; apply/forallP=> i; rewrite coord_cfdot -Frobenius_reciprocity //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite Cnat_cfdot_char ?cfRes_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfInd_eq0 chi : H \\subset G -> chi \\is a character -> ('Ind[G] chi == 0) = (chi == 0).",
            "VernacStartTheoremProof",
            "a54d4f45920f52ccc51d1eaf635aaff8a8783353"
        ],
        [
            "move=> sHG Nchi; rewrite -!(char1_eq0) ?cfInd_char // cfInd1 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (mulrI_eq0 _ (mulfI _)) ?neq0CiG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ind_irr_neq0 i : H \\subset G -> 'Ind[G, H] 'chi_i != 0.",
            "VernacStartTheoremProof",
            "622d8019997eb245ac8dd8299da9126db0ca7711"
        ],
        [
            "by move/cfInd_eq0->; rewrite ?irr_neq0 ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Ind_Iirr (A B : {set gT}) i := cfIirr ('Ind[B, A] 'chi_i).",
            "VernacDefinition",
            "8ae8095c06a9b2fa1868e58160407294ff768d5c"
        ],
        [
            "Lemma constt_cfRes_irr i : {j | j \\in irr_constt ('Res[H, G] 'chi_i)}.",
            "VernacStartTheoremProof",
            "2712f2bde0ce968f8692832450aa8a8c4f2f3f74"
        ],
        [
            "apply/sigW/neq0_has_constt/Res_irr_neq0.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma constt_cfInd_irr i : H \\subset G -> {j | j \\in irr_constt ('Ind[G, H] 'chi_i)}.",
            "VernacStartTheoremProof",
            "7c4ba5965b2b8c4a0f5f2d5b91d6cdb38eb1b387"
        ],
        [
            "by move=> sHG; apply/sigW/neq0_has_constt/Ind_irr_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfker_Res phi : H \\subset G -> phi \\is a character -> cfker ('Res[H] phi) = H :&: cfker phi.",
            "VernacStartTheoremProof",
            "c40727acb1f23a35eb03fd088f0f3fa42a2615f0"
        ],
        [
            "move=> sHG Nphi; apply/setP=> x; rewrite !cfkerEchar ?cfRes_char // !inE.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by apply/andb_id2l=> Hx; rewrite (subsetP sHG) ?cfResE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfker_Ind chi : H \\subset G -> chi \\is a character -> chi != 0 -> cfker ('Ind[G, H] chi) = gcore (cfker chi) G.",
            "VernacStartTheoremProof",
            "fed9957b7b40dfe4133e955d35a6700d4477c297"
        ],
        [
            "move=> sHG Nchi nzchi; rewrite !cfker_nzcharE ?cfInd_char ?cfInd_eq0 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply/setP=> x; rewrite inE cfIndE // (can2_eq (mulVKf _) (mulKf _)) ?neq0CG //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite cfInd1 // mulrA -natrM Lagrange // mulr_natl -sumr_const.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/eqP/bigcapP=> [/normC_sum_upper ker_chiG_x y Gy | ker_chiG_x].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite mem_conjg inE ker_chiG_x ?groupV // => z _; apply: char1_ge_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: eq_bigr => y /groupVr/ker_chiG_x; rewrite mem_conjgV inE => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfker_Ind_irr i : H \\subset G -> cfker ('Ind[G, H] 'chi_i) = gcore (cfker 'chi_i) G.",
            "VernacStartTheoremProof",
            "ae7263c175a87e6799a20e3182148979eaec9b50"
        ],
        [
            "by move/cfker_Ind->; rewrite ?irr_neq0 ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Induced.",
            "VernacEndSegment",
            "13b7a403737371e0fbcf131dce1f5fa8ed91b2c5"
        ],
        [
            "Arguments Ind_Iirr {gT A%g} B%g i%R.",
            "VernacArguments",
            "50d1f142d4ecc10d19de1e051b8f784de003fde5"
        ]
    ],
    "proofs": [
        {
            "name": "groupC",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "exact: group_closure_closed_field.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trow0",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "elim: n1=> //= n1 IH.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite !mxE scale0r linear0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite IH //; apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "by case: split=> *; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trowbE",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trowb_is_linear",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "elim: n1=> [|n1 IH] //= k A1 A2 /=; first by rewrite scaler0 add0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite linearD /= linearZ.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/matrixP=> i j.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite !mxE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: split=> a.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE mulrDl mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite linearD /= linearZ IH !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trow_is_linear",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "elim: n1 A => [|n1 IH] //= A k A1 A2 /=; first by rewrite scaler0 add0r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite linearD /= linearZ /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: split=> a; rewrite ?IH !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dsumx_mul",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE; apply: eq_bigr=> k _.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "usumx_mul",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE; apply: eq_bigr=> k _; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trow_mul",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "elim: m1 A => [|m1 IH] A /=; first by rewrite mulmx0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite IH mul_mx_row -scalemxAr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tprod1",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "elim: m n => [|m IH] n //=; first by rewrite [1%:M]flatmx0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite tprod_tr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "set u := rsubmx _; have->: u = 0.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: i; case: j=> /= j Hj; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "set v := lsubmx (dsubmx _); have->: v = 0.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: i; case: j; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "set w := rsubmx _; have->: w = 1%:M.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: i; case: j; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite IH -!trowbE !linear0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -block_mxEv.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "set z := (lsubmx _) 0 0; have->: z = 1.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "by rewrite /z !mxE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite scale1r scalar_mx_block.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_repr0",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "by split=> // g h Hg Hx; rewrite mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_mx_repr",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "split=> [|x y Hx Hy]; first by rewrite !repr_mx1 -scalar_mx_block.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmx_block !(mulmx0, mul0mx, addr0, add0r, repr_mxM).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_dsum",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "move=> /= defW dxW rsimU.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite mxdirectE /= -!(big_filter _ P) in dxW defW *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: {P}(filter P _) => [|i e IHe] in W modW dxW defW *.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite !big_nil /= in defW *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by exists 0 => [||? _]; rewrite ?mul0mx ?mulmx0 // /row_free -defW !mxrank0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !big_cons /= in dxW defW *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!(big_nth i) !big_mkord /= in IHe dxW defW.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "set Wi := (\\sum_i _)%MS in defW dxW IHe.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "rewrite -mxdirectE mxdirect_addsE !mxdirectE eqxx /= -/Wi in dxW.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have modWi: mxmodule rG Wi by apply: sumsmx_module.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/andP: dxW; move/(IHe Wi modWi) {IHe}; move/(_ (eqmx_refl _))=> rsimWi.",
                        "VernacExtend",
                        "ad9703cddf270cbbe68f7e9fd9d34355dc053bfe"
                    ]
                },
                {
                    "command": [
                        "by move/eqP; move/mxdirect_addsP=> dxUiWi; apply: mx_rsim_dadd (rsimU i) rsimWi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod_mx_repr",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "split=>[|i j InG JnG]; first by rewrite !repr_mx1 tprod1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !repr_mxM // tprodE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod_repr_lin",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "move=> x Gx /=; set cast_n2 := esym _; rewrite /prod_repr /= !mxE !lshift0.",
                        "VernacExtend",
                        "d4d61c56bbbcb3df906124c1f38d5b03e55e4a88"
                    ]
                },
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite castmxE /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "do 2![rewrite mxE; case: splitP => [? ? | []//]].",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "by congr ((_ *: rG2 x) _ _); apply: val_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_subproof",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "rewrite genGid; apply: intro_class_fun => [x y Gx Gy | _ /negbTE-> //].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite groupJr // !repr_mxM ?groupM ?groupV // mxtrace_mulC repr_mxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr1",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "by rewrite cfunE group1 repr_mx1 mxtrace1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_sim",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "case/mx_rsim_def=> f12 [f21] fK def_rG1; apply/cfun_inP=> x Gx.",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfunE def_rG1 // mxtrace_mulC mulmxA fK mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr0",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "by apply/cfun_inP=> x Gx; rewrite !cfunE Gx mxtrace1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_dadd",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "by apply/cfun_inP=> x Gx; rewrite !cfunE Gx mxtrace_block.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_dsum",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "exact: (big_morph _ cfRepr_dadd cfRepr0).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_muln",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "by rewrite cfRepr_dsum /= sumr_const card_ord.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRegE",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "by rewrite cfunE cfuniE ?normal1 // inE mulr_natr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfReprReg",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "apply/cfun_inP=> x Gx; rewrite cfRegE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have [-> | ntx] := altP (x =P 1%g); first by rewrite cfRepr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite cfunE Gx [\\tr _]big1 // => i _; rewrite 2!mxE /=.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "rewrite -(inj_eq enum_val_inj) gring_indexK ?groupM ?enum_valP //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_mulVg1 mulKg (negbTE ntx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcfun_is_additive",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "by move=> A B; rewrite /xcfun linearB mulmxBl !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcfunZr",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "by rewrite /xcfun linearZ -scalemxAl mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcfun_r_is_additive",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "move=> phi psi; rewrite /= /xcfun !mxE -sumrB; apply: eq_bigr => i _.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE !cfunE mulrBr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcfunZl",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "rewrite /xcfun !mxE big_distrr; apply: eq_bigr => i _ /=.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mxE cfunE mulrCA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcfun_repr",
            "line_nb": 334,
            "steps": [
                {
                    "command": [
                        "rewrite gring_opE [gring_row A]row_sum_delta !linear_sum /xcfun !mxE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => i _; rewrite !mxE /= !linearZ cfunE enum_valP /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by congr (_ * \\tr _) => {A} /=; rewrite /gring_mx /= -rowE rowK mxvecK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NirrE",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "by rewrite /pred_Nirr (cardD1 [1]) classes1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Iirr_cast",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "by rewrite NirrE ?card_irr ?algC'G //; apply: groupC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "socle_Iirr0",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "by rewrite /W add0r cast_ordKV enum_rankK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "socle_of_IirrK",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "by move=> i; rewrite /irr_of_socle enum_valK cast_ordK addrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_of_socleK",
            "line_nb": 365,
            "steps": [
                {
                    "command": [
                        "by move=> Wi; rewrite /W subrK cast_ordKV enum_rankK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_of_socle_bij",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "by apply: onW_bij; exists W.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "socle_of_Iirr_bij",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "by apply: onW_bij; exists irr_of_socle.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_key",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "congr_irr",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "by move->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Iirr1_neq0",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "by rewrite -classes_gt1 -NirrE -val_eqE /= => /inordK->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "has_nonprincipal_irr",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "by move/Iirr1_neq0; exists (inord 1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irrRepr",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "rewrite [@irr]unlock (tnth_nth 0) nth_mkseq // -[<<G>>]/(gval _) genGidG.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfRes_id inord_val.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr0",
            "line_nb": 404,
            "steps": [
                {
                    "command": [
                        "apply/cfun_inP=> x Gx; rewrite -irrRepr cfun1E cfunE Gx.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite socle_Iirr0 irr1_repr // mxtrace1 degree_irr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfun1_irr",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "by rewrite -irr0 mem_tnth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_irr",
            "line_nb": 411,
            "steps": [
                {
                    "command": [
                        "exact: mem_tnth.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irrP",
            "line_nb": 414,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [/(nthP 0)[i] | [i ->]]; last exact: mem_irr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite size_tuple => lt_i_G <-.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by exists (Ordinal lt_i_G); rewrite (tnth_nth 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr1_degree",
            "line_nb": 426,
            "steps": [
                {
                    "command": [
                        "by rewrite -irrRepr cfRepr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cnat_irr1",
            "line_nb": 429,
            "steps": [
                {
                    "command": [
                        "by rewrite irr1_degree rpred_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr1_gt0",
            "line_nb": 432,
            "steps": [
                {
                    "command": [
                        "by rewrite irr1_degree ltr0n irr_degree_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr1_neq0",
            "line_nb": 435,
            "steps": [
                {
                    "command": [
                        "by rewrite eqr_le ltr_geF ?irr1_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_neq0",
            "line_nb": 438,
            "steps": [
                {
                    "command": [
                        "by apply: contraNneq (irr1_neq0 i) => ->; rewrite cfunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfIirrE",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "move=> chi_irr; rewrite (tnth_nth 0) inordK ?nth_index //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -index_mem size_tuple in chi_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfIirrPE",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "by move=> irr_f j /irr_f; apply: cfIirrE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_sum_square",
            "line_nb": 449,
            "steps": [
                {
                    "command": [
                        "rewrite -(sum_irr_degree sG) // natr_sum (reindex _ (socle_of_Iirr_bij _)) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite irr1_degree natrX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfReg_sum",
            "line_nb": 453,
            "steps": [
                {
                    "command": [
                        "apply/cfun_inP=> x Gx; rewrite -cfReprReg cfunE Gx (mxtrace_regular sG) //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_cfunE (reindex _ (socle_of_Iirr_bij _)); apply: eq_bigr => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite -irrRepr cfRepr1 !cfunE Gx mulr_natl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcfun_annihilate",
            "line_nb": 460,
            "steps": [
                {
                    "command": [
                        "move=> neq_ij RjA; rewrite -irrRepr xcfun_repr.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite (irr_repr'_op0 _ _ RjA) ?raddf0 // eq_sym (can_eq socle_of_IirrK).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcfunG",
            "line_nb": 464,
            "steps": [
                {
                    "command": [
                        "by move=> Gx; rewrite /xcfun /gring_row rowK -rowE !mxE !(gring_indexK, mul1g).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcfun_mul_id",
            "line_nb": 467,
            "steps": [
                {
                    "command": [
                        "move=> RG_A; rewrite -irrRepr !xcfun_repr gring_opM //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite op_Wedderburn_id ?mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xcfun_id",
            "line_nb": 471,
            "steps": [
                {
                    "command": [
                        "have [<-{j} | /xcfun_annihilate->//] := altP eqP; last exact: Wedderburn_id_mem.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -xcfunG // repr_mx1 -(xcfun_mul_id _ (envelop_mx1 _)) mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_inj",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "by apply/injectiveP/free_uniq; rewrite map_tnth_enum irr_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irrK",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "by move=> i; apply: irr_inj; rewrite cfIirrE ?mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_eq1",
            "line_nb": 487,
            "steps": [
                {
                    "command": [
                        "by rewrite -irr0 (inj_eq irr_inj).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cforder_irr_eq1",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "by rewrite -dvdn1 dvdn_cforder irr_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_basis",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "rewrite /basis_of irr_free andbT -dimv_leqif_eq ?subvf //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite dim_cfun (eqnP irr_free) size_tuple NirrE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_sum_nth_irr",
            "line_nb": 497,
            "steps": [
                {
                    "command": [
                        "by apply: eq_bigr => i; rewrite -tnth_nth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfun_irr_sum",
            "line_nb": 500,
            "steps": [
                {
                    "command": [
                        "rewrite (coord_basis irr_basis (memvf phi)) -eq_sum_nth_irr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by exists ((coord (irr G))^~ phi).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_standard",
            "line_nb": 504,
            "steps": [
                {
                    "command": [
                        "rewrite cfRepr_dsum (reindex _ (socle_of_Iirr_bij _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite scaler_nat cfRepr_muln irrRepr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_rsimP",
            "line_nb": 518,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP eqP) => [/cfRepr_inj | /cfRepr_sim].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_reprP",
            "line_nb": 521,
            "steps": [
                {
                    "command": [
                        "apply: (iffP (irrP xi)) => [[i ->] | [[n rG] irr_rG ->]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by exists (Representation 'Chi_i); [apply: socle_irr | rewrite irrRepr].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (irr_of_socle (irr_comp sG rG)); rewrite -irrRepr irr_of_socleK /=.",
                        "VernacExtend",
                        "df8eea71c391f03b8af1d458a891c7ccc6dcd139"
                    ]
                },
                {
                    "command": [
                        "exact/cfRepr_sim/rsim_irr_comp.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "character_key",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_char",
            "line_nb": 559,
            "steps": [
                {
                    "command": [
                        "by apply/forallP=> j; rewrite (tnth_nth 0) coord_free ?irr_free ?isNatC_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfun1_char",
            "line_nb": 562,
            "steps": [
                {
                    "command": [
                        "by rewrite -irr0 irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfun0_char",
            "line_nb": 565,
            "steps": [
                {
                    "command": [
                        "by apply/forallP=> i; rewrite linear0 rpred0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_char",
            "line_nb": 568,
            "steps": [
                {
                    "command": [
                        "split=> [|chi xi /forallP-Nchi /forallP-Nxi]; first exact: cfun0_char.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/forallP=> i; rewrite linearD rpredD /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char_sum_irrP",
            "line_nb": 573,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP)=> [/forallP-Nphi | [n ->]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: rpred_sum => i _; rewrite scaler_nat rpredMn // irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "do [have [a ->] := cfun_irr_sum phi] in Nphi *; exists (truncC \\o a).",
                        "VernacExtend",
                        "25b3a64dd4d622653d8464ee268fa1f6073c1d7b"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => i _; congr (_ *: _); have:= eqP (Nphi i).",
                        "VernacExtend",
                        "8dfdbe98d0d7482e38c2c32f22c7e9a3d554b624"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sum_nth_irr coord_sum_free ?irr_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char_sum_irr",
            "line_nb": 580,
            "steps": [
                {
                    "command": [
                        "move=> Nchi; apply: sig_eqW; case/char_sum_irrP: Nchi => n {chi}->.",
                        "VernacExtend",
                        "1b05ef00a6bc4c06259b49aa79e4d38841eab3ab"
                    ]
                },
                {
                    "command": [
                        "elim/big_rec: _ => [|i _ _ [r ->]]; first by exists nil; rewrite big_nil.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists (ncons (n i) i r); rewrite scaler_nat.",
                        "VernacExtend",
                        "7cd5cc06c489218b2376d370ab3a00dca69285c0"
                    ]
                },
                {
                    "command": [
                        "by elim: {n}(n i) => [|n IHn]; rewrite ?add0r //= big_cons mulrS -addrA IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cnat_char1",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "case/char_sum_irr=> r ->{chi}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by elim/big_rec: _ => [|i chi _ Nchi1]; rewrite cfunE ?rpredD // Cnat_irr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char1_ge0",
            "line_nb": 590,
            "steps": [
                {
                    "command": [
                        "by move/Cnat_char1/Cnat_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char1_gt0",
            "line_nb": 599,
            "steps": [
                {
                    "command": [
                        "by move=> Nchi; rewrite -char1_eq0 // Cnat_gt0 ?Cnat_char1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char_reprP",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "apply: (iffP char_sum_irrP) => [[n ->] | [[n rG] ->]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists (fun i => standard_irr_coef rG (socle_of_Iirr i)).",
                        "VernacExtend",
                        "930ec502bc8b4318bf9b638fd6711f051e032a50"
                    ]
                },
                {
                    "command": [
                        "by rewrite -cfRepr_standard (cfRepr_sim (mx_rsim_standard rG)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (\\big[dadd_grepr/grepr0]_i muln_grepr (Representation 'Chi_i) (n i)).",
                        "VernacExtend",
                        "08ceb646ffaeb3d7a0c95db8304bfa2866679729"
                    ]
                },
                {
                    "command": [
                        "rewrite cfRepr_dsum; apply: eq_bigr => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfRepr_muln irrRepr scaler_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_char",
            "line_nb": 611,
            "steps": [
                {
                    "command": [
                        "by apply/char_reprP; exists (Representation rG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfReg_char",
            "line_nb": 614,
            "steps": [
                {
                    "command": [
                        "by rewrite -cfReprReg cfRepr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_prod",
            "line_nb": 617,
            "steps": [
                {
                    "command": [
                        "by apply/cfun_inP=> x Gx; rewrite !cfunE /= Gx mxtrace_prod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_char",
            "line_nb": 620,
            "steps": [
                {
                    "command": [
                        "split=> [|_ _ /char_reprP[rG1 ->] /char_reprP[rG2 ->]]; first exact: cfun1_char.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/char_reprP; exists (Representation (prod_repr rG1 rG2)).",
                        "VernacExtend",
                        "eb84738dea01dfd962c2de921ec33a46e02dffb8"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfRepr_prod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_map",
            "line_nb": 634,
            "steps": [
                {
                    "command": [
                        "by apply/cfun_inP=> x Gx; rewrite !cfunE Gx map_reprE trace_map_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjC_char",
            "line_nb": 643,
            "steps": [
                {
                    "command": [
                        "exact: cfAut_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfAut_char1",
            "line_nb": 646,
            "steps": [
                {
                    "command": [
                        "by move/Cnat_char1=> Nchi1; rewrite cfunE aut_Cnat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfAut_irr1",
            "line_nb": 649,
            "steps": [
                {
                    "command": [
                        "exact: cfAut_char1 (irr_char i).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjC_char1",
            "line_nb": 652,
            "steps": [
                {
                    "command": [
                        "exact: cfAut_char1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjC_irr1",
            "line_nb": 655,
            "steps": [
                {
                    "command": [
                        "exact: cfAut_irr1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_char1",
            "line_nb": 665,
            "steps": [
                {
                    "command": [
                        "by case/andP: CFxi => _ /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_charW",
            "line_nb": 668,
            "steps": [
                {
                    "command": [
                        "by case/andP: CFxi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfun1_lin_char",
            "line_nb": 671,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE cfun1_char /= cfun11.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_charM",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "move=> x y Gx Gy; case/andP: CFxi => /char_reprP[[n rG] -> /=].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "rewrite cfRepr1 pnatr_eq1 => /eqP n1; rewrite {n}n1 in rG *.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "rewrite !cfunE Gx Gy groupM //= !mulr1n repr_mxM //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite [rG x]mx11_scalar [rG y]mx11_scalar -scalar_mxM !mxtrace_scalar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_char_prod",
            "line_nb": 680,
            "steps": [
                {
                    "command": [
                        "move=> Gx; elim/(big_load (fun y => y \\in G)): _.",
                        "VernacExtend",
                        "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
                    ]
                },
                {
                    "command": [
                        "elim/big_rec2: _ => [|i a y Pi [Gy <-]]; first by rewrite lin_char1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite groupM ?lin_charM ?Gx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xiMV",
            "line_nb": 685,
            "steps": [
                {
                    "command": [
                        "by move=> Gx; rewrite -lin_charM ?groupV // mulgV lin_char1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_char_neq0",
            "line_nb": 688,
            "steps": [
                {
                    "command": [
                        "by move/xiMV/(congr1 (predC1 0)); rewrite /= oner_eq0 mulf_eq0 => /norP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_charV",
            "line_nb": 691,
            "steps": [
                {
                    "command": [
                        "by move=> Gx; rewrite -[_^-1]mulr1 -(xiMV Gx) mulKf ?lin_char_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_charX",
            "line_nb": 694,
            "steps": [
                {
                    "command": [
                        "move=> Gx; elim: n => [|n IHn]; first exact: lin_char1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite expgS exprS lin_charM ?groupX ?IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_char_unity_root",
            "line_nb": 698,
            "steps": [
                {
                    "command": [
                        "by move=> Gx; rewrite -lin_charX // expg_order lin_char1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normC_lin_char",
            "line_nb": 701,
            "steps": [
                {
                    "command": [
                        "move=> Gx; apply/eqP; rewrite -(@pexpr_eq1 _ _ #[x]) ?normr_ge0 //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite -normrX // lin_char_unity_root ?normr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_charV_conj",
            "line_nb": 705,
            "steps": [
                {
                    "command": [
                        "move=> Gx; rewrite lin_charV // invC_norm mulrC normC_lin_char //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite expr1n divr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_char_irr",
            "line_nb": 709,
            "steps": [
                {
                    "command": [
                        "case/andP: CFxi => /char_reprP[rG ->]; rewrite cfRepr1 pnatr_eq1 => /eqP n1.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by apply/irr_reprP; exists rG => //; apply/mx_abs_irrW/linear_mx_abs_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_conjC_lin_char",
            "line_nb": 713,
            "steps": [
                {
                    "command": [
                        "apply/cfun_inP=> x Gx.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfunE cfun1E Gx -normCK normC_lin_char ?expr1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_char_unitr",
            "line_nb": 717,
            "steps": [
                {
                    "command": [
                        "by apply/unitrPr; exists xi^*%CF; apply: mul_conjC_lin_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr_lin_char",
            "line_nb": 720,
            "steps": [
                {
                    "command": [
                        "by rewrite -[_^-1]mulr1 -mul_conjC_lin_char mulKr ?lin_char_unitr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fful_lin_char_inj",
            "line_nb": 723,
            "steps": [
                {
                    "command": [
                        "move=> fful_phi x y Gx Gy xi_xy; apply/eqP; rewrite eq_mulgV1 -in_set1.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite (subsetP fful_phi) // inE groupM ?groupV //=; apply/forallP=> z.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "have [Gz | G'z] := boolP (z \\in G); last by rewrite !cfun0 ?groupMl ?groupV.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulgA lin_charM ?xi_xy -?lin_charM ?groupM ?groupV // mulKVg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfAut_lin_char",
            "line_nb": 730,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE cfAut_char; apply/andb_id2l=> /cfAut_char1->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjC_lin_char",
            "line_nb": 733,
            "steps": [
                {
                    "command": [
                        "exact: cfAut_lin_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Iirr_abelian",
            "line_nb": 736,
            "steps": [
                {
                    "command": [
                        "by rewrite card_ord NirrE card_classes_abelian => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Iirr_cyclic",
            "line_nb": 739,
            "steps": [
                {
                    "command": [
                        "by move/cyclic_abelian/card_Iirr_abelian.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char_abelianP",
            "line_nb": 742,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [cGG i | CF_G].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite qualifE irr_char /= irr1_degree.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite irr_degree_abelian //; last apply: groupC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite card_classes_abelian -NirrE -eqC_nat -irr_sum_square //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}[Nirr G]card_ord -sumr_const; apply/eqP/eq_bigr=> i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite lin_char1 ?expr1n ?CF_G.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_repr_lin_char",
            "line_nb": 750,
            "steps": [
                {
                    "command": [
                        "move=> Gx CFi; rewrite -irrRepr cfunE Gx.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move: (_ x); rewrite -[irr_degree _]natCK -irr1_degree lin_char1 //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite (natCK 1) => A; rewrite trace_mx11 -mx11_scalar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linear_char_key",
            "line_nb": 755,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linear_char_divr",
            "line_nb": 759,
            "steps": [
                {
                    "command": [
                        "split=> [|chi xi Lchi Lxi]; first exact: cfun1_lin_char.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite invr_lin_char // qualifE cfunE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM ?lin_char1 ?mulr1 ?lin_charW //= cfConjC_lin_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_cyclic_lin",
            "line_nb": 766,
            "steps": [
                {
                    "command": [
                        "by move/cyclic_abelian/char_abelianP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_prime_lin",
            "line_nb": 769,
            "steps": [
                {
                    "command": [
                        "by move/prime_cyclic/irr_cyclic_lin.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char_inv",
            "line_nb": 828,
            "steps": [
                {
                    "command": [
                        "case Gx: (x \\in G); last by rewrite !cfun0 ?rmorph0 ?groupV ?Gx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/char_reprP=> rG ->; have [e [_ _ _]] := repr_rsim_diag rG Gx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_inv",
            "line_nb": 832,
            "steps": [
                {
                    "command": [
                        "exact/char_inv/irr_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_classP",
            "line_nb": 864,
            "steps": [
                {
                    "command": [
                        "exact: enum_valP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_irr_classK",
            "line_nb": 867,
            "steps": [
                {
                    "command": [
                        "by case/repr_classesP: (irr_classP i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_classK",
            "line_nb": 870,
            "steps": [
                {
                    "command": [
                        "by move=> i; rewrite /iC enum_valK_in cast_ordK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "class_IirrK",
            "line_nb": 873,
            "steps": [
                {
                    "command": [
                        "by move=> xG GxG; rewrite /c cast_ordKV enum_rankK_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reindex_irr_class",
            "line_nb": 876,
            "steps": [
                {
                    "command": [
                        "rewrite (reindex c); first by apply: eq_bigl => i; apply: enum_valP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists iC; [apply: in1W; apply: irr_classK | apply: class_IirrK].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "XX'_1",
            "line_nb": 881,
            "steps": [
                {
                    "command": [
                        "apply/matrixP=> i j; rewrite !mxE -first_orthogonality_relation mulr_sumr.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_by_classes => [|u v Gu Gv]; last by rewrite -conjVg !cfunJ.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite reindex_irr_class /=; apply/esym/eq_bigr=> k _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite !mxE irr_inv // -/(g k) -divg_index -indexgI /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (char0_natf_div Cchar) ?dvdn_indexg // index_cent1 invfM invrK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite repr_irr_classK mulrCA mulrA mulrCA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "character_table_unit",
            "line_nb": 889,
            "steps": [
                {
                    "command": [
                        "by case/mulmx1_unit: XX'_1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "second_orthogonality_relation",
            "line_nb": 893,
            "steps": [
                {
                    "command": [
                        "move=> Gy; pose i_x := iC (x ^: G); pose i_y := iC (y ^: G).",
                        "VernacExtend",
                        "81927515fc3ecfba885b46cf7f9013852021d404"
                    ]
                },
                {
                    "command": [
                        "have [Gx | notGx] := boolP (x \\in G); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite (contraNF (subsetP _ x) notGx) ?class_subG ?big1 // => i _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfun0 ?mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "transitivity ((#|'C_G[repr (y ^: G)]|%:R *: (X' *m X)) i_y i_x).",
                        "VernacExtend",
                        "8e8b0395a05c154dbc3bdff00b4f023f4361f14d"
                    ]
                },
                {
                    "command": [
                        "rewrite scalemxAl !mxE; apply: eq_bigr => k _; rewrite !mxE mulrC -!mulrA.",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "by rewrite !class_IirrK ?mem_classes // !cfun_repr mulVKf ?neq0CG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmx1C // !mxE -!divg_index !(index_cent1, =^~ indexgI).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (class_eqP (mem_repr y _)) ?class_refl // mulr_natr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (can_in_eq class_IirrK) ?mem_classes //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [-> | not_yGx] := altP eqP; first by rewrite class_refl.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite [x \\in _](contraNF _ not_yGx) // => /class_eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfnorm_irr",
            "line_nb": 948,
            "steps": [
                {
                    "command": [
                        "by rewrite cfdot_irr eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_orthonormal",
            "line_nb": 951,
            "steps": [
                {
                    "command": [
                        "apply/orthonormalP; split; first exact: free_uniq (irr_free G).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=> _ _ /irrP[i ->] /irrP[j ->].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfdot_irr (inj_eq irr_inj).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coord_cfdot",
            "line_nb": 956,
            "steps": [
                {
                    "command": [
                        "rewrite {2}(coord_basis (irr_basis G) (memvf phi)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite cfdot_suml (bigD1 i) // cfdotZl /= -tnth_nth cfdot_irr eqxx mulr1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite big1 ?addr0 // => j neq_ji; rewrite cfdotZl /= -tnth_nth cfdot_irr.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negbTE neq_ji) mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfun_sum_cfdot",
            "line_nb": 962,
            "steps": [
                {
                    "command": [
                        "rewrite {1}(coord_basis (irr_basis G) (memvf phi)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite coord_cfdot -tnth_nth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfdot_sum_irr",
            "line_nb": 966,
            "steps": [
                {
                    "command": [
                        "rewrite {1}[phi]cfun_sum_cfdot cfdot_suml; apply: eq_bigr => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfdotZl -cfdotC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cnat_cfdot_char_irr",
            "line_nb": 970,
            "steps": [
                {
                    "command": [
                        "by move/forallP/(_ i); rewrite coord_cfdot.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cnat_cfdot_char",
            "line_nb": 977,
            "steps": [
                {
                    "command": [
                        "move=> Nchi Nxi; rewrite cfdot_char_r ?rpred_sum // => i _.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM ?Cnat_cfdot_char_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfdotC_char",
            "line_nb": 981,
            "steps": [
                {
                    "command": [
                        "by move=> Nchi Nxi; rewrite cfdotC conj_Cnat ?Cnat_cfdot_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irrEchar",
            "line_nb": 984,
            "steps": [
                {
                    "command": [
                        "apply/irrP/andP=> [[i ->] | [Nchi]]; first by rewrite irr_char cfnorm_irr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite cfdot_sum_irr => /eqP/Cnat_sum_eq1[i _| i [_ ci1 cj0]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM // ?conj_Cnat ?Cnat_cfdot_char_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists i; rewrite [chi]cfun_sum_cfdot (bigD1 i) //=.",
                        "VernacExtend",
                        "526f5e9a80ed8d5345caa6273d63a7966df33e2b"
                    ]
                },
                {
                    "command": [
                        "rewrite -(@normr_idP _ _ (@Cnat_ge0 _ (Cnat_cfdot_char_irr i Nchi))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite normC_def {}ci1 sqrtC1 scale1r big1 ?addr0 // => j neq_ji.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite (('[_] =P 0) _) ?scale0r // -normr_eq0 normC_def cj0 ?sqrtC0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irrWchar",
            "line_nb": 993,
            "steps": [
                {
                    "command": [
                        "by rewrite irrEchar => /andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irrWnorm",
            "line_nb": 996,
            "steps": [
                {
                    "command": [
                        "by rewrite irrEchar => /andP[_ /eqP].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_signed_irr",
            "line_nb": 1011,
            "steps": [
                {
                    "command": [
                        "by rewrite eq_scaled_irr signr_eq0 (inj_eq signr_inj).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_scale_irr",
            "line_nb": 1014,
            "steps": [
                {
                    "command": [
                        "by rewrite eq_scaled_irr eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_subZnat_irr",
            "line_nb": 1031,
            "steps": [
                {
                    "command": [
                        "rewrite -!scaleNr eq_addZ_irr oppr_eq0 opprK -addr_eq0 -natrD eqr_nat.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !pnatr_eq0 addn_eq0; case: a b => [|a] [|b]; rewrite ?andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char1_ge_norm",
            "line_nb": 1038,
            "steps": [
                {
                    "command": [
                        "case/char_reprP=> rG ->; case Gx: (x \\in G); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfunE cfRepr1 Gx normr0 ler0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by have [e [_ _ []]] := repr_rsim_diag rG Gx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_cfRepr_norm_scalar",
            "line_nb": 1043,
            "steps": [
                {
                    "command": [
                        "move=> Gx; have [e [[B uB def_x] [_ e1] [-> _] _]] := repr_rsim_diag rG Gx.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite cfRepr1 -[n in n%:R]card_ord -sumr_const -(eq_bigr _ (in1W e1)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case/normC_sum_eq1=> [i _ | c /eqP norm_c_1 def_e]; first by rewrite e1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have{def_e} def_e: e = const_mx c by apply/rowP=> i; rewrite mxE def_e ?andbT.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists c => //; rewrite def_x def_e diag_const_mx scalar_mxC mulmxKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_consttE",
            "line_nb": 1059,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constt_charP",
            "line_nb": 1062,
            "steps": [
                {
                    "command": [
                        "move=> Nchi; apply: (iffP idP) => [i_in_chi| [chi' Nchi' ->]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite inE /= cfdotDl cfdot_irr eqxx -(eqP (Cnat_cfdot_char_irr i Nchi')).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -natrD pnatr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (chi - 'chi_i); last by rewrite addrC subrK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/forallP=> j; rewrite coord_cfdot cfdotBl cfdot_irr.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have [<- | _] := eqP; last by rewrite subr0 Cnat_cfdot_char_irr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have := i_in_chi; rewrite inE /= -(eqP (Cnat_cfdot_char_irr i Nchi)) pnatr_eq0.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by case: (truncC _) => // n _; rewrite mulrSr addrK ?isNatC_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfun_sum_constt",
            "line_nb": 1072,
            "steps": [
                {
                    "command": [
                        "rewrite {1}[phi]cfun_sum_cfdot (bigID [pred i | '[phi, 'chi_i] == 0]) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite big1 ?add0r // => i /eqP->; rewrite scale0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neq0_has_constt",
            "line_nb": 1076,
            "steps": [
                {
                    "command": [
                        "move=> nz_phi; apply/existsP; apply: contra nz_phi => /pred0P phi0.",
                        "VernacExtend",
                        "e374b6c583d80c9d8b579c06df7953342f99f751"
                    ]
                },
                {
                    "command": [
                        "by rewrite [phi]cfun_sum_constt big_pred0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constt_irr",
            "line_nb": 1080,
            "steps": [
                {
                    "command": [
                        "by move=> j; rewrite !inE cfdot_irr pnatr_eq0 (eq_sym j); case: (i == j).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char1_ge_constt",
            "line_nb": 1083,
            "steps": [
                {
                    "command": [
                        "move=> {chi} _ /constt_charP[// | chi Nchi ->].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfunE addrC -subr_ge0 addrK char1_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constt_ortho_char",
            "line_nb": 1087,
            "steps": [
                {
                    "command": [
                        "move=> _ _ /constt_charP[//|phi1 Nphi1 ->] /constt_charP[//|psi1 Npsi1 ->].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite cfdot_irr; case: eqP => // -> /eqP/idPn[].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite cfdotDl !cfdotDr cfnorm_irr -addrA gtr_eqF ?ltr_paddr ?ltr01 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite Cnat_ge0 ?rpredD ?Cnat_cfdot_char ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfker_repr",
            "line_nb": 1098,
            "steps": [
                {
                    "command": [
                        "apply/esym/setP=> x; rewrite inE mul1mx /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case Gx: (x \\in G); last by rewrite inE Gx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/eqP/idP=> Kx; last by rewrite max_cfRepr_mx1 // cfker1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite inE Gx; apply/forallP=> y; rewrite !cfunE !mulrb groupMl //.",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => // Gy; rewrite repr_mxM // Kx mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfkerEchar",
            "line_nb": 1105,
            "steps": [
                {
                    "command": [
                        "move=> Nchi; apply/setP=> x; apply/idP/setIdP=> [Kx | [Gx /eqP chi_x]].",
                        "VernacExtend",
                        "e374b6c583d80c9d8b579c06df7953342f99f751"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subsetP (cfker_sub chi)) // cfker1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/char_reprP: Nchi => rG -> in chi_x *; rewrite inE Gx; apply/forallP=> y.",
                        "VernacExtend",
                        "7b10d760ecce4015b43936eb8ee3a43374e85678"
                    ]
                },
                {
                    "command": [
                        "rewrite !cfunE groupMl // !mulrb; case: ifP => // Gy.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite repr_mxM // max_cfRepr_mx1 ?mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfker_nzcharE",
            "line_nb": 1112,
            "steps": [
                {
                    "command": [
                        "move=> Nchi nzchi; apply/setP=> x; rewrite cfkerEchar // !inE andb_idl //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by apply: contraLR => /cfun0-> //; rewrite eq_sym char1_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfkerEirr",
            "line_nb": 1116,
            "steps": [
                {
                    "command": [
                        "by rewrite cfker_nzcharE ?irr_char ?irr_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfker_irr0",
            "line_nb": 1119,
            "steps": [
                {
                    "command": [
                        "by rewrite irr0 cfker_cfun1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfaithful_reg",
            "line_nb": 1122,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> x; rewrite cfkerEchar ?cfReg_char // !inE !cfRegE eqxx.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case/andP=> _; apply: contraLR => /negbTE->; rewrite eq_sym neq0CG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfkerE",
            "line_nb": 1126,
            "steps": [
                {
                    "command": [
                        "move=> Nchi; rewrite cfkerEchar //; apply/setP=> x; rewrite !inE.",
                        "VernacExtend",
                        "291cbed887ee44aa2a2133906ee031c937159d58"
                    ]
                },
                {
                    "command": [
                        "apply: andb_id2l => Gx; rewrite {1 2}[chi]cfun_sum_constt !sum_cfunE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/eqP/bigcapP=> [Kx i Ci | Kx]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i /Kx Kx_i; rewrite !cfunE cfker1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite cfkerEirr inE /= -(inj_eq (mulfI Ci)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have:= (normC_sum_upper _ Kx) i; rewrite !cfunE => -> // {i Ci} i _.",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "have chi_i_ge0: 0 <= '[chi, 'chi_i].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite Cnat_ge0 ?Cnat_cfdot_char_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfunE normrM (normr_idP _) ?ler_wpmul2l ?char1_ge_norm ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TI_cfker_irr",
            "line_nb": 1137,
            "steps": [
                {
                    "command": [
                        "apply/trivgP; apply: subset_trans cfaithful_reg; rewrite cfkerE ?cfReg_char //.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "rewrite subsetI (bigcap_min 0) //=; last by rewrite cfker_irr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/bigcapsP=> i _; rewrite bigcap_inf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfker_constt",
            "line_nb": 1142,
            "steps": [
                {
                    "command": [
                        "by move=> Nchi Ci; rewrite cfkerE ?subIset ?(bigcap_min i) ?orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nxi",
            "line_nb": 1148,
            "steps": [
                {
                    "command": [
                        "by have [] := andP lin_xi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_char_der1",
            "line_nb": 1151,
            "steps": [
                {
                    "command": [
                        "rewrite gen_subG /=; apply/subsetP=> _ /imset2P[x y Gx Gy ->].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite cfkerEchar // inE groupR //= !lin_charM ?lin_charV ?in_group //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrCA mulKf ?mulVf ?lin_char_neq0 // lin_char1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cforder_lin_char",
            "line_nb": 1156,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqn_dvd; apply/andP; split.",
                        "VernacExtend",
                        "c6080ad6de433b4aac1c6523f45011ac63415378"
                    ]
                },
                {
                    "command": [
                        "apply/dvdn_cforderP=> x Gx; rewrite -lin_charX // -cfQuoEker ?groupX //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite morphX ?(subsetP (cfker_norm xi)) //= expg_exponent ?mem_quotient //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfQuo1 ?cfker_normal ?lin_char1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have abGbar: abelian (G / cfker xi) := sub_der1_abelian lin_char_der1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [_ /morphimP[x Nx Gx ->] ->] := exponent_witness (abelian_nil abGbar).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite order_dvdn -morphX //= coset_id cfkerEchar // !inE groupX //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite lin_charX ?lin_char1 // (dvdn_cforderP _ _ _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cforder_lin_char_dvdG",
            "line_nb": 1166,
            "steps": [
                {
                    "command": [
                        "by rewrite cforder_lin_char (dvdn_trans (exponent_dvdn _)) ?dvdn_morphim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cforder_lin_char_gt0",
            "line_nb": 1169,
            "steps": [
                {
                    "command": [
                        "by rewrite cforder_lin_char exponent_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRepr_sub",
            "line_nb": 1176,
            "steps": [
                {
                    "command": [
                        "by apply/cfun_inP => x Hx; rewrite cfResE // !cfunE Hx (subsetP sHG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRes_char",
            "line_nb": 1179,
            "steps": [
                {
                    "command": [
                        "have [sHG | not_sHG] := boolP (H \\subset G).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case/char_reprP=> rG ->; rewrite -(cfRepr_sub rG sHG) cfRepr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move/Cnat_char1=> Nchi1; rewrite cfResEout // rpredZ_Cnat ?rpred1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRes_eq0",
            "line_nb": 1184,
            "steps": [
                {
                    "command": [
                        "by move=> Nchi; rewrite -!char1_eq0 ?cfRes_char // cfRes1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRes_lin_char",
            "line_nb": 1187,
            "steps": [
                {
                    "command": [
                        "by case/andP=> Nchi; rewrite qualifE cfRes_char ?cfRes1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Res_irr_neq0",
            "line_nb": 1190,
            "steps": [
                {
                    "command": [
                        "by rewrite cfRes_eq0 ?irr_neq0 ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfRes_lin_lin",
            "line_nb": 1193,
            "steps": [
                {
                    "command": [
                        "by rewrite !qualifE cfRes1 => -> /andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Res_Iirr0",
            "line_nb": 1208,
            "steps": [
                {
                    "command": [
                        "by rewrite /Res_Iirr irr0 rmorph1 -irr0 irrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_Res_IirrE",
            "line_nb": 1211,
            "steps": [
                {
                    "command": [
                        "move=> chi1; rewrite cfIirrE ?lin_char_irr ?cfRes_lin_char //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite qualifE irr_char /= chi1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constt_Ind_Res",
            "line_nb": 1219,
            "steps": [
                {
                    "command": [
                        "by rewrite !irr_consttE cfdotC conjC_eq0 -cfdot_Res_l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfdot_Res_ge_constt",
            "line_nb": 1222,
            "steps": [
                {
                    "command": [
                        "move=> {psi} _ /constt_charP[// | psi Npsi ->].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite linearD cfdotDl addrC -subr_ge0 addrK Cnat_ge0 //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite Cnat_cfdot_char_irr // cfRes_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constt_Res_trans",
            "line_nb": 1227,
            "steps": [
                {
                    "command": [
                        "move=> Npsi Cj i; apply: contraNneq; rewrite eqr_le => {1}<-.",
                        "VernacExtend",
                        "b7d55d5cc9e609b184db748f6780e12224901e48"
                    ]
                },
                {
                    "command": [
                        "rewrite cfdot_Res_ge_constt ?Cnat_ge0 ?Cnat_cfdot_char_irr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfRes_char ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfMorph_char",
            "line_nb": 1240,
            "steps": [
                {
                    "command": [
                        "have [sGD /char_reprP[rfG ->] | outGD Nchi] := boolP (G \\subset D); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfMorphEout // rpredZ_Cnat ?rpred1 ?Cnat_char1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/char_reprP; exists (Representation (morphim_repr rfG sGD)).",
                        "VernacExtend",
                        "47e169fc698ed2319e67043d23db8a7f403ff593"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfRepr_morphim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfMorph_lin_char",
            "line_nb": 1246,
            "steps": [
                {
                    "command": [
                        "by case/andP=> Nchi; rewrite qualifE cfMorph1 cfMorph_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfMorph_charE",
            "line_nb": 1249,
            "steps": [
                {
                    "command": [
                        "move=> sGD; apply/idP/idP=> [/char_reprP[[n rG] /=Dfchi] | /cfMorph_char//].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "pose H := 'ker_G f; have kerH: H \\subset rker rG.",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "by rewrite -cfker_repr -Dfchi cfker_morph // setIS // ker_sub_pre.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nHG: G \\subset 'N(H) by rewrite normsI // (subset_trans sGD) ?ker_norm.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [h injh im_h] := first_isom_loc f sGD; rewrite -/H in h injh im_h.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "have DfG: invm injh @*^-1 (G / H) == (f @* G)%g by rewrite morphpre_invm im_h.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose rfG := eqg_repr (morphpre_repr _ (quo_repr kerH nHG)) DfG.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "apply/char_reprP; exists (Representation rfG).",
                        "VernacExtend",
                        "59fcf783546cb3036a209a2fb75cd75caa51dc1e"
                    ]
                },
                {
                    "command": [
                        "apply/cfun_inP=> _ /morphimP[x Dx Gx ->]; rewrite -cfMorphE // Dfchi !cfunE Gx.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "pose xH := coset H x; have GxH: xH \\in (G / H)%g by apply: mem_quotient.",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "suffices Dfx: f x = h xH by rewrite mem_morphim //= Dfx invmE ?quo_repr_coset.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by apply/set1_inj; rewrite -?morphim_set1 ?im_h ?(subsetP nHG) ?sub1set.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfMorph_lin_charE",
            "line_nb": 1263,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE cfMorph1 => /cfMorph_charE->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfMorph_irr",
            "line_nb": 1266,
            "steps": [
                {
                    "command": [
                        "by move=> sGD; rewrite !irrEchar cfMorph_charE // cfMorph_iso.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_Iirr0",
            "line_nb": 1270,
            "steps": [
                {
                    "command": [
                        "by rewrite /morph_Iirr irr0 rmorph1 -irr0 irrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_IirrE",
            "line_nb": 1274,
            "steps": [
                {
                    "command": [
                        "by rewrite cfIirrE ?cfMorph_irr ?mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_Iirr_inj",
            "line_nb": 1277,
            "steps": [
                {
                    "command": [
                        "by move=> i j eq_ij; apply/irr_inj/cfMorph_inj; rewrite // -!morph_IirrE eq_ij.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morph_Iirr_eq0",
            "line_nb": 1280,
            "steps": [
                {
                    "command": [
                        "by rewrite -!irr_eq1 morph_IirrE cfMorph_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfIsom_char",
            "line_nb": 1288,
            "steps": [
                {
                    "command": [
                        "rewrite [cfIsom _]locked_withE cfMorph_charE //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (isom_im (isom_sym _)) cfRes_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfIsom_lin_char",
            "line_nb": 1292,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE cfIsom_char cfIsom1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfIsom_irr",
            "line_nb": 1295,
            "steps": [
                {
                    "command": [
                        "by rewrite !irrEchar cfIsom_char cfIsom_iso.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isom_IirrE",
            "line_nb": 1299,
            "steps": [
                {
                    "command": [
                        "by rewrite cfIirrE ?cfIsom_irr ?mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isom_Iirr_inj",
            "line_nb": 1302,
            "steps": [
                {
                    "command": [
                        "by move=> i j eqij; apply/irr_inj/(cfIsom_inj isoGR); rewrite -!isom_IirrE eqij.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isom_Iirr_eq0",
            "line_nb": 1305,
            "steps": [
                {
                    "command": [
                        "by rewrite -!irr_eq1 isom_IirrE cfIsom_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isom_Iirr0",
            "line_nb": 1308,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite isom_Iirr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isom_IirrK",
            "line_nb": 1316,
            "steps": [
                {
                    "command": [
                        "by move=> i; apply: irr_inj; rewrite !isom_IirrE cfIsomK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isom_IirrKV",
            "line_nb": 1319,
            "steps": [
                {
                    "command": [
                        "by move=> i; apply: irr_inj; rewrite !isom_IirrE cfIsomKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nKG",
            "line_nb": 1326,
            "steps": [
                {
                    "command": [
                        "by have [/andP[]] := sdprod_context defG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfSdprod_char",
            "line_nb": 1329,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock cfMorph_charE // cfIsom_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfSdprod_lin_char",
            "line_nb": 1332,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE cfSdprod_char cfSdprod1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfSdprod_irr",
            "line_nb": 1335,
            "steps": [
                {
                    "command": [
                        "by rewrite !irrEchar cfSdprod_char cfSdprod_iso.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sdprod_IirrE",
            "line_nb": 1339,
            "steps": [
                {
                    "command": [
                        "by rewrite cfIirrE ?cfSdprod_irr ?mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sdprod_IirrK",
            "line_nb": 1342,
            "steps": [
                {
                    "command": [
                        "by move=> j; rewrite /Res_Iirr sdprod_IirrE cfSdprodK irrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sdprod_Iirr_inj",
            "line_nb": 1345,
            "steps": [
                {
                    "command": [
                        "exact: can_inj sdprod_IirrK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sdprod_Iirr_eq0",
            "line_nb": 1348,
            "steps": [
                {
                    "command": [
                        "by rewrite -!irr_eq1 sdprod_IirrE cfSdprod_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sdprod_Iirr0",
            "line_nb": 1351,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite sdprod_Iirr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Res_sdprod_irr",
            "line_nb": 1354,
            "steps": [
                {
                    "command": [
                        "move=> kerK /irrP[i Dphi]; rewrite irrEchar -(cfSdprod_iso defG).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfRes_sdprodK // Dphi cfnorm_irr cfRes_char ?irr_char /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sdprod_Res_IirrE",
            "line_nb": 1358,
            "steps": [
                {
                    "command": [
                        "by move=> kerK; rewrite cfIirrE ?Res_sdprod_irr ?mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sdprod_Res_IirrK",
            "line_nb": 1361,
            "steps": [
                {
                    "command": [
                        "by move=> kerK; rewrite /sdprod_Iirr sdprod_Res_IirrE ?cfRes_sdprodK ?irrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprodKl_abelian",
            "line_nb": 1369,
            "steps": [
                {
                    "command": [
                        "by move=> cHH; apply: cfDprodKl; apply/lin_char1/char_abelianP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprodKr_abelian",
            "line_nb": 1372,
            "steps": [
                {
                    "command": [
                        "by move=> cKK; apply: cfDprodKr; apply/lin_char1/char_abelianP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprodl_char",
            "line_nb": 1375,
            "steps": [
                {
                    "command": [
                        "exact: cfSdprod_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprodr_char",
            "line_nb": 1378,
            "steps": [
                {
                    "command": [
                        "exact: cfSdprod_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprod_char",
            "line_nb": 1381,
            "steps": [
                {
                    "command": [
                        "by move=> Nphi Npsi; rewrite rpredM ?cfDprodl_char ?cfDprodr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprod_eq1",
            "line_nb": 1384,
            "steps": [
                {
                    "command": [
                        "move=> /Cnat_char1 Nphi /Cnat_char1 Npsi.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply/eqP/andP=> [phi_psi_1 | [/eqP-> /eqP->]]; last by rewrite cfDprod_cfun1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have /andP[/eqP phi1 /eqP psi1]: (phi 1%g == 1) && (psi 1%g == 1).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -Cnat_mul_eq1 // -(cfDprod1 KxH) phi_psi_1 cfun11.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -[phi](cfDprodKl KxH psi1) -{2}[psi](cfDprodKr KxH phi1) phi_psi_1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !rmorph1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprodl_lin_char",
            "line_nb": 1392,
            "steps": [
                {
                    "command": [
                        "exact: cfSdprod_lin_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprodr_lin_char",
            "line_nb": 1395,
            "steps": [
                {
                    "command": [
                        "exact: cfSdprod_lin_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprod_lin_char",
            "line_nb": 1398,
            "steps": [
                {
                    "command": [
                        "by move=> Nphi Npsi; rewrite rpredM ?cfSdprod_lin_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprodl_irr",
            "line_nb": 1401,
            "steps": [
                {
                    "command": [
                        "exact: cfSdprod_irr.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprodr_irr",
            "line_nb": 1404,
            "steps": [
                {
                    "command": [
                        "exact: cfSdprod_irr.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprodl_IirrE",
            "line_nb": 1408,
            "steps": [
                {
                    "command": [
                        "exact: sdprod_IirrE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprodl_IirrK",
            "line_nb": 1411,
            "steps": [
                {
                    "command": [
                        "exact: sdprod_IirrK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprodl_Iirr_eq0",
            "line_nb": 1414,
            "steps": [
                {
                    "command": [
                        "exact: sdprod_Iirr_eq0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprodl_Iirr0",
            "line_nb": 1417,
            "steps": [
                {
                    "command": [
                        "exact: sdprod_Iirr0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprodr_IirrE",
            "line_nb": 1421,
            "steps": [
                {
                    "command": [
                        "exact: sdprod_IirrE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprodr_IirrK",
            "line_nb": 1424,
            "steps": [
                {
                    "command": [
                        "exact: sdprod_IirrK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprodr_Iirr_eq0",
            "line_nb": 1427,
            "steps": [
                {
                    "command": [
                        "exact: sdprod_Iirr_eq0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprodr_Iirr0",
            "line_nb": 1430,
            "steps": [
                {
                    "command": [
                        "exact: sdprod_Iirr0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDprod_irr",
            "line_nb": 1433,
            "steps": [
                {
                    "command": [
                        "rewrite irrEchar cfDprod_char ?irr_char //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfdot_dprod !cfdot_irr !eqxx mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_IirrE",
            "line_nb": 1438,
            "steps": [
                {
                    "command": [
                        "by rewrite cfIirrE ?cfDprod_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_IirrEl",
            "line_nb": 1441,
            "steps": [
                {
                    "command": [
                        "by rewrite dprod_IirrE /cfDprod irr0 rmorph1 mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_IirrEr",
            "line_nb": 1444,
            "steps": [
                {
                    "command": [
                        "by rewrite dprod_IirrE /cfDprod irr0 rmorph1 mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_Iirr_inj",
            "line_nb": 1447,
            "steps": [
                {
                    "command": [
                        "move=> [i1 j1] [i2 j2] /eqP; rewrite -[_ == _]oddb -(natCK (_ == _)).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite -cfdot_irr !dprod_IirrE cfdot_dprod !cfdot_irr -natrM mulnb.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite natCK oddb -xpair_eqE => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_Iirr0",
            "line_nb": 1452,
            "steps": [
                {
                    "command": [
                        "by apply/irr_inj; rewrite dprod_IirrE !irr0 cfDprod_cfun1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_Iirr0l",
            "line_nb": 1455,
            "steps": [
                {
                    "command": [
                        "by apply/irr_inj; rewrite dprod_IirrE irr0 dprodr_IirrE cfDprod_cfun1l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_Iirr0r",
            "line_nb": 1458,
            "steps": [
                {
                    "command": [
                        "by apply/irr_inj; rewrite dprod_IirrE irr0 dprodl_IirrE cfDprod_cfun1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_Iirr_eq0",
            "line_nb": 1461,
            "steps": [
                {
                    "command": [
                        "by rewrite -xpair_eqE -(inj_eq dprod_Iirr_inj) dprod_Iirr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfdot_dprod_irr",
            "line_nb": 1464,
            "steps": [
                {
                    "command": [
                        "by rewrite cfdot_irr (inj_eq dprod_Iirr_inj).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_Iirr_onto",
            "line_nb": 1467,
            "steps": [
                {
                    "command": [
                        "set D := codom _; have Df: dprod_Iirr _ \\in D := codom_f dprod_Iirr _.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "have: 'chi_k 1%g ^+ 2 != 0 by rewrite mulf_neq0 ?irr1_neq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: contraR => notDk; move/eqP: (irr_sum_square G).",
                        "VernacExtend",
                        "86bb0d3d5ae27b38aac15f69d532d662f1518315"
                    ]
                },
                {
                    "command": [
                        "rewrite (bigID (mem D)) (reindex _ (bij_on_codom dprod_Iirr_inj (0, 0))) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have ->: #|G|%:R = \\sum_i \\sum_j 'chi_(dprod_Iirr (i, j)) 1%g ^+ 2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(dprod_card KxH) natrM.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "do 2![rewrite -irr_sum_square (mulr_suml, mulr_sumr); apply: eq_bigr => ? _].",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "by rewrite dprod_IirrE -exprMn -{3}(mulg1 1%g) cfDprodE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_bigl _ _ Df) pair_bigA addrC -subr_eq0 addrK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move/eqP/psumr_eq0P=> -> //= i _; rewrite irr1_degree -natrX ler0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_IirrK",
            "line_nb": 1480,
            "steps": [
                {
                    "command": [
                        "by move=> p; apply: (iinv_f dprod_Iirr_inj).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inv_dprod_IirrK",
            "line_nb": 1483,
            "steps": [
                {
                    "command": [
                        "by move=> i; apply: f_iinv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inv_dprod_Iirr0",
            "line_nb": 1486,
            "steps": [
                {
                    "command": [
                        "by apply/(canLR dprod_IirrK); rewrite dprod_Iirr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dprod_IirrC",
            "line_nb": 1491,
            "steps": [
                {
                    "command": [
                        "by apply: irr_inj; rewrite !dprod_IirrE; apply: cfDprodC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sAG",
            "line_nb": 1498,
            "steps": [
                {
                    "command": [
                        "by move=> Pi; rewrite -(bigdprodWY defG) (bigD1 i) ?joing_subl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprodi_char",
            "line_nb": 1501,
            "steps": [
                {
                    "command": [
                        "by move=> Nphi; rewrite cfDprodl_char cfRes_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprodi_charE",
            "line_nb": 1504,
            "steps": [
                {
                    "command": [
                        "by move=> Pi; rewrite cfDprodl_char Pi cfRes_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprod_char",
            "line_nb": 1507,
            "steps": [
                {
                    "command": [
                        "by move=> Nphi; apply: rpred_prod => i /Nphi; apply: cfBigdprodi_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprodi_lin_char",
            "line_nb": 1510,
            "steps": [
                {
                    "command": [
                        "by move=> Lphi; rewrite cfDprodl_lin_char ?cfRes_lin_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprodi_lin_charE",
            "line_nb": 1513,
            "steps": [
                {
                    "command": [
                        "by move=> Pi; rewrite qualifE cfBigdprodi_charE // cfBigdprodi1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprod_lin_char",
            "line_nb": 1516,
            "steps": [
                {
                    "command": [
                        "by move=> Lphi; apply/rpred_prod=> i /Lphi; apply: cfBigdprodi_lin_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprodi_irr",
            "line_nb": 1519,
            "steps": [
                {
                    "command": [
                        "by move=> Pi; rewrite !irrEchar cfBigdprodi_charE ?cfBigdprodi_iso.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprod_irr",
            "line_nb": 1522,
            "steps": [
                {
                    "command": [
                        "move=> Nchi; rewrite irrEchar cfBigdprod_char => [|i /Nchi/irrWchar] //=.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfdot_bigdprod big1 // => i /Nchi/irrWnorm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprod_eq1",
            "line_nb": 1526,
            "steps": [
                {
                    "command": [
                        "move=> Nphi; set Phi := cfBigdprod defG phi.",
                        "VernacExtend",
                        "fd0300d8899563f42d81dc09cab8269e61be7289"
                    ]
                },
                {
                    "command": [
                        "apply/eqP/eqfun_inP=> [Phi1 i Pi | phi1]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: big1 => i /phi1->; rewrite rmorph1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Phi1_1: Phi 1%g = 1 by rewrite Phi1 cfun1E group1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nz_Phi1: Phi 1%g != 0 by rewrite Phi1_1 oner_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [_ <-] := cfBigdprodK nz_Phi1 Pi.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite Phi1_1 divr1 -/Phi Phi1 rmorph1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite prod_cfunE // in Phi1_1; have := Cnat_prod_eq1 _ Phi1_1 Pi.",
                        "VernacExtend",
                        "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
                    ]
                },
                {
                    "command": [
                        "rewrite -(cfRes1 (A i)) cfBigdprodiK // => ->; first by rewrite scale1r.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=> {i Pi} j /Nphi Nphi_j; rewrite Cnat_char1 ?cfBigdprodi_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprod_Res_lin",
            "line_nb": 1538,
            "steps": [
                {
                    "command": [
                        "move=> Lchi; apply/cfun_inP=> _ /(mem_bigdprod defG)[x [Ax -> _]].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "rewrite (lin_char_prod Lchi) ?cfBigdprodE // => [|i Pi]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subsetP (sAG Pi)) ?Ax.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/eq_bigr=> i Pi; rewrite cfResE ?sAG ?Ax.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprodKlin",
            "line_nb": 1544,
            "steps": [
                {
                    "command": [
                        "move=> Lphi i Pi; have Lpsi := cfBigdprod_lin_char Lphi.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have [_ <-] := cfBigdprodK (lin_char_neq0 Lpsi (group1 G)) Pi.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !lin_char1 ?Lphi // divr1 scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfBigdprodKabelian",
            "line_nb": 1549,
            "steps": [
                {
                    "command": [
                        "move=> /(abelianS _) cGG.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply: cfBigdprodKlin => i /sAG/cGG/char_abelianP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC_charAut",
            "line_nb": 1557,
            "steps": [
                {
                    "command": [
                        "have [Gx | /cfun0->] := boolP (x \\in G); last by rewrite !rmorph0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/char_reprP=> rG ->; have [e [_ [en1 _] [-> _] _]] := repr_rsim_diag rG Gx.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "by rewrite !rmorph_sum; apply: eq_bigr => i _; apply: aut_unity_rootC (en1 i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC_irrAut",
            "line_nb": 1562,
            "steps": [
                {
                    "command": [
                        "exact: conjC_charAut (irr_char i).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfdot_aut_char",
            "line_nb": 1565,
            "steps": [
                {
                    "command": [
                        "by move/conjC_charAut=> Nchi; apply: cfdot_cfAut => _ /mapP[x _ ->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfdot_aut_irr",
            "line_nb": 1568,
            "steps": [
                {
                    "command": [
                        "exact: cfdot_aut_char (irr_char i).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfAut_irr",
            "line_nb": 1571,
            "steps": [
                {
                    "command": [
                        "rewrite !irrEchar cfAut_char; apply/andb_id2l=> /cfdot_aut_char->.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "exact: fmorph_eq1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjC_irr",
            "line_nb": 1575,
            "steps": [
                {
                    "command": [
                        "by rewrite cfAut_irr mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_aut_closed",
            "line_nb": 1578,
            "steps": [
                {
                    "command": [
                        "by move=> chi; rewrite /= cfAut_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aut_IirrE",
            "line_nb": 1582,
            "steps": [
                {
                    "command": [
                        "by rewrite cfIirrE ?cfAut_irr ?mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC_IirrE",
            "line_nb": 1586,
            "steps": [
                {
                    "command": [
                        "exact: aut_IirrE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC_IirrK",
            "line_nb": 1589,
            "steps": [
                {
                    "command": [
                        "by move=> i; apply: irr_inj; rewrite !conjC_IirrE cfConjCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aut_Iirr0",
            "line_nb": 1592,
            "steps": [
                {
                    "command": [
                        "by apply/irr_inj; rewrite aut_IirrE irr0 cfAut_cfun1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC_Iirr0",
            "line_nb": 1595,
            "steps": [
                {
                    "command": [
                        "exact: aut_Iirr0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aut_Iirr_eq0",
            "line_nb": 1598,
            "steps": [
                {
                    "command": [
                        "by rewrite -!irr_eq1 aut_IirrE cfAut_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjC_Iirr_eq0",
            "line_nb": 1601,
            "steps": [
                {
                    "command": [
                        "exact: aut_Iirr_eq0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aut_Iirr_inj",
            "line_nb": 1604,
            "steps": [
                {
                    "command": [
                        "by move=> i j eq_ij; apply/irr_inj/(cfAut_inj u); rewrite -!aut_IirrE eq_ij.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfQuo_char",
            "line_nb": 1613,
            "steps": [
                {
                    "command": [
                        "move=> Nchi; without loss kerH: / H \\subset cfker chi.",
                        "VernacExtend",
                        "d999ee33e7c6564a01a7bb2262aa207bb3b6058f"
                    ]
                },
                {
                    "command": [
                        "move/contraNF=> IHchi; apply/wlog_neg=> N'chiH.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "suffices ->: (chi / H)%CF = (chi 1%g)%:A.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredZ_Cnat ?Cnat_char1 ?rpred1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/cfunP=> x; rewrite cfunE cfun1E mulr_natr cfunElock IHchi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "without loss nsHG: G chi Nchi kerH / H <| G.",
                        "VernacExtend",
                        "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
                    ]
                },
                {
                    "command": [
                        "move=> IHchi; have nsHN := normalSG (subset_trans kerH (cfker_sub chi)).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfQuoInorm ?(cfRes_char, IHchi) ?sub_cfker_Res // ?normal_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [rG Dchi] := char_reprP Nchi; rewrite Dchi cfker_repr in kerH.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "apply/char_reprP; exists (Representation (quo_repr kerH (normal_norm nsHG))).",
                        "VernacExtend",
                        "0d2615b568542b818af25ed7f0aefe9cb5ce5690"
                    ]
                },
                {
                    "command": [
                        "apply/cfun_inP=> _ /morphimP[x nHx Gx ->]; rewrite Dchi cfQuoE ?cfker_repr //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfunE Gx quo_repr_coset ?mem_quotient.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfQuo_lin_char",
            "line_nb": 1627,
            "steps": [
                {
                    "command": [
                        "by case/andP=> Nchi; rewrite qualifE cfQuo_char ?cfQuo1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfMod_char",
            "line_nb": 1630,
            "steps": [
                {
                    "command": [
                        "exact: cfMorph_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfMod_lin_char",
            "line_nb": 1633,
            "steps": [
                {
                    "command": [
                        "exact: cfMorph_lin_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfMod_charE",
            "line_nb": 1636,
            "steps": [
                {
                    "command": [
                        "by case/andP=> _; apply: cfMorph_charE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfMod_lin_charE",
            "line_nb": 1639,
            "steps": [
                {
                    "command": [
                        "by case/andP=> _; apply: cfMorph_lin_charE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfQuo_charE",
            "line_nb": 1642,
            "steps": [
                {
                    "command": [
                        "by move=> nsHG kerH; rewrite -cfMod_charE ?cfQuoK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfQuo_lin_charE",
            "line_nb": 1645,
            "steps": [
                {
                    "command": [
                        "by move=> nsHG kerH; rewrite -cfMod_lin_charE ?cfQuoK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfMod_irr",
            "line_nb": 1648,
            "steps": [
                {
                    "command": [
                        "by case/andP=> _; apply: cfMorph_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_Iirr0",
            "line_nb": 1652,
            "steps": [
                {
                    "command": [
                        "exact: morph_Iirr0.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_IirrE",
            "line_nb": 1655,
            "steps": [
                {
                    "command": [
                        "by move=> nsHG; rewrite cfIirrE ?cfMod_irr ?mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_Iirr_eq0",
            "line_nb": 1658,
            "steps": [
                {
                    "command": [
                        "by case/andP=> _ /morph_Iirr_eq0->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfQuo_irr",
            "line_nb": 1661,
            "steps": [
                {
                    "command": [
                        "by move=> nsHG kerH; rewrite -cfMod_irr ?cfQuoK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quo_Iirr0",
            "line_nb": 1665,
            "steps": [
                {
                    "command": [
                        "by rewrite /quo_Iirr irr0 cfQuo_cfun1 -irr0 irrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quo_IirrE",
            "line_nb": 1668,
            "steps": [
                {
                    "command": [
                        "by move=> nsHG kerH; rewrite cfIirrE ?cfQuo_irr ?mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quo_Iirr_eq0",
            "line_nb": 1671,
            "steps": [
                {
                    "command": [
                        "by move=> nsHG kerH; rewrite -!irr_eq1 quo_IirrE ?cfQuo_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quo_IirrK",
            "line_nb": 1678,
            "steps": [
                {
                    "command": [
                        "by move=> nsHG kerH; apply: irr_inj; rewrite mod_IirrE ?quo_IirrE ?cfQuoK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quo_IirrKeq",
            "line_nb": 1681,
            "steps": [
                {
                    "command": [
                        "move=> nsHG i; apply/eqP/idP=> [<- | ]; last exact: quo_IirrK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mod_IirrE ?cfker_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_Iirr_bij",
            "line_nb": 1685,
            "steps": [
                {
                    "command": [
                        "by exists (quo_Iirr H) => [i _ | i]; [apply: mod_IirrK | apply: quo_IirrK].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_norm_irr_quo",
            "line_nb": 1688,
            "steps": [
                {
                    "command": [
                        "move=> Gx nsHG; rewrite (reindex _ (mod_Iirr_bij nsHG)) /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply/esym/eq_big=> [i | i _]; rewrite mod_IirrE ?cfker_mod ?cfModE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cap_cfker_normal",
            "line_nb": 1692,
            "steps": [
                {
                    "command": [
                        "move=> nsHG; have [sHG nHG] := andP nsHG; set lhs := \\bigcap_(i | _) _.",
                        "VernacExtend",
                        "6906082dc4e4de681fde447f312d63a57f7b8e2d"
                    ]
                },
                {
                    "command": [
                        "have nHlhs: lhs \\subset 'N(H) by rewrite (bigcap_min 0) ?cfker_irr0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/esym/eqP; rewrite eqEsubset (introT bigcapsP) //= -quotient_sub1 //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite -(TI_cfker_irr (G / H)); apply/bigcapsP=> i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_quotient_pre // (bigcap_min (mod_Iirr i)) ?mod_IirrE ?cfker_mod //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfker_morph ?subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfker_reg_quo",
            "line_nb": 1700,
            "steps": [
                {
                    "command": [
                        "move=> nsHG; have [sHG nHG] := andP nsHG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> x; rewrite cfkerEchar ?cfMod_char ?cfReg_char //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite -[in RHS in _ = RHS](setIidPr sHG) !inE; apply: andb_id2l => Gx.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite !cfModE // !cfRegE // morph1 eqxx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (sameP eqP (kerP _ (subsetP nHG x Gx))) ker_coset.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!mulrnA eqr_nat eqn_pmul2l ?cardG_gt0 // (can_eq oddb) eqb_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_irr_der1",
            "line_nb": 1712,
            "steps": [
                {
                    "command": [
                        "apply/idP/idP=> [|sG'K]; first by apply: lin_char_der1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have nsG'G: G^`(1) <| G := der_normal 1 G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite qualifE irr_char -[i](quo_IirrK nsG'G) // mod_IirrE //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfModE // morph1 lin_char1 //; apply/char_abelianP/der_abelian.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subGcfker",
            "line_nb": 1718,
            "steps": [
                {
                    "command": [
                        "rewrite -irr_eq1; apply/idP/eqP=> [chiG1 | ->]; last by rewrite cfker_cfun1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/cfun_inP=> x Gx; rewrite cfun1E Gx cfker1 ?(subsetP chiG1) ?lin_char1 //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite lin_irr_der1 (subset_trans (der_sub 1 G)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cap_cfker_lin_irr",
            "line_nb": 1731,
            "steps": [
                {
                    "command": [
                        "rewrite -(cap_cfker_normal (der_normal 1 G)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigl => i; rewrite lin_irr_der1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_lin_irr",
            "line_nb": 1735,
            "steps": [
                {
                    "command": [
                        "have nsG'G := der_normal 1 G; rewrite (eq_card (@lin_irr_der1 G)).",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "rewrite -(on_card_preimset (mod_Iirr_bij nsG'G)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -card_quotient ?normal_norm //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: (der_abelian 0 G); rewrite card_classes_abelian; move/eqP<-.",
                        "VernacExtend",
                        "3a65ea1b6b22307e89e32603f079817b80e7bf25"
                    ]
                },
                {
                    "command": [
                        "rewrite -NirrE -[X in _ = X]card_ord.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_card => i; rewrite !inE mod_IirrE ?cfker_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "solvable_has_lin_char",
            "line_nb": 1743,
            "steps": [
                {
                    "command": [
                        "move=> ntG solG.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "suff /subsetPn[i]: ~~ ([pred i | 'chi[G]_i \\is a linear_char] \\subset pred1 0).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE -(inj_eq irr_inj) irr0; exists i.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (contra (@subset_leq_card _ _ _)) // -ltnNge card1 card_lin_irr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite indexg_gt1 proper_subn // (sol_der1_proper solG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfExp_prime_transitive",
            "line_nb": 1783,
            "steps": [
                {
                    "command": [
                        "set p := #|G| => pr_p nz_i nz_j; have cycG := prime_cyclic pr_p.",
                        "VernacExtend",
                        "d2991b7607b6316c9d43d28c85f87ca601299ca6"
                    ]
                },
                {
                    "command": [
                        "have [L [h [injh oL Lh h_ontoL]] [h1 hM hX _ o_h]] := lin_char_group G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (derG1P (cyclic_abelian cycG)) indexg1 -/p in oL.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have /fin_all_exists[h' h'K] := h_ontoL _ (irr_cyclic_lin _ cycG).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have o_h' k: k != 0 -> #[h' k] = p.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -cforder_irr_eq1 h'K -o_h => nt_h'k.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply/prime_nt_dvdP=> //; rewrite cforder_lin_char_dvdG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{oL} genL k: k != 0 -> generator [set: L] (h' k).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> /o_h' o_h'k; rewrite /generator eq_sym eqEcard subsetT /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite cardsT oL -o_h'k.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [/(_ =P <[_]>)-> gen_j] := (genL i nz_i, genL j nz_j).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have /cycleP[k Dj] := cycle_generator gen_j.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !h'K Dj o_h hX generator_coprime coprime_sym in gen_j *; exists k.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_subcent1_coset",
            "line_nb": 1798,
            "steps": [
                {
                    "command": [
                        "move=> Gx nsHG; rewrite -leC_nat.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move: (second_orthogonality_relation x Gx); rewrite mulrb class_refl => <-.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "have GHx: coset H x \\in (G / H)%g by apply: mem_quotient.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move: (second_orthogonality_relation (coset H x) GHx).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrb class_refl => <-.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -2!(eq_bigr _ (fun _ _ => normCK _)) sum_norm_irr_quo // -subr_ge0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (bigID (fun i => H \\subset cfker 'chi[G]_i)) //= addrC addKr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: sumr_ge0 => i _; rewrite normCK mul_conjC_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "det_is_repr",
            "line_nb": 1815,
            "steps": [
                {
                    "command": [
                        "split=> [|g h Gg Gh]; first by rewrite /det_repr_mx repr_mx1 det1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /det_repr_mx repr_mxM // det_mulmx !mulmxE scalar_mxM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "detRepr_lin_char",
            "line_nb": 1821,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE cfRepr_char cfunE group1 repr_mx1 mxtrace1 mulr1n /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDet_lin_char",
            "line_nb": 1826,
            "steps": [
                {
                    "command": [
                        "by apply: rpred_prod => i _; apply: rpredX; apply: detRepr_lin_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDetD",
            "line_nb": 1829,
            "steps": [
                {
                    "command": [
                        "move=> phi psi Nphi Npsi; rewrite /= -big_split; apply: eq_bigr => i _ /=.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "by rewrite -exprD cfdotDl truncCD ?nnegrE ?Cnat_ge0 // Cnat_cfdot_char_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDet0",
            "line_nb": 1833,
            "steps": [
                {
                    "command": [
                        "by rewrite /cfDet big1 // => i _; rewrite cfdot0l truncC0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDetMn",
            "line_nb": 1836,
            "steps": [
                {
                    "command": [
                        "move=> phi Nphi; elim: k => [|k IHk]; rewrite ?cfDet0 // mulrS exprS -{}IHk.",
                        "VernacExtend",
                        "cbbd752ffe762291637c91622d62599b0c60d123"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfDetD ?rpredMn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDet_id",
            "line_nb": 1862,
            "steps": [
                {
                    "command": [
                        "move=> lin_xi; have /irrP[i Dxi] := lin_char_irr lin_xi.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply/cfun_inP=> x Gx; rewrite Dxi -irrRepr cfDetRepr !cfunE trace_mx11 mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "move: lin_xi (_ x) => /andP[_]; rewrite Dxi irr1_degree pnatr_eq1 => /eqP-> X.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite {1}[X]mx11_scalar det_scalar1 trace_mx11.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDet_order_lin",
            "line_nb": 1869,
            "steps": [
                {
                    "command": [
                        "by rewrite /cfDet_order => /cfDet_id->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDet_order_dvdG",
            "line_nb": 1872,
            "steps": [
                {
                    "command": [
                        "by rewrite cforder_lin_char_dvdG ?cfDet_lin_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDetRes",
            "line_nb": 1879,
            "steps": [
                {
                    "command": [
                        "move=> Nphi; have [sGH | not_sHG] := boolP (H \\subset G); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have /CnatP[n Dphi1] := Cnat_char1 Nphi.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !cfResEout // Dphi1 lin_char1 ?cfDet_lin_char // scale1r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite scaler_nat cfDetMn ?cfDet_id ?rpred1 // expr1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [rG ->] := char_reprP Nphi; rewrite !(=^~ cfRepr_sub, cfDetRepr) //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "apply: cfRepr_sim; exists 1%:M; rewrite ?row_free_unit ?unitmx1 // => x Hx.",
                        "VernacExtend",
                        "9e798e521a9db668aedef2dda1df7ee49f2b4edd"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmx1 mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDetMorph",
            "line_nb": 1888,
            "steps": [
                {
                    "command": [
                        "move=> Nphi; have [sGD | not_sGD] := boolP (G \\subset D); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have /CnatP[n Dphi1] := Cnat_char1 Nphi.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !cfMorphEout // Dphi1 lin_char1 ?cfDet_lin_char // scale1r.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite scaler_nat cfDetMn ?cfDet_id ?rpred1 // expr1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [rG ->] := char_reprP Nphi; rewrite !(=^~ cfRepr_morphim, cfDetRepr) //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "apply: cfRepr_sim; exists 1%:M; rewrite ?row_free_unit ?unitmx1 // => x Hx.",
                        "VernacExtend",
                        "9e798e521a9db668aedef2dda1df7ee49f2b4edd"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmx1 mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDetIsom",
            "line_nb": 1897,
            "steps": [
                {
                    "command": [
                        "rewrite rmorph_prod /cfDet (reindex (isom_Iirr isoGR)); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists (isom_Iirr (isom_sym isoGR)) => i; rewrite ?isom_IirrK ?isom_IirrKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => i; rewrite -!cfDetRepr !irrRepr isom_IirrE rmorphX cfIsom_iso.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= ![in cfIsom _]unlock cfDetMorph ?cfRes_char ?cfDetRes ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDet_mul_lin",
            "line_nb": 1903,
            "steps": [
                {
                    "command": [
                        "case/andP=> /char_reprP[[n1 rG1] ->] /= n1_1 /char_reprP[[n2 rG2] ->] /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "do [rewrite !cfRepr1 pnatr_eq1 natCK; move/eqP] in n1_1 *.",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "rewrite {n1}n1_1 in rG1 *; rewrite cfRepr_prod cfDetRepr.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "apply/cfun_inP=> x Gx; rewrite !cfunE cfDetRepr cfunE Gx !mulrb !trace_mx11.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite !mxE prod_repr_lin ?mulrb //=; case: _ / (esym _); rewrite detZ.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "congr (_ * _); case: {rG2}n2 => [|n2]; first by rewrite cfun1E Gx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite expS_cfunE //= cfunE Gx trace_mx11.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfcenter_group_set",
            "line_nb": 1928,
            "steps": [
                {
                    "command": [
                        "have [[rG ->] | /negbTE notNphi] := altP (@char_reprP _ G phi).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfcenter_repr groupP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /cfcenter notNphi groupP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "char_cfcenterE",
            "line_nb": 1934,
            "steps": [
                {
                    "command": [
                        "by move=> Nchi Gx; rewrite /cfcenter Nchi inE Gx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_cfcenterE",
            "line_nb": 1937,
            "steps": [
                {
                    "command": [
                        "by move/char_cfcenterE->; rewrite ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfcenter_sub",
            "line_nb": 1940,
            "steps": [
                {
                    "command": [
                        "by rewrite /cfcenter /cfker !setIdE -fun_if subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfcenter_normal",
            "line_nb": 1949,
            "steps": [
                {
                    "command": [
                        "have [[rG ->] | /negbTE notNphi] := altP (@char_reprP _ _ phi).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfcenter_repr rcenter_normal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /cfcenter notNphi cfker_normal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfcenter_Res",
            "line_nb": 1954,
            "steps": [
                {
                    "command": [
                        "have [[rG ->] | /negbTE notNphi] := altP (@char_reprP _ _ chi); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists 1; first exact: cfun1_lin_char.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /cfcenter notNphi; apply/cfun_inP=> x Kx.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfunE cfun1E Kx mulr1 cfResE ?cfker_sub // cfker1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite cfcenter_repr -(cfRepr_sub _ (normal_sub (rcenter_normal _))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: rG => [[|n] rG] /=; rewrite cfRepr1.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "exists 1; first exact: cfun1_lin_char.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/cfun_inP=> x Zx; rewrite scale0r !cfunE flatmx0 raddf0 Zx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose rZmx x := ((rG x 0 0)%:M : 'M_(1,1)).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have rZmxP: mx_repr [group of rcenter rG] rZmx.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "split=> [|x y]; first by rewrite /rZmx repr_mx1 mxE eqxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=> /setIdP[Gx /is_scalar_mxP[a rGx]] /setIdP[Gy /is_scalar_mxP[b rGy]].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite /rZmx repr_mxM // rGx rGy -!scalar_mxM !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (cfRepr (MxRepresentation rZmxP)).",
                        "VernacExtend",
                        "bd72c92adbe592748fbe79605766ce447eb4dee0"
                    ]
                },
                {
                    "command": [
                        "by rewrite qualifE cfRepr_char cfRepr1 eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/cfun_inP=> x Zx; rewrite !cfunE Zx /= /rZmx mulr_natl.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case/setIdP: Zx => Gx /is_scalar_mxP[a ->]; rewrite mxE !mxtrace_scalar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfcenter_subset_center",
            "line_nb": 1993,
            "steps": [
                {
                    "command": [
                        "case Nchi: (chi \\is a character); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /cfcenter Nchi trivg_quotient sub1G.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite subsetI quotientS ?cfcenter_sub // quotient_cents2r //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case/char_reprP: Nchi => rG ->{chi}; rewrite cfker_repr cfcenter_repr gen_subG.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> _ /imset2P[x y /setIdP[Gx /is_scalar_mxP[c rGx]] Gy ->].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite inE groupR //= !repr_mxM ?groupM ?groupV // rGx -(scalar_mxC c) -rGx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulmxA !repr_mxKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cap_cfcenter_irr",
            "line_nb": 2013,
            "steps": [
                {
                    "command": [
                        "apply/esym/eqP; rewrite eqEsubset (introT bigcapsP) /= => [|i _]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -(quotientSGK _ (normal_sub (cfker_center_normal _))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfcenter_eq_center morphim_center.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite subIset // normal_norm // cfker_normal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "set Z := \\bigcap_i _.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "have sZG: Z \\subset G by rewrite (bigcap_min 0) ?cfcenter_sub.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite subsetI sZG (sameP commG1P trivgP) -(TI_cfker_irr G).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/bigcapsP=> i _; have nKiG := normal_norm (cfker_normal 'chi_i).",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "rewrite -quotient_cents2 ?(subset_trans sZG) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (subset_trans (quotientS _ (bigcap_inf i _))) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfcenter_eq_center subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfnorm_Res_lerif",
            "line_nb": 2026,
            "steps": [
                {
                    "command": [
                        "move=> sHG; rewrite cfun_onE mulrCA natf_indexg // -mulrA mulKf ?neq0CG //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite (big_setID H) (setIidPr sHG) /= addrC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (mono_lerif (ler_pmul2l _)) ?invr_gt0 ?gt0CG // -lerif_subLR -sumrB.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite big1 => [|x Hx]; last by rewrite !cfResE ?subrr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have ->: (support phi \\subset H) = (G :\\: H \\subset [set x | phi x == 0]).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite subDset setUC -subDset; apply: eq_subset => x.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE (andb_idr (contraR _)) // => /cfun0->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (sameP subsetP forall_inP); apply: lerif_0_sum => x _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE /<?=%R mul_conjC_ge0 eq_sym mul_conjC_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_faithful_center",
            "line_nb": 2061,
            "steps": [
                {
                    "command": [
                        "rewrite (isog_cyclic (isog_center (quotient1_isog G))) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move/trivgP <-; rewrite -cfcenter_eq_center cfcenter_cyclic.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfcenter_fful_irr",
            "line_nb": 2065,
            "steps": [
                {
                    "command": [
                        "move/trivgP=> Ki1; have:= cfcenter_eq_center i; rewrite {}Ki1.",
                        "VernacExtend",
                        "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
                    ]
                },
                {
                    "command": [
                        "have inj1: 'injm (@coset gT 1%g) by rewrite ker_coset.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -injm_center; first apply: injm_morphim_inj; rewrite ?norms1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pgroup_cyclic_faithful",
            "line_nb": 2070,
            "steps": [
                {
                    "command": [
                        "pose Z := 'Ohm_1('Z(G)) => pG cycZG; have nilG := pgroup_nil pG.",
                        "VernacExtend",
                        "d2991b7607b6316c9d43d28c85f87ca601299ca6"
                    ]
                },
                {
                    "command": [
                        "have [-> | ntG] := eqsVneq G [1]; first by exists 0; apply: cfker_sub.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have{pG} [[p_pr _ _] pZ] := (pgroup_pdiv pG ntG, pgroupS (center_sub G) pG).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have ntZ: 'Z(G) != [1] by rewrite center_nil_eq1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have{pZ} oZ: #|Z| = p by apply: Ohm1_cyclic_pgroup_prime.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/existsP; apply: contraR ntZ; rewrite negb_exists => /forallP-not_ffulG.",
                        "VernacExtend",
                        "1d32417824786a65f5ff40d1d9dc083be853a4a7"
                    ]
                },
                {
                    "command": [
                        "rewrite -Ohm1_eq1 -subG1 /= -/Z -(TI_cfker_irr G); apply/bigcapsP=> i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite prime_meetG ?oZ // setIC meet_Ohm1 // meet_center_nil ?cfker_normal //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -subG1 not_ffulG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfInd_char",
            "line_nb": 2085,
            "steps": [
                {
                    "command": [
                        "move=> Nchi; apply/forallP=> i; rewrite coord_cfdot -Frobenius_reciprocity //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite Cnat_cfdot_char ?cfRes_char ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfInd_eq0",
            "line_nb": 2089,
            "steps": [
                {
                    "command": [
                        "move=> sHG Nchi; rewrite -!(char1_eq0) ?cfInd_char // cfInd1 //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite (mulrI_eq0 _ (mulfI _)) ?neq0CiG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ind_irr_neq0",
            "line_nb": 2093,
            "steps": [
                {
                    "command": [
                        "by move/cfInd_eq0->; rewrite ?irr_neq0 ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constt_cfRes_irr",
            "line_nb": 2097,
            "steps": [
                {
                    "command": [
                        "apply/sigW/neq0_has_constt/Res_irr_neq0.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constt_cfInd_irr",
            "line_nb": 2100,
            "steps": [
                {
                    "command": [
                        "by move=> sHG; apply/sigW/neq0_has_constt/Ind_irr_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfker_Res",
            "line_nb": 2103,
            "steps": [
                {
                    "command": [
                        "move=> sHG Nphi; apply/setP=> x; rewrite !cfkerEchar ?cfRes_char // !inE.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by apply/andb_id2l=> Hx; rewrite (subsetP sHG) ?cfResE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfker_Ind",
            "line_nb": 2107,
            "steps": [
                {
                    "command": [
                        "move=> sHG Nchi nzchi; rewrite !cfker_nzcharE ?cfInd_char ?cfInd_eq0 //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> x; rewrite inE cfIndE // (can2_eq (mulVKf _) (mulKf _)) ?neq0CG //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite cfInd1 // mulrA -natrM Lagrange // mulr_natl -sumr_const.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/eqP/bigcapP=> [/normC_sum_upper ker_chiG_x y Gy | ker_chiG_x].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mem_conjg inE ker_chiG_x ?groupV // => z _; apply: char1_ge_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => y /groupVr/ker_chiG_x; rewrite mem_conjgV inE => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfker_Ind_irr",
            "line_nb": 2115,
            "steps": [
                {
                    "command": [
                        "by move/cfker_Ind->; rewrite ?irr_neq0 ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}