{
    "filename": "mathcomp/character/inertia.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat seq path choice div.",
            "VernacRequire",
            "a69285f7aa17ed79aa8fd0b766a2adfda75599e2"
        ],
        [
            "From mathcomp Require Import fintype tuple finfun bigop prime ssralg ssrnum finset fingroup.",
            "VernacRequire",
            "0ed6eed6bf4727b0c71e556882e24183c5934d53"
        ],
        [
            "From mathcomp Require Import morphism perm automorphism quotient action zmodp cyclic center.",
            "VernacRequire",
            "0f8bffc95143603f158c0ba08c9139f7e836ebf9"
        ],
        [
            "From mathcomp Require Import gproduct commutator gseries nilpotent pgroup sylow maximal.",
            "VernacRequire",
            "9d75f09e08a0edb6a03f7848bb6414ada735ef16"
        ],
        [
            "From mathcomp Require Import frobenius.",
            "VernacRequire",
            "d2bcc334277336d966da38f69891445891a1b63b"
        ],
        [
            "From mathcomp Require Import matrix mxalgebra mxrepresentation vector algC classfun character.",
            "VernacRequire",
            "eaa790f1caa462f8b56c1754d49b3afa47e2ad50"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope GRing.Theory Num.Theory.",
            "VernacImport",
            "8d87fd9194cd0dee18ad3305b14d36d18908f225"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Reserved Notation \"''I[' phi ]\" (at level 8, format \"''I[' phi ]\").",
            "VernacSyntaxExtension",
            "c7371dc81f4b7ea966a6f3149f2657f7be625dcb"
        ],
        [
            "Reserved Notation \"''I_' G [ phi ]\" (at level 8, G at level 2, format \"''I_' G [ phi ]\").",
            "VernacSyntaxExtension",
            "f043d1f26e1378bc352370d84d05b42063d818ad"
        ],
        [
            "Section ConjDef.",
            "VernacBeginSection",
            "645663564cfe730e01e8c313da656ced9af9ff78"
        ],
        [
            "Variables (gT : finGroupType) (B : {set gT}) (y : gT) (phi : 'CF(B)).",
            "VernacAssumption",
            "e5b336a5443b50bf8ddf50737183f50f2bc2f1d8"
        ],
        [
            "Local Notation G := <<B>>.",
            "VernacSyntacticDefinition",
            "a95cf71357b07290b01b1fcb761af850a32bc9df"
        ],
        [
            "Fact cfConjg_subproof : is_class_fun G [ffun x => phi (if y \\in 'N(G) then x ^ y^-1 else x)].",
            "VernacStartTheoremProof",
            "4529bd87c26d7453b88aa63c804581ea075faae6"
        ],
        [
            "apply: intro_class_fun => [x z _ Gz | x notGx].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have [nGy | _] := ifP; last by rewrite cfunJgen.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -conjgM conjgC conjgM cfunJgen // memJ_norm ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite cfun0gen //; case: ifP => // nGy; rewrite memJ_norm ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cfConjg := Cfun 1 cfConjg_subproof.",
            "VernacDefinition",
            "b2af8ce93f1a68f9e52c19df18a442d93a528fc2"
        ],
        [
            "End ConjDef.",
            "VernacEndSegment",
            "810af1b71660ab9bd028b99ad7d426008940852f"
        ],
        [
            "Prenex Implicits cfConjg.",
            "VernacExtend",
            "4bc48670db278409d36744061baf2720c5d93eb1"
        ],
        [
            "Notation \"f ^ y\" := (cfConjg y f) : cfun_scope.",
            "VernacNotation",
            "e2fd758391f726ffb9776530a8e4a0e6b9a8a42e"
        ],
        [
            "Section Conj.",
            "VernacBeginSection",
            "839cf58f3a96bbc97e9c075b50ec7c91bc456888"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Implicit Type phi : 'CF(G).",
            "VernacReserve",
            "bcf00046d04ca7e49247bcc7d2f971058574f29d"
        ],
        [
            "Lemma cfConjgE phi y x : y \\in 'N(G) -> (phi ^ y)%CF x = phi (x ^ y^-1)%g.",
            "VernacStartTheoremProof",
            "e9c0533215e7efa657a11ddb4d5a190c8c28fa2d"
        ],
        [
            "by rewrite cfunElock genGid => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgEJ phi y x : y \\in 'N(G) -> (phi ^ y)%CF (x ^ y) = phi x.",
            "VernacStartTheoremProof",
            "4e07e5479527a8fbf770796878ca2e383be738b6"
        ],
        [
            "by move/cfConjgE->; rewrite conjgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgEout phi y : y \\notin 'N(G) -> (phi ^ y = phi)%CF.",
            "VernacStartTheoremProof",
            "306497aade26e54f83a502fb987f77ae7ee70a53"
        ],
        [
            "by move/negbTE=> notNy; apply/cfunP=> x; rewrite !cfunElock genGid notNy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgEin phi y (nGy : y \\in 'N(G)) : (phi ^ y)%CF = cfIsom (norm_conj_isom nGy) phi.",
            "VernacStartTheoremProof",
            "94704ad82cab178cb9a69bbf2201d68e60ca065f"
        ],
        [
            "apply/cfun_inP=> x Gx.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite cfConjgE // -{2}[x](conjgKV y) cfIsomE ?memJ_norm ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgMnorm phi : {in 'N(G) &, forall y z, phi ^ (y * z) = (phi ^ y) ^ z}%CF.",
            "VernacStartTheoremProof",
            "6802191baa40776fc6a0ccf2e28839e6178c7937"
        ],
        [
            "move=> y z nGy nGz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply/cfunP=> x; rewrite !cfConjgE ?groupM // invMg conjgM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjg_id phi y : y \\in G -> (phi ^ y)%CF = phi.",
            "VernacStartTheoremProof",
            "712d9211fc3ec375a1e7e0f3bc1d2c4450f2b313"
        ],
        [
            "move=> Gy; apply/cfunP=> x; have nGy := subsetP (normG G) y Gy.",
            "VernacExtend",
            "fcbc4db6275a8d44907e8ed4b44d2f7f279ee662"
        ],
        [
            "by rewrite -(cfunJ _ _ Gy) cfConjgEJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgM L phi : G <| L -> {in L &, forall y z, phi ^ (y * z) = (phi ^ y) ^ z}%CF.",
            "VernacStartTheoremProof",
            "24b47cdd1cd7a600b8b5f1c6ffeefde4e3e6d42e"
        ],
        [
            "by case/andP=> _ /subsetP nGL; apply: sub_in2 (cfConjgMnorm phi).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgJ1 phi : (phi ^ 1)%CF = phi.",
            "VernacStartTheoremProof",
            "c1433c2524d7da545502a7dca964bc8df55c6d37"
        ],
        [
            "by apply/cfunP=> x; rewrite cfConjgE ?group1 // invg1 conjg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgK y : cancel (cfConjg y) (cfConjg y^-1 : 'CF(G) -> 'CF(G)).",
            "VernacStartTheoremProof",
            "c948cf922aa69fecf9c4bad963e027396477ee6c"
        ],
        [
            "move=> phi; apply/cfunP=> x; rewrite !cfunElock groupV /=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case: ifP => -> //; rewrite conjgKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgKV y : cancel (cfConjg y^-1) (cfConjg y : 'CF(G) -> 'CF(G)).",
            "VernacStartTheoremProof",
            "81a26ee45a3776e01cbe26695034f54e6d5ecff3"
        ],
        [
            "by move=> phi /=; rewrite -{1}[y]invgK cfConjgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjg1 phi y : (phi ^ y)%CF 1%g = phi 1%g.",
            "VernacStartTheoremProof",
            "e1b3a1518799bfe92b49199b48605463d80f6df9"
        ],
        [
            "by rewrite cfunElock conj1g if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact cfConjg_is_linear y : linear (cfConjg y : 'CF(G) -> 'CF(G)).",
            "VernacStartTheoremProof",
            "2c10ffc20970b844ec81931d237b41ba0adda7e7"
        ],
        [
            "by move=> a phi psi; apply/cfunP=> x; rewrite !cfunElock.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical cfConjg_additive y := Additive (cfConjg_is_linear y).",
            "VernacDefinition",
            "f6f0d66e27032e7ff93a8fc1ac10f8e06a3516a7"
        ],
        [
            "Canonical cfConjg_linear y := AddLinear (cfConjg_is_linear y).",
            "VernacDefinition",
            "c6b4b7c66700ca9eb31c908a1ffce8f7aef90606"
        ],
        [
            "Lemma cfConjg_cfuniJ A y : y \\in 'N(G) -> ('1_A ^ y)%CF = '1_(A :^ y) :> 'CF(G).",
            "VernacStartTheoremProof",
            "69d3e3c4a04bdb69f136383e68ee118ad670a5d9"
        ],
        [
            "move=> nGy; apply/cfunP=> x; rewrite !cfunElock genGid nGy -sub_conjgV.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -class_lcoset -class_rcoset norm_rlcoset ?memJ_norm ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjg_cfuni A y : y \\in 'N(A) -> ('1_A ^ y)%CF = '1_A :> 'CF(G).",
            "VernacStartTheoremProof",
            "54f2793e2164422502051fbf2a152c5a46ff106e"
        ],
        [
            "by have [/cfConjg_cfuniJ-> /normP-> | /cfConjgEout] := boolP (y \\in 'N(G)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjg_cfun1 y : (1 ^ y)%CF = 1 :> 'CF(G).",
            "VernacStartTheoremProof",
            "9b3f7e0386d250587b1bf4a476bbe21e82f46fa8"
        ],
        [
            "by rewrite -cfuniG; have [/cfConjg_cfuni|/cfConjgEout] := boolP (y \\in 'N(G)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact cfConjg_is_multiplicative y : multiplicative (cfConjg y : _ -> 'CF(G)).",
            "VernacStartTheoremProof",
            "fbdac06ef2948af10722405728f3c2662fac5726"
        ],
        [
            "split=> [phi psi|]; last exact: cfConjg_cfun1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/cfunP=> x; rewrite !cfunElock.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical cfConjg_rmorphism y := AddRMorphism (cfConjg_is_multiplicative y).",
            "VernacDefinition",
            "08d0245f0a974b34e48dec11951c28f5ccc2a9bd"
        ],
        [
            "Canonical cfConjg_lrmorphism y := [lrmorphism of cfConjg y].",
            "VernacDefinition",
            "a6648ddc57ff017e1103b7fb32985fbc7171d93b"
        ],
        [
            "Lemma cfConjg_eq1 phi y : ((phi ^ y)%CF == 1) = (phi == 1).",
            "VernacStartTheoremProof",
            "906bfbd6fdcd09975a16f4673ecad885b642d534"
        ],
        [
            "by apply: rmorph_eq1; apply: can_inj (cfConjgK y).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfAutConjg phi u y : cfAut u (phi ^ y) = (cfAut u phi ^ y)%CF.",
            "VernacStartTheoremProof",
            "2ca27e6e1af4a8f99b7db2611c9be92e30b88ff5"
        ],
        [
            "by apply/cfunP=> x; rewrite !cfunElock.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_cfConjg phi y : (phi ^ y)^*%CF = (phi^* ^ y)%CF.",
            "VernacStartTheoremProof",
            "924c735512db7fc75511226961c43d575a10f48d"
        ],
        [
            "exact: cfAutConjg.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfker_conjg phi y : y \\in 'N(G) -> cfker (phi ^ y) = cfker phi :^ y.",
            "VernacStartTheoremProof",
            "4f2f582dbfa62b0070a96ccb66d8fc2675a586d3"
        ],
        [
            "move=> nGy; rewrite cfConjgEin // cfker_isom.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite morphim_conj (setIidPr (cfker_sub _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfDetConjg phi y : cfDet (phi ^ y) = (cfDet phi ^ y)%CF.",
            "VernacStartTheoremProof",
            "c8a9bfbedde8dce71a74eda53166b6e99aa06b56"
        ],
        [
            "have [nGy | not_nGy] := boolP (y \\in 'N(G)); last by rewrite !cfConjgEout.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !cfConjgEin cfDetIsom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Conj.",
            "VernacEndSegment",
            "43a78d96f96968f04bfb2aaaaeb46f825334c5d6"
        ],
        [
            "Section Inertia.",
            "VernacBeginSection",
            "854c8b0511a0d5ed18b976a9e7df92cb569b09a2"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Definition inertia (B : {set gT}) (phi : 'CF(B)) := [set y in 'N(B) | (phi ^ y)%CF == phi].",
            "VernacDefinition",
            "cef4f5c0661c0d038c192849be46502189291664"
        ],
        [
            "Local Notation \"''I[' phi ]\" := (inertia phi) : group_scope.",
            "VernacNotation",
            "041781c736a557fb01b0e0d0d7d114496bd2aaf3"
        ],
        [
            "Local Notation \"''I_' G [ phi ]\" := (G%g :&: 'I[phi]) : group_scope.",
            "VernacNotation",
            "dd4d7b5619800637a8f03fb1328ad83d53491947"
        ],
        [
            "Fact group_set_inertia (H : {group gT}) phi : group_set 'I[phi : 'CF(H)].",
            "VernacStartTheoremProof",
            "f09c3571b598d500cc379506dcdae535ebcf821b"
        ],
        [
            "apply/group_setP; split; first by rewrite inE group1 /= cfConjgJ1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> y z /setIdP[nHy /eqP n_phi_y] /setIdP[nHz n_phi_z].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite inE groupM //= cfConjgMnorm ?n_phi_y.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical inertia_group H phi := Group (@group_set_inertia H phi).",
            "VernacDefinition",
            "5f6dad9e1501c611abef4c4d93bf2ca73e30fc53"
        ],
        [
            "Local Notation \"''I[' phi ]\" := (inertia_group phi) : Group_scope.",
            "VernacNotation",
            "d0ecaaf760c0ba4fb37054a4002170d9f9e7114f"
        ],
        [
            "Local Notation \"''I_' G [ phi ]\" := (G :&: 'I[phi])%G : Group_scope.",
            "VernacNotation",
            "ed8a3c4312a337eee8d93eb7a248e6c137e600c2"
        ],
        [
            "Variables G H : {group gT}.",
            "VernacAssumption",
            "b7838ac911594f2718dd1e9de8e135dda3e6f9f8"
        ],
        [
            "Implicit Type phi : 'CF(H).",
            "VernacReserve",
            "bda34e2c429f9a788b0f29b1bb1009c0d03fb832"
        ],
        [
            "Lemma inertiaJ phi y : y \\in 'I[phi] -> (phi ^ y)%CF = phi.",
            "VernacStartTheoremProof",
            "75a358874eebedd00ea9eadf75d63d55328180a3"
        ],
        [
            "by case/setIdP=> _ /eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_valJ phi x y : y \\in 'I[phi] -> phi (x ^ y)%g = phi x.",
            "VernacStartTheoremProof",
            "d3ad4cc644f4de4310f0ce8b71bfcf87cf0fdc1c"
        ],
        [
            "by case/setIdP=> nHy /eqP {1}<-; rewrite cfConjgEJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inertia_sub phi : 'I_G[phi] \\subset G.",
            "VernacStartTheoremProof",
            "02239bca92eef7f45d97917a56b290ff91cc8f85"
        ],
        [
            "exact: subsetIl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_inertia phi : 'I[phi] \\subset 'N(H).",
            "VernacStartTheoremProof",
            "f1aa2d44a8b0dc61d050afd320188fe68ea32fc8"
        ],
        [
            "by rewrite ['I[_]]setIdE subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_inertia phi : H \\subset 'I[phi].",
            "VernacStartTheoremProof",
            "ca8d05bc9c61debf9381bbe19869d618e23d6d12"
        ],
        [
            "by apply/subsetP=> y Hy; rewrite inE cfConjg_id ?(subsetP (normG H)) /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normal_inertia phi : H <| 'I[phi].",
            "VernacStartTheoremProof",
            "505d8c2599faedb6f861ef8b5a1d0f0ad1f55cb2"
        ],
        [
            "by rewrite /normal sub_inertia norm_inertia.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_Inertia phi : H \\subset G -> H \\subset 'I_G[phi].",
            "VernacStartTheoremProof",
            "c8e65ca0019f5b719bf130dc463195c5938b2f67"
        ],
        [
            "by rewrite subsetI sub_inertia andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_Inertia phi : 'I_G[phi] \\subset 'N(H).",
            "VernacStartTheoremProof",
            "45db544be4f60543941d4cf106a546813a228249"
        ],
        [
            "by rewrite setIC subIset ?norm_inertia.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normal_Inertia phi : H \\subset G -> H <| 'I_G[phi].",
            "VernacStartTheoremProof",
            "3904e93547accc9e650f6091f29dfaa87f0fcca0"
        ],
        [
            "by rewrite /normal norm_Inertia andbT; apply: sub_Inertia.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjg_eqE phi : H <| G -> {in G &, forall y z, (phi ^ y == phi ^ z)%CF = (z \\in 'I_G[phi] :* y)}.",
            "VernacStartTheoremProof",
            "9776a8acfb0ae4b311c50e36e6c5bc17d6088cb0"
        ],
        [
            "case/andP=> _ nHG y z Gy; rewrite -{1 2}[z](mulgKV y) groupMr // mem_rcoset.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "move: {z}(z * _)%g => z Gz; rewrite 2!inE Gz cfConjgMnorm ?(subsetP nHG) //=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite eq_sym (can_eq (cfConjgK y)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cent_sub_inertia phi : 'C(H) \\subset 'I[phi].",
            "VernacStartTheoremProof",
            "01e2362931a9362e531033464e8f5dae2e3351ed"
        ],
        [
            "apply/subsetP=> y cHy; have nHy := subsetP (cent_sub H) y cHy.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite inE nHy; apply/eqP/cfun_inP=> x Hx; rewrite cfConjgE //.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by rewrite /conjg invgK mulgA (centP cHy) ?mulgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cent_sub_Inertia phi : 'C_G(H) \\subset 'I_G[phi].",
            "VernacStartTheoremProof",
            "f7455b2143f5ae5660e40afbf04c78dbd3998214"
        ],
        [
            "exact: setIS (cent_sub_inertia phi).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma center_sub_Inertia phi : H \\subset G -> 'Z(G) \\subset 'I_G[phi].",
            "VernacStartTheoremProof",
            "5be2cd7123ac8f98837e670467ef1b1461797029"
        ],
        [
            "by move/centS=> sHG; rewrite setIS // (subset_trans sHG) // cent_sub_inertia.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjg_inertia phi y : y \\in 'N(H) -> 'I[phi] :^ y = 'I[phi ^ y].",
            "VernacStartTheoremProof",
            "47094014e18a3b21eee89903a5bb7371e1e94743"
        ],
        [
            "move=> nHy; apply/setP=> z; rewrite !['I[_]]setIdE conjIg conjGid // !in_setI.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply/andb_id2l=> nHz; rewrite mem_conjg !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite !cfConjgMnorm ?in_group ?(can2_eq (cfConjgKV y) (cfConjgK y)) ?invgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia0 : 'I[0 : 'CF(H)] = 'N(H).",
            "VernacStartTheoremProof",
            "a5d71d0bd38af494dae682f05b2745cf3659b8c1"
        ],
        [
            "by apply/setP=> x; rewrite !inE linear0 eqxx andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_add phi psi : 'I[phi] :&: 'I[psi] \\subset 'I[phi + psi].",
            "VernacStartTheoremProof",
            "05f0db59daf1dcddf4e509482b814c20ea0b63f0"
        ],
        [
            "rewrite !['I[_]]setIdE -setIIr setIS //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/subsetP=> x; rewrite !inE linearD /= => /andP[/eqP-> /eqP->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_sum I r (P : pred I) (Phi : I -> 'CF(H)) : 'N(H) :&: \\bigcap_(i <- r | P i) 'I[Phi i] \\subset 'I[\\sum_(i <- r | P i) Phi i].",
            "VernacStartTheoremProof",
            "c60708dea2e29501027efdc172b1d7158de88fc0"
        ],
        [
            "elim/big_rec2: _ => [|i K psi Pi sK_Ipsi]; first by rewrite setIT inertia0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite setICA; apply: subset_trans (setIS _ sK_Ipsi) (inertia_add _ _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_scale a phi : 'I[phi] \\subset 'I[a *: phi].",
            "VernacStartTheoremProof",
            "aba5bc608fa4ed27759fa6b0a9aedd6f98017f4f"
        ],
        [
            "apply/subsetP=> x /setIdP[nHx /eqP Iphi_x].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite inE nHx linearZ /= Iphi_x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_scale_nz a phi : a != 0 -> 'I[a *: phi] = 'I[phi].",
            "VernacStartTheoremProof",
            "117467969bd720e0bf63dcceeec03db79cf62317"
        ],
        [
            "move=> nz_a; apply/eqP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite eqEsubset -{2}(scalerK nz_a phi) !inertia_scale.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_opp phi : 'I[- phi] = 'I[phi].",
            "VernacStartTheoremProof",
            "24d6b4ed02f4846ea38b34a8ddfbd3054f7bbf22"
        ],
        [
            "by rewrite -scaleN1r inertia_scale_nz // oppr_eq0 oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia1 : 'I[1 : 'CF(H)] = 'N(H).",
            "VernacStartTheoremProof",
            "bf424483c9d05a0195e8378b1e98b662284c5a1c"
        ],
        [
            "by apply/setP=> x; rewrite inE rmorph1 eqxx andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inertia1 : H <| G -> 'I_G[1 : 'CF(H)] = G.",
            "VernacStartTheoremProof",
            "5deb2adabef15ee7f03bc53d7bb3e98d5557af56"
        ],
        [
            "by rewrite inertia1 => /normal_norm/setIidPl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_mul phi psi : 'I[phi] :&: 'I[psi] \\subset 'I[phi * psi].",
            "VernacStartTheoremProof",
            "50bdf843b598513944d4d0b9a351f446a94349ea"
        ],
        [
            "rewrite !['I[_]]setIdE -setIIr setIS //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/subsetP=> x; rewrite !inE rmorphM /= => /andP[/eqP-> /eqP->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_prod I r (P : pred I) (Phi : I -> 'CF(H)) : 'N(H) :&: \\bigcap_(i <- r | P i) 'I[Phi i] \\subset 'I[\\prod_(i <- r | P i) Phi i].",
            "VernacStartTheoremProof",
            "cecd290ece32fac4d796b36e48a5afebdc552129"
        ],
        [
            "elim/big_rec2: _ => [|i K psi Pi sK_psi]; first by rewrite inertia1 setIT.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite setICA; apply: subset_trans (setIS _ sK_psi) (inertia_mul _ _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_injective (chi : 'CF(H)) : {in H &, injective chi} -> 'I[chi] = 'C(H).",
            "VernacStartTheoremProof",
            "49f7fb9e3f527a1507360c1c9fdb996da39d111a"
        ],
        [
            "move=> inj_chi; apply/eqP; rewrite eqEsubset cent_sub_inertia andbT.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply/subsetP=> y Ichi_y; have /setIdP[nHy _] := Ichi_y.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "apply/centP=> x Hx; apply/esym/commgP/conjg_fixP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by apply/inj_chi; rewrite ?memJ_norm ?(inertia_valJ _ Ichi_y).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_irr_prime p i : #|H| = p -> prime p -> i != 0 -> 'I['chi[H]_i] = 'C(H).",
            "VernacStartTheoremProof",
            "e635951dbd0c6b430e91bbef783a809a36420a23"
        ],
        [
            "by move=> <- pr_H /(irr_prime_injP pr_H); apply: inertia_injective.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_irr0 : 'I['chi[H]_0] = 'N(H).",
            "VernacStartTheoremProof",
            "ce715f1c0b8811ab7ae53227e48f829a6e010e56"
        ],
        [
            "by rewrite irr0 inertia1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjg_iso y : isometry (cfConjg y : 'CF(H) -> 'CF(H)).",
            "VernacStartTheoremProof",
            "3ed41f66e2f9f9c4e468c6662de742174d04bec4"
        ],
        [
            "move=> phi psi; congr (_ * _).",
            "VernacExtend",
            "891b4e47d01d65b54df65493918a5af5df35b545"
        ],
        [
            "have [nHy | not_nHy] := boolP (y \\in 'N(H)); last by rewrite !cfConjgEout.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (reindex_astabs 'J y) ?astabsJ //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr=> x _; rewrite !cfConjgEJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfdot_Res_conjg psi phi y : y \\in G -> '['Res[H, G] psi, phi ^ y] = '['Res[H] psi, phi].",
            "VernacStartTheoremProof",
            "69ebeadfd4bef6af6ef15e9f8d68b325a026a52b"
        ],
        [
            "move=> Gy; rewrite -(cfConjg_iso y _ phi); congr '[_, _]; apply/cfunP=> x.",
            "VernacExtend",
            "dcb80cc02c546d84cccf311f4860161d64102fc1"
        ],
        [
            "rewrite !cfunElock !genGid; case nHy: (y \\in 'N(H)) => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite !(fun_if psi) cfunJ ?memJ_norm ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjg_char (chi : 'CF(H)) y : chi \\is a character -> (chi ^ y)%CF \\is a character.",
            "VernacStartTheoremProof",
            "9fe23a435b3318189b028749e619f6ef9e8196a3"
        ],
        [
            "have [nHy Nchi | /cfConjgEout-> //] := boolP (y \\in 'N(H)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cfConjgEin cfIsom_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjg_lin_char (chi : 'CF(H)) y : chi \\is a linear_char -> (chi ^ y)%CF \\is a linear_char.",
            "VernacStartTheoremProof",
            "06dbffd0875dd7c1b6ff8724a78ac3d97b3716b1"
        ],
        [
            "by case/andP=> Nchi chi1; rewrite qualifE cfConjg1 cfConjg_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjg_irr y chi : chi \\in irr H -> (chi ^ y)%CF \\in irr H.",
            "VernacStartTheoremProof",
            "7349c93d661a76bc10541ffce3b8ad9c46687bb0"
        ],
        [
            "by rewrite !irrEchar cfConjg_iso => /andP[/cfConjg_char->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition conjg_Iirr i y := cfIirr ('chi[H]_i ^ y)%CF.",
            "VernacDefinition",
            "49119b7c4f797047da2abe607fd6518a6ae1ec85"
        ],
        [
            "Lemma conjg_IirrE i y : 'chi_(conjg_Iirr i y) = ('chi_i ^ y)%CF.",
            "VernacStartTheoremProof",
            "cbde6272dfb77e51828b87ab796c0f32f3592f75"
        ],
        [
            "by rewrite cfIirrE ?cfConjg_irr ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjg_IirrK y : cancel (conjg_Iirr^~ y) (conjg_Iirr^~ y^-1%g).",
            "VernacStartTheoremProof",
            "0dc1e444cbe666323ed1fc345bbbb5479e8f8ded"
        ],
        [
            "by move=> i; apply/irr_inj; rewrite !conjg_IirrE cfConjgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjg_IirrKV y : cancel (conjg_Iirr^~ y^-1%g) (conjg_Iirr^~ y).",
            "VernacStartTheoremProof",
            "67a5f2af3ded11a311ca9a29b51f01a94eaacf58"
        ],
        [
            "by rewrite -{2}[y]invgK; apply: conjg_IirrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjg_Iirr_inj y : injective (conjg_Iirr^~ y).",
            "VernacStartTheoremProof",
            "b86a0c8d6acae75d21028a7120c6039e2fb7f2a2"
        ],
        [
            "exact: can_inj (conjg_IirrK y).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjg_Iirr_eq0 i y : (conjg_Iirr i y == 0) = (i == 0).",
            "VernacStartTheoremProof",
            "a58f4f74de5adf04d49f3e3e1e1c68ecdb847f68"
        ],
        [
            "by rewrite -!irr_eq1 conjg_IirrE cfConjg_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjg_Iirr0 x : conjg_Iirr 0 x = 0.",
            "VernacStartTheoremProof",
            "d196a739da798c5b2b4d9eb70636e290639919e2"
        ],
        [
            "by apply/eqP; rewrite conjg_Iirr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfdot_irr_conjg i y : H <| G -> y \\in G -> '['chi_i, 'chi_i ^ y]_H = (y \\in 'I_G['chi_i])%:R.",
            "VernacStartTheoremProof",
            "db5664fa15a3eaac4646b5c0de57d363ffd4c37b"
        ],
        [
            "move=> nsHG Gy; rewrite -conjg_IirrE cfdot_irr -(inj_eq irr_inj) conjg_IirrE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -{1}['chi_i]cfConjgJ1 cfConjg_eqE ?mulg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cfclass (A : {set gT}) (phi : 'CF(A)) (B : {set gT}) := [seq (phi ^ repr Tx)%CF | Tx in rcosets 'I_B[phi] B].",
            "VernacDefinition",
            "1c4a86704fb8264a22460d46b43cee4e25d290be"
        ],
        [
            "Local Notation \"phi ^: G\" := (cfclass phi G) : cfun_scope.",
            "VernacNotation",
            "bc0f967d8c672e800cdc491a8618cfbc6fc5945d"
        ],
        [
            "Lemma size_cfclass i : size ('chi[H]_i ^: G)%CF = #|G : 'I_G['chi_i]|.",
            "VernacStartTheoremProof",
            "b0d9a3033d37d22aa7d97a99fca752cd3496342d"
        ],
        [
            "by rewrite size_map -cardE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfclassP (A : {group gT}) phi psi : reflect (exists2 y, y \\in A & psi = phi ^ y)%CF (psi \\in phi ^: A)%CF.",
            "VernacStartTheoremProof",
            "6a44e85e5502f429f38a3f2497d9c95a07355941"
        ],
        [
            "apply: (iffP imageP) => [[_ /rcosetsP[y Ay ->] ->] | [y Ay ->]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by case: repr_rcosetP => z /setIdP[Az _]; exists (z * y)%g; rewrite ?groupM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "without loss nHy: y Ay / y \\in 'N(H).",
            "VernacExtend",
            "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
        ],
        [
            "have [nHy | /cfConjgEout->] := boolP (y \\in 'N(H)); first exact.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/(_ 1%g); rewrite !group1 !cfConjgJ1; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists ('I_A[phi] :* y); first by rewrite -rcosetE mem_imset.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: repr_rcosetP => z /setIP[_ /setIdP[nHz /eqP Tz]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite cfConjgMnorm ?Tz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfclassInorm phi : (phi ^: 'N_G(H) =i phi ^: G)%CF.",
            "VernacStartTheoremProof",
            "5423cc91f0de9916389da04b94657a434cd13211"
        ],
        [
            "move=> xi; apply/cfclassP/cfclassP=> [[x /setIP[Gx _] ->] | [x Gx ->]].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by exists x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [Nx | /cfConjgEout-> //] := boolP (x \\in 'N(H)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists x; first apply/setIP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists 1%g; rewrite ?group1 ?cfConjgJ1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfclass_refl phi : phi \\in (phi ^: G)%CF.",
            "VernacStartTheoremProof",
            "c4a9dea26108f6e43636a9a5d265507d66bf63b0"
        ],
        [
            "by apply/cfclassP; exists 1%g => //; rewrite cfConjgJ1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfclass_transr phi psi : (psi \\in phi ^: G)%CF -> (phi ^: G =i psi ^: G)%CF.",
            "VernacStartTheoremProof",
            "965d366f3c234fbcb35f5ef463cb982d9ac1ac72"
        ],
        [
            "rewrite -cfclassInorm; case/cfclassP=> x Gx -> xi; rewrite -!cfclassInorm.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "have nHN: {subset 'N_G(H) <= 'N(H)} by apply/subsetP; apply: subsetIr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/cfclassP/cfclassP=> [[y Gy ->] | [y Gy ->]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by exists (x^-1 * y)%g; rewrite -?cfConjgMnorm ?groupM ?groupV ?nHN // mulKVg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists (x * y)%g; rewrite -?cfConjgMnorm ?groupM ?nHN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfclass_sym phi psi : (psi \\in phi ^: G)%CF = (phi \\in psi ^: G)%CF.",
            "VernacStartTheoremProof",
            "64f371fa3d7c0dcaaad11e0df84ce311def68329"
        ],
        [
            "by apply/idP/idP=> /cfclass_transr <-; apply: cfclass_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfclass_uniq phi : H <| G -> uniq (phi ^: G)%CF.",
            "VernacStartTheoremProof",
            "f5c6903c28f5e9ad6047a35cbbc60b30ad4011de"
        ],
        [
            "move=> nsHG; rewrite map_inj_in_uniq ?enum_uniq // => Ty Tz; rewrite !mem_enum.",
            "VernacExtend",
            "6b509b6a448d912d761bbad76ff3082e795e01f6"
        ],
        [
            "move=> {Ty}/rcosetsP[y Gy ->] {Tz}/rcosetsP[z Gz ->] /eqP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: repr_rcosetP => u Iphi_u; case: repr_rcosetP => v Iphi_v.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have [[Gu _] [Gv _]] := (setIdP Iphi_u, setIdP Iphi_v).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite cfConjg_eqE ?groupM // => /rcoset_eqP.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !rcosetM (rcoset_id Iphi_v) (rcoset_id Iphi_u).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfclass_invariant phi : G \\subset 'I[phi] -> (phi ^: G)%CF = phi.",
            "VernacStartTheoremProof",
            "ccf5f54b9ecc8c1a5a7c65e619d745131f1b2e85"
        ],
        [
            "move/setIidPl=> IGphi; rewrite /cfclass IGphi // rcosets_id.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite /(image _ _) enum_set1 /= repr_group cfConjgJ1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfclass1 : H <| G -> (1 ^: G)%CF = [:: 1 : 'CF(H)].",
            "VernacStartTheoremProof",
            "2e0ba0b3925873096aafbd2178be4f1886bc565a"
        ],
        [
            "by move/normal_norm=> nHG; rewrite cfclass_invariant ?inertia1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cfclass_Iirr (A : {set gT}) i := conjg_Iirr i @: A.",
            "VernacDefinition",
            "a69346f9c60af43b2c2d90b9f0644cbc3f1d0619"
        ],
        [
            "Lemma cfclass_IirrE i j : (j \\in cfclass_Iirr G i) = ('chi_j \\in 'chi_i ^: G)%CF.",
            "VernacStartTheoremProof",
            "60276b6b183dc2f6ffc5f06a25fb3d3e927564fd"
        ],
        [
            "apply/imsetP/cfclassP=> [[y Gy ->] | [y]]; exists y; rewrite ?conjg_IirrE //.",
            "VernacExtend",
            "1d40e1f553ec20e06efca57315fed8fe7ae6987a"
        ],
        [
            "by apply: irr_inj; rewrite conjg_IirrE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_cfclass_IirrE i j : (cfclass_Iirr G j == cfclass_Iirr G i) = (j \\in cfclass_Iirr G i).",
            "VernacStartTheoremProof",
            "c9025c1984f68ea62bf12638e0b1abf4990578e7"
        ],
        [
            "apply/eqP/idP=> [<- | iGj]; first by rewrite cfclass_IirrE cfclass_refl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/setP=> k; rewrite !cfclass_IirrE in iGj *; apply/esym/cfclass_transr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma im_cfclass_Iirr i : H <| G -> perm_eq [seq 'chi_j | j in cfclass_Iirr G i] ('chi_i ^: G)%CF.",
            "VernacStartTheoremProof",
            "33507a48daf578f2da1a5c57c59f98f78b915307"
        ],
        [
            "move=> nsHG; have UchiG := cfclass_uniq 'chi_i nsHG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply: uniq_perm_eq; rewrite ?(map_inj_uniq irr_inj) ?enum_uniq // => phi.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "apply/imageP/idP=> [[j iGj ->] | /cfclassP[y]]; first by rewrite -cfclass_IirrE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists (conjg_Iirr i y); rewrite ?mem_imset ?conjg_IirrE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_cfclass_Iirr i : H <| G -> #|cfclass_Iirr G i| = #|G : 'I_G['chi_i]|.",
            "VernacStartTheoremProof",
            "9628e05ccdf09129f58562de52530121c85c9c52"
        ],
        [
            "move=> nsHG; rewrite -size_cfclass -(perm_eq_size (im_cfclass_Iirr i nsHG)).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite size_map -cardE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reindex_cfclass R idx (op : Monoid.com_law idx) (F : 'CF(H) -> R) i : H <| G -> \\big[op/idx]_(chi <- ('chi_i ^: G)%CF) F chi = \\big[op/idx]_(j | 'chi_j \\in ('chi_i ^: G)%CF) F 'chi_j.",
            "VernacStartTheoremProof",
            "0401b520d8fe69d040a727295dab4f0c683550bd"
        ],
        [
            "move/im_cfclass_Iirr/(eq_big_perm _) <-; rewrite big_map big_filter /=.",
            "VernacExtend",
            "01eaddc5beea13e116fcc5de5430a824e6e09efb"
        ],
        [
            "by apply: eq_bigl => j; rewrite cfclass_IirrE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfResInd j: H <| G -> 'Res[H] ('Ind[G] 'chi_j) = #|H|%:R^-1 *: (\\sum_(y in G) 'chi_j ^ y)%CF.",
            "VernacStartTheoremProof",
            "25bc6db49e5f64dd4b51b93e98d38aeefa1e1ffb"
        ],
        [
            "case/andP=> [sHG /subsetP nHG].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite (reindex_inj invg_inj); apply/cfun_inP=> x Hx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite cfResE // cfIndE // ?cfunE ?sum_cfunE; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply: eq_big => [y | y Gy]; rewrite ?cfConjgE ?groupV ?invgK ?nHG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_Res_sum_cfclass i j : H <| G -> j \\in irr_constt ('Res[H, G] 'chi_i) -> 'Res[H] 'chi_i = '['Res[H] 'chi_i, 'chi_j] *: (\\sum_(chi <- ('chi_j ^: G)%CF) chi).",
            "VernacStartTheoremProof",
            "fff33b86db57884c3a601c5999cee67a793c03d6"
        ],
        [
            "move=> nsHG chiHj; have [sHG /subsetP nHG] := andP nsHG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite reindex_cfclass //= big_mkcond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {1}['Res _]cfun_sum_cfdot linear_sum /=; apply: eq_bigr => k _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have [[y Gy ->] | ] := altP (cfclassP _ _ _); first by rewrite cfdot_Res_conjg.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: contraNeq; rewrite scaler0 scaler_eq0 orbC => /norP[_ chiHk].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "have{chiHk chiHj}: '['Res[H] ('Ind[G] 'chi_j), 'chi_k] != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !inE !cfdot_Res_l in chiHj chiHk *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contraNneq chiHk; rewrite cfdot_sum_irr => /psumr_eq0P/(_ i isT)/eqP.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite -cfdotC cfdotC mulf_eq0 conjC_eq0 (negbTE chiHj) /= => -> // i1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -cfdotC Cnat_ge0 // rpredM ?Cnat_cfdot_char ?cfInd_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite cfResInd // cfdotZl mulf_eq0 cfdot_suml => /norP[_].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: contraR => chiGk'j; rewrite big1 // => x Gx; apply: contraNeq chiGk'j.",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "rewrite -conjg_IirrE cfdot_irr pnatr_eq0; case: (_ =P k) => // <- _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite conjg_IirrE; apply/cfclassP; exists x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRes_Ind_invariant psi : H <| G -> G \\subset 'I[psi] -> 'Res ('Ind[G, H] psi) = #|G : H|%:R *: psi.",
            "VernacStartTheoremProof",
            "c5827b8e7db51ad8e7bbd4a73a7b52be7f4d6894"
        ],
        [
            "case/andP=> sHG _ /subsetP IGpsi; apply/cfun_inP=> x Hx.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "rewrite cfResE ?cfIndE ?natf_indexg // cfunE -mulrA mulrCA; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite mulr_natl -sumr_const; apply: eq_bigr => y /IGpsi/inertia_valJ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary constt0_Res_cfker i : H <| G -> 0 \\in irr_constt ('Res[H] 'chi[G]_i) -> H \\subset cfker 'chi[G]_i.",
            "VernacStartTheoremProof",
            "5259cc91ed672a863b9e97fe5ace716f60475a50"
        ],
        [
            "move=> nsHG /(Clifford_Res_sum_cfclass nsHG); have [sHG nHG] := andP nsHG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite irr0 cfdot_Res_l cfclass1 // big_seq1 cfInd_cfun1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite cfdotZr conjC_nat => def_chiH.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/subsetP=> x Hx; rewrite cfkerEirr inE -!(cfResE _ sHG) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite def_chiH !cfunE cfun11 cfun1E Hx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdn_constt_Res1_irr1 i j : H <| G -> j \\in irr_constt ('Res[H, G] 'chi_i) -> exists n, 'chi_i 1%g = n%:R * 'chi_j 1%g.",
            "VernacStartTheoremProof",
            "96162c191baa90f531f1d79e2f9c69da89d6ae8e"
        ],
        [
            "move=> nsHG chiHj; have [sHG nHG] := andP nsHG; rewrite -(cfResE _ sHG) //.",
            "VernacExtend",
            "7cbc77a1e43ca1454debc28656b2dec3869cf69b"
        ],
        [
            "rewrite {1}(Clifford_Res_sum_cfclass nsHG chiHj) cfunE sum_cfunE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /CnatP[n ->]: '['Res[H] 'chi_i, 'chi_j] \\in Cnat.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite Cnat_cfdot_char ?cfRes_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (n * size ('chi_j ^: G)%CF)%N; rewrite natrM -mulrA; congr (_ * _).",
            "VernacExtend",
            "d88acbe9fdd1631f514bdb276ced9058e888d35c"
        ],
        [
            "rewrite mulr_natl -[size _]card_ord big_tnth -sumr_const; apply: eq_bigr => k _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by have /cfclassP[y Gy ->]:= mem_tnth k (in_tuple _); rewrite cfConjg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfclass_Ind phi psi : H <| G -> psi \\in (phi ^: G)%CF -> 'Ind[G] phi = 'Ind[G] psi.",
            "VernacStartTheoremProof",
            "7ae06a5a507b9b0dd15f2933336c87a41ff77964"
        ],
        [
            "move=> nsHG /cfclassP[y Gy ->]; have [sHG /subsetP nHG] := andP nsHG.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/cfun_inP=> x Hx; rewrite !cfIndE //; congr (_ * _).",
            "VernacExtend",
            "91580bd9cdf2cad626638a70b66bf9b00afa41b1"
        ],
        [
            "rewrite (reindex_acts 'R _ (groupVr Gy)) ?astabsR //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => z Gz; rewrite conjgM cfConjgE ?nHG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Inertia.",
            "VernacEndSegment",
            "f21525811ce15802633b984bb0b698f66dac157d"
        ],
        [
            "Arguments inertia {gT B%g} phi%CF.",
            "VernacArguments",
            "7065f60e8855906c317277b7b7bb8d1b323d2247"
        ],
        [
            "Arguments cfclass {gT A%g} phi%CF B%g.",
            "VernacArguments",
            "5015c90a6ef0f45c6fa466843a05cbd31785ebcc"
        ],
        [
            "Arguments conjg_Iirr_inj {gT H} y [i1 i2] : rename.",
            "VernacArguments",
            "e7582c2703dc8690b9d83670b7b79469da5b5c7a"
        ],
        [
            "Notation \"''I[' phi ] \" := (inertia phi) : group_scope.",
            "VernacNotation",
            "8fbf1e1479357b12582614ff4184d6c3c63fa490"
        ],
        [
            "Notation \"''I[' phi ] \" := (inertia_group phi) : Group_scope.",
            "VernacNotation",
            "06d2db51b712f1e6cce62c91b47969bf769a1e19"
        ],
        [
            "Notation \"''I_' G [ phi ] \" := (G%g :&: 'I[phi]) : group_scope.",
            "VernacNotation",
            "0c4140b79d1897af75aa68dae59fec9777c72b41"
        ],
        [
            "Notation \"''I_' G [ phi ] \" := (G :&: 'I[phi])%G : Group_scope.",
            "VernacNotation",
            "70ba35f46ae92c66000d53dd199ba0d2aaf3a880"
        ],
        [
            "Notation \"phi ^: G\" := (cfclass phi G) : cfun_scope.",
            "VernacNotation",
            "411b35ad55d7ee03227e8fbd1bffbc47e27dabf5"
        ],
        [
            "Section ConjRestrict.",
            "VernacBeginSection",
            "10e6dd23bd7e3cb2489f2fa2314b5d4e61cc7b01"
        ],
        [
            "Variables (gT : finGroupType) (G H K : {group gT}).",
            "VernacAssumption",
            "4dd968639fcfe7f505dd482ba9dcb9d2c45a0b45"
        ],
        [
            "Lemma cfConjgRes_norm phi y : y \\in 'N(K) -> y \\in 'N(H) -> ('Res[K, H] phi ^ y)%CF = 'Res (phi ^ y)%CF.",
            "VernacStartTheoremProof",
            "908193ef4a653397b4d9a56d860ad360fde68617"
        ],
        [
            "move=> nKy nHy; have [sKH | not_sKH] := boolP (K \\subset H); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !cfResEout // linearZ rmorph1 cfConjg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/cfun_inP=> x Kx; rewrite !(cfConjgE, cfResE) ?memJ_norm ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgRes phi y : H <| G -> K <| G -> y \\in G -> ('Res[K, H] phi ^ y)%CF = 'Res (phi ^ y)%CF.",
            "VernacStartTheoremProof",
            "320ee88b47cf2fb41e22e41b34cb266c46ae0e98"
        ],
        [
            "move=> /andP[_ nHG] /andP[_ nKG] Gy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite cfConjgRes_norm ?(subsetP nHG) ?(subsetP nKG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_inertia_Res phi : G \\subset 'N(K) -> 'I_G[phi] \\subset 'I_G['Res[K, H] phi].",
            "VernacStartTheoremProof",
            "40e6f9301efbbf9ea23fd15d41fc8a5e84117176"
        ],
        [
            "move=> nKG; apply/subsetP=> y /setIP[Gy /setIdP[nHy /eqP Iphi_y]].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite 2!inE Gy cfConjgRes_norm ?(subsetP nKG) ?Iphi_y /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgInd_norm phi y : y \\in 'N(K) -> y \\in 'N(H) -> ('Ind[H, K] phi ^ y)%CF = 'Ind (phi ^ y)%CF.",
            "VernacStartTheoremProof",
            "ebff62f8192197dd783399e9069ac8f3b880f1e1"
        ],
        [
            "move=> nKy nHy; have [sKH | not_sKH] := boolP (K \\subset H).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite !cfConjgEin (cfIndIsom (norm_conj_isom nHy)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !cfIndEout // linearZ -(cfConjg_iso y) rmorph1 /=; congr (_ *: _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite cfConjg_cfuni ?norm1 ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgInd phi y : H <| G -> K <| G -> y \\in G -> ('Ind[H, K] phi ^ y)%CF = 'Ind (phi ^ y)%CF.",
            "VernacStartTheoremProof",
            "22e5cab727fb48ac3d10529945dfc386c402a692"
        ],
        [
            "move=> /andP[_ nHG] /andP[_ nKG] Gy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite cfConjgInd_norm ?(subsetP nHG) ?(subsetP nKG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_inertia_Ind phi : G \\subset 'N(H) -> 'I_G[phi] \\subset 'I_G['Ind[H, K] phi].",
            "VernacStartTheoremProof",
            "d5dd77b941ce3033d5b3e05e60ee0577803a33e9"
        ],
        [
            "move=> nHG; apply/subsetP=> y /setIP[Gy /setIdP[nKy /eqP Iphi_y]].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite 2!inE Gy cfConjgInd_norm ?(subsetP nHG) ?Iphi_y /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ConjRestrict.",
            "VernacEndSegment",
            "78283d663bce27e280e1f484af8b2ea4a6f0c4e2"
        ],
        [
            "Section MoreInertia.",
            "VernacBeginSection",
            "f93fd190304b02e694447b3819ba007beea1eb02"
        ],
        [
            "Variables (gT : finGroupType) (G H : {group gT}) (i : Iirr H).",
            "VernacAssumption",
            "73b2485bccb99b3d168ba20192e933e1b1e84ddd"
        ],
        [
            "Let T := 'I_G['chi_i].",
            "VernacDefinition",
            "050b61981c1f474d40472bd0933935260e175362"
        ],
        [
            "Lemma inertia_id : 'I_T['chi_i] = T.",
            "VernacStartTheoremProof",
            "90a7ae78f48813cd9e68e06501abfc47bc9346ca"
        ],
        [
            "by rewrite -setIA setIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfclass_inertia : ('chi[H]_i ^: T)%CF = [:: 'chi_i].",
            "VernacStartTheoremProof",
            "d66c0e3b987831571ca9a092e1ad03692858ba45"
        ],
        [
            "rewrite /cfclass inertia_id rcosets_id /(image _ _) enum_set1 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite repr_group cfConjgJ1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MoreInertia.",
            "VernacEndSegment",
            "4c9d636a53763b4206c24cb2f06ccde9e83b1802"
        ],
        [
            "Section ConjMorph.",
            "VernacBeginSection",
            "fedd647efe87e9e5d0d7cae626aecc7f1a4081b0"
        ],
        [
            "Variables (aT rT : finGroupType) (D G H : {group aT}) (f : {morphism D >-> rT}).",
            "VernacAssumption",
            "7730113aa1adb527a2916cec9acb59b3a91b0458"
        ],
        [
            "Lemma cfConjgMorph (phi : 'CF(f @* H)) y : y \\in D -> y \\in 'N(H) -> (cfMorph phi ^ y)%CF = cfMorph (phi ^ f y).",
            "VernacStartTheoremProof",
            "58937613fb28ab3c4aa2e12f65460ae7f9034c32"
        ],
        [
            "move=> Dy nHy; have [sHD | not_sHD] := boolP (H \\subset D); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !cfMorphEout // linearZ rmorph1 cfConjg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/cfun_inP=> x Gx; rewrite !(cfConjgE, cfMorphE) ?memJ_norm ?groupV //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite morphJ ?morphV ?groupV // (subsetP sHD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite (subsetP (morphim_norm _ _)) ?mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_morph_pre (phi : 'CF(f @* H)) : H <| G -> G \\subset D -> 'I_G[cfMorph phi] = G :&: f @*^-1 'I_(f @* G)[phi].",
            "VernacStartTheoremProof",
            "c07b1e3f6e484f2f72bd6a2f59e38ecc9cf440e7"
        ],
        [
            "case/andP=> sHG nHG sGD; have sHD := subset_trans sHG sGD.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "apply/setP=> y; rewrite !in_setI; apply: andb_id2l => Gy.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "have [Dy nHy] := (subsetP sGD y Gy, subsetP nHG y Gy).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Dy inE nHy 4!inE mem_morphim // -morphimJ ?(normP nHy) // subxx /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite cfConjgMorph //; apply/eqP/eqP=> [Iphi_y | -> //].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply/cfun_inP=> _ /morphimP[x Dx Hx ->]; rewrite -!cfMorphE ?Iphi_y.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_morph_im (phi : 'CF(f @* H)) : H <| G -> G \\subset D -> f @* 'I_G[cfMorph phi] = 'I_(f @* G)[phi].",
            "VernacStartTheoremProof",
            "f5e0957fba8989da8c9b39044adaaa9c11218797"
        ],
        [
            "move=> nsHG sGD; rewrite inertia_morph_pre // morphim_setIpre.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (setIidPr _) ?Inertia_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variables (R S : {group rT}).",
            "VernacAssumption",
            "f5b48d0de04f023d4196248bc565c74c100a4a85"
        ],
        [
            "Variables (g : {morphism G >-> rT}) (h : {morphism H >-> rT}).",
            "VernacAssumption",
            "7bfc48dd4b02eb8e6534538fd6ed7f0642a0244b"
        ],
        [
            "Hypotheses (isoG : isom G R g) (isoH : isom H S h).",
            "VernacAssumption",
            "899b8eac50a4c2d09c9a321d146449e4ea42a058"
        ],
        [
            "Hypotheses (eq_hg : {in H, h =1 g}) (sHG : H \\subset G).",
            "VernacAssumption",
            "6e96d718358ac5f9f8c88df36c5b55a3fc0e50bb"
        ],
        [
            "Lemma cfConjgIsom phi y : y \\in G -> y \\in 'N(H) -> (cfIsom isoH phi ^ g y)%CF = cfIsom isoH (phi ^ y).",
            "VernacStartTheoremProof",
            "80f35ac4f5141b4c057b1fa26b5cf9abb1c0c812"
        ],
        [
            "move=> Gy nHy; have [_ defS] := isomP isoH.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite morphimEdom (eq_in_imset eq_hg) -morphimEsub // in defS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/cfun_inP=> gx; rewrite -{1}defS => /morphimP[x Gx Hx ->] {gx}.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite cfConjgE; last by rewrite -defS inE -morphimJ ?(normP nHy).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -morphV -?morphJ -?eq_hg ?cfIsomE ?cfConjgE ?memJ_norm ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_isom phi : 'I_R[cfIsom isoH phi] = g @* 'I_G[phi].",
            "VernacStartTheoremProof",
            "1f436bbe9908ffe5b16760eedccda4275018522e"
        ],
        [
            "have [[_ defS] [injg <-]] := (isomP isoH, isomP isoG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite morphimEdom (eq_in_imset eq_hg) -morphimEsub // in defS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /inertia !setIdE morphimIdom setIA -{1}defS -injm_norm ?injmI //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/setP=> gy; rewrite !inE; apply: andb_id2l => /morphimP[y Gy nHy ->] {gy}.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite cfConjgIsom // -sub1set -morphim_set1 // injmSK ?sub1set //= inE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/eqP/eqP=> [Iphi_y | -> //].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/cfun_inP=> x Hx; rewrite -!(cfIsomE isoH) ?Iphi_y.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ConjMorph.",
            "VernacEndSegment",
            "462da323eb09a5d58be077876a4f7ca61f7c8ea1"
        ],
        [
            "Section ConjQuotient.",
            "VernacBeginSection",
            "f6fea168ce4f5a8f3406e729f4fa6895bb3636cc"
        ],
        [
            "Variables gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types G H K : {group gT}.",
            "VernacReserve",
            "d934fb2556cba7e244425668dbf69ab4b3ba551e"
        ],
        [
            "Lemma cfConjgMod_norm H K (phi : 'CF(H / K)) y : y \\in 'N(K) -> y \\in 'N(H) -> ((phi %% K) ^ y)%CF = (phi ^ coset K y %% K)%CF.",
            "VernacStartTheoremProof",
            "30ee16b846e1601c184ec59b0b5daf7a93ba04b1"
        ],
        [
            "exact: cfConjgMorph.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgMod G H K (phi : 'CF(H / K)) y : H <| G -> K <| G -> y \\in G -> ((phi %% K) ^ y)%CF = (phi ^ coset K y %% K)%CF.",
            "VernacStartTheoremProof",
            "b33564c695b6f71a77bd40987c71bfe327d11c05"
        ],
        [
            "move=> /andP[_ nHG] /andP[_ nKG] Gy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite cfConjgMod_norm ?(subsetP nHG) ?(subsetP nKG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgQuo_norm H K (phi : 'CF(H)) y : y \\in 'N(K) -> y \\in 'N(H) -> ((phi / K) ^ coset K y)%CF = (phi ^ y / K)%CF.",
            "VernacStartTheoremProof",
            "1e396b4a11388d2ed32f2d6b0c699846cf4df998"
        ],
        [
            "move=> nKy nHy; have keryK: (K \\subset cfker (phi ^ y)) = (K \\subset cfker phi).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite cfker_conjg // -{1}(normP nKy) conjSg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [kerK | not_kerK] := boolP (K \\subset cfker phi); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !cfQuoEout ?linearZ ?rmorph1 ?cfConjg1 ?keryK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/cfun_inP=> _ /morphimP[x nKx Hx ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have nHyb: coset K y \\in 'N(H / K) by rewrite inE -morphimJ ?(normP nHy).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !(cfConjgE, cfQuoEnorm) ?keryK // ?in_setI ?Hx //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -morphV -?morphJ ?groupV // cfQuoEnorm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite inE memJ_norm ?Hx ?groupJ ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgQuo G H K (phi : 'CF(H)) y : H <| G -> K <| G -> y \\in G -> ((phi / K) ^ coset K y)%CF = (phi ^ y / K)%CF.",
            "VernacStartTheoremProof",
            "ad6d4a183061326334602a0fbbefeb22d7fc64a2"
        ],
        [
            "move=> /andP[_ nHG] /andP[_ nKG] Gy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite cfConjgQuo_norm ?(subsetP nHG) ?(subsetP nKG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_mod_pre G H K (phi : 'CF(H / K)) : H <| G -> K <| G -> 'I_G[phi %% K] = G :&: coset K @*^-1 'I_(G / K)[phi].",
            "VernacStartTheoremProof",
            "bfb311d476a10597b4b9b82471e72260f0e5caac"
        ],
        [
            "by move=> nsHG /andP[_]; apply: inertia_morph_pre.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_mod_quo G H K (phi : 'CF(H / K)) : H <| G -> K <| G -> ('I_G[phi %% K] / K)%g = 'I_(G / K)[phi].",
            "VernacStartTheoremProof",
            "1e3e28a135cfcb9567547eb9b6ed32e5003dd22b"
        ],
        [
            "by move=> nsHG /andP[_]; apply: inertia_morph_im.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_quo G H K (phi : 'CF(H)) : H <| G -> K <| G -> K \\subset cfker phi -> 'I_(G / K)[phi / K] = ('I_G[phi] / K)%g.",
            "VernacStartTheoremProof",
            "909c45ff38159484fe546d75aab4651ac2fea72d"
        ],
        [
            "move=> nsHG nsKG kerK; rewrite -inertia_mod_quo ?cfQuoK //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (normalS _ (normal_sub nsHG)) // (subset_trans _ (cfker_sub phi)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ConjQuotient.",
            "VernacEndSegment",
            "f151e5051c7961c7f5ced3f4a5e40072a0961c66"
        ],
        [
            "Section InertiaSdprod.",
            "VernacBeginSection",
            "e41a5b5f33ffbd9ec0579c346da206be8beb75d7"
        ],
        [
            "Variables (gT : finGroupType) (K H G : {group gT}).",
            "VernacAssumption",
            "f32e4191f939322ab86742dda753f0921a3ed643"
        ],
        [
            "Hypothesis defG : K ><| H = G.",
            "VernacAssumption",
            "813ec0fb558b04dd0355c167c4bfbb2bef103f5d"
        ],
        [
            "Lemma cfConjgSdprod phi y : y \\in 'N(K) -> y \\in 'N(H) -> (cfSdprod defG phi ^ y = cfSdprod defG (phi ^ y))%CF.",
            "VernacStartTheoremProof",
            "517fd1f830635ee4e8392debaf19e5b26a27ce80"
        ],
        [
            "move=> nKy nHy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have nGy: y \\in 'N(G) by rewrite -sub1set -(sdprodW defG) normsM ?sub1set.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -{2}[phi](cfSdprodK defG) cfConjgRes_norm // cfRes_sdprodK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfker_conjg // -{1}(normP nKy) conjSg cfker_sdprod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_sdprod (L : {group gT}) phi : L \\subset 'N(K) -> L \\subset 'N(H) -> 'I_L[cfSdprod defG phi] = 'I_L[phi].",
            "VernacStartTheoremProof",
            "32cae1784ed87b570b018ee26951935357d7245d"
        ],
        [
            "move=> nKL nHL; have nGL: L \\subset 'N(G) by rewrite -(sdprodW defG) normsM.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply/setP=> z; rewrite !in_setI ![z \\in 'I[_]]inE; apply: andb_id2l => Lz.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite cfConjgSdprod ?(subsetP nKL) ?(subsetP nHL) ?(subsetP nGL) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (can_eq (cfSdprodK defG)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InertiaSdprod.",
            "VernacEndSegment",
            "f8b0c829fbed7cd40e3d8c3c511b8b0dfe9da311"
        ],
        [
            "Section InertiaDprod.",
            "VernacBeginSection",
            "5f66a3742137ef264da73723a3b5d07217cbb759"
        ],
        [
            "Variables (gT : finGroupType) (G K H : {group gT}).",
            "VernacAssumption",
            "4f858719f977f912d8fd5cceff262ca6499eba35"
        ],
        [
            "Implicit Type L : {group gT}.",
            "VernacReserve",
            "e18e23a2dc2cb90521c35f6c9eed01b86cfd248d"
        ],
        [
            "Hypothesis KxH : K \\x H = G.",
            "VernacAssumption",
            "2aeeb7d1b4e0adf9874a9f7f99bddca6575d103a"
        ],
        [
            "Lemma cfConjgDprodl phi y : y \\in 'N(K) -> y \\in 'N(H) -> (cfDprodl KxH phi ^ y = cfDprodl KxH (phi ^ y))%CF.",
            "VernacStartTheoremProof",
            "f54aad3e29ab39a5ac351cf44e9c8535d8f8676c"
        ],
        [
            "by move=> nKy nHy; apply: cfConjgSdprod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgDprodr psi y : y \\in 'N(K) -> y \\in 'N(H) -> (cfDprodr KxH psi ^ y = cfDprodr KxH (psi ^ y))%CF.",
            "VernacStartTheoremProof",
            "7451ffefe18c5928ad39f95262e1d192cc547595"
        ],
        [
            "by move=> nKy nHy; apply: cfConjgSdprod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgDprod phi psi y : y \\in 'N(K) -> y \\in 'N(H) -> (cfDprod KxH phi psi ^ y = cfDprod KxH (phi ^ y) (psi ^ y))%CF.",
            "VernacStartTheoremProof",
            "14212b444d1dd697f24be97251f2b002fe2544c7"
        ],
        [
            "by move=> nKy nHy; rewrite rmorphM /= cfConjgDprodl ?cfConjgDprodr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_dprodl L phi : L \\subset 'N(K) -> L \\subset 'N(H) -> 'I_L[cfDprodl KxH phi] = 'I_L[phi].",
            "VernacStartTheoremProof",
            "06a5f738ef1b309dbb4650fc376f78fb89373cd2"
        ],
        [
            "by move=> nKL nHL; apply: inertia_sdprod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_dprodr L psi : L \\subset 'N(K) -> L \\subset 'N(H) -> 'I_L[cfDprodr KxH psi] = 'I_L[psi].",
            "VernacStartTheoremProof",
            "bd5bc0cbe91ff9a719c45c48da501d1caaa15e7b"
        ],
        [
            "by move=> nKL nHL; apply: inertia_sdprod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_dprod L (phi : 'CF(K)) (psi : 'CF(H)) : L \\subset 'N(K) -> L \\subset 'N(H) -> phi 1%g != 0 -> psi 1%g != 0 -> 'I_L[cfDprod KxH phi psi] = 'I_L[phi] :&: 'I_L[psi].",
            "VernacStartTheoremProof",
            "d55183b64b9764f82233473e5e8d9603cc9800d6"
        ],
        [
            "move=> nKL nHL nz_phi nz_psi; apply/eqP; rewrite eqEsubset subsetI.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite -{1}(inertia_scale_nz psi nz_phi) -{1}(inertia_scale_nz phi nz_psi).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(cfDprod_Resl KxH) -(cfDprod_Resr KxH) !sub_inertia_Res //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -inertia_dprodl -?inertia_dprodr // -setIIr setIS ?inertia_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_dprod_irr L i j : L \\subset 'N(K) -> L \\subset 'N(H) -> 'I_L[cfDprod KxH 'chi_i 'chi_j] = 'I_L['chi_i] :&: 'I_L['chi_j].",
            "VernacStartTheoremProof",
            "6550bbb1e57d9236ad2da5e9f269bee3328b2d5f"
        ],
        [
            "by move=> nKL nHL; rewrite inertia_dprod ?irr1_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InertiaDprod.",
            "VernacEndSegment",
            "96ecf5f34ce0ff65d2f89ce77a4c627b9f427e47"
        ],
        [
            "Section InertiaBigdprod.",
            "VernacBeginSection",
            "8897f53975baad7d877b27de5c24cf0bd9f985ee"
        ],
        [
            "Variables (gT : finGroupType) (I : finType) (P : pred I).",
            "VernacAssumption",
            "69254dfe92e8b6056c735a7426d5547e06769392"
        ],
        [
            "Variables (A : I -> {group gT}) (G : {group gT}).",
            "VernacAssumption",
            "80fcfc21d9705e2f1be5f70e2873aac140630b3a"
        ],
        [
            "Implicit Type L : {group gT}.",
            "VernacReserve",
            "e18e23a2dc2cb90521c35f6c9eed01b86cfd248d"
        ],
        [
            "Hypothesis defG : \\big[dprod/1%g]_(i | P i) A i = G.",
            "VernacAssumption",
            "92e6d8a86db9291b3cd3fa2d69ee04d305a7c11a"
        ],
        [
            "Section ConjBig.",
            "VernacBeginSection",
            "70ee33695bf5c9e38e1ab90957769c9173049b25"
        ],
        [
            "Variable y : gT.",
            "VernacAssumption",
            "5dbfd92217d85f7108ad2034903bf7fbdd5117ee"
        ],
        [
            "Hypothesis nAy: forall i, P i -> y \\in 'N(A i).",
            "VernacAssumption",
            "8f7acd26f60407a1f8f8327aeab94f056e3727f0"
        ],
        [
            "Lemma cfConjgBigdprodi i (phi : 'CF(A i)) : (cfBigdprodi defG phi ^ y = cfBigdprodi defG (phi ^ y))%CF.",
            "VernacStartTheoremProof",
            "b9734817e9574d86cc65efef053a9c83adadd2c2"
        ],
        [
            "rewrite cfConjgDprodl; try by case: ifP => [/nAy// | _]; rewrite norm1 inE.",
            "VernacExtend",
            "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
        ],
        [
            "congr (cfDprodl _ _); case: ifP => [Pi | _].",
            "VernacExtend",
            "f46e0009f9f30857e3015b4aa81044d3df151722"
        ],
        [
            "by rewrite cfConjgRes_norm ?nAy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/cfun_inP=> _ /set1P->; rewrite !(cfRes1, cfConjg1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -sub1set norms_gen ?norms_bigcup // sub1set.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/bigcapP=> j /andP[/nAy].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfConjgBigdprod phi : (cfBigdprod defG phi ^ y = cfBigdprod defG (fun i => phi i ^ y))%CF.",
            "VernacStartTheoremProof",
            "ef71e16759b5deaadad03fc158de00715fa31c85"
        ],
        [
            "by rewrite rmorph_prod /=; apply: eq_bigr => i _; apply: cfConjgBigdprodi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ConjBig.",
            "VernacEndSegment",
            "a51e42ac45160b26bc602e361780cf7e92af9cfa"
        ],
        [
            "Section InertiaBig.",
            "VernacBeginSection",
            "904fad1fbf87558739f0a925b94be66f5dafe5fe"
        ],
        [
            "Variable L : {group gT}.",
            "VernacAssumption",
            "4c1850febf401615516f1e3910561877e66da537"
        ],
        [
            "Hypothesis nAL : forall i, P i -> L \\subset 'N(A i).",
            "VernacAssumption",
            "e7a283b2da43daca4536ac5fef88fa6e541595d6"
        ],
        [
            "Lemma inertia_bigdprodi i (phi : 'CF(A i)) : P i -> 'I_L[cfBigdprodi defG phi] = 'I_L[phi].",
            "VernacStartTheoremProof",
            "46f5f208618d2b022913b0601ed416c3b4e29df4"
        ],
        [
            "move=> Pi; rewrite inertia_dprodl ?Pi ?cfRes_id ?nAL //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply/norms_gen/norms_bigcup/bigcapsP=> j /andP[/nAL].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_bigdprod phi (Phi := cfBigdprod defG phi) : Phi 1%g != 0 -> 'I_L[Phi] = L :&: \\bigcap_(i | P i) 'I_L[phi i].",
            "VernacStartTheoremProof",
            "635825eeae4cdb3ac590cf5c938d4ee2d53dacde"
        ],
        [
            "move=> nz_Phi; apply/eqP; rewrite eqEsubset; apply/andP; split.",
            "VernacExtend",
            "d752a2a35324d2eb5b791f7ab31c1459e9f1bcbc"
        ],
        [
            "rewrite subsetI Inertia_sub; apply/bigcapsP=> i Pi.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have [] := cfBigdprodK nz_Phi Pi; move: (_ / _) => a nz_a <-.",
            "VernacExtend",
            "2254362b2c0ed4876e75651f139671300bdd453c"
        ],
        [
            "by rewrite inertia_scale_nz ?sub_inertia_Res //= ?nAL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite subsetI subsetIl; apply: subset_trans (inertia_prod _ _ _).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply: setISS.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -(bigdprodWY defG) norms_gen ?norms_bigcup //; apply/bigcapsP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/bigcapsP=> i Pi; rewrite (bigcap_min i) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -inertia_bigdprodi ?subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inertia_bigdprod_irr Iphi (phi := fun i => 'chi_(Iphi i)) : 'I_L[cfBigdprod defG phi] = L :&: \\bigcap_(i | P i) 'I_L[phi i].",
            "VernacStartTheoremProof",
            "0ab032b190b656b401a53eaa29f61ba64e6ba4d5"
        ],
        [
            "rewrite inertia_bigdprod // -[cfBigdprod _ _]cfIirrE ?irr1_neq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: cfBigdprod_irr => i _; apply: mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InertiaBig.",
            "VernacEndSegment",
            "68266921e835535a4aff0b3b3f8b22090f4062bc"
        ],
        [
            "End InertiaBigdprod.",
            "VernacEndSegment",
            "c3fe7d3753e89ed8d619e53fa34962d987c6bb11"
        ],
        [
            "Section ConsttInertiaBijection.",
            "VernacBeginSection",
            "bb0577d09e6ffa72ae8434366875f807e202ad43"
        ],
        [
            "Variables (gT : finGroupType) (H G : {group gT}) (t : Iirr H).",
            "VernacAssumption",
            "68e13674718935d8389ad2412ba0d6d20b38001f"
        ],
        [
            "Hypothesis nsHG : H <| G.",
            "VernacAssumption",
            "b65caca3255cc33c69716352f7de8fc96ccc9746"
        ],
        [
            "Local Notation theta := 'chi_t.",
            "VernacSyntacticDefinition",
            "7a768d6af3d7896f2c6e9de8f905fb61fd53ab47"
        ],
        [
            "Local Notation T := 'I_G[theta]%G.",
            "VernacSyntacticDefinition",
            "7c26992cc412e3e97ce04c0e35e8c5da3d585fc8"
        ],
        [
            "Local Notation \"` 'T'\" := 'I_(gval G)[theta] (at level 0, format \"` 'T'\") : group_scope.",
            "VernacNotation",
            "d6bfbdd1bf2f2e0e3ff223de34972ac9a8e21bb4"
        ],
        [
            "Let calA := irr_constt ('Ind[T] theta).",
            "VernacDefinition",
            "c98ad45ed68940f1671c47a515dd44acbbbd7bc8"
        ],
        [
            "Let calB := irr_constt ('Ind[G] theta).",
            "VernacDefinition",
            "017ac27cb62eab44127a3b4fb053ce94d9ef015a"
        ],
        [
            "Local Notation AtoB := (Ind_Iirr G).",
            "VernacSyntacticDefinition",
            "f02a8de02d5024a8461be5880564208465714637"
        ],
        [
            "Theorem constt_Inertia_bijection : [/\\ {in calA, forall s, 'Ind[G] 'chi_s \\in irr G}, {in calA &, injective (Ind_Iirr G)}, Ind_Iirr G @: calA =i calB, {in calA, forall s (psi := 'chi_s) (chi := 'Ind[G] psi), [predI irr_constt ('Res chi) & calA] =i pred1 s} & {in calA, forall s (psi := 'chi_s) (chi := 'Ind[G] psi), '['Res psi, theta] = '['Res chi, theta]}].",
            "VernacStartTheoremProof",
            "900824118d992bc5f5fabb1b31af471e449508e7"
        ],
        [
            "have [sHG sTG]: H \\subset G /\\ T \\subset G by rewrite subsetIl normal_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nsHT : H <| T := normal_Inertia theta sHG; have sHT := normal_sub nsHT.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have AtoB_P s (psi := 'chi_s) (chi := 'Ind[G] psi): s \\in calA -> [/\\ chi \\in irr G, AtoB s \\in calB & '['Res psi, theta] = '['Res chi, theta]].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !constt_Ind_Res => sHt; have [r sGr] := constt_cfInd_irr s sTG.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "have rTs: s \\in irr_constt ('Res[T] 'chi_r) by rewrite -constt_Ind_Res.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have NrT: 'Res[T] 'chi_r \\is a character by rewrite cfRes_char ?irr_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have rHt: t \\in irr_constt ('Res[H] 'chi_r).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by have:= constt_Res_trans NrT rTs sHt; rewrite cfResRes.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose e := '['Res[H] 'chi_r, theta]; set f := '['Res[H] psi, theta].",
            "VernacExtend",
            "9fb5f9e31e2512a271fa21fe890324d2e3052c71"
        ],
        [
            "have DrH: 'Res[H] 'chi_r = e *: \\sum_(xi <- (theta ^: G)%CF) xi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exact: Clifford_Res_sum_cfclass.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have DpsiH: 'Res[H] psi = f *: theta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (Clifford_Res_sum_cfclass nsHT sHt).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfclass_invariant ?subsetIr ?big_seq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ub_chi_r: 'chi_r 1%g <= chi 1%g ?= iff ('chi_r == chi).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Nchi: chi \\is a character by rewrite cfInd_char ?irr_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [chi1 Nchi1->] := constt_charP _ Nchi sGr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite addrC cfunE -lerif_subLR subrr eq_sym -subr_eq0 addrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by split; rewrite ?char1_ge0 // eq_sym char1_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have lb_chi_r: chi 1%g <= 'chi_r 1%g ?= iff (f == e).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite cfInd1 // -(cfRes1 H) DpsiH -(cfRes1 H 'chi_r) DrH !cfunE sum_cfunE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (eq_big_seq (fun _ => theta 1%g)) => [|i]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/cfclassP=> y _ ->; rewrite cfConjg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite reindex_cfclass //= sumr_const -(eq_card (cfclass_IirrE _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulr_natl mulrnAr card_cfclass_Iirr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mono_lerif (ler_pmuln2r (indexg_gt0 G T))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mono_lerif (ler_pmul2r (irr1_gt0 t))); apply: lerif_eq.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite /e -(cfResRes _ sHT) ?cfdot_Res_ge_constt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [_ /esym] := lerif_trans ub_chi_r lb_chi_r; rewrite eqxx.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by case/andP=> /eqP Dchi /eqP->; rewrite cfIirrE -/chi -?Dchi ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have part_c: {in calA, forall s (chi := 'Ind[G] 'chi_s), [predI irr_constt ('Res[T] chi) & calA] =i pred1 s}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> s As chi s1; have [irr_chi _ /eqP Dchi_theta] := AtoB_P s As.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have chiTs: s \\in irr_constt ('Res[T] chi).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite irr_consttE cfdot_Res_l irrWnorm ?oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/andP/eqP=> [[/= chiTs1 As1] | -> //].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: contraTeq Dchi_theta => s's1; rewrite ltr_eqF // -/chi.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have [|phi Nphi DchiT] := constt_charP _ _ chiTs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cfRes_char ?cfInd_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [|phi1 Nphi1 Dphi] := constt_charP s1 Nphi _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite irr_consttE -(canLR (addKr _) DchiT) addrC cfdotBl cfdot_irr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrb ifN_eqC ?subr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(cfResRes chi sHT sTG) DchiT Dphi !rmorphD !cfdotDl /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -ltr_subl_addl subrr ltr_paddr ?ltr_def //; rewrite Cnat_ge0 ?Cnat_cfdot_char ?cfRes_char ?irr_char //.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by rewrite andbT -irr_consttE -constt_Ind_Res.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "do [split=> //; try by move=> s /AtoB_P[]] => [s1 s2 As1 As2 | r].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [[irr_s1G _ _] [irr_s2G _ _]] := (AtoB_P _ As1, AtoB_P _ As2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/(congr1 (tnth (irr G))); rewrite !cfIirrE // => eq_s12_G.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply/eqP; rewrite -[_ == _]part_c // inE /= As1 -eq_s12_G.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -As1 [_ && _]part_c // inE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/imsetP/idP=> [[s /AtoB_P[_ BsG _] -> //] | Br].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have /exists_inP[s rTs As]: [exists s in irr_constt ('Res 'chi_r), s \\in calA].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -negb_forall_in; apply: contra Br => /eqfun_inP => o_tT_rT.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite -(cfIndInd _ sTG sHT) -cfdot_Res_r ['Res _]cfun_sum_constt.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfdot_sumr big1 // => i rTi; rewrite cfdotZr o_tT_rT ?mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists s => //; have [/irrP[r1 DsG] _ _] := AtoB_P s As.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "by apply/eqP; rewrite /AtoB -constt_Ind_Res DsG irrK constt_irr in rTs *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ConsttInertiaBijection.",
            "VernacEndSegment",
            "396ad2b0a3252521340840fc26c4cebc55c996a1"
        ],
        [
            "Section ExtendInvariantIrr.",
            "VernacBeginSection",
            "2ec658b586f8018f597ec53e56d3765f7a6f79e3"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Implicit Types G H K L M N : {group gT}.",
            "VernacReserve",
            "c5dd299af4d232938f8eac7d4f8332d49789b9a0"
        ],
        [
            "Section ConsttIndExtendible.",
            "VernacBeginSection",
            "2c06a3d90b08a655f5ec05fcddeea66e9c7cab3a"
        ],
        [
            "Variables (G N : {group gT}) (t : Iirr N) (c : Iirr G).",
            "VernacAssumption",
            "0abcdc3f4cd5241021e921e389ae2bb97fc1a5b7"
        ],
        [
            "Let theta := 'chi_t.",
            "VernacDefinition",
            "7247560779ee5394fbcabf18beca1b9f95fcc65d"
        ],
        [
            "Let chi := 'chi_c.",
            "VernacDefinition",
            "3f8f1d37729f2044261aa45020113c26614fa19c"
        ],
        [
            "Definition mul_Iirr b := cfIirr ('chi_b * chi).",
            "VernacDefinition",
            "261bbd7c4e75d4065d17ddcd2d853a8fc1f029d5"
        ],
        [
            "Definition mul_mod_Iirr (b : Iirr (G / N)) := mul_Iirr (mod_Iirr b).",
            "VernacDefinition",
            "819022132e29cb43dcc6a86cb837e22296faa0ea"
        ],
        [
            "Hypotheses (nsNG : N <| G) (cNt : 'Res[N] chi = theta).",
            "VernacAssumption",
            "001f77cad358603d9b3c824af28127a641fd0227"
        ],
        [
            "Let sNG : N \\subset G.",
            "VernacDefinition",
            "5ec795e2c2c7760e33105795663fdd15c01edf49"
        ],
        [
            "exact: normal_sub.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let nNG : G \\subset 'N(N).",
            "VernacDefinition",
            "56986d1e7fb595726330e142411fa8827d2cf733"
        ],
        [
            "exact: normal_norm.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extendible_irr_invariant : G \\subset 'I[theta].",
            "VernacStartTheoremProof",
            "11fe3d3c391e97b338bcb495dd2f589d69fde2be"
        ],
        [
            "apply/subsetP=> y Gy; have nNy := subsetP nNG y Gy.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite inE nNy; apply/eqP/cfun_inP=> x Nx; rewrite cfConjgE // -cNt.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by rewrite !cfResE ?memJ_norm ?cfunJ ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let IGtheta := extendible_irr_invariant.",
            "VernacDefinition",
            "96cb19be19c31010923ecf6c86f93092e1a3d059"
        ],
        [
            "Theorem constt_Ind_mul_ext f (phi := 'chi_f) (psi := phi * theta) : G \\subset 'I[phi] -> psi \\in irr N -> let calS := irr_constt ('Ind phi) in [/\\ {in calS, forall b, 'chi_b * chi \\in irr G}, {in calS &, injective mul_Iirr}, irr_constt ('Ind psi) =i [seq mul_Iirr b | b in calS] & 'Ind psi = \\sum_(b in calS) '['Ind phi, 'chi_b] *: 'chi_(mul_Iirr b)].",
            "VernacStartTheoremProof",
            "6d077e6cc74b637fac4f888401e0a6214afcf71a"
        ],
        [
            "move=> IGphi irr_psi calS.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have IGpsi: G \\subset 'I[psi].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (subset_trans _ (inertia_mul _ _)) // subsetI IGphi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose e b := '['Ind[G] phi, 'chi_b]; pose d b g := '['chi_b * chi, 'chi_g * chi].",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have Ne b: e b \\in Cnat by rewrite Cnat_cfdot_char ?cfInd_char ?irr_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have egt0 b: b \\in calS -> e b > 0 by rewrite Cnat_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have DphiG: 'Ind phi = \\sum_(b in calS) e b *: 'chi_b := cfun_sum_constt _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have DpsiG: 'Ind psi = \\sum_(b in calS) e b *: 'chi_b * chi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /psi -cNt cfIndM // DphiG mulr_suml.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose d_delta := [forall b in calS, forall g in calS, d b g == (b == g)%:R].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have charMchi b: 'chi_b * chi \\is a character by rewrite rpredM ?irr_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [_]: '['Ind[G] phi] <= '['Ind[G] psi] ?= iff d_delta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose sum_delta := \\sum_(b in calS) e b * \\sum_(g in calS) e g * (b == g)%:R.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose sum_d := \\sum_(b in calS) e b * \\sum_(g in calS) e g * d b g.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have ->: '['Ind[G] phi] = sum_delta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite DphiG cfdot_suml; apply: eq_bigr => b _; rewrite cfdotZl cfdot_sumr.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by congr (_ * _); apply: eq_bigr => g; rewrite cfdotZr cfdot_irr conj_Cnat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ->: '['Ind[G] psi] = sum_d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite DpsiG cfdot_suml; apply: eq_bigr => b _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -scalerAl cfdotZl cfdot_sumr; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply: eq_bigr => g _; rewrite -scalerAl cfdotZr conj_Cnat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have eMmono := mono_lerif (ler_pmul2l (egt0 _ _)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: lerif_sum => b /eMmono->; apply: lerif_sum => g /eMmono->.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "split; last exact: eq_sym.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have /CnatP[n Dd]: d b g \\in Cnat by rewrite Cnat_cfdot_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [Db | _] := eqP; rewrite Dd leC_nat // -ltC_nat -Dd Db cfnorm_gt0.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite -char1_eq0 // cfunE mulf_neq0 ?irr1_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -!cfdot_Res_l ?cfRes_Ind_invariant // !cfdotZl cfnorm_irr irrWnorm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite eqxx => /esym/forall_inP/(_ _ _)/eqfun_inP; rewrite /d /= => Dd.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "have irrMchi: {in calS, forall b, 'chi_b * chi \\in irr G}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> b Sb; rewrite /= irrEchar charMchi Dd ?eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have injMchi: {in calS &, injective mul_Iirr}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> b g Sb Sg /(congr1 (fun s => '['chi_s, 'chi_(mul_Iirr g)]))/eqP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite cfnorm_irr !cfIirrE ?irrMchi ?Dd // pnatr_eq1; case: (b =P g).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{DpsiG} ->: 'Ind psi = \\sum_(b in calS) e b *: 'chi_(mul_Iirr b).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite DpsiG; apply: eq_bigr => b Sb; rewrite -scalerAl cfIirrE ?irrMchi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> // i; rewrite irr_consttE cfdot_suml; apply/idP/idP=> [|/imageP[b Sb ->]].",
            "VernacExtend",
            "9c74624cac92f94e452c274a33342e43b2955888"
        ],
        [
            "apply: contraR => N'i; rewrite big1 // => b Sb.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite cfdotZl cfdot_irr mulrb ifN_eqC ?mulr0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: contraNneq N'i => ->; apply: image_f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite gtr_eqF // (bigD1 b) //= cfdotZl cfnorm_irr mulr1 ltr_paddr ?egt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: sumr_ge0 => g /andP[Sg _]; rewrite cfdotZl cfdot_irr.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mulr_ge0 ?ler0n ?Cnat_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary constt_Ind_ext : [/\\ forall b : Iirr (G / N), 'chi_(mod_Iirr b) * chi \\in irr G, injective mul_mod_Iirr, irr_constt ('Ind theta) =i codom mul_mod_Iirr & 'Ind theta = \\sum_b 'chi_b 1%g *: 'chi_(mul_mod_Iirr b)].",
            "VernacStartTheoremProof",
            "679a77be0c6c190b04079b67e2a555d065b3cb92"
        ],
        [
            "have IHchi0: G \\subset 'I['chi[N]_0] by rewrite inertia_irr0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [] := constt_Ind_mul_ext IHchi0; rewrite irr0 ?mul1r ?mem_irr //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "set psiG := 'Ind 1 => irrMchi injMchi constt_theta {2}->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have dot_psiG b: '[psiG, 'chi_(mod_Iirr b)] = 'chi[G / N]_b 1%g.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mod_IirrE // -cfdot_Res_r cfRes_sub_ker ?cfker_mod //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfdotZr cfnorm1 mulr1 conj_Cnat ?cfMod1 ?Cnat_irr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have mem_psiG (b : Iirr (G / N)): mod_Iirr b \\in irr_constt psiG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite irr_consttE dot_psiG irr1_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have constt_psiG b: (b \\in irr_constt psiG) = (N \\subset cfker 'chi_b).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/idP/idP=> [psiGb | /quo_IirrK <- //].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite constt0_Res_cfker // -constt_Ind_Res irr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> [b | b g /injMchi/(can_inj (mod_IirrK nsNG))-> // | b0 | ].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: irrMchi.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite constt_theta.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/imageP/imageP=> [][b psiGb ->]; last by exists (mod_Iirr b).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists (quo_Iirr N b) => //; rewrite /mul_mod_Iirr quo_IirrK -?constt_psiG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (reindex_onto _ _ (in1W (mod_IirrK nsNG))) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/esym/eq_big => b; first by rewrite constt_psiG quo_IirrKeq.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -dot_psiG /mul_mod_Iirr => /eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ConsttIndExtendible.",
            "VernacEndSegment",
            "7980692cebd425c19f2d9761d9111a064d67131d"
        ],
        [
            "Theorem invariant_chief_irr_cases G K L s (theta := 'chi[K]_s) : chief_factor G L K -> abelian (K / L) -> G \\subset 'I[theta] -> let t := #|K : L| in [\\/ 'Res[L] theta \\in irr L, exists2 e, exists p, 'Res[L] theta = e%:R *: 'chi_p & (e ^ 2)%N = t | exists2 p, injective p & 'Res[L] theta = \\sum_(i < t) 'chi_(p i)].",
            "VernacStartTheoremProof",
            "f5c84b9e91c1eb59080837959948e971e470dcfd"
        ],
        [
            "case/andP=> /maxgroupP[/andP[ltLK nLG] maxL] nsKG abKbar IGtheta t.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [sKG nKG] := andP nsKG; have sLG := subset_trans (proper_sub ltLK) sKG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have nsLG: L <| G by apply/andP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nsLK := normalS (proper_sub ltLK) sKG nsLG; have [sLK nLK] := andP nsLK.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have [p0 sLp0] := constt_cfRes_irr L s; rewrite -/theta in sLp0.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "pose phi := 'chi_p0; pose T := 'I_G[phi].",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have sTG: T \\subset G := subsetIl G _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /eqP mulKT: (K * T)%g == G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite eqEcard mulG_subG sKG sTG -LagrangeMr -indexgI -(Lagrange sTG) /= -/T.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulnC leq_mul // setIA (setIidPl sKG) -!size_cfclass // -/phi.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite uniq_leq_size ?cfclass_uniq // => _ /cfclassP[x Gx ->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have: conjg_Iirr p0 x \\in irr_constt ('Res theta).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /inertiaJ <-: x \\in 'I[theta] := subsetP IGtheta x Gx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(cfConjgRes _ nsKG) // irr_consttE conjg_IirrE // cfConjg_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: contraR; rewrite -conjg_IirrE // => not_sLp0x.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite (Clifford_Res_sum_cfclass nsLK sLp0) cfdotZl cfdot_suml.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite big1_seq ?mulr0 // => _ /cfclassP[y Ky ->]; rewrite -conjg_IirrE //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite cfdot_irr mulrb ifN_eq ?(contraNneq _ not_sLp0x) // => <-.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite conjg_IirrE //; apply/cfclassP; exists y.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nsKT_G: K :&: T <| G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /normal subIset ?sKG // -mulKT setIA (setIidPl sKG) mulG_subG.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite normsIG // sub_der1_norm ?subsetIl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: subset_trans (der1_min nLK abKbar) (sub_Inertia _ sLK).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have [e DthL]: exists e, 'Res theta = e%:R *: \\sum_(xi <- (phi ^: K)%CF) xi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (Clifford_Res_sum_cfclass nsLK sLp0) -/phi; set e := '[_, _].",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "by exists (truncC e); rewrite truncCK ?Cnat_cfdot_char ?cfRes_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [defKT | ltKT_K] := eqVneq (K :&: T) K; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have defKT: K :&: T = L.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: maxL; last by rewrite subsetI sLK sub_Inertia.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite normal_norm // properEneq ltKT_K subsetIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have t_cast: size (phi ^: K)%CF = t.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite size_cfclass //= -{2}(setIidPl sKG) -setIA defKT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose phiKt := Tuple (introT eqP t_cast); pose p i := cfIirr (tnth phiKt i).",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have pK i: 'chi_(p i) = (phi ^: K)%CF`_i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite cfIirrE; first by rewrite (tnth_nth 0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have /cfclassP[y _ ->] := mem_tnth i phiKt; rewrite cfConjg_irr ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "constructor 3; exists p => [i j /(congr1 (tnth (irr L)))/eqP| ].",
            "VernacExtend",
            "591727cad271e0ed68bad8fb6d8fccdb32bdd7c3"
        ],
        [
            "by apply: contraTeq; rewrite !pK !nth_uniq ?t_cast ?cfclass_uniq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{DthL} DthL: 'Res theta = e%:R *: \\sum_(i < t) (phi ^: K)%CF`_i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite DthL (big_nth 0) big_mkord t_cast.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices /eqP e1: e == 1%N by rewrite DthL e1 scale1r; apply: eq_bigr.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "have Dth1: theta 1%g = e%:R * t%:R * phi 1%g.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -[t]card_ord -mulrA -(cfRes1 L) DthL cfunE; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite mulr_natl -sumr_const sum_cfunE -t_cast; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by have /cfclassP[y _ ->] := mem_nth 0 (valP i); rewrite cfConjg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqn_leq lt0n (contraNneq _ (irr1_neq0 s)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite Dth1 => ->; rewrite !mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -leC_nat -(ler_pmul2r (gt0CiG K L)) -/t -(ler_pmul2r (irr1_gt0 p0)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mul1r -Dth1 -cfInd1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite char1_ge_constt ?cfInd_char ?irr_char ?constt_Ind_Res.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have IKphi: 'I_K[phi] = K by rewrite -{1}(setIidPl sKG) -setIA.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{DthL} DthL: 'Res[L] theta = e%:R *: phi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite DthL -[rhs in (_ ^: rhs)%CF]IKphi cfclass_inertia big_seq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose mmLth := @mul_mod_Iirr K L s.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have linKbar := char_abelianP _ abKbar.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have LmodL i: ('chi_i %% L)%CF \\is a linear_char := cfMod_lin_char (linKbar i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have mmLthE i: 'chi_(mmLth i) = ('chi_i %% L)%CF * theta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cfIirrE ?mod_IirrE // mul_lin_irr ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have mmLthL i: 'Res[L] 'chi_(mmLth i) = 'Res[L] theta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mmLthE rmorphM /= cfRes_sub_ker ?cfker_mod ?lin_char1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite scale1r mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [inj_Mphi | /injectivePn[i [j i'j eq_mm_ij]]] := boolP (injectiveb mmLth).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices /eqP e1: e == 1%N by constructor 1; rewrite DthL e1 scale1r mem_irr.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite eqn_leq lt0n (contraNneq _ (irr1_neq0 s)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(cfRes1 L) DthL cfunE => ->; rewrite !mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -leq_sqr -leC_nat natrX -(ler_pmul2r (irr1_gt0 p0)) -mulrA mul1r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have ->: e%:R * 'chi_p0 1%g = 'Res[L] theta 1%g by rewrite DthL cfunE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite cfRes1 -(ler_pmul2l (gt0CiG K L)) -cfInd1 // -/phi.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -card_quotient // -card_Iirr_abelian // mulr_natl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ['Ind phi]cfun_sum_cfdot sum_cfunE (bigID (mem (codom mmLth))) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ler_paddr ?sumr_ge0 // => [i _|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite char1_ge0 ?rpredZ_Cnat ?Cnat_cfdot_char ?cfInd_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -big_uniq //= big_map big_filter -sumr_const ler_sum // => i _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite cfunE -[in rhs in _ <= rhs](cfRes1 L) -cfdot_Res_r mmLthL cfRes1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite DthL cfdotZr rmorph_nat cfnorm_irr mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "constructor 2; exists e; first by exists p0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose mu := (('chi_i / 'chi_j)%R %% L)%CF; pose U := cfker mu.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have lin_mu: mu \\is a linear_char by rewrite cfMod_lin_char ?rpred_div.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Uj := lin_char_unitr (linKbar j).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ltUK: U \\proper K.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /proper cfker_sub /U; have /irrP[k Dmu] := lin_char_irr lin_mu.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "rewrite Dmu subGcfker -irr_eq1 -Dmu cfMod_eq1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (can2_eq (divrK Uj) (mulrK Uj)) mul1r (inj_eq irr_inj).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices: theta \\in 'CF(K, L).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite -cfnorm_Res_lerif // DthL cfnormZ !cfnorm_irr !mulr1 normr_nat.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -natrX eqC_nat => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have <-: gcore U G = L.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: maxL; last by rewrite sub_gcore ?cfker_mod.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gcore_norm (sub_proper_trans (gcore_sub _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/cfun_onP=> x; apply: contraNeq => nz_th_x.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply/bigcapP=> y /(subsetP IGtheta)/setIdP[nKy /eqP th_y].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: contraR nz_th_x; rewrite mem_conjg -{}th_y cfConjgE {nKy}//.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "move: {x y}(x ^ _) => x U'x; have [Kx | /cfun0-> //] := boolP (x \\in K).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have /eqP := congr1 (fun k => (('chi_j %% L)%CF^-1 * 'chi_k) x) eq_mm_ij.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -rmorphV // !mmLthE !mulrA -!rmorphM mulVr //= rmorph1 !cfunE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mulrC _^-1) -/mu -subr_eq0 -mulrBl cfun1E Kx mulf_eq0 => /orP[]//.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite mulrb subr_eq0 -(lin_char1 lin_mu) [_ == _](contraNF _ U'x) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /U cfkerEchar ?lin_charW // inE Kx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary cfRes_prime_irr_cases G N s p (chi := 'chi[G]_s) : N <| G -> #|G : N| = p -> prime p -> [\\/ 'Res[N] chi \\in irr N | exists2 c, injective c & 'Res[N] chi = \\sum_(i < p) 'chi_(c i)].",
            "VernacStartTheoremProof",
            "48fb916385f36656033e1a6d4ef88caa02576a45"
        ],
        [
            "move=> /andP[sNG nNG] iGN pr_p.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have chiefGN: chief_factor G N G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/andP; split=> //; apply/maxgroupP.",
            "VernacExtend",
            "09ff90107c05f6bf4f743acb58a064bacfe65029"
        ],
        [
            "split=> [|M /andP[/andP[sMG ltMG] _] sNM].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /proper sNG -indexg_gt1 iGN prime_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/esym/eqP; rewrite eqEsubset sNM -indexg_eq1 /= eq_sym.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(eqn_pmul2l (indexg_gt0 G M)) muln1 Lagrange_index // iGN.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/eqP/prime_nt_dvdP; rewrite ?indexg_eq1 // -iGN indexgS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have abGbar: abelian (G / N).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cyclic_abelian ?prime_cyclic ?card_quotient ?iGN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have IGchi: G \\subset 'I[chi] by apply: sub_inertia.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [] := invariant_chief_irr_cases chiefGN abGbar IGchi; first by left.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=> e _ /(congr1 (fun m => odd (logn p m)))/eqP/idPn[].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite lognX mul2n odd_double iGN logn_prime // eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite iGN; right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary prime_invariant_irr_extendible G N s p : N <| G -> #|G : N| = p -> prime p -> G \\subset 'I['chi_s] -> {t | 'Res[N, G] 'chi_t = 'chi_s}.",
            "VernacStartTheoremProof",
            "7594e701b5537a0d501bf52c6648c984f231be95"
        ],
        [
            "move=> nsNG iGN pr_p IGchi.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [t sGt] := constt_cfInd_irr s (normal_sub nsNG); exists t.",
            "VernacExtend",
            "017608108741b883510caeca55373f60fa242408"
        ],
        [
            "have [e DtN]: exists e, 'Res 'chi_t = e%:R *: 'chi_s.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite constt_Ind_Res in sGt.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (Clifford_Res_sum_cfclass nsNG sGt); set e := '[_, _].",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "rewrite cfclass_invariant // big_seq1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by exists (truncC e); rewrite truncCK ?Cnat_cfdot_char ?cfRes_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/irrWnorm/eqP | [c injc DtNc]] := cfRes_prime_irr_cases t nsNG iGN pr_p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite DtN cfnormZ cfnorm_irr normr_nat mulr1 -natrX pnatr_eq1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite muln_eq1 andbb => /eqP->; rewrite scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nz_e: e != 0%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: 'Res[N] 'chi_t != 0 by rewrite cfRes_eq0 // ?irr_char ?irr_neq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite DtN; apply: contraNneq => ->; rewrite scale0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [i s'ci]: exists i, c i != s.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose i0 := Ordinal (prime_gt0 pr_p); pose i1 := Ordinal (prime_gt1 pr_p).",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have [<- | ] := eqVneq (c i0) s; last by exists i0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists i1; rewrite (inj_eq injc).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /esym/eqP/idPn[] := congr1 (cfdotr 'chi_(c i)) DtNc; rewrite {1}DtN /=.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite cfdot_suml cfdotZl cfdot_irr mulrb ifN_eqC // mulr0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (bigD1 i) //= cfnorm_irr big1 ?addr0 ?oner_eq0 // => j i'j.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite cfdot_irr mulrb ifN_eq ?(inj_eq injc).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extend_to_cfdet G N s c0 u : let theta := 'chi_s in let lambda := cfDet theta in let mu := 'chi_u in N <| G -> coprime #|G : N| (truncC (theta 1%g)) -> 'Res[N, G] 'chi_c0 = theta -> 'Res[N, G] mu = lambda -> exists2 c, 'Res 'chi_c = theta /\\ cfDet 'chi_c = mu & forall c1, 'Res 'chi_c1 = theta -> cfDet 'chi_c1 = mu -> c1 = c.",
            "VernacStartTheoremProof",
            "aa45780135398e6e7fdddfcecb5a01feff95ac3a"
        ],
        [
            "move=> theta lambda mu nsNG; set e := #|G : N|; set f := truncC _.",
            "VernacExtend",
            "2ed4407a743960054f801c19fd623f6ef3da7a83"
        ],
        [
            "set eta := 'chi_c0 => co_e_f etaNth muNlam; have [sNG nNG] := andP nsNG.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "have fE: f%:R = theta 1%g by rewrite truncCK ?Cnat_irr1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose nu := cfDet eta; have lin_nu: nu \\is a linear_char := cfDet_lin_char _.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have nuNlam: 'Res nu = lambda by rewrite -cfDetRes ?irr_char ?etaNth.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have lin_lam: lambda \\is a linear_char := cfDet_lin_char _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have lin_mu: mu \\is a linear_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by have:= lin_lam; rewrite -muNlam; apply: cfRes_lin_lin; apply: irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [Unu Ulam] := (lin_char_unitr lin_nu, lin_char_unitr lin_lam).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose alpha := mu / nu.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have alphaN_1: 'Res[N] alpha = 1 by rewrite rmorph_div //= muNlam nuNlam divrr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have lin_alpha: alpha \\is a linear_char by apply: rpred_div.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have alpha_e: alpha ^+ e = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have kerNalpha: N \\subset cfker alpha.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -subsetIidl -cfker_Res ?lin_charW // alphaN_1 cfker_cfun1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite -(cfQuoK nsNG kerNalpha) -rmorphX cfMod_eq1 //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -dvdn_cforder /e -card_quotient //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cforder_lin_char_dvdG ?cfQuo_lin_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have det_alphaXeta b: cfDet (alpha ^+ b * eta) = alpha ^+ (b * f) * nu.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cfDet_mul_lin ?rpredX ?irr_char // -exprM -(cfRes1 N) etaNth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [b bf_mod_e]: exists b, b * f = 1 %[mod e].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(chinese_modl co_e_f 1 0) /chinese !mul0n addn0 !mul1n mulnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by exists (egcdn f e).1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have alpha_bf: alpha ^+ (b * f) = alpha.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(expr_mod _ alpha_e) bf_mod_e expr_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /irrP[c Dc]: alpha ^+ b * eta \\in irr G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mul_lin_irr ?rpredX ?mem_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have chiN: 'Res 'chi_c = theta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -Dc rmorphM rmorphX /= alphaN_1 expr1n mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have det_chi: cfDet 'chi_c = mu by rewrite -Dc det_alphaXeta alpha_bf divrK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists c => // c2 c2Nth det_c2_mu; apply: irr_inj.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "have [irrMc _ imMc _] := constt_Ind_ext nsNG chiN.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /codomP[s2 Dc2]: c2 \\in codom (@mul_mod_Iirr G N c).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -imMc constt_Ind_Res c2Nth constt_irr ?inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{Dc2} Dc2: 'chi_c2 = ('chi_s2 %% N)%CF * 'chi_c.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite Dc2 cfIirrE // mod_IirrE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have s2_lin: 'chi_s2 \\is a linear_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite qualifE irr_char; apply/eqP/(mulIf (irr1_neq0 c)).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite mul1r -[in rhs in _ = rhs](cfRes1 N) chiN -c2Nth cfRes1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Dc2 cfunE cfMod1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have s2Xf_1: 'chi_s2 ^+ f = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/(can_inj (cfModK nsNG))/(mulIr (lin_char_unitr lin_mu))/esym.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite rmorph1 rmorphX /= mul1r -{1}det_c2_mu Dc2 -det_chi.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfDet_mul_lin ?cfMod_lin_char ?irr_char // -(cfRes1 N) chiN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices /eqP s2_1: 'chi_s2 == 1 by rewrite Dc2 s2_1 rmorph1 mul1r.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite -['chi_s2]expr1 -dvdn_cforder -(eqnP co_e_f) dvdn_gcd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /e -card_quotient ?cforder_lin_char_dvdG //= dvdn_cforder s2Xf_1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem solvable_irr_extendible_from_det G N s (theta := 'chi[N]_s) : N <| G -> solvable (G / N) -> G \\subset 'I[theta] -> coprime #|G : N| (truncC (theta 1%g)) -> [exists c, 'Res 'chi[G]_c == theta] = [exists u, 'Res 'chi[G]_u == cfDet theta].",
            "VernacStartTheoremProof",
            "0eae8e5ae830bcb185f77a734108a6ec8df8f0b2"
        ],
        [
            "set e := #|G : N|; set f := truncC _ => nsNG solG IGtheta co_e_f.",
            "VernacExtend",
            "ced270260aea2dd3ab523a646806c84962140531"
        ],
        [
            "apply/exists_eqP/exists_eqP=> [[c cNth] | [u uNdth]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have /lin_char_irr/irrP[u Du] := cfDet_lin_char 'chi_c.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists u; rewrite -Du -cfDetRes ?irr_char ?cNth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: {2}e.+1 (ltnSn e) => m.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: m => // m IHm in G u e nsNG solG IGtheta co_e_f uNdth *.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite ltnS => le_e; have [sNG nNG] := andP nsNG.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "have [<- | ltNG] := eqsVneq N G; first by exists s; rewrite cfRes_id.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [G0 maxG0 sNG0]: {G0 | maxnormal (gval G0) G G & N \\subset G0}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: maxgroup_exists; rewrite properEneq ltNG sNG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/andP[ltG0G nG0G] maxG0_P] := maxgroupP maxG0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "set mu := 'chi_u in uNdth; have lin_mu: mu \\is a linear_char.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "by rewrite qualifE irr_char -(cfRes1 N) uNdth /= lin_char1 ?cfDet_lin_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sG0G := proper_sub ltG0G; have nsNG0 := normalS sNG0 sG0G nsNG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have nsG0G: G0 <| G by apply/andP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /lin_char_irr/irrP[u0 Du0] := cfRes_lin_char G0 lin_mu.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have u0Ndth: 'Res 'chi_u0 = cfDet theta by rewrite -Du0 cfResRes.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have IG0theta: G0 \\subset 'I[theta].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (subset_trans sG0G) // -IGtheta subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have coG0f: coprime #|G0 : N| f by rewrite (coprime_dvdl _ co_e_f) ?indexSg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{m IHm le_e} [c0 c0Ns]: exists c0, 'Res 'chi[G0]_c0 = theta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have solG0: solvable (G0 / N) := solvableS (quotientS N sG0G) solG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: IHm nsNG0 solG0 IG0theta coG0f u0Ndth (leq_trans _ le_e).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -(ltn_pmul2l (cardG_gt0 N)) !Lagrange ?proper_card.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{c0 c0Ns} [c0 [c0Ns dc0_u0] Uc0] := extend_to_cfdet nsNG0 coG0f c0Ns u0Ndth.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have IGc0: G \\subset 'I['chi_c0].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/subsetP=> x Gx; rewrite inE (subsetP nG0G) //= -conjg_IirrE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/eqP; congr 'chi__; apply: Uc0; rewrite conjg_IirrE.",
            "VernacExtend",
            "fa6171a79bfbc42d0445547471a3cf297b71778a"
        ],
        [
            "by rewrite -(cfConjgRes _ nsG0G nsNG) // c0Ns inertiaJ ?(subsetP IGtheta).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite cfDetConjg dc0_u0 -Du0 (cfConjgRes _ _ nsG0G) // cfConjg_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have prG0G: prime #|G : G0|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [h injh im_h] := third_isom sNG0 nsNG nsG0G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -card_quotient // -im_h // card_injm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite simple_sol_prime 1?quotient_sol //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /simple -(injm_minnormal injh) // im_h // maxnormal_minnormal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [t tG0c0] := prime_invariant_irr_extendible nsG0G (erefl _) prG0G IGc0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists t; rewrite /theta -c0Ns -tG0c0 cfResRes.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem extend_linear_char_from_Sylow G N (lambda : 'CF(N)) : N <| G -> lambda \\is a linear_char -> G \\subset 'I[lambda] -> (forall p, p \\in \\pi('o(lambda)%CF) -> exists2 Hp : {group gT}, [/\\ N \\subset Hp, Hp \\subset G & p.-Sylow(G / N) (Hp / N)%g] & exists u, 'Res 'chi[Hp]_u = lambda) -> exists u, 'Res[N, G] 'chi_u = lambda.",
            "VernacStartTheoremProof",
            "e64479604015593238e95f4ebe8ee6c3bbd52111"
        ],
        [
            "set m := 'o(lambda)%CF => nsNG lam_lin IGlam p_ext_lam.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [sNG nNG] := andP nsNG; have linN := @cfRes_lin_lin _ _ N.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "wlog [p p_lam]: lambda @m lam_lin IGlam p_ext_lam / exists p : nat, \\pi(m) =i (p : nat_pred).",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> IHp; have [linG [cf [inj_cf _ lin_cf onto_cf]]] := lin_char_group N.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "case=> cf1 cfM cfX _ cf_order; have [lam cf_lam] := onto_cf _ lam_lin.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "pose mu p := cf lam.`_p; pose pi_m p := p \\in \\pi(m).",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have Dm: m = #[lam] by rewrite /m cfDet_order_lin // cf_lam cf_order.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Dlambda: lambda = \\prod_(p < m.+1 | pi_m p) mu p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(big_morph cf cfM cf1) big_mkcond cf_lam /pi_m Dm; congr (cf _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite -{1}[lam]prod_constt big_mkord; apply: eq_bigr => p _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by case: ifPn => // p'lam; apply/constt1P; rewrite /p_elt p'natEpi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have lin_mu p: mu p \\is a linear_char by rewrite /mu cfX -cf_lam rpredX.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices /fin_all_exists [u uNlam] (p : 'I_m.+1): exists u, pi_m p -> 'Res[N, G] 'chi_u = mu p.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose nu := \\prod_(p < m.+1 | pi_m p) 'chi_(u p).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have lin_nu: nu \\is a linear_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: rpred_prod => p m_p; rewrite linN ?irr_char ?uNlam.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /irrP[u1 Dnu] := lin_char_irr lin_nu.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists u1; rewrite Dlambda -Dnu rmorph_prod; apply: eq_bigr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [m_p | _] := boolP (pi_m p); last by exists 0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have o_mu: \\pi('o(mu p)%CF) =i (p : nat_pred).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite cfDet_order_lin // cf_order orderE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [|pr_p _ [k ->]] := pgroup_pdiv (p_elt_constt p lam).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cycle_eq1 (sameP eqP constt1P) /p_elt p'natEpi // negbK -Dm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> q; rewrite pi_of_exp // pi_of_prime.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have IGmu: G \\subset 'I[mu p].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (subset_trans IGlam) // /mu cfX -cf_lam.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: (chinese _ _ _ _) => [|k IHk]; first by rewrite inertia1 norm_inertia.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS (subset_trans _ (inertia_mul _ _)) // subsetIidl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [q||u] := IHp _ (lin_mu p) IGmu; [ | by exists p | by exists u].",
            "VernacExtend",
            "0e08935212da43e68e88f0c932dbeda86c4887de"
        ],
        [
            "rewrite o_mu => /eqnP-> {q}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [Hp sylHp [u uNlam]] := p_ext_lam p m_p; exists Hp => //.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "rewrite /mu cfX -cf_lam -uNlam -rmorphX /=; set nu := _ ^+ _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "have /lin_char_irr/irrP[v ->]: nu \\is a linear_char; last by exists v.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite rpredX // linN ?irr_char ?uNlam.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have pi_m_p: p \\in \\pi(m) by rewrite p_lam !inE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [pr_p mgt0]: prime p /\\ (m > 0)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by have:= pi_m_p; rewrite mem_primes => /and3P[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have p_m: p.-nat m by rewrite -(eq_pnat _ p_lam) pnat_pi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{p_ext_lam} [H [sNH sHG sylHbar] [v vNlam]] := p_ext_lam p pi_m_p.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have co_p_GH: coprime p #|G : H|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(index_quotient_eq _ sHG nNG) ?subIset ?sNH ?orbT //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (pnat_coprime (pnat_id pr_p)) //; have [] := and3P sylHbar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have lin_v: 'chi_v \\is a linear_char by rewrite linN ?irr_char ?vNlam.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose nuG := 'Ind[G] 'chi_v.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have [c vGc co_p_f]: exists2 c, c \\in irr_constt nuG & ~~ (p %| 'chi_c 1%g)%C.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/exists_inP; rewrite -negb_forall_in.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: contraL co_p_GH => /forall_inP p_dv_v1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite prime_coprime // negbK -dvdC_nat -[rhs in (_ %| rhs)%C]mulr1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(lin_char1 lin_v) -cfInd1 // ['Ind _]cfun_sum_constt /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite sum_cfunE rpred_sum // => i /p_dv_v1 p_dv_chi1i.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite cfunE dvdC_mull // rpred_Cnat //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite Cnat_cfdot_char ?cfInd_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose f := truncC ('chi_c 1%g); pose b := (egcdn f m).1.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have fK: f%:R = 'chi_c 1%g by rewrite truncCK ?Cnat_irr1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have fb_mod_m: f * b = 1 %[mod m].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have co_m_f: coprime m f.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (pnat_coprime p_m) ?p'natE // -dvdC_nat CdivE fK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -(chinese_modl co_m_f 1 0) /chinese !mul0n addn0 mul1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /irrP[s Dlam] := lin_char_irr lam_lin.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have cHv: v \\in irr_constt ('Res[H] 'chi_c) by rewrite -constt_Ind_Res.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{cHv} cNs: s \\in irr_constt ('Res[N] 'chi_c).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(cfResRes _ sNH) ?(constt_Res_trans _ cHv) ?cfRes_char ?irr_char //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite vNlam Dlam constt_irr !inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have DcN: 'Res[N] 'chi_c = lambda *+ f.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= Clifford_Res_sum_cfclass nsNG cNs.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite cfclass_invariant -Dlam // big_seq1 Dlam => DcN.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have:= cfRes1 N 'chi_c; rewrite DcN cfunE -Dlam lin_char1 // mulr1 => ->.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "by rewrite -scaler_nat fK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /lin_char_irr/irrP[d Dd]: cfDet 'chi_c ^+ b \\is a linear_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite rpredX // cfDet_lin_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists d; rewrite -{}Dd rmorphX /= -cfDetRes ?irr_char // DcN.",
            "VernacExtend",
            "5feff67e5aab0a5d8cc350202e7f92898c264a30"
        ],
        [
            "rewrite cfDetMn ?lin_charW // -exprM cfDet_id //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(expr_mod _ (exp_cforder _)) -cfDet_order_lin // -/m.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite fb_mod_m /m cfDet_order_lin // expr_mod ?exp_cforder.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary extend_coprime_linear_char G N (lambda : 'CF(N)) : N <| G -> lambda \\is a linear_char -> G \\subset 'I[lambda] -> coprime #|G : N| 'o(lambda)%CF -> exists u, [/\\ 'Res 'chi[G]_u = lambda, 'o('chi_u)%CF = 'o(lambda)%CF & forall v, 'Res 'chi_v = lambda -> coprime #|G : N| 'o('chi_v)%CF -> v = u].",
            "VernacStartTheoremProof",
            "4826800c060679dae0ca29ea235c4f0620a31eb2"
        ],
        [
            "set e := #|G : N| => nsNG lam_lin IGlam co_e_lam; have [sNG nNG] := andP nsNG.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "have [p lam_p | v vNlam] := extend_linear_char_from_Sylow nsNG lam_lin IGlam.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists N; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have /irrP[u ->] := lin_char_irr lam_lin; exists u; rewrite cfRes_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> //; rewrite trivg_quotient /pHall sub1G pgroup1 indexg1.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite card_quotient //= -/e (pi'_p'nat _ lam_p) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -coprime_pi' ?indexg_gt0 1?coprime_sym //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by have:= lam_p; rewrite mem_primes => /and3P[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set nu := 'chi_v in vNlam.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have lin_nu: nu \\is a linear_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (@cfRes_lin_lin _ _ N) ?vNlam ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [b be_mod_lam]: exists b, b * e = 1 %[mod 'o(lambda)%CF].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(chinese_modr co_e_lam 0 1) /chinese !mul0n !mul1n mulnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by set b := _.1; exists b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /irrP[u Du]: nu ^+ (b * e) \\in irr G by rewrite lin_char_irr ?rpredX.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists u; set mu := 'chi_u in Du *.",
            "VernacExtend",
            "75c7537dceb6ed20a9810fcb90ed573d10fa322d"
        ],
        [
            "have uNlam: 'Res mu = lambda.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite cfDet_order_lin // in be_mod_lam.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Du rmorphX /= vNlam -(expr_mod _ (exp_cforder _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite be_mod_lam expr_mod ?exp_cforder.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have lin_mu: mu \\is a linear_char by rewrite -Du rpredX.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have o_mu: ('o(mu) = 'o(lambda))%CF.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have dv_o_lam_mu: 'o(lambda)%CF %| 'o(mu)%CF.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !cfDet_order_lin // -uNlam cforder_Res.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have kerNnu_olam: N \\subset cfker (nu ^+ 'o(lambda)%CF).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -subsetIidl -cfker_Res ?rpredX ?irr_char //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite rmorphX /= vNlam cfDet_order_lin // exp_cforder cfker_cfun1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; rewrite eqn_dvd dv_o_lam_mu andbT cfDet_order_lin //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite dvdn_cforder -Du exprAC -dvdn_cforder dvdn_mull //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(cfQuoK nsNG kerNnu_olam) cforder_mod // /e -card_quotient //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cforder_lin_char_dvdG ?cfQuo_lin_char ?rpredX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> // t tNlam co_e_t.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have lin_t: 'chi_t \\is a linear_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (@cfRes_lin_lin _ _ N) ?tNlam ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Ut := lin_char_unitr lin_t.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have kerN_mu_t: N \\subset cfker (mu / 'chi_t)%R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -subsetIidl -cfker_Res ?lin_charW ?rpred_div ?rmorph_div //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /= uNlam tNlam divrr ?lin_char_unitr ?cfker_cfun1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have co_e_mu_t: coprime e #[(mu / 'chi_t)%R]%CF.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices dv_o_mu_t: #[(mu / 'chi_t)%R]%CF %| 'o(mu)%CF * 'o('chi_t)%CF.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite (coprime_dvdr dv_o_mu_t) // coprime_mulr o_mu co_e_lam.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !cfDet_order_lin //; apply/dvdn_cforderP=> x Gx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite invr_lin_char // !cfunE exprMn -rmorphX {2}mulnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !(dvdn_cforderP _) ?conjC1 ?mulr1 // dvdn_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /eqP mu_t_1: mu / 'chi_t == 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(dvdn_cforder (_ / _)%R 1) -(eqnP co_e_mu_t) dvdn_gcd dvdnn andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(cfQuoK nsNG kerN_mu_t) cforder_mod // /e -card_quotient //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cforder_lin_char_dvdG ?cfQuo_lin_char ?rpred_div.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: irr_inj; rewrite -['chi_t]mul1r -mu_t_1 divrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary extend_solvable_coprime_irr G N t (theta := 'chi[N]_t) : N <| G -> solvable (G / N) -> G \\subset 'I[theta] -> coprime #|G : N| ('o(theta)%CF * truncC (theta 1%g)) -> exists c, [/\\ 'Res 'chi[G]_c = theta, 'o('chi_c)%CF = 'o(theta)%CF & forall d, 'Res 'chi_d = theta -> coprime #|G : N| 'o('chi_d)%CF -> d = c].",
            "VernacStartTheoremProof",
            "6d01301a15642d0238d4d30b8cc9ec8166e4efd7"
        ],
        [
            "set e := #|G : N|; set f := truncC _ => nsNG solG IGtheta.",
            "VernacExtend",
            "ced270260aea2dd3ab523a646806c84962140531"
        ],
        [
            "rewrite coprime_mulr => /andP[co_e_th co_e_f].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [sNG nNG] := andP nsNG; pose lambda := cfDet theta.",
            "VernacExtend",
            "fa6ff0c3d4595d45015144bd8c25fb5ac62ed42b"
        ],
        [
            "have lin_lam: lambda \\is a linear_char := cfDet_lin_char theta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have IGlam: G \\subset 'I[lambda].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/subsetP=> y /(subsetP IGtheta)/setIdP[nNy /eqP th_y].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite inE nNy /= -cfDetConjg th_y.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have co_e_lam: coprime e 'o(lambda)%CF by rewrite cfDet_order_lin.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [//|u [uNlam o_u Uu]] := extend_coprime_linear_char nsNG lin_lam IGlam.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /exists_eqP[c cNth]: [exists c, 'Res 'chi[G]_c == theta].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite solvable_irr_extendible_from_det //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/exists_eqP; exists u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{c cNth} [c [cNth det_c] Uc] := extend_to_cfdet nsNG co_e_f cNth uNlam.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have lin_u: 'chi_u \\is a linear_char by rewrite -det_c cfDet_lin_char.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists c; split=> // [|c0 c0Nth co_e_c0].",
            "VernacExtend",
            "5df7b9daf8670a6a3074a4bbc7cd3a2430f8cc6f"
        ],
        [
            "by rewrite !cfDet_order_lin // -det_c in o_u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have lin_u0: cfDet 'chi_c0 \\is a linear_char := cfDet_lin_char 'chi_c0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /irrP[u0 Du0] := lin_char_irr lin_u0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have co_e_u0: coprime e 'o('chi_u0)%CF by rewrite -Du0 cfDet_order_lin.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have eq_u0u: u0 = u by apply: Uu; rewrite // -Du0 -cfDetRes ?irr_char ?c0Nth.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: Uc; rewrite // Du0 eq_u0u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ExtendInvariantIrr.",
            "VernacEndSegment",
            "49c795b70b65742eb89b98c6032cbc4540c206aa"
        ],
        [
            "Section Frobenius.",
            "VernacBeginSection",
            "6c89886b504e80bd9292ca519fa5197016de2243"
        ],
        [
            "Variables (gT : finGroupType) (G K : {group gT}).",
            "VernacAssumption",
            "3f4bf27f55ba49ad56681ee252f0ea5663c59331"
        ],
        [
            "Hypothesis frobGK : [Frobenius G with kernel K].",
            "VernacAssumption",
            "fdf3630b154b509fc1da8bc1af56777ba3bd9464"
        ],
        [
            "Theorem inertia_Frobenius_ker i : i != 0 -> 'I_G['chi[K]_i] = K.",
            "VernacStartTheoremProof",
            "cfe9ffc9257b0ff22d3887d606187b2fccd3e8e4"
        ],
        [
            "have [_ _ nsKG regK] := Frobenius_kerP frobGK; have [sKG nKG] := andP nsKG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "move=> nzi; apply/eqP; rewrite eqEsubset sub_Inertia // andbT.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply/subsetP=> x /setIP[Gx /setIdP[nKx /eqP x_stab_i]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have actIirrK: is_action G (@conjg_Iirr _ K).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=> [y j k eq_jk | j y z Gy Gz].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply/irr_inj/(can_inj (cfConjgK y)); rewrite -!conjg_IirrE eq_jk.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: irr_inj; rewrite !conjg_IirrE (cfConjgM _ nsKG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose ito := Action actIirrK; pose cto := ('Js \\ (subsetT G))%act.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have acts_Js : [acts G, on classes K | 'Js].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/subsetP=> y Gy; have nKy := subsetP nKG y Gy.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite !inE; apply/subsetP=> _ /imsetP[z Gz ->]; rewrite !inE /=.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "rewrite -class_rcoset norm_rlcoset // class_lcoset.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: mem_imset; rewrite memJ_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have acts_cto : [acts G, on classes K | cto] by rewrite astabs_ract subsetIidl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose m := #|'Fix_(classes K | cto)[x]|.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have def_m: #|'Fix_ito[x]| = m.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: card_afix_irr_classes => // j y _ Ky /imsetP[_ /imsetP[z Kz ->] ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite conjg_IirrE cfConjgEJ // cfunJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: (m != 1)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -def_m (cardD1 (0 : Iirr K)) (cardD1 i) !(inE, sub1set) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite conjg_Iirr0 nzi eqxx -(inj_eq irr_inj) conjg_IirrE x_stab_i eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: contraR => notKx; apply/cards1P; exists 1%g; apply/esym/eqP.",
            "VernacExtend",
            "7112f72081a7da2fc951a6969c9903792ee9a23e"
        ],
        [
            "rewrite eqEsubset !(sub1set, inE) classes1 /= conjs1g eqxx /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> _ /setIP[/imsetP[y Ky ->] /afix1P /= cyKx].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have /imsetP[z Kz def_yx]: y ^ x \\in y ^: K.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -cyKx; apply: mem_imset; apply: class_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite inE classG_eq1; apply: contraR notKx => nty.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -(groupMr x (groupVr Kz)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: (subsetP (regK y _)); first exact/setD1P.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !inE groupMl // groupV (subsetP sKG) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite conjg_set1 conjgM def_yx conjgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem irr_induced_Frobenius_ker i : i != 0 -> 'Ind[G, K] 'chi_i \\in irr G.",
            "VernacStartTheoremProof",
            "0d972b901ac333bf630ecfc115c0f2092fe34194"
        ],
        [
            "move/inertia_Frobenius_ker/group_inj=> defK.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [_ _ nsKG _] := Frobenius_kerP frobGK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [] := constt_Inertia_bijection i nsKG; rewrite defK cfInd_id => -> //.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "by rewrite constt_irr !inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Frobenius_Ind_irrP j : reflect (exists2 i, i != 0 & 'chi_j = 'Ind[G, K] 'chi_i) (~~ (K \\subset cfker 'chi_j)).",
            "VernacStartTheoremProof",
            "81c21f03562df11fc79d82fb6417429e9d01abf1"
        ],
        [
            "have [_ _ nsKG _] := Frobenius_kerP frobGK; have [sKG nKG] := andP nsKG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "apply: (iffP idP) => [not_chijK1 | [i nzi ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cfker_Ind_irr ?sub_gcore // subGcfker.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /neq0_has_constt[i chijKi]: 'Res[K] 'chi_j != 0 by apply: Res_irr_neq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nz_i: i != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contraNneq not_chijK1 => i0; rewrite constt0_Res_cfker // -i0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /irrP[k def_chik] := irr_induced_Frobenius_ker nz_i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: '['chi_j, 'chi_k] != 0 by rewrite -def_chik -cfdot_Res_l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite cfdot_irr pnatr_eq0; case: (j =P k) => // ->; exists i.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Frobenius.",
            "VernacEndSegment",
            "5187ed0b1d1507d48b09e9faaf6de5a129e22108"
        ]
    ],
    "proofs": [
        {
            "name": "cfConjg_subproof",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "apply: intro_class_fun => [x z _ Gz | x notGx].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have [nGy | _] := ifP; last by rewrite cfunJgen.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -conjgM conjgC conjgM cfunJgen // memJ_norm ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfun0gen //; case: ifP => // nGy; rewrite memJ_norm ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgE",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "by rewrite cfunElock genGid => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgEJ",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "by move/cfConjgE->; rewrite conjgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgEout",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "by move/negbTE=> notNy; apply/cfunP=> x; rewrite !cfunElock genGid notNy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgEin",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "apply/cfun_inP=> x Gx.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfConjgE // -{2}[x](conjgKV y) cfIsomE ?memJ_norm ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgMnorm",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "move=> y z nGy nGz.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply/cfunP=> x; rewrite !cfConjgE ?groupM // invMg conjgM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_id",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "move=> Gy; apply/cfunP=> x; have nGy := subsetP (normG G) y Gy.",
                        "VernacExtend",
                        "fcbc4db6275a8d44907e8ed4b44d2f7f279ee662"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(cfunJ _ _ Gy) cfConjgEJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgM",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "by case/andP=> _ /subsetP nGL; apply: sub_in2 (cfConjgMnorm phi).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgJ1",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "by apply/cfunP=> x; rewrite cfConjgE ?group1 // invg1 conjg1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgK",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "move=> phi; apply/cfunP=> x; rewrite !cfunElock groupV /=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => -> //; rewrite conjgKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgKV",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "by move=> phi /=; rewrite -{1}[y]invgK cfConjgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg1",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "by rewrite cfunElock conj1g if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_is_linear",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "by move=> a phi psi; apply/cfunP=> x; rewrite !cfunElock.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_cfuniJ",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "move=> nGy; apply/cfunP=> x; rewrite !cfunElock genGid nGy -sub_conjgV.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite -class_lcoset -class_rcoset norm_rlcoset ?memJ_norm ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_cfuni",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "by have [/cfConjg_cfuniJ-> /normP-> | /cfConjgEout] := boolP (y \\in 'N(G)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_cfun1",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "by rewrite -cfuniG; have [/cfConjg_cfuni|/cfConjgEout] := boolP (y \\in 'N(G)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_is_multiplicative",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "split=> [phi psi|]; last exact: cfConjg_cfun1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/cfunP=> x; rewrite !cfunElock.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_eq1",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "by apply: rmorph_eq1; apply: can_inj (cfConjgK y).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfAutConjg",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "by apply/cfunP=> x; rewrite !cfunElock.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_cfConjg",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "exact: cfAutConjg.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfker_conjg",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "move=> nGy; rewrite cfConjgEin // cfker_isom.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite morphim_conj (setIidPr (cfker_sub _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfDetConjg",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "have [nGy | not_nGy] := boolP (y \\in 'N(G)); last by rewrite !cfConjgEout.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfConjgEin cfDetIsom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_set_inertia",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; split; first by rewrite inE group1 /= cfConjgJ1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=> y z /setIdP[nHy /eqP n_phi_y] /setIdP[nHz n_phi_z].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE groupM //= cfConjgMnorm ?n_phi_y.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertiaJ",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "by case/setIdP=> _ /eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_valJ",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "by case/setIdP=> nHy /eqP {1}<-; rewrite cfConjgEJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inertia_sub",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "exact: subsetIl.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_inertia",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "by rewrite ['I[_]]setIdE subsetIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_inertia",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "by apply/subsetP=> y Hy; rewrite inE cfConjg_id ?(subsetP (normG H)) /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normal_inertia",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "by rewrite /normal sub_inertia norm_inertia.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_Inertia",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "by rewrite subsetI sub_inertia andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_Inertia",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "by rewrite setIC subIset ?norm_inertia.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normal_Inertia",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "by rewrite /normal norm_Inertia andbT; apply: sub_Inertia.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_eqE",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "case/andP=> _ nHG y z Gy; rewrite -{1 2}[z](mulgKV y) groupMr // mem_rcoset.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "move: {z}(z * _)%g => z Gz; rewrite 2!inE Gz cfConjgMnorm ?(subsetP nHG) //=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite eq_sym (can_eq (cfConjgK y)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cent_sub_inertia",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> y cHy; have nHy := subsetP (cent_sub H) y cHy.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "rewrite inE nHy; apply/eqP/cfun_inP=> x Hx; rewrite cfConjgE //.",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "by rewrite /conjg invgK mulgA (centP cHy) ?mulgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cent_sub_Inertia",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "exact: setIS (cent_sub_inertia phi).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "center_sub_Inertia",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "by move/centS=> sHG; rewrite setIS // (subset_trans sHG) // cent_sub_inertia.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjg_inertia",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "move=> nHy; apply/setP=> z; rewrite !['I[_]]setIdE conjIg conjGid // !in_setI.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "apply/andb_id2l=> nHz; rewrite mem_conjg !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfConjgMnorm ?in_group ?(can2_eq (cfConjgKV y) (cfConjgK y)) ?invgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia0",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE linear0 eqxx andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_add",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "rewrite !['I[_]]setIdE -setIIr setIS //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> x; rewrite !inE linearD /= => /andP[/eqP-> /eqP->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_sum",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ => [|i K psi Pi sK_Ipsi]; first by rewrite setIT inertia0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite setICA; apply: subset_trans (setIS _ sK_Ipsi) (inertia_add _ _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_scale",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> x /setIdP[nHx /eqP Iphi_x].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE nHx linearZ /= Iphi_x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_opp",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "by rewrite -scaleN1r inertia_scale_nz // oppr_eq0 oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia1",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite inE rmorph1 eqxx andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inertia1",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "by rewrite inertia1 => /normal_norm/setIidPl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_mul",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "rewrite !['I[_]]setIdE -setIIr setIS //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/subsetP=> x; rewrite !inE rmorphM /= => /andP[/eqP-> /eqP->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_prod",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "elim/big_rec2: _ => [|i K psi Pi sK_psi]; first by rewrite inertia1 setIT.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite setICA; apply: subset_trans (setIS _ sK_psi) (inertia_mul _ _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_irr_prime",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "by move=> <- pr_H /(irr_prime_injP pr_H); apply: inertia_injective.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_irr0",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "by rewrite irr0 inertia1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfdot_Res_conjg",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "move=> Gy; rewrite -(cfConjg_iso y _ phi); congr '[_, _]; apply/cfunP=> x.",
                        "VernacExtend",
                        "dcb80cc02c546d84cccf311f4860161d64102fc1"
                    ]
                },
                {
                    "command": [
                        "rewrite !cfunElock !genGid; case nHy: (y \\in 'N(H)) => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(fun_if psi) cfunJ ?memJ_norm ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_char",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "have [nHy Nchi | /cfConjgEout-> //] := boolP (y \\in 'N(H)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfConjgEin cfIsom_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_lin_char",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "by case/andP=> Nchi chi1; rewrite qualifE cfConjg1 cfConjg_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjg_irr",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "by rewrite !irrEchar cfConjg_iso => /andP[/cfConjg_char->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjg_IirrE",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "by rewrite cfIirrE ?cfConjg_irr ?mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjg_IirrK",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "by move=> i; apply/irr_inj; rewrite !conjg_IirrE cfConjgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjg_IirrKV",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}[y]invgK; apply: conjg_IirrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjg_Iirr_inj",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "exact: can_inj (conjg_IirrK y).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjg_Iirr_eq0",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "by rewrite -!irr_eq1 conjg_IirrE cfConjg_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjg_Iirr0",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite conjg_Iirr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfdot_irr_conjg",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "move=> nsHG Gy; rewrite -conjg_IirrE cfdot_irr -(inj_eq irr_inj) conjg_IirrE.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}['chi_i]cfConjgJ1 cfConjg_eqE ?mulg1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_cfclass",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "by rewrite size_map -cardE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfclassP",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "apply: (iffP imageP) => [[_ /rcosetsP[y Ay ->] ->] | [y Ay ->]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by case: repr_rcosetP => z /setIdP[Az _]; exists (z * y)%g; rewrite ?groupM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "without loss nHy: y Ay / y \\in 'N(H).",
                        "VernacExtend",
                        "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
                    ]
                },
                {
                    "command": [
                        "have [nHy | /cfConjgEout->] := boolP (y \\in 'N(H)); first exact.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/(_ 1%g); rewrite !group1 !cfConjgJ1; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists ('I_A[phi] :* y); first by rewrite -rcosetE mem_imset.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: repr_rcosetP => z /setIP[_ /setIdP[nHz /eqP Tz]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfConjgMnorm ?Tz.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfclassInorm",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "move=> xi; apply/cfclassP/cfclassP=> [[x /setIP[Gx _] ->] | [x Gx ->]].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by exists x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [Nx | /cfConjgEout-> //] := boolP (x \\in 'N(H)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists x; first apply/setIP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists 1%g; rewrite ?group1 ?cfConjgJ1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfclass_refl",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "by apply/cfclassP; exists 1%g => //; rewrite cfConjgJ1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfclass_transr",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "rewrite -cfclassInorm; case/cfclassP=> x Gx -> xi; rewrite -!cfclassInorm.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "have nHN: {subset 'N_G(H) <= 'N(H)} by apply/subsetP; apply: subsetIr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/cfclassP/cfclassP=> [[y Gy ->] | [y Gy ->]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by exists (x^-1 * y)%g; rewrite -?cfConjgMnorm ?groupM ?groupV ?nHN // mulKVg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists (x * y)%g; rewrite -?cfConjgMnorm ?groupM ?nHN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfclass_sym",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "by apply/idP/idP=> /cfclass_transr <-; apply: cfclass_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfclass_uniq",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "move=> nsHG; rewrite map_inj_in_uniq ?enum_uniq // => Ty Tz; rewrite !mem_enum.",
                        "VernacExtend",
                        "6b509b6a448d912d761bbad76ff3082e795e01f6"
                    ]
                },
                {
                    "command": [
                        "move=> {Ty}/rcosetsP[y Gy ->] {Tz}/rcosetsP[z Gz ->] /eqP.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: repr_rcosetP => u Iphi_u; case: repr_rcosetP => v Iphi_v.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "have [[Gu _] [Gv _]] := (setIdP Iphi_u, setIdP Iphi_v).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite cfConjg_eqE ?groupM // => /rcoset_eqP.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !rcosetM (rcoset_id Iphi_v) (rcoset_id Iphi_u).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfclass_invariant",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "move/setIidPl=> IGphi; rewrite /cfclass IGphi // rcosets_id.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite /(image _ _) enum_set1 /= repr_group cfConjgJ1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfclass1",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "by move/normal_norm=> nHG; rewrite cfclass_invariant ?inertia1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfclass_IirrE",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "apply/imsetP/cfclassP=> [[y Gy ->] | [y]]; exists y; rewrite ?conjg_IirrE //.",
                        "VernacExtend",
                        "1d40e1f553ec20e06efca57315fed8fe7ae6987a"
                    ]
                },
                {
                    "command": [
                        "by apply: irr_inj; rewrite conjg_IirrE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_cfclass_IirrE",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "apply/eqP/idP=> [<- | iGj]; first by rewrite cfclass_IirrE cfclass_refl.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/setP=> k; rewrite !cfclass_IirrE in iGj *; apply/esym/cfclass_transr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "im_cfclass_Iirr",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "move=> nsHG; have UchiG := cfclass_uniq 'chi_i nsHG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply: uniq_perm_eq; rewrite ?(map_inj_uniq irr_inj) ?enum_uniq // => phi.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "apply/imageP/idP=> [[j iGj ->] | /cfclassP[y]]; first by rewrite -cfclass_IirrE.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists (conjg_Iirr i y); rewrite ?mem_imset ?conjg_IirrE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_cfclass_Iirr",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "move=> nsHG; rewrite -size_cfclass -(perm_eq_size (im_cfclass_Iirr i nsHG)).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_map -cardE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reindex_cfclass",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "move/im_cfclass_Iirr/(eq_big_perm _) <-; rewrite big_map big_filter /=.",
                        "VernacExtend",
                        "01eaddc5beea13e116fcc5de5430a824e6e09efb"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigl => j; rewrite cfclass_IirrE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Clifford_Res_sum_cfclass",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "move=> nsHG chiHj; have [sHG /subsetP nHG] := andP nsHG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite reindex_cfclass //= big_mkcond.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}['Res _]cfun_sum_cfdot linear_sum /=; apply: eq_bigr => k _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "have [[y Gy ->] | ] := altP (cfclassP _ _ _); first by rewrite cfdot_Res_conjg.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: contraNeq; rewrite scaler0 scaler_eq0 orbC => /norP[_ chiHk].",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "have{chiHk chiHj}: '['Res[H] ('Ind[G] 'chi_j), 'chi_k] != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE !cfdot_Res_l in chiHj chiHk *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: contraNneq chiHk; rewrite cfdot_sum_irr => /psumr_eq0P/(_ i isT)/eqP.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "rewrite -cfdotC cfdotC mulf_eq0 conjC_eq0 (negbTE chiHj) /= => -> // i1.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -cfdotC Cnat_ge0 // rpredM ?Cnat_cfdot_char ?cfInd_char ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite cfResInd // cfdotZl mulf_eq0 cfdot_suml => /norP[_].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply: contraR => chiGk'j; rewrite big1 // => x Gx; apply: contraNeq chiGk'j.",
                        "VernacExtend",
                        "09ff90107c05f6bf4f743acb58a064bacfe65029"
                    ]
                },
                {
                    "command": [
                        "rewrite -conjg_IirrE cfdot_irr pnatr_eq0; case: (_ =P k) => // <- _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite conjg_IirrE; apply/cfclassP; exists x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constt0_Res_cfker",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "move=> nsHG /(Clifford_Res_sum_cfclass nsHG); have [sHG nHG] := andP nsHG.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite irr0 cfdot_Res_l cfclass1 // big_seq1 cfInd_cfun1 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite cfdotZr conjC_nat => def_chiH.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x Hx; rewrite cfkerEirr inE -!(cfResE _ sHG) //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite def_chiH !cfunE cfun11 cfun1E Hx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgRes_norm",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "move=> nKy nHy; have [sKH | not_sKH] := boolP (K \\subset H); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfResEout // linearZ rmorph1 cfConjg1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/cfun_inP=> x Kx; rewrite !(cfConjgE, cfResE) ?memJ_norm ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgRes",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "move=> /andP[_ nHG] /andP[_ nKG] Gy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfConjgRes_norm ?(subsetP nHG) ?(subsetP nKG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_inertia_Res",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "move=> nKG; apply/subsetP=> y /setIP[Gy /setIdP[nHy /eqP Iphi_y]].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite 2!inE Gy cfConjgRes_norm ?(subsetP nKG) ?Iphi_y /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgInd",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "move=> /andP[_ nHG] /andP[_ nKG] Gy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfConjgInd_norm ?(subsetP nHG) ?(subsetP nKG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_inertia_Ind",
            "line_nb": 417,
            "steps": [
                {
                    "command": [
                        "move=> nHG; apply/subsetP=> y /setIP[Gy /setIdP[nKy /eqP Iphi_y]].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite 2!inE Gy cfConjgInd_norm ?(subsetP nHG) ?Iphi_y /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_id",
            "line_nb": 425,
            "steps": [
                {
                    "command": [
                        "by rewrite -setIA setIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfclass_inertia",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "rewrite /cfclass inertia_id rcosets_id /(image _ _) enum_set1 /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite repr_group cfConjgJ1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgMorph",
            "line_nb": 435,
            "steps": [
                {
                    "command": [
                        "move=> Dy nHy; have [sHD | not_sHD] := boolP (H \\subset D); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfMorphEout // linearZ rmorph1 cfConjg1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/cfun_inP=> x Gx; rewrite !(cfConjgE, cfMorphE) ?memJ_norm ?groupV //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite morphJ ?morphV ?groupV // (subsetP sHD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subsetP (morphim_norm _ _)) ?mem_morphim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_morph_pre",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "case/andP=> sHG nHG sGD; have sHD := subset_trans sHG sGD.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> y; rewrite !in_setI; apply: andb_id2l => Gy.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "have [Dy nHy] := (subsetP sGD y Gy, subsetP nHG y Gy).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite Dy inE nHy 4!inE mem_morphim // -morphimJ ?(normP nHy) // subxx /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite cfConjgMorph //; apply/eqP/eqP=> [Iphi_y | -> //].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by apply/cfun_inP=> _ /morphimP[x Dx Hx ->]; rewrite -!cfMorphE ?Iphi_y.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_morph_im",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "move=> nsHG sGD; rewrite inertia_morph_pre // morphim_setIpre.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite (setIidPr _) ?Inertia_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgIsom",
            "line_nb": 458,
            "steps": [
                {
                    "command": [
                        "move=> Gy nHy; have [_ defS] := isomP isoH.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite morphimEdom (eq_in_imset eq_hg) -morphimEsub // in defS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/cfun_inP=> gx; rewrite -{1}defS => /morphimP[x Gx Hx ->] {gx}.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "rewrite cfConjgE; last by rewrite -defS inE -morphimJ ?(normP nHy).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -morphV -?morphJ -?eq_hg ?cfIsomE ?cfConjgE ?memJ_norm ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_isom",
            "line_nb": 465,
            "steps": [
                {
                    "command": [
                        "have [[_ defS] [injg <-]] := (isomP isoH, isomP isoG).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite morphimEdom (eq_in_imset eq_hg) -morphimEsub // in defS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /inertia !setIdE morphimIdom setIA -{1}defS -injm_norm ?injmI //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> gy; rewrite !inE; apply: andb_id2l => /morphimP[y Gy nHy ->] {gy}.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "rewrite cfConjgIsom // -sub1set -morphim_set1 // injmSK ?sub1set //= inE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/eqP/eqP=> [Iphi_y | -> //].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply/cfun_inP=> x Hx; rewrite -!(cfIsomE isoH) ?Iphi_y.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgMod_norm",
            "line_nb": 478,
            "steps": [
                {
                    "command": [
                        "exact: cfConjgMorph.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgMod",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "move=> /andP[_ nHG] /andP[_ nKG] Gy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfConjgMod_norm ?(subsetP nHG) ?(subsetP nKG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgQuo_norm",
            "line_nb": 485,
            "steps": [
                {
                    "command": [
                        "move=> nKy nHy; have keryK: (K \\subset cfker (phi ^ y)) = (K \\subset cfker phi).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfker_conjg // -{1}(normP nKy) conjSg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [kerK | not_kerK] := boolP (K \\subset cfker phi); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfQuoEout ?linearZ ?rmorph1 ?cfConjg1 ?keryK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/cfun_inP=> _ /morphimP[x nKx Hx ->].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have nHyb: coset K y \\in 'N(H / K) by rewrite inE -morphimJ ?(normP nHy).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !(cfConjgE, cfQuoEnorm) ?keryK // ?in_setI ?Hx //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -morphV -?morphJ ?groupV // cfQuoEnorm //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE memJ_norm ?Hx ?groupJ ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgQuo",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "move=> /andP[_ nHG] /andP[_ nKG] Gy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfConjgQuo_norm ?(subsetP nHG) ?(subsetP nKG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_mod_pre",
            "line_nb": 500,
            "steps": [
                {
                    "command": [
                        "by move=> nsHG /andP[_]; apply: inertia_morph_pre.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_mod_quo",
            "line_nb": 503,
            "steps": [
                {
                    "command": [
                        "by move=> nsHG /andP[_]; apply: inertia_morph_im.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_quo",
            "line_nb": 506,
            "steps": [
                {
                    "command": [
                        "move=> nsHG nsKG kerK; rewrite -inertia_mod_quo ?cfQuoK //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite (normalS _ (normal_sub nsHG)) // (subset_trans _ (cfker_sub phi)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgSdprod",
            "line_nb": 514,
            "steps": [
                {
                    "command": [
                        "move=> nKy nHy.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have nGy: y \\in 'N(G) by rewrite -sub1set -(sdprodW defG) normsM ?sub1set.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}[phi](cfSdprodK defG) cfConjgRes_norm // cfRes_sdprodK //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfker_conjg // -{1}(normP nKy) conjSg cfker_sdprod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_sdprod",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "move=> nKL nHL; have nGL: L \\subset 'N(G) by rewrite -(sdprodW defG) normsM.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> z; rewrite !in_setI ![z \\in 'I[_]]inE; apply: andb_id2l => Lz.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "rewrite cfConjgSdprod ?(subsetP nKL) ?(subsetP nHL) ?(subsetP nGL) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (can_eq (cfSdprodK defG)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgDprodl",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "by move=> nKy nHy; apply: cfConjgSdprod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgDprodr",
            "line_nb": 534,
            "steps": [
                {
                    "command": [
                        "by move=> nKy nHy; apply: cfConjgSdprod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgDprod",
            "line_nb": 537,
            "steps": [
                {
                    "command": [
                        "by move=> nKy nHy; rewrite rmorphM /= cfConjgDprodl ?cfConjgDprodr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_dprodl",
            "line_nb": 540,
            "steps": [
                {
                    "command": [
                        "by move=> nKL nHL; apply: inertia_sdprod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_dprodr",
            "line_nb": 543,
            "steps": [
                {
                    "command": [
                        "by move=> nKL nHL; apply: inertia_sdprod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_dprod",
            "line_nb": 546,
            "steps": [
                {
                    "command": [
                        "move=> nKL nHL nz_phi nz_psi; apply/eqP; rewrite eqEsubset subsetI.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}(inertia_scale_nz psi nz_phi) -{1}(inertia_scale_nz phi nz_psi).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(cfDprod_Resl KxH) -(cfDprod_Resr KxH) !sub_inertia_Res //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -inertia_dprodl -?inertia_dprodr // -setIIr setIS ?inertia_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_dprod_irr",
            "line_nb": 552,
            "steps": [
                {
                    "command": [
                        "by move=> nKL nHL; rewrite inertia_dprod ?irr1_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgBigdprodi",
            "line_nb": 564,
            "steps": [
                {
                    "command": [
                        "rewrite cfConjgDprodl; try by case: ifP => [/nAy// | _]; rewrite norm1 inE.",
                        "VernacExtend",
                        "768b2f88f8c65ebded32bd7dc9c8ffec8f100548"
                    ]
                },
                {
                    "command": [
                        "congr (cfDprodl _ _); case: ifP => [Pi | _].",
                        "VernacExtend",
                        "f46e0009f9f30857e3015b4aa81044d3df151722"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfConjgRes_norm ?nAy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/cfun_inP=> _ /set1P->; rewrite !(cfRes1, cfConjg1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub1set norms_gen ?norms_bigcup // sub1set.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/bigcapP=> j /andP[/nAy].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cfConjgBigdprod",
            "line_nb": 572,
            "steps": [
                {
                    "command": [
                        "by rewrite rmorph_prod /=; apply: eq_bigr => i _; apply: cfConjgBigdprodi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_bigdprodi",
            "line_nb": 579,
            "steps": [
                {
                    "command": [
                        "move=> Pi; rewrite inertia_dprodl ?Pi ?cfRes_id ?nAL //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply/norms_gen/norms_bigcup/bigcapsP=> j /andP[/nAL].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inertia_bigdprod_irr",
            "line_nb": 594,
            "steps": [
                {
                    "command": [
                        "rewrite inertia_bigdprod // -[cfBigdprod _ _]cfIirrE ?irr1_neq0 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: cfBigdprod_irr => i _; apply: mem_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sNG",
            "line_nb": 680,
            "steps": [
                {
                    "command": [
                        "exact: normal_sub.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nNG",
            "line_nb": 683,
            "steps": [
                {
                    "command": [
                        "exact: normal_norm.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extendible_irr_invariant",
            "line_nb": 686,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> y Gy; have nNy := subsetP nNG y Gy.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "rewrite inE nNy; apply/eqP/cfun_inP=> x Nx; rewrite cfConjgE // -cNt.",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfResE ?memJ_norm ?cfunJ ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constt_Ind_ext",
            "line_nb": 737,
            "steps": [
                {
                    "command": [
                        "have IHchi0: G \\subset 'I['chi[N]_0] by rewrite inertia_irr0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [] := constt_Ind_mul_ext IHchi0; rewrite irr0 ?mul1r ?mem_irr //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "set psiG := 'Ind 1 => irrMchi injMchi constt_theta {2}->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have dot_psiG b: '[psiG, 'chi_(mod_Iirr b)] = 'chi[G / N]_b 1%g.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite mod_IirrE // -cfdot_Res_r cfRes_sub_ker ?cfker_mod //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfdotZr cfnorm1 mulr1 conj_Cnat ?cfMod1 ?Cnat_irr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have mem_psiG (b : Iirr (G / N)): mod_Iirr b \\in irr_constt psiG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite irr_consttE dot_psiG irr1_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have constt_psiG b: (b \\in irr_constt psiG) = (N \\subset cfker 'chi_b).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/idP/idP=> [psiGb | /quo_IirrK <- //].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite constt0_Res_cfker // -constt_Ind_Res irr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=> [b | b g /injMchi/(can_inj (mod_IirrK nsNG))-> // | b0 | ].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact: irrMchi.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite constt_theta.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/imageP/imageP=> [][b psiGb ->]; last by exists (mod_Iirr b).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists (quo_Iirr N b) => //; rewrite /mul_mod_Iirr quo_IirrK -?constt_psiG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (reindex_onto _ _ (in1W (mod_IirrK nsNG))) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/esym/eq_big => b; first by rewrite constt_psiG quo_IirrKeq.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -dot_psiG /mul_mod_Iirr => /eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prime_invariant_irr_extendible",
            "line_nb": 878,
            "steps": [
                {
                    "command": [
                        "move=> nsNG iGN pr_p IGchi.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [t sGt] := constt_cfInd_irr s (normal_sub nsNG); exists t.",
                        "VernacExtend",
                        "017608108741b883510caeca55373f60fa242408"
                    ]
                },
                {
                    "command": [
                        "have [e DtN]: exists e, 'Res 'chi_t = e%:R *: 'chi_s.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite constt_Ind_Res in sGt.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (Clifford_Res_sum_cfclass nsNG sGt); set e := '[_, _].",
                        "VernacExtend",
                        "c1f58f36c5711f022b4a54717f37c2782f34a159"
                    ]
                },
                {
                    "command": [
                        "rewrite cfclass_invariant // big_seq1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by exists (truncC e); rewrite truncCK ?Cnat_cfdot_char ?cfRes_char ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [/irrWnorm/eqP | [c injc DtNc]] := cfRes_prime_irr_cases t nsNG iGN pr_p.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite DtN cfnormZ cfnorm_irr normr_nat mulr1 -natrX pnatr_eq1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite muln_eq1 andbb => /eqP->; rewrite scale1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nz_e: e != 0%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have: 'Res[N] 'chi_t != 0 by rewrite cfRes_eq0 // ?irr_char ?irr_neq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite DtN; apply: contraNneq => ->; rewrite scale0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [i s'ci]: exists i, c i != s.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose i0 := Ordinal (prime_gt0 pr_p); pose i1 := Ordinal (prime_gt1 pr_p).",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have [<- | ] := eqVneq (c i0) s; last by exists i0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists i1; rewrite (inj_eq injc).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /esym/eqP/idPn[] := congr1 (cfdotr 'chi_(c i)) DtNc; rewrite {1}DtN /=.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "rewrite cfdot_suml cfdotZl cfdot_irr mulrb ifN_eqC // mulr0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (bigD1 i) //= cfnorm_irr big1 ?addr0 ?oner_eq0 // => j i'j.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfdot_irr mulrb ifN_eq ?(inj_eq injc).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "solvable_irr_extendible_from_det",
            "line_nb": 950,
            "steps": [
                {
                    "command": [
                        "set e := #|G : N|; set f := truncC _ => nsNG solG IGtheta co_e_f.",
                        "VernacExtend",
                        "ced270260aea2dd3ab523a646806c84962140531"
                    ]
                },
                {
                    "command": [
                        "apply/exists_eqP/exists_eqP=> [[c cNth] | [u uNdth]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have /lin_char_irr/irrP[u Du] := cfDet_lin_char 'chi_c.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists u; rewrite -Du -cfDetRes ?irr_char ?cNth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: {2}e.+1 (ltnSn e) => m.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim: m => // m IHm in G u e nsNG solG IGtheta co_e_f uNdth *.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS => le_e; have [sNG nNG] := andP nsNG.",
                        "VernacExtend",
                        "d2991b7607b6316c9d43d28c85f87ca601299ca6"
                    ]
                },
                {
                    "command": [
                        "have [<- | ltNG] := eqsVneq N G; first by exists s; rewrite cfRes_id.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [G0 maxG0 sNG0]: {G0 | maxnormal (gval G0) G G & N \\subset G0}.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: maxgroup_exists; rewrite properEneq ltNG sNG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [/andP[ltG0G nG0G] maxG0_P] := maxgroupP maxG0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "set mu := 'chi_u in uNdth; have lin_mu: mu \\is a linear_char.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "by rewrite qualifE irr_char -(cfRes1 N) uNdth /= lin_char1 ?cfDet_lin_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have sG0G := proper_sub ltG0G; have nsNG0 := normalS sNG0 sG0G nsNG.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "have nsG0G: G0 <| G by apply/andP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have /lin_char_irr/irrP[u0 Du0] := cfRes_lin_char G0 lin_mu.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have u0Ndth: 'Res 'chi_u0 = cfDet theta by rewrite -Du0 cfResRes.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have IG0theta: G0 \\subset 'I[theta].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subset_trans sG0G) // -IGtheta subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have coG0f: coprime #|G0 : N| f by rewrite (coprime_dvdl _ co_e_f) ?indexSg.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have{m IHm le_e} [c0 c0Ns]: exists c0, 'Res 'chi[G0]_c0 = theta.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have solG0: solvable (G0 / N) := solvableS (quotientS N sG0G) solG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: IHm nsNG0 solG0 IG0theta coG0f u0Ndth (leq_trans _ le_e).",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(ltn_pmul2l (cardG_gt0 N)) !Lagrange ?proper_card.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{c0 c0Ns} [c0 [c0Ns dc0_u0] Uc0] := extend_to_cfdet nsNG0 coG0f c0Ns u0Ndth.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have IGc0: G \\subset 'I['chi_c0].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x Gx; rewrite inE (subsetP nG0G) //= -conjg_IirrE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; congr 'chi__; apply: Uc0; rewrite conjg_IirrE.",
                        "VernacExtend",
                        "fa6171a79bfbc42d0445547471a3cf297b71778a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(cfConjgRes _ nsG0G nsNG) // c0Ns inertiaJ ?(subsetP IGtheta).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfDetConjg dc0_u0 -Du0 (cfConjgRes _ _ nsG0G) // cfConjg_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have prG0G: prime #|G : G0|.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [h injh im_h] := third_isom sNG0 nsNG nsG0G.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -card_quotient // -im_h // card_injm //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite simple_sol_prime 1?quotient_sol //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite /simple -(injm_minnormal injh) // im_h // maxnormal_minnormal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [t tG0c0] := prime_invariant_irr_extendible nsG0G (erefl _) prG0G IGc0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists t; rewrite /theta -c0Ns -tG0c0 cfResRes.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_coprime_linear_char",
            "line_nb": 1067,
            "steps": [
                {
                    "command": [
                        "set e := #|G : N| => nsNG lam_lin IGlam co_e_lam; have [sNG nNG] := andP nsNG.",
                        "VernacExtend",
                        "d2991b7607b6316c9d43d28c85f87ca601299ca6"
                    ]
                },
                {
                    "command": [
                        "have [p lam_p | v vNlam] := extend_linear_char_from_Sylow nsNG lam_lin IGlam.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists N; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by have /irrP[u ->] := lin_char_irr lam_lin; exists u; rewrite cfRes_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=> //; rewrite trivg_quotient /pHall sub1G pgroup1 indexg1.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "rewrite card_quotient //= -/e (pi'_p'nat _ lam_p) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -coprime_pi' ?indexg_gt0 1?coprime_sym //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by have:= lam_p; rewrite mem_primes => /and3P[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "set nu := 'chi_v in vNlam.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "have lin_nu: nu \\is a linear_char.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (@cfRes_lin_lin _ _ N) ?vNlam ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [b be_mod_lam]: exists b, b * e = 1 %[mod 'o(lambda)%CF].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(chinese_modr co_e_lam 0 1) /chinese !mul0n !mul1n mulnC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by set b := _.1; exists b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /irrP[u Du]: nu ^+ (b * e) \\in irr G by rewrite lin_char_irr ?rpredX.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists u; set mu := 'chi_u in Du *.",
                        "VernacExtend",
                        "75c7537dceb6ed20a9810fcb90ed573d10fa322d"
                    ]
                },
                {
                    "command": [
                        "have uNlam: 'Res mu = lambda.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite cfDet_order_lin // in be_mod_lam.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -Du rmorphX /= vNlam -(expr_mod _ (exp_cforder _)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite be_mod_lam expr_mod ?exp_cforder.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have lin_mu: mu \\is a linear_char by rewrite -Du rpredX.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have o_mu: ('o(mu) = 'o(lambda))%CF.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have dv_o_lam_mu: 'o(lambda)%CF %| 'o(mu)%CF.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfDet_order_lin // -uNlam cforder_Res.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have kerNnu_olam: N \\subset cfker (nu ^+ 'o(lambda)%CF).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -subsetIidl -cfker_Res ?rpredX ?irr_char //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite rmorphX /= vNlam cfDet_order_lin // exp_cforder cfker_cfun1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_dvd dv_o_lam_mu andbT cfDet_order_lin //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdn_cforder -Du exprAC -dvdn_cforder dvdn_mull //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(cfQuoK nsNG kerNnu_olam) cforder_mod // /e -card_quotient //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cforder_lin_char_dvdG ?cfQuo_lin_char ?rpredX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=> // t tNlam co_e_t.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have lin_t: 'chi_t \\is a linear_char.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (@cfRes_lin_lin _ _ N) ?tNlam ?irr_char.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Ut := lin_char_unitr lin_t.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have kerN_mu_t: N \\subset cfker (mu / 'chi_t)%R.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -subsetIidl -cfker_Res ?lin_charW ?rpred_div ?rmorph_div //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= uNlam tNlam divrr ?lin_char_unitr ?cfker_cfun1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have co_e_mu_t: coprime e #[(mu / 'chi_t)%R]%CF.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suffices dv_o_mu_t: #[(mu / 'chi_t)%R]%CF %| 'o(mu)%CF * 'o('chi_t)%CF.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (coprime_dvdr dv_o_mu_t) // coprime_mulr o_mu co_e_lam.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !cfDet_order_lin //; apply/dvdn_cforderP=> x Gx.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite invr_lin_char // !cfunE exprMn -rmorphX {2}mulnC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(dvdn_cforderP _) ?conjC1 ?mulr1 // dvdn_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /eqP mu_t_1: mu / 'chi_t == 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -(dvdn_cforder (_ / _)%R 1) -(eqnP co_e_mu_t) dvdn_gcd dvdnn andbT.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(cfQuoK nsNG kerN_mu_t) cforder_mod // /e -card_quotient //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite cforder_lin_char_dvdG ?cfQuo_lin_char ?rpred_div.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: irr_inj; rewrite -['chi_t]mul1r -mu_t_1 divrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_solvable_coprime_irr",
            "line_nb": 1118,
            "steps": [
                {
                    "command": [
                        "set e := #|G : N|; set f := truncC _ => nsNG solG IGtheta.",
                        "VernacExtend",
                        "ced270260aea2dd3ab523a646806c84962140531"
                    ]
                },
                {
                    "command": [
                        "rewrite coprime_mulr => /andP[co_e_th co_e_f].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have [sNG nNG] := andP nsNG; pose lambda := cfDet theta.",
                        "VernacExtend",
                        "fa6ff0c3d4595d45015144bd8c25fb5ac62ed42b"
                    ]
                },
                {
                    "command": [
                        "have lin_lam: lambda \\is a linear_char := cfDet_lin_char theta.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have IGlam: G \\subset 'I[lambda].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> y /(subsetP IGtheta)/setIdP[nNy /eqP th_y].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE nNy /= -cfDetConjg th_y.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have co_e_lam: coprime e 'o(lambda)%CF by rewrite cfDet_order_lin.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [//|u [uNlam o_u Uu]] := extend_coprime_linear_char nsNG lin_lam IGlam.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have /exists_eqP[c cNth]: [exists c, 'Res 'chi[G]_c == theta].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite solvable_irr_extendible_from_det //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/exists_eqP; exists u.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{c cNth} [c [cNth det_c] Uc] := extend_to_cfdet nsNG co_e_f cNth uNlam.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have lin_u: 'chi_u \\is a linear_char by rewrite -det_c cfDet_lin_char.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists c; split=> // [|c0 c0Nth co_e_c0].",
                        "VernacExtend",
                        "5df7b9daf8670a6a3074a4bbc7cd3a2430f8cc6f"
                    ]
                },
                {
                    "command": [
                        "by rewrite !cfDet_order_lin // -det_c in o_u.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have lin_u0: cfDet 'chi_c0 \\is a linear_char := cfDet_lin_char 'chi_c0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have /irrP[u0 Du0] := lin_char_irr lin_u0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have co_e_u0: coprime e 'o('chi_u0)%CF by rewrite -Du0 cfDet_order_lin.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have eq_u0u: u0 = u by apply: Uu; rewrite // -Du0 -cfDetRes ?irr_char ?c0Nth.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: Uc; rewrite // Du0 eq_u0u.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_induced_Frobenius_ker",
            "line_nb": 1178,
            "steps": [
                {
                    "command": [
                        "move/inertia_Frobenius_ker/group_inj=> defK.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [_ _ nsKG _] := Frobenius_kerP frobGK.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [] := constt_Inertia_bijection i nsKG; rewrite defK cfInd_id => -> //.",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "by rewrite constt_irr !inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Frobenius_Ind_irrP",
            "line_nb": 1184,
            "steps": [
                {
                    "command": [
                        "have [_ _ nsKG _] := Frobenius_kerP frobGK; have [sKG nKG] := andP nsKG.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "apply: (iffP idP) => [not_chijK1 | [i nzi ->]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfker_Ind_irr ?sub_gcore // subGcfker.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /neq0_has_constt[i chijKi]: 'Res[K] 'chi_j != 0 by apply: Res_irr_neq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nz_i: i != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: contraNneq not_chijK1 => i0; rewrite constt0_Res_cfker // -i0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /irrP[k def_chik] := irr_induced_Frobenius_ker nz_i.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have: '['chi_j, 'chi_k] != 0 by rewrite -def_chik -cfdot_Res_l.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite cfdot_irr pnatr_eq0; case: (j =P k) => // ->; exists i.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}