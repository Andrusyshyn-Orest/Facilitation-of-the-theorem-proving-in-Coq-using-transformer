{
    "filename": "mathcomp/character/integral_char.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq path div choice.",
            "VernacRequire",
            "28f7cc4746e8608411d0ebf22fadc6cf30a98194"
        ],
        [
            "From mathcomp Require Import fintype tuple finfun bigop prime ssralg poly finset.",
            "VernacRequire",
            "fab5cc7f7404dfb6565f6b962fccbe62aedbe140"
        ],
        [
            "From mathcomp Require Import fingroup morphism perm automorphism quotient action finalg zmodp.",
            "VernacRequire",
            "57def58d7e72bd7c897e4bfcf7c30683c175cf80"
        ],
        [
            "From mathcomp Require Import commutator cyclic center pgroup sylow gseries nilpotent abelian.",
            "VernacRequire",
            "535164832f1ca9a251e95262b457ce8a4185d9ab"
        ],
        [
            "From mathcomp Require Import ssrnum ssrint polydiv rat matrix mxalgebra intdiv mxpoly.",
            "VernacRequire",
            "ae105601e48264de77ea60e63bedbead73a0a376"
        ],
        [
            "From mathcomp Require Import vector falgebra fieldext separable galois algC cyclotomic algnum.",
            "VernacRequire",
            "df6e285b6fbb41b3989dc7c1beff2534546235b1"
        ],
        [
            "From mathcomp Require Import mxrepresentation classfun character.",
            "VernacRequire",
            "622adbeba903bec62b85692e3a413457f085b206"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope GRing.Theory Num.Theory.",
            "VernacImport",
            "8d87fd9194cd0dee18ad3305b14d36d18908f225"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Lemma group_num_field_exists (gT : finGroupType) (G : {group gT}) : {Qn : splittingFieldType rat & galois 1 {:Qn} & {QnC : {rmorphism Qn -> algC} & forall nuQn : argumentType (mem ('Gal({:Qn}%VS / 1%VS))), {nu : {rmorphism algC -> algC} | {morph QnC: a / nuQn a >-> nu a}} & {w : Qn & #|G|.-primitive_root w /\\ <<1; w>>%VS = fullv & forall (hT : finGroupType) (H : {group hT}) (phi : 'CF(H)), phi \\is a character -> forall x, (#[x] %| #|G|)%N -> {a | QnC a = phi x}}}}.",
            "VernacStartTheoremProof",
            "b9f63798335f8185c84ce74ff316c4c06b0c739c"
        ],
        [
            "have [z prim_z] := C_prim_root_exists (cardG_gt0 G); set n := #|G| in prim_z *.",
            "VernacExtend",
            "81881a093b2294c76be3b432fbe83612064d7bc9"
        ],
        [
            "have [Qn [QnC [[|w []] // [Dz] genQn]]] := num_field_exists [:: z].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have prim_w: n.-primitive_root w by rewrite -Dz fmorph_primitive_root in prim_z.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Q_Xn1: ('X^n - 1 : {poly Qn}) \\is a polyOver 1%AS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite rpredB ?rpred1 ?rpredX //= polyOverX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have splitXn1: splittingFieldFor 1 ('X^n - 1) {:Qn}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose r := codom (fun i : 'I_n => w ^+ i).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have Dr: 'X^n - 1 = \\prod_(y <- r) ('X - y%:P).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(factor_Xn_sub_1 prim_w) big_mkord big_map enumT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists r; first by rewrite -Dr eqpxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite eqEsubv subvf -genQn adjoin_seqSr //; apply/allP=> /=.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite andbT -root_prod_XsubC -Dr; apply/unity_rootP/prim_expr_order.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Qn_ax : SplittingField.axiom Qn by exists ('X^n - 1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (SplittingFieldType _ _ Qn_ax).",
            "VernacExtend",
            "74769b75572982a443123470f8ad370c00c7f4e8"
        ],
        [
            "apply/splitting_galoisField.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exists ('X^n - 1); split => //.",
            "VernacExtend",
            "8b6032e84e1fb411c63597516a21c3594e85cbcd"
        ],
        [
            "apply: separable_Xn_sub_1; rewrite -(fmorph_eq0 QnC) rmorph_nat.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite pnatr_eq0 -lt0n cardG_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists QnC => [// nuQn|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply: (extend_algC_subfield_aut QnC [rmorphism of nuQn]).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite span_seq1 in genQn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exists w => // hT H phi Nphi x x_dv_n.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: sig_eqW; have [rH ->] := char_reprP Nphi.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "have [Hx | /cfun0->] := boolP (x \\in H); last by exists 0; rewrite rmorph0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [e [_ [enx1 _] [-> _] _]] := repr_rsim_diag rH Hx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /fin_all_exists[k Dk] i: exists k, e 0 i = z ^+ k.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [|k ->] := (prim_rootP prim_z) (e 0 i); last by exists k.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have /dvdnP[q ->] := x_dv_n; rewrite mulnC exprM enx1 expr1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (\\sum_i w ^+ k i); rewrite rmorph_sum; apply/eq_bigr => i _.",
            "VernacExtend",
            "a37ca6301f20031ce1a60d09c1d92aedb266c8d2"
        ],
        [
            "by rewrite rmorphX Dz Dk.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section GenericClassSums.",
            "VernacBeginSection",
            "23a80271ff8331e2b62e127fbbed46652258577f"
        ],
        [
            "Variable (gT : finGroupType) (G : {group gT}) (F : fieldType).",
            "VernacAssumption",
            "e311ca6ad5193da0d8fda99f75d159788bbd7359"
        ],
        [
            "Definition gring_classM_coef_set (Ki Kj : {set gT}) g := [set xy in [predX Ki & Kj] | let: (x, y) := xy in x * y == g]%g.",
            "VernacDefinition",
            "9e76e5ce86222355b80aa8c9304d38768ae88503"
        ],
        [
            "Definition gring_classM_coef (i j k : 'I_#|classes G|) := #|gring_classM_coef_set (enum_val i) (enum_val j) (repr (enum_val k))|.",
            "VernacDefinition",
            "96f31da248779eec589e3216d1ecbff8c5bf1d6b"
        ],
        [
            "Definition gring_class_sum (i : 'I_#|classes G|) := gset_mx F G (enum_val i).",
            "VernacDefinition",
            "96aa53b0635d9c3c64aa97d33b7ebd20cda38258"
        ],
        [
            "Local Notation \"''K_' i\" := (gring_class_sum i) (at level 8, i at level 2, format \"''K_' i\") : ring_scope.",
            "VernacNotation",
            "65c7abc109d3ac26e57dd0f7492c6b3a56a8219d"
        ],
        [
            "Local Notation a := gring_classM_coef.",
            "VernacSyntacticDefinition",
            "bd89445ad13636cf35fc979289b6cf7e69ce8f78"
        ],
        [
            "Lemma gring_class_sum_central i : ('K_i \\in 'Z(group_ring F G))%MS.",
            "VernacStartTheoremProof",
            "f36a3d6021fd499b46f593885912c9a8d3a2c6a7"
        ],
        [
            "by rewrite -classg_base_center (eq_row_sub i) // rowK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma set_gring_classM_coef (i j k : 'I_#|classes G|) g : g \\in enum_val k -> a i j k = #|gring_classM_coef_set (enum_val i) (enum_val j) g|.",
            "VernacStartTheoremProof",
            "e6db71de1ce47f489b4572fbe7e2ce1f73b4b8a2"
        ],
        [
            "rewrite /a; have /repr_classesP[] := enum_valP k; move: (repr _) => g1 Gg1 ->.",
            "VernacExtend",
            "624e923d4ba1af4ca027781d2060f0b72e811f91"
        ],
        [
            "have [/imsetP[zi Gzi ->] /imsetP[zj Gzj ->]] := (enum_valP i, enum_valP j).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> g1Gg; have Gg := subsetP (class_subG Gg1 (subxx _)) _ g1Gg.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "set Aij := gring_classM_coef_set _ _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "without loss suffices IH: g g1 Gg Gg1 g1Gg / (#|Aij g1| <= #|Aij g|)%N.",
            "VernacExtend",
            "c0654ea92d4205c87904f6a5b4277bcf440eea04"
        ],
        [
            "by apply/eqP; rewrite eqn_leq !IH // class_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [w Gw Dg] := imsetP g1Gg; pose J2 (v : gT) xy := (xy.1 ^ v, xy.2 ^ v)%g.",
            "VernacExtend",
            "fa6ff0c3d4595d45015144bd8c25fb5ac62ed42b"
        ],
        [
            "have J2inj: injective (J2 w).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: can_inj (J2 w^-1)%g _ => [[x y]]; rewrite /J2 /= !conjgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(card_imset _ J2inj) subset_leq_card //; apply/subsetP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "move=> _ /imsetP[[x y] /setIdP[/andP[/= x1Gx y1Gy] Dxy1] ->]; rewrite !inE /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite !(class_sym _ (_ ^ _)) !classGidl // class_sym x1Gx class_sym y1Gy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -conjMg (eqP Dxy1) /= -Dg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gring_classM_expansion i j : 'K_i *m 'K_j = \\sum_k (a i j k)%:R *: 'K_k.",
            "VernacStartTheoremProof",
            "ab5a607cf70f0dd30177c9f6571dfe4701ef6506"
        ],
        [
            "have [/imsetP[zi Gzi dKi] /imsetP[zj Gzj dKj]] := (enum_valP i, enum_valP j).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose aG := regular_repr F G; have sKG := subsetP (class_subG _ (subxx G)).",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "transitivity (\\sum_(x in zi ^: G) \\sum_(y in zj ^: G) aG (x * y)%g).",
            "VernacExtend",
            "78c6f561f044bb185df99c58c2c18a3ba1f451fe"
        ],
        [
            "rewrite mulmx_suml -/aG dKi; apply: eq_bigr => x /sKG Gx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite mulmx_sumr -/aG dKj; apply: eq_bigr => y /sKG Gy.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite repr_mxM ?Gx ?Gy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose h2 xy : gT := (xy.1 * xy.2)%g.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose h1 xy := enum_rank_in (classes1 G) (h2 xy ^: G).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite pair_big (partition_big h1 xpredT) //=; apply: eq_bigr => k _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (partition_big h2 (mem (enum_val k))) /= => [|[x y]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=> /andP[/= /sKG Gx /sKG Gy] /eqP <-.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite enum_rankK_in ?class_refl ?mem_classes ?groupM ?Gx ?Gy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite scaler_sumr; apply: eq_bigr => g Kk_g; rewrite scaler_nat.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "rewrite (set_gring_classM_coef _ _ Kk_g) -sumr_const; apply: eq_big => [] [x y].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite !inE /= dKi dKj /h1 /h2 /=; apply: andb_id2r => /eqP ->.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have /imsetP[zk Gzk dKk] := enum_valP k; rewrite dKk in Kk_g.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite (class_eqP Kk_g) -dKk enum_valK_in eqxx andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /h2 /= => /andP[_ /eqP->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact gring_irr_mode_key : unit.",
            "VernacStartTheoremProof",
            "d7eb50287c1619f6b1aef286e2c05a7a6c62fd66"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gring_irr_mode_def (i : Iirr G) := ('chi_i 1%g)^-1 *: 'chi_i.",
            "VernacDefinition",
            "e18593739f21638c0788449555248fcba6f99f4f"
        ],
        [
            "Definition gring_irr_mode := locked_with gring_irr_mode_key gring_irr_mode_def.",
            "VernacDefinition",
            "e0dab5a4e910fd374bd336cac5db0ed603d7499c"
        ],
        [
            "Canonical gring_irr_mode_unlockable := [unlockable fun gring_irr_mode].",
            "VernacDefinition",
            "87b3bfc49080f941502cce6323677333a15628cd"
        ],
        [
            "End GenericClassSums.",
            "VernacEndSegment",
            "54b7cdfc3fa2881aaf6b237b770f941322a80e36"
        ],
        [
            "Arguments gring_irr_mode {gT G%G} i%R _%g : extra scopes.",
            "VernacArguments",
            "364f4e731601327be8c8b521f9ff12d181bd2cc8"
        ],
        [
            "Notation \"''K_' i\" := (gring_class_sum _ i) (at level 8, i at level 2, format \"''K_' i\") : ring_scope.",
            "VernacNotation",
            "46cd503aeeba34a8997b27b185b58c2e30bb4ba5"
        ],
        [
            "Notation \"''omega_' i [ A ]\" := (xcfun (gring_irr_mode i) A) (at level 8, i at level 2, format \"''omega_' i [ A ]\") : ring_scope.",
            "VernacNotation",
            "ac7c65547c758ab38a06b9cf9fa158dfd593e945"
        ],
        [
            "Section IntegralChar.",
            "VernacBeginSection",
            "76ccb1e3738d9a5f26586d6364365740de4491a9"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Lemma Aint_char (chi : 'CF(G)) x : chi \\is a character -> chi x \\in Aint.",
            "VernacStartTheoremProof",
            "4a753ab3fa6888b0de32775bb0f0476c3b7abbd3"
        ],
        [
            "have [Gx /char_reprP[rG ->] {chi} | /cfun0->//] := boolP (x \\in G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [e [_ [unit_e _] [-> _] _]] := repr_rsim_diag rG Gx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite rpred_sum // => i _; apply: (@Aint_unity_root #[x]) => //.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "exact/unity_rootP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Aint_irr i x : 'chi[G]_i x \\in Aint.",
            "VernacStartTheoremProof",
            "55e0f4ff96d24173ac6a0873accf43ee12420c03"
        ],
        [
            "exact/Aint_char/irr_char.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation R_G := (group_ring algCfield G).",
            "VernacSyntacticDefinition",
            "137272aa2960f041640d36517ff8644ad71ac790"
        ],
        [
            "Local Notation a := gring_classM_coef.",
            "VernacSyntacticDefinition",
            "bd89445ad13636cf35fc979289b6cf7e69ce8f78"
        ],
        [
            "Lemma mx_irr_gring_op_center_scalar n (rG : mx_representation algCfield G n) A : mx_irreducible rG -> (A \\in 'Z(R_G))%MS -> is_scalar_mx (gring_op rG A).",
            "VernacStartTheoremProof",
            "b6a006c65801d04017490a865568d8457d1c8f52"
        ],
        [
            "move/groupC=> irrG /center_mxP[R_A cGA].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: mx_abs_irr_cent_scalar irrG _ _; apply/centgmxP => x Gx.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite -(gring_opG rG Gx) -!gring_opM ?cGA // envelop_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section GringIrrMode.",
            "VernacBeginSection",
            "c6b11cd61cb06c1f06f73429552da350ebec68bf"
        ],
        [
            "Variable i : Iirr G.",
            "VernacAssumption",
            "cb272c96b723ccb7baeda735be8e0cbdf9cea555"
        ],
        [
            "Let n := irr_degree (socle_of_Iirr i).",
            "VernacDefinition",
            "f5e0be41ea985509a0ed9f19ddf023c7641b816f"
        ],
        [
            "Let mxZn_inj: injective (@scalar_mx algCfield n).",
            "VernacDefinition",
            "d4aa2102dc7d63aeb9f0e71a31e7f5e9bf20322f"
        ],
        [
            "by rewrite -[n]prednK ?irr_degree_gt0 //; apply: fmorph_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cfRepr_gring_center n1 (rG : mx_representation algCfield G n1) A : cfRepr rG = 'chi_i -> (A \\in 'Z(R_G))%MS -> gring_op rG A = 'omega_i[A]%:M.",
            "VernacStartTheoremProof",
            "b9e725ba023f98cab91d94f6aec37b4809804d6b"
        ],
        [
            "move=> def_rG Z_A; rewrite unlock xcfunZl -{2}def_rG xcfun_repr.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have irr_rG: mx_irreducible rG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sim_rG: mx_rsim 'Chi_i rG by apply: cfRepr_inj; rewrite irrRepr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exact: mx_rsim_irr sim_rG (socle_irr _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have /is_scalar_mxP[e ->] := mx_irr_gring_op_center_scalar irr_rG Z_A.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "congr _%:M; apply: (canRL (mulKf (irr1_neq0 i))).",
            "VernacExtend",
            "385739dd8a4f73703d3828c61e1780a276bfaa31"
        ],
        [
            "by rewrite mulrC -def_rG cfunE repr_mx1 group1 -mxtraceZ scalemx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_gring_center A : (A \\in 'Z(R_G))%MS -> gring_op 'Chi_i A = 'omega_i[A]%:M.",
            "VernacStartTheoremProof",
            "7cf96d6df1a9e844d93c48165dfe145c0490ea70"
        ],
        [
            "exact: cfRepr_gring_center (irrRepr i).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_irr_modeM A B : (A \\in 'Z(R_G))%MS -> (B \\in 'Z(R_G))%MS -> 'omega_i[A *m B] = 'omega_i[A] * 'omega_i[B].",
            "VernacStartTheoremProof",
            "5570a05cad76b9c1bc1799d60b152dad6ffd46e9"
        ],
        [
            "move=> Z_A Z_B; have [[R_A cRA] [R_B cRB]] := (center_mxP Z_A, center_mxP Z_B).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "apply: mxZn_inj; rewrite scalar_mxM -!irr_gring_center ?gring_opM //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/center_mxP; split=> [|C R_C]; first exact: envelop_mxM.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mulmxA cRA // -!mulmxA cRB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_mode_class_sum_eq (k : 'I_#|classes G|) g : g \\in enum_val k -> 'omega_i['K_k] = #|g ^: G|%:R * 'chi_i g / 'chi_i 1%g.",
            "VernacStartTheoremProof",
            "aec5f6f8fb95fbc08a69bb45053993544dc65164"
        ],
        [
            "have /imsetP[x Gx DxG] := enum_valP k; rewrite DxG => /imsetP[u Gu ->{g}].",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "rewrite unlock classGidl ?cfunJ {u Gu}// mulrC mulr_natl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite xcfunZl raddf_sum DxG -sumr_const /=; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply: eq_bigr => _ /imsetP[u Gu ->]; rewrite xcfunG ?groupJ ?cfunJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Aint_gring_mode_class_sum k : 'omega_i['K_k] \\in Aint.",
            "VernacStartTheoremProof",
            "4b0ca6fea6b9471bc850af8932e7b13e69d355b4"
        ],
        [
            "move: k; pose X := [tuple 'omega_i['K_k] | k < #|classes G| ].",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have memX k: 'omega_i['K_k] \\in X by apply: image_f.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have S_P := Cint_spanP X; set S := Cint_span X in S_P.",
            "VernacExtend",
            "81881a093b2294c76be3b432fbe83612064d7bc9"
        ],
        [
            "have S_X: {subset X <= S} by apply: mem_Cint_span.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have S_1: 1 \\in S.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: S_X; apply/codomP; exists (enum_rank_in (classes1 G) 1%g).",
            "VernacExtend",
            "35b4a2888a46f6a2741ba7ff9a9385990b0ff16d"
        ],
        [
            "rewrite (@gring_mode_class_sum_eq _ 1%g) ?enum_rankK_in ?classes1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulfK ?irr1_neq0 // class1G cards1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices Smul: mulr_closed S.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by move=> k; apply: fin_Csubring_Aint S_P _ _; rewrite ?S_X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> // _ _ /S_P[x ->] /S_P[y ->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite mulr_sumr rpred_sum // => j _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite mulrzAr mulr_suml rpredMz ?rpred_sum // => k _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite mulrzAl rpredMz {x y}// !nth_mktuple.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -gring_irr_modeM ?gring_class_sum_central //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite gring_classM_expansion raddf_sum rpred_sum // => jk _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite scaler_nat raddfMn rpredMn ?S_X ?memX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary Aint_class_div_irr1 x : x \\in G -> #|x ^: G|%:R * 'chi_i x / 'chi_i 1%g \\in Aint.",
            "VernacStartTheoremProof",
            "2ddff596199d5deefde015cd6f79bd2ec888e3ef"
        ],
        [
            "move=> Gx; have clGxG := mem_classes Gx; pose k := enum_rank_in clGxG (x ^: G).",
            "VernacExtend",
            "0d2d1f46a70792d5bd924378895a9803e8de88f9"
        ],
        [
            "have k_x: x \\in enum_val k by rewrite enum_rankK_in // class_refl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(gring_mode_class_sum_eq k_x) Aint_gring_mode_class_sum.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem coprime_degree_support_cfcenter g : coprime (truncC ('chi_i 1%g)) #|g ^: G| -> g \\notin ('Z('chi_i))%CF -> 'chi_i g = 0.",
            "VernacStartTheoremProof",
            "9537c6ff8bcf8b4864693b193b4ea93fe30bd9ed"
        ],
        [
            "set m := truncC _ => co_m_gG notZg.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [Gg | /cfun0-> //] := boolP (g \\in G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Dm: 'chi_i 1%g = m%:R by rewrite truncCK ?Cnat_irr1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have m_gt0: (0 < m)%N by rewrite -ltC_nat -Dm irr1_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nz_m: m%:R != 0 :> algC by rewrite pnatr_eq0 -lt0n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose alpha := 'chi_i g / m%:R.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have a_lt1: `|alpha| < 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite normrM normfV normr_nat -{2}(divff nz_m).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ltr_def (can_eq (mulfVK nz_m)) eq_sym -{1}Dm -irr_cfcenterE // notZg.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ler_pmul2r ?invr_gt0 ?ltr0n // -Dm char1_ge_norm ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Za: alpha \\in Aint.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [u _ /dvdnP[v eq_uv]] := Bezoutl #|g ^: G| m_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices ->: alpha = v%:R * 'chi_i g - u%:R * (alpha * #|g ^: G|%:R).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite rpredB // rpredM ?rpred_nat ?Aint_irr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrC mulrA -Dm Aint_class_div_irr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -mulrCA -[v%:R](mulfK nz_m) -!natrM -eq_uv (eqnP co_m_gG).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrAC -mulrA -/alpha mulr_natl mulr_natr mulrS addrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [Qn galQn [QnC gQnC [_ _ Qn_g]]] := group_num_field_exists <[g]>.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{Qn_g} [a Da]: exists a, QnC a = alpha.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /alpha; have [a <-] := Qn_g _ G _ (irr_char i) g (dvdnn _).",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by exists (a / m%:R); rewrite fmorph_div rmorph_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Za_nu nu: sval (gQnC nu) alpha \\in Aint by rewrite Aint_aut.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have norm_a_nu nu: `|sval (gQnC nu) alpha| <= 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: {nu}(sval _) => nu; rewrite fmorph_div rmorph_nat normrM normfV.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite normr_nat -Dm -(ler_pmul2r (irr1_gt0 (aut_Iirr nu i))) mul1r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (_ <= _): (char1_ge_norm g (irr_char (aut_Iirr nu i))).",
            "VernacExtend",
            "f3a9615ebe5fa15549c1ecd556f50efbdb2824d9"
        ],
        [
            "by rewrite !aut_IirrE !cfunE Dm rmorph_nat divfK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose beta := QnC (galNorm 1 {:Qn} a).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have Dbeta: beta = \\prod_(nu in 'Gal({:Qn} / 1)) sval (gQnC nu) alpha.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /beta rmorph_prod.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => nu _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by case: (gQnC nu) => f /= ->; rewrite Da.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Zbeta: beta \\in Cint.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: Cint_rat_Aint; last by rewrite Dbeta rpred_prod.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /beta; have /vlineP[/= c ->] := mem_galNorm galQn (memvf a).",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by rewrite alg_num_field fmorph_rat rpred_rat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [|nz_a] := boolP (alpha == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (can2_eq (divfK _) (mulfK _)) // mul0r => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: beta != 0 by rewrite Dbeta; apply/prodf_neq0 => nu _; rewrite fmorph_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/(norm_Cint_ge1 Zbeta); rewrite ltr_geF //; apply: ler_lt_trans a_lt1.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "rewrite -[`|alpha|]mulr1 Dbeta (bigD1 1%g) ?group1 //= -Da.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (gQnC _) => /= _ <-; rewrite gal_id normrM.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite -subr_ge0 -mulrBr mulr_ge0 ?normr_ge0 // Da subr_ge0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim/big_rec: _ => [|nu c _]; first by rewrite normr1 lerr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: ler_trans; rewrite -subr_ge0 -{1}[`|c|]mul1r normrM -mulrBl.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mulr_ge0 ?normr_ge0 // subr_ge0 norm_a_nu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GringIrrMode.",
            "VernacEndSegment",
            "51e3bae1f6e9de290d530802509bc611e6d941b4"
        ],
        [
            "Theorem primes_class_simple_gt1 C : simple G -> ~~ abelian G -> C \\in (classes G)^# -> (size (primes #|C|) > 1)%N.",
            "VernacStartTheoremProof",
            "6b97b8614060039019b4b2960bcbdd3a095d41cc"
        ],
        [
            "move=> simpleG not_cGG /setD1P[ntC /imsetP[g Gg defC]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have{ntC} nt_g: g != 1%g by rewrite defC classG_eq1 in ntC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite ltnNge {C}defC; set m := #|_|; apply/negP=> p_natC.",
            "VernacExtend",
            "82794c6d640072624215b51e55460e48059d71e0"
        ],
        [
            "have{p_natC} [p p_pr [a Dm]]: {p : nat & prime p & {a | m = p ^ a}%N}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /prod_prime_decomp->: (0 < m)%N by rewrite /m -index_cent1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite prime_decompE; case Dpr: (primes _) p_natC => [|p []] // _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by exists 2 => //; rewrite big_nil; exists 0%N.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite big_seq1; exists p; last by exists (logn p m).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have:= mem_primes p m; rewrite Dpr mem_head => /esym/and3P[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{simpleG} [ntG minG] := simpleP _ simpleG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose p_dv1 i := (p %| 'chi[G]_i 1%g)%C.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have p_dvd_supp_g i: ~~ p_dv1 i && (i != 0) -> 'chi_i g = 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /p_dv1 irr1_degree dvdC_nat -prime_coprime // => /andP[co_p_i1 nz_i].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have fful_i: cfker 'chi_i = [1].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /minG[//|/eqP] := cfker_normal 'chi_i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite eqEsubset subGcfker (negPf nz_i) andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have trivZ: 'Z(G) = [1] by have /minG[|/center_idP/idPn] := center_normal G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have trivZi: ('Z('chi_i))%CF = [1].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/trivgP; rewrite -quotient_sub1 ?norms1 //= -fful_i cfcenter_eq_center.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite fful_i subG1 -(isog_eq1 (isog_center (quotient1_isog G))) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite trivZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite coprime_degree_support_cfcenter ?trivZi ?inE //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -/m Dm irr1_degree natCK coprime_sym coprime_expl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose alpha := \\sum_(i | p_dv1 i && (i != 0)) 'chi_i 1%g / p%:R * 'chi_i g.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have nz_p: p%:R != 0 :> algC by rewrite pnatr_eq0 -lt0n prime_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Dalpha: alpha = - 1 / p%:R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/(canRL (mulfK nz_p))/eqP; rewrite -addr_eq0 addrC; apply/eqP/esym.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "transitivity (cfReg G g); first by rewrite cfRegE (negPf nt_g).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite cfReg_sum sum_cfunE (bigD1 0) //= irr0 !cfunE cfun11 cfun1E Gg.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulr1; congr (1 + _); rewrite (bigID p_dv1) /= addrC big_andbC.",
            "VernacExtend",
            "9d78117f9fa00d8b79d08aff717709f8d084ba84"
        ],
        [
            "rewrite big1 => [|i /p_dvd_supp_g chig0]; last by rewrite cfunE chig0 mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite add0r big_andbC mulr_suml; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite mulrAC divfK // cfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices: (p %| 1)%C by rewrite (dvdC_nat p 1) dvdn1 -(subnKC (prime_gt1 p_pr)).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite unfold_in (negPf nz_p).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Cint_rat_Aint ?rpred_div ?rpred1 ?rpred_nat //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -rpredN // -mulNr -Dalpha rpred_sum // => i /andP[/dvdCP[c Zc ->] _].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite mulfK // rpredM ?Aint_irr ?Aint_Cint.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IntegralChar.",
            "VernacEndSegment",
            "ccc747e2fc4cb2dd7078c9961c78f36f1d5bd371"
        ],
        [
            "Section MoreIntegralChar.",
            "VernacBeginSection",
            "8554ead155c4606ac86f66b3234777eba81854b5"
        ],
        [
            "Implicit Type gT : finGroupType.",
            "VernacReserve",
            "fbb7aa19a7971c5b10d380fd1f026e4fa401e829"
        ],
        [
            "Theorem Burnside_p_a_q_b gT (G : {group gT}) : (size (primes #|G|) <= 2)%N -> solvable G.",
            "VernacStartTheoremProof",
            "5a78e67c6c4dd2dd4a72c68d76361df82a548382"
        ],
        [
            "move: {2}_.+1 (ltnSn #|G|) => n; elim: n => // n IHn in gT G *.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "rewrite ltnS => leGn piGle2; have [simpleG | ] := boolP (simple G); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite negb_forall_in => /exists_inP[N sNG]; rewrite eq_sym.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "have [-> | ] := altP (N =P G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite groupP /= genGid normG andbT eqb_id negbK => /eqP->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exact: solvable1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite [N == G]eqEproper sNG eqbF_neg !negbK => ltNG /and3P[grN].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case/isgroupP: grN => {N}N -> in sNG ltNG *; rewrite /= genGid => ntN nNG.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have nsNG: N <| G by apply/andP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have dv_le_pi m: (m %| #|G| -> size (primes m) <= 2)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> m_dv_G; apply: leq_trans piGle2.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite uniq_leq_size ?primes_uniq //; apply: pi_of_dvd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (series_sol nsNG) !IHn ?dv_le_pi ?cardSg ?dvdn_quotient //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: leq_trans leGn; apply: ltn_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: leq_trans leGn; apply: proper_card.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [->|[p p_pr p_dv_G]] := trivgVpdiv G; first exact: solvable1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have piGp: p \\in \\pi(G) by rewrite mem_primes p_pr cardG_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [P sylP] := Sylow_exists p G; have [sPG pP p'GP] := and3P sylP.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have ntP: P :!=: 1%g by rewrite -rank_gt0 (rank_Sylow sylP) p_rank_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /trivgPn[g /setIP[Pg cPg] nt_g]: 'Z(P) != 1%g.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite center_nil_eq1 // (pgroup_nil pP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: abelian_sol; have: (size (primes #|g ^: G|) <= 1)%N.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite -ltnS -[_.+1]/(size (p :: _)) (leq_trans _ piGle2) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -index_cent1 uniq_leq_size // => [/= | q].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite primes_uniq -p'natEpi ?(pnat_dvd _ p'GP) ?indexgS //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subsetI sPG sub_cent1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite inE => /predU1P[-> // |]; apply: pi_of_dvd; rewrite ?dvdn_indexg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite leqNgt; apply: contraR => /primes_class_simple_gt1-> //.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !inE classG_eq1 nt_g mem_classes // (subsetP sPG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dvd_irr1_cardG gT (G : {group gT}) i : ('chi[G]_i 1%g %| #|G|)%C.",
            "VernacStartTheoremProof",
            "c97be573cbaf791d27352a61fae410b888dd4d4d"
        ],
        [
            "rewrite unfold_in -if_neg irr1_neq0 Cint_rat_Aint //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite rpred_div ?rpred_nat // rpred_Cnat ?Cnat_irr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[n in n / _]/(_ *+ true) -(eqxx i) -mulr_natr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -first_orthogonality_relation mulVKf ?neq0CG //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite sum_by_classes => [|x y Gx Gy]; rewrite -?conjVg ?cfunJ //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite mulr_suml rpred_sum // => K /repr_classesP[Gx {1}->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !mulrA mulrAC rpredM ?Aint_irr ?Aint_class_div_irr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dvd_irr1_index_center gT (G : {group gT}) i : ('chi[G]_i 1%g %| #|G : 'Z('chi_i)%CF|)%C.",
            "VernacStartTheoremProof",
            "475bc6a0a3b087573acee27c51626e8844a3835a"
        ],
        [
            "without loss fful: gT G i / cfaithful 'chi_i.",
            "VernacExtend",
            "87d5e7b04148ee8f2e4efcc847e0dfadae0aa4cb"
        ],
        [
            "rewrite -{2}[i](quo_IirrK _ (subxx _)) ?mod_IirrE ?cfModE ?cfker_normal //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite morph1; set i1 := quo_Iirr _ i => /(_ _ _ i1) IH.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "have fful_i1: cfaithful 'chi_i1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite quo_IirrE ?cfker_normal ?cfaithful_quo.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= IH fful_i1; rewrite cfcenter_fful_irr // -cfcenter_eq_center.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite index_quotient_eq ?cfcenter_sub ?cfker_norm //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite setIC subIset // normal_sub ?cfker_center_normal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [lambda lin_lambda Dlambda] := cfcenter_Res 'chi_i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have DchiZ: {in G & 'Z(G), forall x y, 'chi_i (x * y)%g = 'chi_i x * lambda y}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(cfcenter_fful_irr fful) => x y Gx Zy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: (mulfI (irr1_neq0 i)); rewrite mulrCA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "transitivity ('chi_i x * ('chi_i 1%g *: lambda) y); last by rewrite !cfunE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -Dlambda cfResE ?cfcenter_sub //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -irrRepr cfcenter_repr !cfunE in Zy *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/setIdP: Zy => Gy /is_scalar_mxP[e De].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite repr_mx1 group1 (groupM Gx Gy) (repr_mxM _ Gx Gy) Gx Gy De.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mul_mx_scalar mxtraceZ mulrCA mulrA mulrC -mxtraceZ scalemx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have inj_lambda: {in 'Z(G) &, injective lambda}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(cfcenter_fful_irr fful) => x y Zx Zy eq_xy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/eqP; rewrite eq_mulVg1 -in_set1 (subsetP fful) // cfkerEirr inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/eqP; transitivity ('Res['Z('chi_i)%CF] 'chi_i (x^-1 * y)%g).",
            "VernacExtend",
            "866fdcc981c595501adb7c48ffa1c1c27c576c53"
        ],
        [
            "by rewrite cfResE ?cfcenter_sub // groupM ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Dlambda !cfunE lin_charM ?groupV // -eq_xy -lin_charM ?groupV //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrC mulVg lin_char1 ?mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite unfold_in -if_neg irr1_neq0 Cint_rat_Aint //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite rpred_div ?rpred_nat // rpred_Cnat ?Cnat_irr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (cfcenter_fful_irr fful) nCdivE natf_indexg ?center_sub //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have ->: #|G|%:R = \\sum_(x in G) 'chi_i x * 'chi_i (x^-1)%g.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -[_%:R]mulr1; apply: canLR (mulVKf (neq0CG G)) _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite first_orthogonality_relation eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (big_setID [set x | 'chi_i x == 0]) /= -setIdE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite big1 ?add0r => [| x /setIdP[_ /eqP->]]; last by rewrite mul0r.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose h x := (x ^: G * 'Z(G))%g; rewrite (partition_big_imset h).",
            "VernacExtend",
            "de7a4b42b1ef81b17722dd81c9c5b9378b46a6e7"
        ],
        [
            "rewrite !mulr_suml rpred_sum //= => _ /imsetP[x /setDP[Gx nz_chi_x] ->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have: #|x ^: G|%:R * ('chi_i x * 'chi_i x^-1%g) / 'chi_i 1%g \\in Aint.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !mulrA mulrAC rpredM ?Aint_irr ?Aint_class_div_irr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr 2 (_ * _ \\in Aint); apply: canRL (mulfK (neq0CG _)) _.",
            "VernacExtend",
            "385739dd8a4f73703d3828c61e1780a276bfaa31"
        ],
        [
            "rewrite inE in nz_chi_x.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "transitivity ('chi_i x * 'chi_i (x^-1)%g *+ #|h x|); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -sumr_const.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_big => [y | _ /mulsgP[_ z /imsetP[u Gu ->] Zz] ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite !inE -andbA; apply/idP/and3P=> [|[_ _ /eqP <-]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -{1}[y]mulg1 mem_mulg ?class_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/mulsgP=> _ z /imsetP[u Gu ->] Zz ->; have /centerP[Gz cGz] := Zz.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "rewrite groupM 1?DchiZ ?groupJ ?cfunJ //; split=> //.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by rewrite mulf_neq0 // lin_char_neq0 /= ?cfcenter_fful_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[z](mulKg u) -cGz // -conjMg /h classGidl {u Gu}//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/eqP/setP=> w; apply/mulsgP/mulsgP=> [][_ z1 /imsetP[v Gv ->] Zz1 ->].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "exists (x ^ v)%g (z * z1)%g; rewrite ?mem_imset ?groupM //.",
            "VernacExtend",
            "86097d7e1d033a017247b9ad8996dbb25a765418"
        ],
        [
            "by rewrite conjMg -mulgA /(z ^ v)%g cGz // mulKg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists ((x * z) ^ v)%g (z^-1 * z1)%g; rewrite ?mem_imset ?groupM ?groupV //.",
            "VernacExtend",
            "b5f9fbb0f2108b1fa2523a419ac2aba0f9734d1a"
        ],
        [
            "by rewrite conjMg -mulgA /(z ^ v)%g cGz // mulKg mulKVg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !irr_inv DchiZ ?groupJ ?cfunJ // rmorphM mulrACA -!normCK -exprMn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (normC_lin_char lin_lambda) ?mulr1 //= cfcenter_fful_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulrAC -natrM mulr_natl; congr (_ *+ _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "symmetry; rewrite /h /mulg /= /set_mulg [in _ @2: (_, _)]unlock cardsE.",
            "VernacExtend",
            "ba28bca3513f9c0c3709417402c25d3b87653c7a"
        ],
        [
            "rewrite -cardX card_in_image // => [] [y1 z1] [y2 z2] /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move=> /andP[/=/imsetP[u1 Gu1 ->] Zz1] /andP[/=/imsetP[u2 Gu2 ->] Zz2] {y1 y2}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move=> eq12; have /eqP := congr1 'chi_i eq12.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite !(cfunJ, DchiZ) ?groupJ // (can_eq (mulKf nz_chi_x)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (inj_in_eq inj_lambda) // => /eqP eq_z12; rewrite eq_z12 in eq12 *.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite (mulIg _ _ _ eq12).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_classM_coef_sum_eq gT (G : {group gT}) j1 j2 k g1 g2 g : let a := @gring_classM_coef gT G j1 j2 in let a_k := a k in g1 \\in enum_val j1 -> g2 \\in enum_val j2 -> g \\in enum_val k -> let sum12g := \\sum_i 'chi[G]_i g1 * 'chi_i g2 * ('chi_i g)^* / 'chi_i 1%g in a_k%:R = (#|enum_val j1| * #|enum_val j2|)%:R / #|G|%:R * sum12g.",
            "VernacStartTheoremProof",
            "d6a99073e3ad1563a601c75873f8ffbcb8247672"
        ],
        [
            "move=> a /= Kg1 Kg2 Kg; rewrite mulrAC; apply: canRL (mulfK (neq0CG G)) _.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "transitivity (\\sum_j (#|G| * a j)%:R *+ (j == k) : algC).",
            "VernacExtend",
            "0b7f879e5e7fcb4a963536f97081e2f724c08d45"
        ],
        [
            "by rewrite (bigD1 k) //= eqxx -natrM mulnC big1 ?addr0 // => j /negPf->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defK (j : 'I_#|classes G|) x: x \\in enum_val j -> enum_val j = x ^: G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by have /imsetP[y Gy ->] := enum_valP j => /class_eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Gg: g \\in G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/imsetP: (enum_valP k) Kg => x Gx -> /imsetP[y Gy ->]; apply: groupJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "transitivity (\\sum_j \\sum_i 'omega_i['K_j] * 'chi_i 1%g * ('chi_i g)^* *+ a j).",
            "VernacExtend",
            "816acfd0359ccb177808d40e3c526059512cb753"
        ],
        [
            "apply: eq_bigr => j _; have /imsetP[z Gz Dj] := enum_valP j.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "have Kz: z \\in enum_val j by rewrite Dj class_refl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(Lagrange (subsetIl G 'C[z])) index_cent1 -mulnA natrM -mulrnAl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have ->: (j == k) = (z \\in enum_val k).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(inj_eq enum_val_inj); apply/eqP/idP=> [<-|/defK->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (defK _ g) // -second_orthogonality_relation // mulr_suml.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr=> i _; rewrite natrM mulrA mulr_natr mulrC mulrA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (gring_mode_class_sum_eq i Kz) divfK ?irr1_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite exchange_big /= mulr_sumr; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "transitivity ('omega_i['K_j1 *m 'K_j2] * 'chi_i 1%g * ('chi_i g)^*).",
            "VernacExtend",
            "51a89cfadcb52a89fe91b3502edbde2ddbf9904e"
        ],
        [
            "rewrite gring_classM_expansion -/a raddf_sum !mulr_suml /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => j _; rewrite xcfunZr -!mulrA mulr_natl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !mulrA 2![_ / _]mulrAC (defK _ _ Kg1) (defK _ _ Kg2); congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "rewrite gring_irr_modeM ?gring_class_sum_central // mulnC natrM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (gring_mode_class_sum_eq i Kg2) !mulrA divfK ?irr1_neq0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by congr (_ * _); rewrite [_ * _]mulrC (gring_mode_class_sum_eq i Kg1) !mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma index_support_dvd_degree gT (G H : {group gT}) chi : H \\subset G -> chi \\is a character -> chi \\in 'CF(G, H) -> (H :==: 1%g) || abelian G -> (#|G : H| %| chi 1%g)%C.",
            "VernacStartTheoremProof",
            "1cff36a2c6c89b61f69a8fc6e4e22fb6bd6e61f9"
        ],
        [
            "move=> sHG Nchi Hchi ZHG.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suffices: (#|G : H| %| 'Res[H] chi 1%g)%C by rewrite cfResE ?group1.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite ['Res _]cfun_sum_cfdot sum_cfunE rpred_sum // => i _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite cfunE dvdC_mulr ?Cint_Cnat ?Cnat_irr1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [j ->]: exists j, 'chi_i = 'Res 'chi[G]_j.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/predU1P: ZHG => [-> | cGG] in i *.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "suffices ->: i = 0 by exists 0; rewrite !irr0 cfRes_cfun1 ?sub1G.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply/val_inj; case: i => [[|i] //=]; rewrite ltnNge NirrE.",
            "VernacExtend",
            "cbc4844cce0ad896dcb7bc2a887cf6aae5047c5f"
        ],
        [
            "by rewrite (@leq_trans 1) // leqNgt classes_gt1 eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have linG := char_abelianP G cGG; have linG1 j := eqP (proj2 (andP (linG j))).",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have /fin_all_exists[rH DrH] j: exists k, 'Res[H, G] 'chi_j = 'chi_k.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/irrP/lin_char_irr/andP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite cfRes_char ?irr_char // cfRes1 ?linG1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices{i} all_rH: codom rH =i Iirr H.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by exists (iinv (all_rH i)); rewrite DrH f_iinv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subset_cardP; last exact/subsetP; apply/esym/eqP.",
            "VernacExtend",
            "a624da2b4199240a3ea232bd84ab1a69486d14ac"
        ],
        [
            "rewrite card_Iirr_abelian ?(abelianS sHG) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(eqn_pmul2r (indexg_gt0 G H)) Lagrange //; apply/eqP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -sum_nat_const -card_Iirr_abelian // -sum1_card.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (partition_big rH (mem (codom rH))) /=; last exact: image_f.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have nsHG: H <| G by rewrite -sub_abelian_normal.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: eq_bigr => _ /codomP[i ->]; rewrite -card_quotient ?normal_norm //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -card_Iirr_abelian ?quotient_abelian //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have Mlin j1 j2: exists k, 'chi_j1 * 'chi_j2 = 'chi[G]_k.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exact/irrP/lin_char_irr/rpredM.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have /fin_all_exists[rQ DrQ] (j : Iirr (G / H)) := Mlin i (mod_Iirr j).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have mulJi: ('chi[G]_i)^*%CF * 'chi_i = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/cfun_inP=> x Gx; rewrite !cfunE -lin_charV_conj ?linG // cfun1E Gx.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite lin_charV ?mulVf ?lin_char_neq0 ?linG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have inj_rQ: injective rQ.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> j1 j2 /(congr1 (fun k => (('chi_i)^*%CF * 'chi_k) / H)%CF).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite -!DrQ !mulrA mulJi !mul1r !mod_IirrE ?cfModK // => /irr_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(card_imset _ inj_rQ) -sum1_card; apply: eq_bigl => j.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -(inj_eq irr_inj) -!DrH; apply/eqP/imsetP=> [eq_ij | [k _ ->]].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have [k Dk] := Mlin (conjC_Iirr i) j; exists (quo_Iirr H k) => //.",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "apply/irr_inj; rewrite -DrQ quo_IirrK //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -Dk conjC_IirrE mulrCA mulrA mulJi mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subsetP=> x Hx; have Gx := subsetP sHG x Hx.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite cfkerEirr inE linG1 -Dk conjC_IirrE; apply/eqP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "transitivity ((1 : 'CF(G)) x); last by rewrite cfun1E Gx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -mulJi !cfunE -!(cfResE _ sHG Hx) eq_ij.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -DrQ; apply/cfun_inP=> x Hx; rewrite !cfResE // cfunE mulrC.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by rewrite cfker1 ?linG1 ?mul1r ?(subsetP _ x Hx) // mod_IirrE ?cfker_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: (#|G : H| %| #|G : H|%:R * '[chi, 'chi_j])%C.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite dvdC_mulr ?Cint_Cnat ?Cnat_cfdot_char_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr (_ %| _)%C; rewrite (cfdotEl _ Hchi) -(Lagrange sHG) mulnC natrM.",
            "VernacExtend",
            "90723b7805fdae0b93bd8b98ae215a5658363919"
        ],
        [
            "rewrite invfM -mulrA mulVKf ?neq0CiG //; congr (_ * _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply: eq_bigr => x Hx; rewrite !cfResE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem faithful_degree_p_part gT (p : nat) (G P : {group gT}) i : cfaithful 'chi[G]_i -> p.-nat (truncC ('chi_i 1%g)) -> p.-Sylow(G) P -> abelian P -> 'chi_i 1%g = (#|G : 'Z(G)|`_p)%:R.",
            "VernacStartTheoremProof",
            "d399622f11e62e488cd1029fcbf91d9b666b36cb"
        ],
        [
            "have [p_pr | pr'p] := boolP (prime p); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have p'n n: (n > 0)%N -> p^'.-nat n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move/p'natEpi->; rewrite mem_primes (negPf pr'p).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite irr1_degree natCK => _ /pnat_1-> => [_ _|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite part_p'nat ?p'n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite p'n ?irr_degree_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> fful_i /p_natP[a Dchi1] sylP cPP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Dchi1C: 'chi_i 1%g = (p ^ a)%:R by rewrite -Dchi1 irr1_degree natCK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have pa_dv_ZiG: (p ^ a %| #|G : 'Z(G)|)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -dvdC_nat -[pa in (pa %| _)%C]Dchi1C -(cfcenter_fful_irr fful_i).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: dvd_irr1_index_center.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have [sPG pP p'PiG] := and3P sylP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ZchiP: 'Res[P] 'chi_i \\in 'CF(P, P :&: 'Z(G)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/cfun_onP=> x; rewrite inE; have [Px | /cfun0->//] := boolP (x \\in P).",
            "VernacExtend",
            "88e21057fc6b7102e6280fe7858222ef45ddbdf0"
        ],
        [
            "rewrite /= -(cfcenter_fful_irr fful_i) cfResE //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: coprime_degree_support_cfcenter.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite Dchi1 coprime_expl // prime_coprime // -p'natE //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: pnat_dvd p'PiG; rewrite -index_cent1 indexgS // subsetI sPG.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite sub_cent1 (subsetP cPP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /andP[_ nZG] := center_normal G; have nZP := subset_trans sPG nZG.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "apply/eqP; rewrite Dchi1C eqr_nat eqn_dvd -{1}(pfactorK a p_pr) -p_part.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite partn_dvd //= -dvdC_nat -[pa in (_ %| pa)%C]Dchi1C -card_quotient //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(card_Hall (quotient_pHall nZP sylP)) card_quotient // -indexgI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(cfResE _ sPG) // index_support_dvd_degree ?subsetIl ?cPP ?orbT //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cfRes_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_norm2_char_generators gT (G : {group gT}) (chi : 'CF(G)) : let S := [pred s | generator G s] in chi \\is a character -> {in S, forall s, chi s != 0} -> \\sum_(s in S) `|chi s| ^+ 2 >= #|S|%:R.",
            "VernacStartTheoremProof",
            "ebdff9eea77a2a862655d424f71dc36448fa3e45"
        ],
        [
            "move=> S Nchi nz_chi_S; pose n := #|G|.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have [g Sg | S_0] := pickP (generator G); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite eq_card0 // big_pred0 ?lerr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defG: <[g]> = G by apply/esym/eqP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [cycG Gg]: cyclic G /\\ g \\in G by rewrite -defG cycle_cyclic cycle_id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose I := {k : 'I_n | coprime n k}; pose ItoS (k : I) := (g ^+ sval k)%g.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have imItoS: codom ItoS =i S.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> s; rewrite inE /= /ItoS /I /n /S -defG -orderE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply/codomP/idP=> [[[i cogi] ->] | Ss]; first by rewrite generator_coprime.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [m ltmg Ds] := cyclePmin (cycle_generator Ss).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite Ds generator_coprime in Ss; apply: ex_intro (Sub (Sub m _) _) _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /injectiveP injItoS: injective ItoS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> k1 k2 /eqP; apply: contraTeq.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite eq_expg_mod_order orderE defG -/n !modn_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [Qn galQn [QnC gQnC [eps [pr_eps defQn] QnG]]] := group_num_field_exists G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{QnG} QnGg := QnG _ G _ _ g (order_dvdG Gg).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose calG := 'Gal({:Qn} / 1).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have /fin_all_exists2[ItoQ inItoQ defItoQ] (k : I): exists2 nu, nu \\in calG & nu eps = eps ^+ val k.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: k => [[m _] /=]; rewrite coprime_sym => /Qn_aut_exists[nuC DnuC].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have [nuQ DnuQ] := restrict_aut_to_normal_num_field QnC nuC.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have hom_nu: kHom 1 {:Qn} (linfun nuQ).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite k1HomE; apply/ahom_inP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by split=> [u v | ]; rewrite !lfunE ?rmorphM ?rmorph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [|nu cGnu Dnu] := kHom_to_gal _ (normalFieldf 1) hom_nu.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !subvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists nu => //; apply: (fmorph_inj QnC).",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "rewrite -Dnu ?memvf // lfunE DnuQ rmorphX DnuC //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite prim_expr_order // fmorph_primitive_root.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{defQn} imItoQ: calG = ItoQ @: {:I}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/setP=> nu; apply/idP/imsetP=> [cGnu | [k _ ->] //].",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "have pr_nu_e: n.-primitive_root (nu eps) by rewrite fmorph_primitive_root.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [i Dnue] := prim_rootP pr_eps (prim_expr_order pr_nu_e).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Dnue prim_root_exp_coprime // coprime_sym in pr_nu_e.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: ex_intro2 (Sub i _) _ _ => //; apply/eqP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite /calG /= -defQn in ItoQ inItoQ defItoQ nu cGnu Dnue *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite gal_adjoin_eq // defItoQ -Dnue.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have injItoQ: {in {:I} &, injective ItoQ}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> k1 k2 _ _ /(congr1 (fun nu : gal_of _ => nu eps))/eqP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: contraTeq; rewrite !defItoQ (eq_prim_root_expr pr_eps) !modn_small.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose pi1 := \\prod_(s in S) chi s; pose pi2 := \\prod_(s in S) `|chi s| ^+ 2.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have Qpi1: pi1 \\in Crat.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [a Da] := QnGg _ Nchi; suffices ->: pi1 = QnC (galNorm 1 {:Qn} a).",
            "VernacExtend",
            "32f3051101718011671dd27b552d72a725766d33"
        ],
        [
            "have /vlineP[q ->] := mem_galNorm galQn (memvf a).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite rmorphZ_num rmorph1 mulr1 Crat_rat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /galNorm rmorph_prod -/calG imItoQ big_imset //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /pi1 -(eq_bigl _ _ imItoS) -big_uniq // big_map big_filter /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => k _; have [nuC DnuC] := gQnC (ItoQ k); rewrite DnuC Da.",
            "VernacExtend",
            "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
        ],
        [
            "have [r ->] := char_sum_irr Nchi; rewrite !sum_cfunE rmorph_sum.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "apply: eq_bigr => i _; have /QnGg[b Db] := irr_char i.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "have Lchi_i: 'chi_i \\is a linear_char by rewrite irr_cyclic_lin.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /(prim_rootP pr_eps)[m Dem]: b ^+ n = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite -(fmorph_eq1 QnC) rmorphX Db -lin_charX //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -expg_mod_order orderE defG modnn lin_char1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -Db -DnuC Dem rmorphX /= defItoQ exprAC -{m}Dem rmorphX {b}Db.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite lin_charX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "clear I ItoS imItoS injItoS ItoQ inItoQ defItoQ imItoQ injItoQ.",
            "VernacExtend",
            "aea8fce1e2332ea04325ff8ffeb4b18d5968a2f4"
        ],
        [
            "clear Qn galQn QnC gQnC eps pr_eps QnGg calG.",
            "VernacExtend",
            "a997849c4bb529cd16744ae2c95078dce212f4a0"
        ],
        [
            "have{Qpi1} Zpi1: pi1 \\in Cint.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite Cint_rat_Aint // rpred_prod // => s _; apply: Aint_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{pi1 Zpi1} pi2_ge1: 1 <= pi2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ->: pi2 = `|pi1| ^+ 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (big_morph Num.norm (@normrM _) (@normr1 _)) -prodrXl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Cint_normK // sqr_Cint_ge1 //; apply/prodf_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Sgt0: (#|S| > 0)%N by rewrite (cardD1 g) [g \\in S]Sg.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -mulr_natr -ler_pdivl_mulr ?ltr0n //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have n2chi_ge0 s: s \\in S -> 0 <= `|chi s| ^+ 2 by rewrite exprn_ge0 ?normr_ge0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(expr_ge1 Sgt0); last by rewrite divr_ge0 ?ler0n ?sumr_ge0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (ler_trans pi2_ge1) // lerif_AGM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem nonlinear_irr_vanish gT (G : {group gT}) i : 'chi[G]_i 1%g > 1 -> exists2 x, x \\in G & 'chi_i x = 0.",
            "VernacStartTheoremProof",
            "91d5ff15580294947fa367f29b8949471281cef4"
        ],
        [
            "move=> chi1gt1; apply/exists_eq_inP; apply: contraFT (ltr_geF chi1gt1).",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "rewrite negb_exists_in => /forall_inP-nz_chi.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -(norm_Cnat (Cnat_irr1 i)) -(@expr_le1 _ 2) ?normr_ge0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(ler_add2r (#|G|%:R * '['chi_i])) {1}cfnorm_irr mulr1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (cfnormE (cfun_onG _)) mulVKf ?neq0CG // (big_setD1 1%g) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addrCA ler_add2l (cardsD1 1%g) group1 mulrS ler_add2l.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -sumr_const !(partition_big_imset (fun s => <[s]>)) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: ler_sum => _ /imsetP[g /setD1P[ntg Gg] ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have sgG: <[g]> \\subset G by rewrite cycle_subG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose S := [pred s | generator <[g]> s]; pose chi := 'Res[<[g]>] 'chi_i.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have defS: [pred s in G^# | <[s]> == <[g]>] =i S.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> s; rewrite inE /= eq_sym andb_idl // !inE -cycle_eq1 -cycle_subG.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by move/eqP <-; rewrite cycle_eq1 ntg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have resS: {in S, 'chi_i =1 chi}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> s /cycle_generator=> g_s; rewrite cfResE ?cycle_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !(eq_bigl _ _ defS) sumr_const.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (eq_bigr (fun s => `|chi s| ^+ 2)) => [|s /resS-> //].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: sum_norm2_char_generators => [|s Ss].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite cfRes_char ?irr_char.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -resS // nz_chi ?(subsetP sgG) ?cycle_generator.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MoreIntegralChar.",
            "VernacEndSegment",
            "98a4879349dd5af60c89aff9d360ce7566fb16e1"
        ]
    ],
    "proofs": [
        {
            "name": "gring_class_sum_central",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "by rewrite -classg_base_center (eq_row_sub i) // rowK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_classM_expansion",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "have [/imsetP[zi Gzi dKi] /imsetP[zj Gzj dKj]] := (enum_valP i, enum_valP j).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose aG := regular_repr F G; have sKG := subsetP (class_subG _ (subxx G)).",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "transitivity (\\sum_(x in zi ^: G) \\sum_(y in zj ^: G) aG (x * y)%g).",
                        "VernacExtend",
                        "78c6f561f044bb185df99c58c2c18a3ba1f451fe"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmx_suml -/aG dKi; apply: eq_bigr => x /sKG Gx.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmx_sumr -/aG dKj; apply: eq_bigr => y /sKG Gy.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite repr_mxM ?Gx ?Gy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose h2 xy : gT := (xy.1 * xy.2)%g.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "pose h1 xy := enum_rank_in (classes1 G) (h2 xy ^: G).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "rewrite pair_big (partition_big h1 xpredT) //=; apply: eq_bigr => k _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite (partition_big h2 (mem (enum_val k))) /= => [|[x y]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/andP=> /andP[/= /sKG Gx /sKG Gy] /eqP <-.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite enum_rankK_in ?class_refl ?mem_classes ?groupM ?Gx ?Gy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite scaler_sumr; apply: eq_bigr => g Kk_g; rewrite scaler_nat.",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "rewrite (set_gring_classM_coef _ _ Kk_g) -sumr_const; apply: eq_big => [] [x y].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE /= dKi dKj /h1 /h2 /=; apply: andb_id2r => /eqP ->.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "have /imsetP[zk Gzk dKk] := enum_valP k; rewrite dKk in Kk_g.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by rewrite (class_eqP Kk_g) -dKk enum_valK_in eqxx andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /h2 /= => /andP[_ /eqP->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_irr_mode_key",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Aint_irr",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "exact/Aint_char/irr_char.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_irr_gring_op_center_scalar",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "move/groupC=> irrG /center_mxP[R_A cGA].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply: mx_abs_irr_cent_scalar irrG _ _; apply/centgmxP => x Gx.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(gring_opG rG Gx) -!gring_opM ?cGA // envelop_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxZn_inj",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "by rewrite -[n]prednK ?irr_degree_gt0 //; apply: fmorph_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_gring_center",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "exact: cfRepr_gring_center (irrRepr i).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_irr_modeM",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "move=> Z_A Z_B; have [[R_A cRA] [R_B cRB]] := (center_mxP Z_A, center_mxP Z_B).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "apply: mxZn_inj; rewrite scalar_mxM -!irr_gring_center ?gring_opM //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/center_mxP; split=> [|C R_C]; first exact: envelop_mxM.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmxA cRA // -!mulmxA cRB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Aint_gring_mode_class_sum",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "move: k; pose X := [tuple 'omega_i['K_k] | k < #|classes G| ].",
                        "VernacExtend",
                        "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
                    ]
                },
                {
                    "command": [
                        "have memX k: 'omega_i['K_k] \\in X by apply: image_f.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have S_P := Cint_spanP X; set S := Cint_span X in S_P.",
                        "VernacExtend",
                        "81881a093b2294c76be3b432fbe83612064d7bc9"
                    ]
                },
                {
                    "command": [
                        "have S_X: {subset X <= S} by apply: mem_Cint_span.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have S_1: 1 \\in S.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: S_X; apply/codomP; exists (enum_rank_in (classes1 G) 1%g).",
                        "VernacExtend",
                        "35b4a2888a46f6a2741ba7ff9a9385990b0ff16d"
                    ]
                },
                {
                    "command": [
                        "rewrite (@gring_mode_class_sum_eq _ 1%g) ?enum_rankK_in ?classes1 //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulfK ?irr1_neq0 // class1G cards1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suffices Smul: mulr_closed S.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by move=> k; apply: fin_Csubring_Aint S_P _ _; rewrite ?S_X.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=> // _ _ /S_P[x ->] /S_P[y ->].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite mulr_sumr rpred_sum // => j _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrzAr mulr_suml rpredMz ?rpred_sum // => k _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrzAl rpredMz {x y}// !nth_mktuple.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -gring_irr_modeM ?gring_class_sum_central //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite gring_classM_expansion raddf_sum rpred_sum // => jk _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite scaler_nat raddfMn rpredMn ?S_X ?memX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Aint_class_div_irr1",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "move=> Gx; have clGxG := mem_classes Gx; pose k := enum_rank_in clGxG (x ^: G).",
                        "VernacExtend",
                        "0d2d1f46a70792d5bd924378895a9803e8de88f9"
                    ]
                },
                {
                    "command": [
                        "have k_x: x \\in enum_val k by rewrite enum_rankK_in // class_refl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(gring_mode_class_sum_eq k_x) Aint_gring_mode_class_sum.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Burnside_p_a_q_b",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "move: {2}_.+1 (ltnSn #|G|) => n; elim: n => // n IHn in gT G *.",
                        "VernacExtend",
                        "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS => leGn piGle2; have [simpleG | ] := boolP (simple G); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_forall_in => /exists_inP[N sNG]; rewrite eq_sym.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "have [-> | ] := altP (N =P G).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite groupP /= genGid normG andbT eqb_id negbK => /eqP->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "exact: solvable1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "rewrite [N == G]eqEproper sNG eqbF_neg !negbK => ltNG /and3P[grN].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case/isgroupP: grN => {N}N -> in sNG ltNG *; rewrite /= genGid => ntN nNG.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "have nsNG: N <| G by apply/andP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have dv_le_pi m: (m %| #|G| -> size (primes m) <= 2)%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> m_dv_G; apply: leq_trans piGle2.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite uniq_leq_size ?primes_uniq //; apply: pi_of_dvd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (series_sol nsNG) !IHn ?dv_le_pi ?cardSg ?dvdn_quotient //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans leGn; apply: ltn_quotient.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans leGn; apply: proper_card.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [->|[p p_pr p_dv_G]] := trivgVpdiv G; first exact: solvable1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have piGp: p \\in \\pi(G) by rewrite mem_primes p_pr cardG_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [P sylP] := Sylow_exists p G; have [sPG pP p'GP] := and3P sylP.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "have ntP: P :!=: 1%g by rewrite -rank_gt0 (rank_Sylow sylP) p_rank_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have /trivgPn[g /setIP[Pg cPg] nt_g]: 'Z(P) != 1%g.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite center_nil_eq1 // (pgroup_nil pP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: abelian_sol; have: (size (primes #|g ^: G|) <= 1)%N.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "rewrite -ltnS -[_.+1]/(size (p :: _)) (leq_trans _ piGle2) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -index_cent1 uniq_leq_size // => [/= | q].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite primes_uniq -p'natEpi ?(pnat_dvd _ p'GP) ?indexgS //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite subsetI sPG sub_cent1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE => /predU1P[-> // |]; apply: pi_of_dvd; rewrite ?dvdn_indexg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite leqNgt; apply: contraR => /primes_class_simple_gt1-> //.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE classG_eq1 nt_g mem_classes // (subsetP sPG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvd_irr1_cardG",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "rewrite unfold_in -if_neg irr1_neq0 Cint_rat_Aint //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpred_div ?rpred_nat // rpred_Cnat ?Cnat_irr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -[n in n / _]/(_ *+ true) -(eqxx i) -mulr_natr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -first_orthogonality_relation mulVKf ?neq0CG //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_by_classes => [|x y Gx Gy]; rewrite -?conjVg ?cfunJ //.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "rewrite mulr_suml rpred_sum // => K /repr_classesP[Gx {1}->].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulrA mulrAC rpredM ?Aint_irr ?Aint_class_div_irr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}