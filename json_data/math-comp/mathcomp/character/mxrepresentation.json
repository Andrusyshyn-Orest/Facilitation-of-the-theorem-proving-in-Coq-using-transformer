{
    "filename": "mathcomp/character/mxrepresentation.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrbool ssrfun eqtype ssrnat seq path div choice.",
            "VernacRequire",
            "28f7cc4746e8608411d0ebf22fadc6cf30a98194"
        ],
        [
            "From mathcomp Require Import fintype tuple finfun bigop prime ssralg poly polydiv finset.",
            "VernacRequire",
            "e2157aea87df0d4e55bc3cf29c700da20d9fd04c"
        ],
        [
            "From mathcomp Require Import fingroup morphism perm automorphism quotient finalg action zmodp.",
            "VernacRequire",
            "e70624a957673c5ffb8320b159daedaa0938320d"
        ],
        [
            "From mathcomp Require Import commutator cyclic center pgroup matrix mxalgebra mxpoly.",
            "VernacRequire",
            "aaa64c71da0be042a1f7bef4feb25135bf3f1f53"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GroupScope GRing.Theory.",
            "VernacImport",
            "e9e593badced32f8de606b9f182143860064d3fd"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Reserved Notation \"''n_' i\" (at level 8, i at level 2, format \"''n_' i\").",
            "VernacSyntaxExtension",
            "74dfdf023df2e1dc5ce27e1c87d361b45478e452"
        ],
        [
            "Reserved Notation \"''R_' i\" (at level 8, i at level 2, format \"''R_' i\").",
            "VernacSyntaxExtension",
            "976c079a2cb457f33c5dd268d0e5bff9ce1f6def"
        ],
        [
            "Reserved Notation \"''e_' i\" (at level 8, i at level 2, format \"''e_' i\").",
            "VernacSyntaxExtension",
            "ecafc9789ddf61f36630c0497780f89dabf03761"
        ],
        [
            "Delimit Scope irrType_scope with irr.",
            "VernacDelimiters",
            "58c2bcf405fef3a68e160f4c763271334e04f528"
        ],
        [
            "Section RingRepr.",
            "VernacBeginSection",
            "d7a6bc18f9530eefbc5bf727ace1ba4dad8c8f41"
        ],
        [
            "Variable R : comUnitRingType.",
            "VernacAssumption",
            "41cfe2068730b999f2c5d4b15e7cfda930d59847"
        ],
        [
            "Section OneRepresentation.",
            "VernacBeginSection",
            "d2dd7d49099ec15210125ed6bb320bd692780c2d"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Definition mx_repr (G : {set gT}) n (r : gT -> 'M[R]_n) := r 1%g = 1%:M /\\ {in G &, {morph r : x y / (x * y)%g >-> x *m y}}.",
            "VernacDefinition",
            "9de2916a2691e4ac3d7da310c6c8273cd8e8bca6"
        ],
        [
            "Structure mx_representation G n := MxRepresentation { repr_mx :> gT -> 'M_n; _ : mx_repr G repr_mx }.",
            "VernacInductive",
            "3970bc8efaace9f136c349c68400a2d2f58f56be"
        ],
        [
            "Variables (G : {group gT}) (n : nat) (rG : mx_representation G n).",
            "VernacAssumption",
            "f8e150ebba2b8bab37d32bd8af78a4dac3963771"
        ],
        [
            "Arguments rG _%group_scope : extra scopes.",
            "VernacArguments",
            "e809dd5909a366d8958a8526a4160b5755011253"
        ],
        [
            "Lemma repr_mx1 : rG 1 = 1%:M.",
            "VernacStartTheoremProof",
            "8ed13ed7d0e221453cdca055129b15b128c070f1"
        ],
        [
            "by case: rG => r [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_mxM : {in G &, {morph rG : x y / (x * y)%g >-> x *m y}}.",
            "VernacStartTheoremProof",
            "f40afc4f76406d3ee92c5f69dfaeb1ba1e71df2c"
        ],
        [
            "by case: rG => r [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_mxK m x : x \\in G -> cancel ((@mulmx R m n n)^~ (rG x)) (mulmx^~ (rG x^-1)).",
            "VernacStartTheoremProof",
            "e1c18780bbb9ac9314da9e184d37c5d150a21ab5"
        ],
        [
            "by move=> Gx U; rewrite -mulmxA -repr_mxM ?groupV // mulgV repr_mx1 mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_mxKV m x : x \\in G -> cancel ((@mulmx R m n n)^~ (rG x^-1)) (mulmx^~ (rG x)).",
            "VernacStartTheoremProof",
            "612d565fc8b796a469c262477483d0482e8f6a93"
        ],
        [
            "by rewrite -groupV -{3}[x]invgK; apply: repr_mxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_mx_unit x : x \\in G -> rG x \\in unitmx.",
            "VernacStartTheoremProof",
            "bf4ef407916829e41d308c9c0a5e9e24e3e6ca8e"
        ],
        [
            "by move=> Gx; case/mulmx1_unit: (repr_mxKV Gx 1%:M).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_mxV : {in G, {morph rG : x / x^-1%g >-> invmx x}}.",
            "VernacStartTheoremProof",
            "32ed593fd971dc7ee107d46257ac3c4a4e455205"
        ],
        [
            "by move=> x Gx /=; rewrite -[rG x^-1](mulKmx (repr_mx_unit Gx)) mulmxA repr_mxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition enveloping_algebra_mx := \\matrix_(i < #|G|) mxvec (rG (enum_val i)).",
            "VernacDefinition",
            "7f14a00613edb3831807658aea6d2ed234b1a3ed"
        ],
        [
            "Section Stabiliser.",
            "VernacBeginSection",
            "2da74ac3037937136f1da838480917e5a9c8c544"
        ],
        [
            "Variables (m : nat) (U : 'M[R]_(m, n)).",
            "VernacAssumption",
            "d73bc35b7837c3b741bf02a569b73a60ef7a57ac"
        ],
        [
            "Definition rstab := [set x in G | U *m rG x == U].",
            "VernacDefinition",
            "13ae4236d7ff90850185ce2331bff50acf2d2ef8"
        ],
        [
            "Lemma rstab_sub : rstab \\subset G.",
            "VernacStartTheoremProof",
            "e32c955e9db9a082b4b919a02bf703d771876dff"
        ],
        [
            "by apply/subsetP=> x; case/setIdP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstab_group_set : group_set rstab.",
            "VernacStartTheoremProof",
            "9df134a4b9eb2580086fd2e39a767c9f39d89be2"
        ],
        [
            "apply/group_setP; rewrite inE group1 repr_mx1 mulmx1; split=> //= x y.",
            "VernacExtend",
            "877072eca2b60ab32889d658e076eb026578eeca"
        ],
        [
            "case/setIdP=> Gx cUx; case/setIdP=> Gy cUy; rewrite inE repr_mxM ?groupM //.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "by rewrite mulmxA (eqP cUx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical rstab_group := Group rstab_group_set.",
            "VernacDefinition",
            "834ded294d917519b6b87ab1046265d9758d78a6"
        ],
        [
            "End Stabiliser.",
            "VernacEndSegment",
            "0c82fbcd0f13450c76ebe86b635c70aa710ff7d8"
        ],
        [
            "Section CentHom.",
            "VernacBeginSection",
            "aceda93bc1a2b67f2d74d6cababdd0ac7d492931"
        ],
        [
            "Variable f : 'M[R]_n.",
            "VernacAssumption",
            "1da80ecee97314cd2a4f184ef66d6fd3b26d485c"
        ],
        [
            "Definition rcent := [set x in G | f *m rG x == rG x *m f].",
            "VernacDefinition",
            "4fd7e1e5c55aef81e2431659a9227f819e316a0e"
        ],
        [
            "Lemma rcent_sub : rcent \\subset G.",
            "VernacStartTheoremProof",
            "ba5d5b9225f6b8fba79e57e017c70584d682136b"
        ],
        [
            "by apply/subsetP=> x; case/setIdP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rcent_group_set : group_set rcent.",
            "VernacStartTheoremProof",
            "4d0696d044a8b55a9ec3510798c4591a9060c8cb"
        ],
        [
            "apply/group_setP; rewrite inE group1 repr_mx1 mulmx1 mul1mx; split=> //= x y.",
            "VernacExtend",
            "877072eca2b60ab32889d658e076eb026578eeca"
        ],
        [
            "case/setIdP=> Gx; move/eqP=> cfx; case/setIdP=> Gy; move/eqP=> cfy.",
            "VernacExtend",
            "9b2398f8b60a7f1650affe06b0ffc5ff27b11442"
        ],
        [
            "by rewrite inE repr_mxM ?groupM //= -mulmxA -cfy !mulmxA cfx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical rcent_group := Group rcent_group_set.",
            "VernacDefinition",
            "41a39f383e36510a576456fd3659076c94cfb680"
        ],
        [
            "Definition centgmx := G \\subset rcent.",
            "VernacDefinition",
            "9cb20f61f9619efd4c35276a9e7da136564c0a97"
        ],
        [
            "Lemma centgmxP : reflect (forall x, x \\in G -> f *m rG x = rG x *m f) centgmx.",
            "VernacStartTheoremProof",
            "aa39402a1f6c5ae16d46f293fa2a06a6d57fdfd8"
        ],
        [
            "apply: (iffP subsetP) => cGf x Gx; by have:= cGf x Gx; rewrite !inE Gx /=; move/eqP.",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CentHom.",
            "VernacEndSegment",
            "c7bc88df779121a05050e78230750c37fb13971b"
        ],
        [
            "Definition rker := rstab 1%:M.",
            "VernacDefinition",
            "a39a5c894ac6fb7b519c6308e6c374b9e039c33d"
        ],
        [
            "Canonical rker_group := Eval hnf in [group of rker].",
            "VernacDefinition",
            "2761285ac78b019c2df112ad78ef3887caf001a9"
        ],
        [
            "Lemma rkerP x : reflect (x \\in G /\\ rG x = 1%:M) (x \\in rker).",
            "VernacStartTheoremProof",
            "5e606b58bc5c7d83aac130ada08dda702b46fcdc"
        ],
        [
            "by apply: (iffP setIdP) => [] [->]; move/eqP; rewrite mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rker_norm : G \\subset 'N(rker).",
            "VernacStartTheoremProof",
            "b4f9b7651e125c873259fc866998b1606530d402"
        ],
        [
            "apply/subsetP=> x Gx; rewrite inE sub_conjg; apply/subsetP=> y.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "case/rkerP=> Gy ry1; rewrite mem_conjgV !inE groupJ //=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite !repr_mxM ?groupM ?groupV // ry1 !mulmxA mulmx1 repr_mxKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rker_normal : rker <| G.",
            "VernacStartTheoremProof",
            "15b57d4bc50038526dcab5accdf509d70dc8505a"
        ],
        [
            "by rewrite /normal rstab_sub rker_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mx_faithful := rker \\subset [1].",
            "VernacDefinition",
            "b1c37d45dd8d5ace65ea130afe8be1d5409fa580"
        ],
        [
            "Lemma mx_faithful_inj : mx_faithful -> {in G &, injective rG}.",
            "VernacStartTheoremProof",
            "5dbe6b132c7a51502a29addd5c51890c2ca588d9"
        ],
        [
            "move=> ffulG x y Gx Gy eq_rGxy; apply/eqP; rewrite eq_mulgV1 -in_set1.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite (subsetP ffulG) // inE groupM ?repr_mxM ?groupV //= eq_rGxy.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulmxA repr_mxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rker_linear : n = 1%N -> G^`(1)%g \\subset rker.",
            "VernacStartTheoremProof",
            "483daa74dbfa5a8d74dbd6bcac53f867314bee1b"
        ],
        [
            "move=> n1; rewrite gen_subG; apply/subsetP=> xy; case/imset2P=> x y Gx Gy ->.",
            "VernacExtend",
            "f7a319083ade140d03e661013f81bba1acc1bdaf"
        ],
        [
            "rewrite !inE groupR //= /commg mulgA -invMg repr_mxM ?groupV ?groupM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulmxA (can2_eq (repr_mxK _) (repr_mxKV _)) ?groupM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !repr_mxV ?repr_mxM ?groupM //; move: (rG x) (rG y).",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "by rewrite n1 => rx ry; rewrite (mx11_scalar rx) scalar_mxC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rcenter := [set g in G | is_scalar_mx (rG g)].",
            "VernacDefinition",
            "d0affb47ea5269a79f8b9c07d6f387d12bb005fc"
        ],
        [
            "Fact rcenter_group_set : group_set rcenter.",
            "VernacStartTheoremProof",
            "0f7a7e9de032d7c0bb9b7041c9e3f0e2360e6149"
        ],
        [
            "apply/group_setP; split=> [|x y].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite inE group1 repr_mx1 scalar_mx_is_scalar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> /setIdP[Gx /is_scalar_mxP[a defx]] /setIdP[Gy /is_scalar_mxP[b defy]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite !inE groupM ?repr_mxM // defx defy -scalar_mxM ?scalar_mx_is_scalar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical rcenter_group := Group rcenter_group_set.",
            "VernacDefinition",
            "42a0a1b5c1dd346c07e4440d86d429779f233c62"
        ],
        [
            "Lemma rcenter_normal : rcenter <| G.",
            "VernacStartTheoremProof",
            "ecdf6cad37025e493e9314c14da0a7a5aad54c0e"
        ],
        [
            "rewrite /normal /rcenter {1}setIdE subsetIl; apply/subsetP=> x Gx; rewrite inE.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "apply/subsetP=> _ /imsetP[y /setIdP[Gy /is_scalar_mxP[c rGy]] ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite inE !repr_mxM ?groupM ?groupV //= mulmxA rGy scalar_mxC repr_mxKV //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: scalar_mx_is_scalar.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OneRepresentation.",
            "VernacEndSegment",
            "f5917bfc39a430b3f41ac2a8c17476b69ca6c0d8"
        ],
        [
            "Arguments rkerP {gT G n rG x}.",
            "VernacArguments",
            "c3aa8ac02d1833a3fbfc3594c60cee417f551e3c"
        ],
        [
            "Section Proper.",
            "VernacBeginSection",
            "9a150e6c9bf6a8aced94b8e16fd1866700e54808"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (n' : nat).",
            "VernacAssumption",
            "ae3370e994920ec9224b090b93a7063ac68165c5"
        ],
        [
            "Local Notation n := n'.+1.",
            "VernacSyntacticDefinition",
            "a44d7133197df31a38212ab1d7bfb6ec0dc123a2"
        ],
        [
            "Variable rG : mx_representation G n.",
            "VernacAssumption",
            "0a99c324a829b25f6ca38fed7b1510c472287586"
        ],
        [
            "Lemma repr_mxMr : {in G &, {morph rG : x y / (x * y)%g >-> x * y}}.",
            "VernacStartTheoremProof",
            "568a636aadd44022968d4f9ad2c3d764d429f05a"
        ],
        [
            "exact: repr_mxM.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_mxVr : {in G, {morph rG : x / (x^-1)%g >-> x^-1}}.",
            "VernacStartTheoremProof",
            "5fe88e1e62e3cf0a7321edb5058838f542d75c47"
        ],
        [
            "exact: repr_mxV.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_mx_unitr x : x \\in G -> rG x \\is a GRing.unit.",
            "VernacStartTheoremProof",
            "941999520771ac441aae62573df98ee157eabfce"
        ],
        [
            "exact: repr_mx_unit.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma repr_mxX m : {in G, {morph rG : x / (x ^+ m)%g >-> x ^+ m}}.",
            "VernacStartTheoremProof",
            "6e12d7fd8a46dfe71f87b058a1ee407383a958e2"
        ],
        [
            "elim: m => [|m IHm] x Gx; rewrite /= ?repr_mx1 // expgS exprS -IHm //.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "by rewrite repr_mxM ?groupX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Proper.",
            "VernacEndSegment",
            "888ca636fcf17dc3e946bf2c0088a041091f7a81"
        ],
        [
            "Section ChangeGroup.",
            "VernacBeginSection",
            "d785392a315f62cdabe6bccb95ed4f828d9b5f01"
        ],
        [
            "Variables (gT : finGroupType) (G H : {group gT}) (n : nat).",
            "VernacAssumption",
            "aba2086271c0da605cd29fe0f68f16268d9d29ae"
        ],
        [
            "Variables (rG : mx_representation G n).",
            "VernacAssumption",
            "0a99c324a829b25f6ca38fed7b1510c472287586"
        ],
        [
            "Section SubGroup.",
            "VernacBeginSection",
            "87d0601b38946fdc37e715474809ea1422e89aad"
        ],
        [
            "Hypothesis sHG : H \\subset G.",
            "VernacAssumption",
            "e6a1d44b7def616917f2606808485d59eddc6886"
        ],
        [
            "Lemma subg_mx_repr : mx_repr H rG.",
            "VernacStartTheoremProof",
            "4de4e4c6c9d413e5b17297e748bb5a5482c58dbe"
        ],
        [
            "by split=> [|x y Hx Hy]; rewrite (repr_mx1, repr_mxM) ?(subsetP sHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subg_repr := MxRepresentation subg_mx_repr.",
            "VernacDefinition",
            "56f8b68bcf4456b03f28988d01862b330536c310"
        ],
        [
            "Local Notation rH := subg_repr.",
            "VernacSyntacticDefinition",
            "b0edaedcd44bc1a36847fd4ac906f774da216539"
        ],
        [
            "Lemma rcent_subg U : rcent rH U = H :&: rcent rG U.",
            "VernacStartTheoremProof",
            "a1120754baa7285cb9e23598cfa338dd13a617fe"
        ],
        [
            "by apply/setP=> x; rewrite !inE andbA -in_setI (setIidPl sHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Stabiliser.",
            "VernacBeginSection",
            "2da74ac3037937136f1da838480917e5a9c8c544"
        ],
        [
            "Variables (m : nat) (U : 'M[R]_(m, n)).",
            "VernacAssumption",
            "d73bc35b7837c3b741bf02a569b73a60ef7a57ac"
        ],
        [
            "Lemma rstab_subg : rstab rH U = H :&: rstab rG U.",
            "VernacStartTheoremProof",
            "6618b5fe777b04abba3ed6412ba460caaf115c50"
        ],
        [
            "by apply/setP=> x; rewrite !inE andbA -in_setI (setIidPl sHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Stabiliser.",
            "VernacEndSegment",
            "0c82fbcd0f13450c76ebe86b635c70aa710ff7d8"
        ],
        [
            "Lemma rker_subg : rker rH = H :&: rker rG.",
            "VernacStartTheoremProof",
            "8571bb294fc5970d9388ba3957c8473bd6d62cea"
        ],
        [
            "exact: rstab_subg.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subg_mx_faithful : mx_faithful rG -> mx_faithful rH.",
            "VernacStartTheoremProof",
            "09c217d1538a7ac80302d6dd64a71a98cfc84c39"
        ],
        [
            "by apply: subset_trans; rewrite rker_subg subsetIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SubGroup.",
            "VernacEndSegment",
            "40c0a6b4e508901e106e26c579f6100f44031972"
        ],
        [
            "Section SameGroup.",
            "VernacBeginSection",
            "68f4daf5ead17c536ffbfea96987c11a0b0ad8b1"
        ],
        [
            "Hypothesis eqGH : G :==: H.",
            "VernacAssumption",
            "19e0265dccf4d4501d0e9bd3e83cfeebfcd3c60c"
        ],
        [
            "Lemma eqg_repr_proof : H \\subset G.",
            "VernacStartTheoremProof",
            "92e94bd9b45b48b687d2cfadede528820c8ce961"
        ],
        [
            "by rewrite (eqP eqGH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eqg_repr := subg_repr eqg_repr_proof.",
            "VernacDefinition",
            "88549a3444f3ac79cdc78c1db0ba070624c3df96"
        ],
        [
            "Local Notation rH := eqg_repr.",
            "VernacSyntacticDefinition",
            "c7515161fa3782b91e936d537790cd67bb2828f8"
        ],
        [
            "Lemma rcent_eqg U : rcent rH U = rcent rG U.",
            "VernacStartTheoremProof",
            "ad672ba2aa060816ad01c16ed79de9ac8f66647f"
        ],
        [
            "by rewrite rcent_subg -(eqP eqGH) (setIidPr _) ?rcent_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Stabiliser.",
            "VernacBeginSection",
            "2da74ac3037937136f1da838480917e5a9c8c544"
        ],
        [
            "Variables (m : nat) (U : 'M[R]_(m, n)).",
            "VernacAssumption",
            "d73bc35b7837c3b741bf02a569b73a60ef7a57ac"
        ],
        [
            "Lemma rstab_eqg : rstab rH U = rstab rG U.",
            "VernacStartTheoremProof",
            "1a81f18f2e2c27224ceeae06b707d75eefc7413b"
        ],
        [
            "by rewrite rstab_subg -(eqP eqGH) (setIidPr _) ?rstab_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Stabiliser.",
            "VernacEndSegment",
            "0c82fbcd0f13450c76ebe86b635c70aa710ff7d8"
        ],
        [
            "Lemma rker_eqg : rker rH = rker rG.",
            "VernacStartTheoremProof",
            "fd5543e304c1d902ed5240e720b24fec7848de55"
        ],
        [
            "exact: rstab_eqg.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqg_mx_faithful : mx_faithful rH = mx_faithful rG.",
            "VernacStartTheoremProof",
            "6d57a700531615f65f0e71d1e3f8d7ec6aade5ae"
        ],
        [
            "by rewrite /mx_faithful rker_eqg.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SameGroup.",
            "VernacEndSegment",
            "e302cca86824605df1e00e4f00877462087d5191"
        ],
        [
            "End ChangeGroup.",
            "VernacEndSegment",
            "88adb34fea9c08de8df109fdf7ca8a22b6440d3a"
        ],
        [
            "Section Morphpre.",
            "VernacBeginSection",
            "1684f3c85b255a09306746bb2a94bbf20669b36e"
        ],
        [
            "Variables (aT rT : finGroupType) (D : {group aT}) (f : {morphism D >-> rT}).",
            "VernacAssumption",
            "2a757b1a13339a354a9e9ac2eac5dac1c6c5e35b"
        ],
        [
            "Variables (G : {group rT}) (n : nat) (rG : mx_representation G n).",
            "VernacAssumption",
            "af92a0b5e2d972e8c886ba44ae1518fbedd14e50"
        ],
        [
            "Lemma morphpre_mx_repr : mx_repr (f @*^-1 G) (rG \\o f).",
            "VernacStartTheoremProof",
            "35eaa4d10fb4540f9943eac4d667a56183c71f31"
        ],
        [
            "split=> [|x y]; first by rewrite /= morph1 repr_mx1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/morphpreP=> Dx Gfx; case/morphpreP=> Dy Gfy.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite /= morphM ?repr_mxM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical morphpre_repr := MxRepresentation morphpre_mx_repr.",
            "VernacDefinition",
            "5cabd2d7d4199af483aa94c77de2f66dc9e02cfe"
        ],
        [
            "Local Notation rGf := morphpre_repr.",
            "VernacSyntacticDefinition",
            "45cd61668705a62d0e0646a2e4cbd477347c2371"
        ],
        [
            "Section Stabiliser.",
            "VernacBeginSection",
            "2da74ac3037937136f1da838480917e5a9c8c544"
        ],
        [
            "Variables (m : nat) (U : 'M[R]_(m, n)).",
            "VernacAssumption",
            "d73bc35b7837c3b741bf02a569b73a60ef7a57ac"
        ],
        [
            "Lemma rstab_morphpre : rstab rGf U = f @*^-1 (rstab rG U).",
            "VernacStartTheoremProof",
            "99a072c37df7e42517d711ea7129e69fb2bbafe4"
        ],
        [
            "by apply/setP=> x; rewrite !inE andbA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Stabiliser.",
            "VernacEndSegment",
            "0c82fbcd0f13450c76ebe86b635c70aa710ff7d8"
        ],
        [
            "Lemma rker_morphpre : rker rGf = f @*^-1 (rker rG).",
            "VernacStartTheoremProof",
            "1da5eb197659b696f4dc8fafa915d430382cfffe"
        ],
        [
            "exact: rstab_morphpre.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Morphpre.",
            "VernacEndSegment",
            "184837503a9980428bff8d3499c2fbc66eb6514a"
        ],
        [
            "Section Morphim.",
            "VernacBeginSection",
            "4646452bcbeec569fe6b270cd8e4d27da72b6079"
        ],
        [
            "Variables (aT rT : finGroupType) (G D : {group aT}) (f : {morphism D >-> rT}).",
            "VernacAssumption",
            "0f15414801b90443836b235fe222ba6fbef00dbf"
        ],
        [
            "Variables (n : nat) (rGf : mx_representation (f @* G) n).",
            "VernacAssumption",
            "6f3de9a519bc55df70c1f6ed163a955d81c77d86"
        ],
        [
            "Definition morphim_mx of G \\subset D := fun x => rGf (f x).",
            "VernacDefinition",
            "e7339a8ba647b7f0ce2ed4d8297ed6f7df5787cc"
        ],
        [
            "Hypothesis sGD : G \\subset D.",
            "VernacAssumption",
            "e5bee542dae4b94e2f2a5d0212db17bcb357c2f3"
        ],
        [
            "Lemma morphim_mxE x : morphim_mx sGD x = rGf (f x).",
            "VernacStartTheoremProof",
            "46b0927437cd68e43b5505d285d26a22defc0b46"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let sG_f'fG : G \\subset f @*^-1 (f @* G).",
            "VernacDefinition",
            "aba3ee5142e8a299822ccb8f6cde14c98db6f567"
        ],
        [
            "by rewrite -sub_morphim_pre.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morphim_mx_repr : mx_repr G (morphim_mx sGD).",
            "VernacStartTheoremProof",
            "d2868e9b5fe06c357514d4e8d55e089034c939d4"
        ],
        [
            "exact: subg_mx_repr (morphpre_repr f rGf) sG_f'fG.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical morphim_repr := MxRepresentation morphim_mx_repr.",
            "VernacDefinition",
            "a3d79d61da1d7c66ea4ea62b87bfdb0fe95280c6"
        ],
        [
            "Local Notation rG := morphim_repr.",
            "VernacSyntacticDefinition",
            "d7f64093415b0292e2048bcf3a0da5d4654ab5ad"
        ],
        [
            "Section Stabiliser.",
            "VernacBeginSection",
            "2da74ac3037937136f1da838480917e5a9c8c544"
        ],
        [
            "Variables (m : nat) (U : 'M[R]_(m, n)).",
            "VernacAssumption",
            "d73bc35b7837c3b741bf02a569b73a60ef7a57ac"
        ],
        [
            "Lemma rstab_morphim : rstab rG U = G :&: f @*^-1 rstab rGf U.",
            "VernacStartTheoremProof",
            "d8c95a72a2cccb39f11a926968f2e00d27608be3"
        ],
        [
            "by rewrite -rstab_morphpre -(rstab_subg _ sG_f'fG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Stabiliser.",
            "VernacEndSegment",
            "0c82fbcd0f13450c76ebe86b635c70aa710ff7d8"
        ],
        [
            "Lemma rker_morphim : rker rG = G :&: f @*^-1 (rker rGf).",
            "VernacStartTheoremProof",
            "5f4e8762e4ae89e40ae8349a17d0b21c9a321073"
        ],
        [
            "exact: rstab_morphim.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Morphim.",
            "VernacEndSegment",
            "168fbc3a2a73e55e94c79bdb37226af0d77bd3d8"
        ],
        [
            "Section Conjugate.",
            "VernacBeginSection",
            "71c758ad74b79f2b25ba737ddc19095bed006691"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (n : nat).",
            "VernacAssumption",
            "91e3bbcc97956621c800159c6bed8d799c65412c"
        ],
        [
            "Variables (rG : mx_representation G n) (B : 'M[R]_n).",
            "VernacAssumption",
            "8d1576db21188f92987d57c671f39f145ebef474"
        ],
        [
            "Definition rconj_mx of B \\in unitmx := fun x => B *m rG x *m invmx B.",
            "VernacDefinition",
            "7537ad9b850bc5f7f3e4a4aeb20c5de84567a8ff"
        ],
        [
            "Hypothesis uB : B \\in unitmx.",
            "VernacAssumption",
            "d1594336ba940ddfd009845275b06c245d3f61c7"
        ],
        [
            "Lemma rconj_mx_repr : mx_repr G (rconj_mx uB).",
            "VernacStartTheoremProof",
            "d5ae9009fefb438dc0b33b3bbc1f46ccfb73612c"
        ],
        [
            "split=> [|x y Gx Gy]; rewrite /rconj_mx ?repr_mx1 ?mulmx1 ?mulmxV ?repr_mxM //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite !mulmxA mulmxKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical rconj_repr := MxRepresentation rconj_mx_repr.",
            "VernacDefinition",
            "820b1122a747c226c5e47be1a997ca39cd6d5fe8"
        ],
        [
            "Local Notation rGB := rconj_repr.",
            "VernacSyntacticDefinition",
            "9d2a5b0e64b48599412d41c7a4a0dff96ea987cb"
        ],
        [
            "Lemma rconj_mxE x : rGB x = B *m rG x *m invmx B.",
            "VernacStartTheoremProof",
            "ca06d2563b80a9055da97749955f1dd8e2230fde"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rconj_mxJ m (W : 'M_(m, n)) x : W *m rGB x *m B = W *m B *m rG x.",
            "VernacStartTheoremProof",
            "1a2defe42d017bb73d2e44e4659842849f3111d7"
        ],
        [
            "by rewrite !mulmxA mulmxKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rcent_conj A : rcent rGB A = rcent rG (invmx B *m A *m B).",
            "VernacStartTheoremProof",
            "146147823f929efd4c3bbee435bfebe8df8a0266"
        ],
        [
            "apply/setP=> x; rewrite !inE /= rconj_mxE !mulmxA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (can2_eq (mulmxKV uB) (mulmxK uB)) -!mulmxA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(can2_eq (mulKVmx uB) (mulKmx uB)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstab_conj m (U : 'M_(m, n)) : rstab rGB U = rstab rG (U *m B).",
            "VernacStartTheoremProof",
            "4ebccde6a4009f26416b54b39b603278051c89f1"
        ],
        [
            "apply/setP=> x; rewrite !inE /= rconj_mxE !mulmxA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (can2_eq (mulmxKV uB) (mulmxK uB)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rker_conj : rker rGB = rker rG.",
            "VernacStartTheoremProof",
            "028da1c0a2394c916f16059d3d0fd5f8919b5430"
        ],
        [
            "apply/setP=> x; rewrite !inE /= mulmxA (can2_eq (mulmxKV uB) (mulmxK uB)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mul1mx -scalar_mxC (inj_eq (can_inj (mulKmx uB))) mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_mx_faithful : mx_faithful rGB = mx_faithful rG.",
            "VernacStartTheoremProof",
            "d6af2b4e96b96190cd17ec7cebec6e9aef73d088"
        ],
        [
            "by rewrite /mx_faithful rker_conj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Conjugate.",
            "VernacEndSegment",
            "cd11c05dc9b7f1aad69eb16be071ec39ede68b46"
        ],
        [
            "Section Quotient.",
            "VernacBeginSection",
            "42863e3b9465542087051a31120f1713f465d640"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (n : nat).",
            "VernacAssumption",
            "91e3bbcc97956621c800159c6bed8d799c65412c"
        ],
        [
            "Variable rG : mx_representation G n.",
            "VernacAssumption",
            "0a99c324a829b25f6ca38fed7b1510c472287586"
        ],
        [
            "Definition quo_mx (H : {set gT}) of H \\subset rker rG & G \\subset 'N(H) := fun Hx : coset_of H => rG (repr Hx).",
            "VernacDefinition",
            "f2e4b60a29b18661afb6a02c713e2cf95c9d44d2"
        ],
        [
            "Section SubQuotient.",
            "VernacBeginSection",
            "b172c584f216732aac34ea3bb7410ed0c725e518"
        ],
        [
            "Variable H : {group gT}.",
            "VernacAssumption",
            "f77518ae30571b060c265fdf7e18e963a1873d14"
        ],
        [
            "Hypotheses (krH : H \\subset rker rG) (nHG : G \\subset 'N(H)).",
            "VernacAssumption",
            "77ab5b504984cbcaf7f3f7c07de01ec037f34f73"
        ],
        [
            "Let nHGs := subsetP nHG.",
            "VernacDefinition",
            "4fa94418e832418fab1b723844ecb07bf60ea8e8"
        ],
        [
            "Lemma quo_mx_coset x : x \\in G -> quo_mx krH nHG (coset H x) = rG x.",
            "VernacStartTheoremProof",
            "e029bce0a99505d008fc7463838f0d465ce67fbf"
        ],
        [
            "move=> Gx; rewrite /quo_mx val_coset ?nHGs //; case: repr_rcosetP => z Hz.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by case/rkerP: (subsetP krH z Hz) => Gz rz1; rewrite repr_mxM // rz1 mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quo_mx_repr : mx_repr (G / H)%g (quo_mx krH nHG).",
            "VernacStartTheoremProof",
            "a10b4b9795678cd12fad20ee2b3d13d049d4e2bb"
        ],
        [
            "split=> [|Hx Hy]; first by rewrite /quo_mx repr_coset1 repr_mx1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/morphimP=> x Nx Gx ->{Hx}; case/morphimP=> y Ny Gy ->{Hy}.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite -morphM // !quo_mx_coset ?groupM ?repr_mxM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical quo_repr := MxRepresentation quo_mx_repr.",
            "VernacDefinition",
            "2b9cf012e1f3006f3ce3c3e56f384838b0152289"
        ],
        [
            "Local Notation rGH := quo_repr.",
            "VernacSyntacticDefinition",
            "6c50e29ddbd603a499be0a389c9a5ac0eb6cf9ee"
        ],
        [
            "Lemma quo_repr_coset x : x \\in G -> rGH (coset H x) = rG x.",
            "VernacStartTheoremProof",
            "3a9e822bf85f8b649b2556df805ec5e511f9cc81"
        ],
        [
            "exact: quo_mx_coset.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rcent_quo A : rcent rGH A = (rcent rG A / H)%g.",
            "VernacStartTheoremProof",
            "4436f938451533453e2b5b2de392262aa88eb968"
        ],
        [
            "apply/setP=> Hx; rewrite !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/andP/idP=> [[]|]; case/morphimP=> x Nx Gx ->{Hx}.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "by rewrite quo_repr_coset // => cAx; rewrite mem_morphim // inE Gx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/setIdP: Gx => Gx cAx; rewrite quo_repr_coset ?mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstab_quo m (U : 'M_(m, n)) : rstab rGH U = (rstab rG U / H)%g.",
            "VernacStartTheoremProof",
            "5d4c26a9672c4a9addb847fac3595ff603edf4b3"
        ],
        [
            "apply/setP=> Hx; rewrite !inE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/andP/idP=> [[]|]; case/morphimP=> x Nx Gx ->{Hx}.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "by rewrite quo_repr_coset // => nUx; rewrite mem_morphim // inE Gx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/setIdP: Gx => Gx nUx; rewrite quo_repr_coset ?mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rker_quo : rker rGH = (rker rG / H)%g.",
            "VernacStartTheoremProof",
            "0e85a1b614d3dbb4c0d4572760083f0555d8e51d"
        ],
        [
            "exact: rstab_quo.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SubQuotient.",
            "VernacEndSegment",
            "c3a70ce86ecbc07940885362547d58a03f22b5b9"
        ],
        [
            "Definition kquo_mx := quo_mx (subxx (rker rG)) (rker_norm rG).",
            "VernacDefinition",
            "0df09f8025dfd81f94e05627f2f6fd55771f0494"
        ],
        [
            "Lemma kquo_mxE : kquo_mx = quo_mx (subxx (rker rG)) (rker_norm rG).",
            "VernacStartTheoremProof",
            "d7c8938c34ebd89ccb5810fbe4fdf836902262d8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical kquo_repr := @MxRepresentation _ _ _ kquo_mx (quo_mx_repr _ _).",
            "VernacDefinition",
            "d9d4c774d91858a8e9c6dac257d822cacd923ad4"
        ],
        [
            "Lemma kquo_repr_coset x : x \\in G -> kquo_repr (coset (rker rG) x) = rG x.",
            "VernacStartTheoremProof",
            "2fa9eeb6eb438615922383118d016554768d2f40"
        ],
        [
            "exact: quo_repr_coset.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma kquo_mx_faithful : mx_faithful kquo_repr.",
            "VernacStartTheoremProof",
            "84348a9c665b54f5f81656ed9da317aac5e7227c"
        ],
        [
            "by rewrite /mx_faithful rker_quo trivg_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Quotient.",
            "VernacEndSegment",
            "2f78ece027a30c5be7689abb99041a16475da9f7"
        ],
        [
            "Section Regular.",
            "VernacBeginSection",
            "5399efc04e7d1fe85069ad89e0e96966660716d2"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Local Notation nG := #|pred_of_set (gval G)|.",
            "VernacSyntacticDefinition",
            "553a8346d154fc04ff20be739bff980f267f30e8"
        ],
        [
            "Definition gring_index (x : gT) := enum_rank_in (group1 G) x.",
            "VernacDefinition",
            "7ef61d430768b427854840ebcdaf838cb4b49420"
        ],
        [
            "Lemma gring_valK : cancel enum_val gring_index.",
            "VernacStartTheoremProof",
            "c9641456094f57d240215578fb49d30589d7774e"
        ],
        [
            "exact: enum_valK_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_indexK : {in G, cancel gring_index enum_val}.",
            "VernacStartTheoremProof",
            "0c271d20546a84c33b73175963f5a93b6d412a09"
        ],
        [
            "exact: enum_rankK_in.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition regular_mx x : 'M[R]_nG := \\matrix_i delta_mx 0 (gring_index (enum_val i * x)).",
            "VernacDefinition",
            "c3299d1c945b35c82ad9e5566c41fdf41c65bdf4"
        ],
        [
            "Lemma regular_mx_repr : mx_repr G regular_mx.",
            "VernacStartTheoremProof",
            "a6ac95528801770d9ce7250cbcf4de70f10b2d4c"
        ],
        [
            "split=> [|x y Gx Gy]; apply/row_matrixP=> i; rewrite !rowK.",
            "VernacExtend",
            "01f04d3f5bba3b876eb4ec7b1c8f26d2e2cced77"
        ],
        [
            "by rewrite mulg1 row1 gring_valK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite row_mul rowK -rowE rowK mulgA gring_indexK // groupM ?enum_valP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical regular_repr := MxRepresentation regular_mx_repr.",
            "VernacDefinition",
            "feefc9c3956a0198bb5c4d5da5ad7757614045b1"
        ],
        [
            "Local Notation aG := regular_repr.",
            "VernacSyntacticDefinition",
            "2a11679818cc87c40ef37f227972408b93aeac4e"
        ],
        [
            "Definition group_ring := enveloping_algebra_mx aG.",
            "VernacDefinition",
            "795ef29f479c77fe5d9a32ebc90d1930110234bf"
        ],
        [
            "Local Notation R_G := group_ring.",
            "VernacSyntacticDefinition",
            "cb255e1d19af4184187a3878d14075cdae3902bf"
        ],
        [
            "Definition gring_row : 'M[R]_nG -> 'rV_nG := row (gring_index 1).",
            "VernacDefinition",
            "0b5610296a5743718e634d0a2c7e6fa4b63433eb"
        ],
        [
            "Canonical gring_row_linear := [linear of gring_row].",
            "VernacDefinition",
            "06449d53256e04422761b5d7c5256899af5d80fb"
        ],
        [
            "Lemma gring_row_mul A B : gring_row (A *m B) = gring_row A *m B.",
            "VernacStartTheoremProof",
            "1a997b033cc0b1e4bc0245a8dc7dc428d8bb0fe5"
        ],
        [
            "exact: row_mul.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gring_proj x := row (gring_index x) \\o trmx \\o gring_row.",
            "VernacDefinition",
            "bebab4117298a92d8e814ca538284eb81925c2af"
        ],
        [
            "Canonical gring_proj_linear x := [linear of gring_proj x].",
            "VernacDefinition",
            "6cdb49de9afdae34da0f7cce1e01184069e3677a"
        ],
        [
            "Lemma gring_projE : {in G &, forall x y, gring_proj x (aG y) = (x == y)%:R}.",
            "VernacStartTheoremProof",
            "6b3a0f6ff25834d7cd427107fdbe3d997e42e3d9"
        ],
        [
            "move=> x y Gx Gy; rewrite /gring_proj /= /gring_row rowK gring_indexK //=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite mul1g trmx_delta rowE mul_delta_mx_cond [delta_mx 0 0]mx11_scalar !mxE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /= -(inj_eq (can_inj gring_valK)) !gring_indexK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma regular_mx_faithful : mx_faithful aG.",
            "VernacStartTheoremProof",
            "30b51274f78eec10c7b6db897b851be6047b9df0"
        ],
        [
            "apply/subsetP=> x /setIdP[Gx].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite mul1mx inE => /eqP/(congr1 (gring_proj 1%g)).",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -(repr_mx1 aG) !gring_projE ?group1 // eqxx eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (x == _) => // /eqP; rewrite eq_sym oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section GringMx.",
            "VernacBeginSection",
            "2f48e5568c3005bc48079df25fa05122e17efb33"
        ],
        [
            "Variables (n : nat) (rG : mx_representation G n).",
            "VernacAssumption",
            "cc3d708eb91aa13a45668ef369a9af577c8c88fa"
        ],
        [
            "Definition gring_mx := vec_mx \\o mulmxr (enveloping_algebra_mx rG).",
            "VernacDefinition",
            "1d952019791cb3e6604f8c5337b8796e9ffae07c"
        ],
        [
            "Canonical gring_mx_linear := [linear of gring_mx].",
            "VernacDefinition",
            "c95c60b1bcf994b4390200133dd3b331f232e692"
        ],
        [
            "Lemma gring_mxJ a x : x \\in G -> gring_mx (a *m aG x) = gring_mx a *m rG x.",
            "VernacStartTheoremProof",
            "91b7f7d949b7636489ee746899bc0bae7049169a"
        ],
        [
            "move=> Gx; rewrite /gring_mx /= ![a *m _]mulmx_sum_row.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite !(mulmx_suml, linear_sum); apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite linearZ -!scalemxAl linearZ /=; congr (_ *: _) => {a}.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite !rowK /= !mxvecK -rowE rowK mxvecK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite gring_indexK ?groupM ?repr_mxM ?enum_valP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GringMx.",
            "VernacEndSegment",
            "9ef550d9faba2db22348e8c108ced95c27af522c"
        ],
        [
            "Lemma gring_mxK : cancel (gring_mx aG) gring_row.",
            "VernacStartTheoremProof",
            "72bb6746cb3f130dfa406ae194fbb0431d992e48"
        ],
        [
            "move=> a; rewrite /gring_mx /= mulmx_sum_row !linear_sum.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite {2}[a]row_sum_delta; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite !linearZ /= /gring_row !(rowK, mxvecK).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite gring_indexK // mul1g gring_valK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section GringOp.",
            "VernacBeginSection",
            "ba669a3eb3ad1467ec5fe414e5b591fce2478dba"
        ],
        [
            "Variables (n : nat) (rG : mx_representation G n).",
            "VernacAssumption",
            "cc3d708eb91aa13a45668ef369a9af577c8c88fa"
        ],
        [
            "Definition gring_op := gring_mx rG \\o gring_row.",
            "VernacDefinition",
            "03e162301442ee5396287eb0287b472e75941e5c"
        ],
        [
            "Canonical gring_op_linear := [linear of gring_op].",
            "VernacDefinition",
            "51661aef83802d4ae48ca679e5605f08cd2759b8"
        ],
        [
            "Lemma gring_opE a : gring_op a = gring_mx rG (gring_row a).",
            "VernacStartTheoremProof",
            "7902941bad91d4917a1928b577d3263791686dd1"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_opG x : x \\in G -> gring_op (aG x) = rG x.",
            "VernacStartTheoremProof",
            "7e48f198b420e2e4d6475849d5cdb490c297b8bc"
        ],
        [
            "move=> Gx; rewrite gring_opE /gring_row rowK gring_indexK // mul1g.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite /gring_mx /= -rowE rowK mxvecK gring_indexK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_op1 : gring_op 1%:M = 1%:M.",
            "VernacStartTheoremProof",
            "6a42e9b1934311edab601609cc7cda9d329a2672"
        ],
        [
            "by rewrite -(repr_mx1 aG) gring_opG ?repr_mx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_opJ A b : gring_op (A *m gring_mx aG b) = gring_op A *m gring_mx rG b.",
            "VernacStartTheoremProof",
            "d57152d55c60f56d116b5ca52c0f1d7a90064d6c"
        ],
        [
            "rewrite /gring_mx /= ![b *m _]mulmx_sum_row !linear_sum.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => i _; rewrite !linearZ /= !rowK !mxvecK.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite gring_opE gring_row_mul gring_mxJ ?enum_valP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_op_mx b : gring_op (gring_mx aG b) = gring_mx rG b.",
            "VernacStartTheoremProof",
            "3734a228aa36f1e3c5ec3658bfd8bc783b6ad981"
        ],
        [
            "by rewrite -[_ b]mul1mx gring_opJ gring_op1 mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_mxA a b : gring_mx rG (a *m gring_mx aG b) = gring_mx rG a *m gring_mx rG b.",
            "VernacStartTheoremProof",
            "05491b3d2e92a652c721d2d4489a5ab8fcedbfeb"
        ],
        [
            "by rewrite -(gring_op_mx a) -gring_opJ gring_opE gring_row_mul gring_mxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GringOp.",
            "VernacEndSegment",
            "9cfb011ba40241edc81d94bb8bdb5729a2f0332a"
        ],
        [
            "End Regular.",
            "VernacEndSegment",
            "233296a5fa74ba106c2d7367235bc30b2e1fa757"
        ],
        [
            "End RingRepr.",
            "VernacEndSegment",
            "b6a2b0f8c97d9332cd9c7d420e05ac9ccfb80646"
        ],
        [
            "Arguments mx_representation R {gT} G%g n%N.",
            "VernacArguments",
            "646879a77da8508d7b05fc47029820f14860ba31"
        ],
        [
            "Arguments mx_repr {R gT} G%g {n%N} r.",
            "VernacArguments",
            "2a867259e5a546cfa8ce613c09e9b849dd8cc131"
        ],
        [
            "Arguments group_ring R {gT} G%g.",
            "VernacArguments",
            "1359d08d20fb0913d950113fb518072894b30f44"
        ],
        [
            "Arguments regular_repr R {gT} G%g.",
            "VernacArguments",
            "b31acdd0f28bae6a90828e1bc00dd0a561d219b6"
        ],
        [
            "Arguments centgmxP {R gT G n rG f}.",
            "VernacArguments",
            "c298c65c67d6bdb985ce7ca92232a8162d3f8c70"
        ],
        [
            "Arguments rkerP {R gT G n rG x}.",
            "VernacArguments",
            "ceab7711809cd0b3d413832b701d6a266d46e43d"
        ],
        [
            "Arguments repr_mxK {R gT G%G n%N} rG {m%N} [x%g] Gx.",
            "VernacArguments",
            "74c02a538cb88e2e63a15e1e385ca960b229bda9"
        ],
        [
            "Arguments repr_mxKV {R gT G%G n%N} rG {m%N} [x%g] Gx.",
            "VernacArguments",
            "507c5f6fc05a23c63ce914059ff273101b437b24"
        ],
        [
            "Arguments gring_valK {gT G%G} i%R : rename.",
            "VernacArguments",
            "1a8816462faab6ccfe8241ff47f60547b1af7a0f"
        ],
        [
            "Arguments gring_indexK {gT G%G} x%g.",
            "VernacArguments",
            "ded33b24cee5c22cd4b241fe6088d87b7234888a"
        ],
        [
            "Arguments gring_mxK {R gT G%G} v%R : rename.",
            "VernacArguments",
            "92766b53266dfcf8b62def659f9fda82cb9c0fa7"
        ],
        [
            "Section ChangeOfRing.",
            "VernacBeginSection",
            "32f61f1f51075acd0896be826fa41da92cd2edfd"
        ],
        [
            "Variables (aR rR : comUnitRingType) (f : {rmorphism aR -> rR}).",
            "VernacAssumption",
            "5ebc1802d7fc84b54b2695077a64e22ffd7c768a"
        ],
        [
            "Local Notation \"A ^f\" := (map_mx (GRing.RMorphism.apply f) A) : ring_scope.",
            "VernacNotation",
            "fdd56b787c68a0a7db0b3da67e4eb05e59fd1829"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Lemma map_regular_mx x : (regular_mx aR G x)^f = regular_mx rR G x.",
            "VernacStartTheoremProof",
            "a2114d00783a9134014d689a2de0dfea5dd359ba"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE rmorph_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_gring_row (A : 'M_#|G|) : (gring_row A)^f = gring_row A^f.",
            "VernacStartTheoremProof",
            "249440bcafcd64cc1ab1456ebcbfb87c3acd51ef"
        ],
        [
            "by rewrite map_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_gring_proj x (A : 'M_#|G|) : (gring_proj x A)^f = gring_proj x A^f.",
            "VernacStartTheoremProof",
            "b0e53c1cded5df3f1356ad333a9b663049026708"
        ],
        [
            "by rewrite map_row -map_trmx map_gring_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section OneRepresentation.",
            "VernacBeginSection",
            "d2dd7d49099ec15210125ed6bb320bd692780c2d"
        ],
        [
            "Variables (n : nat) (rG : mx_representation aR G n).",
            "VernacAssumption",
            "73c4a02ab12a092eccc471166e7ede0620212794"
        ],
        [
            "Definition map_repr_mx (f0 : aR -> rR) rG0 (g : gT) : 'M_n := map_mx f0 (rG0 g).",
            "VernacDefinition",
            "a8dea3abe353fc2f10c4cc5e1741d8b3e9f4a586"
        ],
        [
            "Lemma map_mx_repr : mx_repr G (map_repr_mx f rG).",
            "VernacStartTheoremProof",
            "b6f738f0fdd5927294380269b203b1e4718aae03"
        ],
        [
            "split=> [|x y Gx Gy]; first by rewrite /map_repr_mx repr_mx1 map_mx1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -map_mxM -repr_mxM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical map_repr := MxRepresentation map_mx_repr.",
            "VernacDefinition",
            "682a5f4bba11bc6a5172bbac2358735e2603644c"
        ],
        [
            "Local Notation rGf := map_repr.",
            "VernacSyntacticDefinition",
            "e998e5da6924c451178372d212f0af82f19f4cef"
        ],
        [
            "Lemma map_reprE x : rGf x = (rG x)^f.",
            "VernacStartTheoremProof",
            "0c14432126508b6d976cdb9e27631ac37081773c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_reprJ m (A : 'M_(m, n)) x : (A *m rG x)^f = A^f *m rGf x.",
            "VernacStartTheoremProof",
            "bfcc738fec22f952d0a14fdfd98567c852aca740"
        ],
        [
            "exact: map_mxM.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_enveloping_algebra_mx : (enveloping_algebra_mx rG)^f = enveloping_algebra_mx rGf.",
            "VernacStartTheoremProof",
            "6f96d0b05ef8ca3e5c5aae924c298e0a2e5f9425"
        ],
        [
            "by apply/row_matrixP=> i; rewrite -map_row !rowK map_mxvec.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_gring_mx a : (gring_mx rG a)^f = gring_mx rGf a^f.",
            "VernacStartTheoremProof",
            "1dd7fe2e0e35abc46696d473767717dc07493c24"
        ],
        [
            "by rewrite map_vec_mx map_mxM map_enveloping_algebra_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_gring_op A : (gring_op rG A)^f = gring_op rGf A^f.",
            "VernacStartTheoremProof",
            "589dbf26009ccb585fe9428b592b8c5f3dfb764b"
        ],
        [
            "by rewrite map_gring_mx map_gring_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OneRepresentation.",
            "VernacEndSegment",
            "f5917bfc39a430b3f41ac2a8c17476b69ca6c0d8"
        ],
        [
            "Lemma map_regular_repr : map_repr (regular_repr aR G) =1 regular_repr rR G.",
            "VernacStartTheoremProof",
            "c0206458b1b7b5ed9bb9d9f98df2accd99a41c92"
        ],
        [
            "exact: map_regular_mx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_group_ring : (group_ring aR G)^f = group_ring rR G.",
            "VernacStartTheoremProof",
            "ffca75adbeff1b1e2104eb9806d58093113a8072"
        ],
        [
            "rewrite map_enveloping_algebra_mx; apply/row_matrixP=> i.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !rowK map_regular_repr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ChangeOfRing.",
            "VernacEndSegment",
            "144810c896f3cef4c31f46da624fca86910b2fc1"
        ],
        [
            "Section FieldRepr.",
            "VernacBeginSection",
            "eaa1daaba63a5af6cff26f5adaa9112c4081914b"
        ],
        [
            "Variable F : fieldType.",
            "VernacAssumption",
            "dfbeb3104cff90ac5c843c17124389867a4c6a4a"
        ],
        [
            "Section OneRepresentation.",
            "VernacBeginSection",
            "d2dd7d49099ec15210125ed6bb320bd692780c2d"
        ],
        [
            "Variable gT : finGroupType.",
            "VernacAssumption",
            "694477e88f23a3b7d6edaa9ed9d49ebe1ee92aa6"
        ],
        [
            "Variables (G : {group gT}) (n : nat) (rG : mx_representation F G n).",
            "VernacAssumption",
            "98d8393444be817bc82fa4a700bd52872d88b52e"
        ],
        [
            "Arguments rG _%group_scope : extra scopes.",
            "VernacArguments",
            "e809dd5909a366d8958a8526a4160b5755011253"
        ],
        [
            "Local Notation E_G := (enveloping_algebra_mx rG).",
            "VernacSyntacticDefinition",
            "94357c071d2c5d02c84a40d10d49f15cfa490e0a"
        ],
        [
            "Lemma repr_mx_free x : x \\in G -> row_free (rG x).",
            "VernacStartTheoremProof",
            "6d18a4ee92e6b461345645e33d21c484f140294d"
        ],
        [
            "by move=> Gx; rewrite row_free_unit repr_mx_unit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Stabilisers.",
            "VernacBeginSection",
            "c46dd7f979547499d5303d2144d0e67b6697424a"
        ],
        [
            "Variables (m : nat) (U : 'M[F]_(m, n)).",
            "VernacAssumption",
            "90b0c46e6bfc9b98a6928a3daedda31ba141c154"
        ],
        [
            "Definition rstabs := [set x in G | U *m rG x <= U]%MS.",
            "VernacDefinition",
            "6070ae94a6e1a886c54e006d70a2d01fc8f3db9e"
        ],
        [
            "Lemma rstabs_sub : rstabs \\subset G.",
            "VernacStartTheoremProof",
            "9656fefec1e39f067b852703c05dc2365717c2d1"
        ],
        [
            "by apply/subsetP=> x /setIdP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstabs_group_set : group_set rstabs.",
            "VernacStartTheoremProof",
            "4d90525e39283f79502a8a78c974dc6ecad8a48b"
        ],
        [
            "apply/group_setP; rewrite inE group1 repr_mx1 mulmx1.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "split=> //= x y /setIdP[Gx nUx] /setIdP[Gy]; rewrite inE repr_mxM ?groupM //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by apply: submx_trans; rewrite mulmxA submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical rstabs_group := Group rstabs_group_set.",
            "VernacDefinition",
            "9c1b0889c2aa2a3fc765be378c132fcb09a48f88"
        ],
        [
            "Lemma rstab_act x m1 (W : 'M_(m1, n)) : x \\in rstab rG U -> (W <= U)%MS -> W *m rG x = W.",
            "VernacStartTheoremProof",
            "e8c9f93f0e65ba41f223453f2d934936be696c62"
        ],
        [
            "by case/setIdP=> _ /eqP cUx /submxP[w ->]; rewrite -mulmxA cUx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstabs_act x m1 (W : 'M_(m1, n)) : x \\in rstabs -> (W <= U)%MS -> (W *m rG x <= U)%MS.",
            "VernacStartTheoremProof",
            "27e0e365b5b89d95a6f8f29e712a6b3c97a83485"
        ],
        [
            "by case/setIdP=> [_ nUx] sWU; apply: submx_trans nUx; apply: submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mxmodule := G \\subset rstabs.",
            "VernacDefinition",
            "ca508c6dfd9ff9a3787e30e6583bc266d2c7c3d1"
        ],
        [
            "Lemma mxmoduleP : reflect {in G, forall x, U *m rG x <= U}%MS mxmodule.",
            "VernacStartTheoremProof",
            "7f810caeac39e12830eb19a20d03065bc3de73e5"
        ],
        [
            "by apply: (iffP subsetP) => modU x Gx; have:= modU x Gx; rewrite !inE ?Gx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Stabilisers.",
            "VernacEndSegment",
            "ee673af5e41692f20b24f8702505742e957666ae"
        ],
        [
            "Arguments mxmoduleP {m U}.",
            "VernacArguments",
            "022cd2cf0be42e3b33a2f902a6ab3eddf1a57135"
        ],
        [
            "Lemma rstabS m1 m2 (U : 'M_(m1, n)) (V : 'M_(m2, n)) : (U <= V)%MS -> rstab rG V \\subset rstab rG U.",
            "VernacStartTheoremProof",
            "7df77b76836a36ae5b0fa1cf756ba8d4f38a52d8"
        ],
        [
            "case/submxP=> u ->; apply/subsetP=> x.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by rewrite !inE => /andP[-> /= /eqP cVx]; rewrite -mulmxA cVx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmx_rstab m1 m2 (U : 'M_(m1, n)) (V : 'M_(m2, n)) : (U :=: V)%MS -> rstab rG U = rstab rG V.",
            "VernacStartTheoremProof",
            "612c6e21f3885392827124ff1a1532bd3e75012b"
        ],
        [
            "by move=> eqUV; apply/eqP; rewrite eqEsubset !rstabS ?eqUV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmx_rstabs m1 m2 (U : 'M_(m1, n)) (V : 'M_(m2, n)) : (U :=: V)%MS -> rstabs U = rstabs V.",
            "VernacStartTheoremProof",
            "bbb5bb2145df87e5129aabcef5365f91e98b37ef"
        ],
        [
            "by move=> eqUV; apply/setP=> x; rewrite !inE eqUV (eqmxMr _ eqUV).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmx_module m1 m2 (U : 'M_(m1, n)) (V : 'M_(m2, n)) : (U :=: V)%MS -> mxmodule U = mxmodule V.",
            "VernacStartTheoremProof",
            "54acdf089beeb6c0bf4ec3314b920857ef28d69e"
        ],
        [
            "by move=> eqUV; rewrite /mxmodule (eqmx_rstabs eqUV).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule0 m : mxmodule (0 : 'M_(m, n)).",
            "VernacStartTheoremProof",
            "524e677b9509a8c3fbda35ed58988bc0512b85c7"
        ],
        [
            "by apply/mxmoduleP=> x _; rewrite mul0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule1 : mxmodule 1%:M.",
            "VernacStartTheoremProof",
            "7a74192641348d08c506e0bc6ef4e21a744df9ad"
        ],
        [
            "by apply/mxmoduleP=> x _; rewrite submx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_trans m1 m2 (U : 'M_(m1, n)) (W : 'M_(m2, n)) x : mxmodule U -> x \\in G -> (W <= U -> W *m rG x <= U)%MS.",
            "VernacStartTheoremProof",
            "4845687c79ed5279e02f10dc16f068a350368e58"
        ],
        [
            "by move=> modU Gx sWU; apply: submx_trans (mxmoduleP modU x Gx); apply: submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_eigenvector m (U : 'M_(m, n)) : mxmodule U -> \\rank U = 1%N -> {u : 'rV_n & {a | (U :=: u)%MS & {in G, forall x, u *m rG x = a x *: u}}}.",
            "VernacStartTheoremProof",
            "eb76686d49eb3819e67c3e5461fb0b1942b454df"
        ],
        [
            "move=> modU linU; set u := nz_row U; exists u.",
            "VernacExtend",
            "54013ae155114f5b33a73fdc3a220fb4176f4e77"
        ],
        [
            "have defU: (U :=: u)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqmxP; rewrite andbC -(geq_leqif (mxrank_leqif_eq _)) ?nz_row_sub //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite linU lt0n mxrank_eq0 nz_row_eq0 -mxrank_eq0 linU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose a x := (u *m rG x *m pinvmx u) 0 0; exists a => // x Gx.",
            "VernacExtend",
            "801cf49622ecacdc7aba5baf9428af93fd6cae3f"
        ],
        [
            "by rewrite -mul_scalar_mx -mx11_scalar mulmxKpV // -defU mxmodule_trans ?defU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addsmx_module m1 m2 U V : @mxmodule m1 U -> @mxmodule m2 V -> mxmodule (U + V)%MS.",
            "VernacStartTheoremProof",
            "b15e5a991057190e9cb339c48e4f62ae3f1c8f23"
        ],
        [
            "move=> modU modV; apply/mxmoduleP=> x Gx.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite addsmxMr addsmxS ?(mxmoduleP _ x Gx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumsmx_module I r (P : pred I) U : (forall i, P i -> mxmodule (U i)) -> mxmodule (\\sum_(i <- r | P i) U i)%MS.",
            "VernacStartTheoremProof",
            "a023d75731aeb2dd03da4025cd9a2aa8258c7b3a"
        ],
        [
            "by move=> modU; elim/big_ind: _; [apply: mxmodule0 | apply: addsmx_module | ].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capmx_module m1 m2 U V : @mxmodule m1 U -> @mxmodule m2 V -> mxmodule (U :&: V)%MS.",
            "VernacStartTheoremProof",
            "89c1148fad3c3a4e424d2d69965692b3ab03f688"
        ],
        [
            "move=> modU modV; apply/mxmoduleP=> x Gx.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite sub_capmx !mxmodule_trans ?capmxSl ?capmxSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bigcapmx_module I r (P : pred I) U : (forall i, P i -> mxmodule (U i)) -> mxmodule (\\bigcap_(i <- r | P i) U i)%MS.",
            "VernacStartTheoremProof",
            "df44d12fe84b33a6ceaf2b6e0a30d6828467b252"
        ],
        [
            "by move=> modU; elim/big_ind: _; [apply: mxmodule1 | apply: capmx_module | ].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Submodule.",
            "VernacBeginSection",
            "a282158864e8925cd302722674756943d482c1e0"
        ],
        [
            "Variable U : 'M[F]_n.",
            "VernacAssumption",
            "ffa93c0758cd14ec0349f6bf4c109b8457fa507a"
        ],
        [
            "Definition val_submod m : 'M_(m, \\rank U) -> 'M_(m, n) := mulmxr (row_base U).",
            "VernacDefinition",
            "71bf4ef1f365d55cf76860f06ad32cf7a414dd1a"
        ],
        [
            "Definition in_submod m : 'M_(m, n) -> 'M_(m, \\rank U) := mulmxr (invmx (row_ebase U) *m pid_mx (\\rank U)).",
            "VernacDefinition",
            "b6d9c806c009f827f5dba1d1df787caad7126b03"
        ],
        [
            "Canonical val_submod_linear m := [linear of @val_submod m].",
            "VernacDefinition",
            "fdef0ea0d7cc3e42e3974cce0945c48bd89bdcdc"
        ],
        [
            "Canonical in_submod_linear m := [linear of @in_submod m].",
            "VernacDefinition",
            "103906149e813fee8726f39fe3d1f8dbb6fcae91"
        ],
        [
            "Lemma val_submodE m W : @val_submod m W = W *m val_submod 1%:M.",
            "VernacStartTheoremProof",
            "e4025398e2542848e3140a49ccb9ede2d9a15d4a"
        ],
        [
            "by rewrite mulmxA mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_submodE m W : @in_submod m W = W *m in_submod 1%:M.",
            "VernacStartTheoremProof",
            "9ee930b0fc34bc4052eaef74839fc228d25c647f"
        ],
        [
            "by rewrite mulmxA mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_submod1 : (val_submod 1%:M :=: U)%MS.",
            "VernacStartTheoremProof",
            "be0c02de3864e0578f2d33ba73d4b1ec464dd7f4"
        ],
        [
            "by rewrite /val_submod /= mul1mx; apply: eq_row_base.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_submodP m W : (@val_submod m W <= U)%MS.",
            "VernacStartTheoremProof",
            "02b55d2cdc017c4ec3288ff96d54a82127acb3ed"
        ],
        [
            "by rewrite mulmx_sub ?eq_row_base.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_submodK m : cancel (@val_submod m) (@in_submod m).",
            "VernacStartTheoremProof",
            "1be23e3b9d133557cc13869aeeca9662193549e6"
        ],
        [
            "move=> W; rewrite /in_submod /= -!mulmxA mulKVmx ?row_ebase_unit //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite pid_mx_id ?rank_leq_row // pid_mx_1 mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_submod_inj m : injective (@val_submod m).",
            "VernacStartTheoremProof",
            "d1fbc9eb65640d51d9b5ad456d90de919bd629d8"
        ],
        [
            "exact: can_inj (@val_submodK m).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_submodS m1 m2 (V : 'M_(m1, \\rank U)) (W : 'M_(m2, \\rank U)) : (val_submod V <= val_submod W)%MS = (V <= W)%MS.",
            "VernacStartTheoremProof",
            "2c6c51b132b7c6c3ab3c6fe33967bcb6af2817cc"
        ],
        [
            "apply/idP/idP=> sVW; last exact: submxMr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -[V]val_submodK -[W]val_submodK submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_submodK m W : (W <= U)%MS -> val_submod (@in_submod m W) = W.",
            "VernacStartTheoremProof",
            "a0c0e68e0f63976f1d0c26c1c72fd6313fdf1efa"
        ],
        [
            "case/submxP=> w ->; rewrite /val_submod /= -!mulmxA.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "congr (_ *m _); rewrite -{1}[U]mulmx_ebase !mulmxA mulmxK ?row_ebase_unit //.",
            "VernacExtend",
            "90723b7805fdae0b93bd8b98ae215a5658363919"
        ],
        [
            "by rewrite -2!(mulmxA (col_ebase U)) !pid_mx_id ?rank_leq_row // mulmx_ebase.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_submod_eq0 m W : (@val_submod m W == 0) = (W == 0).",
            "VernacStartTheoremProof",
            "3681e8091faf72baec5c58415af4e4122894313e"
        ],
        [
            "by rewrite -!submx0 -val_submodS linear0 !(submx0, eqmx0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_submod_eq0 m W : (@in_submod m W == 0) = (W <= U^C)%MS.",
            "VernacStartTheoremProof",
            "901ab1ac368a9752639377313139faf978fcc3cd"
        ],
        [
            "apply/eqP/submxP=> [W_U0 | [w ->{W}]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exists (W *m invmx (row_ebase U)).",
            "VernacExtend",
            "ff9449013026e12571dc7f322e9860b07771ec68"
        ],
        [
            "rewrite mulmxA mulmxBr mulmx1 -(pid_mx_id _ _ _ (leqnn _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulmxA -(mulmxA W) [W *m (_ *m _)]W_U0 mul0mx subr0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulmxKV ?row_ebase_unit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /in_submod /= -!mulmxA mulKVmx ?row_ebase_unit //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mul_copid_mx_pid ?rank_leq_row ?mulmx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxrank_in_submod m (W : 'M_(m, n)) : (W <= U)%MS -> \\rank (in_submod W) = \\rank W.",
            "VernacStartTheoremProof",
            "0b8b2de761fc351f6ff90f692076af3fa623c102"
        ],
        [
            "by move=> sWU; apply/eqP; rewrite eqn_leq -{3}(in_submodK sWU) !mxrankM_maxl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition val_factmod m : _ -> 'M_(m, n) := mulmxr (row_base (cokermx U) *m row_ebase U).",
            "VernacDefinition",
            "df7bdcbcb35e7e9a462e5c8c32842ade61e0479b"
        ],
        [
            "Definition in_factmod m : 'M_(m, n) -> _ := mulmxr (col_base (cokermx U)).",
            "VernacDefinition",
            "a43a08cb90b8e01b44ea6ac6e118b6c467440891"
        ],
        [
            "Canonical val_factmod_linear m := [linear of @val_factmod m].",
            "VernacDefinition",
            "167e25741caf29423c72533e972693385fd1d018"
        ],
        [
            "Canonical in_factmod_linear m := [linear of @in_factmod m].",
            "VernacDefinition",
            "5bd15112b799b67f97fde1b04b6cc147bf02d473"
        ],
        [
            "Lemma val_factmodE m W : @val_factmod m W = W *m val_factmod 1%:M.",
            "VernacStartTheoremProof",
            "11880f3692e7d45f5ba8e72bb379cc0d7988e379"
        ],
        [
            "by rewrite mulmxA mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_factmodE m W : @in_factmod m W = W *m in_factmod 1%:M.",
            "VernacStartTheoremProof",
            "bc8258d465b98425e20683298e35fc7f27040b5a"
        ],
        [
            "by rewrite mulmxA mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_factmodP m W : (@val_factmod m W <= U^C)%MS.",
            "VernacStartTheoremProof",
            "1fac2073ebea92c5e5c84b89564482b56237ea30"
        ],
        [
            "by rewrite mulmx_sub {m W}// (eqmxMr _ (eq_row_base _)) -mulmxA submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_factmodK m : cancel (@val_factmod m) (@in_factmod m).",
            "VernacStartTheoremProof",
            "2d331e792ac52bece8b82c6eba13512e91d0f7b2"
        ],
        [
            "move=> W /=; rewrite /in_factmod /=; set Uc := cokermx U.",
            "VernacExtend",
            "08b421e4a82ee4b06ce888937579fc5af7d251b4"
        ],
        [
            "apply: (row_free_inj (row_base_free Uc)); rewrite -mulmxA mulmx_base.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /val_factmod /= 2!mulmxA -/Uc mulmxK ?row_ebase_unit //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /submxP[u ->]: (row_base Uc <= Uc)%MS by rewrite eq_row_base.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -!mulmxA copid_mx_id ?rank_leq_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_factmod_inj m : injective (@val_factmod m).",
            "VernacStartTheoremProof",
            "26fc9a88461417e6cacf18e809339b3c01d97f36"
        ],
        [
            "exact: can_inj (@val_factmodK m).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_factmodS m1 m2 (V : 'M_(m1, _)) (W : 'M_(m2, _)) : (val_factmod V <= val_factmod W)%MS = (V <= W)%MS.",
            "VernacStartTheoremProof",
            "339f5b1213babfb0ebfeaa438f9da504914bd150"
        ],
        [
            "apply/idP/idP=> sVW; last exact: submxMr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -[V]val_factmodK -[W]val_factmodK submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_factmod_eq0 m W : (@val_factmod m W == 0) = (W == 0).",
            "VernacStartTheoremProof",
            "b172c240b061cd9b839dc51f7be8567371ddc3aa"
        ],
        [
            "by rewrite -!submx0 -val_factmodS linear0 !(submx0, eqmx0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_factmod_eq0 m (W : 'M_(m, n)) : (in_factmod W == 0) = (W <= U)%MS.",
            "VernacStartTheoremProof",
            "31e08d0e973a5090bd678d5c3cef5282004d223c"
        ],
        [
            "rewrite submxE -!mxrank_eq0 -{2}[_ U]mulmx_base mulmxA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (mxrankMfree _ (row_base_free _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_factmodK m (W : 'M_(m, n)) : (W <= U^C)%MS -> val_factmod (in_factmod W) = W.",
            "VernacStartTheoremProof",
            "a7ddcca71a4a17b4575b1d2509c2001984c51b10"
        ],
        [
            "case/submxP=> w ->{W}; rewrite /val_factmod /= -2!mulmxA.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "congr (_ *m _); rewrite (mulmxA (col_base _)) mulmx_base -2!mulmxA.",
            "VernacExtend",
            "90723b7805fdae0b93bd8b98ae215a5658363919"
        ],
        [
            "by rewrite mulKVmx ?row_ebase_unit // mulmxA copid_mx_id ?rank_leq_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_factmod_addsK m (W : 'M_(m, n)) : (in_factmod (U + W)%MS :=: in_factmod W)%MS.",
            "VernacStartTheoremProof",
            "c4bf708824ed39598c0fcf7f11ca50b7e01b2903"
        ],
        [
            "apply: eqmx_trans (addsmxMr _ _ _) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite ((_ *m _ =P 0) _) ?in_factmod_eq0 //; apply: adds0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_sub_fact_mod m (W : 'M_(m, n)) : val_submod (in_submod W) + val_factmod (in_factmod W) = W.",
            "VernacStartTheoremProof",
            "6b2b6e7e3c4bd498d42790063296833202932d86"
        ],
        [
            "rewrite /val_submod /val_factmod /= -!mulmxA -mulmxDr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addrC (mulmxA (pid_mx _)) pid_mx_id // (mulmxA (col_ebase _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mulmxA _ _ (row_ebase _)) mulmx_ebase.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mulmxA (pid_mx _)) pid_mx_id // mulmxA -mulmxDl -mulmxDr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite subrK mulmx1 mulmxA mulmxKV ?row_ebase_unit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_factmodS m (W : 'M_(m, n)) : (val_factmod (in_factmod W) <= U + W)%MS.",
            "VernacStartTheoremProof",
            "c080c5d920cf07af4a0ac996c43ab058f0139948"
        ],
        [
            "by rewrite -{2}[W]add_sub_fact_mod addsmx_addKl ?val_submodP ?addsmxSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_factmodsK m (W : 'M_(m, n)) : (U <= W)%MS -> (U + val_factmod (in_factmod W) :=: W)%MS.",
            "VernacStartTheoremProof",
            "22b26cfc3e9481421808b15a8643c403ddc872a5"
        ],
        [
            "move/addsmx_idPr; apply: eqmx_trans (eqmx_sym _).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -{1}[W]add_sub_fact_mod; apply: addsmx_addKl; apply: val_submodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxrank_in_factmod m (W : 'M_(m, n)) : (\\rank (in_factmod W) + \\rank U)%N = \\rank (U + W).",
            "VernacStartTheoremProof",
            "52c18ebd10e39013c31f36727a21a03960eea90b"
        ],
        [
            "rewrite -in_factmod_addsK in_factmodE; set fU := in_factmod 1%:M.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "suffices <-: ((U + W) :&: kermx fU :=: U)%MS by rewrite mxrank_mul_ker.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply: eqmx_trans (capmx_idPr (addsmxSl U W)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: cap_eqmx => //; apply/eqmxP/rV_eqP => u.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite (sameP sub_kermxP eqP) -in_factmodE in_factmod_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition submod_mx of mxmodule U := fun x => in_submod (val_submod 1%:M *m rG x).",
            "VernacDefinition",
            "11d2c91aee0bec6aac120cbca5058c2b2ba93027"
        ],
        [
            "Definition factmod_mx of mxmodule U := fun x => in_factmod (val_factmod 1%:M *m rG x).",
            "VernacDefinition",
            "9328998a6e875d5a71aa8727b45d495ca8ed3495"
        ],
        [
            "Hypothesis Umod : mxmodule U.",
            "VernacAssumption",
            "ba918d41a87f3e8100e66428f0b66f20e523f4bf"
        ],
        [
            "Lemma in_submodJ m (W : 'M_(m, n)) x : (W <= U)%MS -> in_submod (W *m rG x) = in_submod W *m submod_mx Umod x.",
            "VernacStartTheoremProof",
            "04b9d51c0ac5e82d5da76333e80155d27ae7a5bd"
        ],
        [
            "move=> sWU; rewrite mulmxA; congr (in_submod _).",
            "VernacExtend",
            "485e46f06ecb626ff6a640f6969694ae3ffba974"
        ],
        [
            "by rewrite mulmxA -val_submodE in_submodK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_submodJ m (W : 'M_(m, \\rank U)) x : x \\in G -> val_submod (W *m submod_mx Umod x) = val_submod W *m rG x.",
            "VernacStartTheoremProof",
            "600aa21a5691246599a15a618526e0ed04b40d55"
        ],
        [
            "move=> Gx; rewrite 2!(mulmxA W) -val_submodE in_submodK //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite mxmodule_trans ?val_submodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma submod_mx_repr : mx_repr G (submod_mx Umod).",
            "VernacStartTheoremProof",
            "b6bd3bfc7e5ba878d9c00e4ea8f4b796b5ba2de6"
        ],
        [
            "rewrite /submod_mx; split=> [|x y Gx Gy /=].",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by rewrite repr_mx1 mulmx1 val_submodK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -in_submodJ; first by rewrite repr_mxM ?mulmxA.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mxmodule_trans ?val_submodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical submod_repr := MxRepresentation submod_mx_repr.",
            "VernacDefinition",
            "12e380d7849d52b5f88c697858ae129e12b2d837"
        ],
        [
            "Lemma in_factmodJ m (W : 'M_(m, n)) x : x \\in G -> in_factmod (W *m rG x) = in_factmod W *m factmod_mx Umod x.",
            "VernacStartTheoremProof",
            "186fd0f14660a435c9044ada09b4dd3815a8bb1f"
        ],
        [
            "move=> Gx; rewrite -{1}[W]add_sub_fact_mod mulmxDl linearD /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: (canLR (subrK _)); apply: etrans (_ : 0 = _).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply/eqP; rewrite in_factmod_eq0 (submx_trans _ (mxmoduleP Umod x Gx)) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite submxMr ?val_submodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /in_factmod /val_factmod /= !mulmxA mulmx1 ?subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_factmodJ m (W : 'M_(m, \\rank (cokermx U))) x : x \\in G -> val_factmod (W *m factmod_mx Umod x) = val_factmod (in_factmod (val_factmod W *m rG x)).",
            "VernacStartTheoremProof",
            "0f90793189927b0211848fc474a2fc7d806fe13e"
        ],
        [
            "by move=> Gx; rewrite -{1}[W]val_factmodK -in_factmodJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factmod_mx_repr : mx_repr G (factmod_mx Umod).",
            "VernacStartTheoremProof",
            "80eab5e491ab468b65b4a0ae58bc0f3fe67805a7"
        ],
        [
            "split=> [|x y Gx Gy /=].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /factmod_mx repr_mx1 mulmx1 val_factmodK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -in_factmodJ // -mulmxA -repr_mxM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical factmod_repr := MxRepresentation factmod_mx_repr.",
            "VernacDefinition",
            "2e4bf727719326ccbd8405859536ed454ff490e2"
        ],
        [
            "Lemma mxtrace_sub_fact_mod x : \\tr (submod_repr x) + \\tr (factmod_repr x) = \\tr (rG x).",
            "VernacStartTheoremProof",
            "52164cc58bbac254b35b566947590d3c17661c5c"
        ],
        [
            "rewrite -[submod_repr x]mulmxA mxtrace_mulC -val_submodE addrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[factmod_repr x]mulmxA mxtrace_mulC -val_factmodE addrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -mxtraceD add_sub_fact_mod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Submodule.",
            "VernacEndSegment",
            "8b82c186002a03036b91aeb2bb336d35b5cc1246"
        ],
        [
            "Lemma envelop_mx_id x : x \\in G -> (rG x \\in E_G)%MS.",
            "VernacStartTheoremProof",
            "7aad29c9930ae3ca3041022605633962d5258fd1"
        ],
        [
            "by move=> Gx; rewrite (eq_row_sub (enum_rank_in Gx x)) // rowK enum_rankK_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma envelop_mx1 : (1%:M \\in E_G)%MS.",
            "VernacStartTheoremProof",
            "9909157c67184a351508c98339b5bc8f42f88d7c"
        ],
        [
            "by rewrite -(repr_mx1 rG) envelop_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma envelop_mxP A : reflect (exists a, A = \\sum_(x in G) a x *: rG x) (A \\in E_G)%MS.",
            "VernacStartTheoremProof",
            "ae82d8ab1f1f60268ca0f9a03d96a5a2df304ddb"
        ],
        [
            "have G_1 := group1 G; have bijG := enum_val_bij_in G_1.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "set h := enum_val in bijG; have Gh: h _ \\in G by apply: enum_valP.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "apply: (iffP submxP) => [[u defA] | [a ->]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exists (fun x => u 0 (enum_rank_in G_1 x)); apply: (can_inj mxvecK).",
            "VernacExtend",
            "eb2ffd4473e08fddb4a5fff3dfa38a145f0463e4"
        ],
        [
            "rewrite defA mulmx_sum_row linear_sum (reindex h) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_big => [i | i _]; rewrite ?Gh // rowK linearZ enum_valK_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (\\row_i a (h i)); rewrite mulmx_sum_row linear_sum (reindex h) //=.",
            "VernacExtend",
            "06f1bd10e93f4f1ac0442ec35092c03fa48a44b4"
        ],
        [
            "by apply: eq_big => [i | i _]; rewrite ?Gh // mxE rowK linearZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma envelop_mxM A B : (A \\in E_G -> B \\in E_G -> A *m B \\in E_G)%MS.",
            "VernacStartTheoremProof",
            "fd84e07f7e00f65dd09c04af8c932b4d4449a0d5"
        ],
        [
            "case/envelop_mxP=> a ->{A}; case/envelop_mxP=> b ->{B}.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite mulmx_suml !linear_sum summx_sub //= => x Gx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !linear_sum summx_sub //= => y Gy.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -scalemxAl !(linearZ, scalemx_sub) //= -repr_mxM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite envelop_mx_id ?groupM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_envelop m1 m2 (U : 'M_(m1, n)) (W : 'M_(m2, n)) A : (mxmodule U -> mxvec A <= E_G -> W <= U -> W *m A <= U)%MS.",
            "VernacStartTheoremProof",
            "ca73b1e99c58aeaca698170906fd67d75b0b2883"
        ],
        [
            "move=> modU /envelop_mxP[a ->] sWU; rewrite linear_sum summx_sub // => x Gx.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite linearZ scalemx_sub ?mxmodule_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition dom_hom_mx f : 'M_n := kermx (lin1_mx (mxvec \\o mulmx (cent_mx_fun E_G f) \\o lin_mul_row)).",
            "VernacDefinition",
            "078e3d6e58a7c1a60445d9a0004d76879fd4859f"
        ],
        [
            "Lemma hom_mxP m f (W : 'M_(m, n)) : reflect (forall x, x \\in G -> W *m rG x *m f = W *m f *m rG x) (W <= dom_hom_mx f)%MS.",
            "VernacStartTheoremProof",
            "236a4b932cbb2858f9dbffe27ca94ccae8b4c07f"
        ],
        [
            "apply: (iffP row_subP) => [cGf x Gx | cGf i].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/row_matrixP=> i; apply/eqP; rewrite -subr_eq0 -!mulmxA -!linearB /=.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "have:= sub_kermxP (cGf i); rewrite mul_rV_lin1 /=.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "move/(canRL mxvecK)/row_matrixP/(_ (enum_rank_in Gx x))/eqP; rewrite !linear0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !row_mul rowK mul_vec_lin /= mul_vec_lin_row enum_rankK_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/sub_kermxP; rewrite mul_rV_lin1 /=; apply: (canLR vec_mxK).",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "apply/row_matrixP=> j; rewrite !row_mul rowK mul_vec_lin /= mul_vec_lin_row.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -!row_mul mulmxBr !mulmxA cGf ?enum_valP // subrr !linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments hom_mxP {m f W}.",
            "VernacArguments",
            "c6476a7a49d13afd5ca6002636ed6963dd159380"
        ],
        [
            "Lemma hom_envelop_mxC m f (W : 'M_(m, n)) A : (W <= dom_hom_mx f -> A \\in E_G -> W *m A *m f = W *m f *m A)%MS.",
            "VernacStartTheoremProof",
            "a3fbee0a05d0d81ae329654804394748cda0de33"
        ],
        [
            "move/hom_mxP=> cWfG /envelop_mxP[a ->]; rewrite !linear_sum mulmx_suml.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: eq_bigr => x Gx; rewrite !linearZ -scalemxAl /= cWfG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_hom_invmx f : f \\in unitmx -> (dom_hom_mx (invmx f) :=: dom_hom_mx f *m f)%MS.",
            "VernacStartTheoremProof",
            "7c64fc61ed809a12f834bfa7d5b717b3ddf86056"
        ],
        [
            "move=> injf; set U := dom_hom_mx _; apply/eqmxP.",
            "VernacExtend",
            "970b9c2037ffb4f7bcf7f1168364d12b25042ba5"
        ],
        [
            "rewrite -{1}[U](mulmxKV injf) submxMr; apply/hom_mxP=> x Gx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -[_ *m rG x](hom_mxP _) ?mulmxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -[_ *m rG x](hom_mxP _) ?mulmxKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_hom_mx_module f : mxmodule (dom_hom_mx f).",
            "VernacStartTheoremProof",
            "8d28e54ffece5b591fe683ee03c41fb43ae37fe0"
        ],
        [
            "apply/mxmoduleP=> x Gx; apply/hom_mxP=> y Gy.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite -[_ *m rG y]mulmxA -repr_mxM // 2?(hom_mxP _) ?groupM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite repr_mxM ?mulmxA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom_mxmodule m (U : 'M_(m, n)) f : (U <= dom_hom_mx f)%MS -> mxmodule U -> mxmodule (U *m f).",
            "VernacStartTheoremProof",
            "93cf8062495b076cc7ed634f4ec94b3981ba458f"
        ],
        [
            "move/hom_mxP=> cGfU modU; apply/mxmoduleP=> x Gx.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -cGfU // submxMr // (mxmoduleP modU).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma kermx_hom_module m (U : 'M_(m, n)) f : (U <= dom_hom_mx f)%MS -> mxmodule U -> mxmodule (U :&: kermx f)%MS.",
            "VernacStartTheoremProof",
            "9486b87af5d16cde4c08e4bb33500cad11be8985"
        ],
        [
            "move=> homUf modU; apply/mxmoduleP=> x Gx.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite sub_capmx mxmodule_trans ?capmxSl //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/sub_kermxP; rewrite (hom_mxP _) ?(submx_trans (capmxSl _ _)) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (sub_kermxP (capmxSr _ _)) mul0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalar_mx_hom a m (U : 'M_(m, n)) : (U <= dom_hom_mx a%:M)%MS.",
            "VernacStartTheoremProof",
            "97c2a6ebe951fc53b7a1b8248c41d48b078d93b4"
        ],
        [
            "by apply/hom_mxP=> x Gx; rewrite -!mulmxA scalar_mxC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_mx_hom (U V : 'M_n) : (U :&: V = 0)%MS -> mxmodule U -> mxmodule V -> (U + V <= dom_hom_mx (proj_mx U V))%MS.",
            "VernacStartTheoremProof",
            "29f6f3b17ce1cd21afe190dce7c457694c2b1710"
        ],
        [
            "move=> dxUV modU modV; apply/hom_mxP=> x Gx.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite -{1}(add_proj_mx dxUV (submx_refl _)) !mulmxDl addrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {1}[_ *m _]proj_mx_0 ?add0r //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mxmodule_trans ?proj_mx_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite [_ *m _](proj_mx_id dxUV) // mxmodule_trans ?proj_mx_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rfix_mx (H : {set gT}) := let commrH := \\matrix_(i < #|H|) mxvec (rG (enum_val i) - 1%:M) in kermx (lin1_mx (mxvec \\o mulmx commrH \\o lin_mul_row)).",
            "VernacDefinition",
            "86f896c52bc3735a0596e667ca72f5d216f48616"
        ],
        [
            "Lemma rfix_mxP m (W : 'M_(m, n)) (H : {set gT}) : reflect (forall x, x \\in H -> W *m rG x = W) (W <= rfix_mx H)%MS.",
            "VernacStartTheoremProof",
            "230653cfa9b3b14359b11a379f00ed9a232f090e"
        ],
        [
            "rewrite /rfix_mx; set C := \\matrix_i _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "apply: (iffP row_subP) => [cHW x Hx | cHW j].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/row_matrixP=> j; apply/eqP; rewrite -subr_eq0 row_mul.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "move/sub_kermxP: {cHW}(cHW j); rewrite mul_rV_lin1 /=; move/(canRL mxvecK).",
            "VernacExtend",
            "40075a671b142e70c4190413219df8981418e910"
        ],
        [
            "move/row_matrixP/(_ (enum_rank_in Hx x)); rewrite row_mul rowK !linear0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite enum_rankK_in // mul_vec_lin_row mulmxBr mulmx1 => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/sub_kermxP; rewrite mul_rV_lin1 /=; apply: (canLR vec_mxK).",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "apply/row_matrixP=> i; rewrite row_mul rowK mul_vec_lin_row -row_mul.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mulmxBr mulmx1 cHW ?enum_valP // subrr !linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments rfix_mxP {m W}.",
            "VernacArguments",
            "b276efb25cf0b11768f587d809a1c86400eb94de"
        ],
        [
            "Lemma rfix_mx_id (H : {set gT}) x : x \\in H -> rfix_mx H *m rG x = rfix_mx H.",
            "VernacStartTheoremProof",
            "74dfec64f6e7407558ae71f81331f155521c20e1"
        ],
        [
            "exact/rfix_mxP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rfix_mxS (H K : {set gT}) : H \\subset K -> (rfix_mx K <= rfix_mx H)%MS.",
            "VernacStartTheoremProof",
            "1639533fa22dbd800bfddd228922d40c8889750e"
        ],
        [
            "by move=> sHK; apply/rfix_mxP=> x Hx; apply: rfix_mxP (subsetP sHK x Hx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rfix_mx_conjsg (H : {set gT}) x : x \\in G -> H \\subset G -> (rfix_mx (H :^ x) :=: rfix_mx H *m rG x)%MS.",
            "VernacStartTheoremProof",
            "e48313f6a09a7bef90f23a8486612fa696853a59"
        ],
        [
            "move=> Gx sHG; pose rf y := rfix_mx (H :^ y).",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "suffices{x Gx} IH: {in G &, forall y z, rf y *m rG z <= rf (y * z)%g}%MS.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply/eqmxP; rewrite -/(rf x) -[H]conjsg1 -/(rf 1%g).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -{4}[x] mul1g -{1}[rf x](repr_mxKV rG Gx) -{1}(mulgV x).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite submxMr IH ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> x y Gx Gy; apply/rfix_mxP=> zxy; rewrite actM => /imsetP[zx Hzx ->].",
            "VernacExtend",
            "b7d55d5cc9e609b184db748f6780e12224901e48"
        ],
        [
            "have Gzx: zx \\in G by apply: subsetP Hzx; rewrite conj_subG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -mulmxA -repr_mxM ?groupM ?groupV // -conjgC repr_mxM // mulmxA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite rfix_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_sub_rstabs_rfix_mx (H : {set gT}) : H \\subset G -> 'N_G(H) \\subset rstabs (rfix_mx H).",
            "VernacStartTheoremProof",
            "74c2eb861b21653495aae0bfaf1adcd5ed3ca8ab"
        ],
        [
            "move=> sHG; apply/subsetP=> x /setIP[Gx nHx]; rewrite inE Gx.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply/rfix_mxP=> y Hy; have Gy := subsetP sHG y Hy.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "have Hyx: (y ^ x^-1)%g \\in H by rewrite memJ_norm ?groupV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -mulmxA -repr_mxM // conjgCV repr_mxM ?(subsetP sHG _ Hyx) // mulmxA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (rfix_mx_id Hyx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normal_rfix_mx_module H : H <| G -> mxmodule (rfix_mx H).",
            "VernacStartTheoremProof",
            "e8903e5fed017a13163f10e6f2356b553247b130"
        ],
        [
            "case/andP=> sHG nHG.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite /mxmodule -{1}(setIidPl nHG) norm_sub_rstabs_rfix_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rfix_mx_module : mxmodule (rfix_mx G).",
            "VernacStartTheoremProof",
            "9692e0c9cda437df286c656543a89b320569589c"
        ],
        [
            "exact: normal_rfix_mx_module.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rfix_mx_rstabC (H : {set gT}) m (U : 'M[F]_(m, n)) : H \\subset G -> (H \\subset rstab rG U) = (U <= rfix_mx H)%MS.",
            "VernacStartTheoremProof",
            "21743354ac300b9fd8222b0cd36d724fa99d2730"
        ],
        [
            "move=> sHG; apply/subsetP/rfix_mxP=> cHU x Hx.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite (rstab_act (cHU x Hx)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite !inE (subsetP sHG) //= cHU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cyclic_mx u := <<E_G *m lin_mul_row u>>%MS.",
            "VernacDefinition",
            "0e6a41020141392d77b67a00545c7f815a3eef3d"
        ],
        [
            "Lemma cyclic_mxP u v : reflect (exists2 A, A \\in E_G & v = u *m A)%MS (v <= cyclic_mx u)%MS.",
            "VernacStartTheoremProof",
            "49cc74e96cef5f8fe8744ec6855dee4802326cbd"
        ],
        [
            "rewrite genmxE; apply: (iffP submxP) => [[a] | [A /submxP[a defA]]] -> {v}.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "exists (vec_mx (a *m E_G)); last by rewrite mulmxA mul_rV_lin1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite vec_mxK submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists a; rewrite mulmxA mul_rV_lin1 /= -defA mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments cyclic_mxP {u v}.",
            "VernacArguments",
            "6f891d7f4d360a8f8b69c01876363ffb1c177305"
        ],
        [
            "Lemma cyclic_mx_id u : (u <= cyclic_mx u)%MS.",
            "VernacStartTheoremProof",
            "8518e5577d13bca40867349de4fe976ee0b4d0fa"
        ],
        [
            "by apply/cyclic_mxP; exists 1%:M; rewrite ?mulmx1 ?envelop_mx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclic_mx_eq0 u : (cyclic_mx u == 0) = (u == 0).",
            "VernacStartTheoremProof",
            "5dd8cc8006479649c1bd8994299908a4e6176085"
        ],
        [
            "rewrite -!submx0; apply/idP/idP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply: submx_trans; apply: cyclic_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/submx0null->; rewrite genmxE; apply/row_subP=> i.",
            "VernacExtend",
            "81189b8f536c657023c2b936b052d293ccbf0c7e"
        ],
        [
            "by rewrite row_mul mul_rV_lin1 /= mul0mx ?sub0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclic_mx_module u : mxmodule (cyclic_mx u).",
            "VernacStartTheoremProof",
            "f746a9bed9245faf91f582b4bba423999e4b3510"
        ],
        [
            "apply/mxmoduleP=> x Gx; apply/row_subP=> i; rewrite row_mul.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "have [A E_A ->{i}] := @cyclic_mxP u _ (row_sub i _); rewrite -mulmxA.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by apply/cyclic_mxP; exists (A *m rG x); rewrite ?envelop_mxM ?envelop_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cyclic_mx_sub m u (W : 'M_(m, n)) : mxmodule W -> (u <= W)%MS -> (cyclic_mx u <= W)%MS.",
            "VernacStartTheoremProof",
            "f792acb23724fbaf33bceeb15057b01d4e3586f8"
        ],
        [
            "move=> modU Wu; rewrite genmxE; apply/row_subP=> i.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite row_mul mul_rV_lin1 /= mxmodule_envelop // vec_mxK row_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom_cyclic_mx u f : (u <= dom_hom_mx f)%MS -> (cyclic_mx u *m f :=: cyclic_mx (u *m f))%MS.",
            "VernacStartTheoremProof",
            "4ac05b66e4c384237d52d903b1c8a7735e266218"
        ],
        [
            "move=> domf_u; apply/eqmxP; rewrite !(eqmxMr _ (genmxE _)).",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "apply/genmxP; rewrite genmx_id; congr <<_>>%MS; apply/row_matrixP=> i.",
            "VernacExtend",
            "6e4be71fd7f3c3d262645c48f28ad5bec07c716d"
        ],
        [
            "by rewrite !row_mul !mul_rV_lin1 /= hom_envelop_mxC // vec_mxK row_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition annihilator_mx u := (E_G :&: kermx (lin_mul_row u))%MS.",
            "VernacDefinition",
            "bd6058217a9f41c1dbb72212c3c1d4c0b0ce498a"
        ],
        [
            "Lemma annihilator_mxP u A : reflect (A \\in E_G /\\ u *m A = 0)%MS (A \\in annihilator_mx u)%MS.",
            "VernacStartTheoremProof",
            "7b8ef27dd002c86374066c541bc91f96560ba322"
        ],
        [
            "rewrite sub_capmx; apply: (iffP andP) => [[-> /sub_kermxP]|[-> uA0]].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite mul_rV_lin1 /= mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by split=> //; apply/sub_kermxP; rewrite mul_rV_lin1 /= mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition row_hom_mx u := (\\bigcap_j kermx (vec_mx (row j (annihilator_mx u))))%MS.",
            "VernacDefinition",
            "589d5a9f76976b7266f6e4701efdaaffad02baac"
        ],
        [
            "Lemma row_hom_mxP u v : reflect (exists2 f, u <= dom_hom_mx f & u *m f = v)%MS (v <= row_hom_mx u)%MS.",
            "VernacStartTheoremProof",
            "40de1ae42a863546ec32163700b77fb43874c4b5"
        ],
        [
            "apply: (iffP sub_bigcapmxP) => [iso_uv | [f hom_uf <-] i _].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have{iso_uv} uv0 A: (A \\in E_G)%MS /\\ u *m A = 0 -> v *m A = 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/annihilator_mxP=> /submxP[a defA].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -[A]mxvecK {A}defA [a *m _]mulmx_sum_row !linear_sum big1 // => i _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !linearZ /= (sub_kermxP _) ?scaler0 ?iso_uv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose U := E_G *m lin_mul_row u; pose V := E_G *m lin_mul_row v.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "pose f := pinvmx U *m V.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have hom_uv_f x: x \\in G -> u *m rG x *m f = v *m rG x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Gx; apply/eqP; rewrite 2!mulmxA mul_rV_lin1 -subr_eq0 -mulmxBr.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite uv0 // 2!linearB /= vec_mxK; split.",
            "VernacExtend",
            "f4b7ef80d95d0131def61ae7f69c6275a20261d3"
        ],
        [
            "by rewrite addmx_sub ?submxMl // eqmx_opp envelop_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Uux: (u *m rG x <= U)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(genmxE U) mxmodule_trans ?cyclic_mx_id ?cyclic_mx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -{2}(mulmxKpV Uux) [_ *m U]mulmxA mul_rV_lin1 subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_uf: u *m f = v.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -[u]mulmx1 -[v]mulmx1 -(repr_mx1 rG) hom_uv_f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists f => //; apply/hom_mxP=> x Gx; rewrite def_uf hom_uv_f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/sub_kermxP; set A := vec_mx _.",
            "VernacExtend",
            "ac591433247162d5294d7c948ab3b309c2d6e368"
        ],
        [
            "have: (A \\in annihilator_mx u)%MS by rewrite vec_mxK row_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/annihilator_mxP => E_A uA0; rewrite -hom_envelop_mxC // uA0 mul0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant mx_iso (U V : 'M_n) : Prop := MxIso f of f \\in unitmx & (U <= dom_hom_mx f)%MS & (U *m f :=: V)%MS.",
            "VernacInductive",
            "e369339b2e0c79b03865047cf1658250affa2ac3"
        ],
        [
            "Lemma eqmx_iso U V : (U :=: V)%MS -> mx_iso U V.",
            "VernacStartTheoremProof",
            "c08d77b4e3be8c79641f780b20b05cfb551e6d24"
        ],
        [
            "by move=> eqUV; exists 1%:M; rewrite ?unitmx1 ?scalar_mx_hom ?mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_iso_refl U : mx_iso U U.",
            "VernacStartTheoremProof",
            "beacbda389316d2195925d40d95506518b693ac4"
        ],
        [
            "exact: eqmx_iso.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_iso_sym U V : mx_iso U V -> mx_iso V U.",
            "VernacStartTheoremProof",
            "b0514f3e52e389b586cf5266abba866b113a4fdc"
        ],
        [
            "case=> f injf homUf defV; exists (invmx f); first by rewrite unitmx_inv.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite dom_hom_invmx // -defV submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -[U](mulmxK injf); apply: eqmxMr (eqmx_sym _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_iso_trans U V W : mx_iso U V -> mx_iso V W -> mx_iso U W.",
            "VernacStartTheoremProof",
            "b4a288f10876f6022346c7e59878f0516eb47319"
        ],
        [
            "case=> f injf homUf defV [g injg homVg defW].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (f *m g); first by rewrite unitmx_mul injf.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/hom_mxP=> x Gx; rewrite !mulmxA 2?(hom_mxP _) ?defV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite mulmxA; apply: eqmx_trans (eqmxMr g defV) defW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxrank_iso U V : mx_iso U V -> \\rank U = \\rank V.",
            "VernacStartTheoremProof",
            "ac29cb1e85f8500960033e08793d6232fd204dac"
        ],
        [
            "by case=> f injf _ <-; rewrite mxrankMfree ?row_free_unit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_iso_module U V : mx_iso U V -> mxmodule U -> mxmodule V.",
            "VernacStartTheoremProof",
            "4510e4fb739c4ae981d71bf3934148c6bccf70a1"
        ],
        [
            "by case=> f _ homUf defV; rewrite -(eqmx_module defV); apply: hom_mxmodule.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mxsimple (V : 'M_n) := [/\\ mxmodule V, V != 0 & forall U : 'M_n, mxmodule U -> (U <= V)%MS -> U != 0 -> (V <= U)%MS].",
            "VernacDefinition",
            "9a0efd21252588090d567e95ccc10ec74daae6ba"
        ],
        [
            "Definition mxnonsimple (U : 'M_n) := exists V : 'M_n, [&& mxmodule V, (V <= U)%MS, V != 0 & \\rank V < \\rank U].",
            "VernacDefinition",
            "2d59154f04b01fe55721c9af39adbbe6f3edcf60"
        ],
        [
            "Lemma mxsimpleP U : [/\\ mxmodule U, U != 0 & ~ mxnonsimple U] <-> mxsimple U.",
            "VernacStartTheoremProof",
            "d85e8c54a39f7d49aae80b819b0c1f953eedc217"
        ],
        [
            "do [split => [] [modU nzU simU]; split] => // [V modV sVU nzV | [V]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/idPn; rewrite -(ltn_leqif (mxrank_leqif_sup sVU)) => ltVU.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by case: simU; exists V; apply/and4P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/and4P=> modV sVU nzV; apply/negP; rewrite -leqNgt mxrankS ?simU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsimple_module U : mxsimple U -> mxmodule U.",
            "VernacStartTheoremProof",
            "e05bf774437c0222fbbdb6d79de4ae057f9e267b"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsimple_exists m (U : 'M_(m, n)) : mxmodule U -> U != 0 -> classically (exists2 V, mxsimple V & V <= U)%MS.",
            "VernacStartTheoremProof",
            "c56bf757453d99dcf0d535fb65975d408c3d6937"
        ],
        [
            "move=> modU nzU [] // simU; move: {2}_.+1 (ltnSn (\\rank U)) => r leUr.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "elim: r => // r IHr in m U leUr modU nzU simU.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have genU := genmxE U; apply simU; exists <<U>>%MS; last by rewrite genU.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/mxsimpleP; split; rewrite ?(eqmx_eq0 genU) ?(eqmx_module genU) //.",
            "VernacExtend",
            "1a60a3dd20ba8bdb4f34ca3532e9ebe70ebccc2e"
        ],
        [
            "case=> V; rewrite !genU=> /and4P[modV sVU nzV ltVU]; case: notF.",
            "VernacExtend",
            "5d344be8af881baf211a780ceab36b9a05646483"
        ],
        [
            "apply: IHr nzV _ => // [|[W simW sWV]]; first exact: leq_trans ltVU _.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: simU; exists W => //; apply: submx_trans sWV sVU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_iso_simple U V : mx_iso U V -> mxsimple U -> mxsimple V.",
            "VernacStartTheoremProof",
            "5337d33e47dc33b6318cd5594b602a50276c2b4d"
        ],
        [
            "move=> isoUV [modU nzU simU]; have [f injf homUf defV] := isoUV.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "split=> [||W modW sWV nzW]; first by rewrite (mx_iso_module isoUV).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(eqmx_eq0 defV) -(mul0mx n f) (can_eq (mulmxK injf)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -defV -[W](mulmxKV injf) submxMr //; set W' := W *m _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "have sW'U: (W' <= U)%MS by rewrite -[U](mulmxK injf) submxMr ?defV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (simU W') //; last by rewrite -(can_eq (mulmxK injf)) mul0mx mulmxKV.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite hom_mxmodule ?dom_hom_invmx // -[W](mulmxKV injf) submxMr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: submx_trans sW'U homUf.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsimple_cyclic u U : mxsimple U -> u != 0 -> (u <= U)%MS -> (U :=: cyclic_mx u)%MS.",
            "VernacStartTheoremProof",
            "465537745607999d8335fac8c9bdf4554cdbd374"
        ],
        [
            "case=> [modU _ simU] nz_u Uu; apply/eqmxP; set uG := cyclic_mx u.",
            "VernacExtend",
            "26f45d48858eb049eed6f0c8454c3a419a1a8d5b"
        ],
        [
            "have s_uG_U: (uG <= U)%MS by rewrite cyclic_mx_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite simU ?cyclic_mx_eq0 ?submx_refl // cyclic_mx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_Schur_onto m (U : 'M_(m, n)) V f : mxmodule U -> mxsimple V -> (U <= dom_hom_mx f)%MS -> (U *m f <= V)%MS -> U *m f != 0 -> (U *m f :=: V)%MS.",
            "VernacStartTheoremProof",
            "883c544f15476d226769bf680dc484ece573a422"
        ],
        [
            "move=> modU [modV _ simV] homUf sUfV nzUf.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply/eqmxP; rewrite sUfV -(genmxE (U *m f)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite simV ?(eqmx_eq0 (genmxE _)) ?genmxE //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (eqmx_module (genmxE _)) hom_mxmodule.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_Schur_inj U f : mxsimple U -> (U <= dom_hom_mx f)%MS -> U *m f != 0 -> (U :&: kermx f)%MS = 0.",
            "VernacStartTheoremProof",
            "61e7c41c8947eba4d5d07c585e29d277acc82d58"
        ],
        [
            "case=> [modU _ simU] homUf nzUf; apply/eqP; apply: contraR nzUf => nz_ker.",
            "VernacExtend",
            "d0ca9c3fd2da32fc51e6c7224f197d333e09c6a3"
        ],
        [
            "rewrite (sameP eqP sub_kermxP) (sameP capmx_idPl eqmxP) simU ?capmxSl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: kermx_hom_module.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_Schur_inj_iso U f : mxsimple U -> (U <= dom_hom_mx f)%MS -> U *m f != 0 -> mx_iso U (U *m f).",
            "VernacStartTheoremProof",
            "60814409454eb228d0050cf99f40cd12e0546d59"
        ],
        [
            "move=> simU homUf nzUf; have [modU _ _] := simU.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have eqUfU: \\rank (U *m f) = \\rank U by apply/mxrank_injP; rewrite mx_Schur_inj.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{eqUfU} [g invg defUf] := complete_unitmx eqUfU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices homUg: (U <= dom_hom_mx g)%MS by exists g; rewrite ?defUf.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply/hom_mxP=> x Gx; have [ux defUx] := submxP (mxmoduleP modU x Gx).",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "by rewrite -defUf -(hom_mxP homUf) // defUx -!(mulmxA ux) defUf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_Schur_iso U V f : mxsimple U -> mxsimple V -> (U <= dom_hom_mx f)%MS -> (U *m f <= V)%MS -> U *m f != 0 -> mx_iso U V.",
            "VernacStartTheoremProof",
            "f981baf5b217d841d06b0ee9874cfa5c956e1eba"
        ],
        [
            "move=> simU simV homUf sUfV nzUf; have [modU _ _] := simU.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [g invg homUg defUg] := mx_Schur_inj_iso simU homUf nzUf.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists g => //; apply: mx_Schur_onto; rewrite ?defUg //.",
            "VernacExtend",
            "01f04d3f5bba3b876eb4ec7b1c8f26d2e2cced77"
        ],
        [
            "by rewrite -!submx0 defUg in nzUf *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nz_row_mxsimple U : mxsimple U -> nz_row U != 0.",
            "VernacStartTheoremProof",
            "76454cef851391a2d446daa64b742ce88162055e"
        ],
        [
            "by case=> _ nzU _; rewrite nz_row_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mxsimple_iso (U V : 'M_n) := [&& mxmodule V, (V :&: row_hom_mx (nz_row U))%MS != 0 & \\rank V <= \\rank U].",
            "VernacDefinition",
            "c056d658a50b4d03272db6ce27e0850423243bff"
        ],
        [
            "Lemma mxsimple_isoP U V : mxsimple U -> reflect (mx_iso U V) (mxsimple_iso U V).",
            "VernacStartTheoremProof",
            "bd9d284c796902061cc2869dcf8f430a47763635"
        ],
        [
            "move=> simU; pose u := nz_row U.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have [Uu nz_u]: (u <= U)%MS /\\ u != 0 by rewrite nz_row_sub nz_row_mxsimple.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (iffP and3P) => [[modV] | isoUV]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split; last by rewrite (mxrank_iso isoUV).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: (mx_iso_simple isoUV simU).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [f injf homUf defV] := isoUV; apply/rowV0Pn; exists (u *m f).",
            "VernacExtend",
            "b32dd790d8ca104d3ee069d646b19b162214f88d"
        ],
        [
            "rewrite sub_capmx -defV submxMr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/row_hom_mxP; exists f; first apply: (submx_trans Uu).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -(mul0mx _ f) (can_eq (mulmxK injf)) nz_u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/rowV0Pn=> v; rewrite sub_capmx => /andP[Vv].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case/row_hom_mxP => f homMf def_v nz_v eqrUV.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "pose uG := cyclic_mx u; pose vG := cyclic_mx v.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have def_vG: (uG *m f :=: vG)%MS by rewrite /vG -def_v; apply: hom_cyclic_mx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defU: (U :=: uG)%MS by apply: mxsimple_cyclic.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have mod_uG: mxmodule uG by rewrite cyclic_mx_module.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have homUf: (U <= dom_hom_mx f)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite defU cyclic_mx_sub ?dom_hom_mx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have isoUf: mx_iso U (U *m f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: mx_Schur_inj_iso => //; apply: contra nz_v; rewrite -!submx0.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by rewrite (eqmxMr f defU) def_vG; apply: submx_trans (cyclic_mx_id v).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: mx_iso_trans (isoUf) (eqmx_iso _); apply/eqmxP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "have sUfV: (U *m f <= V)%MS by rewrite (eqmxMr f defU) def_vG cyclic_mx_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -mxrank_leqif_eq ?eqn_leq 1?mxrankS // -(mxrank_iso isoUf).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsimple_iso_simple U V : mxsimple_iso U V -> mxsimple U -> mxsimple V.",
            "VernacStartTheoremProof",
            "f9f863be38c82e091adf89a650574ee105869796"
        ],
        [
            "by move=> isoUV simU; apply: mx_iso_simple (simU); apply/mxsimple_isoP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Implicit Type I : finType.",
            "VernacReserve",
            "832c41caa56eef16d633a0c63441d90f481f690c"
        ],
        [
            "Variant mxsemisimple (V : 'M_n) := MxSemisimple I U (W := (\\sum_(i : I) U i)%MS) of forall i, mxsimple (U i) & (W :=: V)%MS & mxdirect W.",
            "VernacInductive",
            "952012038ea2d78e1fdbccf727d1b4113f48a8bd"
        ],
        [
            "Lemma sum_mxsimple_direct_compl m I W (U : 'M_(m, n)) : let V := (\\sum_(i : I) W i)%MS in (forall i : I, mxsimple (W i)) -> mxmodule U -> (U <= V)%MS -> {J : {set I} | let S := U + \\sum_(i in J) W i in S :=: V /\\ mxdirect S}%MS.",
            "VernacStartTheoremProof",
            "15fbe9368495fec77e7a4491f9e25ffa5bc296f5"
        ],
        [
            "move=> V simW modU sUV; pose V_ (J : {set I}) := (\\sum_(i in J) W i)%MS.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "pose dxU (J : {set I}) := mxdirect (U + V_ J).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have [J maxJ]: {J | maxset dxU J}; last case/maxsetP: maxJ => dxUVJ maxJ.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: ex_maxset; exists set0.",
            "VernacExtend",
            "744907bb9eb9ab4aa4be78e2a15f7d03ac719c44"
        ],
        [
            "by rewrite /dxU mxdirectE /V_ /= !big_set0 addn0 addsmx0 /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have modWJ: mxmodule (V_ J) by apply: sumsmx_module => i _; case: (simW i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists J; split=> //; apply/eqmxP; rewrite addsmx_sub sUV; apply/andP; split.",
            "VernacExtend",
            "f403e59cf3214d60eed3952760afcda506cb5098"
        ],
        [
            "by apply/sumsmx_subP=> i Ji; rewrite (sumsmx_sup i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -/(V_ J); apply/sumsmx_subP=> i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "case Ji: (i \\in J).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply: submx_trans (addsmxSr _ _); apply: (sumsmx_sup i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [modWi nzWi simWi] := simW i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (sameP capmx_idPl eqmxP) simWi ?capmxSl ?capmx_module ?addsmx_module //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contraFT (Ji); rewrite negbK => dxWiUVJ.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite -(maxJ (i |: J)) ?setU11 ?subsetUr // /dxU.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mxdirectE /= !big_setU1 ?Ji //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addnCA addsmxA (addsmxC U) -addsmxA -mxdirectE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mxdirect_addsE /= mxdirect_trivial -/(dxU _) dxUVJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_mxsimple_direct_sub I W (V : 'M_n) : (forall i : I, mxsimple (W i)) -> (\\sum_i W i :=: V)%MS -> {J : {set I} | let S := \\sum_(i in J) W i in S :=: V /\\ mxdirect S}%MS.",
            "VernacStartTheoremProof",
            "ff55aa3d2b916c6eef39f0087b822702721d3ec7"
        ],
        [
            "move=> simW defV.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [|J [defS dxS]] := sum_mxsimple_direct_compl simW (mxmodule0 n).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exact: sub0mx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exists J; split; last by rewrite mxdirectE /= adds0mx mxrank0 in dxS.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: eqmx_trans defV; rewrite adds0mx_id in defS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsemisimple0 : mxsemisimple 0.",
            "VernacStartTheoremProof",
            "ea4fe22674c20e3a79cbf7b4430fa9d4dba7645f"
        ],
        [
            "exists [finType of 'I_0] (fun _ => 0); [by case | by rewrite big_ord0 | ].",
            "VernacExtend",
            "8b5397c15b6b99eb3b685a534efc13151d43299e"
        ],
        [
            "by rewrite mxdirectE /= !big_ord0 mxrank0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intro_mxsemisimple (I : Type) r (P : pred I) W V : (\\sum_(i <- r | P i) W i :=: V)%MS -> (forall i, P i -> W i != 0 -> mxsimple (W i)) -> mxsemisimple V.",
            "VernacStartTheoremProof",
            "02daf0abd176a614dc51dc45d1869ad8d59a8093"
        ],
        [
            "move=> defV simW; pose W_0 := [pred i | W i == 0].",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "have [-> | nzV] := eqVneq V 0; first exact: mxsemisimple0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case def_r: r => [| i0 r'] => [|{r' def_r}].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -mxrank_eq0 -defV def_r big_nil mxrank0 in nzV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: defV; rewrite (bigID W_0) /= addsmxC -big_filter !(big_nth i0) !big_mkord.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite addsmxC big1 ?adds0mx_id => [|i /andP[_ /eqP] //].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "set tI := 'I_(_); set r_ := nth _ _ => defV.",
            "VernacExtend",
            "ced270260aea2dd3ab523a646806c84962140531"
        ],
        [
            "have{simW} simWr (i : tI) : mxsimple (W (r_ i)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: i => m /=; set Pr := fun i => _ => lt_m_r /=.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "suffices: (Pr (r_ m)) by case/andP; apply: simW.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply: all_nthP m lt_m_r; apply/all_filterP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite -filter_predI; apply: eq_filter => i; rewrite /= andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [J []] := sum_mxsimple_direct_sub simWr defV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (set_0Vmem J) => [-> V0 | [j0 Jj0]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite -mxrank_eq0 -V0 big_set0 mxrank0 in nzV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose K := {j | j \\in J}; pose k0 : K := Sub j0 Jj0.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have bij_KJ: {on J, bijective (sval : K -> _)}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists (insubd k0) => [k _ | j Jj]; rewrite ?valKd ?insubdK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have J_K (k : K) : sval k \\in J by apply: valP k.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mxdirectE /= !(reindex _ bij_KJ) !(eq_bigl _ _ J_K) -mxdirectE /= -/tI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: MxSemisimple.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsimple_semisimple U : mxsimple U -> mxsemisimple U.",
            "VernacStartTheoremProof",
            "04a54e09feb74789add365eb0f1ae56f173f012c"
        ],
        [
            "move=> simU; apply: (intro_mxsemisimple (_ : \\sum_(i < 1) U :=: U))%MS => //.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite big_ord1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addsmx_semisimple U V : mxsemisimple U -> mxsemisimple V -> mxsemisimple (U + V)%MS.",
            "VernacStartTheoremProof",
            "54d61efcf0d74844362db7b418d3764939e1cfd7"
        ],
        [
            "case=> [I W /= simW defU _] [J T /= simT defV _].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have defUV: (\\sum_ij sum_rect (fun _ => 'M_n) W T ij :=: U + V)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite big_sumType /=; apply: adds_eqmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: intro_mxsemisimple defUV _; case=> /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumsmx_semisimple (I : finType) (P : pred I) V : (forall i, P i -> mxsemisimple (V i)) -> mxsemisimple (\\sum_(i | P i) V i)%MS.",
            "VernacStartTheoremProof",
            "ffb4c31f701a705ad356d79acf573fd2573736b4"
        ],
        [
            "move=> ssimV; elim/big_ind: _ => //; first exact: mxsemisimple0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exact: addsmx_semisimple.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqmx_semisimple U V : (U :=: V)%MS -> mxsemisimple U -> mxsemisimple V.",
            "VernacStartTheoremProof",
            "1badf8893885c428c623faf58efe9a4bbfe9b79b"
        ],
        [
            "by move=> eqUV [I W S simW defU dxS]; exists I W => //; apply: eqmx_trans eqUV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom_mxsemisimple (V f : 'M_n) : mxsemisimple V -> (V <= dom_hom_mx f)%MS -> mxsemisimple (V *m f).",
            "VernacStartTheoremProof",
            "cb51c16ee2cbe72061bd283fadcaeed524d5f475"
        ],
        [
            "case=> I W /= simW defV _; rewrite -defV => /sumsmx_subP homWf.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have{defV} defVf: (\\sum_i W i *m f :=: V *m f)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: eqmx_trans (eqmx_sym _) (eqmxMr f defV); apply: sumsmxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (intro_mxsemisimple defVf) => i _ nzWf.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: mx_iso_simple (simW i); apply: mx_Schur_inj_iso; rewrite ?homWf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsemisimple_module U : mxsemisimple U -> mxmodule U.",
            "VernacStartTheoremProof",
            "345b12bc51d476461ad3ec278f4a117c4279b222"
        ],
        [
            "case=> I W /= simW defU _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite -(eqmx_module defU) sumsmx_module // => i _; case: (simW i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant mxsplits (V U : 'M_n) := MxSplits (W : 'M_n) of mxmodule W & (U + W :=: V)%MS & mxdirect (U + W).",
            "VernacInductive",
            "9c088daa5862c0d38e15aa8333d08c872a4a6eaa"
        ],
        [
            "Definition mx_completely_reducible V := forall U, mxmodule U -> (U <= V)%MS -> mxsplits V U.",
            "VernacDefinition",
            "4b95a656ab4bbfb718d83fd7a33812ae693c0fa1"
        ],
        [
            "Lemma mx_reducibleS U V : mxmodule U -> (U <= V)%MS -> mx_completely_reducible V -> mx_completely_reducible U.",
            "VernacStartTheoremProof",
            "e4ef1cc5ddb7b7872cc73caf5690be0b0f422593"
        ],
        [
            "move=> modU sUV redV U1 modU1 sU1U.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [W modW defV dxU1W] := redV U1 modU1 (submx_trans sU1U sUV).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (W :&: U)%MS; first exact: capmx_module.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/eqmxP; rewrite !matrix_modl // capmxSr sub_capmx defV sUV /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/mxdirect_addsP; rewrite capmxA (mxdirect_addsP dxU1W) cap0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_Maschke : [char F]^'.-group G -> mx_completely_reducible 1%:M.",
            "VernacStartTheoremProof",
            "4d9047dd143ed74b99131c00b0dea689693d0fd3"
        ],
        [
            "rewrite /pgroup charf'_nat; set nG := _%:R => nzG U => /mxmoduleP Umod _.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "pose phi := nG^-1 *: (\\sum_(x in G) rG x^-1 *m pinvmx U *m U *m rG x).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have phiG x: x \\in G -> phi *m rG x = rG x *m phi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Gx; rewrite -scalemxAl -scalemxAr; congr (_ *: _).",
            "VernacExtend",
            "485e46f06ecb626ff6a640f6969694ae3ffba974"
        ],
        [
            "rewrite {2}(reindex_acts 'R _ Gx) ?astabsR //= mulmx_suml mulmx_sumr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => y Gy; rewrite !mulmxA -repr_mxM ?groupV ?groupM //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite invMg mulKVg repr_mxM ?mulmxA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Uphi: U *m phi = U.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -scalemxAr mulmx_sumr (eq_bigr (fun _ => U)) => [|x Gx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite sumr_const -scaler_nat !scalerA mulVf ?scale1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite 3!mulmxA mulmxKpV ?repr_mxKV ?Umod ?groupV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have tiUker: (U :&: kermx phi = 0)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP/rowV0P=> v; rewrite sub_capmx => /andP[/submxP[u ->] /sub_kermxP].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite -mulmxA Uphi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (kermx phi); last exact/mxdirect_addsP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/mxmoduleP=> x Gx; apply/sub_kermxP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite -mulmxA -phiG // mulmxA mulmx_ker mul0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqmxP; rewrite submx1 sub1mx.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /row_full mxrank_disjoint_sum //= mxrank_ker.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suffices ->: (U :=: phi)%MS by rewrite subnKC ?rank_leq_row.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply/eqmxP; rewrite -{1}Uphi submxMl scalemx_sub //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite summx_sub // => x Gx; rewrite -mulmxA mulmx_sub ?Umod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsemisimple_reducible V : mxsemisimple V -> mx_completely_reducible V.",
            "VernacStartTheoremProof",
            "5165fb93be770f65b30245d9430200f4af848f59"
        ],
        [
            "case=> [I W /= simW defV _] U modU sUV; rewrite -defV in sUV.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "have [J [defV' dxV]] := sum_mxsimple_direct_compl simW modU sUV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (\\sum_(i in J) W i)%MS.",
            "VernacExtend",
            "85c27f45aa8810e02b00f50bba16e27d8280de66"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: sumsmx_module => i _; case: (simW i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: eqmx_trans defV' defV.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "by rewrite mxdirect_addsE (sameP eqP mxdirect_addsP) /= in dxV; case/and3P: dxV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_reducible_semisimple V : mxmodule V -> mx_completely_reducible V -> classically (mxsemisimple V).",
            "VernacStartTheoremProof",
            "9fc5d855dd29add4646bc2affdbda124d010f7d3"
        ],
        [
            "move=> modV redV [] // nssimV; move: {-1}_.+1 (ltnSn (\\rank V)) => r leVr.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "elim: r => // r IHr in V leVr modV redV nssimV.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have [V0 | nzV] := eqVneq V 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite nssimV ?V0 //; apply: mxsemisimple0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply (mxsimple_exists modV nzV) => [[U simU sUV]]; have [modU nzU _] := simU.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "have [W modW defUW dxUW] := redV U modU sUV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sWV: (W <= V)%MS by rewrite -defUW addsmxSr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: IHr (mx_reducibleS modW sWV redV) _ => // [|ssimW].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite ltnS -defUW (mxdirectP dxUW) /= in leVr; apply: leq_trans leVr.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -add1n leq_add2r lt0n mxrank_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: nssimV (eqmx_semisimple defUW (addsmx_semisimple _ ssimW)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: mxsimple_semisimple.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsemisimpleS U V : mxmodule U -> (U <= V)%MS -> mxsemisimple V -> mxsemisimple U.",
            "VernacStartTheoremProof",
            "1f33b7724f4d5a52386568df56bb7ff5d16bd1a3"
        ],
        [
            "move=> modU sUV ssimV.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [W modW defUW dxUW]:= mxsemisimple_reducible ssimV modU sUV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/mxdirect_addsP: dxUW => dxUW.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have defU : (V *m proj_mx U W :=: U)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/eqmxP; rewrite proj_mx_sub -{1}[U](proj_mx_id dxUW) ?submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: eqmx_semisimple defU _; apply: hom_mxsemisimple ssimV _.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite -defUW proj_mx_hom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom_mxsemisimple_iso I P U W f : let V := (\\sum_(i : I | P i) W i)%MS in mxsimple U -> (forall i, P i -> W i != 0 -> mxsimple (W i)) -> (V <= dom_hom_mx f)%MS -> (U <= V *m f)%MS -> {i | P i & mx_iso (W i) U}.",
            "VernacStartTheoremProof",
            "61a02119b024530985e524f28d58a821f03ba650"
        ],
        [
            "move=> V simU simW homVf sUVf; have [modU nzU _] := simU.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have ssimVf: mxsemisimple (V *m f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exact: hom_mxsemisimple (intro_mxsemisimple (eqmx_refl V) simW) homVf.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have [U' modU' defVf] := mxsemisimple_reducible ssimVf modU sUVf.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/mxdirect_addsP=> dxUU'; pose p := f *m proj_mx U U'.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "case: (pickP (fun i => P i && (W i *m p != 0))) => [i /andP[Pi nzWip] | no_i].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have sWiV: (W i <= V)%MS by rewrite (sumsmx_sup i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sWipU: (W i *m p <= U)%MS by rewrite mulmxA proj_mx_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists i => //; apply: (mx_Schur_iso (simW i Pi _) simU _ sWipU nzWip).",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by apply: contraNneq nzWip => ->; rewrite mul0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (submx_trans sWiV); apply/hom_mxP=> x Gx.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite mulmxA [_ *m p]mulmxA 2?(hom_mxP _) -?defVf ?proj_mx_hom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/negP: nzU; rewrite -submx0 -[U](proj_mx_id dxUU') //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite (submx_trans (submxMr _ sUVf)) // -mulmxA -/p sumsmxMr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/sumsmx_subP=> i Pi; move/negbT: (no_i i); rewrite Pi negbK submx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Components.",
            "VernacBeginSection",
            "68b7d29c96c4638bd0e278c5ac4dc80064319345"
        ],
        [
            "Fact component_mx_key : unit.",
            "VernacStartTheoremProof",
            "650e3762c4a23e23fe8d3eefbfba26258a52fb6b"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition component_mx_expr (U : 'M[F]_n) := (\\sum_i cyclic_mx (row i (row_hom_mx (nz_row U))))%MS.",
            "VernacDefinition",
            "626578d49f70245d73663d8a83d10f3f80003c1e"
        ],
        [
            "Definition component_mx := locked_with component_mx_key component_mx_expr.",
            "VernacDefinition",
            "9bdc2495b7dda6d99944a465a8de32cbb0a9aae2"
        ],
        [
            "Canonical component_mx_unfoldable := [unlockable fun component_mx].",
            "VernacDefinition",
            "b30e6051bcf5e24ea1acb603847a961f4c951b35"
        ],
        [
            "Variable U : 'M[F]_n.",
            "VernacAssumption",
            "ffa93c0758cd14ec0349f6bf4c109b8457fa507a"
        ],
        [
            "Hypothesis simU : mxsimple U.",
            "VernacAssumption",
            "f57d8b2a84b55e193f1221b2d279ca2b73e7e50b"
        ],
        [
            "Let u := nz_row U.",
            "VernacDefinition",
            "d5e2d24eefcff7ed0c9ca9b35f974965994bf5eb"
        ],
        [
            "Let iso_u := row_hom_mx u.",
            "VernacDefinition",
            "9eec1ea2da5e543d75d2f13ab87cc04a26b185b3"
        ],
        [
            "Let nz_u : u != 0 := nz_row_mxsimple simU.",
            "VernacDefinition",
            "60225266ef8e6f9bc05213ab16ee8b9f42a189c1"
        ],
        [
            "Let Uu : (u <= U)%MS := nz_row_sub U.",
            "VernacDefinition",
            "22a92804b0a88c4e9c72ae8d0e540318ea722d49"
        ],
        [
            "Let defU : (U :=: cyclic_mx u)%MS := mxsimple_cyclic simU nz_u Uu.",
            "VernacDefinition",
            "757fbaaf0bc1cfaad197c61db8a0acbcffcd1644"
        ],
        [
            "Local Notation compU := (component_mx U).",
            "VernacSyntacticDefinition",
            "2405a02fbfbd5f9d79899cc44332238976002cf0"
        ],
        [
            "Lemma component_mx_module : mxmodule compU.",
            "VernacStartTheoremProof",
            "9ffbb2a20c497b62c9fda038c8930517331dfb88"
        ],
        [
            "by rewrite unlock sumsmx_module // => i; rewrite cyclic_mx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma genmx_component : <<compU>>%MS = compU.",
            "VernacStartTheoremProof",
            "31d579466bd53f92d2fc54d04242423a553148cc"
        ],
        [
            "by rewrite [in compU]unlock genmx_sums; apply: eq_bigr => i; rewrite genmx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma component_mx_def : {I : finType & {W : I -> 'M_n | forall i, mx_iso U (W i) & compU = \\sum_i W i}}%MS.",
            "VernacStartTheoremProof",
            "f0e48fbcc1aed1584063647aebc0fb26d3a4aa43"
        ],
        [
            "pose r i := row i iso_u; pose r_nz i := r i != 0; pose I := {i | r_nz i}.",
            "VernacExtend",
            "a37246b98b083397f6e69dfe0e1d317fcad6a9d6"
        ],
        [
            "exists [finType of I]; exists (fun i => cyclic_mx (r (sval i))) => [i|].",
            "VernacExtend",
            "597578d0dc7259cb3958a73a8bba64ed0b0790ae"
        ],
        [
            "apply/mxsimple_isoP=> //; apply/and3P.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "split; first by rewrite cyclic_mx_module.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/rowV0Pn; exists (r (sval i)); last exact: (svalP i).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite sub_capmx cyclic_mx_id row_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [f hom_u_f <-] := @row_hom_mxP u (r (sval i)) (row_sub _ _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite defU -hom_cyclic_mx ?mxrankM_maxl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(eq_bigr _ (fun _ _ => genmx_id _)) -genmx_sums -genmx_component.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [in compU]unlock; apply/genmxP/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/sumsmx_subP => i _; rewrite (sumsmx_sup (sval i)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/sumsmx_subP => i _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case i0: (r_nz i); first by rewrite (sumsmx_sup (Sub i i0)).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/negbFE: i0; rewrite -cyclic_mx_eq0 => /eqP->; apply: sub0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma component_mx_semisimple : mxsemisimple compU.",
            "VernacStartTheoremProof",
            "39349002c017ec106e51e36ee306b84a470f4592"
        ],
        [
            "have [I [W isoUW ->]] := component_mx_def.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: intro_mxsemisimple (eqmx_refl _) _ => i _ _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: mx_iso_simple (isoUW i) simU.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_iso_component V : mx_iso U V -> (V <= compU)%MS.",
            "VernacStartTheoremProof",
            "0c53a65007a0dea818b163ddcbf7db8995221ecd"
        ],
        [
            "move=> isoUV; have [f injf homUf defV] := isoUV.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have simV := mx_iso_simple isoUV simU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have hom_u_f := submx_trans Uu homUf.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ->: (V :=: cyclic_mx (u *m f))%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: eqmx_trans (hom_cyclic_mx hom_u_f).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: eqmx_trans (eqmx_sym defV) (eqmxMr _ defU).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have iso_uf: (u *m f <= iso_u)%MS by apply/row_hom_mxP; exists f.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite genmxE; apply/row_subP=> j; rewrite row_mul mul_rV_lin1 /=.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "set a := vec_mx _; apply: submx_trans (submxMr _ iso_uf) _.",
            "VernacExtend",
            "0efc893cd6f40fa03714e330608ed1eb1de1560e"
        ],
        [
            "apply/row_subP=> i; rewrite row_mul [in compU]unlock (sumsmx_sup i) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply/cyclic_mxP; exists a; rewrite // vec_mxK row_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma component_mx_id : (U <= compU)%MS.",
            "VernacStartTheoremProof",
            "1b20121c7eed3213e4f921484f7033d80276fc23"
        ],
        [
            "exact: mx_iso_component (mx_iso_refl U).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom_component_mx_iso f V : mxsimple V -> (compU <= dom_hom_mx f)%MS -> (V <= compU *m f)%MS -> mx_iso U V.",
            "VernacStartTheoremProof",
            "137a8bb7bcfb8eaf7f8ceac25d550ff5eadfe0d8"
        ],
        [
            "have [I [W isoUW ->]] := component_mx_def => simV homWf sVWf.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [i _ _|i _ ] := hom_mxsemisimple_iso simV _ homWf sVWf.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exact: mx_iso_simple (simU).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: mx_iso_trans.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma component_mx_iso V : mxsimple V -> (V <= compU)%MS -> mx_iso U V.",
            "VernacStartTheoremProof",
            "826ca002c4fd28ce622d0866bb2fc41966231c26"
        ],
        [
            "move=> simV; rewrite -[compU]mulmx1.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "exact: hom_component_mx_iso (scalar_mx_hom _ _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom_component_mx f : (compU <= dom_hom_mx f)%MS -> (compU *m f <= compU)%MS.",
            "VernacStartTheoremProof",
            "9cfa10126ef70d6d734afdf263a9702f42d63940"
        ],
        [
            "move=> hom_f.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [I W /= simW defW _] := hom_mxsemisimple component_mx_semisimple hom_f.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -defW; apply/sumsmx_subP=> i _; apply: mx_iso_component.",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "by apply: hom_component_mx_iso hom_f _ => //; rewrite -defW (sumsmx_sup i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Components.",
            "VernacEndSegment",
            "5fc4e68a33b09f90b9e7f399dabda37b919d262d"
        ],
        [
            "Lemma component_mx_isoP U V : mxsimple U -> mxsimple V -> reflect (mx_iso U V) (component_mx U == component_mx V).",
            "VernacStartTheoremProof",
            "0b53877954b0ff0a28992b249f95b1127680769b"
        ],
        [
            "move=> simU simV; apply: (iffP eqP) => isoUV.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply: component_mx_iso; rewrite ?isoUV ?component_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(genmx_component U) -(genmx_component V); apply/genmxP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "wlog suffices: U V simU simV isoUV / (component_mx U <= component_mx V)%MS.",
            "VernacExtend",
            "348aa27e7c84ea4ca2ac06b8a3b3db24e74b6ad7"
        ],
        [
            "by move=> IH; rewrite !IH //; apply: mx_iso_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [I [W isoWU ->]] := component_mx_def simU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/sumsmx_subP => i _; apply: mx_iso_component => //.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "exact: mx_iso_trans (mx_iso_sym isoUV) (isoWU i).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma component_mx_disjoint U V : mxsimple U -> mxsimple V -> component_mx U != component_mx V -> (component_mx U :&: component_mx V = 0)%MS.",
            "VernacStartTheoremProof",
            "5e033232f6e9d4a89ccee5574d8181a7df0102e9"
        ],
        [
            "move=> simU simV neUV; apply: contraNeq neUV => ntUV.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: (mxsimple_exists _ ntUV) => [|[W simW]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite capmx_module ?component_mx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite sub_capmx => /andP[sWU sWV]; apply/component_mx_isoP=> //.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by apply: mx_iso_trans (_ : mx_iso U W) (mx_iso_sym _); apply: component_mx_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Socle.",
            "VernacBeginSection",
            "2fe25b6f732fb038645bc021f44dceca4afbb615"
        ],
        [
            "Record socleType := EnumSocle { socle_base_enum : seq 'M[F]_n; _ : forall M, M \\in socle_base_enum -> mxsimple M; _ : forall M, mxsimple M -> has (mxsimple_iso M) socle_base_enum }.",
            "VernacInductive",
            "bdba1347a6df83f6057620f4ac66da2c14144b2d"
        ],
        [
            "Lemma socle_exists : classically socleType.",
            "VernacStartTheoremProof",
            "6eb7289282357179700b479d8a53af62768e03a9"
        ],
        [
            "pose V : 'M[F]_n := 0; have: mxsemisimple V by apply: mxsemisimple0.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "have: n - \\rank V < n.+1 by rewrite mxrank0 subn0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: _.+1 V => // n' IHn' V; rewrite ltnS => le_nV_n' ssimV.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "case=> // maxV; apply: (maxV); have [I /= U simU defV _] := ssimV.",
            "VernacExtend",
            "f38854e7854aafa5739e83f7d187a6a9efbcf1d9"
        ],
        [
            "exists (codom U) => [M | M simM]; first by case/mapP=> i _ ->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "suffices sMV: (M <= V)%MS.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite -defV -(mulmx1 (\\sum_i _)%MS) in sMV.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [//| i _] := hom_mxsemisimple_iso simM _ (scalar_mx_hom _ _) sMV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/mx_iso_sym=> isoM; apply/hasP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by exists (U i); [apply: codom_f | apply/mxsimple_isoP].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ssimMV := addsmx_semisimple (mxsimple_semisimple simM) ssimV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraLR isT => nsMV; apply: IHn' ssimMV _ maxV.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: leq_trans le_nV_n'; rewrite ltn_sub2l //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite ltn_neqAle rank_leq_row andbT -[_ == _]sub1mx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: contra nsMV; apply: submx_trans; apply: submx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (ltn_leqif (mxrank_leqif_sup _)) ?addsmxSr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addsmx_sub submx_refl andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section SocleDef.",
            "VernacBeginSection",
            "1f397b65df5aa56187434ad15141805071286682"
        ],
        [
            "Variable sG0 : socleType.",
            "VernacAssumption",
            "ff438e3d57ab1aa0222c135d383b9aa84d6b4d14"
        ],
        [
            "Definition socle_enum := map component_mx (socle_base_enum sG0).",
            "VernacDefinition",
            "a9a479f302ab1eda134113b040032d25be1c4b24"
        ],
        [
            "Lemma component_socle M : mxsimple M -> component_mx M \\in socle_enum.",
            "VernacStartTheoremProof",
            "d0359d2f08959f3afaa8d831d50c84de80f5a24d"
        ],
        [
            "rewrite /socle_enum; case: sG0 => e0 /= sim_e mem_e simM.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "have /hasP[M' e0M' isoMM'] := mem_e M simM; apply/mapP; exists M' => //.",
            "VernacExtend",
            "50ac7f1676fde99958852c0f42096207d1f4db38"
        ],
        [
            "by apply/eqP/component_mx_isoP; [|apply: sim_e | apply/mxsimple_isoP].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive socle_sort : predArgType := PackSocle W of W \\in socle_enum.",
            "VernacInductive",
            "926c7e6965d68b311bdc96c073c520430b3ef423"
        ],
        [
            "Local Notation sG := socle_sort.",
            "VernacSyntacticDefinition",
            "d7c91750170a8fd469f5651f6390cddad4bab2b7"
        ],
        [
            "Local Notation e0 := (socle_base_enum sG0).",
            "VernacSyntacticDefinition",
            "25fedfcc875192b85ce25de9a49043090da3a48c"
        ],
        [
            "Definition socle_base W := let: PackSocle W _ := W in e0`_(index W socle_enum).",
            "VernacDefinition",
            "4f1e5eb5fdf895abc04811be36a160bb351d012f"
        ],
        [
            "Coercion socle_val W : 'M[F]_n := component_mx (socle_base W).",
            "VernacDefinition",
            "8cdc8e931e10bcb77d3e2b3f98ecdfc370a8e26b"
        ],
        [
            "Definition socle_mult (W : sG) := (\\rank W %/ \\rank (socle_base W))%N.",
            "VernacDefinition",
            "91db4cf296be81bfc7170c43d3f46347d9985ad7"
        ],
        [
            "Lemma socle_simple W : mxsimple (socle_base W).",
            "VernacStartTheoremProof",
            "0e2c71e3fb97de0312eb2556f2fc41dcb9896730"
        ],
        [
            "case: W => M /=; rewrite /= /socle_enum /=; case: sG0 => e sim_e _ /= e_M.",
            "VernacExtend",
            "1dd33488047dbf70f12e12a749f59bfa780f9e04"
        ],
        [
            "by apply: sim_e; rewrite mem_nth // -(size_map component_mx) index_mem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition socle_module (W : sG) := mxsimple_module (socle_simple W).",
            "VernacDefinition",
            "feebf7b5f6305b2e5aa52530fe108c1522393754"
        ],
        [
            "Definition socle_repr W := submod_repr (socle_module W).",
            "VernacDefinition",
            "a69de33bc288040422697e88c4b1bb8d7bfbe4cd"
        ],
        [
            "Lemma nz_socle (W : sG) : W != 0 :> 'M_n.",
            "VernacStartTheoremProof",
            "36cedc285ea5616866074d312c671debdde18d15"
        ],
        [
            "have simW := socle_simple W; have [_ nzW _] := simW; apply: contra nzW.",
            "VernacExtend",
            "497eac57a4065e07594606d90bf63f1b4d13996e"
        ],
        [
            "by rewrite -!submx0; apply: submx_trans (component_mx_id simW).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma socle_mem (W : sG) : (W : 'M_n) \\in socle_enum.",
            "VernacStartTheoremProof",
            "cc5d98a7f0512cae417ac4e9772701c9ed281fff"
        ],
        [
            "exact: component_socle (socle_simple _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PackSocleK W e0W : @PackSocle W e0W = W :> 'M_n.",
            "VernacStartTheoremProof",
            "5f5df3497f00d39739cf408330958ac90d516469"
        ],
        [
            "rewrite /socle_val /= in e0W *; rewrite -(nth_map _ 0) ?nth_index //.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by rewrite -(size_map component_mx) index_mem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical socle_subType := SubType _ _ _ socle_sort_rect PackSocleK.",
            "VernacDefinition",
            "23bef768dfbcf14047e4255f43d40d1178e19fc4"
        ],
        [
            "Definition socle_eqMixin := Eval hnf in [eqMixin of sG by <:].",
            "VernacDefinition",
            "d329996ddab793d0f4d2478170e71c33b0752c15"
        ],
        [
            "Canonical socle_eqType := Eval hnf in EqType sG socle_eqMixin.",
            "VernacDefinition",
            "6c2143ddfec4bba7d504cd253cd2bcf2d2976491"
        ],
        [
            "Definition socle_choiceMixin := Eval hnf in [choiceMixin of sG by <:].",
            "VernacDefinition",
            "cfb998ad6ae721130bdba1299a514fe3df9bb9de"
        ],
        [
            "Canonical socle_choiceType := ChoiceType sG socle_choiceMixin.",
            "VernacDefinition",
            "ad0ab939dec375d6181548bfbf2bc7777cd2e8ad"
        ],
        [
            "Lemma socleP (W W' : sG) : reflect (W = W') (W == W')%MS.",
            "VernacStartTheoremProof",
            "b56e3de6ddf439442722f4b7122c35510f761d17"
        ],
        [
            "by rewrite (sameP genmxP eqP) !{1}genmx_component; apply: (W =P _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact socle_finType_subproof : cancel (fun W => SeqSub (socle_mem W)) (fun s => PackSocle (valP s)).",
            "VernacStartTheoremProof",
            "db280452a1434d815bdba72d1c5a4202bf7f2610"
        ],
        [
            "by move=> W /=; apply: val_inj; rewrite /= PackSocleK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition socle_countMixin := CanCountMixin socle_finType_subproof.",
            "VernacDefinition",
            "3e2748ff30edcb9bdf2a936bece821423b502f85"
        ],
        [
            "Canonical socle_countType := CountType sG socle_countMixin.",
            "VernacDefinition",
            "5792343af06a51c2b7f72997b595440d36a94cb3"
        ],
        [
            "Canonical socle_subCountType := [subCountType of sG].",
            "VernacDefinition",
            "f7525b30fefbd95b89d61c73273ade855b95a555"
        ],
        [
            "Definition socle_finMixin := CanFinMixin socle_finType_subproof.",
            "VernacDefinition",
            "df8188c225a2bdffaa57fab830b0009863fdcf2d"
        ],
        [
            "Canonical socle_finType := FinType sG socle_finMixin.",
            "VernacDefinition",
            "195596b30fca02186610cedb0eb7cc25ec67c819"
        ],
        [
            "Canonical socle_subFinType := [subFinType of sG].",
            "VernacDefinition",
            "96dd66475bdf21a3b7726c686ae67e78c249e52e"
        ],
        [
            "End SocleDef.",
            "VernacEndSegment",
            "7e562a7e812fba5e19b19e3b898907aa9ce9eda5"
        ],
        [
            "Coercion socle_sort : socleType >-> predArgType.",
            "VernacCoercion",
            "dac854f18342563ffb7d56a40700cb3fb5cd1665"
        ],
        [
            "Variable sG : socleType.",
            "VernacAssumption",
            "053b5a2fc7af77aeebbb842e78ea2c82a2c80db7"
        ],
        [
            "Section SubSocle.",
            "VernacBeginSection",
            "816e555c75da9527f1ab97c3414ebec678b2e5f2"
        ],
        [
            "Variable P : pred sG.",
            "VernacAssumption",
            "c00ec997eff012c3a1b21e8447d3aed6e4a555fb"
        ],
        [
            "Notation S := (\\sum_(W : sG | P W) socle_val W)%MS.",
            "VernacSyntacticDefinition",
            "671124a607929d8fcd893f07276ac99d6a9862ca"
        ],
        [
            "Lemma subSocle_module : mxmodule S.",
            "VernacStartTheoremProof",
            "e18c3416e28bcd2cf0698291723d5232218b2833"
        ],
        [
            "by rewrite sumsmx_module // => W _; apply: component_mx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subSocle_semisimple : mxsemisimple S.",
            "VernacStartTheoremProof",
            "195417c987d54241b8de1ebb3afbdc9afd1a7ada"
        ],
        [
            "apply: sumsmx_semisimple => W _; apply: component_mx_semisimple.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "exact: socle_simple.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation ssimS := subSocle_semisimple.",
            "VernacSyntacticDefinition",
            "a735930c0ec27dcbf0c281ffe6c76a77e3b93161"
        ],
        [
            "Lemma subSocle_iso M : mxsimple M -> (M <= S)%MS -> {W : sG | P W & mx_iso (socle_base W) M}.",
            "VernacStartTheoremProof",
            "cc60fcc1653909ded903a19726bcae4348ff8c09"
        ],
        [
            "move=> simM sMS; have [modM nzM _] := simM.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have [V /= modV defMV] := mxsemisimple_reducible ssimS modM sMS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/mxdirect_addsP=> dxMV; pose p := proj_mx M V; pose Sp (W : sG) := W *m p.",
            "VernacExtend",
            "81927515fc3ecfba885b46cf7f9013852021d404"
        ],
        [
            "case: (pickP [pred i | P i & Sp i != 0]) => [/= W | Sp0]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/negP: nzM; rewrite -submx0 -[M](proj_mx_id dxMV) //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite (submx_trans (submxMr _ sMS)) // sumsmxMr big1 // => W P_W.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply/eqP; move/negbT: (Sp0 W); rewrite /= P_W negbK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {}/Sp /= => /andP[P_W nzSp]; exists W => //.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "have homWp: (W <= dom_hom_mx p)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: submx_trans (proj_mx_hom dxMV modM modV).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite defMV (sumsmx_sup W).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have simWP := socle_simple W; apply: hom_component_mx_iso (homWp) _ => //.",
            "VernacExtend",
            "af1e5df3b072070e589731222b14b19e1cb478bc"
        ],
        [
            "by rewrite (mx_Schur_onto _ simM) ?proj_mx_sub ?component_mx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma capmx_subSocle m (M : 'M_(m, n)) : mxmodule M -> (M :&: S :=: \\sum_(W : sG | P W) (M :&: W))%MS.",
            "VernacStartTheoremProof",
            "fb7df45f7063320990c239f6b3327f94edb61032"
        ],
        [
            "move=> modM; apply/eqmxP/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/sumsmx_subP=> W P_W; rewrite capmxS // (sumsmx_sup W).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have modMS: mxmodule (M :&: S)%MS by rewrite capmx_module ?subSocle_module.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [J /= U simU defMS _] := mxsemisimpleS modMS (capmxSr M S) ssimS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -defMS; apply/sumsmx_subP=> j _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have [sUjV sUjS]: (U j <= M /\\ U j <= S)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/andP; rewrite -sub_capmx -defMS (sumsmx_sup j).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [W P_W isoWU] := subSocle_iso (simU j) sUjS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (sumsmx_sup W) // sub_capmx sUjV mx_iso_component //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: socle_simple.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SubSocle.",
            "VernacEndSegment",
            "1cec54582424088b09849bd77116981502db956c"
        ],
        [
            "Lemma subSocle_direct P : mxdirect (\\sum_(W : sG | P W) W).",
            "VernacStartTheoremProof",
            "ace8c33be629679c3bf08e71f106d15ccecea974"
        ],
        [
            "apply/mxdirect_sumsP=> W _; apply/eqP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite -submx0 capmx_subSocle ?component_mx_module //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/sumsmx_subP=> W' /andP[_ neWW'].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite capmxC component_mx_disjoint //; apply: socle_simple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Socle := (\\sum_(W : sG) W)%MS.",
            "VernacDefinition",
            "2b8d95c9696f02871c11546837d147c7488cb1a2"
        ],
        [
            "Lemma simple_Socle M : mxsimple M -> (M <= Socle)%MS.",
            "VernacStartTheoremProof",
            "ac8426c95067ab6a10415aac8a31e8b1fbfd69f0"
        ],
        [
            "move=> simM; have socM := component_socle sG simM.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite (sumsmx_sup (PackSocle socM)) // PackSocleK component_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semisimple_Socle U : mxsemisimple U -> (U <= Socle)%MS.",
            "VernacStartTheoremProof",
            "844f49eb346b7deb73aa1fbb61daed00760f5885"
        ],
        [
            "by case=> I M /= simM <- _; apply/sumsmx_subP=> i _; apply: simple_Socle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reducible_Socle U : mxmodule U -> mx_completely_reducible U -> (U <= Socle)%MS.",
            "VernacStartTheoremProof",
            "49b5108fd0d1e795067877eb63bec98fe3ea9a51"
        ],
        [
            "move=> modU redU; apply: (mx_reducible_semisimple modU redU).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "exact: semisimple_Socle.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma genmx_Socle : <<Socle>>%MS = Socle.",
            "VernacStartTheoremProof",
            "82a97d0315dd77ba81291814b12eeb1d14c8f78d"
        ],
        [
            "by rewrite genmx_sums; apply: eq_bigr => W; rewrite genmx_component.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reducible_Socle1 : mx_completely_reducible 1%:M -> Socle = 1%:M.",
            "VernacStartTheoremProof",
            "39215010eeda0ffe82e71ab87efb76bd4a594469"
        ],
        [
            "move=> redG; rewrite -genmx1 -genmx_Socle; apply/genmxP.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite submx1 reducible_Socle ?mxmodule1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Socle_module : mxmodule Socle.",
            "VernacStartTheoremProof",
            "324bf3ef829386bdaa5addfefca85a01af395e10"
        ],
        [
            "exact: subSocle_module.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Socle_semisimple : mxsemisimple Socle.",
            "VernacStartTheoremProof",
            "30e871bb90a5f256fd2cdc6cc67f69e24f9edbe2"
        ],
        [
            "exact: subSocle_semisimple.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Socle_direct : mxdirect Socle.",
            "VernacStartTheoremProof",
            "eeca8b66827fd47b93b605d9fbeb8566cdcb5ca0"
        ],
        [
            "exact: subSocle_direct.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Socle_iso M : mxsimple M -> {W : sG | mx_iso (socle_base W) M}.",
            "VernacStartTheoremProof",
            "909fdbaf1e5e6ca7ada74f41ab149830bdd49d03"
        ],
        [
            "by move=> simM; case/subSocle_iso: (simple_Socle simM) => // W _; exists W.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Socle.",
            "VernacEndSegment",
            "fa620300d81443647d9c5f338a0993322cc6cadd"
        ],
        [
            "Section CentHom.",
            "VernacBeginSection",
            "aceda93bc1a2b67f2d74d6cababdd0ac7d492931"
        ],
        [
            "Variable f : 'M[F]_n.",
            "VernacAssumption",
            "7264e950a0076c7e84af5a5564a89ba3ff889608"
        ],
        [
            "Lemma row_full_dom_hom : row_full (dom_hom_mx f) = centgmx rG f.",
            "VernacStartTheoremProof",
            "4881bfa730764d25dbefe742f0fb4e9fe11b1823"
        ],
        [
            "by rewrite -sub1mx; apply/hom_mxP/centgmxP=> cfG x /cfG; rewrite !mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memmx_cent_envelop : (f \\in 'C(E_G))%MS = centgmx rG f.",
            "VernacStartTheoremProof",
            "f0c3387c917b80e6fb820a348e6b2b326993cc43"
        ],
        [
            "apply/cent_rowP/centgmxP=> [cfG x Gx | cfG i].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by have:= cfG (enum_rank_in Gx x); rewrite rowK mxvecK enum_rankK_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite rowK mxvecK /= cfG ?enum_valP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma kermx_centg_module : centgmx rG f -> mxmodule (kermx f).",
            "VernacStartTheoremProof",
            "ce8fcc76182c13b724cca0c79168253f94a73ebc"
        ],
        [
            "move/centgmxP=> cGf; apply/mxmoduleP=> x Gx; apply/sub_kermxP.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by rewrite -mulmxA -cGf // mulmxA mulmx_ker mul0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma centgmx_hom m (U : 'M_(m, n)) : centgmx rG f -> (U <= dom_hom_mx f)%MS.",
            "VernacStartTheoremProof",
            "14e5bacfaa33b1cb12e237a57312d239feeabdac"
        ],
        [
            "by rewrite -row_full_dom_hom -sub1mx; apply: submx_trans (submx1 _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CentHom.",
            "VernacEndSegment",
            "c7bc88df779121a05050e78230750c37fb13971b"
        ],
        [
            "Definition mx_irreducible := mxsimple 1%:M.",
            "VernacDefinition",
            "026ea442cefbd4fb4901f378791562931aaf9e12"
        ],
        [
            "Lemma mx_irrP : mx_irreducible <-> n > 0 /\\ (forall U, @mxmodule n U -> U != 0 -> row_full U).",
            "VernacStartTheoremProof",
            "164a64d0cfd0b1ca94475f89bbdb010eda7b1dbb"
        ],
        [
            "rewrite /mx_irreducible /mxsimple mxmodule1 -mxrank_eq0 mxrank1 -lt0n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "do [split=> [[_ -> irrG] | [-> irrG]]; split=> // U] => [modU | modU _] nzU.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -sub1mx (irrG U) ?submx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite sub1mx irrG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_Schur : mx_irreducible -> forall f, centgmx rG f -> f != 0 -> f \\in unitmx.",
            "VernacStartTheoremProof",
            "3e499443d3b60415e8843694337e55f36ff687cd"
        ],
        [
            "move/mx_Schur_onto=> irrG f.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -row_full_dom_hom -!row_full_unit -!sub1mx => cGf nz.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -[f]mul1mx irrG ?submx1 ?mxmodule1 ?mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mx_absolutely_irreducible := (n > 0) && row_full E_G.",
            "VernacDefinition",
            "6606ab87f96f56b19d73b794fed15e0686039756"
        ],
        [
            "Lemma mx_abs_irrP : reflect (n > 0 /\\ exists a_, forall A, A = \\sum_(x in G) a_ x A *: rG x) mx_absolutely_irreducible.",
            "VernacStartTheoremProof",
            "dd5917705ff9de84afb2a5496109e1a33843455f"
        ],
        [
            "have G_1 := group1 G; have bijG := enum_val_bij_in G_1.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "set h := enum_val in bijG; have Gh : h _ \\in G by apply: enum_valP.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "rewrite /mx_absolutely_irreducible; case: (n > 0); last by right; case.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: (iffP row_fullP) => [[E' E'G] | [_ [a_ a_G]]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split=> //; exists (fun x B => (mxvec B *m E') 0 (enum_rank_in G_1 x)) => B.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "apply: (can_inj mxvecK); rewrite -{1}[mxvec B]mulmx1 -{}E'G mulmxA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "move: {B E'}(_ *m E') => u; apply/rowP=> j.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite linear_sum (reindex h) //= mxE summxE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_big => [k| k _]; rewrite ?Gh // enum_valK_in mxE linearZ !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (\\matrix_(j, i) a_ (h i) (vec_mx (row j 1%:M))).",
            "VernacExtend",
            "00f5ac8fa9de75dde6079361c9a20b56dbd75ec7"
        ],
        [
            "apply/row_matrixP=> i; rewrite -[row i 1%:M]vec_mxK {}[vec_mx _]a_G.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/rowP=> j; rewrite linear_sum (reindex h) //= 2!mxE summxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_big => [k| k _]; [rewrite Gh | rewrite linearZ !mxE].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_abs_irr_cent_scalar : mx_absolutely_irreducible -> forall A, centgmx rG A -> is_scalar_mx A.",
            "VernacStartTheoremProof",
            "f54909588b96d56d385e4f1de3410b28873be981"
        ],
        [
            "case/mx_abs_irrP=> n_gt0 [a_ a_G] A /centgmxP cGA.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have{cGA a_G} cMA B: A *m B = B *m A.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {}[B]a_G mulmx_suml mulmx_sumr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => x Gx; rewrite -scalemxAl -scalemxAr cGA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose i0 := Ordinal n_gt0; apply/is_scalar_mxP; exists (A i0 i0).",
            "VernacExtend",
            "75145bc1a9529eed2b7b3b8064c17b2728c12df1"
        ],
        [
            "apply/matrixP=> i j; move/matrixP/(_ i0 j): (esym (cMA (delta_mx i0 i))).",
            "VernacExtend",
            "86bb0d3d5ae27b38aac15f69d532d662f1518315"
        ],
        [
            "rewrite -[A *m _]trmxK trmx_mul trmx_delta -!(@mul_delta_mx _ n 1 n 0) -!mulmxA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!rowE !mxE !big_ord1 !mxE !eqxx !mulr_natl /= andbT eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_abs_irrW : mx_absolutely_irreducible -> mx_irreducible.",
            "VernacStartTheoremProof",
            "ee727f09f7cc0f2f402c6685018be0cb91d10727"
        ],
        [
            "case/mx_abs_irrP=> n_gt0 [a_ a_G]; apply/mx_irrP; split=> // U Umod.",
            "VernacExtend",
            "58168c4367f5c8fd5aef7600205b564e8c5f4f4d"
        ],
        [
            "case/rowV0Pn=> u Uu; rewrite -mxrank_eq0 -lt0n row_leq_rank -sub1mx.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case/submxP: Uu => v ->{u} /row_freeP[u' vK]; apply/row_subP=> i.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "rewrite rowE scalar_mxC -{}vK -2![_ *m _]mulmxA; move: {u' i}(u' *m _) => A.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite mulmx_sub {v}// [A]a_G linear_sum summx_sub //= => x Gx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite linearZ /= scalemx_sub // (mxmoduleP Umod).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma linear_mx_abs_irr : n = 1%N -> mx_absolutely_irreducible.",
            "VernacStartTheoremProof",
            "9ee9db679c3dc67edb7445478bf8d2064522db80"
        ],
        [
            "move=> n1; rewrite /mx_absolutely_irreducible /row_full eqn_leq rank_leq_col.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite {1 2 3}n1 /= lt0n mxrank_eq0; apply: contraTneq envelop_mx1 => ->.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite eqmx0 submx0 mxvec_eq0 -mxrank_eq0 mxrank1 n1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abelian_abs_irr : abelian G -> mx_absolutely_irreducible = (n == 1%N).",
            "VernacStartTheoremProof",
            "323129078cceb6f5aa14a59c1a0733807d68874a"
        ],
        [
            "move=> cGG; apply/idP/eqP=> [absG|]; last exact: linear_mx_abs_irr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [n_gt0 _] := andP absG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose M := <<delta_mx 0 (Ordinal n_gt0) : 'rV[F]_n>>%MS.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have rM: \\rank M = 1%N by rewrite genmxE mxrank_delta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices defM: (M == 1%:M)%MS by rewrite (eqmxP defM) mxrank1 in rM.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "case: (mx_abs_irrW absG) => _ _ ->; rewrite ?submx1 -?mxrank_eq0 ?rM //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "apply/mxmoduleP=> x Gx; suffices: is_scalar_mx (rG x).",
            "VernacExtend",
            "dfa05d3b0a5e1c7ec991a6f8078352fd27d3a8be"
        ],
        [
            "by case/is_scalar_mxP=> a ->; rewrite mul_mx_scalar scalemx_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (mx_abs_irr_cent_scalar absG).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/centgmxP=> y Gy; rewrite -!repr_mxM // (centsP cGG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OneRepresentation.",
            "VernacEndSegment",
            "f5917bfc39a430b3f41ac2a8c17476b69ca6c0d8"
        ],
        [
            "Arguments mxmoduleP {gT G n rG m U}.",
            "VernacArguments",
            "e3a5b958ac32b2e7996c161950699407c01b0371"
        ],
        [
            "Arguments envelop_mxP {gT G n rG A}.",
            "VernacArguments",
            "9485bf5c7241a570afd741a59c3030353bd537a3"
        ],
        [
            "Arguments hom_mxP {gT G n rG m f W}.",
            "VernacArguments",
            "b84bed970c60ee3bf944f0acecc4409dac95c0a7"
        ],
        [
            "Arguments rfix_mxP {gT G n rG m W}.",
            "VernacArguments",
            "f23a5b58f45b779f4af9a123d194d63d6dcfc810"
        ],
        [
            "Arguments cyclic_mxP {gT G n rG u v}.",
            "VernacArguments",
            "d9aa0a34df68f39dfae7a41014d89d5bc8f20bc7"
        ],
        [
            "Arguments annihilator_mxP {gT G n rG u A}.",
            "VernacArguments",
            "b0c35440afbcc25066bae3cc100ef62963d594dd"
        ],
        [
            "Arguments row_hom_mxP {gT G n rG u v}.",
            "VernacArguments",
            "2c70c1568ce5ac8854452bda9c9d676dea4c941c"
        ],
        [
            "Arguments mxsimple_isoP {gT G n rG U V}.",
            "VernacArguments",
            "b4b3d274a216eef658936374252226cc03ef2348"
        ],
        [
            "Arguments socleP {gT G n rG sG0 W W'}.",
            "VernacArguments",
            "05b9d54cac7cbca024efa5c31665f5f2974dd378"
        ],
        [
            "Arguments mx_abs_irrP {gT G n rG}.",
            "VernacArguments",
            "f4467ddaa9c7fbc54f774c1555dfda66ae78efe8"
        ],
        [
            "Arguments val_submod {n U m} W.",
            "VernacArguments",
            "91361e92b48003881f25677bb51e7b3463d7e2b8"
        ],
        [
            "Arguments in_submod {n} U {m} W.",
            "VernacArguments",
            "d5610b0ed5c71809c586296d373df0e2a3f92e7b"
        ],
        [
            "Arguments val_submodK {n U m} W : rename.",
            "VernacArguments",
            "3e6a45d4e78c77886ee61ed6f19bc88bf702fdf0"
        ],
        [
            "Arguments in_submodK {n U m} [W] sWU.",
            "VernacArguments",
            "6f5f92d476453d66b7a9f7e2b7f399423c69d04c"
        ],
        [
            "Arguments val_submod_inj {n U m} [W1 W2] : rename.",
            "VernacArguments",
            "157260b8bd3d068092bdb50e48bfd957fe7231ad"
        ],
        [
            "Arguments val_factmod {n U m} W.",
            "VernacArguments",
            "d426dc6ef177d4572cd44029d8e886b322d6b590"
        ],
        [
            "Arguments in_factmod {n} U {m} W.",
            "VernacArguments",
            "c982ca48949743e1242a004d0457ca58a987fc63"
        ],
        [
            "Arguments val_factmodK {n U m} W : rename.",
            "VernacArguments",
            "577e3b9fbcc823d2bb5da4dffdbe723a05343e14"
        ],
        [
            "Arguments in_factmodK {n} U {m} [W] sWU.",
            "VernacArguments",
            "ca6eff9d4dc8c6cb5db2d492bf147646e02fe3b8"
        ],
        [
            "Arguments val_factmod_inj {n U m} [W1 W2] : rename.",
            "VernacArguments",
            "253247b786986dc0f3b057daace4fc444ec70219"
        ],
        [
            "Section Proper.",
            "VernacBeginSection",
            "9a150e6c9bf6a8aced94b8e16fd1866700e54808"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (n' : nat).",
            "VernacAssumption",
            "ae3370e994920ec9224b090b93a7063ac68165c5"
        ],
        [
            "Local Notation n := n'.+1.",
            "VernacSyntacticDefinition",
            "a44d7133197df31a38212ab1d7bfb6ec0dc123a2"
        ],
        [
            "Variable rG : mx_representation F G n.",
            "VernacAssumption",
            "653411e19564771e63ef6370afdba6d6a15b3c9c"
        ],
        [
            "Lemma envelop_mx_ring : mxring (enveloping_algebra_mx rG).",
            "VernacStartTheoremProof",
            "4ce4bb79bafd643060c2fed1b8cd5084099d6121"
        ],
        [
            "apply/andP; split; first by apply/mulsmx_subP; apply: envelop_mxM.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/mxring_idP; exists 1%:M; split=> *; rewrite ?mulmx1 ?mul1mx //.",
            "VernacExtend",
            "a18ef52b94902a4405e9607357a3f7e142145a08"
        ],
        [
            "by rewrite -mxrank_eq0 mxrank1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: envelop_mx1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Proper.",
            "VernacEndSegment",
            "888ca636fcf17dc3e946bf2c0088a041091f7a81"
        ],
        [
            "Section JacobsonDensity.",
            "VernacBeginSection",
            "09c3219a0f514777dfacc34ee5659927a72a72f9"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (n : nat).",
            "VernacAssumption",
            "91e3bbcc97956621c800159c6bed8d799c65412c"
        ],
        [
            "Variable rG : mx_representation F G n.",
            "VernacAssumption",
            "653411e19564771e63ef6370afdba6d6a15b3c9c"
        ],
        [
            "Hypothesis irrG : mx_irreducible rG.",
            "VernacAssumption",
            "560daadaa8042f69cdcc84b835b2ff49727390d2"
        ],
        [
            "Local Notation E_G := (enveloping_algebra_mx rG).",
            "VernacSyntacticDefinition",
            "94357c071d2c5d02c84a40d10d49f15cfa490e0a"
        ],
        [
            "Local Notation Hom_G := 'C(E_G)%MS.",
            "VernacSyntacticDefinition",
            "0d2ed4f53879550b96078c762be49cb9a5eb05d6"
        ],
        [
            "Lemma mx_Jacobson_density : ('C(Hom_G) <= E_G)%MS.",
            "VernacStartTheoremProof",
            "c8dbc670a5cbf8c425435811b266326162492302"
        ],
        [
            "apply/row_subP=> iB; rewrite -[row iB _]vec_mxK; move defB: (vec_mx _) => B.",
            "VernacExtend",
            "dc718d25de68f54fd287715597f582bd4482cb79"
        ],
        [
            "have{defB} cBcE: (B \\in 'C(Hom_G))%MS by rewrite -defB vec_mxK row_sub.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have rGnP: mx_repr G (fun x => lin_mx (mulmxr (rG x)) : 'A_n).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=> [|x y Gx Gy]; apply/row_matrixP=> i.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by rewrite !rowE mul_rV_lin repr_mx1 /= !mulmx1 vec_mxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite !rowE mulmxA !mul_rV_lin repr_mxM //= mxvecK mulmxA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move def_rGn: (MxRepresentation rGnP) => rGn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "pose E_Gn := enveloping_algebra_mx rGn.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose e1 : 'rV[F]_(n ^ 2) := mxvec 1%:M; pose U := cyclic_mx rGn e1.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have U_e1: (e1 <= U)%MS by rewrite cyclic_mx_id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have modU: mxmodule rGn U by rewrite cyclic_mx_module.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose Bn : 'M_(n ^ 2) := lin_mx (mulmxr B).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "suffices U_e1Bn: (e1 *m Bn <= U)%MS.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite mul_vec_lin /= mul1mx in U_e1Bn; apply: submx_trans U_e1Bn _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite genmxE; apply/row_subP=> i; rewrite row_mul rowK mul_vec_lin_row.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by rewrite -def_rGn mul_vec_lin /= mul1mx (eq_row_sub i) ?rowK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{cBcE} cBncEn A: centgmx rGn A -> A *m Bn = Bn *m A.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -def_rGn => cAG; apply/row_matrixP; case/mxvec_indexP=> j k /=.",
            "VernacExtend",
            "4248d86054738ce616c460607bcb18485ce4fb5f"
        ],
        [
            "rewrite !rowE !mulmxA -mxvec_delta -(mul_delta_mx (0 : 'I_1)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mul_rV_lin mul_vec_lin /= -mulmxA; apply: (canLR vec_mxK).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply/row_matrixP=> i; set dj0 := delta_mx j 0.",
            "VernacExtend",
            "ac591433247162d5294d7c948ab3b309c2d6e368"
        ],
        [
            "pose Aij := row i \\o vec_mx \\o mulmxr A \\o mxvec \\o mulmx dj0.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have defAij := mul_rV_lin1 [linear of Aij]; rewrite /= {2}/Aij /= in defAij.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite -defAij row_mul -defAij -!mulmxA (cent_mxP cBcE) {k}//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite memmx_cent_envelop; apply/centgmxP=> x Gx; apply/row_matrixP=> k.",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "rewrite !row_mul !rowE !{}defAij /= -row_mul mulmxA mul_delta_mx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (row i _); rewrite -(mul_vec_lin (mulmxr_linear _ _)) -mulmxA.",
            "VernacExtend",
            "90723b7805fdae0b93bd8b98ae215a5658363919"
        ],
        [
            "by rewrite -(centgmxP cAG) // mulmxA mx_rV_lin.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices redGn: mx_completely_reducible rGn 1%:M.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "have [V modV defUV] := redGn _ modU (submx1 _); move/mxdirect_addsP=> dxUV.",
            "VernacExtend",
            "2254362b2c0ed4876e75651f139671300bdd453c"
        ],
        [
            "rewrite -(proj_mx_id dxUV U_e1) -mulmxA {}cBncEn 1?mulmxA ?proj_mx_sub //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -row_full_dom_hom -sub1mx -defUV proj_mx_hom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose W i : 'M[F]_(n ^ 2) := <<lin1_mx (mxvec \\o mulmx (delta_mx i 0))>>%MS.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have defW: (\\sum_i W i :=: 1%:M)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqmxP; rewrite submx1; apply/row_subP; case/mxvec_indexP=> i j.",
            "VernacExtend",
            "d2b5cda677db7cccf5ef77a900a1540a70cad316"
        ],
        [
            "rewrite row1 -mxvec_delta (sumsmx_sup i) // genmxE; apply/submxP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by exists (delta_mx 0 j); rewrite mul_rV_lin1 /= mul_delta_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: mxsemisimple_reducible; apply: (intro_mxsemisimple defW) => i _ nzWi.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "split=> // [|Vi modVi sViWi nzVi].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/mxmoduleP=> x Gx; rewrite genmxE (eqmxMr _ (genmxE _)) -def_rGn.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/row_subP=> j; rewrite rowE mulmxA !mul_rV_lin1 /= mxvecK -mulmxA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply/submxP; move: (_ *m rG x) => v; exists v; rewrite mul_rV_lin1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "do [rewrite !genmxE; set f := lin1_mx _] in sViWi *.",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "have f_free: row_free f.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/row_freeP; exists (lin1_mx (row i \\o vec_mx)); apply/row_matrixP=> j.",
            "VernacExtend",
            "7306598631f49144a12c136e87db318ce2833267"
        ],
        [
            "by rewrite row1 rowE mulmxA !mul_rV_lin1 /= mxvecK rowE !mul_delta_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose V := <<Vi *m pinvmx f>>%MS; have Vidf := mulmxKpV sViWi.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "suffices: (1%:M <= V)%MS by rewrite genmxE -(submxMfree _ _ f_free) mul1mx Vidf.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "case: irrG => _ _ ->; rewrite ?submx1 //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -mxrank_eq0 genmxE -(mxrankMfree _ f_free) Vidf mxrank_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/mxmoduleP=> x Gx; rewrite genmxE (eqmxMr _ (genmxE _)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(submxMfree _ _ f_free) Vidf.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: submx_trans (mxmoduleP modVi x Gx); rewrite -{2}Vidf.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/row_subP=> j; apply: (eq_row_sub j); rewrite row_mul -def_rGn.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by rewrite !(row_mul _ _ f) !mul_rV_lin1 /= mxvecK !row_mul !mulmxA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cent_mx_scalar_abs_irr : \\rank Hom_G <= 1 -> mx_absolutely_irreducible rG.",
            "VernacStartTheoremProof",
            "506b49b2531710239a2fdc203f8531540de3a232"
        ],
        [
            "rewrite leqNgt => /(has_non_scalar_mxP (scalar_mx_cent _ _)) scal_cE.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/andP; split; first by case/mx_irrP: irrG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -sub1mx; apply: submx_trans mx_Jacobson_density.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply/memmx_subP=> B _; apply/cent_mxP=> A cGA.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "case scalA: (is_scalar_mx A); last by case: scal_cE; exists A; rewrite ?scalA.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/is_scalar_mxP: scalA => a ->; rewrite scalar_mxC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End JacobsonDensity.",
            "VernacEndSegment",
            "b646c1a2030284382e52d1d0d32e496be4b464e6"
        ],
        [
            "Section ChangeGroup.",
            "VernacBeginSection",
            "d785392a315f62cdabe6bccb95ed4f828d9b5f01"
        ],
        [
            "Variables (gT : finGroupType) (G H : {group gT}) (n : nat).",
            "VernacAssumption",
            "aba2086271c0da605cd29fe0f68f16268d9d29ae"
        ],
        [
            "Variables (rG : mx_representation F G n).",
            "VernacAssumption",
            "653411e19564771e63ef6370afdba6d6a15b3c9c"
        ],
        [
            "Section SubGroup.",
            "VernacBeginSection",
            "87d0601b38946fdc37e715474809ea1422e89aad"
        ],
        [
            "Hypothesis sHG : H \\subset G.",
            "VernacAssumption",
            "e6a1d44b7def616917f2606808485d59eddc6886"
        ],
        [
            "Local Notation rH := (subg_repr rG sHG).",
            "VernacSyntacticDefinition",
            "79cf3ad54145675370a27648229daebd105c0d0a"
        ],
        [
            "Lemma rfix_subg : rfix_mx rH = rfix_mx rG.",
            "VernacStartTheoremProof",
            "eea926fedbcc5c6827ad34f75ba09439afbdfc32"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Stabilisers.",
            "VernacBeginSection",
            "c46dd7f979547499d5303d2144d0e67b6697424a"
        ],
        [
            "Variables (m : nat) (U : 'M[F]_(m, n)).",
            "VernacAssumption",
            "90b0c46e6bfc9b98a6928a3daedda31ba141c154"
        ],
        [
            "Lemma rstabs_subg : rstabs rH U = H :&: rstabs rG U.",
            "VernacStartTheoremProof",
            "46a05e0ec37bdcf99143db59f406cd2fe4a28e01"
        ],
        [
            "by apply/setP=> x; rewrite !inE andbA -in_setI (setIidPl sHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_subg : mxmodule rG U -> mxmodule rH U.",
            "VernacStartTheoremProof",
            "fbf91d73f697a1f176ce98dc094cec0aa75cb99b"
        ],
        [
            "by rewrite /mxmodule rstabs_subg subsetI subxx; apply: subset_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Stabilisers.",
            "VernacEndSegment",
            "ee673af5e41692f20b24f8702505742e957666ae"
        ],
        [
            "Lemma mxsimple_subg M : mxmodule rG M -> mxsimple rH M -> mxsimple rG M.",
            "VernacStartTheoremProof",
            "c82190e37ce8f33a3b3545656d3e21fa3214ddb7"
        ],
        [
            "by move=> modM [_ nzM minM]; split=> // U /mxmodule_subg; apply: minM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subg_mx_irr : mx_irreducible rH -> mx_irreducible rG.",
            "VernacStartTheoremProof",
            "53d83e46855be3b08d541d44c6d0ef546978cde0"
        ],
        [
            "by apply: mxsimple_subg; apply: mxmodule1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subg_mx_abs_irr : mx_absolutely_irreducible rH -> mx_absolutely_irreducible rG.",
            "VernacStartTheoremProof",
            "e9b5715c65609a3297245fea8c0ee73fd06cc956"
        ],
        [
            "rewrite /mx_absolutely_irreducible -!sub1mx => /andP[-> /submx_trans-> //].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/row_subP=> i; rewrite rowK /= envelop_mx_id //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (subsetP sHG) ?enum_valP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SubGroup.",
            "VernacEndSegment",
            "40c0a6b4e508901e106e26c579f6100f44031972"
        ],
        [
            "Section SameGroup.",
            "VernacBeginSection",
            "68f4daf5ead17c536ffbfea96987c11a0b0ad8b1"
        ],
        [
            "Hypothesis eqGH : G :==: H.",
            "VernacAssumption",
            "19e0265dccf4d4501d0e9bd3e83cfeebfcd3c60c"
        ],
        [
            "Local Notation rH := (eqg_repr rG eqGH).",
            "VernacSyntacticDefinition",
            "2cb750ee83c10b52c0c735e2a829930a08371726"
        ],
        [
            "Lemma rfix_eqg : rfix_mx rH = rfix_mx rG.",
            "VernacStartTheoremProof",
            "bc9cac5c8ba2d905fde3985e29165f55a2a2949e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Stabilisers.",
            "VernacBeginSection",
            "c46dd7f979547499d5303d2144d0e67b6697424a"
        ],
        [
            "Variables (m : nat) (U : 'M[F]_(m, n)).",
            "VernacAssumption",
            "90b0c46e6bfc9b98a6928a3daedda31ba141c154"
        ],
        [
            "Lemma rstabs_eqg : rstabs rH U = rstabs rG U.",
            "VernacStartTheoremProof",
            "542726b9debd13a2f2cda108fb4f1f6de02951f1"
        ],
        [
            "by rewrite rstabs_subg -(eqP eqGH) (setIidPr _) ?rstabs_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_eqg : mxmodule rH U = mxmodule rG U.",
            "VernacStartTheoremProof",
            "20c81933424f1fd25ecf52fafacfbd118483c582"
        ],
        [
            "by rewrite /mxmodule rstabs_eqg -(eqP eqGH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Stabilisers.",
            "VernacEndSegment",
            "ee673af5e41692f20b24f8702505742e957666ae"
        ],
        [
            "Lemma mxsimple_eqg M : mxsimple rH M <-> mxsimple rG M.",
            "VernacStartTheoremProof",
            "86a2ac37aa3fb617c7cdc89c3bfbfa097807c0cf"
        ],
        [
            "rewrite /mxsimple mxmodule_eqg.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split=> [] [-> -> minM]; split=> // U modU; by apply: minM; rewrite mxmodule_eqg in modU *.",
            "VernacExtend",
            "77f020eeb3121cb7b7247d9f5829739fd3221e06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqg_mx_irr : mx_irreducible rH <-> mx_irreducible rG.",
            "VernacStartTheoremProof",
            "2a5fc28b07f61cb233e0f27b125bab3f87d1d13b"
        ],
        [
            "exact: mxsimple_eqg.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqg_mx_abs_irr : mx_absolutely_irreducible rH = mx_absolutely_irreducible rG.",
            "VernacStartTheoremProof",
            "6e652f4c9f3e71c1f0c01606118e4d078aa497c5"
        ],
        [
            "by congr (_ && (_ == _)); rewrite /enveloping_algebra_mx /= -(eqP eqGH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SameGroup.",
            "VernacEndSegment",
            "e302cca86824605df1e00e4f00877462087d5191"
        ],
        [
            "End ChangeGroup.",
            "VernacEndSegment",
            "88adb34fea9c08de8df109fdf7ca8a22b6440d3a"
        ],
        [
            "Section Morphpre.",
            "VernacBeginSection",
            "1684f3c85b255a09306746bb2a94bbf20669b36e"
        ],
        [
            "Variables (aT rT : finGroupType) (D : {group aT}) (f : {morphism D >-> rT}).",
            "VernacAssumption",
            "2a757b1a13339a354a9e9ac2eac5dac1c6c5e35b"
        ],
        [
            "Variables (G : {group rT}) (n : nat) (rG : mx_representation F G n).",
            "VernacAssumption",
            "f9d93371e157e11e1101c68ba604d633dfe7a60c"
        ],
        [
            "Local Notation rGf := (morphpre_repr f rG).",
            "VernacSyntacticDefinition",
            "09f6d904fab52b71524c2d2687e718bbc206e83f"
        ],
        [
            "Section Stabilisers.",
            "VernacBeginSection",
            "c46dd7f979547499d5303d2144d0e67b6697424a"
        ],
        [
            "Variables (m : nat) (U : 'M[F]_(m, n)).",
            "VernacAssumption",
            "90b0c46e6bfc9b98a6928a3daedda31ba141c154"
        ],
        [
            "Lemma rstabs_morphpre : rstabs rGf U = f @*^-1 (rstabs rG U).",
            "VernacStartTheoremProof",
            "28a12f233602e2b2ff26c7e3833e070db04b2827"
        ],
        [
            "by apply/setP=> x; rewrite !inE andbA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_morphpre : G \\subset f @* D -> mxmodule rGf U = mxmodule rG U.",
            "VernacStartTheoremProof",
            "f4e3a5b51ee2f61ddf93c4590da3c053a246c12e"
        ],
        [
            "by move=> sGf; rewrite /mxmodule rstabs_morphpre morphpreSK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Stabilisers.",
            "VernacEndSegment",
            "ee673af5e41692f20b24f8702505742e957666ae"
        ],
        [
            "Lemma rfix_morphpre (H : {set aT}) : H \\subset D -> (rfix_mx rGf H :=: rfix_mx rG (f @* H))%MS.",
            "VernacStartTheoremProof",
            "b443abc0406b3ccdee463331eda4f2d81aa697af"
        ],
        [
            "move=> sHD; apply/eqmxP/andP; split.",
            "VernacExtend",
            "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
        ],
        [
            "by apply/rfix_mxP=> _ /morphimP[x _ Hx ->]; rewrite rfix_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/rfix_mxP=> x Hx; rewrite rfix_mx_id ?mem_morphim ?(subsetP sHD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morphpre_mx_irr : G \\subset f @* D -> (mx_irreducible rGf <-> mx_irreducible rG).",
            "VernacStartTheoremProof",
            "075c17fde46b18503a6dc112e5763cc7b30163b6"
        ],
        [
            "move/mxmodule_morphpre=> modG; split=> /mx_irrP[n_gt0 irrG]; by apply/mx_irrP; split=> // U modU; apply: irrG; rewrite modG in modU *.",
            "VernacExtend",
            "dd76215f84b5ec723bc22942b73281b86cf324ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morphpre_mx_abs_irr : G \\subset f @* D -> mx_absolutely_irreducible rGf = mx_absolutely_irreducible rG.",
            "VernacStartTheoremProof",
            "9e4a7623a918cd872552137d0cb89dcc42a3c810"
        ],
        [
            "move=> sGfD; congr (_ && (_ == _)); apply/eqP; rewrite mxrank_leqif_sup //.",
            "VernacExtend",
            "bdc4ae83db373e681e6bd4019758df06d36e5071"
        ],
        [
            "apply/row_subP=> i; rewrite rowK.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case/morphimP: (subsetP sGfD _ (enum_valP i)) => x Dx _ def_i.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite def_i (envelop_mx_id rGf) // !inE Dx -def_i enum_valP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/row_subP=> i; rewrite rowK (envelop_mx_id rG) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case/morphpreP: (enum_valP i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Morphpre.",
            "VernacEndSegment",
            "184837503a9980428bff8d3499c2fbc66eb6514a"
        ],
        [
            "Section Morphim.",
            "VernacBeginSection",
            "4646452bcbeec569fe6b270cd8e4d27da72b6079"
        ],
        [
            "Variables (aT rT : finGroupType) (G D : {group aT}) (f : {morphism D >-> rT}).",
            "VernacAssumption",
            "0f15414801b90443836b235fe222ba6fbef00dbf"
        ],
        [
            "Variables (n : nat) (rGf : mx_representation F (f @* G) n).",
            "VernacAssumption",
            "8264821afb74be3320f213283a9f2bd18e4a31ed"
        ],
        [
            "Hypothesis sGD : G \\subset D.",
            "VernacAssumption",
            "e5bee542dae4b94e2f2a5d0212db17bcb357c2f3"
        ],
        [
            "Let sG_f'fG : G \\subset f @*^-1 (f @* G).",
            "VernacDefinition",
            "aba3ee5142e8a299822ccb8f6cde14c98db6f567"
        ],
        [
            "by rewrite -sub_morphim_pre.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation rG := (morphim_repr rGf sGD).",
            "VernacSyntacticDefinition",
            "72d0cd9056150452188ee7f86beab15f82396fc7"
        ],
        [
            "Section Stabilisers.",
            "VernacBeginSection",
            "c46dd7f979547499d5303d2144d0e67b6697424a"
        ],
        [
            "Variables (m : nat) (U : 'M[F]_(m, n)).",
            "VernacAssumption",
            "90b0c46e6bfc9b98a6928a3daedda31ba141c154"
        ],
        [
            "Lemma rstabs_morphim : rstabs rG U = G :&: f @*^-1 rstabs rGf U.",
            "VernacStartTheoremProof",
            "684d8c6e35270025954528e822caf482095dc2ba"
        ],
        [
            "by rewrite -rstabs_morphpre -(rstabs_subg _ sG_f'fG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_morphim : mxmodule rG U = mxmodule rGf U.",
            "VernacStartTheoremProof",
            "36744971ed69c0a7af8f08a46b59aa8845379d7a"
        ],
        [
            "by rewrite /mxmodule rstabs_morphim subsetI subxx -sub_morphim_pre.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Stabilisers.",
            "VernacEndSegment",
            "ee673af5e41692f20b24f8702505742e957666ae"
        ],
        [
            "Lemma rfix_morphim (H : {set aT}) : H \\subset D -> (rfix_mx rG H :=: rfix_mx rGf (f @* H))%MS.",
            "VernacStartTheoremProof",
            "582d077beb98f82c8c8e68a0519ab0b46d8537c2"
        ],
        [
            "exact: rfix_morphpre.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsimple_morphim M : mxsimple rG M <-> mxsimple rGf M.",
            "VernacStartTheoremProof",
            "dfc81e938ad58f6114f3e2c54be057dee322fd29"
        ],
        [
            "rewrite /mxsimple mxmodule_morphim.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split=> [] [-> -> minM]; split=> // U modU; by apply: minM; rewrite mxmodule_morphim in modU *.",
            "VernacExtend",
            "77f020eeb3121cb7b7247d9f5829739fd3221e06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morphim_mx_irr : (mx_irreducible rG <-> mx_irreducible rGf).",
            "VernacStartTheoremProof",
            "47eef8f281cd7009b82668710d081bb4d7eb30fc"
        ],
        [
            "exact: mxsimple_morphim.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma morphim_mx_abs_irr : mx_absolutely_irreducible rG = mx_absolutely_irreducible rGf.",
            "VernacStartTheoremProof",
            "6b9da3510d0aab3c86088f0e71ab0716248fa533"
        ],
        [
            "have fG_onto: f @* G \\subset restrm sGD f @* G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite morphim_restrm setIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(morphpre_mx_abs_irr _ fG_onto); congr (_ && (_ == _)).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite /enveloping_algebra_mx /= morphpre_restrm (setIidPl _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Morphim.",
            "VernacEndSegment",
            "168fbc3a2a73e55e94c79bdb37226af0d77bd3d8"
        ],
        [
            "Section Submodule.",
            "VernacBeginSection",
            "a282158864e8925cd302722674756943d482c1e0"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (n : nat).",
            "VernacAssumption",
            "91e3bbcc97956621c800159c6bed8d799c65412c"
        ],
        [
            "Variables (rG : mx_representation F G n) (U : 'M[F]_n) (Umod : mxmodule rG U).",
            "VernacAssumption",
            "2cc42811f4260bc720c8ffba6ce2ad0b248e14ea"
        ],
        [
            "Local Notation rU := (submod_repr Umod).",
            "VernacSyntacticDefinition",
            "aeff82c509509d87be444aaef7f06eafa4f90a5f"
        ],
        [
            "Local Notation rU' := (factmod_repr Umod).",
            "VernacSyntacticDefinition",
            "6cbafc955985d68e7fe64407ab1692c890db6d2e"
        ],
        [
            "Lemma rfix_submod (H : {set gT}) : H \\subset G -> (rfix_mx rU H :=: in_submod U (U :&: rfix_mx rG H))%MS.",
            "VernacStartTheoremProof",
            "14cf3ff0b6d61076d5993c44c494eb984246ece6"
        ],
        [
            "move=> sHG; apply/eqmxP/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/rfix_mxP=> x Hx; rewrite -in_submodJ ?capmxSl //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (rfix_mxP H _) ?capmxSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -val_submodS in_submodK ?capmxSl // sub_capmx val_submodP //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/rfix_mxP=> x Hx.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -(val_submodJ Umod) ?(subsetP sHG) ?rfix_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rfix_factmod (H : {set gT}) : H \\subset G -> (in_factmod U (rfix_mx rG H) <= rfix_mx rU' H)%MS.",
            "VernacStartTheoremProof",
            "01ce65b2e279fee32fb97fd969d32ee09018c724"
        ],
        [
            "move=> sHG; apply/rfix_mxP=> x Hx.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -(in_factmodJ Umod) ?(subsetP sHG) ?rfix_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstab_submod m (W : 'M_(m, \\rank U)) : rstab rU W = rstab rG (val_submod W).",
            "VernacStartTheoremProof",
            "328d783d406ba351476042e4e3bfe26aa3b462d5"
        ],
        [
            "apply/setP=> x; rewrite !inE; apply: andb_id2l => Gx.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite -(inj_eq val_submod_inj) val_submodJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstabs_submod m (W : 'M_(m, \\rank U)) : rstabs rU W = rstabs rG (val_submod W).",
            "VernacStartTheoremProof",
            "2ddde829c6c5d4959e8ff1f04e0e8643d2aacd3a"
        ],
        [
            "apply/setP=> x; rewrite !inE; apply: andb_id2l => Gx.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite -val_submodS val_submodJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_submod_module m (W : 'M_(m, \\rank U)) : mxmodule rG (val_submod W) = mxmodule rU W.",
            "VernacStartTheoremProof",
            "665d19af2fc57570982d78811756cc939fc73f1a"
        ],
        [
            "by rewrite /mxmodule rstabs_submod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_submod_module m (V : 'M_(m, n)) : (V <= U)%MS -> mxmodule rU (in_submod U V) = mxmodule rG V.",
            "VernacStartTheoremProof",
            "290af46b13a278e9337692348ccb9ff83dd65cf9"
        ],
        [
            "by move=> sVU; rewrite -val_submod_module in_submodK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstab_factmod m (W : 'M_(m, n)) : rstab rG W \\subset rstab rU' (in_factmod U W).",
            "VernacStartTheoremProof",
            "a1ed9de0dcb45130f579fab9ddf22c395288a6a6"
        ],
        [
            "by apply/subsetP=> x /setIdP[Gx /eqP cUW]; rewrite inE Gx -in_factmodJ //= cUW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstabs_factmod m (W : 'M_(m, \\rank (cokermx U))) : rstabs rU' W = rstabs rG (U + val_factmod W)%MS.",
            "VernacStartTheoremProof",
            "ef4b50c87bcab8fbb2c10d2fa85fbdf432fbd6c4"
        ],
        [
            "apply/setP=> x; rewrite !inE; apply: andb_id2l => Gx.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite addsmxMr addsmx_sub (submx_trans (mxmoduleP Umod x Gx)) ?addsmxSl //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -val_factmodS val_factmodJ //= val_factmodS; apply/idP/idP=> nWx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (submx_trans (addsmxSr U _)) // -(in_factmodsK (addsmxSl U _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addsmxS // val_factmodS in_factmod_addsK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite in_factmodE (submx_trans (submxMr _ nWx)) // -in_factmodE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite in_factmod_addsK val_factmodK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_factmod_module m (W : 'M_(m, \\rank (cokermx U))) : mxmodule rG (U + val_factmod W)%MS = mxmodule rU' W.",
            "VernacStartTheoremProof",
            "e1977c3a0d5beb7b08ec19ca15c3da6429ad2e93"
        ],
        [
            "by rewrite /mxmodule rstabs_factmod.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_factmod_module m (V : 'M_(m, n)) : mxmodule rU' (in_factmod U V) = mxmodule rG (U + V)%MS.",
            "VernacStartTheoremProof",
            "ff38e51f9ea9d531f4c224bd55f72adb775f4ece"
        ],
        [
            "rewrite -(eqmx_module _ (in_factmodsK (addsmxSl U V))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite val_factmod_module (eqmx_module _ (in_factmod_addsK _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rker_submod : rker rU = rstab rG U.",
            "VernacStartTheoremProof",
            "e8bdf54866d22379c33029e81214445cd78a1a15"
        ],
        [
            "by rewrite /rker rstab_submod; apply: eqmx_rstab (val_submod1 U).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstab_norm : G \\subset 'N(rstab rG U).",
            "VernacStartTheoremProof",
            "3eb8abd59bd13779cec6b301e8dec1a9d40231f3"
        ],
        [
            "by rewrite -rker_submod rker_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstab_normal : rstab rG U <| G.",
            "VernacStartTheoremProof",
            "c7b88577653dda2e00324e83062974c2ac859991"
        ],
        [
            "by rewrite -rker_submod rker_normal.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma submod_mx_faithful : mx_faithful rU -> mx_faithful rG.",
            "VernacStartTheoremProof",
            "40cfe28e6e1e7786450618363d32a703033e1a03"
        ],
        [
            "by apply: subset_trans; rewrite rker_submod rstabS ?submx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rker_factmod : rker rG \\subset rker rU'.",
            "VernacStartTheoremProof",
            "ccb7626fdab6a6cbf77b1d996d2889e5b14fc885"
        ],
        [
            "apply/subsetP=> x /rkerP[Gx cVx].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite inE Gx /= /factmod_mx cVx mul1mx mulmx1 val_factmodK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factmod_mx_faithful : mx_faithful rU' -> mx_faithful rG.",
            "VernacStartTheoremProof",
            "2fbc2134cde4b3631b5db11a5a3cda0da4b48b58"
        ],
        [
            "exact: subset_trans rker_factmod.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma submod_mx_irr : mx_irreducible rU <-> mxsimple rG U.",
            "VernacStartTheoremProof",
            "abf3eb8b27697cc961e85093d96edd36552518b5"
        ],
        [
            "split=> [] [_ nzU simU].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -mxrank_eq0 mxrank1 mxrank_eq0 in nzU; split=> // V modV sVU nzV.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "rewrite -(in_submodK sVU) -val_submod1 val_submodS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(genmxE (in_submod U V)) simU ?genmxE ?submx1 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (eqmx_module _ (genmxE _)) in_submod_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -submx0 genmxE -val_submodS in_submodK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite linear0 eqmx0 submx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/mx_irrP; rewrite lt0n mxrank_eq0; split=> // V modV.",
            "VernacExtend",
            "877072eca2b60ab32889d658e076eb026578eeca"
        ],
        [
            "rewrite -(inj_eq val_submod_inj) linear0 -(eqmx_eq0 (genmxE _)) => nzV.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -sub1mx -val_submodS val_submod1 -(genmxE (val_submod V)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite simU ?genmxE ?val_submodP //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (eqmx_module _ (genmxE _)) val_submod_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Submodule.",
            "VernacEndSegment",
            "8b82c186002a03036b91aeb2bb336d35b5cc1246"
        ],
        [
            "Section Conjugate.",
            "VernacBeginSection",
            "71c758ad74b79f2b25ba737ddc19095bed006691"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (n : nat).",
            "VernacAssumption",
            "91e3bbcc97956621c800159c6bed8d799c65412c"
        ],
        [
            "Variables (rG : mx_representation F G n) (B : 'M[F]_n).",
            "VernacAssumption",
            "bf8f2a2dcfab4d1ccc4b528e8951d380bfdb2202"
        ],
        [
            "Hypothesis uB : B \\in unitmx.",
            "VernacAssumption",
            "d1594336ba940ddfd009845275b06c245d3f61c7"
        ],
        [
            "Local Notation rGB := (rconj_repr rG uB).",
            "VernacSyntacticDefinition",
            "adfe614dfdcb1f515529b2a961d192def711d2cc"
        ],
        [
            "Lemma rfix_conj (H : {set gT}) : (rfix_mx rGB H :=: B *m rfix_mx rG H *m invmx B)%MS.",
            "VernacStartTheoremProof",
            "526b695a6265c93371dc627d0897b840f611430e"
        ],
        [
            "apply/eqmxP/andP; split.",
            "VernacExtend",
            "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
        ],
        [
            "rewrite -mulmxA (eqmxMfull (_ *m _)) ?row_full_unit //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[rfix_mx rGB H](mulmxK uB) submxMr //; apply/rfix_mxP=> x Hx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply: (canRL (mulmxKV uB)); rewrite -(rconj_mxJ _ uB) mulmxK //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite rfix_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/rfix_mxP=> x Gx; rewrite -3!mulmxA; congr (_ *m _).",
            "VernacExtend",
            "91580bd9cdf2cad626638a70b66bf9b00afa41b1"
        ],
        [
            "by rewrite !mulmxA mulmxKV // rfix_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstabs_conj m (U : 'M_(m, n)) : rstabs rGB U = rstabs rG (U *m B).",
            "VernacStartTheoremProof",
            "c4538b96d48eddd287c74fee7400d136ae86f750"
        ],
        [
            "apply/setP=> x; rewrite !inE rconj_mxE !mulmxA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -{2}[U](mulmxK uB) submxMfree // row_free_unit unitmx_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_conj m (U : 'M_(m, n)) : mxmodule rGB U = mxmodule rG (U *m B).",
            "VernacStartTheoremProof",
            "4c2738d178ad4495ac0eb05bdc1e9f288bd9b905"
        ],
        [
            "by rewrite /mxmodule rstabs_conj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_mx_irr : mx_irreducible rGB <-> mx_irreducible rG.",
            "VernacStartTheoremProof",
            "68052eb98199791e42adc65d0dbabb8e85bae83a"
        ],
        [
            "have Bfree: row_free B by rewrite row_free_unit.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split => /mx_irrP[n_gt0 irrG]; apply/mx_irrP; split=> // U.",
            "VernacExtend",
            "075260d0817e08a7c1e422f0e14d9d7d1b649424"
        ],
        [
            "rewrite -[U](mulmxKV uB) -mxmodule_conj -mxrank_eq0 /row_full mxrankMfree //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mxrank_eq0; apply: irrG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -mxrank_eq0 /row_full -(mxrankMfree _ Bfree) mxmodule_conj mxrank_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: irrG.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Conjugate.",
            "VernacEndSegment",
            "cd11c05dc9b7f1aad69eb16be071ec39ede68b46"
        ],
        [
            "Section Quotient.",
            "VernacBeginSection",
            "42863e3b9465542087051a31120f1713f465d640"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (n : nat).",
            "VernacAssumption",
            "91e3bbcc97956621c800159c6bed8d799c65412c"
        ],
        [
            "Variables (rG : mx_representation F G n) (H : {group gT}).",
            "VernacAssumption",
            "399ca7df9ab23eac95fe5f1dd386bd5e2da1bf07"
        ],
        [
            "Hypotheses (krH : H \\subset rker rG) (nHG : G \\subset 'N(H)).",
            "VernacAssumption",
            "77ab5b504984cbcaf7f3f7c07de01ec037f34f73"
        ],
        [
            "Let nHGs := subsetP nHG.",
            "VernacDefinition",
            "4fa94418e832418fab1b723844ecb07bf60ea8e8"
        ],
        [
            "Local Notation rGH := (quo_repr krH nHG).",
            "VernacSyntacticDefinition",
            "3e0f4bd97a8a86c2beb51d494a80f2fc113fbcd3"
        ],
        [
            "Local Notation E_ r := (enveloping_algebra_mx r).",
            "VernacSyntacticDefinition",
            "4feabca43c9db54a117b6b87565d02ad8565f6ab"
        ],
        [
            "Lemma quo_mx_quotient : (E_ rGH :=: E_ rG)%MS.",
            "VernacStartTheoremProof",
            "db1eea1890600050cd6833592c8fae0b60dfb063"
        ],
        [
            "apply/eqmxP/andP; split; apply/row_subP=> i.",
            "VernacExtend",
            "acf5855cc010871228abcccac05ae5fee2482818"
        ],
        [
            "rewrite rowK; case/morphimP: (enum_valP i) => x _ Gx ->{i}.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite quo_repr_coset // (eq_row_sub (enum_rank_in Gx x)) // rowK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite enum_rankK_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite rowK -(quo_mx_coset krH nHG) ?enum_valP //; set Hx := coset H _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "have GHx: Hx \\in (G / H)%g by rewrite mem_quotient ?enum_valP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (eq_row_sub (enum_rank_in GHx Hx)) // rowK enum_rankK_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rfix_quo (K : {group gT}) : K \\subset G -> (rfix_mx rGH (K / H)%g :=: rfix_mx rG K)%MS.",
            "VernacStartTheoremProof",
            "f6e2dfe221816eb707c51770f04b3334a18f4286"
        ],
        [
            "move=> sKG; apply/eqmxP/andP; (split; apply/rfix_mxP) => [x Kx | Hx].",
            "VernacExtend",
            "b7d55d5cc9e609b184db748f6780e12224901e48"
        ],
        [
            "have Gx := subsetP sKG x Kx; rewrite -(quo_mx_coset krH nHG) // rfix_mx_id //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite mem_morphim ?(subsetP nHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/morphimP=> x _ Kx ->; have Gx := subsetP sKG x Kx.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "by rewrite quo_repr_coset ?rfix_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstabs_quo m (U : 'M_(m, n)) : rstabs rGH U = (rstabs rG U / H)%g.",
            "VernacStartTheoremProof",
            "6ec69eb911f6be4ab387567209bbaed8edf63a62"
        ],
        [
            "apply/setP=> Hx; rewrite !inE; apply/andP/idP=> [[]|] /morphimP[x Nx Gx ->{Hx}].",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite quo_repr_coset // => nUx; rewrite mem_morphim // inE Gx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/setIdP: Gx => Gx nUx; rewrite quo_repr_coset ?mem_morphim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_quo m (U : 'M_(m, n)) : mxmodule rGH U = mxmodule rG U.",
            "VernacStartTheoremProof",
            "ac8bb71e04a5c440561b4c65b6fcf415e87a0f3b"
        ],
        [
            "rewrite /mxmodule rstabs_quo quotientSGK // ?(subset_trans krH) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subsetP=> x; rewrite !inE mul1mx => /andP[-> /eqP->].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite /= mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quo_mx_irr : mx_irreducible rGH <-> mx_irreducible rG.",
            "VernacStartTheoremProof",
            "24498706db3760920a83ff74b5c59bfcf466f653"
        ],
        [
            "split; case/mx_irrP=> n_gt0 irrG; apply/mx_irrP; split=> // U modU; by apply: irrG; rewrite mxmodule_quo in modU *.",
            "VernacExtend",
            "8a7970ff11aff3bd286c08a023819cb7a4c610bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Quotient.",
            "VernacEndSegment",
            "2f78ece027a30c5be7689abb99041a16475da9f7"
        ],
        [
            "Section SplittingField.",
            "VernacBeginSection",
            "1bc35af9bb395e86aa66951e8ffaabc1b8a90765"
        ],
        [
            "Implicit Type gT : finGroupType.",
            "VernacReserve",
            "fbb7aa19a7971c5b10d380fd1f026e4fa401e829"
        ],
        [
            "Definition group_splitting_field gT (G : {group gT}) := forall n (rG : mx_representation F G n), mx_irreducible rG -> mx_absolutely_irreducible rG.",
            "VernacDefinition",
            "6881df1ee923bc418eb6ef0e0e1170e387ca4063"
        ],
        [
            "Definition group_closure_field gT := forall G : {group gT}, group_splitting_field G.",
            "VernacDefinition",
            "cfc778031d86073b75fc57cf001c4ac010aa3ca1"
        ],
        [
            "Lemma quotient_splitting_field gT (G : {group gT}) (H : {set gT}) : G \\subset 'N(H) -> group_splitting_field G -> group_splitting_field (G / H).",
            "VernacStartTheoremProof",
            "9c6e2fd3d837401c75ff0990dc0070ef61a44467"
        ],
        [
            "move=> nHG splitG n rGH irrGH.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite -(morphim_mx_abs_irr _ nHG) splitG //; apply/morphim_mx_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coset_splitting_field gT (H : {set gT}) : group_closure_field gT -> group_closure_field (coset_groupType H).",
            "VernacStartTheoremProof",
            "735a92dce818f8c0b5b5b9b498e90eda1c5d3c59"
        ],
        [
            "move=> split_gT Gbar; have ->: Gbar = (coset H @*^-1 Gbar / H)%G.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by apply: val_inj; rewrite /= /quotient morphpreK ?sub_im_coset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: quotient_splitting_field; [apply: subsetIl | apply: split_gT].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SplittingField.",
            "VernacEndSegment",
            "5652f56d1c9b35717646d31ff4e9a1bd3d1b7caa"
        ],
        [
            "Section Abelian.",
            "VernacBeginSection",
            "0a057f839b9b9c78cc35fe5808bc270ceeaca373"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Lemma mx_faithful_irr_center_cyclic n (rG : mx_representation F G n) : mx_faithful rG -> mx_irreducible rG -> cyclic 'Z(G).",
            "VernacStartTheoremProof",
            "96dab9dcd20d19c5100275aef688618869825f34"
        ],
        [
            "case: n rG => [|n] rG injG irrG; first by case/mx_irrP: irrG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/trivgP: injG => KrG1; pose rZ := subg_repr rG (center_sub _).",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "apply: (div_ring_mul_group_cyclic (repr_mx1 rZ)) (repr_mxM rZ) _ _; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exact: center_abelian.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "move=> x; rewrite -[[set _]]KrG1 !inE mul1mx -subr_eq0 andbC; set U := _ - _.",
            "VernacExtend",
            "08b421e4a82ee4b06ce888937579fc5af7d251b4"
        ],
        [
            "do 2![case/andP]=> Gx cGx; rewrite Gx /=; apply: (mx_Schur irrG).",
            "VernacExtend",
            "9c74624cac92f94e452c274a33342e43b2955888"
        ],
        [
            "apply/centgmxP=> y Gy; rewrite mulmxBl mulmxBr mulmx1 mul1mx.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -!repr_mxM // (centP cGx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_faithful_irr_abelian_cyclic n (rG : mx_representation F G n) : mx_faithful rG -> mx_irreducible rG -> abelian G -> cyclic G.",
            "VernacStartTheoremProof",
            "8474bd211b70563c5df1cc40bac71bd9e980922f"
        ],
        [
            "move=> injG irrG cGG; rewrite -(setIidPl cGG).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "exact: mx_faithful_irr_center_cyclic injG irrG.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis splitG : group_splitting_field G.",
            "VernacAssumption",
            "eb0725c03edbea33b1b3ec92d776dce18395db16"
        ],
        [
            "Lemma mx_irr_abelian_linear n (rG : mx_representation F G n) : mx_irreducible rG -> abelian G -> n = 1%N.",
            "VernacStartTheoremProof",
            "ed9e603dd73b25183eb1c183380a0e69c1783c8a"
        ],
        [
            "by move=> irrG cGG; apply/eqP; rewrite -(abelian_abs_irr rG) ?splitG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsimple_abelian_linear n (rG : mx_representation F G n) M : abelian G -> mxsimple rG M -> \\rank M = 1%N.",
            "VernacStartTheoremProof",
            "48edb0805c84583e5a347560a731ebfaed454f14"
        ],
        [
            "move=> cGG simM; have [modM _ _] := simM.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by move/(submod_mx_irr modM)/mx_irr_abelian_linear: simM => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma linear_mxsimple n (rG : mx_representation F G n) (M : 'M_n) : mxmodule rG M -> \\rank M = 1%N -> mxsimple rG M.",
            "VernacStartTheoremProof",
            "73734cf89bc9f05d98591ce85750b95d5db9cf0f"
        ],
        [
            "move=> modM rM1; apply/(submod_mx_irr modM).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply: mx_abs_irrW; rewrite linear_mx_abs_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Abelian.",
            "VernacEndSegment",
            "2d97d645a2bd469e77139d465e12f159c49f174f"
        ],
        [
            "Section AbelianQuotient.",
            "VernacBeginSection",
            "7b0e9d55fac87aab6fa9dfe17792effe1a890fe6"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Variables (n : nat) (rG : mx_representation F G n).",
            "VernacAssumption",
            "c5ca37fe80813f4456a5df2ee6c9919529c67144"
        ],
        [
            "Lemma center_kquo_cyclic : mx_irreducible rG -> cyclic 'Z(G / rker rG)%g.",
            "VernacStartTheoremProof",
            "5c17041a4bc49bece2ca944a1f03707d6cb201c7"
        ],
        [
            "move=> irrG; apply: mx_faithful_irr_center_cyclic (kquo_mx_faithful rG) _.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "exact/quo_mx_irr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma der1_sub_rker : group_splitting_field G -> mx_irreducible rG -> (G^`(1) \\subset rker rG)%g = (n == 1)%N.",
            "VernacStartTheoremProof",
            "53fbf87b6a8e41ac3ac27ae25c2352ff0b3ecefe"
        ],
        [
            "move=> splitG irrG; apply/idP/idP; last by move/eqP; apply: rker_linear.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/sub_der1_abelian; move/(abelian_abs_irr (kquo_repr rG))=> <-.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by apply: (quotient_splitting_field (rker_norm _) splitG); apply/quo_mx_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AbelianQuotient.",
            "VernacEndSegment",
            "068aa91d24d8af4065d798d84c88eb143d88fe2e"
        ],
        [
            "Section Similarity.",
            "VernacBeginSection",
            "b9a946335d5fc6022411fc57c14434f972b0d52c"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Local Notation reprG := (mx_representation F G).",
            "VernacSyntacticDefinition",
            "d2d1ff518519fe4466496ff759a62febc4291fa3"
        ],
        [
            "Variant mx_rsim n1 (rG1 : reprG n1) n2 (rG2 : reprG n2) : Prop := MxReprSim B of n1 = n2 & row_free B & forall x, x \\in G -> rG1 x *m B = B *m rG2 x.",
            "VernacInductive",
            "aaaefffd857e52d017042c3e3ff2cd215a6dc970"
        ],
        [
            "Lemma mxrank_rsim n1 n2 (rG1 : reprG n1) (rG2 : reprG n2) : mx_rsim rG1 rG2 -> n1 = n2.",
            "VernacStartTheoremProof",
            "e35c51f1e33d13ec6b19bf1516a1fffd1972a289"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_refl n (rG : reprG n) : mx_rsim rG rG.",
            "VernacStartTheoremProof",
            "e8b04349bccbb11afd06f628f6ade6132dc366d3"
        ],
        [
            "exists 1%:M => // [|x _]; first by rewrite row_free_unit unitmx1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mulmx1 mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_sym n1 n2 (rG1 : reprG n1) (rG2 : reprG n2) : mx_rsim rG1 rG2 -> mx_rsim rG2 rG1.",
            "VernacStartTheoremProof",
            "a62f60ecd2f2407671bb9475999279de9497107b"
        ],
        [
            "case=> B def_n1; rewrite def_n1 in rG1 B *.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite row_free_unit => injB homB; exists (invmx B) => // [|x Gx].",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "by rewrite row_free_unit unitmx_inv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: canRL (mulKmx injB) _; rewrite mulmxA -homB ?mulmxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_trans n1 n2 n3 (rG1 : reprG n1) (rG2 : reprG n2) (rG3 : reprG n3) : mx_rsim rG1 rG2 -> mx_rsim rG2 rG3 -> mx_rsim rG1 rG3.",
            "VernacStartTheoremProof",
            "19b01dcd5a9d26570b8e002626a3809386a38977"
        ],
        [
            "case=> [B1 defn1 freeB1 homB1] [B2 defn2 freeB2 homB2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (B1 *m B2); rewrite /row_free ?mxrankMfree 1?defn1 // => x Gx.",
            "VernacExtend",
            "111ac1be9ba1873c2d8489b85d634e06e3a5d86b"
        ],
        [
            "by rewrite mulmxA homB1 // -!mulmxA homB2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_def n1 n2 (rG1 : reprG n1) (rG2 : reprG n2) : mx_rsim rG1 rG2 -> exists B, exists2 B', B' *m B = 1%:M & forall x, x \\in G -> rG1 x = B *m rG2 x *m B'.",
            "VernacStartTheoremProof",
            "aebf99fed9bced261c514bc4795c879df85bd13f"
        ],
        [
            "case=> B def_n1; rewrite def_n1 in rG1 B *; rewrite row_free_unit => injB homB.",
            "VernacExtend",
            "c4a46ac89a9c7997fc10e59922c13d5e3d2b0b23"
        ],
        [
            "by exists B, (invmx B) => [|x Gx]; rewrite ?mulVmx // -homB // mulmxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_iso n (rG : reprG n) (U V : 'M_n) (modU : mxmodule rG U) (modV : mxmodule rG V) : mx_rsim (submod_repr modU) (submod_repr modV) <-> mx_iso rG U V.",
            "VernacStartTheoremProof",
            "b9f8c869d743313272f62e662424839a5675981f"
        ],
        [
            "split=> [[B eqrUV injB homB] | [f injf homf defV]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have: \\rank (U *m val_submod (in_submod U 1%:M *m B)) = \\rank U.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "do 2!rewrite mulmxA mxrankMfree ?row_base_free //.",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "by rewrite -(eqmxMr _ (val_submod1 U)) -in_submodE val_submodK mxrank1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/complete_unitmx => f injf defUf; exists f => //.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "apply/hom_mxP=> x Gx; rewrite -defUf -2!mulmxA -(val_submodJ modV) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(mulmxA _ B) -homB // val_submodE 3!(mulmxA U) (mulmxA _ _ B).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -in_submodE -in_submodJ //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [u ->] := submxP (mxmoduleP modU x Gx).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite in_submodE -mulmxA -defUf !mulmxA mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqmxP; rewrite -mxrank_leqif_eq.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mxrankMfree ?eqrUV ?row_free_unit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -defUf mulmxA val_submodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have eqrUV: \\rank U = \\rank V by rewrite -defV mxrankMfree ?row_free_unit.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (in_submod V (val_submod 1%:M *m f)) => // [|x Gx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /row_free {6}eqrUV -[_ == _]sub1mx -val_submodS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite in_submodK; last by rewrite -defV submxMr ?val_submodP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite val_submod1 -defV submxMr ?val_submod1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -in_submodJ; last by rewrite -defV submxMr ?val_submodP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -(hom_mxP (submx_trans (val_submodP _) homf)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(val_submodJ modU) // mul1mx 2!(mulmxA ((submod_repr _) x)) -val_submodE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_irr n1 n2 (rG1 : reprG n1) (rG2 : reprG n2) : mx_rsim rG1 rG2 -> mx_irreducible rG1 -> mx_irreducible rG2.",
            "VernacStartTheoremProof",
            "187f2d9778e1ad03b4442903522ee521f91b205c"
        ],
        [
            "case/mx_rsim_sym=> f def_n2; rewrite {n2}def_n2 in f rG2 * => injf homf.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case/mx_irrP=> n1_gt0 minG; apply/mx_irrP; split=> // U modU nzU.",
            "VernacExtend",
            "58168c4367f5c8fd5aef7600205b564e8c5f4f4d"
        ],
        [
            "rewrite /row_full -(mxrankMfree _ injf) -genmxE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: minG; last by rewrite -mxrank_eq0 genmxE mxrankMfree // mxrank_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (eqmx_module _ (genmxE _)); apply/mxmoduleP=> x Gx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -mulmxA -homf // mulmxA submxMr // (mxmoduleP modU).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_abs_irr n1 n2 (rG1 : reprG n1) (rG2 : reprG n2) : mx_rsim rG1 rG2 -> mx_absolutely_irreducible rG1 = mx_absolutely_irreducible rG2.",
            "VernacStartTheoremProof",
            "9a47a01d4514396a5e1e87d8527aeea878a64b6f"
        ],
        [
            "case=> f def_n2; rewrite -{n2}def_n2 in f rG2 *.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite row_free_unit => injf homf; congr (_ && (_ == _)).",
            "VernacExtend",
            "d95da12c0095726885402a7f0e86738a30a8e464"
        ],
        [
            "pose Eg (g : 'M[F]_n1) := lin_mx (mulmxr (invmx g) \\o mulmx g).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have free_Ef: row_free (Eg f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/row_freeP; exists (Eg (invmx f)); apply/row_matrixP=> i.",
            "VernacExtend",
            "48e0f6bc7bfee8fe6be415b72e1556efec2fa66a"
        ],
        [
            "rewrite rowE row1 mulmxA mul_rV_lin mx_rV_lin /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite invmxK !{1}mulmxA mulmxKV // -mulmxA mulKmx // vec_mxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "symmetry; rewrite -(mxrankMfree _ free_Ef); congr (\\rank _).",
            "VernacExtend",
            "8f8293bcc3a6343e06c575bbba08db23e4e19a49"
        ],
        [
            "apply/row_matrixP=> i; rewrite row_mul !rowK mul_vec_lin /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -homf ?enum_valP // mulmxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rker_mx_rsim n1 n2 (rG1 : reprG n1) (rG2 : reprG n2) : mx_rsim rG1 rG2 -> rker rG1 = rker rG2.",
            "VernacStartTheoremProof",
            "2f6dfe5bd3bb6f408e3a696e15f8b25b180a5bb5"
        ],
        [
            "case=> f def_n2; rewrite -{n2}def_n2 in f rG2 *.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite row_free_unit => injf homf.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/setP=> x; rewrite !inE !mul1mx; apply: andb_id2l => Gx.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite -(can_eq (mulmxK injf)) homf // -scalar_mxC (can_eq (mulKmx injf)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_faithful n1 n2 (rG1 : reprG n1) (rG2 : reprG n2) : mx_rsim rG1 rG2 -> mx_faithful rG1 = mx_faithful rG2.",
            "VernacStartTheoremProof",
            "c2d22c4c62edb40a7ce258e8305a9ca6e1cce8f5"
        ],
        [
            "by move=> simG12; rewrite /mx_faithful (rker_mx_rsim simG12).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_factmod n (rG : reprG n) U V (modU : mxmodule rG U) (modV : mxmodule rG V) : (U + V :=: 1%:M)%MS -> mxdirect (U + V) -> mx_rsim (factmod_repr modV) (submod_repr modU).",
            "VernacStartTheoremProof",
            "a82d783a58d85783082a524ac93e0c728dfaa02e"
        ],
        [
            "move=> addUV dxUV.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have eqUV: \\rank U = \\rank (cokermx V).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mxrank_coker -{3}(mxrank1 F n) -addUV (mxdirectP dxUV) addnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{dxUV} dxUV: (U :&: V = 0)%MS by apply/mxdirect_addsP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (in_submod U (val_factmod 1%:M *m proj_mx U V)) => // [|x Gx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /row_free -{6}eqUV -[_ == _]sub1mx -val_submodS val_submod1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite in_submodK ?proj_mx_sub // -{1}[U](proj_mx_id dxUV) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{1}(add_sub_fact_mod V U) mulmxDl proj_mx_0 ?val_submodP // add0r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite submxMr // val_factmodS submx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -in_submodJ ?proj_mx_sub // -(hom_mxP _) //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: submx_trans (submx1 _) _; rewrite -addUV proj_mx_hom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulmxA; congr (_ *m _); rewrite mulmxA -val_factmodE; apply/eqP.",
            "VernacExtend",
            "cf70e9f85fa92317530c4d200680b1504297e61b"
        ],
        [
            "rewrite eq_sym -subr_eq0 -mulmxBl proj_mx_0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[_ *m rG x](add_sub_fact_mod V) addrK val_submodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_rsim n1 n2 (rG1 : reprG n1) (rG2 : reprG n2) : mx_rsim rG1 rG2 -> {in G, forall x, \\tr (rG1 x) = \\tr (rG2 x)}.",
            "VernacStartTheoremProof",
            "fbda48a40ba53c70d75044cab6d3a93dba9fa6ce"
        ],
        [
            "case/mx_rsim_def=> B [B' B'B def_rG1] x Gx.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite def_rG1 // mxtrace_mulC mulmxA B'B mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_rsim_scalar n1 n2 (rG1 : reprG n1) (rG2 : reprG n2) x c : x \\in G -> mx_rsim rG1 rG2 -> rG1 x = c%:M -> rG2 x = c%:M.",
            "VernacStartTheoremProof",
            "80780ed7550f56178208b65960367a859296eeea"
        ],
        [
            "move=> Gx /mx_rsim_sym[B _ Bfree rG2_B] rG1x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: (row_free_inj Bfree); rewrite rG2_B // rG1x scalar_mxC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Similarity.",
            "VernacEndSegment",
            "0776ea936566ada37562198e995a4e229d610a09"
        ],
        [
            "Section Socle.",
            "VernacBeginSection",
            "2fe25b6f732fb038645bc021f44dceca4afbb615"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Variables (n : nat) (rG : mx_representation F G n) (sG : socleType rG).",
            "VernacAssumption",
            "2d2fd33c79fbb0ca70aa35ad0efb1f653f153a3a"
        ],
        [
            "Lemma socle_irr (W : sG) : mx_irreducible (socle_repr W).",
            "VernacStartTheoremProof",
            "c868f9e3f30361129f0b11735de9af2d3c86090a"
        ],
        [
            "by apply/submod_mx_irr; apply: socle_simple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma socle_rsimP (W1 W2 : sG) : reflect (mx_rsim (socle_repr W1) (socle_repr W2)) (W1 == W2).",
            "VernacStartTheoremProof",
            "4eea1677ff3de2168b598928ad8305053f266702"
        ],
        [
            "have [simW1 simW2] := (socle_simple W1, socle_simple W2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: (iffP (component_mx_isoP simW1 simW2)); move/mx_rsim_iso; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation mG U := (mxmodule rG U).",
            "VernacSyntacticDefinition",
            "40f910bf3000dad387eda373416219f33a1de44f"
        ],
        [
            "Local Notation sr modV := (submod_repr modV).",
            "VernacSyntacticDefinition",
            "7b9b34229a68f6fcb5684f49acacb6c369deb355"
        ],
        [
            "Lemma mx_rsim_in_submod U V (modU : mG U) (modV : mG V) : let U' := <<in_submod V U>>%MS in (U <= V)%MS -> exists modU' : mxmodule (sr modV) U', mx_rsim (sr modU) (sr modU').",
            "VernacStartTheoremProof",
            "71c640bab828822433a9d872479110089a5c7243"
        ],
        [
            "move=> U' sUV; have modU': mxmodule (sr modV) U'.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite (eqmx_module _ (genmxE _)) in_submod_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have rankU': \\rank U = \\rank U' by rewrite genmxE mxrank_in_submod.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose v1 := val_submod 1%:M; pose U1 := v1 _ U.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have sU1V: (U1 <= V)%MS by rewrite val_submod1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have sU1U': (in_submod V U1 <= U')%MS by rewrite genmxE submxMr ?val_submod1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists modU', (in_submod U' (in_submod V U1)) => // [|x Gx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/row_freeP; exists (v1 _ _ *m v1 _ _ *m in_submod U 1%:M).",
            "VernacExtend",
            "6a987de11991bc3ce6995c1155b240152d7f3429"
        ],
        [
            "by rewrite 2!mulmxA -in_submodE -!val_submodE !in_submodK ?val_submodK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -!in_submodJ // -(val_submodJ modU) // mul1mx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite 2!{1}in_submodE mulmxA (mulmxA _ U1) -val_submodE -!in_submodE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rsim_submod1 U (modU : mG U) : (U :=: 1%:M)%MS -> mx_rsim (sr modU) rG.",
            "VernacStartTheoremProof",
            "318767353c8404225182a4ec5006e7df8e312421"
        ],
        [
            "move=> U1; exists (val_submod 1%:M) => [||x Gx]; first by rewrite U1 mxrank1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /row_free val_submod1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -(val_submodJ modU) // mul1mx -val_submodE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_submod1 U (modU : mG U) : (U :=: 1%:M)%MS -> {in G, forall x, \\tr (sr modU x) = \\tr (rG x)}.",
            "VernacStartTheoremProof",
            "ab88073808338ec4d3ec640b17deb8cad3492249"
        ],
        [
            "by move=> defU; apply: mxtrace_rsim (rsim_submod1 modU defU).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_dadd_mod U V W (modU : mG U) (modV : mG V) (modW : mG W) : (U + V :=: W)%MS -> mxdirect (U + V) -> {in G, forall x, \\tr (sr modU x) + \\tr (sr modV x) = \\tr (sr modW x)}.",
            "VernacStartTheoremProof",
            "2e272bc85b917b527609a72d3f51d54ed8fdd591"
        ],
        [
            "move=> defW dxW x Gx; have [sUW sVW]: (U <= W)%MS /\\ (V <= W)%MS.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by apply/andP; rewrite -addsmx_sub defW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose U' := <<in_submod W U>>%MS; pose V' := <<in_submod W V>>%MS.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have addUV': (U' + V' :=: 1%:M)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqmxP; rewrite submx1 /= (adds_eqmx (genmxE _) (genmxE _)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -addsmxMr -val_submodS val_submod1 in_submodK ?defW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have dxUV': mxdirect (U' + V').",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqnP; rewrite /= addUV' mxrank1 !genmxE !mxrank_in_submod //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -(mxdirectP dxW) /= defW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [modU' simU] := mx_rsim_in_submod modU modW sUW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [modV' simV] := mx_rsim_in_submod modV modW sVW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (mxtrace_rsim simU) // (mxtrace_rsim simV) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(mxtrace_sub_fact_mod modV') addrC; congr (_ + _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by rewrite (mxtrace_rsim (mx_rsim_factmod modU' modV' addUV' dxUV')).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_dsum_mod (I : finType) (P : pred I) U W (modU : forall i, mG (U i)) (modW : mG W) : let S := (\\sum_(i | P i) U i)%MS in (S :=: W)%MS -> mxdirect S -> {in G, forall x, \\sum_(i | P i) \\tr (sr (modU i) x) = \\tr (sr modW x)}.",
            "VernacStartTheoremProof",
            "14f8f2071aad09c9569f0dac2a04805f7f94f158"
        ],
        [
            "move=> /= sumS dxS x Gx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: {P}_.+1 {-2}P (ltnSn #|P|) => // m IHm P lePm in W modW sumS dxS *.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have [j /= Pj | P0] := pickP P; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: sumS (_ x); rewrite !big_pred0 // mxrank0 => <- _ rWx.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by rewrite [rWx]flatmx0 linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ltnS (cardD1x Pj) in lePm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mxdirectE /= !(bigD1 j Pj) -mxdirectE mxdirect_addsE /= in dxS sumS *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [_ dxW' dxW] := and3P dxS; rewrite (sameP eqP mxdirect_addsP) in dxW.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite (IHm _ _ _ (sumsmx_module _ (fun i _ => modU i)) (eqmx_refl _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: mxtrace_dadd_mod.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_component U (simU : mxsimple rG U) : let V := component_mx rG U in let modV := component_mx_module rG U in let modU := mxsimple_module simU in {in G, forall x, \\tr (sr modV x) = \\tr (sr modU x) *+ (\\rank V %/ \\rank U)}.",
            "VernacStartTheoremProof",
            "1e5df98e5790b1b359c5660d38260421dc63d92e"
        ],
        [
            "move=> V modV modU x Gx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [I W S simW defV dxV] := component_mx_semisimple simU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(mxtrace_dsum_mod (fun i => mxsimple_module (simW i)) modV defV) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have rankU_gt0: \\rank U > 0 by rewrite lt0n mxrank_eq0; case simU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have isoW i: mx_iso rG U (W i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: component_mx_iso; rewrite ?simU // -defV (sumsmx_sup i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have ->: (\\rank V %/ \\rank U)%N = #|I|.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "symmetry; rewrite -(mulnK #|I| rankU_gt0); congr (_ %/ _)%N.",
            "VernacExtend",
            "8f8293bcc3a6343e06c575bbba08db23e4e19a49"
        ],
        [
            "rewrite -defV (mxdirectP dxV) /= -sum_nat_const.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; apply: mxrank_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -sumr_const; apply: eq_bigr => i _; symmetry.",
            "VernacExtend",
            "efdb64864b9afb8f711c36983b48329dd8ed5c63"
        ],
        [
            "by apply: mxtrace_rsim Gx; apply/mx_rsim_iso; apply: isoW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_Socle : let modS := Socle_module sG in {in G, forall x, \\tr (sr modS x) = \\sum_(W : sG) \\tr (socle_repr W x) *+ socle_mult W}.",
            "VernacStartTheoremProof",
            "5908fd2da1cb070a5280923000d0f9d4e1c665e1"
        ],
        [
            "move=> /= x Gx /=; pose modW (W : sG) := component_mx_module rG (socle_base W).",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "rewrite -(mxtrace_dsum_mod modW _ (eqmx_refl _) (Socle_direct sG)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => W _; rewrite (mxtrace_component (socle_simple W)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Socle.",
            "VernacEndSegment",
            "fa620300d81443647d9c5f338a0993322cc6cadd"
        ],
        [
            "Section Clifford.",
            "VernacBeginSection",
            "a909239a825802891140c2356185d4a69e4ea511"
        ],
        [
            "Variables (gT : finGroupType) (G H : {group gT}).",
            "VernacAssumption",
            "7daa1d9261ae1a6ccdcbdd91ed19876e2639bc72"
        ],
        [
            "Hypothesis nsHG : H <| G.",
            "VernacAssumption",
            "b65caca3255cc33c69716352f7de8fc96ccc9746"
        ],
        [
            "Variables (n : nat) (rG : mx_representation F G n).",
            "VernacAssumption",
            "c5ca37fe80813f4456a5df2ee6c9919529c67144"
        ],
        [
            "Let sHG := normal_sub nsHG.",
            "VernacDefinition",
            "c7f781c1c5f3c43b09fb36fa5b01e8c7c2d0fcf3"
        ],
        [
            "Let nHG := normal_norm nsHG.",
            "VernacDefinition",
            "870a0c74854cf6e9a0ab0057908246b28aa64d18"
        ],
        [
            "Let rH := subg_repr rG sHG.",
            "VernacDefinition",
            "ef38fd26ed023dc8f8ef5e8d96061bf0652dfe83"
        ],
        [
            "Lemma Clifford_simple M x : mxsimple rH M -> x \\in G -> mxsimple rH (M *m rG x).",
            "VernacStartTheoremProof",
            "c01bf0ed6ef78b57130551da37a4915ead16ee22"
        ],
        [
            "have modmG m U y: y \\in G -> (mxmodule rH) m U -> mxmodule rH (U *m rG y).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> Gy modU; apply/mxmoduleP=> h Hh; have Gh := subsetP sHG h Hh.",
            "VernacExtend",
            "fcbc4db6275a8d44907e8ed4b44d2f7f279ee662"
        ],
        [
            "rewrite -mulmxA -repr_mxM // conjgCV repr_mxM ?groupJ ?groupV // mulmxA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite submxMr ?(mxmoduleP modU) // -mem_conjg (normsP nHG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nzmG m y (U : 'M_(m, n)): y \\in G -> (U *m rG y == 0) = (U == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> Gy; rewrite -{1}(mul0mx m (rG y)) (can_eq (repr_mxK rG Gy)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=> [modM nzM simM] Gx; have Gx' := groupVr Gx.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "split=> [||U modU sUMx nzU]; rewrite ?modmG ?nzmG //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite -(repr_mxKV rG Gx U) submxMr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (simM (U *m _)) ?modmG ?nzmG // -(repr_mxK rG Gx M) submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_hom x m (U : 'M_(m, n)) : x \\in 'C_G(H) -> (U <= dom_hom_mx rH (rG x))%MS.",
            "VernacStartTheoremProof",
            "e077f0de5697e47e22cc66a4f7c8b9ed7e2ef937"
        ],
        [
            "case/setIP=> Gx cHx; apply/rV_subP=> v _{U}.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "apply/hom_mxP=> h Hh; have Gh := subsetP sHG h Hh.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "by rewrite -!mulmxA /= -!repr_mxM // (centP cHx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_iso x U : x \\in 'C_G(H) -> mx_iso rH U (U *m rG x).",
            "VernacStartTheoremProof",
            "7eac456cb92bd96a696b5c6b7a75554a27b80555"
        ],
        [
            "move=> cHx; have [Gx _] := setIP cHx.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by exists (rG x); rewrite ?repr_mx_unit ?Clifford_hom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_iso2 x U V : mx_iso rH U V -> x \\in G -> mx_iso rH (U *m rG x) (V *m rG x).",
            "VernacStartTheoremProof",
            "5bda364d269f7623908611a574342901d0625ca2"
        ],
        [
            "case=> [f injf homUf defV] Gx; have Gx' := groupVr Gx.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "pose fx := rG (x^-1)%g *m f *m rG x; exists fx; last 1 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !mulmxA repr_mxK //; apply: eqmxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !unitmx_mul andbC !repr_mx_unit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/hom_mxP=> h Hh; have Gh := subsetP sHG h Hh.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite -(mulmxA U) -repr_mxM // conjgCV repr_mxM ?groupJ // !mulmxA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !repr_mxK // (hom_mxP homUf) -?mem_conjg ?(normsP nHG) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !repr_mxM ?invgK ?groupM // !mulmxA repr_mxKV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_componentJ M x : mxsimple rH M -> x \\in G -> (component_mx rH (M *m rG x) :=: component_mx rH M *m rG x)%MS.",
            "VernacStartTheoremProof",
            "b84ea9fb90a19dfe128440841d753a623986a8b8"
        ],
        [
            "set simH := mxsimple rH; set cH := component_mx rH.",
            "VernacExtend",
            "7405ffc63057f1493a790d3f39e251cc5fefe81f"
        ],
        [
            "have actG: {in G, forall y M, simH M -> cH M *m rG y <= cH (M *m rG y)}%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> {M} y Gy /= M simM; have [I [U isoU def_cHM]] := component_mx_def simM.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite /cH def_cHM sumsmxMr; apply/sumsmx_subP=> i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply: mx_iso_component; [apply: Clifford_simple | apply: Clifford_iso2].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> simM Gx; apply/eqmxP; rewrite actG // -/cH.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite -{1}[cH _](repr_mxKV rG Gx) submxMr // -{2}[M](repr_mxK rG Gx).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite actG ?groupV //; apply: Clifford_simple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis irrG : mx_irreducible rG.",
            "VernacAssumption",
            "560daadaa8042f69cdcc84b835b2ff49727390d2"
        ],
        [
            "Lemma Clifford_basis M : mxsimple rH M -> {X : {set gT} | X \\subset G & let S := \\sum_(x in X) M *m rG x in S :=: 1%:M /\\ mxdirect S}%MS.",
            "VernacStartTheoremProof",
            "bf5bac93c5681a8307534036d0365a0475e6dc29"
        ],
        [
            "move=> simM.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have simMG (g : [subg G]) : mxsimple rH (M *m rG (val g)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: g => x Gx; apply: Clifford_simple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [|XG [defX1 dxX1]] := sum_mxsimple_direct_sub simMG (_ : _ :=: 1%:M)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqmxP; case irrG => _ _ ->; rewrite ?submx1 //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -submx0; apply/sumsmx_subP; move/(_ 1%g (erefl _)); apply: negP.",
            "VernacExtend",
            "bca3bca2279f831b145c80ada11ac60bbf16687a"
        ],
        [
            "by rewrite submx0 repr_mx1 mulmx1; case simM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/mxmoduleP=> x Gx; rewrite sumsmxMr; apply/sumsmx_subP=> [[y Gy]] /= _.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite (sumsmx_sup (subg G (y * x))) // subgK ?groupM // -mulmxA repr_mxM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (val @: XG); first by apply/subsetP=> ?; case/imsetP=> [[x Gx]] _ ->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have bij_val: {on val @: XG, bijective (@sgval _ G)}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (subg G) => [g _ | x]; first exact: sgvalK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/imsetP=> [[x' Gx]] _ ->; rewrite subgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have defXG g: (val g \\in val @: XG) = (g \\in XG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/imsetP/idP=> [[h XGh] | XGg]; [move/val_inj-> | exists g].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /= mxdirectE /= !(reindex _ bij_val) !(eq_bigl _ _ defXG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable sH : socleType rH.",
            "VernacAssumption",
            "a3ebaf09269d2fcd77487b9df285572543a21805"
        ],
        [
            "Definition Clifford_act (W : sH) x := let Gx := subgP (subg G x) in PackSocle (component_socle sH (Clifford_simple (socle_simple W) Gx)).",
            "VernacDefinition",
            "9fc28219309fec925f6558c540db93cc55c5feae"
        ],
        [
            "Let valWact W x : (Clifford_act W x :=: W *m rG (sgval (subg G x)))%MS.",
            "VernacDefinition",
            "3da6a85c4e5e9668a5a1fb21a4618f6bc078f872"
        ],
        [
            "rewrite PackSocleK; apply: Clifford_componentJ (subgP _).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "exact: socle_simple.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Clifford_is_action : is_action G Clifford_act.",
            "VernacStartTheoremProof",
            "b7fc7ec3b5eca75014c47c1b7a62b43ec7e0379b"
        ],
        [
            "split=> [x W W' eqWW' | W x y Gx Gy].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "pose Gx := subgP (subg G x); apply/socleP; apply/eqmxP.",
            "VernacExtend",
            "08f33165f5dc4fc60d6423368ea1a211aa303371"
        ],
        [
            "rewrite -(repr_mxK rG Gx W) -(repr_mxK rG Gx W'); apply: eqmxMr.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply: eqmx_trans (eqmx_sym _) (valWact _ _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -eqWW'; apply: valWact.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/socleP; rewrite !{1}valWact 2!{1}(eqmxMr _ (valWact _ _)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite !subgK ?groupM ?repr_mxM ?mulmxA ?andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Clifford_action := Action Clifford_is_action.",
            "VernacDefinition",
            "2aeabc7aa6f7f0cb80f87c0be2b31fc91995a43b"
        ],
        [
            "Local Notation \"'Cl\" := Clifford_action (at level 8) : action_scope.",
            "VernacNotation",
            "5cf83738975392164eec9363df4ba1372155cfbd"
        ],
        [
            "Lemma val_Clifford_act W x : x \\in G -> ('Cl%act W x :=: W *m rG x)%MS.",
            "VernacStartTheoremProof",
            "03f7b3ea6af2e5f5e5624235092a3f58a7b9d883"
        ],
        [
            "by move=> Gx; apply: eqmx_trans (valWact _ _) _; rewrite subgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_atrans : [transitive G, on [set: sH] | 'Cl].",
            "VernacStartTheoremProof",
            "0afee37704c1939fad510309c326c5b01ff21ad3"
        ],
        [
            "have [_ nz1 _] := irrG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: mxsimple_exists (mxmodule1 rH) nz1 _ _ => [[M simM _]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "pose W1 := PackSocle (component_socle sH simM).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have [X sXG [def1 _]] := Clifford_basis simM; move/subsetP: sXG => sXG.",
            "VernacExtend",
            "2254362b2c0ed4876e75651f139671300bdd453c"
        ],
        [
            "apply/imsetP; exists W1; first by rewrite inE.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "symmetry; apply/setP=> W; rewrite inE; have simW := socle_simple W.",
            "VernacExtend",
            "14329eeceb6b4479ae5b3c21afbfc406067481de"
        ],
        [
            "have:= submx1 (socle_base W); rewrite -def1 -[(\\sum_(x in X) _)%MS]mulmx1.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case/(hom_mxsemisimple_iso simW) => [x Xx _ | | x Xx isoMxW].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: Clifford_simple; rewrite ?sXG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: scalar_mx_hom.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have Gx := sXG x Xx; apply/imsetP; exists x => //; apply/socleP/eqmxP/eqmx_sym.",
            "VernacExtend",
            "b7279dc03f9faa3879ea84b574018850a5accf7a"
        ],
        [
            "apply: eqmx_trans (val_Clifford_act _ Gx) _; rewrite PackSocleK.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: eqmx_trans (eqmx_sym (Clifford_componentJ simM Gx)) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/eqmxP; rewrite (sameP genmxP eqP) !{1}genmx_component.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply/component_mx_isoP=> //; apply: Clifford_simple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_Socle1 : Socle sH = 1%:M.",
            "VernacStartTheoremProof",
            "ad040b6be083af0ad8bbe385035b7fe342c32ea5"
        ],
        [
            "case/imsetP: Clifford_atrans => W _ _; have simW := socle_simple W.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "have [X sXG [def1 _]] := Clifford_basis simW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite reducible_Socle1 //; apply: mxsemisimple_reducible.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply: intro_mxsemisimple def1 _ => x /(subsetP sXG) Gx _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: Clifford_simple.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_rank_components (W : sH) : (#|sH| * \\rank W)%N = n.",
            "VernacStartTheoremProof",
            "00b6673f1df3ce2e850f50dd1f02f8943cd07ab5"
        ],
        [
            "rewrite -{9}(mxrank1 F n) -Clifford_Socle1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mxdirectP (Socle_direct sH)) /= -sum_nat_const.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => W1 _; have [W0 _ W0G] := imsetP Clifford_atrans.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "have{W0G} W0G W': W' \\in orbit 'Cl G W0 by rewrite -W0G inE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [/orbitP[x Gx <-] /orbitP[y Gy <-]] := (W0G W, W0G W1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !{1}val_Clifford_act // !mxrankMfree // !repr_mx_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Clifford_component_basis M : mxsimple rH M -> {t : nat & {x_ : sH -> 'I_t -> gT | forall W, let sW := (\\sum_j M *m rG (x_ W j))%MS in [/\\ forall j, x_ W j \\in G, (sW :=: W)%MS & mxdirect sW]}}.",
            "VernacStartTheoremProof",
            "849be535df7a746efe97e9dd054286ee9871a750"
        ],
        [
            "move=> simM; pose t := (n %/ #|sH| %/ \\rank M)%N; exists t.",
            "VernacExtend",
            "d7ebe2c9218bc88fdf619424fb7a62acc39d2cdd"
        ],
        [
            "have [X /subsetP sXG [defX1 dxX1]] := Clifford_basis simM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose sMv (W : sH) x := (M *m rG x <= W)%MS; pose Xv := [pred x in X | sMv _ x].",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have sXvG W: {subset Xv W <= G} by move=> x /andP[/sXG].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have defW W: (\\sum_(x in Xv W) M *m rG x :=: W)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqmxP; rewrite -(geq_leqif (mxrank_leqif_eq _)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/sumsmx_subP=> x /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(leq_add2r (\\sum_(W' | W' != W) \\rank W')) -((bigD1 W) predT) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(mxdirectP (Socle_direct sH)) /= -/(Socle _) Clifford_Socle1 -defX1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: leq_trans (mxrankS _) (mxrank_sum_leqif _).1 => /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite (bigID (sMv W))%MS addsmxS //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/sumsmx_subP=> x /andP[Xx notW_Mx]; have Gx := sXG x Xx.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "have simMx := Clifford_simple simM Gx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose Wx := PackSocle (component_socle sH simMx).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have sMxWx: (M *m rG x <= Wx)%MS by rewrite PackSocleK component_mx_id.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (sumsmx_sup Wx) //; apply: contra notW_Mx => /eqP <-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have dxXv W: mxdirect (\\sum_(x in Xv W) M *m rG x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: dxX1; rewrite !mxdirectE /= !(bigID (sMv W) (mem X)) /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -mxdirectE mxdirect_addsE /= => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_t W: #|Xv W| = t.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /t -{1}(Clifford_rank_components W) mulKn 1?(cardD1 W) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -defW (mxdirectP (dxXv W)) /= (eq_bigr (fun _ => \\rank M)) => [|x].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite sum_nat_const mulnK //; last by rewrite lt0n mxrank_eq0; case simM.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/sXvG=> Gx; rewrite mxrankMfree // row_free_unit repr_mx_unit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (fun W i => enum_val (cast_ord (esym (def_t W)) i)) => W.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: {def_t}t / (def_t W) => sW.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: (pickP (Xv W)) => [x0 XvWx0 | XvW0]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/negP: (nz_socle W); rewrite -submx0 -defW big_pred0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{x0 XvWx0} reXv := reindex _ (enum_val_bij_in XvWx0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have def_sW: (sW :=: W)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: eqmx_trans (defW W); apply/eqmxP; apply/genmxP; congr <<_>>%MS.",
            "VernacExtend",
            "605452b065d029f2b765af6726910352a23a3d21"
        ],
        [
            "rewrite reXv /=; apply: eq_big => [j | j _]; first by have:= enum_valP j.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite cast_ord_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> // [j|]; first by rewrite (sXvG W) ?enum_valP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/mxdirectP; rewrite def_sW -(defW W) /= (mxdirectP (dxXv W)) /= reXv /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: eq_big => [j | j _]; [move: (enum_valP j) | rewrite cast_ord_id].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_astab : H <*> 'C_G(H) \\subset 'C([set: sH] | 'Cl).",
            "VernacStartTheoremProof",
            "901274a6e061da99ff48ee232bfebddd7a94f1fc"
        ],
        [
            "rewrite join_subG !subsetI sHG subsetIl /=; apply/andP; split.",
            "VernacExtend",
            "563747ab88f591bd67f85e19847b20501f275f62"
        ],
        [
            "apply/subsetP=> h Hh; have Gh := subsetP sHG h Hh; rewrite inE.",
            "VernacExtend",
            "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
        ],
        [
            "apply/subsetP=> W _; have simW := socle_simple W; have [modW _ _] := simW.",
            "VernacExtend",
            "979c5acda079ebad8f7bb7da92b264c073e7811e"
        ],
        [
            "have simWh: mxsimple rH (socle_base W *m rG h) by apply: Clifford_simple.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite inE -val_eqE /= PackSocleK eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/component_mx_isoP; rewrite ?subgK //; apply: component_mx_iso => //.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by apply: submx_trans (component_mx_id simW); move/mxmoduleP: modW => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subsetP=> z cHz; have [Gz _] := setIP cHz; rewrite inE.",
            "VernacExtend",
            "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
        ],
        [
            "apply/subsetP=> W _; have simW := socle_simple W; have [modW _ _] := simW.",
            "VernacExtend",
            "979c5acda079ebad8f7bb7da92b264c073e7811e"
        ],
        [
            "have simWz: mxsimple rH (socle_base W *m rG z) by apply: Clifford_simple.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite inE -val_eqE /= PackSocleK eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/component_mx_isoP; rewrite ?subgK //; apply: Clifford_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_astab1 (W : sH) : 'C[W | 'Cl] = rstabs rG W.",
            "VernacStartTheoremProof",
            "bcaf14eac7a41dd191c6c60d897aa73cd367b170"
        ],
        [
            "apply/setP=> x; rewrite !inE; apply: andb_id2l => Gx.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite sub1set inE (sameP eqP socleP) !val_Clifford_act //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite andb_idr // => sWxW; rewrite -mxrank_leqif_sup //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite mxrankMfree ?repr_mx_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Clifford_rstabs_simple (W : sH) : mxsimple (subg_repr rG (rstabs_sub rG W)) W.",
            "VernacStartTheoremProof",
            "edb5b9f9847d8f771cbb528a5cc9392ac9db7bf3"
        ],
        [
            "split => [||U modU sUW nzU]; last 2 [exact: nz_socle].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /mxmodule rstabs_subg setIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have modUH: mxmodule rH U.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/mxmoduleP=> h Hh; rewrite (mxmoduleP modU) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /= -Clifford_astab1 !(inE, sub1set) (subsetP sHG) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (astab_act (subsetP Clifford_astab h _)) ?inE //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mem_gen // inE Hh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (mxsimple_exists modUH nzU) => [[M simM sMU]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have [t [x_ /(_ W)[Gx_ defW _]]] := Clifford_component_basis simM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -defW; apply/sumsmx_subP=> j _; set x := x_ W j.",
            "VernacExtend",
            "fea1f00f88dd43d458877bdcbd82fb27783cf23e"
        ],
        [
            "have{Gx_} Gx: x \\in G by rewrite Gx_.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: submx_trans (submxMr _ sMU) _; apply: (mxmoduleP modU).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite inE -val_Clifford_act Gx //; set Wx := 'Cl%act W x.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "have [-> //= | neWxW] := eqVneq Wx W.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (simM) => _ /negP[]; rewrite -submx0.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite (canF_eq (actKin 'Cl Gx)) in neWxW.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(component_mx_disjoint _ _ neWxW); try exact: socle_simple.",
            "VernacExtend",
            "f029389b3edb7c5e0bb4138a32067088d93d2e5b"
        ],
        [
            "rewrite sub_capmx {1}(submx_trans sMU sUW) val_Clifford_act ?groupV //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(eqmxMr _ defW) sumsmxMr (sumsmx_sup j) ?repr_mxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Clifford.",
            "VernacEndSegment",
            "a48f9de75611ff7f9d0db75fc7636ed534c5bad6"
        ],
        [
            "Section JordanHolder.",
            "VernacBeginSection",
            "3bd426651963ab0e7a5fe8a4c2f703ebb1a49d1a"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Variables (n : nat) (rG : mx_representation F G n).",
            "VernacAssumption",
            "c5ca37fe80813f4456a5df2ee6c9919529c67144"
        ],
        [
            "Local Notation modG := ((mxmodule rG) n).",
            "VernacSyntacticDefinition",
            "e590e57779fbede1c43a43d6014cd9e72a0c08d8"
        ],
        [
            "Lemma section_module (U V : 'M_n) (modU : modG U) (modV : modG V) : mxmodule (factmod_repr modU) <<in_factmod U V>>%MS.",
            "VernacStartTheoremProof",
            "d86bba8ce0057992f991d0008124f915e1d9d805"
        ],
        [
            "by rewrite (eqmx_module _ (genmxE _)) in_factmod_module addsmx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition section_repr U V (modU : modG U) (modV : modG V) := submod_repr (section_module modU modV).",
            "VernacDefinition",
            "ad0cbee2d75cacf4194210202f145a003e8d8cd2"
        ],
        [
            "Lemma mx_factmod_sub U modU : mx_rsim (@section_repr U _ modU (mxmodule1 rG)) (factmod_repr modU).",
            "VernacStartTheoremProof",
            "d267f27d6f680bfe678198878854bc3841ccaeec"
        ],
        [
            "exists (val_submod 1%:M) => [||x Gx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (@addIn (\\rank U)); rewrite genmxE mxrank_in_factmod mxrank_coker.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (addsmx_idPr (submx1 U)) mxrank1 subnK ?rank_leq_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite /row_free val_submod1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -[_ x]mul1mx -val_submodE val_submodJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition max_submod (U V : 'M_n) := (U < V)%MS /\\ (forall W, ~ [/\\ modG W, U < W & W < V])%MS.",
            "VernacDefinition",
            "77a2e5da645ba6e0a0e560c937bb594fc65638b5"
        ],
        [
            "Lemma max_submodP U V (modU : modG U) (modV : modG V) : (U <= V)%MS -> (max_submod U V <-> mx_irreducible (section_repr modU modV)).",
            "VernacStartTheoremProof",
            "6c5cd87a0ac0412a00264e64de2077428018b11b"
        ],
        [
            "move=> sUV; split=> [[ltUV maxU] | ].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply/mx_irrP; split=> [|WU modWU nzWU].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite genmxE lt0n mxrank_eq0 in_factmod_eq0; case/andP: ltUV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -sub1mx -val_submodS val_submod1 genmxE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose W := (U + val_factmod (val_submod WU))%MS.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "suffices sVW: (V <= W)%MS.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite {2}in_factmodE (submx_trans (submxMr _ sVW)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addsmxMr -!in_factmodE val_factmodK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ((in_factmod U U =P 0) _) ?adds0mx ?in_factmod_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/and3P: {maxU}(maxU W); apply: contraR; rewrite /ltmx addsmxSl => -> /=.",
            "VernacExtend",
            "b7d55d5cc9e609b184db748f6780e12224901e48"
        ],
        [
            "move: modWU; rewrite /mxmodule rstabs_submod rstabs_factmod => -> /=.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite addsmx_sub submx_refl -in_factmod_eq0 val_factmodK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: nzWU; rewrite -[_ == 0](inj_eq val_submod_inj) linear0 => ->.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite -(in_factmodsK sUV) addsmxS // val_factmodS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(genmxE (in_factmod U V)) val_submodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/mx_irrP; rewrite lt0n {1}genmxE mxrank_eq0 in_factmod_eq0 => ltUV maxV.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "split=> // [|W [modW /andP[sUW ltUW] /andP[sWV /negP[]]]]; first exact/andP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -(in_factmodsK sUV) -(in_factmodsK sUW) addsmxS // val_factmodS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -genmxE -val_submod1; set VU := <<_>>%MS.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "have sW_VU: (in_factmod U W <= VU)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite genmxE -val_factmodS !submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(in_submodK sW_VU) val_submodS -(genmxE (in_submod _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite sub1mx maxV //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (eqmx_module _ (genmxE _)) in_submod_module ?genmxE ?submxMr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite in_factmod_module addsmx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -submx0 [(_ <= 0)%MS]genmxE -val_submodS linear0 in_submodK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eqmx0 submx0 in_factmod_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_submod_eqmx U1 U2 V1 V2 : (U1 :=: U2)%MS -> (V1 :=: V2)%MS -> max_submod U1 V1 -> max_submod U2 V2.",
            "VernacStartTheoremProof",
            "82d8b320d8481c0a9cc326707ad72a8bb29601b1"
        ],
        [
            "move=> eqU12 eqV12 [ltUV1 maxU1].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by split=> [|W]; rewrite -(lt_eqmx eqU12) -(lt_eqmx eqV12).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mx_subseries := all modG.",
            "VernacDefinition",
            "a3a81d51294a97c171385c501c122577fd14dee6"
        ],
        [
            "Definition mx_composition_series V := mx_subseries V /\\ (forall i, i < size V -> max_submod (0 :: V)`_i V`_i).",
            "VernacDefinition",
            "a4df1f5188e4170e4dba1b9babbabc03a60f6502"
        ],
        [
            "Local Notation mx_series := mx_composition_series.",
            "VernacSyntacticDefinition",
            "986ed85372784de49e5d278d5ad30037bef194ba"
        ],
        [
            "Fact mx_subseries_module V i : mx_subseries V -> mxmodule rG V`_i.",
            "VernacStartTheoremProof",
            "c994eb17b828d1373018239c0f6e800b06ce0dfb"
        ],
        [
            "move=> modV; have [|leVi] := ltnP i (size V); first exact: all_nthP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite nth_default ?mxmodule0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mx_subseries_module' V i : mx_subseries V -> mxmodule rG (0 :: V)`_i.",
            "VernacStartTheoremProof",
            "8f5daff6bf02580cdff5ce4b66c79b442eb2f7d5"
        ],
        [
            "by move=> modV; rewrite mx_subseries_module //= mxmodule0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subseries_repr V i (modV : all modG V) := section_repr (mx_subseries_module' i modV) (mx_subseries_module i modV).",
            "VernacDefinition",
            "04b633f82f1df08a2abdd7dca6c76ccc99adc738"
        ],
        [
            "Definition series_repr V i (compV : mx_composition_series V) := subseries_repr i (proj1 compV).",
            "VernacDefinition",
            "f9615982096911981181bd78702b1272e0ce552d"
        ],
        [
            "Lemma mx_series_lt V : mx_composition_series V -> path ltmx 0 V.",
            "VernacStartTheoremProof",
            "789172f2479ea9efc03376f9b6d8b5c4fe5da548"
        ],
        [
            "by case=> _ compV; apply/(pathP 0)=> i /compV[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_size_mx_series (V : seq 'M[F]_n) : path ltmx 0 V -> size V <= \\rank (last 0 V).",
            "VernacStartTheoremProof",
            "e339585f00465b8f33ead30a275143847c7dc4b8"
        ],
        [
            "rewrite -[size V]addn0 -(mxrank0 F n n); elim: V 0 => //= V1 V IHV V0.",
            "VernacExtend",
            "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
        ],
        [
            "rewrite ltmxErank -andbA => /and3P[_ ltV01 ltV].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply: leq_trans (IHV _ ltV); rewrite addSnnS leq_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_series_repr_irr V i (compV : mx_composition_series V) : i < size V -> mx_irreducible (series_repr i compV).",
            "VernacStartTheoremProof",
            "d180b3ae73de5ba80cb7e07cfb693e6e5419bd4d"
        ],
        [
            "case: compV => modV compV /compV maxVi; apply/max_submodP => //.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by apply: ltmxW; case: maxVi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_series_rcons U V : mx_series (rcons U V) <-> [/\\ mx_series U, modG V & max_submod (last 0 U) V].",
            "VernacStartTheoremProof",
            "6270d8527ac2388f2752896de499f16a62f03219"
        ],
        [
            "rewrite /mx_series /mx_subseries all_rcons size_rcons -rcons_cons.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split=> [ [/andP[modU modV] maxU] | [[modU maxU] modV maxV]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split=> //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have:= maxU _ (leqnn _); rewrite !nth_rcons leqnn ltnn eqxx -last_nth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by split=> // i ltiU; have:= maxU i (ltnW ltiU); rewrite !nth_rcons leqW ltiU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite modV; split=> // i; rewrite !nth_rcons ltnS leq_eqVlt.",
            "VernacExtend",
            "7da1e44fc70370c532a4f9a52f0578f62ffee13c"
        ],
        [
            "case: eqP => [-> _ | /= _ ltiU]; first by rewrite ltnn ?eqxx -last_nth.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltiU; apply: maxU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mx_Schreier U : mx_subseries U -> path ltmx 0 U -> classically (exists V, [/\\ mx_series V, last 0 V :=: 1%:M & subseq U V])%MS.",
            "VernacStartTheoremProof",
            "d615e1a3e39ba778bffdbeb39c3a9c99b9e0af3f"
        ],
        [
            "move: U => U0; set U := {1 2}U0; have: subseq U0 U := subseq_refl U.",
            "VernacExtend",
            "bfc79e1fe6822c7cd2b0873372afea0ade19f587"
        ],
        [
            "pose n' := n.+1; have: n < size U + n' by rewrite leq_addl.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "elim: n' U => [|n' IH_U] U ltUn' sU0U modU incU [] // noV.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite addn0 ltnNge in ltUn'; case/negP: ltUn'.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite (leq_trans (max_size_mx_series incU)) ?rank_leq_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (noV); exists U; split => //; first split=> // i lt_iU; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqmxP; apply: contraT => neU1.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: {IH_U}(IH_U (rcons U 1%:M)) noV.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite size_rcons addSnnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (subseq_trans sU0U) ?subseq_rcons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite /mx_subseries all_rcons mxmodule1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite rcons_path ltmxEneq neU1 submx1 !andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set U'i := _`_i; set Ui := _`_i; have defU := cat_take_drop i U.",
            "VernacExtend",
            "c0e995c4eae7d99786159000ade9075058bd55f5"
        ],
        [
            "have defU'i: U'i = last 0 (take i U).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (last_nth 0) /U'i -{1}defU -cat_cons nth_cat /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite size_take lt_iU leqnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: incU; rewrite -defU cat_path (drop_nth 0) //= -/Ui -defU'i.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "set U' := take i U; set U'' := drop _ U; case/and3P=> incU' ltUi incU''.",
            "VernacExtend",
            "5f30caf21380409fbdf4e31ae55197bac71556a8"
        ],
        [
            "split=> // W [modW ltUW ltWV]; case: notF.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "apply: {IH_U}(IH_U (U' ++ W :: Ui :: U'')) noV; last 2 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite /mx_subseries -drop_nth // all_cat /= modW -all_cat defU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite cat_path /= -defU'i; apply/and4P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -drop_nth // size_cat /= addnS -size_cat defU addSnnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite (subseq_trans sU0U) // -defU cat_subseq // -drop_nth ?subseq_cons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_second_rsim U V (modU : modG U) (modV : modG V) : let modI := capmx_module modU modV in let modA := addsmx_module modU modV in mx_rsim (section_repr modI modU) (section_repr modV modA).",
            "VernacStartTheoremProof",
            "567f7f49086b6ca3acdd15d526f99ab81bc2b49a"
        ],
        [
            "move=> modI modA; set nI := {1}(\\rank _).",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "have sIU := capmxSl U V; have sVA := addsmxSr U V.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "pose valI := val_factmod (val_submod (1%:M : 'M_nI)).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have UvalI: (valI <= U)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(addsmx_idPr sIU) (submx_trans _ (proj_factmodS _ _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite submxMr // val_submod1 genmxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (valI *m in_factmod _ 1%:M *m in_submod _ 1%:M) => [||x Gx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (@addIn (\\rank (U :&: V) + \\rank V)%N); rewrite genmxE addnA addnCA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite /nI genmxE !{1}mxrank_in_factmod 2?(addsmx_idPr _) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -mxrank_sum_cap addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -kermx_eq0; apply/rowV0P=> u; rewrite (sameP sub_kermxP eqP).",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "rewrite mulmxA -in_submodE mulmxA -in_factmodE -(inj_eq val_submod_inj).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite linear0 in_submodK ?in_factmod_eq0 => [Vvu|]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite genmxE addsmxC in_factmod_addsK submxMr // mulmx_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: val_submod_inj; apply/eqP; rewrite linear0 -[val_submod u]val_factmodK.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "rewrite val_submodE val_factmodE -mulmxA -val_factmodE -/valI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite in_factmod_eq0 sub_capmx mulmx_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "symmetry; rewrite -{1}in_submodE -{1}in_submodJ; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite genmxE addsmxC in_factmod_addsK -in_factmodE submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}in_factmodE -{1}in_factmodJ // mulmxA in_submodE; congr (_ *m _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "apply/eqP; rewrite mulmxA -in_factmodE -subr_eq0 -linearB in_factmod_eq0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: submx_trans (capmxSr U V); rewrite -in_factmod_eq0 linearB /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite subr_eq0 {1}(in_factmodJ modI) // val_factmodK eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /valI val_factmodE mulmxA -val_factmodE val_factmodK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[submod_mx _ _]mul1mx -val_submodE val_submodJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma section_eqmx_add U1 U2 V1 V2 modU1 modU2 modV1 modV2 : (U1 :=: U2)%MS -> (U1 + V1 :=: U2 + V2)%MS -> mx_rsim (@section_repr U1 V1 modU1 modV1) (@section_repr U2 V2 modU2 modV2).",
            "VernacStartTheoremProof",
            "ef8a65f89b6392dda4009858f6e85c5502e004ed"
        ],
        [
            "move=> eqU12 eqV12; set n1 := {1}(\\rank _).",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "pose v1 := val_factmod (val_submod (1%:M : 'M_n1)).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have sv12: (v1 <= U2 + V2)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -eqV12 (submx_trans _ (proj_factmodS _ _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite submxMr // val_submod1 genmxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (v1 *m in_factmod _ 1%:M *m in_submod _ 1%:M) => [||x Gx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (@addIn (\\rank U1)); rewrite {2}eqU12 /n1 !{1}genmxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite !{1}mxrank_in_factmod eqV12.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -kermx_eq0; apply/rowV0P=> u; rewrite (sameP sub_kermxP eqP) mulmxA.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "rewrite -in_submodE mulmxA -in_factmodE -(inj_eq val_submod_inj) linear0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite in_submodK ?in_factmod_eq0 -?eqU12 => [U1uv1|]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite genmxE -(in_factmod_addsK U2 V2) submxMr // mulmx_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: val_submod_inj; apply/eqP; rewrite linear0 -[val_submod _]val_factmodK.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by rewrite in_factmod_eq0 val_factmodE val_submodE -mulmxA -val_factmodE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "symmetry; rewrite -{1}in_submodE -{1}in_factmodE -{1}in_submodJ; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite genmxE -(in_factmod_addsK U2 V2) submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}in_factmodJ // mulmxA in_submodE; congr (_ *m _); apply/eqP.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "rewrite mulmxA -in_factmodE -subr_eq0 -linearB in_factmod_eq0 -eqU12.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -in_factmod_eq0 linearB /= subr_eq0 {1}(in_factmodJ modU1) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite val_factmodK /v1 val_factmodE eq_sym mulmxA -val_factmodE val_factmodK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[_ *m _]mul1mx mulmxA -val_submodE val_submodJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma section_eqmx U1 U2 V1 V2 modU1 modU2 modV1 modV2 (eqU : (U1 :=: U2)%MS) (eqV : (V1 :=: V2)%MS) : mx_rsim (@section_repr U1 V1 modU1 modV1) (@section_repr U2 V2 modU2 modV2).",
            "VernacStartTheoremProof",
            "0bac5af75b5c147630eec697f9308835bc0b66a0"
        ],
        [
            "by apply: section_eqmx_add => //; apply: adds_eqmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_butterfly U V W modU modV modW : ~~ (U == V)%MS -> max_submod U W -> max_submod V W -> let modUV := capmx_module modU modV in max_submod (U :&: V)%MS U /\\ mx_rsim (@section_repr V W modV modW) (@section_repr _ U modUV modU).",
            "VernacStartTheoremProof",
            "6e82ba4519d82301ea30560b66d603f1f6d86096"
        ],
        [
            "move=> neUV maxU maxV modUV; have{neUV maxU} defW: (U + V :=: W)%MS.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "wlog{neUV modUV} ltUV: U V modU modV maxU maxV / ~~ (V <= U)%MS.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "by case/nandP: neUV => ?; first rewrite addsmxC; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqmxP/idPn=> neUVW; case: maxU => ltUW; case/(_ (U + V)%MS).",
            "VernacExtend",
            "b1717d233297e647089f2380199e54808b7d4afc"
        ],
        [
            "rewrite addsmx_module // ltmxE ltmxEneq neUVW addsmxSl !addsmx_sub.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by have [ltVW _] := maxV; rewrite submx_refl andbT ltUV !ltmxW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have sUV_U := capmxSl U V; have sVW: (V <= W)%MS by rewrite -defW addsmxSr.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "set goal := mx_rsim _ _; suffices{maxV} simUV: goal.",
            "VernacExtend",
            "8000712a77b7ffa46123cc21d292aebe6ac07c15"
        ],
        [
            "split=> //; apply/(max_submodP modUV modU sUV_U).",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by apply: mx_rsim_irr simUV _; apply/max_submodP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: {goal}mx_rsim_sym.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: mx_rsim_trans (mx_second_rsim modU modV) _; apply: section_eqmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_JordanHolder_exists U V : mx_composition_series U -> modG V -> max_submod V (last 0 U) -> {W : seq 'M_n | mx_composition_series W & last 0 W = V}.",
            "VernacStartTheoremProof",
            "ef0708030ef5a196cdea44daeda7eacb7b9b5595"
        ],
        [
            "elim/last_ind: U V => [|U Um IHU] V compU modV; first by case; rewrite ltmx0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite last_rcons => maxV; case/mx_series_rcons: compU => compU modUm maxUm.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "case eqUV: (last 0 U == V)%MS.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/lastP: U eqUV compU {maxUm IHU} => [|U' Um'].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite andbC; move/eqmx0P->; exists [::].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite last_rcons; move/eqmxP=> eqU'V; case/mx_series_rcons=> compU _ maxUm'.",
            "VernacExtend",
            "94b585b2dd67662a1bfccf9de340af322f43f6e9"
        ],
        [
            "exists (rcons U' V); last by rewrite last_rcons.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/mx_series_rcons; split => //; apply: max_submod_eqmx maxUm'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set Um' := last 0 U in maxUm eqUV; have [modU _] := compU.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "have modUm': modG Um' by rewrite /Um' (last_nth 0) mx_subseries_module'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [|||W compW lastW] := IHU (V :&: Um')%MS; rewrite ?capmx_module //.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by case: (mx_butterfly modUm' modV modUm); rewrite ?eqUV // {1}capmxC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (rcons W V); last by rewrite last_rcons.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/mx_series_rcons; split; rewrite // lastW.",
            "VernacExtend",
            "1a60a3dd20ba8bdb4f34ca3532e9ebe70ebccc2e"
        ],
        [
            "by case: (mx_butterfly modV modUm' modUm); rewrite // andbC eqUV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let rsim_rcons U V compU compUV i : i < size U -> mx_rsim (@series_repr U i compU) (@series_repr (rcons U V) i compUV).",
            "VernacDefinition",
            "567efad4c350bea05a1369b72512a7e126ca27a4"
        ],
        [
            "by move=> ltiU; apply: section_eqmx; rewrite -?rcons_cons nth_rcons ?leqW ?ltiU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let last_mod U (compU : mx_series U) : modG (last 0 U).",
            "VernacDefinition",
            "d1e42d35a81d7a090b14453ab7048a64a8a1ed92"
        ],
        [
            "by case: compU => modU _; rewrite (last_nth 0) (mx_subseries_module' _ modU).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let rsim_last U V modUm modV compUV : mx_rsim (@section_repr (last 0 U) V modUm modV) (@series_repr (rcons U V) (size U) compUV).",
            "VernacDefinition",
            "c172372a814171e60eb295d54a8670ab62d338fa"
        ],
        [
            "apply: section_eqmx; last by rewrite nth_rcons ltnn eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -rcons_cons nth_rcons leqnn -last_nth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation rsimT := mx_rsim_trans.",
            "VernacSyntacticDefinition",
            "c35f169adbeceb740895e8332240c1466db9c276"
        ],
        [
            "Local Notation rsimC := mx_rsim_sym.",
            "VernacSyntacticDefinition",
            "6a51fed11b14f74e590b6ff9858ff5fa5f3d300c"
        ],
        [
            "Lemma mx_JordanHolder U V compU compV : let m := size U in (last 0 U :=: last 0 V)%MS -> m = size V /\\ (exists p : 'S_m, forall i : 'I_m, mx_rsim (@series_repr U i compU) (@series_repr V (p i) compV)).",
            "VernacStartTheoremProof",
            "acfa0ff06bf1d4a452946628e1e0221f834114a3"
        ],
        [
            "elim: {U}(size U) {-2}U V (eqxx (size U)) compU compV => /= [|r IHr] U V.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "move/nilP->; case/lastP: V => [|V Vm] /= ? compVm; rewrite ?last_rcons => Vm0.",
            "VernacExtend",
            "f040bd81b286ec05e0a940bcb39631856712016b"
        ],
        [
            "by split=> //; exists 1%g; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/mx_series_rcons: (compVm) => _ _ []; rewrite -(lt_eqmx Vm0) ltmx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/lastP: U => // [U Um]; rewrite size_rcons eqSS => szUr compUm.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case/mx_series_rcons: (compUm); set Um' := last 0 U => compU modUm maxUm.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case/lastP: V => [|V Vm] compVm; rewrite ?last_rcons ?size_rcons /= => eqUVm.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by case/mx_series_rcons: (compUm) => _ _ []; rewrite (lt_eqmx eqUVm) ltmx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/mx_series_rcons: (compVm); set Vm' := last 0 V => compV modVm maxVm.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "have [modUm' modVm']: modG Um' * modG Vm' := (last_mod compU, last_mod compV).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose i_m := @ord_max (size U).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have [eqUVm' | neqUVm'] := altP (@eqmxP _ _ _ _ Um' Vm').",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [szV [p sim_p]] := IHr U V szUr compU compV eqUVm'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split; first by rewrite szV.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists (lift_perm i_m i_m p) => i; case: (unliftP i_m i) => [j|] ->{i}.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "apply: rsimT (rsimC _) (rsimT (sim_p j) _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite lift_max; apply: rsim_rcons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite lift_perm_lift lift_max; apply: rsim_rcons; rewrite -szV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have simUVm := section_eqmx modUm' modVm' modUm modVm eqUVm' eqUVm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: rsimT (rsimC _) (rsimT simUVm _); first exact: rsim_last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite lift_perm_id /= szV; apply: rsim_last.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have maxVUm: max_submod Vm' Um by apply: max_submod_eqmx (eqmx_sym _) maxVm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= mx_butterfly modUm' modVm' modUm neqUVm' maxUm maxVUm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (capmx_module _ _); set Wm := (Um' :&: Vm')%MS => modWm [maxWUm simWVm].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have:= mx_butterfly modVm' modUm' modUm _ maxVUm maxUm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (capmx_module _ _); rewrite andbC capmxC -/Wm => modWmV [// | maxWVm].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite {modWmV}(bool_irrelevance modWmV modWm) => simWUm.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [W compW lastW] := mx_JordanHolder_exists compU modWm maxWUm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have compWU: mx_series (rcons W Um') by apply/mx_series_rcons; rewrite lastW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have compWV: mx_series (rcons W Vm') by apply/mx_series_rcons; rewrite lastW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [|szW [pU pUW]] := IHr U _ szUr compU compWU; first by rewrite last_rcons.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite size_rcons in szW; have ltWU: size W < size U by rewrite -szW.",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "have{IHr} := IHr _ V _ compWV compV; rewrite last_rcons size_rcons -szW.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case=> {r szUr}// szV [pV pWV]; split; first by rewrite szV.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose j_m := Ordinal ltWU; pose i_m' := lift i_m j_m.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "exists (lift_perm i_m i_m pU * tperm i_m i_m' * lift_perm i_m i_m pV)%g => i.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !permM; case: (unliftP i_m i) => [j {simWUm}|] ->{i}; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite lift_perm_id tpermL lift_perm_lift lift_max {simWVm}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: rsimT (rsimT (pWV j_m) _); last by apply: rsim_rcons; rewrite -szV.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: rsimT (rsimC _) {simWUm}(rsimT simWUm _); first exact: rsim_last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -lastW in modWm *; apply: rsim_last.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: rsimT (rsimC _) {pUW}(rsimT (pUW j) _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite lift_max; apply: rsim_rcons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite lift_perm_lift; case: (unliftP j_m (pU j)) => [k|] ->{j pU}.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite tpermD ?(inj_eq lift_inj) ?neq_lift //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite lift_perm_lift !lift_max; set j := lift j_m k.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "have ltjW: j < size W by have:= ltn_ord k; rewrite -(lift_max k) /= {1 3}szW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: rsimT (rsimT (pWV j) _); last by apply: rsim_rcons; rewrite -szV.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: rsimT (rsimC _) (rsim_rcons compW _ _); first apply: rsim_rcons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: rsimT {simWVm}(rsimC (rsimT simWVm _)) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -lastW in modWm *; apply: rsim_last.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite tpermR lift_perm_id /= szV.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: rsimT (rsim_last modVm' modVm _); apply: section_eqmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_JordanHolder_max U (m := size U) V compU modV : (last 0 U :=: 1%:M)%MS -> mx_irreducible (@factmod_repr _ G n rG V modV) -> exists i : 'I_m, mx_rsim (factmod_repr modV) (@series_repr U i compU).",
            "VernacStartTheoremProof",
            "c14a214a35d647960a1e3ce35a7f9d40222b64c9"
        ],
        [
            "rewrite {}/m; set Um := last 0 U => Um1 irrV.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "have modUm: modG Um := last_mod compU; have simV := rsimC (mx_factmod_sub modV).",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have maxV: max_submod V Um.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/max_submodP: (mx_rsim_irr simV irrV) => /(_ (submx1 _)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: max_submod_eqmx; last apply: eqmx_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [W compW lastW] := mx_JordanHolder_exists compU modV maxV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have compWU: mx_series (rcons W Um) by apply/mx_series_rcons; rewrite lastW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= mx_JordanHolder compU compWU; rewrite last_rcons size_rcons.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "case=> // szW [p pUW]; have ltWU: size W < size U by rewrite szW.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "pose i := Ordinal ltWU; exists ((p^-1)%g i).",
            "VernacExtend",
            "a394100f51279b514ecbf9f162d7c2309ea8c47a"
        ],
        [
            "apply: rsimT simV (rsimT _ (rsimC (pUW _))); rewrite permKV.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: rsimT (rsimC _) (rsim_last (last_mod compW) modUm _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: section_eqmx; rewrite ?lastW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End JordanHolder.",
            "VernacEndSegment",
            "4ca68972d97c010132a194ece3060d700e0509fd"
        ],
        [
            "Bind Scope irrType_scope with socle_sort.",
            "VernacBindScope",
            "11a4e16b2795a0da2d06e3875247d6f563ce38d5"
        ],
        [
            "Section Regular.",
            "VernacBeginSection",
            "5399efc04e7d1fe85069ad89e0e96966660716d2"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Local Notation nG := #|pred_of_set (gval G)|.",
            "VernacSyntacticDefinition",
            "553a8346d154fc04ff20be739bff980f267f30e8"
        ],
        [
            "Local Notation rF := (GRing.Field.comUnitRingType F) (only parsing).",
            "VernacSyntacticDefinition",
            "a19b03f500763f6099a11a93d934ed06c5928fd4"
        ],
        [
            "Local Notation aG := (regular_repr rF G).",
            "VernacSyntacticDefinition",
            "4bbb290153be46f07879c6ab6274531a58fcf1a0"
        ],
        [
            "Local Notation R_G := (group_ring rF G).",
            "VernacSyntacticDefinition",
            "3e3657dd4d26c321eff375adb1f77b4373e55ecd"
        ],
        [
            "Lemma gring_free : row_free R_G.",
            "VernacStartTheoremProof",
            "9bcf8b030e15041e42543fe41e2cfca711159771"
        ],
        [
            "apply/row_freeP; exists (lin1_mx (row (gring_index G 1) \\o vec_mx)).",
            "VernacExtend",
            "35cb31569268b69dd569e5c043ab2fa1eafcf6b2"
        ],
        [
            "apply/row_matrixP=> i; rewrite row_mul rowK mul_rV_lin1 /= mxvecK rowK row1.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite gring_indexK // mul1g gring_valK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_op_id A : (A \\in R_G)%MS -> gring_op aG A = A.",
            "VernacStartTheoremProof",
            "2453f45e5c2fcfd39855a5408ebbba8a82ab698e"
        ],
        [
            "case/envelop_mxP=> a ->{A}; rewrite linear_sum.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by apply: eq_bigr => x Gx; rewrite linearZ /= gring_opG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_rowK A : (A \\in R_G)%MS -> gring_mx aG (gring_row A) = A.",
            "VernacStartTheoremProof",
            "ff437dea6805ccda76cf8c49d5b6f107775edd8e"
        ],
        [
            "exact: gring_op_id.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_gring_mx m a (M : 'M_(m, nG)) : (gring_mx aG a \\in M *m R_G)%MS = (a <= M)%MS.",
            "VernacStartTheoremProof",
            "ac3745749a809084a5710e668b32a0014ee5d952"
        ],
        [
            "by rewrite vec_mxK submxMfree ?gring_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_sub_gring m A (M : 'M_(m, nG)) : (A \\in M *m R_G)%MS = (A \\in R_G)%MS && (gring_row A <= M)%MS.",
            "VernacStartTheoremProof",
            "f1a037fdff7aac7018c87262c9805037434ca15e"
        ],
        [
            "rewrite -(andb_idl (memmx_subP (submxMl _ _) A)); apply: andb_id2l => R_A.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -mem_gring_mx gring_rowK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section GringMx.",
            "VernacBeginSection",
            "2f48e5568c3005bc48079df25fa05122e17efb33"
        ],
        [
            "Variables (n : nat) (rG : mx_representation F G n).",
            "VernacAssumption",
            "c5ca37fe80813f4456a5df2ee6c9919529c67144"
        ],
        [
            "Lemma gring_mxP a : (gring_mx rG a \\in enveloping_algebra_mx rG)%MS.",
            "VernacStartTheoremProof",
            "b530ae6d8e3f17325b48df327f1930331b52b29f"
        ],
        [
            "by rewrite vec_mxK submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gring_opM A B : (B \\in R_G)%MS -> gring_op rG (A *m B) = gring_op rG A *m gring_op rG B.",
            "VernacStartTheoremProof",
            "2617fa5e1fed6ea87c1ed07aa4c67a99efa66a37"
        ],
        [
            "by move=> R_B; rewrite -gring_opJ gring_rowK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis irrG : mx_irreducible rG.",
            "VernacAssumption",
            "560daadaa8042f69cdcc84b835b2ff49727390d2"
        ],
        [
            "Lemma rsim_regular_factmod : {U : 'M_nG & {modU : mxmodule aG U & mx_rsim rG (factmod_repr modU)}}.",
            "VernacStartTheoremProof",
            "a6763f1ef70ba51a161aff0e956e9b77f1040306"
        ],
        [
            "pose v : 'rV[F]_n := nz_row 1%:M.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose fU := lin1_mx (mulmx v \\o gring_mx rG); pose U := kermx fU.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have modU: mxmodule aG U.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/mxmoduleP => x Gx; apply/sub_kermxP/row_matrixP=> i.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite 2!row_mul row0; move: (row i U) (sub_kermxP (row_sub i U)) => u.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "by rewrite !mul_rV_lin1 /= gring_mxJ // mulmxA => ->; rewrite mul0mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have def_n: \\rank (cokermx U) = n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite mxrank_coker mxrank_ker subKn ?rank_leq_row // -genmxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -[_ == _]sub1mx; have [_ _ ->] := irrG; rewrite ?submx1 //.",
            "VernacExtend",
            "af6102db4e123a64e282a47163e28ab924e3589a"
        ],
        [
            "rewrite (eqmx_module _ (genmxE _)); apply/mxmoduleP=> x Gx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply/row_subP=> i; apply: eq_row_sub (gring_index G (enum_val i * x)) _.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite !rowE mulmxA !mul_rV_lin1 /= -mulmxA -gring_mxJ //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -rowE rowK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (eqmx_eq0 (genmxE _)); apply/rowV0Pn.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "exists v; last exact: (nz_row_mxsimple irrG).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/submxP; exists (gring_row (aG 1%g)); rewrite mul_rV_lin1 /=.",
            "VernacExtend",
            "f6a058401bad202a34fe23489fb8c23c06924ca6"
        ],
        [
            "by rewrite -gring_opE gring_opG // repr_mx1 mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists U; exists modU; apply: mx_rsim_sym.",
            "VernacExtend",
            "1e323ab3bcc2457f8ae651e2fb03578af2318626"
        ],
        [
            "exists (val_factmod 1%:M *m fU) => // [|x Gx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /row_free eqn_leq rank_leq_row /= -subn_eq0 -mxrank_ker mxrank_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/rowV0P=> u /sub_kermxP; rewrite mulmxA => /sub_kermxP.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite -/U -in_factmod_eq0 mulmxA mulmx1 val_factmodK => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulmxA -val_factmodE (canRL (addKr _) (add_sub_fact_mod U _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulmxDl mulNmx (sub_kermxP (val_submodP _)) oppr0 add0r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/row_matrixP=> i; move: (val_factmod _) => zz.",
            "VernacExtend",
            "86bb0d3d5ae27b38aac15f69d532d662f1518315"
        ],
        [
            "by rewrite !row_mul !mul_rV_lin1 /= gring_mxJ // mulmxA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rsim_regular_series U (compU : mx_composition_series aG U) : (last 0 U :=: 1%:M)%MS -> exists i : 'I_(size U), mx_rsim rG (series_repr i compU).",
            "VernacStartTheoremProof",
            "ab1ead155c005cfdbb9a873ee7970d88bdbf91b8"
        ],
        [
            "move=> lastU; have [V [modV simGV]] := rsim_regular_factmod.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "have irrV := mx_rsim_irr simGV irrG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [i simVU] := mx_JordanHolder_max compU lastU irrV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists i; apply: mx_rsim_trans simGV simVU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis F'G : [char F]^'.-group G.",
            "VernacAssumption",
            "3f956bb3f374d768f0dc9d4ee66dad4431636f0d"
        ],
        [
            "Lemma rsim_regular_submod : {U : 'M_nG & {modU : mxmodule aG U & mx_rsim rG (submod_repr modU)}}.",
            "VernacStartTheoremProof",
            "d826bade00ddd31884185f6e9bbc68a70d387396"
        ],
        [
            "have [V [modV eqG'V]] := rsim_regular_factmod.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [U modU defVU dxVU] := mx_Maschke F'G modV (submx1 V).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists U; exists modU; apply: mx_rsim_trans eqG'V _.",
            "VernacExtend",
            "1e323ab3bcc2457f8ae651e2fb03578af2318626"
        ],
        [
            "by apply: mx_rsim_factmod; rewrite ?mxdirectE /= addsmxC // addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GringMx.",
            "VernacEndSegment",
            "9ef550d9faba2db22348e8c108ced95c27af522c"
        ],
        [
            "Definition gset_mx (A : {set gT}) := \\sum_(x in A) aG x.",
            "VernacDefinition",
            "5771f542db4f37f8b58a50accb61cfd069550bfa"
        ],
        [
            "Local Notation tG := #|pred_of_set (classes (gval G))|.",
            "VernacSyntacticDefinition",
            "034588b3e529c8025f7c2b79ca6212b097fba7f9"
        ],
        [
            "Definition classg_base := \\matrix_(k < tG) mxvec (gset_mx (enum_val k)).",
            "VernacDefinition",
            "e4d0b5c842d0af5a7fafc0c7df4745f10bce60bc"
        ],
        [
            "Let groupCl : {in G, forall x, {subset x ^: G <= G}}.",
            "VernacDefinition",
            "4b02168b6cf4419654b1fd4555defed41bb26c98"
        ],
        [
            "by move=> x Gx; apply: subsetP; apply: class_subG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma classg_base_free : row_free classg_base.",
            "VernacStartTheoremProof",
            "9dd3a8c30314bc1612435ec7ffeb69b1b0dbb4cc"
        ],
        [
            "rewrite -kermx_eq0; apply/rowV0P=> v /sub_kermxP; rewrite mulmx_sum_row => v0.",
            "VernacExtend",
            "0288f65064e83af8559a49f90a2eba4421e03fd4"
        ],
        [
            "apply/rowP=> k; rewrite mxE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have [x Gx def_k] := imsetP (enum_valP k).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "transitivity (@gring_proj F _ G x (vec_mx 0) 0 0); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !linear0 !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{}v0 !linear_sum (bigD1 k) //= !linearZ /= rowK mxvecK def_k.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite linear_sum (bigD1 x) ?class_refl //= gring_projE // eqxx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !big1 ?addr0 ?mxE ?mulr1 // => [k' | y /andP[xGy ne_yx]]; first 1 last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gring_projE ?(groupCl Gx xGy) // eq_sym (negPf ne_yx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite rowK !linearZ /= mxvecK -(inj_eq enum_val_inj) def_k eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [z Gz ->] := imsetP (enum_valP k').",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/eqP=> not_Gxz; rewrite linear_sum big1 ?scaler0 //= => y zGy.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite gring_projE ?(groupCl Gz zGy) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: eqP zGy => // <- /class_eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma classg_base_center : (classg_base :=: 'Z(R_G))%MS.",
            "VernacStartTheoremProof",
            "6f612e4ac2f2e253fbfe399959b971d5bd7d43e6"
        ],
        [
            "apply/eqmxP/andP; split.",
            "VernacExtend",
            "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
        ],
        [
            "apply/row_subP=> k; rewrite rowK /gset_mx sub_capmx {1}linear_sum.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have [x Gx ->{k}] := imsetP (enum_valP k); have sxGG := groupCl Gx.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite summx_sub => [|y xGy]; last by rewrite envelop_mx_id ?sxGG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite memmx_cent_envelop; apply/centgmxP=> y Gy.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite {2}(reindex_acts 'J _ Gy) ?astabsJ ?class_norm //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mulmx_suml mulmx_sumr; apply: eq_bigr => z; move/sxGG=> Gz.",
            "VernacExtend",
            "399d290ad8c436d6764653e1c02126831ee79b9d"
        ],
        [
            "by rewrite -!repr_mxM ?groupJ -?conjgC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/memmx_subP=> A; rewrite sub_capmx memmx_cent_envelop.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case/andP=> /envelop_mxP[a ->{A}] cGa.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite (partition_big_imset (class^~ G)) -/(classes G) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite linear_sum summx_sub //= => xG GxG; have [x Gx def_xG] := imsetP GxG.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "apply: submx_trans (scalemx_sub (a x) (submx_refl _)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite (eq_row_sub (enum_rank_in GxG xG)) // linearZ /= rowK enum_rankK_in //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !linear_sum {xG GxG}def_xG; apply: eq_big => [y | xy] /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply/idP/andP=> [| [_ xGy]]; last by rewrite -(eqP xGy) class_refl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/imsetP=> z Gz ->; rewrite groupJ // classGidl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/imsetP=> y Gy ->{xy}; rewrite linearZ; congr (_ *: _).",
            "VernacExtend",
            "5d2065da6735eb7f30312e156e81044fd654e048"
        ],
        [
            "move/(canRL (repr_mxK aG Gy)): (centgmxP cGa y Gy); have Gy' := groupVr Gy.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "move/(congr1 (gring_proj x)); rewrite -mulmxA mulmx_suml !linear_sum.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite (bigD1 x Gx) big1 => [|z /andP[Gz]]; rewrite !linearZ /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite eq_sym gring_projE // => /negPf->; rewrite scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite gring_projE // eqxx scalemx1 (bigD1 (x ^ y)%g) ?groupJ //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite big1 => [|z /andP[Gz]]; rewrite -scalemxAl !linearZ /=.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "rewrite !addr0 -!repr_mxM ?groupM // mulgA mulKVg mulgK => /rowP/(_ 0).",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite gring_projE // eqxx scalemx1 !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eq_sym -(can_eq (conjgKV y)) conjgK conjgE invgK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -!repr_mxM ?gring_projE ?groupM // => /negPf->; rewrite scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma regular_module_ideal m (M : 'M_(m, nG)) : mxmodule aG M = right_mx_ideal R_G (M *m R_G).",
            "VernacStartTheoremProof",
            "35f34d9eddc2f2e1a34b75c5329954337b2a39ba"
        ],
        [
            "apply/idP/idP=> modM.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/mulsmx_subP=> A B; rewrite !mem_sub_gring => /andP[R_A M_A] R_B.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite envelop_mxM // gring_row_mul (mxmodule_envelop modM).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/mxmoduleP=> x Gx; apply/row_subP=> i; rewrite row_mul -mem_gring_mx.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "rewrite gring_mxJ // (mulsmx_subP modM) ?envelop_mx_id //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mem_gring_mx row_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition irrType := socleType aG.",
            "VernacDefinition",
            "3df467c22e9d89f61d516629cf03503be14cb81a"
        ],
        [
            "Identity Coercion type_of_irrType : irrType >-> socleType.",
            "VernacIdentityCoercion",
            "f6c943d597bd353b00fe0eea92c8edde932c7edb"
        ],
        [
            "Variable sG : irrType.",
            "VernacAssumption",
            "a465460a9c548eb8457aa5dd5955ccf702415c43"
        ],
        [
            "Definition irr_degree (i : sG) := \\rank (socle_base i).",
            "VernacDefinition",
            "558ed807125f62ea36c156b3d849ba4fea53434e"
        ],
        [
            "Local Notation \"'n_ i\" := (irr_degree i) : group_ring_scope.",
            "VernacNotation",
            "a152321cfd62fffd13b9ae2b6253c0826a0bd05a"
        ],
        [
            "Local Open Scope group_ring_scope.",
            "VernacOpenCloseScope",
            "fca5d893f3b10c38c00e28e42f0782669472ebec"
        ],
        [
            "Lemma irr_degreeE i : 'n_i = \\rank (socle_base i).",
            "VernacStartTheoremProof",
            "d962e77aa59cb152f0ccd42ecb491f9d60dcb8d3"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_degree_gt0 i : 'n_i > 0.",
            "VernacStartTheoremProof",
            "9c3df7c1d06150f2592da628938067754d39487a"
        ],
        [
            "by rewrite lt0n mxrank_eq0; case: (socle_simple i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition irr_repr i : mx_representation F G 'n_i := socle_repr i.",
            "VernacDefinition",
            "9d960723e4b7ff600e24fef3198efbfe655a5b72"
        ],
        [
            "Lemma irr_reprE i x : irr_repr i x = submod_mx (socle_module i) x.",
            "VernacStartTheoremProof",
            "49fe859550df68a819ca6b8ea048c91e8269bb10"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rfix_regular : (rfix_mx aG G :=: gring_row (gset_mx G))%MS.",
            "VernacStartTheoremProof",
            "349f05d70639d9849e028e02e4ff139f99ac07fc"
        ],
        [
            "apply/eqmxP/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/rfix_mxP => x Gx; rewrite -gring_row_mul; congr gring_row.",
            "VernacExtend",
            "91580bd9cdf2cad626638a70b66bf9b00afa41b1"
        ],
        [
            "rewrite {2}/gset_mx (reindex_astabs 'R x) ?astabsR //= mulmx_suml.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => y Gy; rewrite repr_mxM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/rV_subP=> v /rfix_mxP cGv.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have /envelop_mxP[a def_v]: (gring_mx aG v \\in R_G)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite vec_mxK submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices ->: v = a 1%g *: gring_row (gset_mx G) by rewrite scalemx_sub.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite -linearZ scaler_sumr -[v]gring_mxK def_v; congr (gring_row _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "apply: eq_bigr => x Gx; congr (_ *: _).",
            "VernacExtend",
            "0fc412f71bc6f463112dd7d405085259e70a06c5"
        ],
        [
            "move/rowP/(_ 0): (congr1 (gring_proj x \\o gring_mx aG) (cGv x Gx)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /= gring_mxJ // def_v mulmx_suml !linear_sum (bigD1 1%g) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite repr_mx1 -scalemxAl mul1mx linearZ /= gring_projE // eqxx scalemx1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite big1 ?addr0 ?mxE /= => [ | y /andP[Gy nt_y]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -scalemxAl linearZ -repr_mxM //= gring_projE ?groupM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eq_sym eq_mulgV1 mulgK (negPf nt_y) scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (bigD1 x) //= linearZ /= gring_projE // eqxx scalemx1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite big1 ?addr0 ?mxE // => y /andP[Gy ne_yx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite linearZ /= gring_projE // eq_sym (negPf ne_yx) scaler0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma principal_comp_subproof : mxsimple aG (rfix_mx aG G).",
            "VernacStartTheoremProof",
            "88e7e839bb6c0e9b3f1869acbf9bb51fa855b4c4"
        ],
        [
            "apply: linear_mxsimple; first exact: rfix_mx_module.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite rfix_regular eqn_leq rank_leq_row lt0n mxrank_eq0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/eqP => /(congr1 (gring_proj 1 \\o gring_mx aG)); apply/eqP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite /= -[gring_mx _ _]/(gring_op _ _) !linear0 !linear_sum (bigD1 1%g) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite gring_opG ?gring_projE // eqxx big1 ?addr0 ?oner_eq0 // => x.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by case/andP=> Gx nt_x; rewrite gring_opG // gring_projE // eq_sym (negPf nt_x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact principal_comp_key : unit.",
            "VernacStartTheoremProof",
            "adec2974b53029b90fd2c86d121bad1774b0e5da"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition principal_comp_def := PackSocle (component_socle sG principal_comp_subproof).",
            "VernacDefinition",
            "124ca9be0c67164f01f482958a3c18027fd65154"
        ],
        [
            "Definition principal_comp := locked_with principal_comp_key principal_comp_def.",
            "VernacDefinition",
            "270c54c0f760214e74baca14d596d1d66098d8b7"
        ],
        [
            "Local Notation \"1\" := principal_comp : irrType_scope.",
            "VernacNotation",
            "ffff136c3b8a8e21b15113f6f2c6de3bb497696f"
        ],
        [
            "Lemma irr1_rfix : (1%irr :=: rfix_mx aG G)%MS.",
            "VernacStartTheoremProof",
            "a0788b805ec6bd85583603de47ba464fe0120af2"
        ],
        [
            "rewrite [1%irr]unlock PackSocleK; apply/eqmxP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (component_mx_id principal_comp_subproof) andbT.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [I [W isoW ->]] := component_mx_def principal_comp_subproof.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/sumsmx_subP=> i _; have [f _ hom_f <-]:= isoW i.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "by apply/rfix_mxP=> x Gx; rewrite -(hom_mxP hom_f) // (rfix_mxP G _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rank_irr1 : \\rank 1%irr = 1%N.",
            "VernacStartTheoremProof",
            "44a1690f331690e3251b6fc9a74dbd490360d1d6"
        ],
        [
            "apply/eqP; rewrite eqn_leq lt0n mxrank_eq0 nz_socle andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite irr1_rfix rfix_regular rank_leq_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma degree_irr1 : 'n_1 = 1%N.",
            "VernacStartTheoremProof",
            "f59c6b81c650063eebb1d3b2552e240e86b16d74"
        ],
        [
            "apply/eqP; rewrite eqn_leq irr_degree_gt0 -rank_irr1.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mxrankS ?component_mx_id //; apply: socle_simple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Wedderburn_subring (i : sG) := <<i *m R_G>>%MS.",
            "VernacDefinition",
            "ce1d89e01d7e407dd398388448299b029774d8e6"
        ],
        [
            "Local Notation \"''R_' i\" := (Wedderburn_subring i) : group_ring_scope.",
            "VernacNotation",
            "614068a72de90243beb60213e47c3f2072330012"
        ],
        [
            "Let sums_R : (\\sum_i 'R_i :=: Socle sG *m R_G)%MS.",
            "VernacDefinition",
            "7839ea690ef0ae1b6bca08a655333995c83c0944"
        ],
        [
            "apply/eqmxP; set R_S := (_ <= _)%MS.",
            "VernacExtend",
            "ac591433247162d5294d7c948ab3b309c2d6e368"
        ],
        [
            "have sRS: R_S by apply/sumsmx_subP=> i; rewrite genmxE submxMr ?(sumsmx_sup i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite sRS -(mulmxKpV sRS) mulmxA submxMr //; apply/sumsmx_subP=> i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -(submxMfree _ _ gring_free) -(mulmxA _ _ R_G) mulmxKpV //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (sumsmx_sup i) ?genmxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_ideal i : mx_ideal R_G 'R_i.",
            "VernacStartTheoremProof",
            "6d3b86a64d19463adb82806c1c2d99826ea91dfd"
        ],
        [
            "apply/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /right_mx_ideal genmxE (muls_eqmx (genmxE _) (eqmx_refl _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[(_ <= _)%MS]regular_module_ideal component_mx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/mulsmx_subP=> A B R_A; rewrite !genmxE !mem_sub_gring => /andP[R_B SiB].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite envelop_mxM {R_A}// gring_row_mul -{R_B}(gring_rowK R_B).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose f := mulmx (gring_row A) \\o gring_mx aG.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "rewrite -[_ *m _](mul_rV_lin1 [linear of f]).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suffices: (i *m lin1_mx f <= i)%MS by apply: submx_trans; rewrite submxMr.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply: hom_component_mx; first exact: socle_simple.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/rV_subP=> v _; apply/hom_mxP=> x Gx.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite !mul_rV_lin1 /f /= gring_mxJ ?mulmxA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_direct : mxdirect (\\sum_i 'R_i)%MS.",
            "VernacStartTheoremProof",
            "d20c1eb35719d5b5ec85443ca5df384ae45ab198"
        ],
        [
            "apply/mxdirectP; rewrite /= sums_R mxrankMfree ?gring_free //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (mxdirectP (Socle_direct sG)); apply: eq_bigr=> i _ /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite genmxE mxrankMfree ?gring_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_disjoint i j : i != j -> ('R_i :&: 'R_j)%MS = 0.",
            "VernacStartTheoremProof",
            "67685d418e92cc034d9fa970cf12fe38547ad838"
        ],
        [
            "move=> ne_ij; apply/eqP; rewrite -submx0 capmxC.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -(mxdirect_sumsP Wedderburn_direct j) // capmxS // (sumsmx_sup i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_annihilate i j : i != j -> ('R_i * 'R_j)%MS = 0.",
            "VernacStartTheoremProof",
            "bf6a4e1b3c854b0a7f928d94b01e4489dc606392"
        ],
        [
            "move=> ne_ij; apply/eqP; rewrite -submx0 -(Wedderburn_disjoint ne_ij).",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite sub_capmx; apply/andP; split.",
            "VernacExtend",
            "563747ab88f591bd67f85e19847b20501f275f62"
        ],
        [
            "case/andP: (Wedderburn_ideal i) => _; apply: submx_trans.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by rewrite mulsmxS // genmxE submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/andP: (Wedderburn_ideal j) => idlRj _; apply: submx_trans idlRj.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by rewrite mulsmxS // genmxE submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_mulmx0 i j A B : i != j -> (A \\in 'R_i)%MS -> (B \\in 'R_j)%MS -> A *m B = 0.",
            "VernacStartTheoremProof",
            "848cddb2e3cd93e10fd77cd9be47e7a00c41b9b6"
        ],
        [
            "move=> ne_ij RiA RjB; apply: memmx0.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -(Wedderburn_annihilate ne_ij) mem_mulsmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis F'G : [char F]^'.-group G.",
            "VernacAssumption",
            "3f956bb3f374d768f0dc9d4ee66dad4431636f0d"
        ],
        [
            "Lemma irr_mx_sum : (\\sum_(i : sG) i = 1%:M)%MS.",
            "VernacStartTheoremProof",
            "cb1bc05e4cb9637924011364d9b8641991433480"
        ],
        [
            "by apply: reducible_Socle1; apply: mx_Maschke.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_sum : (\\sum_i 'R_i :=: R_G)%MS.",
            "VernacStartTheoremProof",
            "48eaccadf12f66cd82ac0895936a5ba07040ce2e"
        ],
        [
            "by apply: eqmx_trans sums_R _; rewrite /Socle irr_mx_sum mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Wedderburn_id i := vec_mx (mxvec 1%:M *m proj_mx 'R_i (\\sum_(j | j != i) 'R_j)%MS).",
            "VernacDefinition",
            "7a42150919ab7dbf368d873fc7115c7f0ea87f4e"
        ],
        [
            "Local Notation \"''e_' i\" := (Wedderburn_id i) : group_ring_scope.",
            "VernacNotation",
            "0ec3dc9262b19f4509bc45e9bdd33a1ea963ad5d"
        ],
        [
            "Lemma Wedderburn_sum_id : \\sum_i 'e_i = 1%:M.",
            "VernacStartTheoremProof",
            "2f94295fea5c5dfa57c10d182075b87e32c35f5f"
        ],
        [
            "rewrite -linear_sum; apply: canLR mxvecK _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have: (1%:M \\in R_G)%MS := envelop_mx1 aG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -Wedderburn_sum; case/(sub_dsumsmx Wedderburn_direct) => e Re -> _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply: eq_bigr => i _; have dxR := mxdirect_sumsP Wedderburn_direct i (erefl _).",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "rewrite (bigD1 i) // mulmxDl proj_mx_id ?Re // proj_mx_0 ?addr0 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite summx_sub // => j ne_ji; rewrite (sumsmx_sup j) ?Re.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_id_mem i : ('e_i \\in 'R_i)%MS.",
            "VernacStartTheoremProof",
            "0c19940aba98cad75f949335fcbadd959fbcada2"
        ],
        [
            "by rewrite vec_mxK proj_mx_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_is_id i : mxring_id 'R_i 'e_i.",
            "VernacStartTheoremProof",
            "8c64f57761f6f2a4cec76c0b0cecd2673de2a5f8"
        ],
        [
            "have ideRi A: (A \\in 'R_i)%MS -> 'e_i *m A = A.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> RiA; rewrite -{2}[A]mul1mx -Wedderburn_sum_id mulmx_suml.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite (bigD1 i) //= big1 ?addr0 // => j ne_ji.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite (Wedderburn_mulmx0 ne_ji) ?Wedderburn_id_mem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> // [||A RiA]; first 2 [exact: Wedderburn_id_mem].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: contraNneq (nz_socle i) => e0.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/rowV0P=> v; rewrite -mem_gring_mx -(genmxE (i *m _)) => /ideRi.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite e0 mul0mx => /(canLR gring_mxK); rewrite linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{2}[A]mulmx1 -Wedderburn_sum_id mulmx_sumr (bigD1 i) //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite big1 ?addr0 // => j; rewrite eq_sym => ne_ij.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "by rewrite (Wedderburn_mulmx0 ne_ij) ?Wedderburn_id_mem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_closed i : ('R_i * 'R_i = 'R_i)%MS.",
            "VernacStartTheoremProof",
            "285535209e39c8ed13eebd106fc441e272fb4d19"
        ],
        [
            "rewrite -{3}['R_i]genmx_id -/'R_i -genmx_muls; apply/genmxP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have [idlRi idrRi] := andP (Wedderburn_ideal i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/andP; split.",
            "VernacExtend",
            "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
        ],
        [
            "by apply: submx_trans idrRi; rewrite mulsmxS // genmxE submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [_ Ri_e ideRi _] := Wedderburn_is_id i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/memmx_subP=> A RiA; rewrite -[A]ideRi ?mem_mulsmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_is_ring i : mxring 'R_i.",
            "VernacStartTheoremProof",
            "6a47d77d957c8c7ca5f76bed0694792d96edc71d"
        ],
        [
            "rewrite /mxring /left_mx_ideal Wedderburn_closed submx_refl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/mxring_idP; exists 'e_i; apply: Wedderburn_is_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_min_ideal m i (E : 'A_(m, nG)) : E != 0 -> (E <= 'R_i)%MS -> mx_ideal R_G E -> (E :=: 'R_i)%MS.",
            "VernacStartTheoremProof",
            "63dba60e6c45f2897962425a327c0c75230c9d3a"
        ],
        [
            "move=> nzE sE_Ri /andP[idlE idrE]; apply/eqmxP; rewrite sE_Ri.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "pose M := E *m pinvmx R_G; have defE: E = M *m R_G.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "by rewrite mulmxKpV // (submx_trans sE_Ri) // genmxE submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have modM: mxmodule aG M by rewrite regular_module_ideal -defE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have simSi := socle_simple i; set Si := socle_base i in simSi.",
            "VernacExtend",
            "81881a093b2294c76be3b432fbe83612064d7bc9"
        ],
        [
            "have [I [W isoW defW]]:= component_mx_def simSi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /'R_i /socle_val /= defW genmxE defE submxMr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/sumsmx_subP=> j _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have simW := mx_iso_simple (isoW j) simSi; have [modW _ minW] := simW.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have [{minW}dxWE | nzWE] := eqVneq (W j :&: M)%MS 0; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (sameP capmx_idPl eqmxP) minW ?capmxSl ?capmx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [_ Rei ideRi _] := Wedderburn_is_id i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have:= nzE; rewrite -submx0 => /memmx_subP[A E_A].",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "rewrite -(ideRi _ (memmx_subP sE_Ri _ E_A)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have:= E_A; rewrite defE mem_sub_gring => /andP[R_A M_A].",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "have:= Rei; rewrite genmxE mem_sub_gring => /andP[Re].",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "rewrite -{2}(gring_rowK Re) /socle_val defW => /sub_sumsmxP[e ->].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !(linear_sum, mulmx_suml) summx_sub //= => k _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite -(gring_rowK R_A) -gring_mxA -mulmxA gring_rowK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ((W k *m _ =P 0) _) ?linear0 ?sub0mx //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [f _ homWf defWk] := mx_iso_trans (mx_iso_sym (isoW j)) (isoW k).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -submx0 -{k defWk}(eqmxMr _ defWk) -(hom_envelop_mxC homWf) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(mul0mx _ f) submxMr {f homWf}// -dxWE sub_capmx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mxmodule_envelop modW) //=; apply/row_subP=> k.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite row_mul -mem_gring_mx -(gring_rowK R_A) gring_mxA gring_rowK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -defE (memmx_subP idlE) // mem_mulsmx ?gring_mxP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section IrrComponent.",
            "VernacBeginSection",
            "93bbfdc9e5e66269a88f4f8e4a8e7543018f94e7"
        ],
        [
            "Variables (n : nat) (rG : mx_representation F G n).",
            "VernacAssumption",
            "c5ca37fe80813f4456a5df2ee6c9919529c67144"
        ],
        [
            "Local Notation E_G := (enveloping_algebra_mx rG).",
            "VernacSyntacticDefinition",
            "94357c071d2c5d02c84a40d10d49f15cfa490e0a"
        ],
        [
            "Let not_rsim_op0 (iG j : sG) A : mx_rsim rG (socle_repr iG) -> iG != j -> (A \\in 'R_j)%MS -> gring_op rG A = 0.",
            "VernacDefinition",
            "322d98b01ebacc42475cc906296c17d6a7adf3c0"
        ],
        [
            "case/mx_rsim_def=> f [f' _ hom_f] ne_iG_j RjA.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "transitivity (f *m in_submod _ (val_submod 1%:M *m A) *m f').",
            "VernacExtend",
            "76b82cf26fc5507e3c87d0d8624701e58307d429"
        ],
        [
            "have{RjA}: (A \\in R_G)%MS by rewrite -Wedderburn_sum (sumsmx_sup j).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/envelop_mxP=> a ->{A}; rewrite !(linear_sum, mulmx_suml).",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by apply: eq_bigr => x Gx; rewrite !linearZ /= -scalemxAl -hom_f ?gring_opG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (_ : _ *m A = 0) ?(linear0, mul0mx) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/row_matrixP=> i; rewrite row_mul row0 -[row _ _]gring_mxK -gring_row_mul.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (Wedderburn_mulmx0 ne_iG_j) ?linear0 // genmxE mem_gring_mx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (row_subP _) // val_submod1 component_mx_id //; apply: socle_simple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition irr_comp := odflt 1%irr [pick i | gring_op rG 'e_i != 0].",
            "VernacDefinition",
            "44679e533cd4220f1580385a03d0269a22b2df7d"
        ],
        [
            "Local Notation iG := irr_comp.",
            "VernacSyntacticDefinition",
            "4afe615b5998bc9968b0d2eeaceb8924d3df5524"
        ],
        [
            "Hypothesis irrG : mx_irreducible rG.",
            "VernacAssumption",
            "560daadaa8042f69cdcc84b835b2ff49727390d2"
        ],
        [
            "Lemma rsim_irr_comp : mx_rsim rG (irr_repr iG).",
            "VernacStartTheoremProof",
            "b241e3cd9d5c9637ee080e55898900a140d22318"
        ],
        [
            "have [M [modM rsimM]] := rsim_regular_submod irrG F'G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have simM: mxsimple aG M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/mx_irrP: irrG => n_gt0 minG.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [f def_n injf homf] := mx_rsim_sym rsimM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/(submod_mx_irr modM)/mx_irrP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split=> [|U modU nzU]; first by rewrite def_n.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /row_full -(mxrankMfree _ injf) -genmxE {4}def_n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: minG; last by rewrite -mxrank_eq0 genmxE mxrankMfree // mxrank_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (eqmx_module _ (genmxE _)); apply/mxmoduleP=> x Gx.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -mulmxA -homf // mulmxA submxMr // (mxmoduleP modU).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose i := PackSocle (component_socle sG simM).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have{modM rsimM} rsimM: mx_rsim rG (socle_repr i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: mx_rsim_trans rsimM (mx_rsim_sym _); apply/mx_rsim_iso.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: (component_mx_iso (socle_simple _)) => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite [component_mx _ _]PackSocleK component_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [<- // | ne_i_iG] := eqVneq i iG.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices {i M simM ne_i_iG rsimM}: gring_op rG 'e_iG != 0.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite (not_rsim_op0 rsimM ne_i_iG) ?Wedderburn_id_mem ?eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /iG; case: pickP => //= G0.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "suffices: rG 1%g == 0.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by case/idPn; rewrite -mxrank_eq0 repr_mx1 mxrank1 -lt0n; case/mx_irrP: irrG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -gring_opG // repr_mx1 -Wedderburn_sum_id linear_sum big1 // => j _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by move/eqP: (G0 j).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_comp'_op0 j A : j != iG -> (A \\in 'R_j)%MS -> gring_op rG A = 0.",
            "VernacStartTheoremProof",
            "5869c60ea1e6d5c848ba345b1f59ab6560cda5b6"
        ],
        [
            "by rewrite eq_sym; apply: not_rsim_op0 rsim_irr_comp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_comp_envelop : ('R_iG *m lin_mx (gring_op rG) :=: E_G)%MS.",
            "VernacStartTheoremProof",
            "b6c4da571ebddecb76e9feac2238c62525b65bab"
        ],
        [
            "apply/eqmxP/andP; split; apply/row_subP=> i.",
            "VernacExtend",
            "acf5855cc010871228abcccac05ae5fee2482818"
        ],
        [
            "by rewrite row_mul mul_rV_lin gring_mxP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite rowK /= -gring_opG ?enum_valP // -mul_vec_lin -gring_opG ?enum_valP //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite vec_mxK /= -mulmxA mulmx_sub {i}//= -(eqmxMr _ Wedderburn_sum).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (bigD1 iG) //= addsmxMr addsmxC [_ *m _](sub_kermxP _) ?adds0mx //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/sumsmx_subP => j ne_j_iG; apply/memmx_subP=> A RjA; apply/sub_kermxP.",
            "VernacExtend",
            "6e77d60b6fe9e5152bca0bfa572494ee57c5c96d"
        ],
        [
            "by rewrite mul_vec_lin /= (irr_comp'_op0 ne_j_iG RjA) linear0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ker_irr_comp_op : ('R_iG :&: kermx (lin_mx (gring_op rG)))%MS = 0.",
            "VernacStartTheoremProof",
            "dab418b423f88545c353c66eb0d5f28376789d4f"
        ],
        [
            "apply/eqP; rewrite -submx0; apply/memmx_subP=> A.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite sub_capmx /= submx0 mxvec_eq0 => /andP[R_A].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (sameP sub_kermxP eqP) mul_vec_lin mxvec_eq0 /= => opA0.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [_ Re ideR _] := Wedderburn_is_id iG; rewrite -[A]ideR {ideR}//.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "move: Re; rewrite genmxE mem_sub_gring /socle_val => /andP[Re].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite -{2}(gring_rowK Re) -submx0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose simMi := socle_simple iG; have [J [M isoM ->]] := component_mx_def simMi.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "case/sub_sumsmxP=> e ->; rewrite linear_sum mulmx_suml summx_sub // => j _.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite -(in_submodK (submxMl _ (M j))); move: (in_submod _ _) => v.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "have modMj: mxmodule aG (M j) by apply: mx_iso_module (isoM j) _; case: simMi.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have rsimMj: mx_rsim rG (submod_repr modMj).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: mx_rsim_trans rsim_irr_comp _; apply/mx_rsim_iso.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [f [f' _ hom_f]] := mx_rsim_def (mx_rsim_sym rsimMj); rewrite submx0.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have <-: (gring_mx aG (val_submod (v *m (f *m gring_op rG A *m f')))) = 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (eqP opA0) !(mul0mx, linear0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: (A \\in R_G)%MS by rewrite -Wedderburn_sum (sumsmx_sup iG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/envelop_mxP=> a ->; rewrite !(linear_sum, mulmx_suml) /=; apply/eqP.",
            "VernacExtend",
            "7b10d760ecce4015b43936eb8ee3a43374e85678"
        ],
        [
            "apply: eq_bigr=> x Gx; rewrite !linearZ -scalemxAl !linearZ /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite gring_opG // -hom_f // val_submodJ // gring_mxJ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma regular_op_inj : {in [pred A | (A \\in 'R_iG)%MS] &, injective (gring_op rG)}.",
            "VernacStartTheoremProof",
            "17440d9197fb024598dbdafbe4721b2bf68c5272"
        ],
        [
            "move=> A B RnA RnB /= eqAB; apply/eqP; rewrite -subr_eq0 -mxvec_eq0 -submx0.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite -ker_irr_comp_op sub_capmx (sameP sub_kermxP eqP) mul_vec_lin.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite 2!linearB /= eqAB subrr linear0 addmx_sub ?eqmx_opp /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rank_irr_comp : \\rank 'R_iG = \\rank E_G.",
            "VernacStartTheoremProof",
            "63c7eb2240b6fe68d75d271a1440da878fcfec4f"
        ],
        [
            "symmetry; rewrite -{1}irr_comp_envelop; apply/mxrank_injP.",
            "VernacExtend",
            "b531cdfdd16edb48e06651aa0838bf384aa38229"
        ],
        [
            "by rewrite ker_irr_comp_op.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IrrComponent.",
            "VernacEndSegment",
            "db2f458738d32a5b6b7ce38b5763aee9138eb1f6"
        ],
        [
            "Lemma irr_comp_rsim n1 n2 rG1 rG2 : @mx_rsim _ G n1 rG1 n2 rG2 -> irr_comp rG1 = irr_comp rG2.",
            "VernacStartTheoremProof",
            "c68abb46010f0743cab26f2f72b2b98878364d3f"
        ],
        [
            "case=> f eq_n12; rewrite -eq_n12 in rG2 f * => inj_f hom_f.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "congr (odflt _ _); apply: eq_pick => i; rewrite -!mxrank_eq0.",
            "VernacExtend",
            "e02c5e37d306c924c86ea325376d95ddc0d1741e"
        ],
        [
            "rewrite -(mxrankMfree _ inj_f); symmetry; rewrite -(eqmxMfull _ inj_f).",
            "VernacExtend",
            "b4b4a9a8da456b06e97068c04136d6f5c7312465"
        ],
        [
            "have /envelop_mxP[e ->{i}]: ('e_i \\in R_G)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -Wedderburn_sum (sumsmx_sup i) ?Wedderburn_id_mem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr (\\rank _ != _); rewrite !(mulmx_suml, linear_sum); apply: eq_bigr => x Gx.",
            "VernacExtend",
            "775b998c29d59f89d853e0c4a629d4a3388abe3b"
        ],
        [
            "by rewrite !linearZ -scalemxAl /= !gring_opG ?hom_f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_reprK i : irr_comp (irr_repr i) = i.",
            "VernacStartTheoremProof",
            "df9b4d6787b67523a11bc8e73ad9cd924174820b"
        ],
        [
            "apply/eqP; apply/component_mx_isoP; try exact: socle_simple.",
            "VernacExtend",
            "d7a820250de0061b0df8dae223eb5c0ef51e7cce"
        ],
        [
            "by move/mx_rsim_iso: (rsim_irr_comp (socle_irr i)); apply: mx_iso_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_repr'_op0 i j A : j != i -> (A \\in 'R_j)%MS -> gring_op (irr_repr i) A = 0.",
            "VernacStartTheoremProof",
            "b4fb1cf78620cfa92c4225b998a27842a521fd16"
        ],
        [
            "by move=> neq_ij /irr_comp'_op0-> //; [apply: socle_irr | rewrite irr_reprK].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma op_Wedderburn_id i : gring_op (irr_repr i) 'e_i = 1%:M.",
            "VernacStartTheoremProof",
            "f16230fd3fb54379b7df49a66cfe0e90c3bcfc03"
        ],
        [
            "rewrite -(gring_op1 (irr_repr i)) -Wedderburn_sum_id.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite linear_sum (bigD1 i) //= addrC big1 ?add0r // => j neq_ji.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exact: irr_repr'_op0 (Wedderburn_id_mem j).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_comp_id (M : 'M_nG) (modM : mxmodule aG M) (iM : sG) : mxsimple aG M -> (M <= iM)%MS -> irr_comp (submod_repr modM) = iM.",
            "VernacStartTheoremProof",
            "5681dc342af7a5a90933962310fba56019b43dfe"
        ],
        [
            "move=> simM sMiM; rewrite -[iM]irr_reprK.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply/esym/irr_comp_rsim/mx_rsim_iso/component_mx_iso => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exact: socle_simple.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr1_repr x : x \\in G -> irr_repr 1 x = 1%:M.",
            "VernacStartTheoremProof",
            "22073f161303162e2c48c56e50b212b11e0e3e6a"
        ],
        [
            "move=> Gx; suffices: x \\in rker (irr_repr 1) by case/rkerP.",
            "VernacExtend",
            "f8582445b13cd09e9c30648f0ec245f72ecdd43e"
        ],
        [
            "apply: subsetP x Gx; rewrite rker_submod rfix_mx_rstabC // -irr1_rfix.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: component_mx_id; apply: socle_simple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis splitG : group_splitting_field G.",
            "VernacAssumption",
            "eb0725c03edbea33b1b3ec92d776dce18395db16"
        ],
        [
            "Lemma rank_Wedderburn_subring i : \\rank 'R_i = ('n_i ^ 2)%N.",
            "VernacStartTheoremProof",
            "cc0ec413a3cd8fb0f1818572ad27929df189813c"
        ],
        [
            "apply/eqP; rewrite -{1}[i]irr_reprK; have irrSi := socle_irr i.",
            "VernacExtend",
            "88e21057fc6b7102e6280fe7858222ef45ddbdf0"
        ],
        [
            "by case/andP: (splitG irrSi) => _; rewrite rank_irr_comp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_irr_degree : (\\sum_i 'n_i ^ 2 = nG)%N.",
            "VernacStartTheoremProof",
            "40f9a114a0cd50d513a1f9f888ce0231e3067321"
        ],
        [
            "apply: etrans (eqnP gring_free).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -Wedderburn_sum (mxdirectP Wedderburn_direct) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite rank_Wedderburn_subring.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_mx_mult i : socle_mult i = 'n_i.",
            "VernacStartTheoremProof",
            "485dd6b3de3c95dfae33c5c714ec81297b620880"
        ],
        [
            "rewrite /socle_mult -(mxrankMfree _ gring_free) -genmxE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite rank_Wedderburn_subring mulKn ?irr_degree_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxtrace_regular : {in G, forall x, \\tr (aG x) = \\sum_i \\tr (socle_repr i x) *+ 'n_i}.",
            "VernacStartTheoremProof",
            "53207fcf401d2e65557b058c8aa15b335906afee"
        ],
        [
            "move=> x Gx; have soc1: (Socle sG :=: 1%:M)%MS by rewrite -irr_mx_sum.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite -(mxtrace_submod1 (Socle_module sG) soc1) // mxtrace_Socle //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => i _; rewrite irr_mx_mult.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition linear_irr := [set i | 'n_i == 1%N].",
            "VernacDefinition",
            "063a42f86c42f9c5d9572c506c5555d989a4b4f2"
        ],
        [
            "Lemma irr_degree_abelian : abelian G -> forall i, 'n_i = 1%N.",
            "VernacStartTheoremProof",
            "e476767dd2cb3698599db8eae3fd87cfaaf2c5f1"
        ],
        [
            "by move=> cGG i; apply: mxsimple_abelian_linear (socle_simple i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma linear_irr_comp i : 'n_i = 1%N -> (i :=: socle_base i)%MS.",
            "VernacStartTheoremProof",
            "e2b02bc7f94da7f52fbf2098677c12e0863156e5"
        ],
        [
            "move=> ni1; apply/eqmxP; rewrite andbC -mxrank_leqif_eq -/'n_i.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite -(mxrankMfree _ gring_free) -genmxE rank_Wedderburn_subring ni1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact: component_mx_id (socle_simple i).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_subring_center i : ('Z('R_i) :=: mxvec 'e_i)%MS.",
            "VernacStartTheoremProof",
            "e30c4de93804add36a6d8c350283ac1d8ab1fb4d"
        ],
        [
            "have [nz_e Re ideR idRe] := Wedderburn_is_id i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Ze: (mxvec 'e_i <= 'Z('R_i))%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite sub_capmx [(_ <= _)%MS]Re.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/cent_mxP=> A R_A; rewrite ideR // idRe.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose irrG := socle_irr i; set rG := socle_repr i in irrG.",
            "VernacExtend",
            "9fb5f9e31e2512a271fa21fe890324d2e3052c71"
        ],
        [
            "pose E_G := enveloping_algebra_mx rG; have absG := splitG irrG.",
            "VernacExtend",
            "c09d1274557abc8857ed64eb3450db2da906c185"
        ],
        [
            "apply/eqmxP; rewrite andbC -(geq_leqif (mxrank_leqif_eq Ze)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have ->: \\rank (mxvec 'e_i) = (0 + 1)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/eqP; rewrite eqn_leq rank_leq_row lt0n mxrank_eq0 mxvec_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(mxrank_mul_ker _ (lin_mx (gring_op rG))) addnC leq_add //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite leqn0 mxrank_eq0 -submx0 -(ker_irr_comp_op irrG) capmxS //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite irr_reprK capmxSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: leq_trans (mxrankS _) (rank_leq_row (mxvec 1%:M)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/memmx_subP=> Ar; case/submxP=> a ->{Ar}.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "rewrite mulmxA mul_rV_lin /=; set A := vec_mx _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "rewrite memmx1 (mx_abs_irr_cent_scalar absG) // -memmx_cent_envelop.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/cent_mxP=> Br; rewrite -(irr_comp_envelop irrG) irr_reprK.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case/submxP=> b /(canRL mxvecK) ->{Br}; rewrite mulmxA mx_rV_lin /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "set B := vec_mx _; have RiB: (B \\in 'R_i)%MS by rewrite vec_mxK submxMl.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "have sRiR: ('R_i <= R_G)%MS by rewrite -Wedderburn_sum (sumsmx_sup i).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: (A \\in 'Z('R_i))%MS by rewrite vec_mxK submxMl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite sub_capmx => /andP[RiA /cent_mxP cRiA].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -!gring_opM ?(memmx_subP sRiR) 1?cRiA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Wedderburn_center : ('Z(R_G) :=: \\matrix_(i < #|sG|) mxvec 'e_(enum_val i))%MS.",
            "VernacStartTheoremProof",
            "acef381a334a774f4ce8aa46e81ccc336129769a"
        ],
        [
            "have:= mxdirect_sums_center Wedderburn_sum Wedderburn_direct Wedderburn_ideal.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/eqmx_trans; apply; apply/eqmxP/andP; split.",
            "VernacExtend",
            "6d65d1cb74176dc98bfd8429b94a35a9261d4104"
        ],
        [
            "apply/sumsmx_subP=> i _; rewrite Wedderburn_subring_center.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: (eq_row_sub (enum_rank i)); rewrite rowK enum_rankK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/row_subP=> i; rewrite rowK -Wedderburn_subring_center.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (sumsmx_sup (enum_val i)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_irr : #|sG| = tG.",
            "VernacStartTheoremProof",
            "65f1cf9e3bc383d3a3c9725a542ef5e2bccb7bc7"
        ],
        [
            "rewrite -(eqnP classg_base_free) classg_base_center.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have:= mxdirect_sums_center Wedderburn_sum Wedderburn_direct Wedderburn_ideal.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move->; rewrite (mxdirectP _) /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/mxdirect_sumsP=> i _; apply/eqP; rewrite -submx0.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "rewrite -{2}(mxdirect_sumsP Wedderburn_direct i) // capmxS ?capmxSl //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/sumsmx_subP=> j neji; rewrite (sumsmx_sup j) ?capmxSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -sum1_card; apply: eq_bigr => i _; apply/eqP.",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "rewrite Wedderburn_subring_center eqn_leq rank_leq_row lt0n mxrank_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite andbT mxvec_eq0; case: (Wedderburn_is_id i).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section CenterMode.",
            "VernacBeginSection",
            "67054bdf8deb53a57b2872f74795903709663eb0"
        ],
        [
            "Variable i : sG.",
            "VernacAssumption",
            "489c278b4d844601b3c78e360890df0fad375caf"
        ],
        [
            "Let i0 := Ordinal (irr_degree_gt0 i).",
            "VernacDefinition",
            "a587f31de8d7da2ac7991565cb829ef00b1fc043"
        ],
        [
            "Definition irr_mode x := irr_repr i x i0 i0.",
            "VernacDefinition",
            "cbb605b47269bb3b417726aab63660f97222fabb"
        ],
        [
            "Lemma irr_mode1 : irr_mode 1 = 1.",
            "VernacStartTheoremProof",
            "2e0d83d288f69bcc2f22cf76dcdcd1dfad4e1f1e"
        ],
        [
            "by rewrite /irr_mode repr_mx1 mxE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_center_scalar : {in 'Z(G), forall x, irr_repr i x = (irr_mode x)%:M}.",
            "VernacStartTheoremProof",
            "27c025942fe061214ffe108ea382dff9173774ac"
        ],
        [
            "rewrite /irr_mode => x /setIP[Gx cGx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "suffices [a ->]: exists a, irr_repr i x = a%:M by rewrite mxE eqxx.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "apply/is_scalar_mxP; apply: (mx_abs_irr_cent_scalar (splitG (socle_irr i))).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by apply/centgmxP=> y Gy; rewrite -!{1}repr_mxM 1?(centP cGx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_modeM : {in 'Z(G) &, {morph irr_mode : x y / (x * y)%g >-> x * y}}.",
            "VernacStartTheoremProof",
            "162d62781156ed48c20761340a6b60c516ce3a0e"
        ],
        [
            "move=> x y Zx Zy; rewrite {1}/irr_mode repr_mxM ?(subsetP (center_sub G)) //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite !irr_center_scalar // -scalar_mxM mxE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_modeX n : {in 'Z(G), {morph irr_mode : x / (x ^+ n)%g >-> x ^+ n}}.",
            "VernacStartTheoremProof",
            "2a8a935ae7ed8290f6e0f062bc8edbfa35168c28"
        ],
        [
            "elim: n => [|n IHn] x Zx; first exact: irr_mode1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite expgS irr_modeM ?groupX // exprS IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_mode_unit : {in 'Z(G), forall x, irr_mode x \\is a GRing.unit}.",
            "VernacStartTheoremProof",
            "b8286376fff2ca59fdb5a9b2eaccc763d06d8c46"
        ],
        [
            "move=> x Zx /=; have:= unitr1 F.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite -irr_mode1 -(mulVg x) irr_modeM ?groupV // unitrM; case/andP=> _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_mode_neq0 : {in 'Z(G), forall x, irr_mode x != 0}.",
            "VernacStartTheoremProof",
            "6ba78de7396f62326788657b2a999e050fcb95eb"
        ],
        [
            "by move=> x /irr_mode_unit; rewrite unitfE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma irr_modeV : {in 'Z(G), {morph irr_mode : x / (x^-1)%g >-> x^-1}}.",
            "VernacStartTheoremProof",
            "3406c8b58371c4b0061339c5c73a6f3083f510a8"
        ],
        [
            "move=> x Zx /=; rewrite -[_^-1]mul1r; apply: canRL (mulrK (irr_mode_unit Zx)) _.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite -irr_modeM ?groupV // mulVg irr_mode1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CenterMode.",
            "VernacEndSegment",
            "c2b28d0bdc0c6d5b36ffb27aca9c2f523ae3d142"
        ],
        [
            "Lemma irr1_mode x : x \\in G -> irr_mode 1 x = 1.",
            "VernacStartTheoremProof",
            "5cf4e0d116cb98aa10861f3dc8db2ce0e7dae513"
        ],
        [
            "by move=> Gx; rewrite /irr_mode irr1_repr ?mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Regular.",
            "VernacEndSegment",
            "233296a5fa74ba106c2d7367235bc30b2e1fa757"
        ],
        [
            "Local Notation \"[ 1 sG ]\" := (principal_comp sG) : irrType_scope.",
            "VernacNotation",
            "d455cd2df3a9d67ba0e83bf5ad1742dd2263be8c"
        ],
        [
            "Section LinearIrr.",
            "VernacBeginSection",
            "bc17e9456f08c1fcea4f2db1bbf5a2fd64903eaa"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Lemma card_linear_irr (sG : irrType G) : [char F]^'.-group G -> group_splitting_field G -> #|linear_irr sG| = #|G : G^`(1)|%g.",
            "VernacStartTheoremProof",
            "93157296859dc49491a2623f9505fa77b9986691"
        ],
        [
            "move=> F'G splitG; apply/eqP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "wlog sGq: / irrType (G / G^`(1))%G by apply: socle_exists.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "have [_ nG'G] := andP (der_normal 1 G); apply/eqP; rewrite -card_quotient //.",
            "VernacExtend",
            "a027ea2906322ee97e674829b54100c8d518288a"
        ],
        [
            "have cGqGq: abelian (G / G^`(1))%g by apply: sub_der1_abelian.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have F'Gq: [char F]^'.-group (G / G^`(1))%g by apply: morphim_pgroup.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have splitGq: group_splitting_field (G / G^`(1))%G.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exact: quotient_splitting_field.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite -(sum_irr_degree sGq) // -sum1_card.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose rG (j : sGq) := morphim_repr (socle_repr j) nG'G.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have irrG j: mx_irreducible (rG j) by apply/morphim_mx_irr; apply: socle_irr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (reindex (fun j => irr_comp sG (rG j))) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_big => [j | j _]; last by rewrite irr_degree_abelian.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [_ lin_j _ _] := rsim_irr_comp sG F'G (irrG j).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite inE -lin_j -irr_degreeE irr_degree_abelian.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose sGlin := {i | i \\in linear_irr sG}.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have sG'k (i : sGlin) : G^`(1)%g \\subset rker (irr_repr (val i)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: i => i /=; rewrite !inE => lin; rewrite rker_linear //=; apply/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose h' u := irr_comp sGq (quo_repr (sG'k u) nG'G).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have irrGq u: mx_irreducible (quo_repr (sG'k u) nG'G).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/quo_mx_irr; apply: socle_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (fun i => oapp h' [1 sGq]%irr (insub i)) => [j | i] lin_i.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (insubT (mem _) lin_i) /=; apply/esym/eqP/socle_rsimP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply: mx_rsim_trans (rsim_irr_comp sGq F'Gq (irrGq _)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have [g lin_g inj_g hom_g] := rsim_irr_comp sG F'G (irrG j).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists g => [||G'x]; last 1 [case/morphimP=> x _ Gx ->] || by [].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite quo_repr_coset ?hom_g.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (insubT (mem _) lin_i) /=; apply/esym/eqP/socle_rsimP.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "set u := exist _ _ _; apply: mx_rsim_trans (rsim_irr_comp sG F'G (irrG _)).",
            "VernacExtend",
            "0efc893cd6f40fa03714e330608ed1eb1de1560e"
        ],
        [
            "have [g lin_g inj_g hom_g] := rsim_irr_comp sGq F'Gq (irrGq u).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists g => [||x Gx]; last 1 [have:= hom_g (coset _ x)] || by [].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite quo_repr_coset; first by apply; rewrite mem_quotient.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primitive_root_splitting_abelian (z : F) : #|G|.-primitive_root z -> abelian G -> group_splitting_field G.",
            "VernacStartTheoremProof",
            "f1bfed46a8ccbb6766eb0d855a7d86b42f0c962a"
        ],
        [
            "move=> ozG cGG [|n] rG irrG; first by case/mx_irrP: irrG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (pickP [pred x in G | ~~ is_scalar_mx (rG x)]) => [x | scalG].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/andP=> Gx nscal_rGx; have: horner_mx (rG x) ('X^#|G| - 1) == 0.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "rewrite rmorphB rmorphX /= horner_mx_C horner_mx_X.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -repr_mxX ?inE // ((_ ^+ _ =P 1)%g _) ?repr_mx1 ?subrr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -order_dvdn order_dvdG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/idPn; rewrite -mxrank_eq0 -(factor_Xn_sub_1 ozG).",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "elim: #|G| => [|i IHi]; first by rewrite big_nil horner_mx_C mxrank1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite big_nat_recr //= rmorphM mxrankMfree {IHi}//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite row_free_unit rmorphB /= horner_mx_X horner_mx_C.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mx_Schur irrG) ?subr_eq0 //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: contraNneq nscal_rGx => ->; apply: scalar_mx_is_scalar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -memmx_cent_envelop linearB.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addmx_sub ?eqmx_opp ?scalar_mx_cent //= memmx_cent_envelop.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/centgmxP=> j Zh_j; rewrite -!repr_mxM // (centsP cGG).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose M := <<delta_mx 0 0 : 'rV[F]_n.+1>>%MS.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have linM: \\rank M = 1%N by rewrite genmxE mxrank_delta.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have modM: mxmodule rG M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/mxmoduleP=> x Gx; move/idPn: (scalG x); rewrite /= Gx negbK.",
            "VernacExtend",
            "892743169f9b7a8d1078a131ab1583767aafbf69"
        ],
        [
            "by case/is_scalar_mxP=> ? ->; rewrite scalar_mxC submxMl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: linear_mx_abs_irr; apply/eqP; rewrite eq_sym -linM.",
            "VernacExtend",
            "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
        ],
        [
            "by case/mx_irrP: irrG => _; apply; rewrite // -mxrank_eq0 linM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cycle_repr_structure x (sG : irrType G) : G :=: <[x]> -> [char F]^'.-group G -> group_splitting_field G -> exists2 w : F, #|G|.-primitive_root w & exists iphi : 'I_#|G| -> sG, [/\\ bijective iphi, #|sG| = #|G|, forall i, irr_mode (iphi i) x = w ^+ i & forall i, irr_repr (iphi i) x = (w ^+ i)%:M].",
            "VernacStartTheoremProof",
            "73a4ed7d534abc8b8c5e0f1871ebf4739dff10da"
        ],
        [
            "move=> defG; rewrite {defG}(group_inj defG) -/#[x] in sG * => F'X splitF.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have Xx := cycle_id x; have cXX := cycle_abelian x.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have card_sG: #|sG| = #[x].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite card_irr //; apply/eqP; rewrite -card_classes_abelian.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have linX := irr_degree_abelian splitF cXX (_ : sG).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose r (W : sG) := irr_mode W x.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have scalX W: irr_repr W x = (r W)%:M.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: irr_center_scalar; rewrite ?(center_idP _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have inj_r: injective r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> V W eqVW; rewrite -(irr_reprK F'X V) -(irr_reprK F'X W).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (irr_repr V) (irr_repr W) (scalX V) (scalX W).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite !linX {}eqVW => rV rW <- rWx; apply: irr_comp_rsim => //.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "exists 1%:M; rewrite ?row_free_unit ?unitmx1 // => xk; case/cycleP=> k ->{xk}.",
            "VernacExtend",
            "fa73a1b927ce281635b3b1812e7695129f0ae286"
        ],
        [
            "by rewrite mulmx1 mul1mx !repr_mxX // rWx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have rx1 W: r W ^+ #[x] = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -irr_modeX ?(center_idP _) // expg_order irr_mode1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /hasP[w _ prim_w]: has #[x].-primitive_root (map r (enum sG)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite has_prim_root 1?map_inj_uniq ?enum_uniq //; first 1 last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite size_map -cardE card_sG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/allP=> _ /mapP[W _ ->]; rewrite unity_rootE rx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have iphi'P := prim_rootP prim_w (rx1 _); pose iphi' := sval (iphi'P _).",
            "VernacExtend",
            "fa6ff0c3d4595d45015144bd8c25fb5ac62ed42b"
        ],
        [
            "have def_r W: r W = w ^+ iphi' W by apply: svalP (iphi'P W).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have inj_iphi': injective iphi'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> i j eq_ij; apply: inj_r; rewrite !def_r eq_ij.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have iphiP: codom iphi' =i 'I_#[x].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply/subset_cardP; rewrite ?subset_predT // card_ord card_image.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose iphi i := iinv (iphiP i); exists w => //; exists iphi.",
            "VernacExtend",
            "11cc0523f04a793bdddf9140e5be577aa06acba8"
        ],
        [
            "have iphiK: cancel iphi iphi' by move=> i; apply: f_iinv.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have r_iphi i: r (iphi i) = w ^+ i by rewrite def_r iphiK.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=> // [|i]; last by rewrite scalX r_iphi.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists iphi' => // W; rewrite /iphi iinv_f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma splitting_cyclic_primitive_root : cyclic G -> [char F]^'.-group G -> group_splitting_field G -> classically {z : F | #|G|.-primitive_root z}.",
            "VernacStartTheoremProof",
            "968ebdae476c9cb0080ccbfa8f7e0b0b4aef1d31"
        ],
        [
            "case/cyclicP=> x defG F'G splitF; case=> // IH.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "wlog sG: / irrType G by apply: socle_exists.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "have [w prim_w _] := cycle_repr_structure sG defG F'G splitF.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: IH; exists w.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LinearIrr.",
            "VernacEndSegment",
            "ed5463ca0ecc8d9b3e22883fca52cb23433ecdfc"
        ],
        [
            "End FieldRepr.",
            "VernacEndSegment",
            "6ef88d59de8b2d2200dfc798508468d26b5e49b4"
        ],
        [
            "Arguments rfix_mx {F gT G%g n%N} rG H%g.",
            "VernacArguments",
            "b18a3cb4bba90d3a7c34fa8781513c36ab19688e"
        ],
        [
            "Arguments gset_mx F {gT} G%g A%g.",
            "VernacArguments",
            "3049a8ee0d2fcfc50dfdea4c8fbde6ba08087e16"
        ],
        [
            "Arguments classg_base F {gT} G%g _%g : extra scopes.",
            "VernacArguments",
            "8eb0d9e307247eaf1dcdf017c488cec38b17dd9a"
        ],
        [
            "Arguments irrType F {gT} G%g.",
            "VernacArguments",
            "243c39c976977924af7874d32eb6e0f7013faf5c"
        ],
        [
            "Arguments mxmoduleP {F gT G n rG m U}.",
            "VernacArguments",
            "32042a5fea2902dbceff020a9b604951e7da4015"
        ],
        [
            "Arguments envelop_mxP {F gT G n rG A}.",
            "VernacArguments",
            "976000f4a1181f8fe016f1e9ed0399c7eba004c1"
        ],
        [
            "Arguments hom_mxP {F gT G n rG m f W}.",
            "VernacArguments",
            "d521b96c35226e13dbad52e50d937298c11d169d"
        ],
        [
            "Arguments mx_Maschke [F gT G n] rG _ [U].",
            "VernacArguments",
            "2098e9e6c6b8d0408a26d4488b5c1da9893ae68a"
        ],
        [
            "Arguments rfix_mxP {F gT G n rG m W}.",
            "VernacArguments",
            "989146a9f473b3224758efc99343490a70d999a3"
        ],
        [
            "Arguments cyclic_mxP {F gT G n rG u v}.",
            "VernacArguments",
            "1ed816b733caf646035b1e139cc10998e312a989"
        ],
        [
            "Arguments annihilator_mxP {F gT G n rG u A}.",
            "VernacArguments",
            "0d602baa6d65bd09121bcbda3b6ea9c45e6f2d8c"
        ],
        [
            "Arguments row_hom_mxP {F gT G n rG u v}.",
            "VernacArguments",
            "d790f34bc1913058756c7f2b9786ca6acfdc4d39"
        ],
        [
            "Arguments mxsimple_isoP {F gT G n rG U V}.",
            "VernacArguments",
            "7d0942a3ec63ce0684936040c648ac5c747eca02"
        ],
        [
            "Arguments socle_exists [F gT G n].",
            "VernacArguments",
            "378aa9c1e24cfa3b295d84202b4565f829552fb8"
        ],
        [
            "Arguments socleP {F gT G n rG sG0 W W'}.",
            "VernacArguments",
            "7e6cfa2704f0d37244a17078bdea9d1abfcc3b99"
        ],
        [
            "Arguments mx_abs_irrP {F gT G n rG}.",
            "VernacArguments",
            "fc89c687fed2c31738ea66ca588b8254f0c1baad"
        ],
        [
            "Arguments socle_rsimP {F gT G n rG sG W1 W2}.",
            "VernacArguments",
            "9ff7d9b73f493f55b1b3fa6f1025bf4321ad9050"
        ],
        [
            "Arguments val_submod {F n U m} W.",
            "VernacArguments",
            "4145cde59b8d09dbd8f227eb8f19a5ea46ae1ae3"
        ],
        [
            "Arguments in_submod {F n} U {m} W.",
            "VernacArguments",
            "4600084def775aaa5b5f6280f93e10567b5fc19e"
        ],
        [
            "Arguments val_submodK {F n U m} W : rename.",
            "VernacArguments",
            "52f9ceb18a6513070fa9326d6aeb4b389113b480"
        ],
        [
            "Arguments in_submodK {F n U m} [W] sWU.",
            "VernacArguments",
            "eaad6bf48b108a26a1dadb51028ceb71690189da"
        ],
        [
            "Arguments val_submod_inj {F n U m} [W1 W2] : rename.",
            "VernacArguments",
            "7eed066dc3569a3a3fa768dfccd7eb4ab2be33b7"
        ],
        [
            "Arguments val_factmod {F n U m} W.",
            "VernacArguments",
            "111b9880d46a04c5d65ae140bfca309a52b03252"
        ],
        [
            "Arguments in_factmod {F n} U {m} W.",
            "VernacArguments",
            "f8a12995dbbce2b3d251095db8c03ee47c35b50d"
        ],
        [
            "Arguments val_factmodK {F n U m} W : rename.",
            "VernacArguments",
            "5649a4f4d3e6281d93157be5db14a5069869306a"
        ],
        [
            "Arguments in_factmodK {F n} U {m} [W] sWU.",
            "VernacArguments",
            "4b6c893adf83c680a0a6a5ced933c3c37f2de2dc"
        ],
        [
            "Arguments val_factmod_inj {F n U m} [W1 W2] : rename.",
            "VernacArguments",
            "1d0524d017381737364ff957998406495ca29780"
        ],
        [
            "Notation \"'Cl\" := (Clifford_action _) : action_scope.",
            "VernacNotation",
            "2e9d374370f4d36afd0d73248ba23618ae1a2da0"
        ],
        [
            "Arguments gring_row {R gT G} A.",
            "VernacArguments",
            "42c13034ae88042d02176ecdc67823a3801ba290"
        ],
        [
            "Arguments gring_rowK {F gT G} [A] RG_A.",
            "VernacArguments",
            "49f8713ec758294a811690135e758d93a5826469"
        ],
        [
            "Bind Scope irrType_scope with socle_sort.",
            "VernacBindScope",
            "11a4e16b2795a0da2d06e3875247d6f563ce38d5"
        ],
        [
            "Notation \"[ 1 sG ]\" := (principal_comp sG) : irrType_scope.",
            "VernacNotation",
            "ec0d3f21c5ef7f25b589948ca3fc83b73b5a13fe"
        ],
        [
            "Arguments irr_degree {F gT G%G sG} i%irr.",
            "VernacArguments",
            "b728e981dababa2baaca7034009e398b39dff553"
        ],
        [
            "Arguments irr_repr {F gT G%G sG} i%irr _%g : extra scopes.",
            "VernacArguments",
            "9fc1b87fdde01a2adc3473a66c9ef498133d0b28"
        ],
        [
            "Arguments irr_mode {F gT G%G sG} i%irr z%g : rename.",
            "VernacArguments",
            "c8a020fbf2af22e3a71a3e5dab7102c45d8cb74a"
        ],
        [
            "Notation \"''n_' i\" := (irr_degree i) : group_ring_scope.",
            "VernacNotation",
            "7b4db7d5bae52d1896331cc96c04b4f53380f4c2"
        ],
        [
            "Notation \"''R_' i\" := (Wedderburn_subring i) : group_ring_scope.",
            "VernacNotation",
            "9dc3f14637927e5bcd4339745e497f2d214239f4"
        ],
        [
            "Notation \"''e_' i\" := (Wedderburn_id i) : group_ring_scope.",
            "VernacNotation",
            "2e8f8298e9d2ee95fdbf90603295fe420fc2477b"
        ],
        [
            "Section DecideRed.",
            "VernacBeginSection",
            "ccf62761e6a17d72549c0947e466c7191a22d8bf"
        ],
        [
            "Import MatrixFormula.",
            "VernacImport",
            "da785b6551f75125128e6be8387c56609adaad9a"
        ],
        [
            "Local Notation term := GRing.term.",
            "VernacSyntacticDefinition",
            "f6ab5f390b21d6ebcc6d8b16966f4830b3ce4d71"
        ],
        [
            "Local Notation True := GRing.True.",
            "VernacSyntacticDefinition",
            "65d04640212e91d9afdad3cc23d8abccbd298e8f"
        ],
        [
            "Local Notation And := GRing.And (only parsing).",
            "VernacSyntacticDefinition",
            "424e3a0eec56f1ff36d80aa26e18ae4ce6e8878e"
        ],
        [
            "Local Notation morphAnd f := ((big_morph f) true andb).",
            "VernacSyntacticDefinition",
            "eb53dd11d71c27185c4832688e3ae6fcac07f057"
        ],
        [
            "Local Notation eval := GRing.eval.",
            "VernacSyntacticDefinition",
            "15e217040e35a98a078491aa50cb104b7fca2a9b"
        ],
        [
            "Local Notation holds := GRing.holds.",
            "VernacSyntacticDefinition",
            "86f3d8b7735695e61244f0519a6311fc6abc3c7f"
        ],
        [
            "Local Notation qf_form := GRing.qf_form.",
            "VernacSyntacticDefinition",
            "9493778ef8681a5dd1fd8da9a33bd739ac2558d9"
        ],
        [
            "Local Notation qf_eval := GRing.qf_eval.",
            "VernacSyntacticDefinition",
            "15970cd748cb2c77c6ba8a552781f5455678d9d2"
        ],
        [
            "Section Definitions.",
            "VernacBeginSection",
            "44c8aeee6f7e234b1ae876a1cda441d352768d1b"
        ],
        [
            "Variables (F : fieldType) (gT : finGroupType) (G : {group gT}) (n : nat).",
            "VernacAssumption",
            "a1c1349afe9408b1a8b5fe6fa1fa0d9bb785e563"
        ],
        [
            "Variable rG : mx_representation F G n.",
            "VernacAssumption",
            "653411e19564771e63ef6370afdba6d6a15b3c9c"
        ],
        [
            "Definition mxmodule_form (U : 'M[term F]_n) := \\big[And/True]_(x in G) submx_form (mulmx_term U (mx_term (rG x))) U.",
            "VernacDefinition",
            "07f7327320e034e778d838849ceddfbc6084e492"
        ],
        [
            "Lemma mxmodule_form_qf U : qf_form (mxmodule_form U).",
            "VernacStartTheoremProof",
            "c24cdb6d94b626c892943c78e2f7a433491a1081"
        ],
        [
            "by rewrite (morphAnd (@qf_form _)) ?big1 //= => x _; rewrite submx_form_qf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_mxmodule U e : qf_eval e (mxmodule_form U) = mxmodule rG (eval_mx e U).",
            "VernacStartTheoremProof",
            "a188675e7853d706cef449c99b15a83c927226d4"
        ],
        [
            "rewrite (morphAnd (qf_eval e)) //= big_andE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/forallP/mxmoduleP=> Umod x; move/implyP: (Umod x); by rewrite eval_submx eval_mulmx eval_mx_term.",
            "VernacExtend",
            "690191ef5f62f0973d1b5e1ebcee33aab081b5fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mxnonsimple_form (U : 'M[term F]_n) := let V := vec_mx (row_var F (n * n) 0) in let nzV := (~ mxrank_form 0 V)%T in let properVU := (submx_form V U /\\ ~ submx_form U V)%T in (Exists_row_form (n * n) 0 (mxmodule_form V /\\ nzV /\\ properVU))%T.",
            "VernacDefinition",
            "f9fc7178bdd6e30353d418ed4846eeba0b210a3b"
        ],
        [
            "End Definitions.",
            "VernacEndSegment",
            "a9ff902ce1bf921ade03bc4535b4de21f2fcc02c"
        ],
        [
            "Variables (F : decFieldType) (gT : finGroupType) (G : {group gT}) (n : nat).",
            "VernacAssumption",
            "2a5cd5549261c26a0497e5f73d4f4a76abb05449"
        ],
        [
            "Variable rG : mx_representation F G n.",
            "VernacAssumption",
            "653411e19564771e63ef6370afdba6d6a15b3c9c"
        ],
        [
            "Definition mxnonsimple_sat U := GRing.sat (@row_env _ (n * n) [::]) (mxnonsimple_form rG (mx_term U)).",
            "VernacDefinition",
            "0a631271d68c50dea3cae324cdd5d6001d8e4733"
        ],
        [
            "Lemma mxnonsimpleP U : U != 0 -> reflect (mxnonsimple rG U) (mxnonsimple_sat U).",
            "VernacStartTheoremProof",
            "dff7478fb7f0bc050e55bbb8a746dd9fcc08d28b"
        ],
        [
            "rewrite /mxnonsimple_sat {1}/mxnonsimple_form; set Vt := vec_mx _ => /= nzU.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "pose nsim V := [&& mxmodule rG V, (V <= U)%MS, V != 0 & \\rank V < \\rank U].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "set nsimUt := (_ /\\ _)%T; have: qf_form nsimUt.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "by rewrite /= mxmodule_form_qf !mxrank_form_qf !submx_form_qf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/GRing.qf_evalP; set qev := @GRing.qf_eval _ => qevP.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have qev_nsim u: qev (row_env [:: u]) nsimUt = nsim n (vec_mx u).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /nsim -mxrank_eq0 /qev /= eval_mxmodule eval_mxrank.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !eval_submx eval_mx_term eval_vec_mx eval_row_var /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "do 2!bool_congr; apply: andb_id2l => sUV.",
            "VernacExtend",
            "3b71ea6fefa1feeb046de1d53cd6239f33ef30eb"
        ],
        [
            "by rewrite ltn_neqAle andbC !mxrank_leqif_sup.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have n2gt0: n ^ 2 > 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move: nzU; rewrite muln_gt0 -mxrank_eq0; case: posnP (U) => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (iffP satP) => [|[V nsimV]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by case/Exists_rowP=> // v; move/qevP; rewrite qev_nsim; exists (vec_mx v).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/Exists_rowP=> //; exists (mxvec V); apply/qevP.",
            "VernacExtend",
            "a8126b38ff5c57d72ec767c68281f2f7ef3adeca"
        ],
        [
            "by rewrite qev_nsim mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dec_mxsimple_exists (U : 'M_n) : mxmodule rG U -> U != 0 -> {V | mxsimple rG V & V <= U}%MS.",
            "VernacStartTheoremProof",
            "03d41d12ff09bd1dab804d467badb30d8b0dd2d3"
        ],
        [
            "elim: {U}_.+1 {-2}U (ltnSn (\\rank U)) => // m IHm U leUm modU nzU.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have [nsimU | simU] := mxnonsimpleP nzU; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists U; first apply/mxsimpleP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (xchooseP nsimU); move: (xchoose _) => W /and4P[modW sWU nzW ltWU].",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "case: (IHm W) => // [|V simV sVW]; first exact: leq_trans ltWU _.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists V; last apply: submx_trans sVW sWU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dec_mx_reducible_semisimple U : mxmodule rG U -> mx_completely_reducible rG U -> mxsemisimple rG U.",
            "VernacStartTheoremProof",
            "117e033447cf7d6b8432840ee00e01fc0fc57729"
        ],
        [
            "elim: {U}_.+1 {-2}U (ltnSn (\\rank U)) => // m IHm U leUm modU redU.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have [U0 | nzU] := eqVneq U 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{U0} U0: (\\sum_(i < 0) 0 :=: U)%MS by rewrite big_ord0 U0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: (intro_mxsemisimple U0); case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [V simV sVU] := dec_mxsimple_exists modU nzU; have [modV nzV _] := simV.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "have [W modW defVW dxVW] := redU V modV sVU.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [||I W_ /= simW defW _] := IHm W _ modW.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite ltnS in leUm; apply: leq_trans leUm.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite -defVW (mxdirectP dxVW) /= -add1n leq_add2r lt0n mxrank_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: mx_reducibleS redU; rewrite // -defVW addsmxSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices defU: (\\sum_i oapp W_ V i :=: U)%MS.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by apply: (intro_mxsemisimple defU) => [] [|i] //=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: eqmx_trans defVW; rewrite (bigD1 None) //=; apply/eqmxP.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "have [i0 _ | I0] := pickP I.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (reindex some) ?addsmxS ?defW //; exists (odflt i0) => //; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite big_pred0 //; last by case=> // /I0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !addsmxS ?sub0mx // -defW big_pred0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma DecSocleType : socleType rG.",
            "VernacStartTheoremProof",
            "e67d03a342debc93dbd441a2aa447f411811fdc2"
        ],
        [
            "have [n0 | n_gt0] := posnP n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists [::] => // M [_]; rewrite -mxrank_eq0 -leqn0 -n0 rank_leq_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have n2_gt0: n ^ 2 > 0 by rewrite muln_gt0 n_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose span Ms := (\\sum_(M <- Ms) component_mx rG M)%MS.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have: {in [::], forall M, mxsimple rG M} by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: _.+1 {-2}nil (ltnSn (n - \\rank (span nil))) => // m IHm Ms Ms_ge_n simMs.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite ltnS in Ms_ge_n; pose V := span Ms; pose Vt := mx_term V.",
            "VernacExtend",
            "46f46f1526439bc4d36b106c5b83bb8a577919eb"
        ],
        [
            "pose Ut i := vec_mx (row_var F (n * n) i); pose Zt := mx_term (0 : 'M[F]_n).",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "pose exU i f := Exists_row_form (n * n) i (~ submx_form (Ut i) Zt /\\ f (Ut i)).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose meetUVf U := exU 1%N (fun W => submx_form W Vt /\\ submx_form W U)%T.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose mx_sat := GRing.sat (@row_env F (n * n) [::]).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have ev_sub0 := GRing.qf_evalP _ (submx_form_qf _ Zt).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have ev_mod := GRing.qf_evalP _ (mxmodule_form_qf rG _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose ev := (eval_mxmodule, eval_submx, eval_vec_mx, eval_row_var, eval_mx_term).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "case haveU: (mx_sat (exU 0%N (fun U => mxmodule_form rG U /\\ ~ meetUVf _ U)%T)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [U modU]: {U : 'M_n | mxmodule rG U & (U != 0) && ((U :&: V)%MS == 0)}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: sig2W; case/Exists_rowP: (satP haveU) => //= u [nzU [modU tiUV]].",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "exists (vec_mx u); first by move/ev_mod: modU; rewrite !ev.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set W := (_ :&: V)%MS; move/ev_sub0: nzU; rewrite !ev -!submx0 => -> /=.",
            "VernacExtend",
            "dd84623934b57367ccb6495062de4f65b3f1653c"
        ],
        [
            "apply/idPn=> nzW; case: tiUV; apply/Exists_rowP=> //; exists (mxvec W).",
            "VernacExtend",
            "50183d260950bf880fbaec3deaf56ff88cc07ac8"
        ],
        [
            "apply/GRing.qf_evalP; rewrite /= ?submx_form_qf // !ev mxvecK nzW /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite andbC -sub_capmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/andP=> nzU tiUV; have [M simM sMU] := dec_mxsimple_exists modU nzU.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "apply: (IHm (M :: Ms)) => [|M']; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/predU1P=> [-> //|]; apply: simMs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [_ nzM _] := simM.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suffices ltVMV: \\rank V < \\rank (span (M :: Ms)).",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "rewrite (leq_trans _ Ms_ge_n) // ltn_sub2l ?(leq_trans ltVMV) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: rank_leq_row.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite /span big_cons (ltn_leqif (mxrank_leqif_sup (addsmxSr _ _))).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contra nzM; rewrite addsmx_sub -submx0 -(eqP tiUV) sub_capmx sMU.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case/andP=> sMV _; rewrite (submx_trans _ sMV) ?component_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists Ms => // M simM; have [modM nzM minM] := simM.",
            "VernacExtend",
            "d2991b7607b6316c9d43d28c85f87ca601299ca6"
        ],
        [
            "have sMV: (M <= V)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: contraFT haveU => not_sMV; apply/satP/Exists_rowP=> //.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "exists (mxvec M); split; first by apply/ev_sub0; rewrite !ev mxvecK submx0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split; first by apply/ev_mod; rewrite !ev mxvecK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/Exists_rowP=> // [[w]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/GRing.qf_evalP; rewrite /= ?submx_form_qf // !ev /= mxvecK submx0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -nz_row_eq0 -(cyclic_mx_eq0 rG); set W := cyclic_mx _ _.",
            "VernacExtend",
            "c1f58f36c5711f022b4a54717f37c2782f34a159"
        ],
        [
            "apply: contra not_sMV => /and3P[nzW Vw Mw].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have{Vw Mw} [sWV sWM]: (W <= V /\\ W <= M)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !cyclic_mx_sub ?(submx_trans (nz_row_sub _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite sumsmx_module // => M' _; apply: component_mx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite (submx_trans _ sWV) // minM ?cyclic_mx_module.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "wlog sG: / socleType rG by apply: socle_exists.",
            "VernacExtend",
            "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
        ],
        [
            "have sVS: (V <= \\sum_(W : sG | has (fun Mi => Mi <= W) Ms) W)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite [V](big_nth 0) big_mkord; apply/sumsmx_subP=> i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "set Mi := Ms`_i; have MsMi: Mi \\in Ms by apply: mem_nth.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "have simMi := simMs _ MsMi; have S_Mi := component_socle sG simMi.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "rewrite (sumsmx_sup (PackSocle S_Mi)) ?PackSocleK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/hasP; exists Mi; rewrite ?component_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [W MsW isoWM] := subSocle_iso simM (submx_trans sMV sVS).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [Mi MsMi sMiW] := hasP MsW; apply/hasP; exists Mi => //.",
            "VernacExtend",
            "50ac7f1676fde99958852c0f42096207d1f4db38"
        ],
        [
            "have [simMi simW] := (simMs _ MsMi, socle_simple W); apply/mxsimple_isoP=> //.",
            "VernacExtend",
            "af1e5df3b072070e589731222b14b19e1cb478bc"
        ],
        [
            "exact: mx_iso_trans (mx_iso_sym isoWM) (component_mx_iso simW simMi sMiW).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DecideRed.",
            "VernacEndSegment",
            "033c7281113b14b704278a3d5f5817af363997e3"
        ],
        [
            "Prenex Implicits mxmodule_form mxnonsimple_form mxnonsimple_sat.",
            "VernacExtend",
            "ebbafbb0954feab32a3e99e479d809fbd21036cf"
        ],
        [
            "Section ChangeOfField.",
            "VernacBeginSection",
            "ac5638d71dd47ca48e68b902187e98f01b322445"
        ],
        [
            "Variables (aF rF : fieldType) (f : {rmorphism aF -> rF}).",
            "VernacAssumption",
            "4f593e63392c9ceb07dc931d4908b7172e87f501"
        ],
        [
            "Local Notation \"A ^f\" := (map_mx (GRing.RMorphism.apply f) A) : ring_scope.",
            "VernacNotation",
            "fdd56b787c68a0a7db0b3da67e4eb05e59fd1829"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}).",
            "VernacAssumption",
            "26cb7d9f8ae434831772d6c107d7cf3e4590cb48"
        ],
        [
            "Section OneRepresentation.",
            "VernacBeginSection",
            "d2dd7d49099ec15210125ed6bb320bd692780c2d"
        ],
        [
            "Variables (n : nat) (rG : mx_representation aF G n).",
            "VernacAssumption",
            "25f7464531568703705b55935447c3bb7a1e51a5"
        ],
        [
            "Local Notation rGf := (map_repr f rG).",
            "VernacSyntacticDefinition",
            "9dd19ecf9eec41ac0e8e2edeb251bc0112c833c0"
        ],
        [
            "Lemma map_rfix_mx H : (rfix_mx rG H)^f = rfix_mx rGf H.",
            "VernacStartTheoremProof",
            "ad3e48a976d049aa97539b30a523c92347473837"
        ],
        [
            "rewrite map_kermx //; congr (kermx _); apply: map_lin1_mx => //= v.",
            "VernacExtend",
            "75f5ff0fb7cf09d432c728351fd923a93d5d7135"
        ],
        [
            "rewrite map_mxvec map_mxM; congr (mxvec (_ *m _)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: map_lin1_mx => //= u; rewrite map_mxM map_vec_mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/row_matrixP=> i.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -map_row !rowK map_mxvec map_mx_sub map_mx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rcent_map A : rcent rGf A^f = rcent rG A.",
            "VernacStartTheoremProof",
            "0a855ee4bc6644057b9a4fc78df9743670e6c9a3"
        ],
        [
            "by apply/setP=> x; rewrite !inE -!map_mxM inj_eq //; apply: map_mx_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstab_map m (U : 'M_(m, n)) : rstab rGf U^f = rstab rG U.",
            "VernacStartTheoremProof",
            "2810d02b99743d2e5664c657b73974309240198d"
        ],
        [
            "by apply/setP=> x; rewrite !inE -!map_mxM inj_eq //; apply: map_mx_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstabs_map m (U : 'M_(m, n)) : rstabs rGf U^f = rstabs rG U.",
            "VernacStartTheoremProof",
            "2e1e8c42203c4cc22b6e3d2b1b6beda5ded203ca"
        ],
        [
            "by apply/setP=> x; rewrite !inE -!map_mxM ?map_submx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma centgmx_map A : centgmx rGf A^f = centgmx rG A.",
            "VernacStartTheoremProof",
            "ddfd6885219e39521bc371b9faf8079b41789c13"
        ],
        [
            "by rewrite /centgmx rcent_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_map m (U : 'M_(m, n)) : mxmodule rGf U^f = mxmodule rG U.",
            "VernacStartTheoremProof",
            "8306e2f4e018cc4e822f7f678d612147580cd00a"
        ],
        [
            "by rewrite /mxmodule rstabs_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxsimple_map (U : 'M_n) : mxsimple rGf U^f -> mxsimple rG U.",
            "VernacStartTheoremProof",
            "47c472ef6c8599b3e789af1b2d3083c20f539faf"
        ],
        [
            "case; rewrite map_mx_eq0 // mxmodule_map // => modU nzU minU.",
            "VernacExtend",
            "e24818f2b000e5bc0598a9fd4a167671cf3564cd"
        ],
        [
            "split=> // V modV sVU nzV; rewrite -(map_submx f).",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite (minU V^f) //= ?mxmodule_map ?map_mx_eq0 // map_submx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_irr_map : mx_irreducible rGf -> mx_irreducible rG.",
            "VernacStartTheoremProof",
            "7336fca2f318bc059a3292bc9b5cecec8fbb7658"
        ],
        [
            "by move=> irrGf; apply: mxsimple_map; rewrite map_mx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rker_map : rker rGf = rker rG.",
            "VernacStartTheoremProof",
            "96a6db59eee01321b3cc79dab3bf6f2dfeb53053"
        ],
        [
            "by rewrite /rker -rstab_map map_mx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mx_faithful : mx_faithful rGf = mx_faithful rG.",
            "VernacStartTheoremProof",
            "840d897182e36b6e93310d83128071a090055110"
        ],
        [
            "by rewrite /mx_faithful rker_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mx_abs_irr : mx_absolutely_irreducible rGf = mx_absolutely_irreducible rG.",
            "VernacStartTheoremProof",
            "dd64cb4e7b73f850e5de05d3dab52397363c2c4e"
        ],
        [
            "by rewrite /mx_absolutely_irreducible -map_enveloping_algebra_mx row_full_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OneRepresentation.",
            "VernacEndSegment",
            "f5917bfc39a430b3f41ac2a8c17476b69ca6c0d8"
        ],
        [
            "Lemma mx_rsim_map n1 n2 rG1 rG2 : @mx_rsim _ _ G n1 rG1 n2 rG2 -> mx_rsim (map_repr f rG1) (map_repr f rG2).",
            "VernacStartTheoremProof",
            "c1878092e652827455bd475e8c7608178d0b6254"
        ],
        [
            "case=> g eqn12 inj_g hom_g.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists g^f => // [|x Gx]; rewrite ?row_free_map // -!map_mxM ?hom_g.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_section_repr n (rG : mx_representation aF G n) rGf U V (modU : mxmodule rG U) (modV : mxmodule rG V) (modUf : mxmodule rGf U^f) (modVf : mxmodule rGf V^f) : map_repr f rG =1 rGf -> mx_rsim (map_repr f (section_repr modU modV)) (section_repr modUf modVf).",
            "VernacStartTheoremProof",
            "168ed8d7d09ce2fd0a3094fbaf06e0b60ada9b80"
        ],
        [
            "move=> def_rGf; set VU := <<_>>%MS.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "pose valUV := val_factmod (val_submod (1%:M : 'M[aF]_(\\rank VU))).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have sUV_Uf: (valUV^f <= U^f + V^f)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -map_addsmx map_submx; apply: submx_trans (proj_factmodS _ _).",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite val_factmodS val_submod1 genmxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (in_submod _ (in_factmod U^f valUV^f)) => [||x Gx].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !genmxE -(mxrank_map f) map_mxM map_col_base.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (\\rank (cokermx U)) / (mxrank_map _ _); rewrite map_cokermx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite -kermx_eq0 -submx0; apply/rV_subP=> u.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite (sameP sub_kermxP eqP) submx0 -val_submod_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite val_submodE -mulmxA -val_submodE in_submodK; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite genmxE -(in_factmod_addsK _ V^f) submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite in_factmodE mulmxA -in_factmodE in_factmod_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/(submxMr (in_factmod U 1%:M *m in_submod VU 1%:M)^f).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -mulmxA -!map_mxM //; do 2!rewrite mulmxA -in_factmodE -in_submodE.",
            "VernacExtend",
            "6a72213b8ff230d3c557d3c0d5b7e6e6d5c919ed"
        ],
        [
            "rewrite val_factmodK val_submodK map_mx1 mulmx1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have ->: in_factmod U U = 0 by apply/eqP; rewrite in_factmod_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite linear0 map_mx0 eqmx0 submx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}in_submodE mulmxA -in_submodE -in_submodJ; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite genmxE -(in_factmod_addsK _ V^f) submxMr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr (in_submod _ _); rewrite -in_factmodJ // in_factmodE mulmxA -in_factmodE.",
            "VernacExtend",
            "90723b7805fdae0b93bd8b98ae215a5658363919"
        ],
        [
            "apply/eqP; rewrite -subr_eq0 -def_rGf -!map_mxM -linearB in_factmod_eq0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -map_mx_sub map_submx -in_factmod_eq0 linearB.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /= (in_factmodJ modU) // val_factmodK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [valUV]val_factmodE mulmxA -val_factmodE val_factmodK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -val_submodE in_submodK ?subrr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mxmodule_trans ?section_module // val_submod1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_regular_subseries U i (modU : mx_subseries (regular_repr aF G) U) (modUf : mx_subseries (regular_repr rF G) [seq M^f | M <- U]) : mx_rsim (map_repr f (subseries_repr i modU)) (subseries_repr i modUf).",
            "VernacStartTheoremProof",
            "34cd3d497b6fdc8c4f44e001d97985957b829de1"
        ],
        [
            "set mf := map _ in modUf *; rewrite /subseries_repr.",
            "VernacExtend",
            "8460a73fe74726b8e94ff0752da65e8d48f68f26"
        ],
        [
            "do 2!move: (mx_subseries_module' _ _) (mx_subseries_module _ _).",
            "VernacExtend",
            "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
        ],
        [
            "have mf_i V: nth 0^f (mf V) i = (V`_i)^f.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (ltnP i (size V)) => [ltiV | leVi]; first exact: nth_map.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !nth_default ?size_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(map_mx0 f) mf_i (mf_i (0 :: U)) => modUi'f modUif modUi' modUi.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply: map_section_repr; apply: map_regular_repr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extend_group_splitting_field : group_splitting_field aF G -> group_splitting_field rF G.",
            "VernacStartTheoremProof",
            "c1a6e7723d7ebb64210abdb913df8075de082de9"
        ],
        [
            "move=> splitG n rG irrG.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have modU0: all ((mxmodule (regular_repr aF G)) #|G|) [::] by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: (mx_Schreier modU0 _) => // [[U [compU lastU _]]]; have [modU _]:= compU.",
            "VernacExtend",
            "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
        ],
        [
            "pose Uf := map (map_mx f) U.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have{lastU} lastUf: (last 0 Uf :=: 1%:M)%MS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(map_mx0 f) -(map_mx1 f) last_map; apply/map_eqmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have modUf: mx_subseries (regular_repr rF G) Uf.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /mx_subseries all_map; apply: etrans modU; apply: eq_all => Ui /=.",
            "VernacExtend",
            "51feb8305384ec63057bc47214b50a33a7155fd3"
        ],
        [
            "rewrite -mxmodule_map; apply: eq_subset_r => x.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !inE map_regular_repr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have absUf i: i < size U -> mx_absolutely_irreducible (subseries_repr i modUf).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> lt_i_U; rewrite -(mx_rsim_abs_irr (map_regular_subseries i modU _)).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite map_mx_abs_irr; apply: splitG.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply: mx_rsim_irr (mx_series_repr_irr compU lt_i_U); apply: section_eqmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have compUf: mx_composition_series (regular_repr rF G) Uf.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=> // i; rewrite size_map => ltiU.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "move/max_submodP: (mx_abs_irrW (absUf i ltiU)); apply.",
            "VernacExtend",
            "2408219a516badfffca5dfc0dff226f7b05b4ced"
        ],
        [
            "rewrite -{2}(map_mx0 f) -map_cons !(nth_map 0) ?leqW //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite map_submx // ltmxW // (pathP _ (mx_series_lt compU)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [[i ltiU] simUi] := rsim_regular_series irrG compUf lastUf.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{simUi} simUi: mx_rsim rG (subseries_repr i modUf).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: mx_rsim_trans simUi _; apply: section_eqmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite (mx_rsim_abs_irr simUi) absUf; rewrite size_map in ltiU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ChangeOfField.",
            "VernacEndSegment",
            "1cd5edec1a7630e1ea553d2ddb08959b97496041"
        ],
        [
            "Module Import MatrixGenField.",
            "VernacDefineModule",
            "f38f49a318ffa7d8f6ab0cf58ecc9af56fc6c0c8"
        ],
        [
            "Record gen_of {F : fieldType} {gT : finGroupType} {G : {group gT}} {n' : nat} {rG : mx_representation F G n'.+1} {A : 'M[F]_n'.+1} (irrG : mx_irreducible rG) (cGA : centgmx rG A) := Gen {rVval : 'rV[F]_(degree_mxminpoly A)}.",
            "VernacInductive",
            "5999cd54542edd88602083b3c218268373d552be"
        ],
        [
            "Local Arguments rVval {F gT G%G n'%N rG A%R irrG cGA} x%R : rename.",
            "VernacArguments",
            "35a4199e159f1ab3c9d1d443f35e8a9f536e0072"
        ],
        [
            "Bind Scope ring_scope with gen_of.",
            "VernacBindScope",
            "0a664fa14c02d8b2012a999110e406d2468a9d57"
        ],
        [
            "Section GenField.",
            "VernacBeginSection",
            "550672c81572267e30118797026b24ea0b142db4"
        ],
        [
            "Variables (F : fieldType) (gT : finGroupType) (G : {group gT}) (n' : nat).",
            "VernacAssumption",
            "553a23ecaf030f041a337e7759ed863949cd9c23"
        ],
        [
            "Local Notation n := n'.+1.",
            "VernacSyntacticDefinition",
            "a44d7133197df31a38212ab1d7bfb6ec0dc123a2"
        ],
        [
            "Variables (rG : mx_representation F G n) (A : 'M[F]_n).",
            "VernacAssumption",
            "0c71fa23537425c12d83f3e3420b65bb8e37cff3"
        ],
        [
            "Local Notation d := (degree_mxminpoly A).",
            "VernacSyntacticDefinition",
            "a3b54ead5b3e57a20248d07b4a4cedf619fb4e21"
        ],
        [
            "Local Notation Ad := (powers_mx A d).",
            "VernacSyntacticDefinition",
            "9236827fb6636dc18dc4dd41887e169c13f80a65"
        ],
        [
            "Local Notation pA := (mxminpoly A).",
            "VernacSyntacticDefinition",
            "e5eaaf0aff9e5e29ab866d548ec003b8a702d90f"
        ],
        [
            "Let d_gt0 := mxminpoly_nonconstant A.",
            "VernacDefinition",
            "a66704eb19508d5fb3ad98c0dad56d21c702a6bc"
        ],
        [
            "Local Notation irr := mx_irreducible.",
            "VernacSyntacticDefinition",
            "d79105ab370ec857c574bbfc6db6e542809d7eec"
        ],
        [
            "Hypotheses (irrG : irr rG) (cGA : centgmx rG A).",
            "VernacAssumption",
            "b0d2b6c830571ea337b27956f5f3f494d4e8d143"
        ],
        [
            "Notation FA := (gen_of irrG cGA).",
            "VernacSyntacticDefinition",
            "22a1bf707994b918890ad828e1efd0594c06c042"
        ],
        [
            "Let inFA := Gen irrG cGA.",
            "VernacDefinition",
            "3d8c7730ec8c5e8268c7826cfe4dfe5ea03726b6"
        ],
        [
            "Canonical gen_subType := Eval hnf in [newType for rVval : FA -> 'rV_d].",
            "VernacDefinition",
            "821ef607845edca7aabf03ae320c800363595826"
        ],
        [
            "Definition gen_eqMixin := Eval hnf in [eqMixin of FA by <:].",
            "VernacDefinition",
            "7fc49986e34f2fc888ea1a476a3b605a840519f7"
        ],
        [
            "Canonical gen_eqType := Eval hnf in EqType FA gen_eqMixin.",
            "VernacDefinition",
            "943f4f733fdd72836aebe0f46f42caa39c5e4d93"
        ],
        [
            "Definition gen_choiceMixin := [choiceMixin of FA by <:].",
            "VernacDefinition",
            "52d3270424871b31a753d38eb27924c555d97a10"
        ],
        [
            "Canonical gen_choiceType := Eval hnf in ChoiceType FA gen_choiceMixin.",
            "VernacDefinition",
            "0ada57dd390b4c84bc8b2314865fc9573f987530"
        ],
        [
            "Definition gen0 := inFA 0.",
            "VernacDefinition",
            "8c8c0e56b1570521be3b36e8af49990c9a71700f"
        ],
        [
            "Definition genN (x : FA) := inFA (- val x).",
            "VernacDefinition",
            "dfab9ccafeff71e211ff87468eb2eccd1465061c"
        ],
        [
            "Definition genD (x y : FA) := inFA (val x + val y).",
            "VernacDefinition",
            "cf80911a5f0fb3db9bb5ad5907f2193c80a8ec8c"
        ],
        [
            "Lemma gen_addA : associative genD.",
            "VernacStartTheoremProof",
            "bcd6c4056f78bd8ac4e94843cbd20a0ed637b11f"
        ],
        [
            "by move=> x y z; apply: val_inj; rewrite /= addrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_addC : commutative genD.",
            "VernacStartTheoremProof",
            "a66659c93c092d9455f143ba13acefbcdd474881"
        ],
        [
            "by move=> x y; apply: val_inj; rewrite /= addrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_add0r : left_id gen0 genD.",
            "VernacStartTheoremProof",
            "c902b195e57808570f4ca9820c372eb43f9858fb"
        ],
        [
            "by move=> x; apply: val_inj; rewrite /= add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_addNr : left_inverse gen0 genN genD.",
            "VernacStartTheoremProof",
            "912e117ece8aedd928f0f7a24c343bf2c0275b9f"
        ],
        [
            "by move=> x; apply: val_inj; rewrite /= addNr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gen_zmodMixin := ZmodMixin gen_addA gen_addC gen_add0r gen_addNr.",
            "VernacDefinition",
            "610fbdffd87607dc355979632133b897d0edd382"
        ],
        [
            "Canonical gen_zmodType := Eval hnf in ZmodType FA gen_zmodMixin.",
            "VernacDefinition",
            "d9b090a6b816a4b7f6e9941ab324bf847bbec104"
        ],
        [
            "Definition pval (x : FA) := rVpoly (val x).",
            "VernacDefinition",
            "d1d4c7ff741b5d8b8ceedbb4f165b48a9fd87e53"
        ],
        [
            "Definition mxval (x : FA) := horner_mx A (pval x).",
            "VernacDefinition",
            "e6f99210f59666a9196ae372445be8f949fc8f05"
        ],
        [
            "Definition gen (x : F) := inFA (poly_rV x%:P).",
            "VernacDefinition",
            "153d71e389aa00a0ccd4715994a34f09aadc5c9d"
        ],
        [
            "Lemma genK x : mxval (gen x) = x%:M.",
            "VernacStartTheoremProof",
            "0e8160f87c4d4b3663e445241b3a8e6d644631d3"
        ],
        [
            "by rewrite /mxval [pval _]poly_rV_K ?horner_mx_C // size_polyC; case: (x != 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxval_inj : injective mxval.",
            "VernacStartTheoremProof",
            "15ab3b7bad50443e114651fc563382fb87951693"
        ],
        [
            "exact: inj_comp horner_rVpoly_inj val_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxval0 : mxval 0 = 0.",
            "VernacStartTheoremProof",
            "0921dd49a2e3c450227741ce67473217bfaa321a"
        ],
        [
            "by rewrite /mxval [pval _]raddf0 rmorph0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxvalN : {morph mxval : x / - x}.",
            "VernacStartTheoremProof",
            "9ed8a7db453d8c6103bfb0bc0aa23707fb6310ab"
        ],
        [
            "by move=> x; rewrite /mxval [pval _]raddfN rmorphN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxvalD : {morph mxval : x y / x + y}.",
            "VernacStartTheoremProof",
            "77c325276b98fa90ee2cd09a31f806cf7a263578"
        ],
        [
            "by move=> x y; rewrite /mxval [pval _]raddfD rmorphD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mxval_sum := big_morph mxval mxvalD mxval0.",
            "VernacDefinition",
            "1b211031ac7b1400579f9cc7d61b037fbd2113d5"
        ],
        [
            "Definition gen1 := inFA (poly_rV 1).",
            "VernacDefinition",
            "9137636397c4523f03713e2980ffbed4143ac3cb"
        ],
        [
            "Definition genM x y := inFA (poly_rV (pval x * pval y %% pA)).",
            "VernacDefinition",
            "7e11dbbe19719133ceb0c7854c8914fa6f937d38"
        ],
        [
            "Definition genV x := inFA (poly_rV (mx_inv_horner A (mxval x)^-1)).",
            "VernacDefinition",
            "834bffe00a25600532efecc7fc998d56f14bf297"
        ],
        [
            "Lemma mxval_gen1 : mxval gen1 = 1%:M.",
            "VernacStartTheoremProof",
            "f32aa7471d4df11b2b09767d17be9bda2d431d57"
        ],
        [
            "by rewrite /mxval [pval _]poly_rV_K ?size_poly1 // horner_mx_C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxval_genM : {morph mxval : x y / genM x y >-> x *m y}.",
            "VernacStartTheoremProof",
            "a6851495382cf8c46c88a08f41cce0edd8767396"
        ],
        [
            "move=> x y; rewrite /mxval [pval _]poly_rV_K ?size_mod_mxminpoly //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -horner_mxK mx_inv_hornerK ?horner_mx_mem // rmorphM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxval_genV : {morph mxval : x / genV x >-> invmx x}.",
            "VernacStartTheoremProof",
            "d161694f756c766061e06ebaff3211d11de48000"
        ],
        [
            "move=> x; rewrite /mxval [pval _]poly_rV_K ?size_poly ?mx_inv_hornerK //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "pose m B : 'M[F]_(n * n) := lin_mx (mulmxr B); set B := mxval x.",
            "VernacExtend",
            "9fb5f9e31e2512a271fa21fe890324d2e3052c71"
        ],
        [
            "case uB: (B \\is a GRing.unit); last by rewrite invr_out ?uB ?horner_mx_mem.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have defAd: Ad = Ad *m m B *m m B^-1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/row_matrixP=> i.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite !row_mul mul_rV_lin /= mx_rV_lin /= mulmxK ?vec_mxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[B^-1]mul1mx -(mul_vec_lin (mulmxr_linear _ _)) defAd submxMr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -mxval_gen1 (submx_trans (horner_mx_mem _ _)) // {1}defAd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(geq_leqif (mxrank_leqif_sup _)) ?mxrankM_maxl // -{}defAd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/row_subP=> i; rewrite row_mul rowK mul_vec_lin /= -{2}[A]horner_mx_X.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -rmorphX mulmxE -rmorphM horner_mx_mem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_mulA : associative genM.",
            "VernacStartTheoremProof",
            "75944f0febae590a16eca3cc422222f248bba07f"
        ],
        [
            "by move=> x y z; apply: mxval_inj; rewrite !mxval_genM mulmxA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_mulC : commutative genM.",
            "VernacStartTheoremProof",
            "98839e3fe3f032b4e9ce6f9484710054b388ac0e"
        ],
        [
            "by move=> x y; rewrite /genM mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_mul1r : left_id gen1 genM.",
            "VernacStartTheoremProof",
            "bd4113858e1416f6dc4c5a0510305f37f2f791c7"
        ],
        [
            "by move=> x; apply: mxval_inj; rewrite mxval_genM mxval_gen1 mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_mulDr : left_distributive genM +%R.",
            "VernacStartTheoremProof",
            "bfbde3509405aaad70d4f79625d4f5021872b29e"
        ],
        [
            "by move=> x y z; apply: mxval_inj; rewrite !(mxvalD, mxval_genM) mulmxDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_ntriv : gen1 != 0.",
            "VernacStartTheoremProof",
            "0a782792b0b84d3c9b04f782da3571b065fe960e"
        ],
        [
            "by rewrite -(inj_eq mxval_inj) mxval_gen1 mxval0 oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gen_ringMixin := ComRingMixin gen_mulA gen_mulC gen_mul1r gen_mulDr gen_ntriv.",
            "VernacDefinition",
            "09e59a5d5806e34d9149091e3c51139a4e48e177"
        ],
        [
            "Canonical gen_ringType := Eval hnf in RingType FA gen_ringMixin.",
            "VernacDefinition",
            "f583244544795f5f6d4cf412bb6e278075de0994"
        ],
        [
            "Canonical gen_comRingType := Eval hnf in ComRingType FA gen_mulC.",
            "VernacDefinition",
            "68bc09fbe32cd6ea190078186a452ce7de5ea1a0"
        ],
        [
            "Lemma mxval1 : mxval 1 = 1%:M.",
            "VernacStartTheoremProof",
            "e5d775b3aba9492a99b68e3b417cf6646ef8168e"
        ],
        [
            "exact: mxval_gen1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxvalM : {morph mxval : x y / x * y >-> x *m y}.",
            "VernacStartTheoremProof",
            "e596beea9814b77ac6433bd737d01da2c653870d"
        ],
        [
            "exact: mxval_genM.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxval_sub : additive mxval.",
            "VernacStartTheoremProof",
            "11e59681191aac11c4f80c72e7ea1456b5344330"
        ],
        [
            "by move=> x y; rewrite mxvalD mxvalN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical mxval_additive := Additive mxval_sub.",
            "VernacDefinition",
            "2289b0b9f1f6c4a72b8fc955b5086c8e5a788c29"
        ],
        [
            "Lemma mxval_is_multiplicative : multiplicative mxval.",
            "VernacStartTheoremProof",
            "89cea1bb5e1a84e2e50f7bf656f0d9f079e791f4"
        ],
        [
            "by split; [apply: mxvalM | apply: mxval1].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical mxval_rmorphism := AddRMorphism mxval_is_multiplicative.",
            "VernacDefinition",
            "cc69e34df5f4b0fc7447edb2a60880cde6f092f6"
        ],
        [
            "Lemma mxval_centg x : centgmx rG (mxval x).",
            "VernacStartTheoremProof",
            "fbfbba49e42b14ddf11ab831f25e0336ffeb983b"
        ],
        [
            "rewrite [mxval _]horner_rVpoly -memmx_cent_envelop vec_mxK {x}mulmx_sub //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/row_subP=> k; rewrite rowK memmx_cent_envelop; apply/centgmxP => g Gg /=.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite !mulmxE commrX // /GRing.comm -mulmxE (centgmxP cGA).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_mulVr : GRing.Field.axiom genV.",
            "VernacStartTheoremProof",
            "835870af5d2d28397f05d1a391a0a1b186eb07e6"
        ],
        [
            "move=> x; rewrite -(inj_eq mxval_inj) mxval0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/(mx_Schur irrG (mxval_centg x)) => u_x.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: mxval_inj; rewrite mxvalM mxval_genV mxval1 mulVmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_invr0 : genV 0 = 0.",
            "VernacStartTheoremProof",
            "9ef7b1121f8cc5a0d169684c71aacbd4bcfec0ff"
        ],
        [
            "by apply: mxval_inj; rewrite mxval_genV !mxval0 -{2}invr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gen_unitRingMixin := FieldUnitMixin gen_mulVr gen_invr0.",
            "VernacDefinition",
            "3f1dbd09c5a5b86ab13ebcba0c1147bec5b3f511"
        ],
        [
            "Canonical gen_unitRingType := Eval hnf in UnitRingType FA gen_unitRingMixin.",
            "VernacDefinition",
            "883391a5d822642d28bfa17907102099c7799152"
        ],
        [
            "Canonical gen_comUnitRingType := Eval hnf in [comUnitRingType of FA].",
            "VernacDefinition",
            "4bb94e9cd4e957a768f2f3fd7f2dca44d5e9b160"
        ],
        [
            "Definition gen_fieldMixin := @FieldMixin _ _ _ _ : GRing.Field.mixin_of gen_unitRingType.",
            "VernacDefinition",
            "63a35ded1f2b74c255d2ef18b5dc0c16f099bd32"
        ],
        [
            "Definition gen_idomainMixin := FieldIdomainMixin gen_fieldMixin.",
            "VernacDefinition",
            "b8cf4a3fb50273716cde7e21f74016ecb011df4b"
        ],
        [
            "Canonical gen_idomainType := Eval hnf in IdomainType FA gen_idomainMixin.",
            "VernacDefinition",
            "dd4ee52a130804ddba1175502ccc257d8e9028ec"
        ],
        [
            "Canonical gen_fieldType := Eval hnf in FieldType FA gen_fieldMixin.",
            "VernacDefinition",
            "ca3c261e09e96a6e15ec3dd6adb4b9feff1e9ae6"
        ],
        [
            "Lemma mxvalV : {morph mxval : x / x^-1 >-> invmx x}.",
            "VernacStartTheoremProof",
            "6f96879459fc30685bbe3d310ba5835c8ca1c478"
        ],
        [
            "exact: mxval_genV.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_is_rmorphism : rmorphism gen.",
            "VernacStartTheoremProof",
            "a2c157d07c20caa17ff7ab91d56b6715093e1d25"
        ],
        [
            "split=> [x y|]; first by apply: mxval_inj; rewrite genK !rmorphB /= !genK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by split=> // x y; apply: mxval_inj; rewrite genK !rmorphM /= !genK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical gen_additive := Additive gen_is_rmorphism.",
            "VernacDefinition",
            "178af0f83ae7c7e3f09d7a699dbb6071ca97645b"
        ],
        [
            "Canonical gen_rmorphism := RMorphism gen_is_rmorphism.",
            "VernacDefinition",
            "6733387a0a4c6d62cc38fb26848db48f56d57a9e"
        ],
        [
            "Definition groot := inFA (poly_rV ('X %% pA)).",
            "VernacDefinition",
            "2d1cee211005487a17996bb3cfd447d5b67425f2"
        ],
        [
            "Lemma mxval_groot : mxval groot = A.",
            "VernacStartTheoremProof",
            "f57a50fe4b212cd482a53e8da1f457d53fc4edd9"
        ],
        [
            "rewrite /mxval [pval _]poly_rV_K ?size_mod_mxminpoly // -horner_mxK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mx_inv_hornerK ?horner_mx_mem // horner_mx_X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxval_grootX k : mxval (groot ^+ k) = A ^+ k.",
            "VernacStartTheoremProof",
            "16d9b9e0b4f60a1e84f192c5782cfd1027c7e096"
        ],
        [
            "by rewrite rmorphX /= mxval_groot.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mxminpoly_groot : (map_poly gen pA).[groot] = 0.",
            "VernacStartTheoremProof",
            "b88951557288247533a415ab679993c334684f72"
        ],
        [
            "apply: mxval_inj; rewrite -horner_map [_ groot]/= mxval_groot mxval0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(mx_root_minpoly A); congr ((_ : {poly _}).[A]).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply/polyP=> i; rewrite 3!coef_map; apply: genK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma non_linear_gen_reducible : d > 1 -> mxnonsimple (map_repr gen_rmorphism rG) 1%:M.",
            "VernacStartTheoremProof",
            "bdf3a7da9984c08214eb28389539eb1d4c87b41a"
        ],
        [
            "rewrite ltnNge mxminpoly_linear_is_scalar => Anscal.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "pose Af := map_mx gen A; exists (kermx (Af - groot%:M)).",
            "VernacExtend",
            "c02f80655e5d3f9670ce2da8e91c31b5cdbb5464"
        ],
        [
            "rewrite submx1 kermx_centg_module /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/centgmxP=> z Gz; rewrite mulmxBl mulmxBr scalar_mxC.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -!map_mxM 1?(centgmxP cGA).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite andbC mxrank_ker -subn_gt0 mxrank1 subKn ?rank_leq_row // lt0n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mxrank_eq0 subr_eq0; case: eqP => [defAf | _].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite -(map_mx_is_scalar gen_rmorphism) -/Af in Anscal.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/is_scalar_mxP: Anscal; exists groot.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -mxrank_eq0 mxrank_ker subn_eq0 row_leq_rank.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/row_freeP=> [[XA' XAK]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have pAf0: (mxminpoly Af).[groot] == 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mxminpoly_map ?map_mxminpoly_groot.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{pAf0} [q def_pAf]:= factor_theorem _ _ pAf0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have q_nz: q != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: eqP (congr1 (fun p : {poly _} => size p) def_pAf) => // ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite size_mxminpoly mul0r size_poly0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have qAf0: horner_mx Af q = 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -[_ q]mulr1 -[1]XAK mulrA -{2}(horner_mx_X Af) -(horner_mx_C Af).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -rmorphB -rmorphM -def_pAf /= mx_root_minpoly mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{qAf0} := dvdp_leq q_nz (mxminpoly_min qAf0); rewrite def_pAf.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "by rewrite size_Mmonic ?monicXsubC // polyseqXsubC addn2 ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subbase nA (B : 'rV_nA) : 'M_(nA * d, n) := \\matrix_ik mxvec (\\matrix_(i, k) (row (B 0 i) (A ^+ k))) 0 ik.",
            "VernacDefinition",
            "36f4c195eb8185c5bec301b111374e06c94079fe"
        ],
        [
            "Lemma gen_dim_ex_proof : exists nA, [exists B : 'rV_nA, row_free (subbase B)].",
            "VernacStartTheoremProof",
            "0240dbed68a87a3d338277b9ff49c3e3aa18b08d"
        ],
        [
            "by exists 0%N; apply/existsP; exists 0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_dim_ub_proof nA : [exists B : 'rV_nA, row_free (subbase B)] -> (nA <= n)%N.",
            "VernacStartTheoremProof",
            "f0b574b0fc3ab6772b53a4aa26dba33563c30d57"
        ],
        [
            "case/existsP=> B /eqnP def_nAd.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (leq_trans _ (rank_leq_col (subbase B))) // def_nAd leq_pmulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gen_dim := ex_maxn gen_dim_ex_proof gen_dim_ub_proof.",
            "VernacDefinition",
            "c715cef3d92235974feb10d210c92044cabe6a26"
        ],
        [
            "Notation nA := gen_dim.",
            "VernacSyntacticDefinition",
            "ad532d8fe59c8dfef23a89e18299445f6f3d13ae"
        ],
        [
            "Definition gen_base : 'rV_nA := odflt 0 [pick B | row_free (subbase B)].",
            "VernacDefinition",
            "0c2987ad52fc8f2279190af53642cd06978644aa"
        ],
        [
            "Definition base := subbase gen_base.",
            "VernacDefinition",
            "57d1ea028d5a00ebd68f7242a86b7f6def001fe7"
        ],
        [
            "Lemma base_free : row_free base.",
            "VernacStartTheoremProof",
            "19889af51a836694f4c8e6726ccd836d36a17339"
        ],
        [
            "rewrite /base /gen_base /nA; case: pickP => //; case: ex_maxnP => nA_max.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "by case/existsP=> B Bfree _ no_free; rewrite no_free in Bfree.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base_full : row_full base.",
            "VernacStartTheoremProof",
            "5ea630bec45c9bd5570abed0f3424c242bae3e35"
        ],
        [
            "rewrite /row_full (eqnP base_free) /nA; case: ex_maxnP => nA.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case/existsP=> /= B /eqnP Bfree nA_max; rewrite -Bfree eqn_leq rank_leq_col.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite -{1}(mxrank1 F n) mxrankS //; apply/row_subP=> j; set u := row _ _.",
            "VernacExtend",
            "fea1f00f88dd43d458877bdcbd82fb27783cf23e"
        ],
        [
            "move/implyP: {nA_max}(nA_max nA.+1); rewrite ltnn implybF.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: contraR => nBj; apply/existsP.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "exists (row_mx (const_mx j : 'M_1) B); rewrite -row_leq_rank.",
            "VernacExtend",
            "9f2339d535e6bbc5ebbe89f9276e790c3341da0e"
        ],
        [
            "pose Bj := Ad *m lin1_mx (mulmx u \\o vec_mx).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have rBj: \\rank Bj = d.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqn_leq rank_leq_row -subn_eq0 -mxrank_ker mxrank_eq0 /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/rowV0P=> v /sub_kermxP; rewrite mulmxA mul_rV_lin1 /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -horner_rVpoly; pose x := inFA v; rewrite -/(mxval x).",
            "VernacExtend",
            "8693afaa6f6281b93539fcb5543952125a97a914"
        ],
        [
            "have [[] // | nzx /(congr1 (mulmx^~ (mxval x^-1)))] := eqVneq x 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mul0mx /= -mulmxA -mxvalM divff // mxval1 mulmx1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move/rowP/(_ j)/eqP; rewrite !mxE !eqxx oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}mulSn -Bfree -{1}rBj {rBj} -mxrank_disjoint_sum.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite mxrankS // addsmx_sub -[nA.+1]/(1 + nA)%N; apply/andP; split.",
            "VernacExtend",
            "563747ab88f591bd67f85e19847b20501f275f62"
        ],
        [
            "apply/row_subP=> k; rewrite row_mul mul_rV_lin1 /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: eq_row_sub (mxvec_index (lshift _ 0) k) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite !rowK mxvecK mxvecE mxE row_mxEl mxE -row_mul mul1mx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/row_subP; case/mxvec_indexP=> i k.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "apply: eq_row_sub (mxvec_index (rshift 1 i) k) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite !rowK !mxvecE 2!mxE row_mxEr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP/rowV0P=> v; rewrite sub_capmx => /andP[/submxP[w]].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "set x := inFA w; rewrite {Bj}mulmxA mul_rV_lin1 /= -horner_rVpoly -/(mxval x).",
            "VernacExtend",
            "8460a73fe74726b8e94ff0752da65e8d48f68f26"
        ],
        [
            "have [-> | nzx ->] := eqVneq x 0; first by rewrite mxval0 mulmx0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/(submxMr (mxval x^-1)); rewrite -mulmxA -mxvalM divff {nzx}//.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite mxval1 mulmx1 => Bx'j; rewrite (submx_trans Bx'j) in nBj => {Bx'j} //.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "apply/row_subP; case/mxvec_indexP=> i k.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "rewrite row_mul rowK mxvecE mxE rowE -mulmxA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have ->: A ^+ k *m mxval x^-1 = mxval (groot ^+ k / x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mxvalM rmorphX /= mxval_groot.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite [mxval _]horner_rVpoly; move: {k u x}(val _) => u.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite (mulmx_sum_row u) !linear_sum summx_sub //= => k _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !linearZ scalemx_sub //= rowK mxvecK -rowE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_row_sub (mxvec_index i k) _; rewrite rowK mxvecE mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_dim_factor : (nA * d)%N = n.",
            "VernacStartTheoremProof",
            "7f4bb190983a5deefb1c9ffac4f66b9417701da5"
        ],
        [
            "by rewrite -(eqnP base_free) (eqnP base_full).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_dim_gt0 : nA > 0.",
            "VernacStartTheoremProof",
            "b6b8cd6ff01ae23e7f62fed8af2eb1e1d2927a24"
        ],
        [
            "by case: posnP gen_dim_factor => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Bijection.",
            "VernacBeginSection",
            "af3613ad9336e0893a0ee5964045e705581aa6f0"
        ],
        [
            "Variable m : nat.",
            "VernacAssumption",
            "32da0a0852c20216f61fccf152f67371355e7d98"
        ],
        [
            "Definition in_gen (W : 'M[F]_(m, n)) : 'M[FA]_(m, nA) := \\matrix_(i, j) inFA (row j (vec_mx (row i W *m pinvmx base))).",
            "VernacDefinition",
            "60dfb561080b05aacaec582aa34b7cffb6e7836e"
        ],
        [
            "Definition val_gen (W : 'M[FA]_(m, nA)) : 'M[F]_(m, n) := \\matrix_i (mxvec (\\matrix_j val (W i j)) *m base).",
            "VernacDefinition",
            "2dac381dfef5338d65c6ce9779abe829e968b16f"
        ],
        [
            "Lemma in_genK : cancel in_gen val_gen.",
            "VernacStartTheoremProof",
            "ec18f079c533f7880b5681d8558fc5c472d51496"
        ],
        [
            "move=> W; apply/row_matrixP=> i; rewrite rowK; set w := row i W.",
            "VernacExtend",
            "9b18670a71fc6d7691a34c108180d74f8e2f9535"
        ],
        [
            "have b_w: (w <= base)%MS by rewrite submx_full ?base_full.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -{b_w}(mulmxKpV b_w); congr (_ *m _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply/rowP; case/mxvec_indexP=> j k; rewrite mxvecE !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_genK : cancel val_gen in_gen.",
            "VernacStartTheoremProof",
            "cfc4748760e084c6e25f4d4cb0a2f8e598cd0ba6"
        ],
        [
            "move=> W; apply/matrixP=> i j; apply: val_inj; rewrite mxE /= rowK.",
            "VernacExtend",
            "00ff85c2978147a9fc435136b93db114a3840954"
        ],
        [
            "case/row_freeP: base_free => B' BB'; rewrite -[_ *m _]mulmx1 -BB' mulmxA.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite mulmxKpV ?submxMl // -mulmxA BB' mulmx1 mxvecK rowK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_gen0 : in_gen 0 = 0.",
            "VernacStartTheoremProof",
            "66cc8f45747d325613376f0bd916f174e8942e2d"
        ],
        [
            "by apply/matrixP=> i j; rewrite !mxE !(mul0mx, linear0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_gen0 : val_gen 0 = 0.",
            "VernacStartTheoremProof",
            "858b0781ca79758b7b619c9b431c87012f4eebd7"
        ],
        [
            "by apply: (canLR in_genK); rewrite in_gen0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_genN : {morph in_gen : W / - W}.",
            "VernacStartTheoremProof",
            "8bd43d4fdb8a2db296df8ebdb9197d935779f1a8"
        ],
        [
            "move=> W; apply/matrixP=> i j; apply: val_inj.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by rewrite !mxE !(mulNmx, linearN).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_genN : {morph val_gen : W / - W}.",
            "VernacStartTheoremProof",
            "562adacd551b6c2aa012b8005786966417f0db9a"
        ],
        [
            "by move=> W; apply: (canLR in_genK); rewrite in_genN val_genK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_genD : {morph in_gen : U V / U + V}.",
            "VernacStartTheoremProof",
            "be25475de06d5e8b632ddfd9153ec6a7eef739a4"
        ],
        [
            "move=> U V; apply/matrixP=> i j; apply: val_inj.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "by rewrite !mxE !(mulmxDl, linearD).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_genD : {morph val_gen : U V / U + V}.",
            "VernacStartTheoremProof",
            "ef589fcc7c026336f10ce5c7656d422fe4570d8f"
        ],
        [
            "by move=> U V; apply: (canLR in_genK); rewrite in_genD !val_genK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition in_gen_sum := big_morph in_gen in_genD in_gen0.",
            "VernacDefinition",
            "282329a3e52f0057e7f1aca7c30a7f33d3997851"
        ],
        [
            "Definition val_gen_sum := big_morph val_gen val_genD val_gen0.",
            "VernacDefinition",
            "56e26eba8541291ed7b5e6a3bf4120ae6a1ccf0f"
        ],
        [
            "Lemma in_genZ a : {morph in_gen : W / a *: W >-> gen a *: W}.",
            "VernacStartTheoremProof",
            "12d14bd9cf6b1923543d1a322b00c6e9e8dbaa10"
        ],
        [
            "move=> W; apply/matrixP=> i j; apply: mxval_inj.",
            "VernacExtend",
            "e374b6c583d80c9d8b579c06df7953342f99f751"
        ],
        [
            "rewrite !mxE mxvalM genK ![mxval _]horner_rVpoly /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mul_scalar_mx !(I, scalemxAl, linearZ).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Bijection.",
            "VernacEndSegment",
            "d087860ea0a1512e0850986b37f63daa74c7fbab"
        ],
        [
            "Prenex Implicits val_genK in_genK.",
            "VernacExtend",
            "b4dd6bf06e8ac9eb8d397588f6a8d293c96ede86"
        ],
        [
            "Lemma val_gen_rV (w : 'rV_nA) : val_gen w = mxvec (\\matrix_j val (w 0 j)) *m base.",
            "VernacStartTheoremProof",
            "9aa75e4bd4ff04633b87c6f75c28f9b3984c24cf"
        ],
        [
            "by apply/rowP=> j; rewrite mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Bijection2.",
            "VernacBeginSection",
            "0ec358f6ae2a888e01c05e383ba4673bcf428545"
        ],
        [
            "Variable m : nat.",
            "VernacAssumption",
            "32da0a0852c20216f61fccf152f67371355e7d98"
        ],
        [
            "Lemma val_gen_row W (i : 'I_m) : val_gen (row i W) = row i (val_gen W).",
            "VernacStartTheoremProof",
            "28166d34fc123371f78f362eaa75050a9bff3e9c"
        ],
        [
            "rewrite val_gen_rV rowK; congr (mxvec _ *m _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply/matrixP=> j k; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_gen_row W (i : 'I_m) : in_gen (row i W) = row i (in_gen W).",
            "VernacStartTheoremProof",
            "da8c6169fa71f664f3a8c3a146d6a36e7aeb36df"
        ],
        [
            "by apply: (canLR val_genK); rewrite val_gen_row in_genK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma row_gen_sum_mxval W (i : 'I_m) : row i (val_gen W) = \\sum_j row (gen_base 0 j) (mxval (W i j)).",
            "VernacStartTheoremProof",
            "774822a61395d5a3b05b54fb6ac2769c689cb19c"
        ],
        [
            "rewrite -val_gen_row [row i W]row_sum_delta val_gen_sum.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => /= j _; rewrite mxE; move: {W i}(W i j) => x.",
            "VernacExtend",
            "dc718d25de68f54fd287715597f582bd4482cb79"
        ],
        [
            "have ->: x = \\sum_k gen (val x 0 k) * inFA (delta_mx 0 k).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: x => u; apply: mxval_inj; rewrite {1}[u]row_sum_delta.",
            "VernacExtend",
            "db5c0dcae9fc8f6605ec5d5bf559f9684231fcd6"
        ],
        [
            "rewrite mxval_sum [mxval _]horner_rVpoly mulmx_suml linear_sum /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => k _; rewrite mxvalM genK [mxval _]horner_rVpoly /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite mul_scalar_mx -scalemxAl linearZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite scaler_suml val_gen_sum mxval_sum linear_sum; apply: eq_bigr => k _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite mxvalM genK mul_scalar_mx linearZ [mxval _]horner_rVpoly /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -scalerA; apply: (canLR in_genK); rewrite in_genZ; congr (_ *: _).",
            "VernacExtend",
            "e665a129969e89df20cf8929f8d507bb69bcbafb"
        ],
        [
            "apply: (canRL val_genK); transitivity (row (mxvec_index j k) base); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -rowE rowK mxvecE mxE rowK mxvecK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite rowE -mxvec_delta -[val_gen _](row_id 0) rowK /=; congr (mxvec _ *m _).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "apply/row_matrixP=> j'; rewrite rowK !mxE mulr_natr rowE mul_delta_mx_cond.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite !mulrb (fun_if rVval).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_genZ x : {morph @val_gen m : W / x *: W >-> W *m mxval x}.",
            "VernacStartTheoremProof",
            "33622a0b4b7ff66bf6faa5936d929ac7ba06af95"
        ],
        [
            "move=> W; apply/row_matrixP=> i; rewrite row_mul !row_gen_sum_mxval.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite mulmx_suml; apply: eq_bigr => j _; rewrite mxE mulrC mxvalM row_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Bijection2.",
            "VernacEndSegment",
            "7c32173ebb96991fdd42f3e95893ff2cacbedeb0"
        ],
        [
            "Lemma submx_in_gen m1 m2 (U : 'M_(m1, n)) (V : 'M_(m2, n)) : (U <= V -> in_gen U <= in_gen V)%MS.",
            "VernacStartTheoremProof",
            "685e005f6e9d97efea30b3544b6d9b5d8acbc150"
        ],
        [
            "move=> sUV; apply/row_subP=> i; rewrite -in_gen_row.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "case/submxP: (row_subP sUV i) => u ->{i}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite mulmx_sum_row in_gen_sum summx_sub // => j _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite in_genZ in_gen_row scalemx_sub ?row_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma submx_in_gen_eq m1 m2 (U : 'M_(m1, n)) (V : 'M_(m2, n)) : (V *m A <= V -> (in_gen U <= in_gen V) = (U <= V))%MS.",
            "VernacStartTheoremProof",
            "e6876520ba59c33e30d94257351ce61313df0b30"
        ],
        [
            "move=> sVA_V; apply/idP/idP=> siUV; last exact: submx_in_gen.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/row_subP=> i; rewrite -[row i U]in_genK in_gen_row.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case/submxP: (row_subP siUV i) => u ->{i U siUV}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite mulmx_sum_row val_gen_sum summx_sub // => j _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite val_genZ val_gen_row in_genK rowE -mulmxA mulmx_sub //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [mxval _]horner_poly mulmx_sumr summx_sub // => [[k _]] _ /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite mulmxA mul_mx_scalar -scalemxAl scalemx_sub {u j}//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim: k => [|k IHk]; first by rewrite mulmx1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprSr mulmxA (submx_trans (submxMr A IHk)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gen_mx g := \\matrix_i in_gen (row (gen_base 0 i) (rG g)).",
            "VernacDefinition",
            "9849a0df0293e46d67a5ec625db77d208168f90c"
        ],
        [
            "Let val_genJmx m : {in G, forall g, {morph @val_gen m : W / W *m gen_mx g >-> W *m rG g}}.",
            "VernacDefinition",
            "d63688bc211cbbf13a84ecdba55c618d459d5a10"
        ],
        [
            "move=> g Gg /= W; apply/row_matrixP=> i; rewrite -val_gen_row !row_mul.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "rewrite mulmx_sum_row val_gen_sum row_gen_sum_mxval mulmx_suml.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eq_bigr => /= j _; rewrite val_genZ rowK in_genK mxE -!row_mul.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite (centgmxP (mxval_centg _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_mx_repr : mx_repr G gen_mx.",
            "VernacStartTheoremProof",
            "5bb4cf0d1695505fb95a64e01f5cff193d0113d8"
        ],
        [
            "split=> [|g h Gg Gh]; apply: (can_inj val_genK).",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by rewrite -[gen_mx 1]mul1mx val_genJmx // repr_mx1 mulmx1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {1}[val_gen]lock -[gen_mx g]mul1mx !val_genJmx // -mulmxA -repr_mxM //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -val_genJmx ?groupM ?mul1mx -?lock.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical gen_repr := MxRepresentation gen_mx_repr.",
            "VernacDefinition",
            "79d46fa59b60d2f9f299514277c58d6913d35b1a"
        ],
        [
            "Local Notation rGA := gen_repr.",
            "VernacSyntacticDefinition",
            "f345014bcb642da65753d9cbbc36bebb028923ff"
        ],
        [
            "Lemma val_genJ m : {in G, forall g, {morph @val_gen m : W / W *m rGA g >-> W *m rG g}}.",
            "VernacStartTheoremProof",
            "9fd1bdf3dc8a0150a30b0fe0d7edeebb2be9a9b4"
        ],
        [
            "exact: val_genJmx.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_genJ m : {in G, forall g, {morph @in_gen m : v / v *m rG g >-> v *m rGA g}}.",
            "VernacStartTheoremProof",
            "59dcc2602bff957c271947e3e8a6311d453db860"
        ],
        [
            "by move=> g Gg /= v; apply: (canLR val_genK); rewrite val_genJ ?in_genK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rfix_gen (H : {set gT}) : H \\subset G -> (rfix_mx rGA H :=: in_gen (rfix_mx rG H))%MS.",
            "VernacStartTheoremProof",
            "9b76090f3cf040dc2645e6a2fb0dbdbeec25aca5"
        ],
        [
            "move/subsetP=> sHG; apply/eqmxP/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/rfix_mxP=> g Hg; rewrite -in_genJ ?sHG ?rfix_mx_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[rfix_mx rGA H]val_genK; apply: submx_in_gen.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply/rfix_mxP=> g Hg; rewrite -val_genJ ?rfix_mx_id ?sHG.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rowval_gen m U := <<\\matrix_ik mxvec (\\matrix_(i < m, k < d) (row i (val_gen U) *m A ^+ k)) 0 ik>>%MS.",
            "VernacDefinition",
            "7103fa9198b4bc2e3d4a5031ff67a921dfc1e664"
        ],
        [
            "Lemma submx_rowval_gen m1 m2 (U : 'M_(m1, n)) (V : 'M_(m2, nA)) : (U <= rowval_gen V)%MS = (in_gen U <= V)%MS.",
            "VernacStartTheoremProof",
            "668841ede76f703f3889dccb3cacdb555610ea5a"
        ],
        [
            "rewrite genmxE; apply/idP/idP=> sUV.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply: submx_trans (submx_in_gen sUV) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/row_subP; case/mxvec_indexP=> i k; rewrite -in_gen_row rowK mxvecE mxE.",
            "VernacExtend",
            "cbc4844cce0ad896dcb7bc2a887cf6aae5047c5f"
        ],
        [
            "rewrite -mxval_grootX -val_gen_row -val_genZ val_genK scalemx_sub //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: row_sub.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite -[U]in_genK; case/submxP: sUV => u ->{U}.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply/row_subP=> i0; rewrite -val_gen_row row_mul; move: {i0 u}(row _ u) => u.",
            "VernacExtend",
            "dc718d25de68f54fd287715597f582bd4482cb79"
        ],
        [
            "rewrite mulmx_sum_row val_gen_sum summx_sub // => i _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite val_genZ [mxval _]horner_rVpoly [_ *m Ad]mulmx_sum_row.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !linear_sum summx_sub // => k _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !linearZ scalemx_sub {u}//= rowK mxvecK val_gen_row.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (eq_row_sub (mxvec_index i k)); rewrite rowK mxvecE mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rowval_genK m (U : 'M_(m, nA)) : (in_gen (rowval_gen U) :=: U)%MS.",
            "VernacStartTheoremProof",
            "ddadfec7568fed40a3f978c6bf4a04b0937aa859"
        ],
        [
            "apply/eqmxP; rewrite -submx_rowval_gen submx_refl /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -{1}[U]val_genK submx_in_gen // submx_rowval_gen val_genK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rowval_gen_stable m (U : 'M_(m, nA)) : (rowval_gen U *m A <= rowval_gen U)%MS.",
            "VernacStartTheoremProof",
            "53ee4992856c70c1ac5db8bdeac89d1d92ac5e68"
        ],
        [
            "rewrite -[A]mxval_groot -{1}[_ U]in_genK -val_genZ.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite submx_rowval_gen val_genK scalemx_sub // rowval_genK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstab_in_gen m (U : 'M_(m, n)) : rstab rGA (in_gen U) = rstab rG U.",
            "VernacStartTheoremProof",
            "87ea24b16543961fe40129ac3012a0022f2998f5"
        ],
        [
            "apply/setP=> x; rewrite !inE; case Gx: (x \\in G) => //=.",
            "VernacExtend",
            "5caed936835e366e9e533d8f19382dcfedbf86d4"
        ],
        [
            "by rewrite -in_genJ // (inj_eq (can_inj in_genK)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstabs_in_gen m (U : 'M_(m, n)) : rstabs rG U \\subset rstabs rGA (in_gen U).",
            "VernacStartTheoremProof",
            "e72c080123c988791d2bc2974b04f0ae64de6f8d"
        ],
        [
            "apply/subsetP=> x; rewrite !inE => /andP[Gx nUx].",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite -in_genJ Gx // submx_in_gen.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rstabs_rowval_gen m (U : 'M_(m, nA)) : rstabs rG (rowval_gen U) = rstabs rGA U.",
            "VernacStartTheoremProof",
            "b97666ca2b4e143c32dbfd97360a135e58fe6b8a"
        ],
        [
            "apply/setP=> x; rewrite !inE; case Gx: (x \\in G) => //=.",
            "VernacExtend",
            "5caed936835e366e9e533d8f19382dcfedbf86d4"
        ],
        [
            "by rewrite submx_rowval_gen in_genJ // (eqmxMr _ (rowval_genK U)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxmodule_rowval_gen m (U : 'M_(m, nA)) : mxmodule rG (rowval_gen U) = mxmodule rGA U.",
            "VernacStartTheoremProof",
            "a7b0a3e150dc74c008e9b4048d83a27e84a242eb"
        ],
        [
            "by rewrite /mxmodule rstabs_rowval_gen.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_mx_irr : mx_irreducible rGA.",
            "VernacStartTheoremProof",
            "8a4c310a43eceb4166e3a40bb64392a9d51baeb4"
        ],
        [
            "apply/mx_irrP; split=> [|U Umod nzU]; first exact: gen_dim_gt0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -sub1mx -rowval_genK -submx_rowval_gen submx_full //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/mx_irrP: irrG => _; apply; first by rewrite mxmodule_rowval_gen.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -(inj_eq (can_inj in_genK)) in_gen0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -mxrank_eq0 rowval_genK mxrank_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rker_gen : rker rGA = rker rG.",
            "VernacStartTheoremProof",
            "e8a977ea9668dbe2a4fd2cfd9f6984066104b1e9"
        ],
        [
            "apply/setP=> g; rewrite !inE !mul1mx; case Gg: (g \\in G) => //=.",
            "VernacExtend",
            "5caed936835e366e9e533d8f19382dcfedbf86d4"
        ],
        [
            "apply/eqP/eqP=> g1; apply/row_matrixP=> i.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by apply: (can_inj in_genK); rewrite rowE in_genJ //= g1 mulmx1 row1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: (can_inj val_genK); rewrite rowE val_genJ //= g1 mulmx1 row1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_mx_faithful : mx_faithful rGA = mx_faithful rG.",
            "VernacStartTheoremProof",
            "74fa5bd7c82a717d16c6dbf1cdf681efea0875cc"
        ],
        [
            "by rewrite /mx_faithful rker_gen.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GenField.",
            "VernacEndSegment",
            "7eb160d26d586acd90365b69199dac64effe92bc"
        ],
        [
            "Section DecideGenField.",
            "VernacBeginSection",
            "8b9ce0dccf5066eaf3adefe896546ed9502e993f"
        ],
        [
            "Import MatrixFormula.",
            "VernacImport",
            "da785b6551f75125128e6be8387c56609adaad9a"
        ],
        [
            "Variable F : decFieldType.",
            "VernacAssumption",
            "f6255a5bd3c15c78ce93297f324bf69e6be70322"
        ],
        [
            "Local Notation False := GRing.False.",
            "VernacSyntacticDefinition",
            "c98fe9db3c87bcaf7289792779d227be932397ee"
        ],
        [
            "Local Notation True := GRing.True.",
            "VernacSyntacticDefinition",
            "65d04640212e91d9afdad3cc23d8abccbd298e8f"
        ],
        [
            "Local Notation Bool b := (GRing.Bool b%bool).",
            "VernacSyntacticDefinition",
            "823d9861055fb59f25e193fcc9306ac3ff06da3e"
        ],
        [
            "Local Notation term := (GRing.term F).",
            "VernacSyntacticDefinition",
            "3d7bedaf601b32a867443e8a5bdebe953a8310de"
        ],
        [
            "Local Notation form := (GRing.formula F).",
            "VernacSyntacticDefinition",
            "4fe58c2a7c56cdb65302c99593552b9aebf1bb6d"
        ],
        [
            "Local Notation morphAnd f := ((big_morph f) true andb).",
            "VernacSyntacticDefinition",
            "eb53dd11d71c27185c4832688e3ae6fcac07f057"
        ],
        [
            "Variables (gT : finGroupType) (G : {group gT}) (n' : nat).",
            "VernacAssumption",
            "ae3370e994920ec9224b090b93a7063ac68165c5"
        ],
        [
            "Local Notation n := n'.+1.",
            "VernacSyntacticDefinition",
            "a44d7133197df31a38212ab1d7bfb6ec0dc123a2"
        ],
        [
            "Variables (rG : mx_representation F G n) (A : 'M[F]_n).",
            "VernacAssumption",
            "0c71fa23537425c12d83f3e3420b65bb8e37cff3"
        ],
        [
            "Hypotheses (irrG : mx_irreducible rG) (cGA : centgmx rG A).",
            "VernacAssumption",
            "3107169d24519287ffd76700ff25719db0a84696"
        ],
        [
            "Local Notation FA := (gen_of irrG cGA).",
            "VernacSyntacticDefinition",
            "8fe06baba7c3bf1182f59cd9b8df0b7d92adb243"
        ],
        [
            "Local Notation inFA := (Gen irrG cGA).",
            "VernacSyntacticDefinition",
            "d45fcf73d4cd58853971b9f005fe668b9b0a54d7"
        ],
        [
            "Local Notation d := (degree_mxminpoly A).",
            "VernacSyntacticDefinition",
            "a3b54ead5b3e57a20248d07b4a4cedf619fb4e21"
        ],
        [
            "Let d_gt0 : d > 0 := mxminpoly_nonconstant A.",
            "VernacDefinition",
            "c7af9b22aa174e7f5702f97fa887c5977f20083f"
        ],
        [
            "Local Notation Ad := (powers_mx A d).",
            "VernacSyntacticDefinition",
            "9236827fb6636dc18dc4dd41887e169c13f80a65"
        ],
        [
            "Let mxT (u : 'rV_d) := vec_mx (mulmx_term u (mx_term Ad)).",
            "VernacDefinition",
            "caeeebf7fe285274e5a7985c42ba91d18b119bcb"
        ],
        [
            "Let eval_mxT e u : eval_mx e (mxT u) = mxval (inFA (eval_mx e u)).",
            "VernacDefinition",
            "1006835ccdb36550113445a0a392f796bcd1650f"
        ],
        [
            "by rewrite eval_vec_mx eval_mulmx eval_mx_term [mxval _]horner_rVpoly.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let Ad'T := mx_term (pinvmx Ad).",
            "VernacDefinition",
            "8ba662f8a685361b91112823a1f783dfc29c6358"
        ],
        [
            "Let mulT (u v : 'rV_d) := mulmx_term (mxvec (mulmx_term (mxT u) (mxT v))) Ad'T.",
            "VernacDefinition",
            "54d5faeb094b8c0f6b0707757835953abcd29a0a"
        ],
        [
            "Lemma eval_mulT e u v : eval_mx e (mulT u v) = val (inFA (eval_mx e u) * inFA (eval_mx e v)).",
            "VernacStartTheoremProof",
            "954b25c0682ca2ea1ed8981dc78d1d87dc2ef63a"
        ],
        [
            "rewrite !(eval_mulmx, eval_mxvec) !eval_mxT eval_mx_term.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (can_inj rVpolyK); rewrite -mxvalM [rVpoly _]horner_rVpolyK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint gen_term t := match t with | 'X_k => row_var _ d k | x%:T => mx_term (val (x : FA)) | n1%:R => mx_term (val (n1%:R : FA))%R | t1 + t2 => \\row_i (gen_term t1 0%R i + gen_term t2 0%R i) | - t1 => \\row_i (- gen_term t1 0%R i) | t1 *+ n1 => mulmx_term (mx_term n1%:R%:M)%R (gen_term t1) | t1 * t2 => mulT (gen_term t1) (gen_term t2) | t1^-1 => gen_term t1 | t1 ^+ n1 => iter n1 (mulT (gen_term t1)) (mx_term (val (1%R : FA))) end%T.",
            "VernacFixpoint",
            "d87018e2af1c97d355f162b26c4103f6be1fc5fb"
        ],
        [
            "Definition gen_env (e : seq FA) := row_env (map val e).",
            "VernacDefinition",
            "146332f127c6535c8e024ba56045ebeaefc99d40"
        ],
        [
            "Lemma nth_map_rVval (e : seq FA) j : (map val e)`_j = val e`_j.",
            "VernacStartTheoremProof",
            "10961eb6f754d8e0f7fb3ce3fcf9e73640e87391"
        ],
        [
            "case: (ltnP j (size e)) => [| leej]; first exact: (nth_map 0 0).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !nth_default ?size_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma set_nth_map_rVval (e : seq FA) j v : set_nth 0 (map val e) j v = map val (set_nth 0 e j (inFA v)).",
            "VernacStartTheoremProof",
            "287d8c8efe60cbf4ff15f1dae730270c6fc4c614"
        ],
        [
            "apply: (@eq_from_nth _ 0) => [|k _]; first by rewrite !(size_set_nth, size_map).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !(nth_map_rVval, nth_set_nth) /= nth_map_rVval [rVval _]fun_if.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_gen_term e t : GRing.rterm t -> eval_mx (gen_env e) (gen_term t) = val (GRing.eval e t).",
            "VernacStartTheoremProof",
            "af4394bee261b7eb32e7280e1dd71488062a2598"
        ],
        [
            "elim: t => //=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> k _; apply/rowP=> i; rewrite !mxE /= nth_row_env nth_map_rVval.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> x _; rewrite eval_mx_term.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> x _; rewrite eval_mx_term.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> t1 IH1 t2 IH2 /andP[rt1 rt2]; rewrite -{}IH1 // -{}IH2 //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply/rowP=> k; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> t1 IH1 rt1; rewrite -{}IH1 //; apply/rowP=> k; rewrite !mxE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> t1 IH1 n1 rt1; rewrite eval_mulmx eval_mx_term mul_scalar_mx.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite scaler_nat {}IH1 //; elim: n1 => //= n1 IHn1; rewrite !mulrS IHn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> t1 IH1 t2 IH2 /andP[rt1 rt2]; rewrite eval_mulT IH1 ?IH2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> t1 IH1 n1 /IH1 {IH1}IH1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: n1 => [|n1 IHn1] /=; first by rewrite eval_mx_term.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite eval_mulT exprS IH1 IHn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint gen_form f := match f with | Bool b => Bool b | t1 == t2 => mxrank_form 0 (gen_term (t1 - t2)) | GRing.Unit t1 => mxrank_form 1 (gen_term t1) | f1 /\\ f2 => gen_form f1 /\\ gen_form f2 | f1 \\/ f2 => gen_form f1 \\/ gen_form f2 | f1 ==> f2 => gen_form f1 ==> gen_form f2 | ~ f1 => ~ gen_form f1 | ('exists 'X_k, f1) => Exists_row_form d k (gen_form f1) | ('forall 'X_k, f1) => ~ Exists_row_form d k (~ (gen_form f1)) end%T.",
            "VernacFixpoint",
            "dd644d11c7b665b6a2baca6e37208496798c6369"
        ],
        [
            "Lemma sat_gen_form e f : GRing.rformula f -> reflect (GRing.holds e f) (GRing.sat (gen_env e) (gen_form f)).",
            "VernacStartTheoremProof",
            "ed3419a640fb2818af631f50ab5ca9ee7d94751b"
        ],
        [
            "have ExP := Exists_rowP; have set_val := set_nth_map_rVval.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "elim: f e => //.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> b e _; apply: (iffP satP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /gen_form => t1 t2 e rt_t; set t := (_ - _)%T.",
            "VernacExtend",
            "c9a8452e0e06a4c3ac19bcd1b0a42d11d8e194b2"
        ],
        [
            "have:= GRing.qf_evalP (gen_env e) (mxrank_form_qf 0 (gen_term t)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite eval_mxrank mxrank_eq0 eval_gen_term // => tP.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite (sameP satP tP) /= subr_eq0 val_eqE; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> f1 IH1 f2 IH2 s /= /andP[/(IH1 s)f1P /(IH2 s)f2P].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: (iffP satP) => [[/satP/f1P ? /satP/f2P] | [/f1P/satP ? /f2P/satP]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> f1 IH1 f2 IH2 s /= /andP[/(IH1 s)f1P /(IH2 s)f2P].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: (iffP satP) => /= [] []; try move/satP; do [move/f1P | move/f2P]; try move/satP; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> f1 IH1 f2 IH2 s /= /andP[/(IH1 s)f1P /(IH2 s)f2P].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: (iffP satP) => /= implP; try move/satP; move/f1P; try move/satP; move/implP; try move/satP; move/f2P; try move/satP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> f1 IH1 s /= /(IH1 s) f1P.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: (iffP satP) => /= notP; try move/satP; move/f1P; try move/satP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=> k f1 IHf1 s /IHf1 f1P; apply: (iffP satP) => /= [|[[v f1v]]].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by case/ExP=> // x /satP; rewrite set_val => /f1P; exists (inFA x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/ExP=> //; exists v; rewrite set_val; apply/satP/f1P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> i f1 IHf1 s /IHf1 f1P; apply: (iffP satP) => /= allf1 => [[v]|].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "apply/f1P; case: satP => // notf1x; case: allf1; apply/ExP=> //.",
            "VernacExtend",
            "2dabdbf76c4d0f193e61151f527cdb21f3392cb7"
        ],
        [
            "by exists v; rewrite set_val.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/ExP=> //= v []; apply/satP; rewrite set_val; apply/f1P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gen_sat e f := GRing.sat (gen_env e) (gen_form (GRing.to_rform f)).",
            "VernacDefinition",
            "b68592ab537f3a1f41c3e1a79062ec0642c98820"
        ],
        [
            "Lemma gen_satP : GRing.DecidableField.axiom gen_sat.",
            "VernacStartTheoremProof",
            "8fe1633849c56975df081b512e1c3cbd45c404a8"
        ],
        [
            "move=> e f; have [tor rto] := GRing.to_rformP e f.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "exact: (iffP (sat_gen_form e (GRing.to_rform_rformula f))).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gen_decFieldMixin := DecFieldMixin gen_satP.",
            "VernacDefinition",
            "501b4ac14f9992699dfc80cf04527001ff8773f1"
        ],
        [
            "Canonical gen_decFieldType := Eval hnf in DecFieldType FA gen_decFieldMixin.",
            "VernacDefinition",
            "4b84326cd1057d7ca2313c5203f255a803f5ab2b"
        ],
        [
            "End DecideGenField.",
            "VernacEndSegment",
            "dee92c80a9174f17829e0a035a02f4f07210e5c8"
        ],
        [
            "Section FiniteGenField.",
            "VernacBeginSection",
            "8bc277ffb42f23f295793698810679e3cc8acfa6"
        ],
        [
            "Variables (F : finFieldType) (gT : finGroupType) (G : {group gT}) (n' : nat).",
            "VernacAssumption",
            "fca157ecc54fa687f90c062740f63da78e107d39"
        ],
        [
            "Local Notation n := n'.+1.",
            "VernacSyntacticDefinition",
            "a44d7133197df31a38212ab1d7bfb6ec0dc123a2"
        ],
        [
            "Variables (rG : mx_representation F G n) (A : 'M[F]_n).",
            "VernacAssumption",
            "0c71fa23537425c12d83f3e3420b65bb8e37cff3"
        ],
        [
            "Hypotheses (irrG : mx_irreducible rG) (cGA : centgmx rG A).",
            "VernacAssumption",
            "3107169d24519287ffd76700ff25719db0a84696"
        ],
        [
            "Notation FA := (gen_of irrG cGA).",
            "VernacSyntacticDefinition",
            "22a1bf707994b918890ad828e1efd0594c06c042"
        ],
        [
            "Definition gen_countMixin := (sub_countMixin (gen_subType irrG cGA)).",
            "VernacDefinition",
            "d8b7634f032b035e329c45beb9a926de67389891"
        ],
        [
            "Canonical gen_countType := Eval hnf in CountType FA gen_countMixin.",
            "VernacDefinition",
            "82cb649d9c5573cf08231f7bbcb7e16e550515d4"
        ],
        [
            "Canonical gen_subCountType := Eval hnf in [subCountType of FA].",
            "VernacDefinition",
            "b4cecb126737a6f40e1d8984e1e70e6b1908c6e6"
        ],
        [
            "Definition gen_finMixin := [finMixin of FA by <:].",
            "VernacDefinition",
            "1be82d1bfc9c154e49d90fe26512d710fed8bf3e"
        ],
        [
            "Canonical gen_finType := Eval hnf in FinType FA gen_finMixin.",
            "VernacDefinition",
            "81275f8156958d5f1eb105a76bd17ddd0751ea61"
        ],
        [
            "Canonical gen_subFinType := Eval hnf in [subFinType of FA].",
            "VernacDefinition",
            "a885a38d148c7651c459ec5a9ecec61956addf3d"
        ],
        [
            "Canonical gen_finZmodType := Eval hnf in [finZmodType of FA].",
            "VernacDefinition",
            "0f3888fe72c3c71ff1ff5379290d39b35eeb15c4"
        ],
        [
            "Canonical gen_baseFinGroupType := Eval hnf in [baseFinGroupType of FA for +%R].",
            "VernacDefinition",
            "ccc8815b67591bd2063acb0d0eefd77441f8ffdb"
        ],
        [
            "Canonical gen_finGroupType := Eval hnf in [finGroupType of FA for +%R].",
            "VernacDefinition",
            "11268c662ba6a712ea58461565b5ed4d666ecf1e"
        ],
        [
            "Canonical gen_finRingType := Eval hnf in [finRingType of FA].",
            "VernacDefinition",
            "09d1e9d5a891fe397129eaea13688807189f98e4"
        ],
        [
            "Canonical gen_finComRingType := Eval hnf in [finComRingType of FA].",
            "VernacDefinition",
            "9a8974b94b12c5f2149a9787452855a12e6b02c5"
        ],
        [
            "Canonical gen_finUnitRingType := Eval hnf in [finUnitRingType of FA].",
            "VernacDefinition",
            "de63e7340f457c78f9beb0872c8a7bd26cc80659"
        ],
        [
            "Canonical gen_finComUnitRingType := Eval hnf in [finComUnitRingType of FA].",
            "VernacDefinition",
            "3df60c2e288e2982935ae3f4a86bafa826cfe738"
        ],
        [
            "Canonical gen_finIdomainType := Eval hnf in [finIdomainType of FA].",
            "VernacDefinition",
            "9dab99cf50ba8bf4e55a2e48561b12fe5791019f"
        ],
        [
            "Canonical gen_finFieldType := Eval hnf in [finFieldType of FA].",
            "VernacDefinition",
            "f3c15dbafb23bdfc850e0d29c6ff858a0861a680"
        ],
        [
            "Lemma card_gen : #|{:FA}| = (#|F| ^ degree_mxminpoly A)%N.",
            "VernacStartTheoremProof",
            "c2b173d30a20eca073a1d511ab04515b95a6ce90"
        ],
        [
            "by rewrite card_sub card_matrix mul1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FiniteGenField.",
            "VernacEndSegment",
            "6846adff877b8dae2ecc0cfdb533108034803f01"
        ],
        [
            "End MatrixGenField.",
            "VernacEndSegment",
            "a31bb15caba61bf7cf3c37a2944a8a13e79a7235"
        ],
        [
            "Bind Scope ring_scope with gen_of.",
            "VernacBindScope",
            "0a664fa14c02d8b2012a999110e406d2468a9d57"
        ],
        [
            "Arguments rVval {F gT G%G n'%N rG A%R irrG cGA} x%R : rename.",
            "VernacArguments",
            "e895a48c5408c8346b214db0a0a8e03fb98ccfb0"
        ],
        [
            "Prenex Implicits gen_of Gen rVval pval mxval gen groot.",
            "VernacExtend",
            "9a21db76534e86540bde703a0996682859360336"
        ],
        [
            "Arguments subbase {F n'} A {nA}.",
            "VernacArguments",
            "c88f8c303a7bf1ab7716fd460d78ca70a1d6117c"
        ],
        [
            "Prenex Implicits gen_dim gen_base base val_gen gen_mx rowval_gen.",
            "VernacExtend",
            "17d01dd73e87459e356dc7e097aa142579a89b69"
        ],
        [
            "Arguments in_gen {F gT G n' rG A} irrG cGA {m} W.",
            "VernacArguments",
            "9774ad981f219d3a820fc2fc38e3385cdb74ddc4"
        ],
        [
            "Arguments in_genK {F gT G n' rG A} irrG cGA {m} W : rename.",
            "VernacArguments",
            "187e8bb01c03071e1e7f6e55ca5faa84d23fb49f"
        ],
        [
            "Arguments val_genK {F gT G n' rG A irrG cGA m} W : rename.",
            "VernacArguments",
            "29cbe2c6a0b230351b41bfa1bafb473886967e75"
        ],
        [
            "Prenex Implicits gen_env gen_term gen_form gen_sat.",
            "VernacExtend",
            "386f6e9eb0bdf2d1f14747dac30d5f1acc7f17db"
        ],
        [
            "Canonical gen_subType.",
            "VernacCanonical",
            "2233e31e82c74cce9f577bf08a358acf73932782"
        ],
        [
            "Canonical gen_eqType.",
            "VernacCanonical",
            "649c1ad2e56691ca99367240d379dcc1876463d0"
        ],
        [
            "Canonical gen_choiceType.",
            "VernacCanonical",
            "c71aa1f871797deaffbb3bcd537fa8e0dc1e44d0"
        ],
        [
            "Canonical gen_countType.",
            "VernacCanonical",
            "20e60c041b0a2f85e627b22d013624f1652dca57"
        ],
        [
            "Canonical gen_subCountType.",
            "VernacCanonical",
            "13059501134b2441e8c45e5c17341f9f30dacbe5"
        ],
        [
            "Canonical gen_finType.",
            "VernacCanonical",
            "d0ff6f835bb9d5f46c287fcfee4d1eac8c609815"
        ],
        [
            "Canonical gen_subFinType.",
            "VernacCanonical",
            "a664b3f49c6a7b94dacab85bba30b3ee2f7b50d2"
        ],
        [
            "Canonical gen_zmodType.",
            "VernacCanonical",
            "78e59a49661f1ab94ea5ec395ad51795d7a37630"
        ],
        [
            "Canonical gen_finZmodType.",
            "VernacCanonical",
            "a84abe6bc654d46958cb32c182918d6c6cd756e8"
        ],
        [
            "Canonical gen_baseFinGroupType.",
            "VernacCanonical",
            "ced14b55d0968e51449bb685eb9b16de4f14196c"
        ],
        [
            "Canonical gen_finGroupType.",
            "VernacCanonical",
            "5bdbf17861d0e29392358a48654d913c082b2aac"
        ],
        [
            "Canonical gen_ringType.",
            "VernacCanonical",
            "e673386af0868ff56cd31feea711a7497e8b4443"
        ],
        [
            "Canonical gen_finRingType.",
            "VernacCanonical",
            "cd3681ab57c45c02877a52be76d08f40b4556b9a"
        ],
        [
            "Canonical gen_comRingType.",
            "VernacCanonical",
            "edfce25e48c5bbfba837f3cd3421bac3c7daf438"
        ],
        [
            "Canonical gen_finComRingType.",
            "VernacCanonical",
            "1e01a352fe9c27c7533a140e91f12b2746acde93"
        ],
        [
            "Canonical gen_unitRingType.",
            "VernacCanonical",
            "e8c5c8027a29a1c2483f3e5298c2bc2453cee175"
        ],
        [
            "Canonical gen_finUnitRingType.",
            "VernacCanonical",
            "d980f7dd9ad0a1d44c96358bf0fc1ab901457567"
        ],
        [
            "Canonical gen_comUnitRingType.",
            "VernacCanonical",
            "fe1d69495d9a1f76c922f26cd505a025bbd286fa"
        ],
        [
            "Canonical gen_finComUnitRingType.",
            "VernacCanonical",
            "66cac10e8cb1e860b759bd56a70da01223333e81"
        ],
        [
            "Canonical gen_idomainType.",
            "VernacCanonical",
            "a261ea4244c5608190193d04a5299151ab3c375b"
        ],
        [
            "Canonical gen_finIdomainType.",
            "VernacCanonical",
            "499fef5e5f347ffa24b913e89cd4f88b71efa37a"
        ],
        [
            "Canonical gen_fieldType.",
            "VernacCanonical",
            "a42e725e6fcb76fb66fd095ca8f58d573e28b36a"
        ],
        [
            "Canonical gen_finFieldType.",
            "VernacCanonical",
            "f37b02ea768c776996a1bab7ab6cd76e62cbbbbe"
        ],
        [
            "Canonical gen_decFieldType.",
            "VernacCanonical",
            "8a43d699f1cf76b39fae3c786ed23f36d30b518e"
        ],
        [
            "Section BuildSplittingField.",
            "VernacBeginSection",
            "fe7a41b3c4fd13941ccce922044d6bdfccf45d32"
        ],
        [
            "Implicit Type gT : finGroupType.",
            "VernacReserve",
            "fbb7aa19a7971c5b10d380fd1f026e4fa401e829"
        ],
        [
            "Implicit Type F : fieldType.",
            "VernacReserve",
            "c38e2f79cedfeb6f2de97d57f3ae9c36a91f5af0"
        ],
        [
            "Lemma group_splitting_field_exists gT (G : {group gT}) F : classically {Fs : fieldType & {rmorphism F -> Fs} & group_splitting_field Fs G}.",
            "VernacStartTheoremProof",
            "6f9b31cbe327346b27a388b264d4716ee770bb97"
        ],
        [
            "move: F => F0 [] // nosplit; pose nG := #|G|; pose aG F := regular_repr F G.",
            "VernacExtend",
            "81927515fc3ecfba885b46cf7f9013852021d404"
        ],
        [
            "pose m := nG.+1; pose F := F0; pose U : seq 'M[F]_nG := [::].",
            "VernacExtend",
            "a37246b98b083397f6e69dfe0e1d317fcad6a9d6"
        ],
        [
            "suffices: size U + m <= nG by rewrite ltnn.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "have: mx_subseries (aG F) U /\\ path ltmx 0 U by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose f : {rmorphism F0 -> F} := [rmorphism of idfun].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "elim: m F U f => [|m IHm] F U f [modU ltU].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite addn0 (leq_trans (max_size_mx_series ltU)) ?rank_leq_row.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite addnS ltnNge -implybF; apply/implyP=> le_nG_Um; apply nosplit.",
            "VernacExtend",
            "f2cd6ed57e8d5c1378bc863aa0f194b5dd6ecaca"
        ],
        [
            "exists F => //; case=> [|n] rG irrG; first by case/mx_irrP: irrG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/idPn=> nabsG; pose cG := ('C(enveloping_algebra_mx rG))%MS.",
            "VernacExtend",
            "41a5d270ebe915260e741ffb363e6d99709a9cff"
        ],
        [
            "have{nabsG} [A]: exists2 A, (A \\in cG)%MS & ~~ is_scalar_mx A.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/has_non_scalar_mxP; rewrite ?scalar_mx_cent // ltnNge.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply: contra nabsG; apply: cent_mx_scalar_abs_irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {cG}memmx_cent_envelop -mxminpoly_linear_is_scalar -ltnNge => cGA.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move/(non_linear_gen_reducible irrG cGA).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "set F' := gen_fieldType _ _; set rG' := @map_repr _ F' _ _ _ _ rG.",
            "VernacExtend",
            "7405ffc63057f1493a790d3f39e251cc5fefe81f"
        ],
        [
            "move: F' (gen_rmorphism _ _ : {rmorphism F -> F'}) => F' f' in rG' * => irrG'.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "pose U' := [seq map_mx f' Ui | Ui <- U].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have modU': mx_subseries (aG F') U'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: etrans modU; rewrite /mx_subseries all_map; apply: eq_all => Ui.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "rewrite -(mxmodule_map f'); apply: eq_subset_r => x.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !inE map_regular_repr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: notF; apply: (mx_Schreier modU ltU) => [[V [compV lastV sUV]]].",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "have{lastV} [] := rsim_regular_series irrG compV lastV.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have{sUV} defV: V = U.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eq_sym -(geq_leqif (size_subseq_leqif sUV)).",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(leq_add2r m); apply: leq_trans le_nG_Um.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply: IHm f _; rewrite (mx_series_lt compV); case: compV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {V}defV in compV * => i rsimVi.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: (mx_Schreier modU') => [|[V' [compV' _ sUV']]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite {modU' compV modU i le_nG_Um rsimVi}/U' -(map_mx0 f').",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: etrans ltU; elim: U 0 => //= Ui U IHU Ui'; rewrite IHU map_ltmx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{sUV'} defV': V' = U'; last rewrite {V'}defV' in compV'.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/eqP; rewrite eq_sym -(geq_leqif (size_subseq_leqif sUV')) size_map.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -(leq_add2r m); apply: leq_trans le_nG_Um.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "apply: IHm [rmorphism of f' \\o f] _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite (mx_series_lt compV'); case: compV'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices{irrG'}: mx_irreducible rG' by case/mxsimpleP=> _ _ [].",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "have ltiU': i < size U' by rewrite size_map.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: mx_rsim_irr (mx_rsim_sym _ ) (mx_series_repr_irr compV' ltiU').",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: mx_rsim_trans (mx_rsim_map f' rsimVi) _; apply: map_regular_subseries.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma group_closure_field_exists gT F : classically {Fs : fieldType & {rmorphism F -> Fs} & group_closure_field Fs gT}.",
            "VernacStartTheoremProof",
            "ab35587efa3d546e0f9111d1c5f1d65e7b251116"
        ],
        [
            "set n := #|{group gT}|.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "suffices: classically {Fs : fieldType & {rmorphism F -> Fs} & forall G : {group gT}, enum_rank G < n -> group_splitting_field Fs G}.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: classic_bind => [[Fs f splitFs]] _ -> //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by exists Fs => // G; apply: splitFs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: (n) => [|i IHi]; first by move=> _ -> //; exists F => //; exists id.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: classic_bind IHi => [[F' f splitF']].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have [le_n_i _ -> // | lt_i_n] := leqP n i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists F' => // G _; apply: splitF'; apply: leq_trans le_n_i.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have:= @group_splitting_field_exists _ (enum_val (Ordinal lt_i_n)) F'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: classic_bind => [[Fs f' splitFs]] _ -> //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exists Fs => [|G]; first exact: [rmorphism of (f' \\o f)].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite ltnS leq_eqVlt -{1}[i]/(val (Ordinal lt_i_n)) val_eqE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/predU1P=> [defG | ltGi]; first by rewrite -[G]enum_rankK defG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: (extend_group_splitting_field f'); apply: splitF'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma group_closure_closed_field (F : closedFieldType) gT : group_closure_field F gT.",
            "VernacStartTheoremProof",
            "3eeea3fd8513d462fd0461afd484000c229dbc65"
        ],
        [
            "move=> G [|n] rG irrG; first by case/mx_irrP: irrG.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: cent_mx_scalar_abs_irr => //; rewrite leqNgt.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/(has_non_scalar_mxP (scalar_mx_cent _ _)) => [[A cGA nscalA]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have [a]: exists a, eigenvalue A a.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose P := mxminpoly A; pose d := degree_mxminpoly A.",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have Pd1: P`_d = 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(eqP (mxminpoly_monic A)) /lead_coef size_mxminpoly.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have d_gt0: d > 0 := mxminpoly_nonconstant A.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [a def_ad] := solve_monicpoly (nth 0 (- P)) d_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists a; rewrite eigenvalue_root_min -/P /root -oppr_eq0 -hornerN.",
            "VernacExtend",
            "26768a9862fadf618b4c4ff746d0d41878c2fb56"
        ],
        [
            "rewrite horner_coef size_opp size_mxminpoly -/d big_ord_recr -def_ad.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite coefN Pd1 mulN1r /= subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/negP; rewrite kermx_eq0 row_free_unit (mx_Schur irrG) ?subr_eq0 //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite -memmx_cent_envelop -raddfN linearD addmx_sub ?scalar_mx_cent.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: contraNneq nscalA => ->; apply: scalar_mx_is_scalar.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BuildSplittingField.",
            "VernacEndSegment",
            "c0593e0413923229f87d7edc065d1cc61d405966"
        ]
    ],
    "proofs": [
        {
            "name": "repr_mx1",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "by case: rG => r [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_mxM",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "by case: rG => r [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_mxK",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "by move=> Gx U; rewrite -mulmxA -repr_mxM ?groupV // mulgV repr_mx1 mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_mxKV",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "by rewrite -groupV -{3}[x]invgK; apply: repr_mxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_mx_unit",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "by move=> Gx; case/mulmx1_unit: (repr_mxKV Gx 1%:M).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_mxV",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "by move=> x Gx /=; rewrite -[rG x^-1](mulKmx (repr_mx_unit Gx)) mulmxA repr_mxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_sub",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by apply/subsetP=> x; case/setIdP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_group_set",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; rewrite inE group1 repr_mx1 mulmx1; split=> //= x y.",
                        "VernacExtend",
                        "877072eca2b60ab32889d658e076eb026578eeca"
                    ]
                },
                {
                    "command": [
                        "case/setIdP=> Gx cUx; case/setIdP=> Gy cUy; rewrite inE repr_mxM ?groupM //.",
                        "VernacExtend",
                        "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmxA (eqP cUx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcent_sub",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "by apply/subsetP=> x; case/setIdP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcent_group_set",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; rewrite inE group1 repr_mx1 mulmx1 mul1mx; split=> //= x y.",
                        "VernacExtend",
                        "877072eca2b60ab32889d658e076eb026578eeca"
                    ]
                },
                {
                    "command": [
                        "case/setIdP=> Gx; move/eqP=> cfx; case/setIdP=> Gy; move/eqP=> cfy.",
                        "VernacExtend",
                        "9b2398f8b60a7f1650affe06b0ffc5ff27b11442"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE repr_mxM ?groupM //= -mulmxA -cfy !mulmxA cfx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centgmxP",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "apply: (iffP subsetP) => cGf x Gx; by have:= cGf x Gx; rewrite !inE Gx /=; move/eqP.",
                        "VernacExtend",
                        "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rkerP",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP setIdP) => [] [->]; move/eqP; rewrite mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_norm",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> x Gx; rewrite inE sub_conjg; apply/subsetP=> y.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "case/rkerP=> Gy ry1; rewrite mem_conjgV !inE groupJ //=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite !repr_mxM ?groupM ?groupV // ry1 !mulmxA mulmx1 repr_mxKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_normal",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "by rewrite /normal rstab_sub rker_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_faithful_inj",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "move=> ffulG x y Gx Gy eq_rGxy; apply/eqP; rewrite eq_mulgV1 -in_set1.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite (subsetP ffulG) // inE groupM ?repr_mxM ?groupV //= eq_rGxy.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmxA repr_mxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_linear",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "move=> n1; rewrite gen_subG; apply/subsetP=> xy; case/imset2P=> x y Gx Gy ->.",
                        "VernacExtend",
                        "f7a319083ade140d03e661013f81bba1acc1bdaf"
                    ]
                },
                {
                    "command": [
                        "rewrite !inE groupR //= /commg mulgA -invMg repr_mxM ?groupV ?groupM //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmxA (can2_eq (repr_mxK _) (repr_mxKV _)) ?groupM //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite !repr_mxV ?repr_mxM ?groupM //; move: (rG x) (rG y).",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "by rewrite n1 => rx ry; rewrite (mx11_scalar rx) scalar_mxC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcenter_group_set",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; split=> [|x y].",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE group1 repr_mx1 scalar_mx_is_scalar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> /setIdP[Gx /is_scalar_mxP[a defx]] /setIdP[Gy /is_scalar_mxP[b defy]].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE groupM ?repr_mxM // defx defy -scalar_mxM ?scalar_mx_is_scalar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcenter_normal",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "rewrite /normal /rcenter {1}setIdE subsetIl; apply/subsetP=> x Gx; rewrite inE.",
                        "VernacExtend",
                        "fe8f197e86415fc7f0a74eda9d312128b9473eda"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> _ /imsetP[y /setIdP[Gy /is_scalar_mxP[c rGy]] ->].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite inE !repr_mxM ?groupM ?groupV //= mulmxA rGy scalar_mxC repr_mxKV //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: scalar_mx_is_scalar.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_mxMr",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "exact: repr_mxM.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_mxVr",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "exact: repr_mxV.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_mx_unitr",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "exact: repr_mx_unit.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_mxX",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "elim: m => [|m IHm] x Gx; rewrite /= ?repr_mx1 // expgS exprS -IHm //.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "by rewrite repr_mxM ?groupX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subg_mx_repr",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "by split=> [|x y Hx Hy]; rewrite (repr_mx1, repr_mxM) ?(subsetP sHG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcent_subg",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE andbA -in_setI (setIidPl sHG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_subg",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE andbA -in_setI (setIidPl sHG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_subg",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "exact: rstab_subg.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subg_mx_faithful",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "by apply: subset_trans; rewrite rker_subg subsetIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqg_repr_proof",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "by rewrite (eqP eqGH).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcent_eqg",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "by rewrite rcent_subg -(eqP eqGH) (setIidPr _) ?rcent_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_eqg",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "by rewrite rstab_subg -(eqP eqGH) (setIidPr _) ?rstab_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_eqg",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "exact: rstab_eqg.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqg_mx_faithful",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "by rewrite /mx_faithful rker_eqg.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphpre_mx_repr",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "split=> [|x y]; first by rewrite /= morph1 repr_mx1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/morphpreP=> Dx Gfx; case/morphpreP=> Dy Gfy.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= morphM ?repr_mxM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_morphpre",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE andbA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_morphpre",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "exact: rstab_morphpre.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphim_mxE",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sG_f'fG",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "by rewrite -sub_morphim_pre.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphim_mx_repr",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "exact: subg_mx_repr (morphpre_repr f rGf) sG_f'fG.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_morphim",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "by rewrite -rstab_morphpre -(rstab_subg _ sG_f'fG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_morphim",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "exact: rstab_morphim.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rconj_mx_repr",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "split=> [|x y Gx Gy]; rewrite /rconj_mx ?repr_mx1 ?mulmx1 ?mulmxV ?repr_mxM //.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulmxA mulmxKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rconj_mxE",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rconj_mxJ",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "by rewrite !mulmxA mulmxKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcent_conj",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE /= rconj_mxE !mulmxA.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite (can2_eq (mulmxKV uB) (mulmxK uB)) -!mulmxA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(can2_eq (mulKVmx uB) (mulKmx uB)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_conj",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE /= rconj_mxE !mulmxA.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (can2_eq (mulmxKV uB) (mulmxK uB)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_conj",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE /= mulmxA (can2_eq (mulmxKV uB) (mulmxK uB)).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul1mx -scalar_mxC (inj_eq (can_inj (mulKmx uB))) mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_mx_faithful",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "by rewrite /mx_faithful rker_conj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quo_mx_coset",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "move=> Gx; rewrite /quo_mx val_coset ?nHGs //; case: repr_rcosetP => z Hz.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "by case/rkerP: (subsetP krH z Hz) => Gz rz1; rewrite repr_mxM // rz1 mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quo_mx_repr",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "split=> [|Hx Hy]; first by rewrite /quo_mx repr_coset1 repr_mx1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/morphimP=> x Nx Gx ->{Hx}; case/morphimP=> y Ny Gy ->{Hy}.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by rewrite -morphM // !quo_mx_coset ?groupM ?repr_mxM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quo_repr_coset",
            "line_nb": 280,
            "steps": [
                {
                    "command": [
                        "exact: quo_mx_coset.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcent_quo",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "apply/setP=> Hx; rewrite !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/andP/idP=> [[]|]; case/morphimP=> x Nx Gx ->{Hx}.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "by rewrite quo_repr_coset // => cAx; rewrite mem_morphim // inE Gx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/setIdP: Gx => Gx cAx; rewrite quo_repr_coset ?mem_morphim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_quo",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "apply/setP=> Hx; rewrite !inE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/andP/idP=> [[]|]; case/morphimP=> x Nx Gx ->{Hx}.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "by rewrite quo_repr_coset // => nUx; rewrite mem_morphim // inE Gx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/setIdP: Gx => Gx nUx; rewrite quo_repr_coset ?mem_morphim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_quo",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "exact: rstab_quo.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "kquo_mxE",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "kquo_repr_coset",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "exact: quo_repr_coset.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "kquo_mx_faithful",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "by rewrite /mx_faithful rker_quo trivg_quotient.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_valK",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "exact: enum_valK_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_indexK",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "exact: enum_rankK_in.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "regular_mx_repr",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "split=> [|x y Gx Gy]; apply/row_matrixP=> i; rewrite !rowK.",
                        "VernacExtend",
                        "01f04d3f5bba3b876eb4ec7b1c8f26d2e2cced77"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulg1 row1 gring_valK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite row_mul rowK -rowE rowK mulgA gring_indexK // groupM ?enum_valP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_row_mul",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "exact: row_mul.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_projE",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "move=> x y Gx Gy; rewrite /gring_proj /= /gring_row rowK gring_indexK //=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite mul1g trmx_delta rowE mul_delta_mx_cond [delta_mx 0 0]mx11_scalar !mxE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= -(inj_eq (can_inj gring_valK)) !gring_indexK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "regular_mx_faithful",
            "line_nb": 343,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> x /setIdP[Gx].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite mul1mx inE => /eqP/(congr1 (gring_proj 1%g)).",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -(repr_mx1 aG) !gring_projE ?group1 // eqxx eq_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (x == _) => // /eqP; rewrite eq_sym oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_mxJ",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "move=> Gx; rewrite /gring_mx /= ![a *m _]mulmx_sum_row.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite !(mulmx_suml, linear_sum); apply: eq_bigr => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite linearZ -!scalemxAl linearZ /=; congr (_ *: _) => {a}.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "rewrite !rowK /= !mxvecK -rowE rowK mxvecK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite gring_indexK ?groupM ?repr_mxM ?enum_valP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_mxK",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "move=> a; rewrite /gring_mx /= mulmx_sum_row !linear_sum.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}[a]row_sum_delta; apply: eq_bigr => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite !linearZ /= /gring_row !(rowK, mxvecK).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite gring_indexK // mul1g gring_valK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_opE",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_opG",
            "line_nb": 374,
            "steps": [
                {
                    "command": [
                        "move=> Gx; rewrite gring_opE /gring_row rowK gring_indexK // mul1g.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite /gring_mx /= -rowE rowK mxvecK gring_indexK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_op1",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "by rewrite -(repr_mx1 aG) gring_opG ?repr_mx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_opJ",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "rewrite /gring_mx /= ![b *m _]mulmx_sum_row !linear_sum.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => i _; rewrite !linearZ /= !rowK !mxvecK.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite gring_opE gring_row_mul gring_mxJ ?enum_valP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_op_mx",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "by rewrite -[_ b]mul1mx gring_opJ gring_op1 mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_mxA",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "by rewrite -(gring_op_mx a) -gring_opJ gring_opE gring_row_mul gring_mxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_regular_mx",
            "line_nb": 410,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE rmorph_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_gring_row",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "by rewrite map_row.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_gring_proj",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "by rewrite map_row -map_trmx map_gring_row.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_repr",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "split=> [|x y Gx Gy]; first by rewrite /map_repr_mx repr_mx1 map_mx1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -map_mxM -repr_mxM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_reprE",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_reprJ",
            "line_nb": 431,
            "steps": [
                {
                    "command": [
                        "exact: map_mxM.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_enveloping_algebra_mx",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "by apply/row_matrixP=> i; rewrite -map_row !rowK map_mxvec.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_gring_mx",
            "line_nb": 437,
            "steps": [
                {
                    "command": [
                        "by rewrite map_vec_mx map_mxM map_enveloping_algebra_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_gring_op",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "by rewrite map_gring_mx map_gring_row.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_regular_repr",
            "line_nb": 444,
            "steps": [
                {
                    "command": [
                        "exact: map_regular_mx.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_group_ring",
            "line_nb": 447,
            "steps": [
                {
                    "command": [
                        "rewrite map_enveloping_algebra_mx; apply/row_matrixP=> i.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !rowK map_regular_repr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_mx_free",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "by move=> Gx; rewrite row_free_unit repr_mx_unit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_sub",
            "line_nb": 465,
            "steps": [
                {
                    "command": [
                        "by apply/subsetP=> x /setIdP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_group_set",
            "line_nb": 468,
            "steps": [
                {
                    "command": [
                        "apply/group_setP; rewrite inE group1 repr_mx1 mulmx1.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "split=> //= x y /setIdP[Gx nUx] /setIdP[Gy]; rewrite inE repr_mxM ?groupM //.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by apply: submx_trans; rewrite mulmxA submxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_act",
            "line_nb": 474,
            "steps": [
                {
                    "command": [
                        "by case/setIdP=> _ /eqP cUx /submxP[w ->]; rewrite -mulmxA cUx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_act",
            "line_nb": 477,
            "steps": [
                {
                    "command": [
                        "by case/setIdP=> [_ nUx] sWU; apply: submx_trans nUx; apply: submxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmoduleP",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP subsetP) => modU x Gx; have:= modU x Gx; rewrite !inE ?Gx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabS",
            "line_nb": 486,
            "steps": [
                {
                    "command": [
                        "case/submxP=> u ->; apply/subsetP=> x.",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE => /andP[-> /= /eqP cVx]; rewrite -mulmxA cVx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmx_rstab",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "by move=> eqUV; apply/eqP; rewrite eqEsubset !rstabS ?eqUV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmx_rstabs",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "by move=> eqUV; apply/setP=> x; rewrite !inE eqUV (eqmxMr _ eqUV).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmx_module",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "by move=> eqUV; rewrite /mxmodule (eqmx_rstabs eqUV).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule0",
            "line_nb": 499,
            "steps": [
                {
                    "command": [
                        "by apply/mxmoduleP=> x _; rewrite mul0mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule1",
            "line_nb": 502,
            "steps": [
                {
                    "command": [
                        "by apply/mxmoduleP=> x _; rewrite submx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_trans",
            "line_nb": 505,
            "steps": [
                {
                    "command": [
                        "by move=> modU Gx sWU; apply: submx_trans (mxmoduleP modU x Gx); apply: submxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_eigenvector",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "move=> modU linU; set u := nz_row U; exists u.",
                        "VernacExtend",
                        "54013ae155114f5b33a73fdc3a220fb4176f4e77"
                    ]
                },
                {
                    "command": [
                        "have defU: (U :=: u)%MS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/eqmxP; rewrite andbC -(geq_leqif (mxrank_leqif_eq _)) ?nz_row_sub //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite linU lt0n mxrank_eq0 nz_row_eq0 -mxrank_eq0 linU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose a x := (u *m rG x *m pinvmx u) 0 0; exists a => // x Gx.",
                        "VernacExtend",
                        "801cf49622ecacdc7aba5baf9428af93fd6cae3f"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mul_scalar_mx -mx11_scalar mulmxKpV // -defU mxmodule_trans ?defU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addsmx_module",
            "line_nb": 516,
            "steps": [
                {
                    "command": [
                        "move=> modU modV; apply/mxmoduleP=> x Gx.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite addsmxMr addsmxS ?(mxmoduleP _ x Gx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumsmx_module",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "by move=> modU; elim/big_ind: _; [apply: mxmodule0 | apply: addsmx_module | ].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capmx_module",
            "line_nb": 523,
            "steps": [
                {
                    "command": [
                        "move=> modU modV; apply/mxmoduleP=> x Gx.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite sub_capmx !mxmodule_trans ?capmxSl ?capmxSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bigcapmx_module",
            "line_nb": 527,
            "steps": [
                {
                    "command": [
                        "by move=> modU; elim/big_ind: _; [apply: mxmodule1 | apply: capmx_module | ].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_submodE",
            "line_nb": 536,
            "steps": [
                {
                    "command": [
                        "by rewrite mulmxA mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_submodE",
            "line_nb": 539,
            "steps": [
                {
                    "command": [
                        "by rewrite mulmxA mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_submod1",
            "line_nb": 542,
            "steps": [
                {
                    "command": [
                        "by rewrite /val_submod /= mul1mx; apply: eq_row_base.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_submodP",
            "line_nb": 545,
            "steps": [
                {
                    "command": [
                        "by rewrite mulmx_sub ?eq_row_base.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_submodK",
            "line_nb": 548,
            "steps": [
                {
                    "command": [
                        "move=> W; rewrite /in_submod /= -!mulmxA mulKVmx ?row_ebase_unit //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite pid_mx_id ?rank_leq_row // pid_mx_1 mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_submod_inj",
            "line_nb": 552,
            "steps": [
                {
                    "command": [
                        "exact: can_inj (@val_submodK m).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_submodS",
            "line_nb": 555,
            "steps": [
                {
                    "command": [
                        "apply/idP/idP=> sVW; last exact: submxMr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[V]val_submodK -[W]val_submodK submxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_submodK",
            "line_nb": 559,
            "steps": [
                {
                    "command": [
                        "case/submxP=> w ->; rewrite /val_submod /= -!mulmxA.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "congr (_ *m _); rewrite -{1}[U]mulmx_ebase !mulmxA mulmxK ?row_ebase_unit //.",
                        "VernacExtend",
                        "90723b7805fdae0b93bd8b98ae215a5658363919"
                    ]
                },
                {
                    "command": [
                        "by rewrite -2!(mulmxA (col_ebase U)) !pid_mx_id ?rank_leq_row // mulmx_ebase.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_submod_eq0",
            "line_nb": 564,
            "steps": [
                {
                    "command": [
                        "by rewrite -!submx0 -val_submodS linear0 !(submx0, eqmx0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_submod_eq0",
            "line_nb": 567,
            "steps": [
                {
                    "command": [
                        "apply/eqP/submxP=> [W_U0 | [w ->{W}]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "exists (W *m invmx (row_ebase U)).",
                        "VernacExtend",
                        "ff9449013026e12571dc7f322e9860b07771ec68"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmxA mulmxBr mulmx1 -(pid_mx_id _ _ _ (leqnn _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmxA -(mulmxA W) [W *m (_ *m _)]W_U0 mul0mx subr0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmxKV ?row_ebase_unit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /in_submod /= -!mulmxA mulKVmx ?row_ebase_unit //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul_copid_mx_pid ?rank_leq_row ?mulmx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxrank_in_submod",
            "line_nb": 576,
            "steps": [
                {
                    "command": [
                        "by move=> sWU; apply/eqP; rewrite eqn_leq -{3}(in_submodK sWU) !mxrankM_maxl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_factmodE",
            "line_nb": 583,
            "steps": [
                {
                    "command": [
                        "by rewrite mulmxA mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_factmodE",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "by rewrite mulmxA mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_factmodP",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "by rewrite mulmx_sub {m W}// (eqmxMr _ (eq_row_base _)) -mulmxA submxMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_factmodK",
            "line_nb": 592,
            "steps": [
                {
                    "command": [
                        "move=> W /=; rewrite /in_factmod /=; set Uc := cokermx U.",
                        "VernacExtend",
                        "08b421e4a82ee4b06ce888937579fc5af7d251b4"
                    ]
                },
                {
                    "command": [
                        "apply: (row_free_inj (row_base_free Uc)); rewrite -mulmxA mulmx_base.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite /val_factmod /= 2!mulmxA -/Uc mulmxK ?row_ebase_unit //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have /submxP[u ->]: (row_base Uc <= Uc)%MS by rewrite eq_row_base.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!mulmxA copid_mx_id ?rank_leq_row.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_factmod_inj",
            "line_nb": 599,
            "steps": [
                {
                    "command": [
                        "exact: can_inj (@val_factmodK m).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_factmodS",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "apply/idP/idP=> sVW; last exact: submxMr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[V]val_factmodK -[W]val_factmodK submxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_factmod_eq0",
            "line_nb": 606,
            "steps": [
                {
                    "command": [
                        "by rewrite -!submx0 -val_factmodS linear0 !(submx0, eqmx0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_factmod_eq0",
            "line_nb": 609,
            "steps": [
                {
                    "command": [
                        "rewrite submxE -!mxrank_eq0 -{2}[_ U]mulmx_base mulmxA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (mxrankMfree _ (row_base_free _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_factmodK",
            "line_nb": 613,
            "steps": [
                {
                    "command": [
                        "case/submxP=> w ->{W}; rewrite /val_factmod /= -2!mulmxA.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "congr (_ *m _); rewrite (mulmxA (col_base _)) mulmx_base -2!mulmxA.",
                        "VernacExtend",
                        "90723b7805fdae0b93bd8b98ae215a5658363919"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulKVmx ?row_ebase_unit // mulmxA copid_mx_id ?rank_leq_row.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_sub_fact_mod",
            "line_nb": 622,
            "steps": [
                {
                    "command": [
                        "rewrite /val_submod /val_factmod /= -!mulmxA -mulmxDr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite addrC (mulmxA (pid_mx _)) pid_mx_id // (mulmxA (col_ebase _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (mulmxA _ _ (row_ebase _)) mulmx_ebase.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (mulmxA (pid_mx _)) pid_mx_id // mulmxA -mulmxDl -mulmxDr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite subrK mulmx1 mulmxA mulmxKV ?row_ebase_unit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_factmodS",
            "line_nb": 629,
            "steps": [
                {
                    "command": [
                        "by rewrite -{2}[W]add_sub_fact_mod addsmx_addKl ?val_submodP ?addsmxSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_submodJ",
            "line_nb": 650,
            "steps": [
                {
                    "command": [
                        "move=> Gx; rewrite 2!(mulmxA W) -val_submodE in_submodK //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxmodule_trans ?val_submodP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "submod_mx_repr",
            "line_nb": 654,
            "steps": [
                {
                    "command": [
                        "rewrite /submod_mx; split=> [|x y Gx Gy /=].",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "by rewrite repr_mx1 mulmx1 val_submodK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -in_submodJ; first by rewrite repr_mxM ?mulmxA.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxmodule_trans ?val_submodP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_factmodJ",
            "line_nb": 668,
            "steps": [
                {
                    "command": [
                        "by move=> Gx; rewrite -{1}[W]val_factmodK -in_factmodJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factmod_mx_repr",
            "line_nb": 671,
            "steps": [
                {
                    "command": [
                        "split=> [|x y Gx Gy /=].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite /factmod_mx repr_mx1 mulmx1 val_factmodK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -in_factmodJ // -mulmxA -repr_mxM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_sub_fact_mod",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "rewrite -[submod_repr x]mulmxA mxtrace_mulC -val_submodE addrC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -[factmod_repr x]mulmxA mxtrace_mulC -val_factmodE addrC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mxtraceD add_sub_fact_mod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "envelop_mx_id",
            "line_nb": 683,
            "steps": [
                {
                    "command": [
                        "by move=> Gx; rewrite (eq_row_sub (enum_rank_in Gx x)) // rowK enum_rankK_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "envelop_mx1",
            "line_nb": 686,
            "steps": [
                {
                    "command": [
                        "by rewrite -(repr_mx1 rG) envelop_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "envelop_mxM",
            "line_nb": 699,
            "steps": [
                {
                    "command": [
                        "case/envelop_mxP=> a ->{A}; case/envelop_mxP=> b ->{B}.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmx_suml !linear_sum summx_sub //= => x Gx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite !linear_sum summx_sub //= => y Gy.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -scalemxAl !(linearZ, scalemx_sub) //= -repr_mxM //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite envelop_mx_id ?groupM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_envelop",
            "line_nb": 706,
            "steps": [
                {
                    "command": [
                        "move=> modU /envelop_mxP[a ->] sWU; rewrite linear_sum summx_sub // => x Gx.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite linearZ scalemx_sub ?mxmodule_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom_envelop_mxC",
            "line_nb": 722,
            "steps": [
                {
                    "command": [
                        "move/hom_mxP=> cWfG /envelop_mxP[a ->]; rewrite !linear_sum mulmx_suml.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => x Gx; rewrite !linearZ -scalemxAl /= cWfG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_hom_mx_module",
            "line_nb": 732,
            "steps": [
                {
                    "command": [
                        "apply/mxmoduleP=> x Gx; apply/hom_mxP=> y Gy.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "rewrite -[_ *m rG y]mulmxA -repr_mxM // 2?(hom_mxP _) ?groupM //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite repr_mxM ?mulmxA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom_mxmodule",
            "line_nb": 737,
            "steps": [
                {
                    "command": [
                        "move/hom_mxP=> cGfU modU; apply/mxmoduleP=> x Gx.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite -cGfU // submxMr // (mxmoduleP modU).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "kermx_hom_module",
            "line_nb": 741,
            "steps": [
                {
                    "command": [
                        "move=> homUf modU; apply/mxmoduleP=> x Gx.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_capmx mxmodule_trans ?capmxSl //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/sub_kermxP; rewrite (hom_mxP _) ?(submx_trans (capmxSl _ _)) //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (sub_kermxP (capmxSr _ _)) mul0mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_mx_hom",
            "line_nb": 747,
            "steps": [
                {
                    "command": [
                        "by apply/hom_mxP=> x Gx; rewrite -!mulmxA scalar_mxC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_mx_hom",
            "line_nb": 750,
            "steps": [
                {
                    "command": [
                        "move=> dxUV modU modV; apply/hom_mxP=> x Gx.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}(add_proj_mx dxUV (submx_refl _)) !mulmxDl addrC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}[_ *m _]proj_mx_0 ?add0r //; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxmodule_trans ?proj_mx_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite [_ *m _](proj_mx_id dxUV) // mxmodule_trans ?proj_mx_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_mx_id",
            "line_nb": 770,
            "steps": [
                {
                    "command": [
                        "exact/rfix_mxP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_mxS",
            "line_nb": 773,
            "steps": [
                {
                    "command": [
                        "by move=> sHK; apply/rfix_mxP=> x Hx; apply: rfix_mxP (subsetP sHK x Hx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_mx_conjsg",
            "line_nb": 776,
            "steps": [
                {
                    "command": [
                        "move=> Gx sHG; pose rf y := rfix_mx (H :^ y).",
                        "VernacExtend",
                        "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
                    ]
                },
                {
                    "command": [
                        "suffices{x Gx} IH: {in G &, forall y z, rf y *m rG z <= rf (y * z)%g}%MS.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "apply/eqmxP; rewrite -/(rf x) -[H]conjsg1 -/(rf 1%g).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite -{4}[x] mul1g -{1}[rf x](repr_mxKV rG Gx) -{1}(mulgV x).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite submxMr IH ?groupV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> x y Gx Gy; apply/rfix_mxP=> zxy; rewrite actM => /imsetP[zx Hzx ->].",
                        "VernacExtend",
                        "b7d55d5cc9e609b184db748f6780e12224901e48"
                    ]
                },
                {
                    "command": [
                        "have Gzx: zx \\in G by apply: subsetP Hzx; rewrite conj_subG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -mulmxA -repr_mxM ?groupM ?groupV // -conjgC repr_mxM // mulmxA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite rfix_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_sub_rstabs_rfix_mx",
            "line_nb": 787,
            "steps": [
                {
                    "command": [
                        "move=> sHG; apply/subsetP=> x /setIP[Gx nHx]; rewrite inE Gx.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "apply/rfix_mxP=> y Hy; have Gy := subsetP sHG y Hy.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "have Hyx: (y ^ x^-1)%g \\in H by rewrite memJ_norm ?groupV.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -mulmxA -repr_mxM // conjgCV repr_mxM ?(subsetP sHG _ Hyx) // mulmxA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (rfix_mx_id Hyx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normal_rfix_mx_module",
            "line_nb": 794,
            "steps": [
                {
                    "command": [
                        "case/andP=> sHG nHG.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /mxmodule -{1}(setIidPl nHG) norm_sub_rstabs_rfix_mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_mx_module",
            "line_nb": 798,
            "steps": [
                {
                    "command": [
                        "exact: normal_rfix_mx_module.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_mx_rstabC",
            "line_nb": 801,
            "steps": [
                {
                    "command": [
                        "move=> sHG; apply/subsetP/rfix_mxP=> cHU x Hx.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite (rstab_act (cHU x Hx)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE (subsetP sHG) //= cHU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclic_mxP",
            "line_nb": 807,
            "steps": [
                {
                    "command": [
                        "rewrite genmxE; apply: (iffP submxP) => [[a] | [A /submxP[a defA]]] -> {v}.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "exists (vec_mx (a *m E_G)); last by rewrite mulmxA mul_rV_lin1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite vec_mxK submxMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists a; rewrite mulmxA mul_rV_lin1 /= -defA mxvecK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclic_mx_id",
            "line_nb": 814,
            "steps": [
                {
                    "command": [
                        "by apply/cyclic_mxP; exists 1%:M; rewrite ?mulmx1 ?envelop_mx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclic_mx_module",
            "line_nb": 823,
            "steps": [
                {
                    "command": [
                        "apply/mxmoduleP=> x Gx; apply/row_subP=> i; rewrite row_mul.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "have [A E_A ->{i}] := @cyclic_mxP u _ (row_sub i _); rewrite -mulmxA.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by apply/cyclic_mxP; exists (A *m rG x); rewrite ?envelop_mxM ?envelop_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cyclic_mx_sub",
            "line_nb": 828,
            "steps": [
                {
                    "command": [
                        "move=> modU Wu; rewrite genmxE; apply/row_subP=> i.",
                        "VernacExtend",
                        "0fa388cebe8ed6372154caa26cd10c357f123670"
                    ]
                },
                {
                    "command": [
                        "by rewrite row_mul mul_rV_lin1 /= mxmodule_envelop // vec_mxK row_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom_cyclic_mx",
            "line_nb": 832,
            "steps": [
                {
                    "command": [
                        "move=> domf_u; apply/eqmxP; rewrite !(eqmxMr _ (genmxE _)).",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "apply/genmxP; rewrite genmx_id; congr <<_>>%MS; apply/row_matrixP=> i.",
                        "VernacExtend",
                        "6e4be71fd7f3c3d262645c48f28ad5bec07c716d"
                    ]
                },
                {
                    "command": [
                        "by rewrite !row_mul !mul_rV_lin1 /= hom_envelop_mxC // vec_mxK row_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "annihilator_mxP",
            "line_nb": 838,
            "steps": [
                {
                    "command": [
                        "rewrite sub_capmx; apply: (iffP andP) => [[-> /sub_kermxP]|[-> uA0]].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul_rV_lin1 /= mxvecK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by split=> //; apply/sub_kermxP; rewrite mul_rV_lin1 /= mxvecK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_hom_mxP",
            "line_nb": 844,
            "steps": [
                {
                    "command": [
                        "apply: (iffP sub_bigcapmxP) => [iso_uv | [f hom_uf <-] i _].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have{iso_uv} uv0 A: (A \\in E_G)%MS /\\ u *m A = 0 -> v *m A = 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move/annihilator_mxP=> /submxP[a defA].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -[A]mxvecK {A}defA [a *m _]mulmx_sum_row !linear_sum big1 // => i _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !linearZ /= (sub_kermxP _) ?scaler0 ?iso_uv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose U := E_G *m lin_mul_row u; pose V := E_G *m lin_mul_row v.",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "pose f := pinvmx U *m V.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have hom_uv_f x: x \\in G -> u *m rG x *m f = v *m rG x.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> Gx; apply/eqP; rewrite 2!mulmxA mul_rV_lin1 -subr_eq0 -mulmxBr.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite uv0 // 2!linearB /= vec_mxK; split.",
                        "VernacExtend",
                        "f4b7ef80d95d0131def61ae7f69c6275a20261d3"
                    ]
                },
                {
                    "command": [
                        "by rewrite addmx_sub ?submxMl // eqmx_opp envelop_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Uux: (u *m rG x <= U)%MS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(genmxE U) mxmodule_trans ?cyclic_mx_id ?cyclic_mx_module.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{2}(mulmxKpV Uux) [_ *m U]mulmxA mul_rV_lin1 subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have def_uf: u *m f = v.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[u]mulmx1 -[v]mulmx1 -(repr_mx1 rG) hom_uv_f.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists f => //; apply/hom_mxP=> x Gx; rewrite def_uf hom_uv_f.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/sub_kermxP; set A := vec_mx _.",
                        "VernacExtend",
                        "ac591433247162d5294d7c948ab3b309c2d6e368"
                    ]
                },
                {
                    "command": [
                        "have: (A \\in annihilator_mx u)%MS by rewrite vec_mxK row_sub.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case/annihilator_mxP => E_A uA0; rewrite -hom_envelop_mxC // uA0 mul0mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmx_iso",
            "line_nb": 867,
            "steps": [
                {
                    "command": [
                        "by move=> eqUV; exists 1%:M; rewrite ?unitmx1 ?scalar_mx_hom ?mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_iso_refl",
            "line_nb": 870,
            "steps": [
                {
                    "command": [
                        "exact: eqmx_iso.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_iso_sym",
            "line_nb": 873,
            "steps": [
                {
                    "command": [
                        "case=> f injf homUf defV; exists (invmx f); first by rewrite unitmx_inv.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite dom_hom_invmx // -defV submxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[U](mulmxK injf); apply: eqmxMr (eqmx_sym _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_iso_trans",
            "line_nb": 878,
            "steps": [
                {
                    "command": [
                        "case=> f injf homUf defV [g injg homVg defW].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (f *m g); first by rewrite unitmx_mul injf.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/hom_mxP=> x Gx; rewrite !mulmxA 2?(hom_mxP _) ?defV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmxA; apply: eqmx_trans (eqmxMr g defV) defW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxrank_iso",
            "line_nb": 884,
            "steps": [
                {
                    "command": [
                        "by case=> f injf _ <-; rewrite mxrankMfree ?row_free_unit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_iso_module",
            "line_nb": 887,
            "steps": [
                {
                    "command": [
                        "by case=> f _ homUf defV; rewrite -(eqmx_module defV); apply: hom_mxmodule.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsimpleP",
            "line_nb": 892,
            "steps": [
                {
                    "command": [
                        "do [split => [] [modU nzU simU]; split] => // [V modV sVU nzV | [V]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply/idPn; rewrite -(ltn_leqif (mxrank_leqif_sup sVU)) => ltVU.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by case: simU; exists V; apply/and4P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/and4P=> modV sVU nzV; apply/negP; rewrite -leqNgt mxrankS ?simU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsimple_module",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsimple_exists",
            "line_nb": 901,
            "steps": [
                {
                    "command": [
                        "move=> modU nzU [] // simU; move: {2}_.+1 (ltnSn (\\rank U)) => r leUr.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "elim: r => // r IHr in m U leUr modU nzU simU.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "have genU := genmxE U; apply simU; exists <<U>>%MS; last by rewrite genU.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/mxsimpleP; split; rewrite ?(eqmx_eq0 genU) ?(eqmx_module genU) //.",
                        "VernacExtend",
                        "1a60a3dd20ba8bdb4f34ca3532e9ebe70ebccc2e"
                    ]
                },
                {
                    "command": [
                        "case=> V; rewrite !genU=> /and4P[modV sVU nzV ltVU]; case: notF.",
                        "VernacExtend",
                        "5d344be8af881baf211a780ceab36b9a05646483"
                    ]
                },
                {
                    "command": [
                        "apply: IHr nzV _ => // [|[W simW sWV]]; first exact: leq_trans ltVU _.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: simU; exists W => //; apply: submx_trans sWV sVU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_iso_simple",
            "line_nb": 910,
            "steps": [
                {
                    "command": [
                        "move=> isoUV [modU nzU simU]; have [f injf homUf defV] := isoUV.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "split=> [||W modW sWV nzW]; first by rewrite (mx_iso_module isoUV).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqmx_eq0 defV) -(mul0mx n f) (can_eq (mulmxK injf)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -defV -[W](mulmxKV injf) submxMr //; set W' := W *m _.",
                        "VernacExtend",
                        "c1f58f36c5711f022b4a54717f37c2782f34a159"
                    ]
                },
                {
                    "command": [
                        "have sW'U: (W' <= U)%MS by rewrite -[U](mulmxK injf) submxMr ?defV.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (simU W') //; last by rewrite -(can_eq (mulmxK injf)) mul0mx mulmxKV.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite hom_mxmodule ?dom_hom_invmx // -[W](mulmxKV injf) submxMr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: submx_trans sW'U homUf.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsimple_cyclic",
            "line_nb": 920,
            "steps": [
                {
                    "command": [
                        "case=> [modU _ simU] nz_u Uu; apply/eqmxP; set uG := cyclic_mx u.",
                        "VernacExtend",
                        "26f45d48858eb049eed6f0c8454c3a419a1a8d5b"
                    ]
                },
                {
                    "command": [
                        "have s_uG_U: (uG <= U)%MS by rewrite cyclic_mx_sub.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite simU ?cyclic_mx_eq0 ?submx_refl // cyclic_mx_module.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_Schur_onto",
            "line_nb": 925,
            "steps": [
                {
                    "command": [
                        "move=> modU [modV _ simV] homUf sUfV nzUf.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply/eqmxP; rewrite sUfV -(genmxE (U *m f)).",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite simV ?(eqmx_eq0 (genmxE _)) ?genmxE //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqmx_module (genmxE _)) hom_mxmodule.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_Schur_inj",
            "line_nb": 931,
            "steps": [
                {
                    "command": [
                        "case=> [modU _ simU] homUf nzUf; apply/eqP; apply: contraR nzUf => nz_ker.",
                        "VernacExtend",
                        "d0ca9c3fd2da32fc51e6c7224f197d333e09c6a3"
                    ]
                },
                {
                    "command": [
                        "rewrite (sameP eqP sub_kermxP) (sameP capmx_idPl eqmxP) simU ?capmxSl //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: kermx_hom_module.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_Schur_inj_iso",
            "line_nb": 936,
            "steps": [
                {
                    "command": [
                        "move=> simU homUf nzUf; have [modU _ _] := simU.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have eqUfU: \\rank (U *m f) = \\rank U by apply/mxrank_injP; rewrite mx_Schur_inj.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have{eqUfU} [g invg defUf] := complete_unitmx eqUfU.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suffices homUg: (U <= dom_hom_mx g)%MS by exists g; rewrite ?defUf.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "apply/hom_mxP=> x Gx; have [ux defUx] := submxP (mxmoduleP modU x Gx).",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "by rewrite -defUf -(hom_mxP homUf) // defUx -!(mulmxA ux) defUf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nz_row_mxsimple",
            "line_nb": 950,
            "steps": [
                {
                    "command": [
                        "by case=> _ nzU _; rewrite nz_row_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsimple_iso_simple",
            "line_nb": 979,
            "steps": [
                {
                    "command": [
                        "by move=> isoUV simU; apply: mx_iso_simple (simU); apply/mxsimple_isoP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_mxsimple_direct_compl",
            "line_nb": 984,
            "steps": [
                {
                    "command": [
                        "move=> V simW modU sUV; pose V_ (J : {set I}) := (\\sum_(i in J) W i)%MS.",
                        "VernacExtend",
                        "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
                    ]
                },
                {
                    "command": [
                        "pose dxU (J : {set I}) := mxdirect (U + V_ J).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have [J maxJ]: {J | maxset dxU J}; last case/maxsetP: maxJ => dxUVJ maxJ.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: ex_maxset; exists set0.",
                        "VernacExtend",
                        "744907bb9eb9ab4aa4be78e2a15f7d03ac719c44"
                    ]
                },
                {
                    "command": [
                        "by rewrite /dxU mxdirectE /V_ /= !big_set0 addn0 addsmx0 /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have modWJ: mxmodule (V_ J) by apply: sumsmx_module => i _; case: (simW i).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists J; split=> //; apply/eqmxP; rewrite addsmx_sub sUV; apply/andP; split.",
                        "VernacExtend",
                        "f403e59cf3214d60eed3952760afcda506cb5098"
                    ]
                },
                {
                    "command": [
                        "by apply/sumsmx_subP=> i Ji; rewrite (sumsmx_sup i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -/(V_ J); apply/sumsmx_subP=> i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "case Ji: (i \\in J).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply: submx_trans (addsmxSr _ _); apply: (sumsmx_sup i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [modWi nzWi simWi] := simW i.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (sameP capmx_idPl eqmxP) simWi ?capmxSl ?capmx_module ?addsmx_module //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: contraFT (Ji); rewrite negbK => dxWiUVJ.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "rewrite -(maxJ (i |: J)) ?setU11 ?subsetUr // /dxU.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite mxdirectE /= !big_setU1 ?Ji //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite addnCA addsmxA (addsmxC U) -addsmxA -mxdirectE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxdirect_addsE /= mxdirect_trivial -/(dxU _) dxUVJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_mxsimple_direct_sub",
            "line_nb": 1004,
            "steps": [
                {
                    "command": [
                        "move=> simW defV.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [|J [defS dxS]] := sum_mxsimple_direct_compl simW (mxmodule0 n).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exact: sub0mx.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "exists J; split; last by rewrite mxdirectE /= adds0mx mxrank0 in dxS.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: eqmx_trans defV; rewrite adds0mx_id in defS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsemisimple0",
            "line_nb": 1011,
            "steps": [
                {
                    "command": [
                        "exists [finType of 'I_0] (fun _ => 0); [by case | by rewrite big_ord0 | ].",
                        "VernacExtend",
                        "8b5397c15b6b99eb3b685a534efc13151d43299e"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxdirectE /= !big_ord0 mxrank0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addsmx_semisimple",
            "line_nb": 1042,
            "steps": [
                {
                    "command": [
                        "case=> [I W /= simW defU _] [J T /= simT defV _].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have defUV: (\\sum_ij sum_rect (fun _ => 'M_n) W T ij :=: U + V)%MS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite big_sumType /=; apply: adds_eqmx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: intro_mxsemisimple defUV _; case=> /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumsmx_semisimple",
            "line_nb": 1048,
            "steps": [
                {
                    "command": [
                        "move=> ssimV; elim/big_ind: _ => //; first exact: mxsemisimple0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exact: addsmx_semisimple.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqmx_semisimple",
            "line_nb": 1052,
            "steps": [
                {
                    "command": [
                        "by move=> eqUV [I W S simW defU dxS]; exists I W => //; apply: eqmx_trans eqUV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom_mxsemisimple",
            "line_nb": 1055,
            "steps": [
                {
                    "command": [
                        "case=> I W /= simW defV _; rewrite -defV => /sumsmx_subP homWf.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "have{defV} defVf: (\\sum_i W i *m f :=: V *m f)%MS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: eqmx_trans (eqmx_sym _) (eqmxMr f defV); apply: sumsmxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: (intro_mxsemisimple defVf) => i _ nzWf.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply: mx_iso_simple (simW i); apply: mx_Schur_inj_iso; rewrite ?homWf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsemisimple_module",
            "line_nb": 1062,
            "steps": [
                {
                    "command": [
                        "case=> I W /= simW defU _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqmx_module defU) sumsmx_module // => i _; case: (simW i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_reducibleS",
            "line_nb": 1068,
            "steps": [
                {
                    "command": [
                        "move=> modU sUV redV U1 modU1 sU1U.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [W modW defV dxU1W] := redV U1 modU1 (submx_trans sU1U sUV).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (W :&: U)%MS; first exact: capmx_module.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqmxP; rewrite !matrix_modl // capmxSr sub_capmx defV sUV /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/mxdirect_addsP; rewrite capmxA (mxdirect_addsP dxU1W) cap0mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsemisimple_reducible",
            "line_nb": 1099,
            "steps": [
                {
                    "command": [
                        "case=> [I W /= simW defV _] U modU sUV; rewrite -defV in sUV.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "have [J [defV' dxV]] := sum_mxsimple_direct_compl simW modU sUV.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (\\sum_(i in J) W i)%MS.",
                        "VernacExtend",
                        "85c27f45aa8810e02b00f50bba16e27d8280de66"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: sumsmx_module => i _; case: (simW i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact: eqmx_trans defV' defV.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxdirect_addsE (sameP eqP mxdirect_addsP) /= in dxV; case/and3P: dxV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_reducible_semisimple",
            "line_nb": 1109,
            "steps": [
                {
                    "command": [
                        "move=> modV redV [] // nssimV; move: {-1}_.+1 (ltnSn (\\rank V)) => r leVr.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "elim: r => // r IHr in V leVr modV redV nssimV.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "have [V0 | nzV] := eqVneq V 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite nssimV ?V0 //; apply: mxsemisimple0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply (mxsimple_exists modV nzV) => [[U simU sUV]]; have [modU nzU _] := simU.",
                        "VernacExtend",
                        "d2991b7607b6316c9d43d28c85f87ca601299ca6"
                    ]
                },
                {
                    "command": [
                        "have [W modW defUW dxUW] := redV U modU sUV.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sWV: (W <= V)%MS by rewrite -defUW addsmxSr.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: IHr (mx_reducibleS modW sWV redV) _ => // [|ssimW].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS -defUW (mxdirectP dxUW) /= in leVr; apply: leq_trans leVr.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite -add1n leq_add2r lt0n mxrank_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: nssimV (eqmx_semisimple defUW (addsmx_semisimple _ ssimW)).",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "exact: mxsimple_semisimple.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsemisimpleS",
            "line_nb": 1123,
            "steps": [
                {
                    "command": [
                        "move=> modU sUV ssimV.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [W modW defUW dxUW]:= mxsemisimple_reducible ssimV modU sUV.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move/mxdirect_addsP: dxUW => dxUW.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have defU : (V *m proj_mx U W :=: U)%MS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/eqmxP; rewrite proj_mx_sub -{1}[U](proj_mx_id dxUW) ?submxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: eqmx_semisimple defU _; apply: hom_mxsemisimple ssimV _.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite -defUW proj_mx_hom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "component_mx_key",
            "line_nb": 1150,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "component_mx_module",
            "line_nb": 1164,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock sumsmx_module // => i; rewrite cyclic_mx_module.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "genmx_component",
            "line_nb": 1167,
            "steps": [
                {
                    "command": [
                        "by rewrite [in compU]unlock genmx_sums; apply: eq_bigr => i; rewrite genmx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "component_mx_semisimple",
            "line_nb": 1186,
            "steps": [
                {
                    "command": [
                        "have [I [W isoUW ->]] := component_mx_def.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: intro_mxsemisimple (eqmx_refl _) _ => i _ _.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "exact: mx_iso_simple (isoUW i) simU.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "component_mx_id",
            "line_nb": 1204,
            "steps": [
                {
                    "command": [
                        "exact: mx_iso_component (mx_iso_refl U).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom_component_mx_iso",
            "line_nb": 1207,
            "steps": [
                {
                    "command": [
                        "have [I [W isoUW ->]] := component_mx_def => simV homWf sVWf.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have [i _ _|i _ ] := hom_mxsemisimple_iso simV _ homWf sVWf.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exact: mx_iso_simple (simU).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "exact: mx_iso_trans.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "component_mx_iso",
            "line_nb": 1213,
            "steps": [
                {
                    "command": [
                        "move=> simV; rewrite -[compU]mulmx1.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "exact: hom_component_mx_iso (scalar_mx_hom _ _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "component_socle",
            "line_nb": 1265,
            "steps": [
                {
                    "command": [
                        "rewrite /socle_enum; case: sG0 => e0 /= sim_e mem_e simM.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "have /hasP[M' e0M' isoMM'] := mem_e M simM; apply/mapP; exists M' => //.",
                        "VernacExtend",
                        "50ac7f1676fde99958852c0f42096207d1f4db38"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP/component_mx_isoP; [|apply: sim_e | apply/mxsimple_isoP].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "socle_simple",
            "line_nb": 1276,
            "steps": [
                {
                    "command": [
                        "case: W => M /=; rewrite /= /socle_enum /=; case: sG0 => e sim_e _ /= e_M.",
                        "VernacExtend",
                        "1dd33488047dbf70f12e12a749f59bfa780f9e04"
                    ]
                },
                {
                    "command": [
                        "by apply: sim_e; rewrite mem_nth // -(size_map component_mx) index_mem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nz_socle",
            "line_nb": 1282,
            "steps": [
                {
                    "command": [
                        "have simW := socle_simple W; have [_ nzW _] := simW; apply: contra nzW.",
                        "VernacExtend",
                        "497eac57a4065e07594606d90bf63f1b4d13996e"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!submx0; apply: submx_trans (component_mx_id simW).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "socle_mem",
            "line_nb": 1286,
            "steps": [
                {
                    "command": [
                        "exact: component_socle (socle_simple _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PackSocleK",
            "line_nb": 1289,
            "steps": [
                {
                    "command": [
                        "rewrite /socle_val /= in e0W *; rewrite -(nth_map _ 0) ?nth_index //.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(size_map component_mx) index_mem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "socleP",
            "line_nb": 1298,
            "steps": [
                {
                    "command": [
                        "by rewrite (sameP genmxP eqP) !{1}genmx_component; apply: (W =P _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "socle_finType_subproof",
            "line_nb": 1301,
            "steps": [
                {
                    "command": [
                        "by move=> W /=; apply: val_inj; rewrite /= PackSocleK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subSocle_module",
            "line_nb": 1316,
            "steps": [
                {
                    "command": [
                        "by rewrite sumsmx_module // => W _; apply: component_mx_module.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "capmx_subSocle",
            "line_nb": 1339,
            "steps": [
                {
                    "command": [
                        "move=> modM; apply/eqmxP/andP; split; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/sumsmx_subP=> W P_W; rewrite capmxS // (sumsmx_sup W).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have modMS: mxmodule (M :&: S)%MS by rewrite capmx_module ?subSocle_module.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [J /= U simU defMS _] := mxsemisimpleS modMS (capmxSr M S) ssimS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -defMS; apply/sumsmx_subP=> j _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "have [sUjV sUjS]: (U j <= M /\\ U j <= S)%MS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply/andP; rewrite -sub_capmx -defMS (sumsmx_sup j).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [W P_W isoWU] := subSocle_iso (simU j) sUjS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (sumsmx_sup W) // sub_capmx sUjV mx_iso_component //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: socle_simple.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "simple_Socle",
            "line_nb": 1359,
            "steps": [
                {
                    "command": [
                        "move=> simM; have socM := component_socle sG simM.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite (sumsmx_sup (PackSocle socM)) // PackSocleK component_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semisimple_Socle",
            "line_nb": 1363,
            "steps": [
                {
                    "command": [
                        "by case=> I M /= simM <- _; apply/sumsmx_subP=> i _; apply: simple_Socle.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "genmx_Socle",
            "line_nb": 1370,
            "steps": [
                {
                    "command": [
                        "by rewrite genmx_sums; apply: eq_bigr => W; rewrite genmx_component.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Socle_module",
            "line_nb": 1377,
            "steps": [
                {
                    "command": [
                        "exact: subSocle_module.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Socle_semisimple",
            "line_nb": 1380,
            "steps": [
                {
                    "command": [
                        "exact: subSocle_semisimple.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Socle_direct",
            "line_nb": 1383,
            "steps": [
                {
                    "command": [
                        "exact: subSocle_direct.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Socle_iso",
            "line_nb": 1386,
            "steps": [
                {
                    "command": [
                        "by move=> simM; case/subSocle_iso: (simple_Socle simM) => // W _; exists W.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "row_full_dom_hom",
            "line_nb": 1392,
            "steps": [
                {
                    "command": [
                        "by rewrite -sub1mx; apply/hom_mxP/centgmxP=> cfG x /cfG; rewrite !mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memmx_cent_envelop",
            "line_nb": 1395,
            "steps": [
                {
                    "command": [
                        "apply/cent_rowP/centgmxP=> [cfG x Gx | cfG i].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by have:= cfG (enum_rank_in Gx x); rewrite rowK mxvecK enum_rankK_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rowK mxvecK /= cfG ?enum_valP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centgmx_hom",
            "line_nb": 1404,
            "steps": [
                {
                    "command": [
                        "by rewrite -row_full_dom_hom -sub1mx; apply: submx_trans (submx1 _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_irrP",
            "line_nb": 1409,
            "steps": [
                {
                    "command": [
                        "rewrite /mx_irreducible /mxsimple mxmodule1 -mxrank_eq0 mxrank1 -lt0n.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "do [split=> [[_ -> irrG] | [-> irrG]]; split=> // U] => [modU | modU _] nzU.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -sub1mx (irrG U) ?submx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite sub1mx irrG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_Schur",
            "line_nb": 1415,
            "steps": [
                {
                    "command": [
                        "move/mx_Schur_onto=> irrG f.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -row_full_dom_hom -!row_full_unit -!sub1mx => cGf nz.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[f]mul1mx irrG ?submx1 ?mxmodule1 ?mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_abs_irrP",
            "line_nb": 1421,
            "steps": [
                {
                    "command": [
                        "have G_1 := group1 G; have bijG := enum_val_bij_in G_1.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "set h := enum_val in bijG; have Gh : h _ \\in G by apply: enum_valP.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "rewrite /mx_absolutely_irreducible; case: (n > 0); last by right; case.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: (iffP row_fullP) => [[E' E'G] | [_ [a_ a_G]]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "split=> //; exists (fun x B => (mxvec B *m E') 0 (enum_rank_in G_1 x)) => B.",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "apply: (can_inj mxvecK); rewrite -{1}[mxvec B]mulmx1 -{}E'G mulmxA.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "move: {B E'}(_ *m E') => u; apply/rowP=> j.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "rewrite linear_sum (reindex h) //= mxE summxE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_big => [k| k _]; rewrite ?Gh // enum_valK_in mxE linearZ !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (\\matrix_(j, i) a_ (h i) (vec_mx (row j 1%:M))).",
                        "VernacExtend",
                        "00f5ac8fa9de75dde6079361c9a20b56dbd75ec7"
                    ]
                },
                {
                    "command": [
                        "apply/row_matrixP=> i; rewrite -[row i 1%:M]vec_mxK {}[vec_mx _]a_G.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/rowP=> j; rewrite linear_sum (reindex h) //= 2!mxE summxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_big => [k| k _]; [rewrite Gh | rewrite linearZ !mxE].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_abs_irr_cent_scalar",
            "line_nb": 1436,
            "steps": [
                {
                    "command": [
                        "case/mx_abs_irrP=> n_gt0 [a_ a_G] A /centgmxP cGA.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have{cGA a_G} cMA B: A *m B = B *m A.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite {}[B]a_G mulmx_suml mulmx_sumr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => x Gx; rewrite -scalemxAl -scalemxAr cGA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose i0 := Ordinal n_gt0; apply/is_scalar_mxP; exists (A i0 i0).",
                        "VernacExtend",
                        "75145bc1a9529eed2b7b3b8064c17b2728c12df1"
                    ]
                },
                {
                    "command": [
                        "apply/matrixP=> i j; move/matrixP/(_ i0 j): (esym (cMA (delta_mx i0 i))).",
                        "VernacExtend",
                        "86bb0d3d5ae27b38aac15f69d532d662f1518315"
                    ]
                },
                {
                    "command": [
                        "rewrite -[A *m _]trmxK trmx_mul trmx_delta -!(@mul_delta_mx _ n 1 n 0) -!mulmxA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!rowE !mxE !big_ord1 !mxE !eqxx !mulr_natl /= andbT eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_abs_irrW",
            "line_nb": 1446,
            "steps": [
                {
                    "command": [
                        "case/mx_abs_irrP=> n_gt0 [a_ a_G]; apply/mx_irrP; split=> // U Umod.",
                        "VernacExtend",
                        "58168c4367f5c8fd5aef7600205b564e8c5f4f4d"
                    ]
                },
                {
                    "command": [
                        "case/rowV0Pn=> u Uu; rewrite -mxrank_eq0 -lt0n row_leq_rank -sub1mx.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case/submxP: Uu => v ->{u} /row_freeP[u' vK]; apply/row_subP=> i.",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "rewrite rowE scalar_mxC -{}vK -2![_ *m _]mulmxA; move: {u' i}(u' *m _) => A.",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmx_sub {v}// [A]a_G linear_sum summx_sub //= => x Gx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite linearZ /= scalemx_sub // (mxmoduleP Umod).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linear_mx_abs_irr",
            "line_nb": 1454,
            "steps": [
                {
                    "command": [
                        "move=> n1; rewrite /mx_absolutely_irreducible /row_full eqn_leq rank_leq_col.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite {1 2 3}n1 /= lt0n mxrank_eq0; apply: contraTneq envelop_mx1 => ->.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqmx0 submx0 mxvec_eq0 -mxrank_eq0 mxrank1 n1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "envelop_mx_ring",
            "line_nb": 1496,
            "steps": [
                {
                    "command": [
                        "apply/andP; split; first by apply/mulsmx_subP; apply: envelop_mxM.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/mxring_idP; exists 1%:M; split=> *; rewrite ?mulmx1 ?mul1mx //.",
                        "VernacExtend",
                        "a18ef52b94902a4405e9607357a3f7e142145a08"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mxrank_eq0 mxrank1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exact: envelop_mx1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_subg",
            "line_nb": 1581,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_subg",
            "line_nb": 1586,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE andbA -in_setI (setIidPl sHG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_subg",
            "line_nb": 1589,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxmodule rstabs_subg subsetI subxx; apply: subset_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsimple_subg",
            "line_nb": 1593,
            "steps": [
                {
                    "command": [
                        "by move=> modM [_ nzM minM]; split=> // U /mxmodule_subg; apply: minM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subg_mx_irr",
            "line_nb": 1596,
            "steps": [
                {
                    "command": [
                        "by apply: mxsimple_subg; apply: mxmodule1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subg_mx_abs_irr",
            "line_nb": 1599,
            "steps": [
                {
                    "command": [
                        "rewrite /mx_absolutely_irreducible -!sub1mx => /andP[-> /submx_trans-> //].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply/row_subP=> i; rewrite rowK /= envelop_mx_id //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subsetP sHG) ?enum_valP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_eqg",
            "line_nb": 1608,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_eqg",
            "line_nb": 1613,
            "steps": [
                {
                    "command": [
                        "by rewrite rstabs_subg -(eqP eqGH) (setIidPr _) ?rstabs_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_eqg",
            "line_nb": 1616,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxmodule rstabs_eqg -(eqP eqGH).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsimple_eqg",
            "line_nb": 1620,
            "steps": [
                {
                    "command": [
                        "rewrite /mxsimple mxmodule_eqg.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "split=> [] [-> -> minM]; split=> // U modU; by apply: minM; rewrite mxmodule_eqg in modU *.",
                        "VernacExtend",
                        "77f020eeb3121cb7b7247d9f5829739fd3221e06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqg_mx_irr",
            "line_nb": 1624,
            "steps": [
                {
                    "command": [
                        "exact: mxsimple_eqg.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqg_mx_abs_irr",
            "line_nb": 1627,
            "steps": [
                {
                    "command": [
                        "by congr (_ && (_ == _)); rewrite /enveloping_algebra_mx /= -(eqP eqGH).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_morphpre",
            "line_nb": 1638,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE andbA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_morphpre",
            "line_nb": 1641,
            "steps": [
                {
                    "command": [
                        "by move=> sGf; rewrite /mxmodule rstabs_morphpre morphpreSK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_morphpre",
            "line_nb": 1645,
            "steps": [
                {
                    "command": [
                        "move=> sHD; apply/eqmxP/andP; split.",
                        "VernacExtend",
                        "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
                    ]
                },
                {
                    "command": [
                        "by apply/rfix_mxP=> _ /morphimP[x _ Hx ->]; rewrite rfix_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/rfix_mxP=> x Hx; rewrite rfix_mx_id ?mem_morphim ?(subsetP sHD).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphpre_mx_irr",
            "line_nb": 1650,
            "steps": [
                {
                    "command": [
                        "move/mxmodule_morphpre=> modG; split=> /mx_irrP[n_gt0 irrG]; by apply/mx_irrP; split=> // U modU; apply: irrG; rewrite modG in modU *.",
                        "VernacExtend",
                        "dd76215f84b5ec723bc22942b73281b86cf324ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphpre_mx_abs_irr",
            "line_nb": 1653,
            "steps": [
                {
                    "command": [
                        "move=> sGfD; congr (_ && (_ == _)); apply/eqP; rewrite mxrank_leqif_sup //.",
                        "VernacExtend",
                        "bdc4ae83db373e681e6bd4019758df06d36e5071"
                    ]
                },
                {
                    "command": [
                        "apply/row_subP=> i; rewrite rowK.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case/morphimP: (subsetP sGfD _ (enum_valP i)) => x Dx _ def_i.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite def_i (envelop_mx_id rGf) // !inE Dx -def_i enum_valP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/row_subP=> i; rewrite rowK (envelop_mx_id rG) //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case/morphpreP: (enum_valP i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_morphim",
            "line_nb": 1672,
            "steps": [
                {
                    "command": [
                        "by rewrite -rstabs_morphpre -(rstabs_subg _ sG_f'fG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_morphim",
            "line_nb": 1675,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxmodule rstabs_morphim subsetI subxx -sub_morphim_pre.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_morphim",
            "line_nb": 1679,
            "steps": [
                {
                    "command": [
                        "exact: rfix_morphpre.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsimple_morphim",
            "line_nb": 1682,
            "steps": [
                {
                    "command": [
                        "rewrite /mxsimple mxmodule_morphim.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "split=> [] [-> -> minM]; split=> // U modU; by apply: minM; rewrite mxmodule_morphim in modU *.",
                        "VernacExtend",
                        "77f020eeb3121cb7b7247d9f5829739fd3221e06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "morphim_mx_irr",
            "line_nb": 1686,
            "steps": [
                {
                    "command": [
                        "exact: mxsimple_morphim.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_submod",
            "line_nb": 1701,
            "steps": [
                {
                    "command": [
                        "move=> sHG; apply/eqmxP/andP; split; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/rfix_mxP=> x Hx; rewrite -in_submodJ ?capmxSl //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (rfix_mxP H _) ?capmxSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -val_submodS in_submodK ?capmxSl // sub_capmx val_submodP //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/rfix_mxP=> x Hx.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(val_submodJ Umod) ?(subsetP sHG) ?rfix_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_factmod",
            "line_nb": 1709,
            "steps": [
                {
                    "command": [
                        "move=> sHG; apply/rfix_mxP=> x Hx.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(in_factmodJ Umod) ?(subsetP sHG) ?rfix_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_submod",
            "line_nb": 1713,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE; apply: andb_id2l => Gx.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(inj_eq val_submod_inj) val_submodJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_submod",
            "line_nb": 1717,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE; apply: andb_id2l => Gx.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite -val_submodS val_submodJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_submod_module",
            "line_nb": 1721,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxmodule rstabs_submod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_submod_module",
            "line_nb": 1724,
            "steps": [
                {
                    "command": [
                        "by move=> sVU; rewrite -val_submod_module in_submodK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_factmod",
            "line_nb": 1727,
            "steps": [
                {
                    "command": [
                        "by apply/subsetP=> x /setIdP[Gx /eqP cUW]; rewrite inE Gx -in_factmodJ //= cUW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_factmod",
            "line_nb": 1730,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE; apply: andb_id2l => Gx.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "rewrite addsmxMr addsmx_sub (submx_trans (mxmoduleP Umod x Gx)) ?addsmxSl //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -val_factmodS val_factmodJ //= val_factmodS; apply/idP/idP=> nWx.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite (submx_trans (addsmxSr U _)) // -(in_factmodsK (addsmxSl U _)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite addsmxS // val_factmodS in_factmod_addsK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite in_factmodE (submx_trans (submxMr _ nWx)) // -in_factmodE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite in_factmod_addsK val_factmodK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_factmod_module",
            "line_nb": 1739,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxmodule rstabs_factmod.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_factmod_module",
            "line_nb": 1742,
            "steps": [
                {
                    "command": [
                        "rewrite -(eqmx_module _ (in_factmodsK (addsmxSl U V))).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite val_factmod_module (eqmx_module _ (in_factmod_addsK _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_submod",
            "line_nb": 1746,
            "steps": [
                {
                    "command": [
                        "by rewrite /rker rstab_submod; apply: eqmx_rstab (val_submod1 U).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_norm",
            "line_nb": 1749,
            "steps": [
                {
                    "command": [
                        "by rewrite -rker_submod rker_norm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_normal",
            "line_nb": 1752,
            "steps": [
                {
                    "command": [
                        "by rewrite -rker_submod rker_normal.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "submod_mx_faithful",
            "line_nb": 1755,
            "steps": [
                {
                    "command": [
                        "by apply: subset_trans; rewrite rker_submod rstabS ?submx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_factmod",
            "line_nb": 1758,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> x /rkerP[Gx cVx].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE Gx /= /factmod_mx cVx mul1mx mulmx1 val_factmodK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factmod_mx_faithful",
            "line_nb": 1762,
            "steps": [
                {
                    "command": [
                        "exact: subset_trans rker_factmod.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "submod_mx_irr",
            "line_nb": 1765,
            "steps": [
                {
                    "command": [
                        "split=> [] [_ nzU simU].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -mxrank_eq0 mxrank1 mxrank_eq0 in nzU; split=> // V modV sVU nzV.",
                        "VernacExtend",
                        "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(in_submodK sVU) -val_submod1 val_submodS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(genmxE (in_submod U V)) simU ?genmxE ?submx1 //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqmx_module _ (genmxE _)) in_submod_module.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -submx0 genmxE -val_submodS in_submodK //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite linear0 eqmx0 submx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/mx_irrP; rewrite lt0n mxrank_eq0; split=> // V modV.",
                        "VernacExtend",
                        "877072eca2b60ab32889d658e076eb026578eeca"
                    ]
                },
                {
                    "command": [
                        "rewrite -(inj_eq val_submod_inj) linear0 -(eqmx_eq0 (genmxE _)) => nzV.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub1mx -val_submodS val_submod1 -(genmxE (val_submod V)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite simU ?genmxE ?val_submodP //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqmx_module _ (genmxE _)) val_submod_module.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_conj",
            "line_nb": 1794,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE rconj_mxE !mulmxA.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{2}[U](mulmxK uB) submxMfree // row_free_unit unitmx_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_conj",
            "line_nb": 1798,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxmodule rstabs_conj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_mx_irr",
            "line_nb": 1801,
            "steps": [
                {
                    "command": [
                        "have Bfree: row_free B by rewrite row_free_unit.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "split => /mx_irrP[n_gt0 irrG]; apply/mx_irrP; split=> // U.",
                        "VernacExtend",
                        "075260d0817e08a7c1e422f0e14d9d7d1b649424"
                    ]
                },
                {
                    "command": [
                        "rewrite -[U](mulmxKV uB) -mxmodule_conj -mxrank_eq0 /row_full mxrankMfree //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxrank_eq0; apply: irrG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -mxrank_eq0 /row_full -(mxrankMfree _ Bfree) mxmodule_conj mxrank_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: irrG.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quo_mx_quotient",
            "line_nb": 1817,
            "steps": [
                {
                    "command": [
                        "apply/eqmxP/andP; split; apply/row_subP=> i.",
                        "VernacExtend",
                        "acf5855cc010871228abcccac05ae5fee2482818"
                    ]
                },
                {
                    "command": [
                        "rewrite rowK; case/morphimP: (enum_valP i) => x _ Gx ->{i}.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite quo_repr_coset // (eq_row_sub (enum_rank_in Gx x)) // rowK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite enum_rankK_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite rowK -(quo_mx_coset krH nHG) ?enum_valP //; set Hx := coset H _.",
                        "VernacExtend",
                        "c1f58f36c5711f022b4a54717f37c2782f34a159"
                    ]
                },
                {
                    "command": [
                        "have GHx: Hx \\in (G / H)%g by rewrite mem_quotient ?enum_valP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eq_row_sub (enum_rank_in GHx Hx)) // rowK enum_rankK_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rfix_quo",
            "line_nb": 1826,
            "steps": [
                {
                    "command": [
                        "move=> sKG; apply/eqmxP/andP; (split; apply/rfix_mxP) => [x Kx | Hx].",
                        "VernacExtend",
                        "b7d55d5cc9e609b184db748f6780e12224901e48"
                    ]
                },
                {
                    "command": [
                        "have Gx := subsetP sKG x Kx; rewrite -(quo_mx_coset krH nHG) // rfix_mx_id //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by rewrite mem_morphim ?(subsetP nHG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/morphimP=> x _ Kx ->; have Gx := subsetP sKG x Kx.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "by rewrite quo_repr_coset ?rfix_mx_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_quo",
            "line_nb": 1833,
            "steps": [
                {
                    "command": [
                        "apply/setP=> Hx; rewrite !inE; apply/andP/idP=> [[]|] /morphimP[x Nx Gx ->{Hx}].",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite quo_repr_coset // => nUx; rewrite mem_morphim // inE Gx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/setIdP: Gx => Gx nUx; rewrite quo_repr_coset ?mem_morphim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_quo",
            "line_nb": 1838,
            "steps": [
                {
                    "command": [
                        "rewrite /mxmodule rstabs_quo quotientSGK // ?(subset_trans krH) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/subsetP=> x; rewrite !inE mul1mx => /andP[-> /eqP->].",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quo_mx_irr",
            "line_nb": 1843,
            "steps": [
                {
                    "command": [
                        "split; case/mx_irrP=> n_gt0 irrG; apply/mx_irrP; split=> // U modU; by apply: irrG; rewrite mxmodule_quo in modU *.",
                        "VernacExtend",
                        "8a7970ff11aff3bd286c08a023819cb7a4c610bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quotient_splitting_field",
            "line_nb": 1851,
            "steps": [
                {
                    "command": [
                        "move=> nHG splitG n rGH irrGH.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(morphim_mx_abs_irr _ nHG) splitG //; apply/morphim_mx_irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coset_splitting_field",
            "line_nb": 1855,
            "steps": [
                {
                    "command": [
                        "move=> split_gT Gbar; have ->: Gbar = (coset H @*^-1 Gbar / H)%G.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by apply: val_inj; rewrite /= /quotient morphpreK ?sub_im_coset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: quotient_splitting_field; [apply: subsetIl | apply: split_gT].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_faithful_irr_abelian_cyclic",
            "line_nb": 1873,
            "steps": [
                {
                    "command": [
                        "move=> injG irrG cGG; rewrite -(setIidPl cGG).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "exact: mx_faithful_irr_center_cyclic injG irrG.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_irr_abelian_linear",
            "line_nb": 1878,
            "steps": [
                {
                    "command": [
                        "by move=> irrG cGG; apply/eqP; rewrite -(abelian_abs_irr rG) ?splitG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsimple_abelian_linear",
            "line_nb": 1881,
            "steps": [
                {
                    "command": [
                        "move=> cGG simM; have [modM _ _] := simM.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by move/(submod_mx_irr modM)/mx_irr_abelian_linear: simM => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxrank_rsim",
            "line_nb": 1907,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_refl",
            "line_nb": 1910,
            "steps": [
                {
                    "command": [
                        "exists 1%:M => // [|x _]; first by rewrite row_free_unit unitmx1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmx1 mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_sym",
            "line_nb": 1914,
            "steps": [
                {
                    "command": [
                        "case=> B def_n1; rewrite def_n1 in rG1 B *.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite row_free_unit => injB homB; exists (invmx B) => // [|x Gx].",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "by rewrite row_free_unit unitmx_inv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: canRL (mulKmx injB) _; rewrite mulmxA -homB ?mulmxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_trans",
            "line_nb": 1920,
            "steps": [
                {
                    "command": [
                        "case=> [B1 defn1 freeB1 homB1] [B2 defn2 freeB2 homB2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (B1 *m B2); rewrite /row_free ?mxrankMfree 1?defn1 // => x Gx.",
                        "VernacExtend",
                        "111ac1be9ba1873c2d8489b85d634e06e3a5d86b"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmxA homB1 // -!mulmxA homB2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_def",
            "line_nb": 1925,
            "steps": [
                {
                    "command": [
                        "case=> B def_n1; rewrite def_n1 in rG1 B *; rewrite row_free_unit => injB homB.",
                        "VernacExtend",
                        "c4a46ac89a9c7997fc10e59922c13d5e3d2b0b23"
                    ]
                },
                {
                    "command": [
                        "by exists B, (invmx B) => [|x Gx]; rewrite ?mulVmx // -homB // mulmxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_iso",
            "line_nb": 1929,
            "steps": [
                {
                    "command": [
                        "split=> [[B eqrUV injB homB] | [f injf homf defV]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have: \\rank (U *m val_submod (in_submod U 1%:M *m B)) = \\rank U.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "do 2!rewrite mulmxA mxrankMfree ?row_base_free //.",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqmxMr _ (val_submod1 U)) -in_submodE val_submodK mxrank1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/complete_unitmx => f injf defUf; exists f => //.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "apply/hom_mxP=> x Gx; rewrite -defUf -2!mulmxA -(val_submodJ modV) //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite -(mulmxA _ B) -homB // val_submodE 3!(mulmxA U) (mulmxA _ _ B).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -in_submodE -in_submodJ //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [u ->] := submxP (mxmoduleP modU x Gx).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite in_submodE -mulmxA -defUf !mulmxA mulmx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqmxP; rewrite -mxrank_leqif_eq.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxrankMfree ?eqrUV ?row_free_unit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -defUf mulmxA val_submodP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have eqrUV: \\rank U = \\rank V by rewrite -defV mxrankMfree ?row_free_unit.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (in_submod V (val_submod 1%:M *m f)) => // [|x Gx].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite /row_free {6}eqrUV -[_ == _]sub1mx -val_submodS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite in_submodK; last by rewrite -defV submxMr ?val_submodP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite val_submod1 -defV submxMr ?val_submod1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -in_submodJ; last by rewrite -defV submxMr ?val_submodP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -(hom_mxP (submx_trans (val_submodP _) homf)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(val_submodJ modU) // mul1mx 2!(mulmxA ((submod_repr _) x)) -val_submodE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_irr",
            "line_nb": 1952,
            "steps": [
                {
                    "command": [
                        "case/mx_rsim_sym=> f def_n2; rewrite {n2}def_n2 in f rG2 * => injf homf.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "case/mx_irrP=> n1_gt0 minG; apply/mx_irrP; split=> // U modU nzU.",
                        "VernacExtend",
                        "58168c4367f5c8fd5aef7600205b564e8c5f4f4d"
                    ]
                },
                {
                    "command": [
                        "rewrite /row_full -(mxrankMfree _ injf) -genmxE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: minG; last by rewrite -mxrank_eq0 genmxE mxrankMfree // mxrank_eq0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqmx_module _ (genmxE _)); apply/mxmoduleP=> x Gx.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulmxA -homf // mulmxA submxMr // (mxmoduleP modU).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_mx_rsim",
            "line_nb": 1972,
            "steps": [
                {
                    "command": [
                        "case=> f def_n2; rewrite -{n2}def_n2 in f rG2 *.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite row_free_unit => injf homf.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE !mul1mx; apply: andb_id2l => Gx.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(can_eq (mulmxK injf)) homf // -scalar_mxC (can_eq (mulKmx injf)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_faithful",
            "line_nb": 1978,
            "steps": [
                {
                    "command": [
                        "by move=> simG12; rewrite /mx_faithful (rker_mx_rsim simG12).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_rsim",
            "line_nb": 1997,
            "steps": [
                {
                    "command": [
                        "case/mx_rsim_def=> B [B' B'B def_rG1] x Gx.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite def_rG1 // mxtrace_mulC mulmxA B'B mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_scalar",
            "line_nb": 2001,
            "steps": [
                {
                    "command": [
                        "move=> Gx /mx_rsim_sym[B _ Bfree rG2_B] rG1x.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply: (row_free_inj Bfree); rewrite rG2_B // rG1x scalar_mxC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "socle_irr",
            "line_nb": 2009,
            "steps": [
                {
                    "command": [
                        "by apply/submod_mx_irr; apply: socle_simple.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "socle_rsimP",
            "line_nb": 2012,
            "steps": [
                {
                    "command": [
                        "have [simW1 simW2] := (socle_simple W1, socle_simple W2).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: (iffP (component_mx_isoP simW1 simW2)); move/mx_rsim_iso; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_in_submod",
            "line_nb": 2018,
            "steps": [
                {
                    "command": [
                        "move=> U' sUV; have modU': mxmodule (sr modV) U'.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqmx_module _ (genmxE _)) in_submod_module.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have rankU': \\rank U = \\rank U' by rewrite genmxE mxrank_in_submod.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose v1 := val_submod 1%:M; pose U1 := v1 _ U.",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have sU1V: (U1 <= V)%MS by rewrite val_submod1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have sU1U': (in_submod V U1 <= U')%MS by rewrite genmxE submxMr ?val_submod1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists modU', (in_submod U' (in_submod V U1)) => // [|x Gx].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply/row_freeP; exists (v1 _ _ *m v1 _ _ *m in_submod U 1%:M).",
                        "VernacExtend",
                        "6a987de11991bc3ce6995c1155b240152d7f3429"
                    ]
                },
                {
                    "command": [
                        "by rewrite 2!mulmxA -in_submodE -!val_submodE !in_submodK ?val_submodK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -!in_submodJ // -(val_submodJ modU) // mul1mx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite 2!{1}in_submodE mulmxA (mulmxA _ U1) -val_submodE -!in_submodE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsim_submod1",
            "line_nb": 2031,
            "steps": [
                {
                    "command": [
                        "move=> U1; exists (val_submod 1%:M) => [||x Gx]; first by rewrite U1 mxrank1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /row_free val_submod1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(val_submodJ modU) // mul1mx -val_submodE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_submod1",
            "line_nb": 2036,
            "steps": [
                {
                    "command": [
                        "by move=> defU; apply: mxtrace_rsim (rsim_submod1 modU defU).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_dsum_mod",
            "line_nb": 2055,
            "steps": [
                {
                    "command": [
                        "move=> /= sumS dxS x Gx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim: {P}_.+1 {-2}P (ltnSn #|P|) => // m IHm P lePm in W modW sumS dxS *.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "have [j /= Pj | P0] := pickP P; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: sumS (_ x); rewrite !big_pred0 // mxrank0 => <- _ rWx.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by rewrite [rWx]flatmx0 linear0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS (cardD1x Pj) in lePm.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite mxdirectE /= !(bigD1 j Pj) -mxdirectE mxdirect_addsE /= in dxS sumS *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [_ dxW' dxW] := and3P dxS; rewrite (sameP eqP mxdirect_addsP) in dxW.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHm _ _ _ (sumsmx_module _ (fun i _ => modU i)) (eqmx_refl _)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: mxtrace_dadd_mod.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_Socle",
            "line_nb": 2081,
            "steps": [
                {
                    "command": [
                        "move=> /= x Gx /=; pose modW (W : sG) := component_mx_module rG (socle_base W).",
                        "VernacExtend",
                        "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
                    ]
                },
                {
                    "command": [
                        "rewrite -(mxtrace_dsum_mod modW _ (eqmx_refl _) (Socle_direct sG)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => W _; rewrite (mxtrace_component (socle_simple W)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Clifford_simple",
            "line_nb": 2094,
            "steps": [
                {
                    "command": [
                        "have modmG m U y: y \\in G -> (mxmodule rH) m U -> mxmodule rH (U *m rG y).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> Gy modU; apply/mxmoduleP=> h Hh; have Gh := subsetP sHG h Hh.",
                        "VernacExtend",
                        "fcbc4db6275a8d44907e8ed4b44d2f7f279ee662"
                    ]
                },
                {
                    "command": [
                        "rewrite -mulmxA -repr_mxM // conjgCV repr_mxM ?groupJ ?groupV // mulmxA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite submxMr ?(mxmoduleP modU) // -mem_conjg (normsP nHG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nzmG m y (U : 'M_(m, n)): y \\in G -> (U *m rG y == 0) = (U == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move=> Gy; rewrite -{1}(mul0mx m (rG y)) (can_eq (repr_mxK rG Gy)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case=> [modM nzM simM] Gx; have Gx' := groupVr Gx.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "split=> [||U modU sUMx nzU]; rewrite ?modmG ?nzmG //.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "rewrite -(repr_mxKV rG Gx U) submxMr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (simM (U *m _)) ?modmG ?nzmG // -(repr_mxK rG Gx M) submxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Clifford_hom",
            "line_nb": 2106,
            "steps": [
                {
                    "command": [
                        "case/setIP=> Gx cHx; apply/rV_subP=> v _{U}.",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "apply/hom_mxP=> h Hh; have Gh := subsetP sHG h Hh.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!mulmxA /= -!repr_mxM // (centP cHx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Clifford_iso",
            "line_nb": 2111,
            "steps": [
                {
                    "command": [
                        "move=> cHx; have [Gx _] := setIP cHx.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by exists (rG x); rewrite ?repr_mx_unit ?Clifford_hom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Clifford_iso2",
            "line_nb": 2115,
            "steps": [
                {
                    "command": [
                        "case=> [f injf homUf defV] Gx; have Gx' := groupVr Gx.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "pose fx := rG (x^-1)%g *m f *m rG x; exists fx; last 1 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulmxA repr_mxK //; apply: eqmxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite !unitmx_mul andbC !repr_mx_unit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/hom_mxP=> h Hh; have Gh := subsetP sHG h Hh.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "rewrite -(mulmxA U) -repr_mxM // conjgCV repr_mxM ?groupJ // !mulmxA.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite !repr_mxK // (hom_mxP homUf) -?mem_conjg ?(normsP nHG) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !repr_mxM ?invgK ?groupM // !mulmxA repr_mxKV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Clifford_componentJ",
            "line_nb": 2127,
            "steps": [
                {
                    "command": [
                        "set simH := mxsimple rH; set cH := component_mx rH.",
                        "VernacExtend",
                        "7405ffc63057f1493a790d3f39e251cc5fefe81f"
                    ]
                },
                {
                    "command": [
                        "have actG: {in G, forall y M, simH M -> cH M *m rG y <= cH (M *m rG y)}%MS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> {M} y Gy /= M simM; have [I [U isoU def_cHM]] := component_mx_def simM.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite /cH def_cHM sumsmxMr; apply/sumsmx_subP=> i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by apply: mx_iso_component; [apply: Clifford_simple | apply: Clifford_iso2].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> simM Gx; apply/eqmxP; rewrite actG // -/cH.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}[cH _](repr_mxKV rG Gx) submxMr // -{2}[M](repr_mxK rG Gx).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite actG ?groupV //; apply: Clifford_simple.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_Clifford_act",
            "line_nb": 2173,
            "steps": [
                {
                    "command": [
                        "by move=> Gx; apply: eqmx_trans (valWact _ _) _; rewrite subgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Clifford_rank_components",
            "line_nb": 2202,
            "steps": [
                {
                    "command": [
                        "rewrite -{9}(mxrank1 F n) -Clifford_Socle1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (mxdirectP (Socle_direct sH)) /= -sum_nat_const.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => W1 _; have [W0 _ W0G] := imsetP Clifford_atrans.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "have{W0G} W0G W': W' \\in orbit 'Cl G W0 by rewrite -W0G inE.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [/orbitP[x Gx <-] /orbitP[y Gy <-]] := (W0G W, W0G W1).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !{1}val_Clifford_act // !mxrankMfree // !repr_mx_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Clifford_astab1",
            "line_nb": 2262,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE; apply: andb_id2l => Gx.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "rewrite sub1set inE (sameP eqP socleP) !val_Clifford_act //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_idr // => sWxW; rewrite -mxrank_leqif_sup //.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxrankMfree ?repr_mx_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "section_module",
            "line_nb": 2294,
            "steps": [
                {
                    "command": [
                        "by rewrite (eqmx_module _ (genmxE _)) in_factmod_module addsmx_module.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_factmod_sub",
            "line_nb": 2298,
            "steps": [
                {
                    "command": [
                        "exists (val_submod 1%:M) => [||x Gx].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply: (@addIn (\\rank U)); rewrite genmxE mxrank_in_factmod mxrank_coker.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (addsmx_idPr (submx1 U)) mxrank1 subnK ?rank_leq_row.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite /row_free val_submod1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[_ x]mul1mx -val_submodE val_submodJ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_submodP",
            "line_nb": 2308,
            "steps": [
                {
                    "command": [
                        "move=> sUV; split=> [[ltUV maxU] | ].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "apply/mx_irrP; split=> [|WU modWU nzWU].",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite genmxE lt0n mxrank_eq0 in_factmod_eq0; case/andP: ltUV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub1mx -val_submodS val_submod1 genmxE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "pose W := (U + val_factmod (val_submod WU))%MS.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "suffices sVW: (V <= W)%MS.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}in_factmodE (submx_trans (submxMr _ sVW)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite addsmxMr -!in_factmodE val_factmodK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ((in_factmod U U =P 0) _) ?adds0mx ?in_factmod_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/and3P: {maxU}(maxU W); apply: contraR; rewrite /ltmx addsmxSl => -> /=.",
                        "VernacExtend",
                        "b7d55d5cc9e609b184db748f6780e12224901e48"
                    ]
                },
                {
                    "command": [
                        "move: modWU; rewrite /mxmodule rstabs_submod rstabs_factmod => -> /=.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite addsmx_sub submx_refl -in_factmod_eq0 val_factmodK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move: nzWU; rewrite -[_ == 0](inj_eq val_submod_inj) linear0 => ->.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite -(in_factmodsK sUV) addsmxS // val_factmodS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(genmxE (in_factmod U V)) val_submodP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/mx_irrP; rewrite lt0n {1}genmxE mxrank_eq0 in_factmod_eq0 => ltUV maxV.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "split=> // [|W [modW /andP[sUW ltUW] /andP[sWV /negP[]]]]; first exact/andP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -(in_factmodsK sUV) -(in_factmodsK sUW) addsmxS // val_factmodS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -genmxE -val_submod1; set VU := <<_>>%MS.",
                        "VernacExtend",
                        "c1f58f36c5711f022b4a54717f37c2782f34a159"
                    ]
                },
                {
                    "command": [
                        "have sW_VU: (in_factmod U W <= VU)%MS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite genmxE -val_factmodS !submxMr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(in_submodK sW_VU) val_submodS -(genmxE (in_submod _ _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite sub1mx maxV //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqmx_module _ (genmxE _)) in_submod_module ?genmxE ?submxMr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite in_factmod_module addsmx_module.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -submx0 [(_ <= 0)%MS]genmxE -val_submodS linear0 in_submodK //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqmx0 submx0 in_factmod_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_submod_eqmx",
            "line_nb": 2337,
            "steps": [
                {
                    "command": [
                        "move=> eqU12 eqV12 [ltUV1 maxU1].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by split=> [|W]; rewrite -(lt_eqmx eqU12) -(lt_eqmx eqV12).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_subseries_module",
            "line_nb": 2344,
            "steps": [
                {
                    "command": [
                        "move=> modV; have [|leVi] := ltnP i (size V); first exact: all_nthP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite nth_default ?mxmodule0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_subseries_module'",
            "line_nb": 2348,
            "steps": [
                {
                    "command": [
                        "by move=> modV; rewrite mx_subseries_module //= mxmodule0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_series_lt",
            "line_nb": 2353,
            "steps": [
                {
                    "command": [
                        "by case=> _ compV; apply/(pathP 0)=> i /compV[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_size_mx_series",
            "line_nb": 2356,
            "steps": [
                {
                    "command": [
                        "rewrite -[size V]addn0 -(mxrank0 F n n); elim: V 0 => //= V1 V IHV V0.",
                        "VernacExtend",
                        "44a8e3b453c9376c468b4e3e0046f5ac33e11d6d"
                    ]
                },
                {
                    "command": [
                        "rewrite ltmxErank -andbA => /and3P[_ ltV01 ltV].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans (IHV _ ltV); rewrite addSnnS leq_add2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_series_rcons",
            "line_nb": 2365,
            "steps": [
                {
                    "command": [
                        "rewrite /mx_series /mx_subseries all_rcons size_rcons -rcons_cons.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "split=> [ [/andP[modU modV] maxU] | [[modU maxU] modV maxV]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "split=> //; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by have:= maxU _ (leqnn _); rewrite !nth_rcons leqnn ltnn eqxx -last_nth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by split=> // i ltiU; have:= maxU i (ltnW ltiU); rewrite !nth_rcons leqW ltiU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite modV; split=> // i; rewrite !nth_rcons ltnS leq_eqVlt.",
                        "VernacExtend",
                        "7da1e44fc70370c532a4f9a52f0578f62ffee13c"
                    ]
                },
                {
                    "command": [
                        "case: eqP => [-> _ | /= _ ltiU]; first by rewrite ltnn ?eqxx -last_nth.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltiU; apply: maxU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_Schreier",
            "line_nb": 2375,
            "steps": [
                {
                    "command": [
                        "move: U => U0; set U := {1 2}U0; have: subseq U0 U := subseq_refl U.",
                        "VernacExtend",
                        "bfc79e1fe6822c7cd2b0873372afea0ade19f587"
                    ]
                },
                {
                    "command": [
                        "pose n' := n.+1; have: n < size U + n' by rewrite leq_addl.",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "elim: n' U => [|n' IH_U] U ltUn' sU0U modU incU [] // noV.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite addn0 ltnNge in ltUn'; case/negP: ltUn'.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite (leq_trans (max_size_mx_series incU)) ?rank_leq_row.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: (noV); exists U; split => //; first split=> // i lt_iU; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/eqmxP; apply: contraT => neU1.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "apply: {IH_U}(IH_U (rcons U 1%:M)) noV.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_rcons addSnnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subseq_trans sU0U) ?subseq_rcons.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite /mx_subseries all_rcons mxmodule1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rcons_path ltmxEneq neU1 submx1 !andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "set U'i := _`_i; set Ui := _`_i; have defU := cat_take_drop i U.",
                        "VernacExtend",
                        "c0e995c4eae7d99786159000ade9075058bd55f5"
                    ]
                },
                {
                    "command": [
                        "have defU'i: U'i = last 0 (take i U).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (last_nth 0) /U'i -{1}defU -cat_cons nth_cat /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_take lt_iU leqnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: incU; rewrite -defU cat_path (drop_nth 0) //= -/Ui -defU'i.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "set U' := take i U; set U'' := drop _ U; case/and3P=> incU' ltUi incU''.",
                        "VernacExtend",
                        "5f30caf21380409fbdf4e31ae55197bac71556a8"
                    ]
                },
                {
                    "command": [
                        "split=> // W [modW ltUW ltWV]; case: notF.",
                        "VernacExtend",
                        "4a95f82aca0fc9a50f43053eca44fc9141212abe"
                    ]
                },
                {
                    "command": [
                        "apply: {IH_U}(IH_U (U' ++ W :: Ui :: U'')) noV; last 2 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite /mx_subseries -drop_nth // all_cat /= modW -all_cat defU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite cat_path /= -defU'i; apply/and4P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -drop_nth // size_cat /= addnS -size_cat defU addSnnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subseq_trans sU0U) // -defU cat_subseq // -drop_nth ?subseq_cons.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "section_eqmx",
            "line_nb": 2461,
            "steps": [
                {
                    "command": [
                        "by apply: section_eqmx_add => //; apply: adds_eqmx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_JordanHolder_exists",
            "line_nb": 2478,
            "steps": [
                {
                    "command": [
                        "elim/last_ind: U V => [|U Um IHU] V compU modV; first by case; rewrite ltmx0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite last_rcons => maxV; case/mx_series_rcons: compU => compU modUm maxUm.",
                        "VernacExtend",
                        "4a95f82aca0fc9a50f43053eca44fc9141212abe"
                    ]
                },
                {
                    "command": [
                        "case eqUV: (last 0 U == V)%MS.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case/lastP: U eqUV compU {maxUm IHU} => [|U' Um'].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite andbC; move/eqmx0P->; exists [::].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite last_rcons; move/eqmxP=> eqU'V; case/mx_series_rcons=> compU _ maxUm'.",
                        "VernacExtend",
                        "94b585b2dd67662a1bfccf9de340af322f43f6e9"
                    ]
                },
                {
                    "command": [
                        "exists (rcons U' V); last by rewrite last_rcons.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/mx_series_rcons; split => //; apply: max_submod_eqmx maxUm'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "set Um' := last 0 U in maxUm eqUV; have [modU _] := compU.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "have modUm': modG Um' by rewrite /Um' (last_nth 0) mx_subseries_module'.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [|||W compW lastW] := IHU (V :&: Um')%MS; rewrite ?capmx_module //.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by case: (mx_butterfly modUm' modV modUm); rewrite ?eqUV // {1}capmxC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (rcons W V); last by rewrite last_rcons.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/mx_series_rcons; split; rewrite // lastW.",
                        "VernacExtend",
                        "1a60a3dd20ba8bdb4f34ca3532e9ebe70ebccc2e"
                    ]
                },
                {
                    "command": [
                        "by case: (mx_butterfly modV modUm' modUm); rewrite // andbC eqUV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsim_rcons",
            "line_nb": 2495,
            "steps": [
                {
                    "command": [
                        "by move=> ltiU; apply: section_eqmx; rewrite -?rcons_cons nth_rcons ?leqW ?ltiU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_mod",
            "line_nb": 2498,
            "steps": [
                {
                    "command": [
                        "by case: compU => modU _; rewrite (last_nth 0) (mx_subseries_module' _ modU).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_free",
            "line_nb": 2585,
            "steps": [
                {
                    "command": [
                        "apply/row_freeP; exists (lin1_mx (row (gring_index G 1) \\o vec_mx)).",
                        "VernacExtend",
                        "35cb31569268b69dd569e5c043ab2fa1eafcf6b2"
                    ]
                },
                {
                    "command": [
                        "apply/row_matrixP=> i; rewrite row_mul rowK mul_rV_lin1 /= mxvecK rowK row1.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite gring_indexK // mul1g gring_valK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_op_id",
            "line_nb": 2590,
            "steps": [
                {
                    "command": [
                        "case/envelop_mxP=> a ->{A}; rewrite linear_sum.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => x Gx; rewrite linearZ /= gring_opG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_rowK",
            "line_nb": 2594,
            "steps": [
                {
                    "command": [
                        "exact: gring_op_id.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_gring_mx",
            "line_nb": 2597,
            "steps": [
                {
                    "command": [
                        "by rewrite vec_mxK submxMfree ?gring_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_sub_gring",
            "line_nb": 2600,
            "steps": [
                {
                    "command": [
                        "rewrite -(andb_idl (memmx_subP (submxMl _ _) A)); apply: andb_id2l => R_A.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mem_gring_mx gring_rowK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_mxP",
            "line_nb": 2606,
            "steps": [
                {
                    "command": [
                        "by rewrite vec_mxK submxMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gring_opM",
            "line_nb": 2609,
            "steps": [
                {
                    "command": [
                        "by move=> R_B; rewrite -gring_opJ gring_rowK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsim_regular_series",
            "line_nb": 2641,
            "steps": [
                {
                    "command": [
                        "move=> lastU; have [V [modV simGV]] := rsim_regular_factmod.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "have irrV := mx_rsim_irr simGV irrG.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [i simVU] := mx_JordanHolder_max compU lastU irrV.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists i; apply: mx_rsim_trans simGV simVU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsim_regular_submod",
            "line_nb": 2648,
            "steps": [
                {
                    "command": [
                        "have [V [modV eqG'V]] := rsim_regular_factmod.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [U modU defVU dxVU] := mx_Maschke F'G modV (submx1 V).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists U; exists modU; apply: mx_rsim_trans eqG'V _.",
                        "VernacExtend",
                        "1e323ab3bcc2457f8ae651e2fb03578af2318626"
                    ]
                },
                {
                    "command": [
                        "by apply: mx_rsim_factmod; rewrite ?mxdirectE /= addsmxC // addnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "groupCl",
            "line_nb": 2658,
            "steps": [
                {
                    "command": [
                        "by move=> x Gx; apply: subsetP; apply: class_subG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classg_base_free",
            "line_nb": 2661,
            "steps": [
                {
                    "command": [
                        "rewrite -kermx_eq0; apply/rowV0P=> v /sub_kermxP; rewrite mulmx_sum_row => v0.",
                        "VernacExtend",
                        "0288f65064e83af8559a49f90a2eba4421e03fd4"
                    ]
                },
                {
                    "command": [
                        "apply/rowP=> k; rewrite mxE.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have [x Gx def_k] := imsetP (enum_valP k).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "transitivity (@gring_proj F _ G x (vec_mx 0) 0 0); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !linear0 !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{}v0 !linear_sum (bigD1 k) //= !linearZ /= rowK mxvecK def_k.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite linear_sum (bigD1 x) ?class_refl //= gring_projE // eqxx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite !big1 ?addr0 ?mxE ?mulr1 // => [k' | y /andP[xGy ne_yx]]; first 1 last.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite gring_projE ?(groupCl Gx xGy) // eq_sym (negPf ne_yx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite rowK !linearZ /= mxvecK -(inj_eq enum_val_inj) def_k eq_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [z Gz ->] := imsetP (enum_valP k').",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move/eqP=> not_Gxz; rewrite linear_sum big1 ?scaler0 //= => y zGy.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite gring_projE ?(groupCl Gz zGy) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: eqP zGy => // <- /class_eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "regular_module_ideal",
            "line_nb": 2707,
            "steps": [
                {
                    "command": [
                        "apply/idP/idP=> modM.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply/mulsmx_subP=> A B; rewrite !mem_sub_gring => /andP[R_A M_A] R_B.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite envelop_mxM // gring_row_mul (mxmodule_envelop modM).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/mxmoduleP=> x Gx; apply/row_subP=> i; rewrite row_mul -mem_gring_mx.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "rewrite gring_mxJ // (mulsmx_subP modM) ?envelop_mx_id //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mem_gring_mx row_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_degreeE",
            "line_nb": 2721,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_degree_gt0",
            "line_nb": 2724,
            "steps": [
                {
                    "command": [
                        "by rewrite lt0n mxrank_eq0; case: (socle_simple i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_reprE",
            "line_nb": 2728,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "principal_comp_key",
            "line_nb": 2760,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rank_irr1",
            "line_nb": 2773,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqn_leq lt0n mxrank_eq0 nz_socle andbT.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite irr1_rfix rfix_regular rank_leq_row.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "degree_irr1",
            "line_nb": 2777,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqn_leq irr_degree_gt0 -rank_irr1.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxrankS ?component_mx_id //; apply: socle_simple.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sums_R",
            "line_nb": 2783,
            "steps": [
                {
                    "command": [
                        "apply/eqmxP; set R_S := (_ <= _)%MS.",
                        "VernacExtend",
                        "ac591433247162d5294d7c948ab3b309c2d6e368"
                    ]
                },
                {
                    "command": [
                        "have sRS: R_S by apply/sumsmx_subP=> i; rewrite genmxE submxMr ?(sumsmx_sup i).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite sRS -(mulmxKpV sRS) mulmxA submxMr //; apply/sumsmx_subP=> i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite -(submxMfree _ _ gring_free) -(mulmxA _ _ R_G) mulmxKpV //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (sumsmx_sup i) ?genmxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Wedderburn_direct",
            "line_nb": 2803,
            "steps": [
                {
                    "command": [
                        "apply/mxdirectP; rewrite /= sums_R mxrankMfree ?gring_free //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite (mxdirectP (Socle_direct sG)); apply: eq_bigr=> i _ /=.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite genmxE mxrankMfree ?gring_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Wedderburn_disjoint",
            "line_nb": 2808,
            "steps": [
                {
                    "command": [
                        "move=> ne_ij; apply/eqP; rewrite -submx0 capmxC.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(mxdirect_sumsP Wedderburn_direct j) // capmxS // (sumsmx_sup i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_mx_sum",
            "line_nb": 2825,
            "steps": [
                {
                    "command": [
                        "by apply: reducible_Socle1; apply: mx_Maschke.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Wedderburn_sum",
            "line_nb": 2828,
            "steps": [
                {
                    "command": [
                        "by apply: eqmx_trans sums_R _; rewrite /Socle irr_mx_sum mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Wedderburn_id_mem",
            "line_nb": 2841,
            "steps": [
                {
                    "command": [
                        "by rewrite vec_mxK proj_mx_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Wedderburn_is_id",
            "line_nb": 2844,
            "steps": [
                {
                    "command": [
                        "have ideRi A: (A \\in 'R_i)%MS -> 'e_i *m A = A.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> RiA; rewrite -{2}[A]mul1mx -Wedderburn_sum_id mulmx_suml.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite (bigD1 i) //= big1 ?addr0 // => j ne_ji.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite (Wedderburn_mulmx0 ne_ji) ?Wedderburn_id_mem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=> // [||A RiA]; first 2 [exact: Wedderburn_id_mem].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: contraNneq (nz_socle i) => e0.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply/rowV0P=> v; rewrite -mem_gring_mx -(genmxE (i *m _)) => /ideRi.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite e0 mul0mx => /(canLR gring_mxK); rewrite linear0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}[A]mulmx1 -Wedderburn_sum_id mulmx_sumr (bigD1 i) //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite big1 ?addr0 // => j; rewrite eq_sym => ne_ij.",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (Wedderburn_mulmx0 ne_ij) ?Wedderburn_id_mem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Wedderburn_is_ring",
            "line_nb": 2865,
            "steps": [
                {
                    "command": [
                        "rewrite /mxring /left_mx_ideal Wedderburn_closed submx_refl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/mxring_idP; exists 'e_i; apply: Wedderburn_is_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Wedderburn_min_ideal",
            "line_nb": 2869,
            "steps": [
                {
                    "command": [
                        "move=> nzE sE_Ri /andP[idlE idrE]; apply/eqmxP; rewrite sE_Ri.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "pose M := E *m pinvmx R_G; have defE: E = M *m R_G.",
                        "VernacExtend",
                        "c09d1274557abc8857ed64eb3450db2da906c185"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmxKpV // (submx_trans sE_Ri) // genmxE submxMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have modM: mxmodule aG M by rewrite regular_module_ideal -defE.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have simSi := socle_simple i; set Si := socle_base i in simSi.",
                        "VernacExtend",
                        "81881a093b2294c76be3b432fbe83612064d7bc9"
                    ]
                },
                {
                    "command": [
                        "have [I [W isoW defW]]:= component_mx_def simSi.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /'R_i /socle_val /= defW genmxE defE submxMr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/sumsmx_subP=> j _.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have simW := mx_iso_simple (isoW j) simSi; have [modW _ minW] := simW.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "have [{minW}dxWE | nzWE] := eqVneq (W j :&: M)%MS 0; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (sameP capmx_idPl eqmxP) minW ?capmxSl ?capmx_module.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [_ Rei ideRi _] := Wedderburn_is_id i.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have:= nzE; rewrite -submx0 => /memmx_subP[A E_A].",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "rewrite -(ideRi _ (memmx_subP sE_Ri _ E_A)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have:= E_A; rewrite defE mem_sub_gring => /andP[R_A M_A].",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "have:= Rei; rewrite genmxE mem_sub_gring => /andP[Re].",
                        "VernacExtend",
                        "8431fc4d2460f7908baa11892c1b26797a3f17b8"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}(gring_rowK Re) /socle_val defW => /sub_sumsmxP[e ->].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite !(linear_sum, mulmx_suml) summx_sub //= => k _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite -(gring_rowK R_A) -gring_mxA -mulmxA gring_rowK //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite ((W k *m _ =P 0) _) ?linear0 ?sub0mx //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [f _ homWf defWk] := mx_iso_trans (mx_iso_sym (isoW j)) (isoW k).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -submx0 -{k defWk}(eqmxMr _ defWk) -(hom_envelop_mxC homWf) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(mul0mx _ f) submxMr {f homWf}// -dxWE sub_capmx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (mxmodule_envelop modW) //=; apply/row_subP=> k.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite row_mul -mem_gring_mx -(gring_rowK R_A) gring_mxA gring_rowK //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -defE (memmx_subP idlE) // mem_mulsmx ?gring_mxP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_rsim_op0",
            "line_nb": 2900,
            "steps": [
                {
                    "command": [
                        "case/mx_rsim_def=> f [f' _ hom_f] ne_iG_j RjA.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "transitivity (f *m in_submod _ (val_submod 1%:M *m A) *m f').",
                        "VernacExtend",
                        "76b82cf26fc5507e3c87d0d8624701e58307d429"
                    ]
                },
                {
                    "command": [
                        "have{RjA}: (A \\in R_G)%MS by rewrite -Wedderburn_sum (sumsmx_sup j).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/envelop_mxP=> a ->{A}; rewrite !(linear_sum, mulmx_suml).",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => x Gx; rewrite !linearZ /= -scalemxAl -hom_f ?gring_opG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (_ : _ *m A = 0) ?(linear0, mul0mx) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/row_matrixP=> i; rewrite row_mul row0 -[row _ _]gring_mxK -gring_row_mul.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite (Wedderburn_mulmx0 ne_iG_j) ?linear0 // genmxE mem_gring_mx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (row_subP _) // val_submod1 component_mx_id //; apply: socle_simple.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_comp'_op0",
            "line_nb": 2939,
            "steps": [
                {
                    "command": [
                        "by rewrite eq_sym; apply: not_rsim_op0 rsim_irr_comp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_comp_rsim",
            "line_nb": 2982,
            "steps": [
                {
                    "command": [
                        "case=> f eq_n12; rewrite -eq_n12 in rG2 f * => inj_f hom_f.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "congr (odflt _ _); apply: eq_pick => i; rewrite -!mxrank_eq0.",
                        "VernacExtend",
                        "e02c5e37d306c924c86ea325376d95ddc0d1741e"
                    ]
                },
                {
                    "command": [
                        "rewrite -(mxrankMfree _ inj_f); symmetry; rewrite -(eqmxMfull _ inj_f).",
                        "VernacExtend",
                        "b4b4a9a8da456b06e97068c04136d6f5c7312465"
                    ]
                },
                {
                    "command": [
                        "have /envelop_mxP[e ->{i}]: ('e_i \\in R_G)%MS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -Wedderburn_sum (sumsmx_sup i) ?Wedderburn_id_mem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "congr (\\rank _ != _); rewrite !(mulmx_suml, linear_sum); apply: eq_bigr => x Gx.",
                        "VernacExtend",
                        "775b998c29d59f89d853e0c4a629d4a3388abe3b"
                    ]
                },
                {
                    "command": [
                        "by rewrite !linearZ -scalemxAl /= !gring_opG ?hom_f.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "op_Wedderburn_id",
            "line_nb": 2998,
            "steps": [
                {
                    "command": [
                        "rewrite -(gring_op1 (irr_repr i)) -Wedderburn_sum_id.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite linear_sum (bigD1 i) //= addrC big1 ?add0r // => j neq_ji.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "exact: irr_repr'_op0 (Wedderburn_id_mem j).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rank_Wedderburn_subring",
            "line_nb": 3014,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite -{1}[i]irr_reprK; have irrSi := socle_irr i.",
                        "VernacExtend",
                        "88e21057fc6b7102e6280fe7858222ef45ddbdf0"
                    ]
                },
                {
                    "command": [
                        "by case/andP: (splitG irrSi) => _; rewrite rank_irr_comp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_mx_mult",
            "line_nb": 3023,
            "steps": [
                {
                    "command": [
                        "rewrite /socle_mult -(mxrankMfree _ gring_free) -genmxE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite rank_Wedderburn_subring mulKn ?irr_degree_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxtrace_regular",
            "line_nb": 3027,
            "steps": [
                {
                    "command": [
                        "move=> x Gx; have soc1: (Socle sG :=: 1%:M)%MS by rewrite -irr_mx_sum.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite -(mxtrace_submod1 (Socle_module sG) soc1) // mxtrace_Socle //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i _; rewrite irr_mx_mult.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_degree_abelian",
            "line_nb": 3033,
            "steps": [
                {
                    "command": [
                        "by move=> cGG i; apply: mxsimple_abelian_linear (socle_simple i).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_modeM",
            "line_nb": 3098,
            "steps": [
                {
                    "command": [
                        "move=> x y Zx Zy; rewrite {1}/irr_mode repr_mxM ?(subsetP (center_sub G)) //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite !irr_center_scalar // -scalar_mxM mxE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "primitive_root_splitting_abelian",
            "line_nb": 3158,
            "steps": [
                {
                    "command": [
                        "move=> ozG cGG [|n] rG irrG; first by case/mx_irrP: irrG.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (pickP [pred x in G | ~~ is_scalar_mx (rG x)]) => [x | scalG].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case/andP=> Gx nscal_rGx; have: horner_mx (rG x) ('X^#|G| - 1) == 0.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "rewrite rmorphB rmorphX /= horner_mx_C horner_mx_X.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -repr_mxX ?inE // ((_ ^+ _ =P 1)%g _) ?repr_mx1 ?subrr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -order_dvdn order_dvdG.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/idPn; rewrite -mxrank_eq0 -(factor_Xn_sub_1 ozG).",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "elim: #|G| => [|i IHi]; first by rewrite big_nil horner_mx_C mxrank1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite big_nat_recr //= rmorphM mxrankMfree {IHi}//.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite row_free_unit rmorphB /= horner_mx_X horner_mx_C.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (mx_Schur irrG) ?subr_eq0 //; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: contraNneq nscal_rGx => ->; apply: scalar_mx_is_scalar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -memmx_cent_envelop linearB.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite addmx_sub ?eqmx_opp ?scalar_mx_cent //= memmx_cent_envelop.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/centgmxP=> j Zh_j; rewrite -!repr_mxM // (centsP cGG).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose M := <<delta_mx 0 0 : 'rV[F]_n.+1>>%MS.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have linM: \\rank M = 1%N by rewrite genmxE mxrank_delta.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have modM: mxmodule rG M.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/mxmoduleP=> x Gx; move/idPn: (scalG x); rewrite /= Gx negbK.",
                        "VernacExtend",
                        "892743169f9b7a8d1078a131ab1583767aafbf69"
                    ]
                },
                {
                    "command": [
                        "by case/is_scalar_mxP=> ? ->; rewrite scalar_mxC submxMl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: linear_mx_abs_irr; apply/eqP; rewrite eq_sym -linM.",
                        "VernacExtend",
                        "7d4450169cd8610cf3ff90cd2eeb2f84258ab13d"
                    ]
                },
                {
                    "command": [
                        "by case/mx_irrP: irrG => _; apply; rewrite // -mxrank_eq0 linM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "splitting_cyclic_primitive_root",
            "line_nb": 3215,
            "steps": [
                {
                    "command": [
                        "case/cyclicP=> x defG F'G splitF; case=> // IH.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "wlog sG: / irrType G by apply: socle_exists.",
                        "VernacExtend",
                        "a7d04f709d7f819b427e71c08303f8cd82c08a1b"
                    ]
                },
                {
                    "command": [
                        "have [w prim_w _] := cycle_repr_structure sG defG F'G splitF.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: IH; exists w.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_form_qf",
            "line_nb": 3275,
            "steps": [
                {
                    "command": [
                        "by rewrite (morphAnd (@qf_form _)) ?big1 //= => x _; rewrite submx_form_qf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_mxmodule",
            "line_nb": 3278,
            "steps": [
                {
                    "command": [
                        "rewrite (morphAnd (qf_eval e)) //= big_andE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/forallP/mxmoduleP=> Umod x; move/implyP: (Umod x); by rewrite eval_submx eval_mulmx eval_mx_term.",
                        "VernacExtend",
                        "690191ef5f62f0973d1b5e1ebcee33aab081b5fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_mxsimple_exists",
            "line_nb": 3305,
            "steps": [
                {
                    "command": [
                        "elim: {U}_.+1 {-2}U (ltnSn (\\rank U)) => // m IHm U leUm modU nzU.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "have [nsimU | simU] := mxnonsimpleP nzU; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists U; first apply/mxsimpleP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (xchooseP nsimU); move: (xchoose _) => W /and4P[modW sWU nzW ltWU].",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "case: (IHm W) => // [|V simV sVW]; first exact: leq_trans ltWU _.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists V; last apply: submx_trans sVW sWU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rcent_map",
            "line_nb": 3408,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE -!map_mxM inj_eq //; apply: map_mx_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_map",
            "line_nb": 3411,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE -!map_mxM inj_eq //; apply: map_mx_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_map",
            "line_nb": 3414,
            "steps": [
                {
                    "command": [
                        "by apply/setP=> x; rewrite !inE -!map_mxM ?map_submx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centgmx_map",
            "line_nb": 3417,
            "steps": [
                {
                    "command": [
                        "by rewrite /centgmx rcent_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_map",
            "line_nb": 3420,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxmodule rstabs_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxsimple_map",
            "line_nb": 3423,
            "steps": [
                {
                    "command": [
                        "case; rewrite map_mx_eq0 // mxmodule_map // => modU nzU minU.",
                        "VernacExtend",
                        "e24818f2b000e5bc0598a9fd4a167671cf3564cd"
                    ]
                },
                {
                    "command": [
                        "split=> // V modV sVU nzV; rewrite -(map_submx f).",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite (minU V^f) //= ?mxmodule_map ?map_mx_eq0 // map_submx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_irr_map",
            "line_nb": 3428,
            "steps": [
                {
                    "command": [
                        "by move=> irrGf; apply: mxsimple_map; rewrite map_mx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_map",
            "line_nb": 3431,
            "steps": [
                {
                    "command": [
                        "by rewrite /rker -rstab_map map_mx1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_faithful",
            "line_nb": 3434,
            "steps": [
                {
                    "command": [
                        "by rewrite /mx_faithful rker_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mx_abs_irr",
            "line_nb": 3437,
            "steps": [
                {
                    "command": [
                        "by rewrite /mx_absolutely_irreducible -map_enveloping_algebra_mx row_full_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_rsim_map",
            "line_nb": 3441,
            "steps": [
                {
                    "command": [
                        "case=> g eqn12 inj_g hom_g.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by exists g^f => // [|x Gx]; rewrite ?row_free_map // -!map_mxM ?hom_g.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_regular_subseries",
            "line_nb": 3476,
            "steps": [
                {
                    "command": [
                        "set mf := map _ in modUf *; rewrite /subseries_repr.",
                        "VernacExtend",
                        "8460a73fe74726b8e94ff0752da65e8d48f68f26"
                    ]
                },
                {
                    "command": [
                        "do 2!move: (mx_subseries_module' _ _) (mx_subseries_module _ _).",
                        "VernacExtend",
                        "2ed5ae5c7a1513e882f170a2462d7a7c3c1ca435"
                    ]
                },
                {
                    "command": [
                        "have mf_i V: nth 0^f (mf V) i = (V`_i)^f.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (ltnP i (size V)) => [ltiV | leVi]; first exact: nth_map.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !nth_default ?size_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(map_mx0 f) mf_i (mf_i (0 :: U)) => modUi'f modUif modUi' modUi.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply: map_section_repr; apply: map_regular_repr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_group_splitting_field",
            "line_nb": 3485,
            "steps": [
                {
                    "command": [
                        "move=> splitG n rG irrG.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have modU0: all ((mxmodule (regular_repr aF G)) #|G|) [::] by [].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: (mx_Schreier modU0 _) => // [[U [compU lastU _]]]; have [modU _]:= compU.",
                        "VernacExtend",
                        "c574574294cc642b01d157e4c8f21ac2f90e4b5d"
                    ]
                },
                {
                    "command": [
                        "pose Uf := map (map_mx f) U.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have{lastU} lastUf: (last 0 Uf :=: 1%:M)%MS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(map_mx0 f) -(map_mx1 f) last_map; apply/map_eqmx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have modUf: mx_subseries (regular_repr rF G) Uf.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /mx_subseries all_map; apply: etrans modU; apply: eq_all => Ui /=.",
                        "VernacExtend",
                        "51feb8305384ec63057bc47214b50a33a7155fd3"
                    ]
                },
                {
                    "command": [
                        "rewrite -mxmodule_map; apply: eq_subset_r => x.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE map_regular_repr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have absUf i: i < size U -> mx_absolutely_irreducible (subseries_repr i modUf).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=> lt_i_U; rewrite -(mx_rsim_abs_irr (map_regular_subseries i modU _)).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite map_mx_abs_irr; apply: splitG.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by apply: mx_rsim_irr (mx_series_repr_irr compU lt_i_U); apply: section_eqmx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have compUf: mx_composition_series (regular_repr rF G) Uf.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "split=> // i; rewrite size_map => ltiU.",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "move/max_submodP: (mx_abs_irrW (absUf i ltiU)); apply.",
                        "VernacExtend",
                        "2408219a516badfffca5dfc0dff226f7b05b4ced"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}(map_mx0 f) -map_cons !(nth_map 0) ?leqW //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite map_submx // ltmxW // (pathP _ (mx_series_lt compU)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [[i ltiU] simUi] := rsim_regular_series irrG compUf lastUf.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have{simUi} simUi: mx_rsim rG (subseries_repr i modUf).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: mx_rsim_trans simUi _; apply: section_eqmx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (mx_rsim_abs_irr simUi) absUf; rewrite size_map in ltiU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_addA",
            "line_nb": 3535,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; apply: val_inj; rewrite /= addrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_addC",
            "line_nb": 3538,
            "steps": [
                {
                    "command": [
                        "by move=> x y; apply: val_inj; rewrite /= addrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_add0r",
            "line_nb": 3541,
            "steps": [
                {
                    "command": [
                        "by move=> x; apply: val_inj; rewrite /= add0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_addNr",
            "line_nb": 3544,
            "steps": [
                {
                    "command": [
                        "by move=> x; apply: val_inj; rewrite /= addNr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "genK",
            "line_nb": 3552,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxval [pval _]poly_rV_K ?horner_mx_C // size_polyC; case: (x != 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval_inj",
            "line_nb": 3555,
            "steps": [
                {
                    "command": [
                        "exact: inj_comp horner_rVpoly_inj val_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval0",
            "line_nb": 3558,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxval [pval _]raddf0 rmorph0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvalN",
            "line_nb": 3561,
            "steps": [
                {
                    "command": [
                        "by move=> x; rewrite /mxval [pval _]raddfN rmorphN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvalD",
            "line_nb": 3564,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /mxval [pval _]raddfD rmorphD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval_gen1",
            "line_nb": 3571,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxval [pval _]poly_rV_K ?size_poly1 // horner_mx_C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval_genM",
            "line_nb": 3574,
            "steps": [
                {
                    "command": [
                        "move=> x y; rewrite /mxval [pval _]poly_rV_K ?size_mod_mxminpoly //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -horner_mxK mx_inv_hornerK ?horner_mx_mem // rmorphM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval_genV",
            "line_nb": 3578,
            "steps": [
                {
                    "command": [
                        "move=> x; rewrite /mxval [pval _]poly_rV_K ?size_poly ?mx_inv_hornerK //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "pose m B : 'M[F]_(n * n) := lin_mx (mulmxr B); set B := mxval x.",
                        "VernacExtend",
                        "9fb5f9e31e2512a271fa21fe890324d2e3052c71"
                    ]
                },
                {
                    "command": [
                        "case uB: (B \\is a GRing.unit); last by rewrite invr_out ?uB ?horner_mx_mem.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have defAd: Ad = Ad *m m B *m m B^-1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/row_matrixP=> i.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !row_mul mul_rV_lin /= mx_rV_lin /= mulmxK ?vec_mxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -[B^-1]mul1mx -(mul_vec_lin (mulmxr_linear _ _)) defAd submxMr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -mxval_gen1 (submx_trans (horner_mx_mem _ _)) // {1}defAd.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -(geq_leqif (mxrank_leqif_sup _)) ?mxrankM_maxl // -{}defAd.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/row_subP=> i; rewrite row_mul rowK mul_vec_lin /= -{2}[A]horner_mx_X.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -rmorphX mulmxE -rmorphM horner_mx_mem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_mulA",
            "line_nb": 3591,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; apply: mxval_inj; rewrite !mxval_genM mulmxA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_mulC",
            "line_nb": 3594,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /genM mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_mul1r",
            "line_nb": 3597,
            "steps": [
                {
                    "command": [
                        "by move=> x; apply: mxval_inj; rewrite mxval_genM mxval_gen1 mul1mx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_mulDr",
            "line_nb": 3600,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; apply: mxval_inj; rewrite !(mxvalD, mxval_genM) mulmxDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_ntriv",
            "line_nb": 3603,
            "steps": [
                {
                    "command": [
                        "by rewrite -(inj_eq mxval_inj) mxval_gen1 mxval0 oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval1",
            "line_nb": 3609,
            "steps": [
                {
                    "command": [
                        "exact: mxval_gen1.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvalM",
            "line_nb": 3612,
            "steps": [
                {
                    "command": [
                        "exact: mxval_genM.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval_sub",
            "line_nb": 3615,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite mxvalD mxvalN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval_is_multiplicative",
            "line_nb": 3619,
            "steps": [
                {
                    "command": [
                        "by split; [apply: mxvalM | apply: mxval1].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval_centg",
            "line_nb": 3623,
            "steps": [
                {
                    "command": [
                        "rewrite [mxval _]horner_rVpoly -memmx_cent_envelop vec_mxK {x}mulmx_sub //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/row_subP=> k; rewrite rowK memmx_cent_envelop; apply/centgmxP => g Gg /=.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite !mulmxE commrX // /GRing.comm -mulmxE (centgmxP cGA).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_mulVr",
            "line_nb": 3628,
            "steps": [
                {
                    "command": [
                        "move=> x; rewrite -(inj_eq mxval_inj) mxval0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move/(mx_Schur irrG (mxval_centg x)) => u_x.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply: mxval_inj; rewrite mxvalM mxval_genV mxval1 mulVmx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_invr0",
            "line_nb": 3633,
            "steps": [
                {
                    "command": [
                        "by apply: mxval_inj; rewrite mxval_genV !mxval0 -{2}invr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxvalV",
            "line_nb": 3643,
            "steps": [
                {
                    "command": [
                        "exact: mxval_genV.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_is_rmorphism",
            "line_nb": 3646,
            "steps": [
                {
                    "command": [
                        "split=> [x y|]; first by apply: mxval_inj; rewrite genK !rmorphB /= !genK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by split=> // x y; apply: mxval_inj; rewrite genK !rmorphM /= !genK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval_groot",
            "line_nb": 3653,
            "steps": [
                {
                    "command": [
                        "rewrite /mxval [pval _]poly_rV_K ?size_mod_mxminpoly // -horner_mxK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mx_inv_hornerK ?horner_mx_mem // horner_mx_X.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxval_grootX",
            "line_nb": 3657,
            "steps": [
                {
                    "command": [
                        "by rewrite rmorphX /= mxval_groot.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "non_linear_gen_reducible",
            "line_nb": 3665,
            "steps": [
                {
                    "command": [
                        "rewrite ltnNge mxminpoly_linear_is_scalar => Anscal.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "pose Af := map_mx gen A; exists (kermx (Af - groot%:M)).",
                        "VernacExtend",
                        "c02f80655e5d3f9670ce2da8e91c31b5cdbb5464"
                    ]
                },
                {
                    "command": [
                        "rewrite submx1 kermx_centg_module /=; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/centgmxP=> z Gz; rewrite mulmxBl mulmxBr scalar_mxC.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!map_mxM 1?(centgmxP cGA).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite andbC mxrank_ker -subn_gt0 mxrank1 subKn ?rank_leq_row // lt0n.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite mxrank_eq0 subr_eq0; case: eqP => [defAf | _].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite -(map_mx_is_scalar gen_rmorphism) -/Af in Anscal.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case/is_scalar_mxP: Anscal; exists groot.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -mxrank_eq0 mxrank_ker subn_eq0 row_leq_rank.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/row_freeP=> [[XA' XAK]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have pAf0: (mxminpoly Af).[groot] == 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite mxminpoly_map ?map_mxminpoly_groot.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{pAf0} [q def_pAf]:= factor_theorem _ _ pAf0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have q_nz: q != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: eqP (congr1 (fun p : {poly _} => size p) def_pAf) => // ->.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_mxminpoly mul0r size_poly0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have qAf0: horner_mx Af q = 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -[_ q]mulr1 -[1]XAK mulrA -{2}(horner_mx_X Af) -(horner_mx_C Af).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -rmorphB -rmorphM -def_pAf /= mx_root_minpoly mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have{qAf0} := dvdp_leq q_nz (mxminpoly_min qAf0); rewrite def_pAf.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "by rewrite size_Mmonic ?monicXsubC // polyseqXsubC addn2 ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_dim_ex_proof",
            "line_nb": 3690,
            "steps": [
                {
                    "command": [
                        "by exists 0%N; apply/existsP; exists 0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_dim_ub_proof",
            "line_nb": 3693,
            "steps": [
                {
                    "command": [
                        "case/existsP=> B /eqnP def_nAd.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (leq_trans _ (rank_leq_col (subbase B))) // def_nAd leq_pmulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base_free",
            "line_nb": 3701,
            "steps": [
                {
                    "command": [
                        "rewrite /base /gen_base /nA; case: pickP => //; case: ex_maxnP => nA_max.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "by case/existsP=> B Bfree _ no_free; rewrite no_free in Bfree.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_dim_factor",
            "line_nb": 3742,
            "steps": [
                {
                    "command": [
                        "by rewrite -(eqnP base_free) (eqnP base_full).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_dim_gt0",
            "line_nb": 3745,
            "steps": [
                {
                    "command": [
                        "by case: posnP gen_dim_factor => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_genK",
            "line_nb": 3758,
            "steps": [
                {
                    "command": [
                        "move=> W; apply/matrixP=> i j; apply: val_inj; rewrite mxE /= rowK.",
                        "VernacExtend",
                        "00ff85c2978147a9fc435136b93db114a3840954"
                    ]
                },
                {
                    "command": [
                        "case/row_freeP: base_free => B' BB'; rewrite -[_ *m _]mulmx1 -BB' mulmxA.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmxKpV ?submxMl // -mulmxA BB' mulmx1 mxvecK rowK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_gen0",
            "line_nb": 3763,
            "steps": [
                {
                    "command": [
                        "by apply/matrixP=> i j; rewrite !mxE !(mul0mx, linear0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_gen0",
            "line_nb": 3766,
            "steps": [
                {
                    "command": [
                        "by apply: (canLR in_genK); rewrite in_gen0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_genN",
            "line_nb": 3773,
            "steps": [
                {
                    "command": [
                        "by move=> W; apply: (canLR in_genK); rewrite in_genN val_genK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_genD",
            "line_nb": 3780,
            "steps": [
                {
                    "command": [
                        "by move=> U V; apply: (canLR in_genK); rewrite in_genD !val_genK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_gen_rV",
            "line_nb": 3792,
            "steps": [
                {
                    "command": [
                        "by apply/rowP=> j; rewrite mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_gen_row",
            "line_nb": 3801,
            "steps": [
                {
                    "command": [
                        "by apply: (canLR val_genK); rewrite val_gen_row in_genK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_genZ",
            "line_nb": 3821,
            "steps": [
                {
                    "command": [
                        "move=> W; apply/row_matrixP=> i; rewrite row_mul !row_gen_sum_mxval.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulmx_suml; apply: eq_bigr => j _; rewrite mxE mulrC mxvalM row_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "submx_in_gen",
            "line_nb": 3826,
            "steps": [
                {
                    "command": [
                        "move=> sUV; apply/row_subP=> i; rewrite -in_gen_row.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "case/submxP: (row_subP sUV i) => u ->{i}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmx_sum_row in_gen_sum summx_sub // => j _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite in_genZ in_gen_row scalemx_sub ?row_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "submx_in_gen_eq",
            "line_nb": 3832,
            "steps": [
                {
                    "command": [
                        "move=> sVA_V; apply/idP/idP=> siUV; last exact: submx_in_gen.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/row_subP=> i; rewrite -[row i U]in_genK in_gen_row.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case/submxP: (row_subP siUV i) => u ->{i U siUV}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmx_sum_row val_gen_sum summx_sub // => j _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite val_genZ val_gen_row in_genK rowE -mulmxA mulmx_sub //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite [mxval _]horner_poly mulmx_sumr summx_sub // => [[k _]] _ /=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmxA mul_mx_scalar -scalemxAl scalemx_sub {u j}//.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "elim: k => [|k IHk]; first by rewrite mulmx1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprSr mulmxA (submx_trans (submxMr A IHk)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_genJmx",
            "line_nb": 3844,
            "steps": [
                {
                    "command": [
                        "move=> g Gg /= W; apply/row_matrixP=> i; rewrite -val_gen_row !row_mul.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "rewrite mulmx_sum_row val_gen_sum row_gen_sum_mxval mulmx_suml.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => /= j _; rewrite val_genZ rowK in_genK mxE -!row_mul.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite (centgmxP (mxval_centg _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_genJ",
            "line_nb": 3858,
            "steps": [
                {
                    "command": [
                        "exact: val_genJmx.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_genJ",
            "line_nb": 3861,
            "steps": [
                {
                    "command": [
                        "by move=> g Gg /= v; apply: (canLR val_genK); rewrite val_genJ ?in_genK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rowval_genK",
            "line_nb": 3885,
            "steps": [
                {
                    "command": [
                        "apply/eqmxP; rewrite -submx_rowval_gen submx_refl /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}[U]val_genK submx_in_gen // submx_rowval_gen val_genK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rowval_gen_stable",
            "line_nb": 3889,
            "steps": [
                {
                    "command": [
                        "rewrite -[A]mxval_groot -{1}[_ U]in_genK -val_genZ.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite submx_rowval_gen val_genK scalemx_sub // rowval_genK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstab_in_gen",
            "line_nb": 3893,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE; case Gx: (x \\in G) => //=.",
                        "VernacExtend",
                        "5caed936835e366e9e533d8f19382dcfedbf86d4"
                    ]
                },
                {
                    "command": [
                        "by rewrite -in_genJ // (inj_eq (can_inj in_genK)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_in_gen",
            "line_nb": 3897,
            "steps": [
                {
                    "command": [
                        "apply/subsetP=> x; rewrite !inE => /andP[Gx nUx].",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -in_genJ Gx // submx_in_gen.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rstabs_rowval_gen",
            "line_nb": 3901,
            "steps": [
                {
                    "command": [
                        "apply/setP=> x; rewrite !inE; case Gx: (x \\in G) => //=.",
                        "VernacExtend",
                        "5caed936835e366e9e533d8f19382dcfedbf86d4"
                    ]
                },
                {
                    "command": [
                        "by rewrite submx_rowval_gen in_genJ // (eqmxMr _ (rowval_genK U)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxmodule_rowval_gen",
            "line_nb": 3905,
            "steps": [
                {
                    "command": [
                        "by rewrite /mxmodule rstabs_rowval_gen.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_mx_irr",
            "line_nb": 3908,
            "steps": [
                {
                    "command": [
                        "apply/mx_irrP; split=> [|U Umod nzU]; first exact: gen_dim_gt0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -sub1mx -rowval_genK -submx_rowval_gen submx_full //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case/mx_irrP: irrG => _; apply; first by rewrite mxmodule_rowval_gen.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -(inj_eq (can_inj in_genK)) in_gen0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mxrank_eq0 rowval_genK mxrank_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rker_gen",
            "line_nb": 3915,
            "steps": [
                {
                    "command": [
                        "apply/setP=> g; rewrite !inE !mul1mx; case Gg: (g \\in G) => //=.",
                        "VernacExtend",
                        "5caed936835e366e9e533d8f19382dcfedbf86d4"
                    ]
                },
                {
                    "command": [
                        "apply/eqP/eqP=> g1; apply/row_matrixP=> i.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by apply: (can_inj in_genK); rewrite rowE in_genJ //= g1 mulmx1 row1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: (can_inj val_genK); rewrite rowE val_genJ //= g1 mulmx1 row1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_mx_faithful",
            "line_nb": 3921,
            "steps": [
                {
                    "command": [
                        "by rewrite /mx_faithful rker_gen.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_mxT",
            "line_nb": 3944,
            "steps": [
                {
                    "command": [
                        "by rewrite eval_vec_mx eval_mulmx eval_mx_term [mxval _]horner_rVpoly.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_mulT",
            "line_nb": 3949,
            "steps": [
                {
                    "command": [
                        "rewrite !(eval_mulmx, eval_mxvec) !eval_mxT eval_mx_term.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: (can_inj rVpolyK); rewrite -mxvalM [rVpoly _]horner_rVpolyK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_map_rVval",
            "line_nb": 3955,
            "steps": [
                {
                    "command": [
                        "case: (ltnP j (size e)) => [| leej]; first exact: (nth_map 0 0).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !nth_default ?size_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_gen_term",
            "line_nb": 3963,
            "steps": [
                {
                    "command": [
                        "elim: t => //=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=> k _; apply/rowP=> i; rewrite !mxE /= nth_row_env nth_map_rVval.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=> x _; rewrite eval_mx_term.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=> x _; rewrite eval_mx_term.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=> t1 IH1 t2 IH2 /andP[rt1 rt2]; rewrite -{}IH1 // -{}IH2 //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply/rowP=> k; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=> t1 IH1 rt1; rewrite -{}IH1 //; apply/rowP=> k; rewrite !mxE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=> t1 IH1 n1 rt1; rewrite eval_mulmx eval_mx_term mul_scalar_mx.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite scaler_nat {}IH1 //; elim: n1 => //= n1 IHn1; rewrite !mulrS IHn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=> t1 IH1 t2 IH2 /andP[rt1 rt2]; rewrite eval_mulT IH1 ?IH2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> t1 IH1 n1 /IH1 {IH1}IH1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim: n1 => [|n1 IHn1] /=; first by rewrite eval_mx_term.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite eval_mulT exprS IH1 IHn1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_satP",
            "line_nb": 4018,
            "steps": [
                {
                    "command": [
                        "move=> e f; have [tor rto] := GRing.to_rformP e f.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "exact: (iffP (sat_gen_form e (GRing.to_rform_rformula f))).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_gen",
            "line_nb": 4046,
            "steps": [
                {
                    "command": [
                        "by rewrite card_sub card_matrix mul1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_closure_field_exists",
            "line_nb": 4130,
            "steps": [
                {
                    "command": [
                        "set n := #|{group gT}|.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "suffices: classically {Fs : fieldType & {rmorphism F -> Fs} & forall G : {group gT}, enum_rank G < n -> group_splitting_field Fs G}.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply: classic_bind => [[Fs f splitFs]] _ -> //.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by exists Fs => // G; apply: splitFs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: (n) => [|i IHi]; first by move=> _ -> //; exists F => //; exists id.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: classic_bind IHi => [[F' f splitF']].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have [le_n_i _ -> // | lt_i_n] := leqP n i.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists F' => // G _; apply: splitF'; apply: leq_trans le_n_i.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have:= @group_splitting_field_exists _ (enum_val (Ordinal lt_i_n)) F'.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: classic_bind => [[Fs f' splitFs]] _ -> //.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "exists Fs => [|G]; first exact: [rmorphism of (f' \\o f)].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS leq_eqVlt -{1}[i]/(val (Ordinal lt_i_n)) val_eqE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case/predU1P=> [defG | ltGi]; first by rewrite -[G]enum_rankK defG.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: (extend_group_splitting_field f'); apply: splitF'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_closure_closed_field",
            "line_nb": 4147,
            "steps": [
                {
                    "command": [
                        "move=> G [|n] rG irrG; first by case/mx_irrP: irrG.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply: cent_mx_scalar_abs_irr => //; rewrite leqNgt.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/(has_non_scalar_mxP (scalar_mx_cent _ _)) => [[A cGA nscalA]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have [a]: exists a, eigenvalue A a.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose P := mxminpoly A; pose d := degree_mxminpoly A.",
                        "VernacExtend",
                        "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
                    ]
                },
                {
                    "command": [
                        "have Pd1: P`_d = 1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqP (mxminpoly_monic A)) /lead_coef size_mxminpoly.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have d_gt0: d > 0 := mxminpoly_nonconstant A.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [a def_ad] := solve_monicpoly (nth 0 (- P)) d_gt0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists a; rewrite eigenvalue_root_min -/P /root -oppr_eq0 -hornerN.",
                        "VernacExtend",
                        "26768a9862fadf618b4c4ff746d0d41878c2fb56"
                    ]
                },
                {
                    "command": [
                        "rewrite horner_coef size_opp size_mxminpoly -/d big_ord_recr -def_ad.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite coefN Pd1 mulN1r /= subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/negP; rewrite kermx_eq0 row_free_unit (mx_Schur irrG) ?subr_eq0 //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by rewrite -memmx_cent_envelop -raddfN linearD addmx_sub ?scalar_mx_cent.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: contraNneq nscalA => ->; apply: scalar_mx_is_scalar.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}