{
    "filename": "mathcomp/field/falgebra.v",
    "coq_project": "math-comp",
    "vernac_cmds": [
        [
            "Require Import mathcomp.ssreflect.ssreflect.",
            "VernacRequire",
            "85e251063dc2b5a9653f7bb76dcd176ed36b42a9"
        ],
        [
            "From mathcomp Require Import ssrfun ssrbool eqtype ssrnat seq path choice fintype.",
            "VernacRequire",
            "5b7e20918953ef2b4d1bdb75f1e7eefded26520f"
        ],
        [
            "From mathcomp Require Import div tuple finfun bigop ssralg finalg zmodp matrix vector poly.",
            "VernacRequire",
            "8cd06449b6eb3bb38889fd69f4e340de1193e9d3"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Local Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "fb9da4a291533574d328be8c8a69d90a14641928"
        ],
        [
            "Reserved Notation \"{ 'aspace' T }\" (at level 0, format \"{ 'aspace' T }\").",
            "VernacSyntaxExtension",
            "12de3c56c52e4e981133d2b38b4b2dbe7ed6ec5c"
        ],
        [
            "Reserved Notation \"<< U & vs >>\" (at level 0, format \"<< U & vs >>\").",
            "VernacSyntaxExtension",
            "22dc07d9cd71d4d9be648f881abb9de175c63252"
        ],
        [
            "Reserved Notation \"<< U ; x >>\" (at level 0, format \"<< U ; x >>\").",
            "VernacSyntaxExtension",
            "025265a0c8cec5bef7fd8a9e5d31dbf681ae5cac"
        ],
        [
            "Reserved Notation \"''AHom' ( T , rT )\" (at level 8, format \"''AHom' ( T , rT )\").",
            "VernacSyntaxExtension",
            "064a9ae7c91e910e80a014a7e5304bcaaa0cf9e0"
        ],
        [
            "Reserved Notation \"''AEnd' ( T )\" (at level 8, format \"''AEnd' ( T )\").",
            "VernacSyntaxExtension",
            "09e4745de8cd78355c662fbcab0d15c1c985088b"
        ],
        [
            "Notation \"\\dim_ E V\" := (divn (\\dim V) (\\dim E)) (at level 10, E at level 2, V at level 8, format \"\\dim_ E V\") : nat_scope.",
            "VernacNotation",
            "774660e8b35b3151b1a7278b7f742e273ad8608b"
        ],
        [
            "Import GRing.Theory.",
            "VernacImport",
            "a0fcf55540300b9b0e54bd28a113c5228ff530f4"
        ],
        [
            "Module Falgebra.",
            "VernacDefineModule",
            "f8da6794346ed02a5b317612225476789fda3ec4"
        ],
        [
            "Section DefaultBase.",
            "VernacBeginSection",
            "a255eb03142c5d7367f2bbe2417ee36e7cf634d7"
        ],
        [
            "Variables (K : fieldType) (A : algType K).",
            "VernacAssumption",
            "5adb6a124f55fa4afd19285f2d1ea00cf912d41d"
        ],
        [
            "Lemma BaseMixin : Vector.mixin_of A -> GRing.UnitRing.mixin_of A.",
            "VernacStartTheoremProof",
            "d9ac97a89f41a8d7e296f6b1c049f563d71f1552"
        ],
        [
            "move=> vAm; pose vA := VectType K A vAm.",
            "VernacExtend",
            "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
        ],
        [
            "pose am u := linfun (u \\o* idfun : vA -> vA).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have amE u v : am u v = v * u by rewrite lfunE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose uam := [pred u | lker (am u) == 0%VS].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose vam := [fun u => if u \\in uam then (am u)^-1%VF 1 else u].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have vamKl: {in uam, left_inverse 1 vam *%R}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=> u Uu; rewrite /= Uu -amE lker0_lfunVK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists uam vam => // [u Uu | u v [_ uv1] | u /negbTE/= -> //].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply/(lker0P Uu); rewrite !amE -mulrA vamKl // mul1r mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/lker0P=> w1 w2 /(congr1 (am v)); rewrite !amE -!mulrA uv1 !mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition BaseType T := fun c vAm & phant_id c (GRing.UnitRing.Class (BaseMixin vAm)) => fun (vT : vectType K) & phant vT & phant_id (Vector.mixin (Vector.class vT)) vAm => @GRing.UnitRing.Pack T c.",
            "VernacDefinition",
            "b1e206741834690a33817ea7d8e35f97e4b39a7f"
        ],
        [
            "End DefaultBase.",
            "VernacEndSegment",
            "dba59afb1fa7966dc341143df90f31c8d88f5e52"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Variable R : ringType.",
            "VernacAssumption",
            "103955c3e16ede32f173514da95e3006926aeccd"
        ],
        [
            "Implicit Type phR : phant R.",
            "VernacReserve",
            "2ee66e7d498f849de669ceb7625cb2c72959583b"
        ],
        [
            "Record class_of A := Class { base1 : GRing.UnitAlgebra.class_of R A; mixin : Vector.mixin_of (GRing.Lmodule.Pack _ base1) }.",
            "VernacInductive",
            "6220ea2ff933736875c178eb31cba920bb823c3b"
        ],
        [
            "Local Coercion base1 : class_of >-> GRing.UnitAlgebra.class_of.",
            "VernacCoercion",
            "e377afb492c3e7e498c483a14feb45c69cfcec26"
        ],
        [
            "Definition base2 A c := @Vector.Class _ _ (@base1 A c) (mixin c).",
            "VernacDefinition",
            "f080391ebb0efb81bcd0c829b48e6ce5f7021b5f"
        ],
        [
            "Local Coercion base2 : class_of >-> Vector.class_of.",
            "VernacCoercion",
            "cea986abeab714f35d613be82c4328ea15f2bab6"
        ],
        [
            "Structure type (phR : phant R) := Pack {sort; _ : class_of sort}.",
            "VernacInductive",
            "78bfdb22887f748fe58a15d412ea69b6a323083f"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (phR : phant R) (T : Type) (cT : type phR).",
            "VernacAssumption",
            "c29c1b47135afbce9a566505b9ed44f41969b316"
        ],
        [
            "Definition class := let: Pack _ c := cT return class_of cT in c.",
            "VernacDefinition",
            "037d2d3a3fb5f93be0dcb742c7cc8b0f16e89227"
        ],
        [
            "Let xT := let: Pack T _ := cT in T.",
            "VernacDefinition",
            "0a87c77e3a5ac8febf0910b95d7b998b7cb9cf6d"
        ],
        [
            "Notation xclass := (class : class_of xT).",
            "VernacSyntacticDefinition",
            "e136614fedd7b331a23b54adad5b0bce11895ed4"
        ],
        [
            "Definition pack := fun bT b & phant_id (@GRing.UnitAlgebra.class R phR bT) (b : GRing.UnitAlgebra.class_of R T) => fun mT m & phant_id (@Vector.class R phR mT) (@Vector.Class R T b m) => Pack (Phant R) (@Class T b m).",
            "VernacDefinition",
            "6e706de8a2037d2b1f2910094993394b110465c7"
        ],
        [
            "Definition eqType := @Equality.Pack cT xclass.",
            "VernacDefinition",
            "6139f412b89e62ff13c9c707c885de4b39151e9d"
        ],
        [
            "Definition choiceType := @Choice.Pack cT xclass.",
            "VernacDefinition",
            "f62d3090382a5ea70b978e0633e0376c4558db55"
        ],
        [
            "Definition zmodType := @GRing.Zmodule.Pack cT xclass.",
            "VernacDefinition",
            "55ca79fd57642c05c60d387b339e6f79f04a3ff3"
        ],
        [
            "Definition lmodType := @GRing.Lmodule.Pack R phR cT xclass.",
            "VernacDefinition",
            "4ce82a63418d58bd951d43f4534526d1a6795b8f"
        ],
        [
            "Definition ringType := @GRing.Ring.Pack cT xclass.",
            "VernacDefinition",
            "0e7fedb841bf2ad5f10e2c47360481415705965d"
        ],
        [
            "Definition unitRingType := @GRing.UnitRing.Pack cT xclass.",
            "VernacDefinition",
            "c5af4d2b75d37bfcfb3b3aa3de1e804d0f68cfaa"
        ],
        [
            "Definition lalgType := @GRing.Lalgebra.Pack R phR cT xclass.",
            "VernacDefinition",
            "3f5229a59ed49d6ac987b2a13031a8684cce1e5c"
        ],
        [
            "Definition algType := @GRing.Algebra.Pack R phR cT xclass.",
            "VernacDefinition",
            "c3735d59f1110c1a08d0f5eb89fedce733f1f499"
        ],
        [
            "Definition unitAlgType := @GRing.UnitAlgebra.Pack R phR cT xclass.",
            "VernacDefinition",
            "068ecc98039ee4cdea4557df425dc3a6a8db64d3"
        ],
        [
            "Definition vectType := @Vector.Pack R phR cT xclass.",
            "VernacDefinition",
            "7ac2d99e4fb9562eecadab1ed6ea662bc9f9ca8e"
        ],
        [
            "Definition vect_ringType := @GRing.Ring.Pack vectType xclass.",
            "VernacDefinition",
            "5b1e42f532a524993c229fe225178c4d70961007"
        ],
        [
            "Definition vect_unitRingType := @GRing.UnitRing.Pack vectType xclass.",
            "VernacDefinition",
            "1d42b2a4f8427ba50c73792f1c2ea0b4b86db0df"
        ],
        [
            "Definition vect_lalgType := @GRing.Lalgebra.Pack R phR vectType xclass.",
            "VernacDefinition",
            "628551e8c7e75f3b39797be111e3ab1f520ae841"
        ],
        [
            "Definition vect_algType := @GRing.Algebra.Pack R phR vectType xclass.",
            "VernacDefinition",
            "b6a5b16014e60373a141e79ee31703185c0044c2"
        ],
        [
            "Definition vect_unitAlgType := @GRing.UnitAlgebra.Pack R phR vectType xclass.",
            "VernacDefinition",
            "4b228bda2011fefefbd3c69a47a7c04546ab46a1"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion base1 : class_of >-> GRing.UnitAlgebra.class_of.",
            "VernacCoercion",
            "a6a02493242326269ee5a31473ca2e22afb3e523"
        ],
        [
            "Coercion base2 : class_of >-> Vector.class_of.",
            "VernacCoercion",
            "aa1a3c2f584f06d995aba806bbd5b9d4ae4bb841"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Bind Scope ring_scope with sort.",
            "VernacBindScope",
            "ac04d07dda43f0036576b2a438f8490c7ac4d59b"
        ],
        [
            "Coercion eqType : type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Canonical eqType.",
            "VernacCanonical",
            "dd1ac877a396f552e2a8f23e59be45903d8b15ad"
        ],
        [
            "Coercion choiceType : type >-> Choice.type.",
            "VernacCoercion",
            "bdc8d608f4b963a8606cd33ad18b1977a8bcb78d"
        ],
        [
            "Canonical choiceType.",
            "VernacCanonical",
            "af7a1759ddd13e2b7e4e1ce16b6a3595a77b5659"
        ],
        [
            "Coercion zmodType : type >-> GRing.Zmodule.type.",
            "VernacCoercion",
            "e060cc1ea9f61e5bb007225650e27649c68e297c"
        ],
        [
            "Canonical zmodType.",
            "VernacCanonical",
            "9a6f278270af4b6ced100d8e0c90c7719a960a86"
        ],
        [
            "Coercion lmodType : type>-> GRing.Lmodule.type.",
            "VernacCoercion",
            "014d973b99594bc27a520662d56df3f3465eb961"
        ],
        [
            "Canonical lmodType.",
            "VernacCanonical",
            "2508a378d00cff399685e05d31698f84cdfa1eb3"
        ],
        [
            "Coercion ringType : type >-> GRing.Ring.type.",
            "VernacCoercion",
            "09ac5026083b32bdc94c69ee431fffb8f01bb95b"
        ],
        [
            "Canonical ringType.",
            "VernacCanonical",
            "b7d4c328ac58b23ee4b52bd787434621c20d2c4d"
        ],
        [
            "Coercion unitRingType : type >-> GRing.UnitRing.type.",
            "VernacCoercion",
            "365e9919776507bbf2b5c3dd980ed8dbe55e8e34"
        ],
        [
            "Canonical unitRingType.",
            "VernacCanonical",
            "5adf5dbcca23e501d2be7f60fe9ad3def13431b8"
        ],
        [
            "Coercion lalgType : type >-> GRing.Lalgebra.type.",
            "VernacCoercion",
            "106fc1d0dea836c7b3c6e3acb101a0126f53bf23"
        ],
        [
            "Canonical lalgType.",
            "VernacCanonical",
            "f31157c914d84396af2f285a028b530262ad3b8e"
        ],
        [
            "Coercion algType : type >-> GRing.Algebra.type.",
            "VernacCoercion",
            "8fa9812280186f84dc68bfe88cafb66095257550"
        ],
        [
            "Canonical algType.",
            "VernacCanonical",
            "c8e13ad37555d7e21f377ace252393df47527b98"
        ],
        [
            "Coercion unitAlgType : type >-> GRing.UnitAlgebra.type.",
            "VernacCoercion",
            "99da0d8d2eef74cfe02eb7195c02e87c8408947f"
        ],
        [
            "Canonical unitAlgType.",
            "VernacCanonical",
            "dc8b91f44ee0029eada946f9b1526cf7274e957e"
        ],
        [
            "Coercion vectType : type >-> Vector.type.",
            "VernacCoercion",
            "4523914da6c5a8d8d9130c5144d16afb0e57942e"
        ],
        [
            "Canonical vectType.",
            "VernacCanonical",
            "c1ed9e45c59815f9a764670edb025f8ba3df0b85"
        ],
        [
            "Canonical vect_ringType.",
            "VernacCanonical",
            "c7629e0c10e177563213f756ff321a3a7651d8cf"
        ],
        [
            "Canonical vect_unitRingType.",
            "VernacCanonical",
            "f0612856ca1e99dab8f4c7a13c55832397280ab0"
        ],
        [
            "Canonical vect_lalgType.",
            "VernacCanonical",
            "0ee003176010b3ae4374fcc08d18353e820dd8a2"
        ],
        [
            "Canonical vect_algType.",
            "VernacCanonical",
            "44303e393e3f3bcacc8a1ea7a502e1c026177999"
        ],
        [
            "Canonical vect_unitAlgType.",
            "VernacCanonical",
            "611a8434241c1f3f1ecfeb07c2d3daf4a1c67a07"
        ],
        [
            "Notation FalgType R := (type (Phant R)).",
            "VernacSyntacticDefinition",
            "eea7bafb563e3ac3c767c2d3b8c958b9f6f875a3"
        ],
        [
            "Notation \"[ 'FalgType' R 'of' A ]\" := (@pack _ (Phant R) A _ _ id _ _ id) (at level 0, format \"[ 'FalgType' R 'of' A ]\") : form_scope.",
            "VernacNotation",
            "ca6d77c996c2ed60be48410c784c9161328d5223"
        ],
        [
            "Notation \"[ 'FalgType' R 'of' A 'for' vT ]\" := (@pack _ (Phant R) A _ _ id vT _ idfun) (at level 0, format \"[ 'FalgType' R 'of' A 'for' vT ]\") : form_scope.",
            "VernacNotation",
            "bb5d13898a80be2b66b7e5284c9ce2c7b4781f35"
        ],
        [
            "Notation FalgUnitRingType T := (@BaseType _ _ T _ _ id _ (Phant T) id).",
            "VernacSyntacticDefinition",
            "59d084f26f824bcca73f4957dd60d7aa4302310e"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Falgebra.",
            "VernacEndSegment",
            "194503290a95c79d7d8af5ebc716f3c5874d3810"
        ],
        [
            "Export Falgebra.Exports.",
            "VernacImport",
            "fd67522ae57c2250bbdaf5f6e0d70018b770df3d"
        ],
        [
            "Notation \"1\" := (vline 1) : vspace_scope.",
            "VernacNotation",
            "72a177cb834077dd2b756cfcbfba5575ad523f87"
        ],
        [
            "Canonical matrix_FalgType (K : fieldType) n := [FalgType K of 'M[K]_n.+1].",
            "VernacDefinition",
            "ad34edcfddd8566c1f6d1b4fa7dd84f540f7fc03"
        ],
        [
            "Canonical regular_FalgType (R : comUnitRingType) := [FalgType R of R^o].",
            "VernacDefinition",
            "5436b6a79e11a8fab5182907bb6a35419a5cc294"
        ],
        [
            "Lemma regular_fullv (K : fieldType) : (fullv = 1 :> {vspace K^o})%VS.",
            "VernacStartTheoremProof",
            "4812e79098e3b336ae6e40ebbb16d6d77def3ea9"
        ],
        [
            "by apply/esym/eqP; rewrite eqEdim subvf dim_vline oner_eq0 dimvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Proper.",
            "VernacBeginSection",
            "9a150e6c9bf6a8aced94b8e16fd1866700e54808"
        ],
        [
            "Variables (R : ringType) (aT : FalgType R).",
            "VernacAssumption",
            "c0238dbbc157147df55022d1b2c57ee6af982136"
        ],
        [
            "Import Vector.InternalTheory.",
            "VernacImport",
            "e0b0b41bcce02614b619fff784a46cb0153926c7"
        ],
        [
            "Lemma FalgType_proper : Vector.dim aT > 0.",
            "VernacStartTheoremProof",
            "5d30078f9fdfb7d70b0d9a29d2b147287960b91b"
        ],
        [
            "rewrite lt0n; apply: contraNneq (oner_neq0 aT) => aT0.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by apply/eqP/v2r_inj; do 2!move: (v2r _); rewrite aT0 => u v; rewrite !thinmx0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Proper.",
            "VernacEndSegment",
            "888ca636fcf17dc3e946bf2c0088a041091f7a81"
        ],
        [
            "Module FalgLfun.",
            "VernacDefineModule",
            "68fd515c66bc32e2c63347c1c403f05e566af1f3"
        ],
        [
            "Section FalgLfun.",
            "VernacBeginSection",
            "765adf10329b348aaa30ba784d4bdc0849be16d2"
        ],
        [
            "Variable (R : comRingType) (aT : FalgType R).",
            "VernacAssumption",
            "eb40378d567994e027a138c987c227777ea38c40"
        ],
        [
            "Implicit Types f g : 'End(aT).",
            "VernacReserve",
            "0e0e95d47b56c631b85d34dd628cf0b5888113ac"
        ],
        [
            "Canonical Falg_fun_ringType := lfun_ringType (FalgType_proper aT).",
            "VernacDefinition",
            "4184ef91f41cccc445527e81e51ab67c0954c677"
        ],
        [
            "Canonical Falg_fun_lalgType := lfun_lalgType (FalgType_proper aT).",
            "VernacDefinition",
            "d9027699ab9425a3daac5afb256b2c58b2027049"
        ],
        [
            "Canonical Falg_fun_algType := lfun_algType (FalgType_proper aT).",
            "VernacDefinition",
            "2e0b3a203fda6f0566c7984e5490a6178c85e8cf"
        ],
        [
            "Lemma lfun_mulE f g u : (f * g) u = g (f u).",
            "VernacStartTheoremProof",
            "85e757a53f302efc8e590f1f6d843ae5ccb6a2e8"
        ],
        [
            "exact: lfunE.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lfun_compE f g : (g \\o f)%VF = f * g.",
            "VernacStartTheoremProof",
            "159c3f518b30a9eb7dda467308a9db07f5e681c8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FalgLfun.",
            "VernacEndSegment",
            "71c7de0c510579a8fe8865fcbdec8020d64c5172"
        ],
        [
            "Section InvLfun.",
            "VernacBeginSection",
            "f87e4eb461a1174d6838fc4b1e981116ef5a7a71"
        ],
        [
            "Variable (K : fieldType) (aT : FalgType K).",
            "VernacAssumption",
            "a8d0ba259eeeb9a3b93ae29c3b791c7edec975ce"
        ],
        [
            "Implicit Types f g : 'End(aT).",
            "VernacReserve",
            "0e0e95d47b56c631b85d34dd628cf0b5888113ac"
        ],
        [
            "Definition lfun_invr f := if lker f == 0%VS then f^-1%VF else f.",
            "VernacDefinition",
            "25e80fc6c706af7be7dd6a849e88bedd573a6f6c"
        ],
        [
            "Lemma lfun_mulVr f : lker f == 0%VS -> f^-1%VF * f = 1.",
            "VernacStartTheoremProof",
            "57ab08a8aad39958097800dbebd0346a36052423"
        ],
        [
            "exact: lker0_compfV.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lfun_mulrV f : lker f == 0%VS -> f * f^-1%VF = 1.",
            "VernacStartTheoremProof",
            "b2d9fffd6ed16e8681f2334d8a4b3a725a092514"
        ],
        [
            "exact: lker0_compVf.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lfun_mulRVr f : lker f == 0%VS -> lfun_invr f * f = 1.",
            "VernacStartTheoremProof",
            "c13c46aea4980c7cdb552c2012e13aaf58b42b44"
        ],
        [
            "by move=> Uf; rewrite /lfun_invr Uf lfun_mulVr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lfun_mulrRV f : lker f == 0%VS -> f * lfun_invr f = 1.",
            "VernacStartTheoremProof",
            "d3639e7e4668c325addb190fcb178ce88b969310"
        ],
        [
            "by move=> Uf; rewrite /lfun_invr Uf lfun_mulrV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact lfun_unitrP f g : g * f = 1 /\\ f * g = 1 -> lker f == 0%VS.",
            "VernacStartTheoremProof",
            "b04dce288f4b1d049b7f3e66903e6f4b2f7cf91c"
        ],
        [
            "case=> _ fK; apply/lker0P; apply: can_inj (g) _ => u.",
            "VernacExtend",
            "d0ca9c3fd2da32fc51e6c7224f197d333e09c6a3"
        ],
        [
            "by rewrite -lfun_mulE fK lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lfun_invr_out f : lker f != 0%VS -> lfun_invr f = f.",
            "VernacStartTheoremProof",
            "7d8b136598343db5cbad310982c1c9e42dd80fb5"
        ],
        [
            "by rewrite /lfun_invr => /negPf->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lfun_unitRingMixin := UnitRingMixin lfun_mulRVr lfun_mulrRV lfun_unitrP lfun_invr_out.",
            "VernacDefinition",
            "5ef7505b3b77fbaeddc92b546b01e450f5521686"
        ],
        [
            "Canonical lfun_unitRingType := UnitRingType 'End(aT) lfun_unitRingMixin.",
            "VernacDefinition",
            "bf9ccece6a2c68da15f26eeb45dee7ef77644fbf"
        ],
        [
            "Canonical lfun_unitAlgType := [unitAlgType K of 'End(aT)].",
            "VernacDefinition",
            "47e0a08198a3ee6af91a8bddd48ca7eef75951ae"
        ],
        [
            "Canonical Falg_fun_FalgType := [FalgType K of 'End(aT)].",
            "VernacDefinition",
            "2a5dc20abd8213f4e8192d7b7216c0d0e101e614"
        ],
        [
            "Lemma lfun_invE f : lker f == 0%VS -> f^-1%VF = f^-1.",
            "VernacStartTheoremProof",
            "1e2bc7386cd19e5a942f9cca0cd0f2c82f4d526f"
        ],
        [
            "by rewrite /f^-1 /= /lfun_invr => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InvLfun.",
            "VernacEndSegment",
            "2113306db29d670e32379f6bff77d08a659e9f73"
        ],
        [
            "End FalgLfun.",
            "VernacEndSegment",
            "71c7de0c510579a8fe8865fcbdec8020d64c5172"
        ],
        [
            "Section FalgebraTheory.",
            "VernacBeginSection",
            "9b47582afb544905691d8fff9753fd62770d56ab"
        ],
        [
            "Variables (K : fieldType) (aT : FalgType K).",
            "VernacAssumption",
            "a8d0ba259eeeb9a3b93ae29c3b791c7edec975ce"
        ],
        [
            "Implicit Types (u v : aT) (U V W : {vspace aT}).",
            "VernacReserve",
            "5a0cf606bd4c875b8456e956d55a6b0edf2e0953"
        ],
        [
            "Import FalgLfun.",
            "VernacImport",
            "936b73a512a00530f6e9964aa2514e84b842e3d6"
        ],
        [
            "Definition amull u : 'End(aT) := linfun (u \\*o @idfun aT).",
            "VernacDefinition",
            "509a6493cdd473b5422fdffdefc9aaaa913f3de5"
        ],
        [
            "Definition amulr u : 'End(aT) := linfun (u \\o* @idfun aT).",
            "VernacDefinition",
            "2dc7df2da5fb2f4c13ac59a3350a4af41bb7d3ad"
        ],
        [
            "Lemma amull_inj : injective amull.",
            "VernacStartTheoremProof",
            "e44f526e90c2d95070891e44479130d75145d640"
        ],
        [
            "by move=> u v /lfunP/(_ 1); rewrite !lfunE /= !mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma amulr_inj : injective amulr.",
            "VernacStartTheoremProof",
            "faf6c908a0ceece3e5bb1e433a92b28dbac875fd"
        ],
        [
            "by move=> u v /lfunP/(_ 1); rewrite !lfunE /= !mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact amull_is_linear : linear amull.",
            "VernacStartTheoremProof",
            "0fecf7c3ad2aaa7fb8c89a4f06fe85d6efd28817"
        ],
        [
            "move=> a u v; apply/lfunP => w.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite !lfunE /= scale_lfunE !lfunE /= mulrDl scalerAl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical amull_additive := Eval hnf in Additive amull_is_linear.",
            "VernacDefinition",
            "ee104aadb4e108b5bfc260d3387f83600e89720c"
        ],
        [
            "Canonical amull_linear := Eval hnf in AddLinear amull_is_linear.",
            "VernacDefinition",
            "40eae80e9bc6de2e81e3e2760dc71f5715c47a94"
        ],
        [
            "Lemma amull1 : amull 1 = \\1%VF.",
            "VernacStartTheoremProof",
            "fd67629cdca981185fd6aaf75f17c72bb44313d9"
        ],
        [
            "by apply/lfunP => z; rewrite id_lfunE lfunE /= mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma amullM u v : (amull (u * v) = amull v * amull u)%VF.",
            "VernacStartTheoremProof",
            "e4dc508f1795a38fa9ba5c40bde111e32884ff7f"
        ],
        [
            "by apply/lfunP => w; rewrite comp_lfunE !lfunE /= mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma amulr_is_lrmorphism : lrmorphism amulr.",
            "VernacStartTheoremProof",
            "5034b9c7c3b708bd59e63cccf477337f113e8145"
        ],
        [
            "split=> [|a u]; last by apply/lfunP=> w; rewrite scale_lfunE !lfunE /= scalerAr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split=> [u v|]; first by apply/lfunP => w; do 3!rewrite !lfunE /= ?mulrBr.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split=> [u v|]; last by apply/lfunP=> w; rewrite id_lfunE !lfunE /= mulr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/lfunP=> w; rewrite comp_lfunE !lfunE /= mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical amulr_additive := Eval hnf in Additive amulr_is_lrmorphism.",
            "VernacDefinition",
            "cda10915a8d48e955f9830f7cbcb6fb3d7efd5b0"
        ],
        [
            "Canonical amulr_linear := Eval hnf in AddLinear amulr_is_lrmorphism.",
            "VernacDefinition",
            "e790083b4d32444396a4665dd80a8ec01f618984"
        ],
        [
            "Canonical amulr_rmorphism := Eval hnf in AddRMorphism amulr_is_lrmorphism.",
            "VernacDefinition",
            "7a4dfc0f3ca89f31aaf10eae7b603b7cd57eb734"
        ],
        [
            "Canonical amulr_lrmorphism := Eval hnf in LRMorphism amulr_is_lrmorphism.",
            "VernacDefinition",
            "ee26afd0e882b776dbbd66663836e0592f75f579"
        ],
        [
            "Lemma lker0_amull u : u \\is a GRing.unit -> lker (amull u) == 0%VS.",
            "VernacStartTheoremProof",
            "a5c0b5cfcb12e1860a60579614df3902bb7e5261"
        ],
        [
            "by move=> Uu; apply/lker0P=> v w; rewrite !lfunE; apply: mulrI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lker0_amulr u : u \\is a GRing.unit -> lker (amulr u) == 0%VS.",
            "VernacStartTheoremProof",
            "ed66d6e569713c41736d6ef9ba8a16ea68e97cb7"
        ],
        [
            "by move=> Uu; apply/lker0P=> v w; rewrite !lfunE; apply: mulIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lfun1_poly (p : {poly aT}) : map_poly \\1%VF p = p.",
            "VernacStartTheoremProof",
            "baab1bb938addff2972f12b469e4b7f49f6b99eb"
        ],
        [
            "by apply: map_poly_id => u _; apply: id_lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact prodv_key : unit.",
            "VernacStartTheoremProof",
            "e71ee7bb1f78e5af744f5ea848bde9625426efcd"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition prodv := locked_with prodv_key (fun U V => <<allpairs *%R (vbasis U) (vbasis V)>>%VS).",
            "VernacDefinition",
            "c1bdf4f6c06dc8f572333563a1910c44418e34d7"
        ],
        [
            "Canonical prodv_unlockable := [unlockable fun prodv].",
            "VernacDefinition",
            "104f27b363b11ac39446edbe5d110ba1bb43d24e"
        ],
        [
            "Local Notation \"A * B\" := (prodv A B) : vspace_scope.",
            "VernacNotation",
            "c68da5da7cbc20ca05e9f6f8c42f8f7a39dea770"
        ],
        [
            "Lemma memv_mul U V : {in U & V, forall u v, u * v \\in (U * V)%VS}.",
            "VernacStartTheoremProof",
            "bbe15deffb408a6088ad42250cbf44e9325a0818"
        ],
        [
            "move=> u v /coord_vbasis-> /coord_vbasis->.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite mulr_suml; apply: memv_suml => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite mulr_sumr; apply: memv_suml => j _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite -scalerAl -scalerAr !memvZ // [prodv]unlock memv_span //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/allpairsP; exists ((vbasis U)`_i, (vbasis V)`_j); rewrite !memt_nth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodvP {U V W} : reflect {in U & V, forall u v, u * v \\in W} (U * V <= W)%VS.",
            "VernacStartTheoremProof",
            "f72338d144372c42bca981506bb34ecf41fa28eb"
        ],
        [
            "apply: (iffP idP) => [sUVW u v Uu Vv | sUVW].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite (subvP sUVW) ?memv_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite [prodv]unlock; apply/span_subvP=> _ /allpairsP[[u v] /= [Uu Vv ->]].",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite sUVW ?vbasis_mem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodv_line u v : (<[u]> * <[v]> = <[u * v]>)%VS.",
            "VernacStartTheoremProof",
            "94db8962fe4de9e308023919be4ca8a62a3043bc"
        ],
        [
            "apply: subv_anti; rewrite -memvE memv_mul ?memv_line // andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply/prodvP=> _ _ /vlineP[a ->] /vlineP[b ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -scalerAr -scalerAl !memvZ ?memv_line.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dimv1: \\dim (1%VS : {vspace aT}) = 1%N.",
            "VernacStartTheoremProof",
            "f549bf4b9d2f544558f14ab5353def85ac9785ae"
        ],
        [
            "by rewrite dim_vline oner_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dim_prodv U V : \\dim (U * V) <= \\dim U * \\dim V.",
            "VernacStartTheoremProof",
            "45a581582d5c0ed4b87df4af2e73da5044e9323c"
        ],
        [
            "by rewrite unlock (leq_trans (dim_span _)) ?size_tuple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vspace1_neq0 : (1 != 0 :> {vspace aT})%VS.",
            "VernacStartTheoremProof",
            "454b4d272bc90d9817e016cc9c744d4a1a22ddbd"
        ],
        [
            "by rewrite -dimv_eq0 dimv1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vbasis1 : exists2 k, k != 0 & vbasis 1 = [:: k%:A] :> seq aT.",
            "VernacStartTheoremProof",
            "175e4ba506643395725b54e26d419fbda1229a7c"
        ],
        [
            "move: (vbasis 1) (@vbasisP K aT 1); rewrite dim_vline oner_neq0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case/tupleP=> x X0; rewrite {X0}tuple0 => defX; have Xx := mem_head x nil.",
            "VernacExtend",
            "d910db0b20b765a581ab66c37a970a135e84f8ff"
        ],
        [
            "have /vlineP[k def_x] := basis_mem defX Xx; exists k; last by rewrite def_x.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have:= basis_not0 defX Xx; rewrite def_x scaler_eq0 oner_eq0 orbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prod0v : left_zero 0%VS prodv.",
            "VernacStartTheoremProof",
            "74a182ffa6b822b28db20af3e965a8d384852d8b"
        ],
        [
            "move=> U; apply/eqP; rewrite -dimv_eq0 -leqn0 (leq_trans (dim_prodv 0 U)) //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite dimv0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodv0 : right_zero 0%VS prodv.",
            "VernacStartTheoremProof",
            "399f5fd068192a928bec72fdb0aeae4124fd9a5c"
        ],
        [
            "move=> U; apply/eqP; rewrite -dimv_eq0 -leqn0 (leq_trans (dim_prodv U 0)) //.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite dimv0 muln0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical prodv_muloid := Monoid.MulLaw prod0v prodv0.",
            "VernacDefinition",
            "9542c008d319d6e56f3d6e6569d0f07172337ea9"
        ],
        [
            "Lemma prod1v : left_id 1%VS prodv.",
            "VernacStartTheoremProof",
            "ffa3e7989e3fbcdb9584c6b5d555f29d400c4610"
        ],
        [
            "move=> U; apply/subv_anti/andP; split.",
            "VernacExtend",
            "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
        ],
        [
            "by apply/prodvP=> _ u /vlineP[a ->] Uu; rewrite mulr_algl memvZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/subvP=> u Uu; rewrite -[u]mul1r memv_mul ?memv_line.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodv1 : right_id 1%VS prodv.",
            "VernacStartTheoremProof",
            "fc3d83404fcb6aa7e62fd867257a2531e7a7ecd4"
        ],
        [
            "move=> U; apply/subv_anti/andP; split.",
            "VernacExtend",
            "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
        ],
        [
            "by apply/prodvP=> u _ Uu /vlineP[a ->]; rewrite mulr_algr memvZ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/subvP=> u Uu; rewrite -[u]mulr1 memv_mul ?memv_line.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodvS U1 U2 V1 V2 : (U1 <= U2 -> V1 <= V2 -> U1 * V1 <= U2 * V2)%VS.",
            "VernacStartTheoremProof",
            "de3671cf9716cddaa6b1574c529e78f82fe35eba"
        ],
        [
            "move/subvP=> sU12 /subvP sV12; apply/prodvP=> u v Uu Vv.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite memv_mul ?sU12 ?sV12.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodvSl U1 U2 V : (U1 <= U2 -> U1 * V <= U2 * V)%VS.",
            "VernacStartTheoremProof",
            "c0d3335041916dee4a60dbb622261fa3a3eca8cf"
        ],
        [
            "by move/prodvS->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodvSr U V1 V2 : (V1 <= V2 -> U * V1 <= U * V2)%VS.",
            "VernacStartTheoremProof",
            "6caf4bed3005dd4ea9ffd58ba53b79643c645a4f"
        ],
        [
            "exact: prodvS.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodvDl : left_distributive prodv addv.",
            "VernacStartTheoremProof",
            "b2f5ddef962d8b8afafc999d9ef3a63278da0d78"
        ],
        [
            "move=> U1 U2 V; apply/esym/subv_anti/andP; split.",
            "VernacExtend",
            "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
        ],
        [
            "by rewrite subv_add 2?prodvS ?addvSl ?addvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/prodvP=> _ v /memv_addP[u1 Uu1 [u2 Uu2 ->]] Vv.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite mulrDl memv_add ?memv_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodvDr : right_distributive prodv addv.",
            "VernacStartTheoremProof",
            "509056f1ecdb8f8ab6d6d9366d8d2e5a60995180"
        ],
        [
            "move=> U V1 V2; apply/esym/subv_anti/andP; split.",
            "VernacExtend",
            "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
        ],
        [
            "by rewrite subv_add 2?prodvS ?addvSl ?addvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/prodvP=> u _ Uu /memv_addP[v1 Vv1 [v2 Vv2 ->]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite mulrDr memv_add ?memv_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical addv_addoid := Monoid.AddLaw prodvDl prodvDr.",
            "VernacDefinition",
            "6ac8cd24ffca9df6781d988464a0157fb4f8938b"
        ],
        [
            "Lemma prodvA : associative prodv.",
            "VernacStartTheoremProof",
            "7f41ea179a367930eb2b090e988484757472aa07"
        ],
        [
            "move=> U V W; rewrite -(span_basis (vbasisP U)) span_def !big_distrl /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: eq_bigr => u _; rewrite -(span_basis (vbasisP W)) span_def !big_distrr.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: eq_bigr => w _; rewrite -(span_basis (vbasisP V)) span_def /=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite !(big_distrl, big_distrr) /=; apply: eq_bigr => v _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite !prodv_line mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical prodv_monoid := Monoid.Law prodvA prod1v prodv1.",
            "VernacDefinition",
            "dd6c43fc387a796b6b366c12e7406694066bd6fe"
        ],
        [
            "Definition expv U n := iterop n.+1.-1 prodv U 1%VS.",
            "VernacDefinition",
            "1cd4727728cb1be04cd54671dce0b36c62d8fc38"
        ],
        [
            "Local Notation \"A ^+ n\" := (expv A n) : vspace_scope.",
            "VernacNotation",
            "08b2f7e5b8331f870f40ca22232f24eb4e1b0252"
        ],
        [
            "Lemma expv0 U : (U ^+ 0 = 1)%VS.",
            "VernacStartTheoremProof",
            "511a8b4f7926b13ea1813484c103dc150dba75fb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expv1 U : (U ^+ 1 = U)%VS.",
            "VernacStartTheoremProof",
            "305a84e10a52decab5a1c5f010a3e9394526e21f"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expv2 U : (U ^+ 2 = U * U)%VS.",
            "VernacStartTheoremProof",
            "745c8f768db0c1a1dcd6e6630b23bd6e7e6b4d2a"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expvSl U n : (U ^+ n.+1 = U * U ^+ n)%VS.",
            "VernacStartTheoremProof",
            "1a3c8cd3429057ce007aa788b3f455f27046c7ee"
        ],
        [
            "by case: n => //; rewrite prodv1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expv0n n : (0 ^+ n = if n is _.+1 then 0 else 1)%VS.",
            "VernacStartTheoremProof",
            "b1ba3de134fde4c43242d887bf22b90e57573495"
        ],
        [
            "by case: n => // n; rewrite expvSl prod0v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expv1n n : (1 ^+ n = 1)%VS.",
            "VernacStartTheoremProof",
            "8d29de4183f1c0cb451116374f418dc225cb38ca"
        ],
        [
            "by elim: n => // n IHn; rewrite expvSl IHn prodv1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expvD U m n : (U ^+ (m + n) = U ^+ m * U ^+ n)%VS.",
            "VernacStartTheoremProof",
            "e4eb306d1c7dead3455f2d42ae53585ce71a7592"
        ],
        [
            "by elim: m => [|m IHm]; rewrite ?prod1v // !expvSl IHm prodvA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expvSr U n : (U ^+ n.+1 = U ^+ n * U)%VS.",
            "VernacStartTheoremProof",
            "723d1127488f3a42cc0337902809bfd6fa93e08c"
        ],
        [
            "by rewrite -addn1 expvD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expvM U m n : (U ^+ (m * n) = U ^+ m ^+ n)%VS.",
            "VernacStartTheoremProof",
            "258e8b26186a565a40e2c8dedc9707865599fa27"
        ],
        [
            "by elim: n => [|n IHn]; rewrite ?muln0 // mulnS expvD IHn expvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expvS U V n : (U <= V -> U ^+ n <= V ^+ n)%VS.",
            "VernacStartTheoremProof",
            "3f5190b18c1ead8a6e3bc8ae6f2ddbca0e6e30ab"
        ],
        [
            "move=> sUV; elim: n => [|n IHn]; first by rewrite !expv0 subvv.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !expvSl prodvS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expv_line u n : (<[u]> ^+ n = <[u ^+ n]>)%VS.",
            "VernacStartTheoremProof",
            "f60834f7e8a241e76b8406adb9a01ee244968573"
        ],
        [
            "elim: n => [|n IH]; first by rewrite expr0 expv0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS expvSl IH prodv_line.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition centraliser1_vspace u := lker (amulr u - amull u).",
            "VernacDefinition",
            "f1c738e111602cb3f32e25e3385ab2a7557f86ec"
        ],
        [
            "Local Notation \"'C [ u ]\" := (centraliser1_vspace u) : vspace_scope.",
            "VernacNotation",
            "a0c65d0ae4f04306e71f3431d783674ab03adb28"
        ],
        [
            "Definition centraliser_vspace V := (\\bigcap_i 'C[tnth (vbasis V) i])%VS.",
            "VernacDefinition",
            "1a7d926b6c38ac29b0fc9db85287d956f5312d9f"
        ],
        [
            "Local Notation \"'C ( V )\" := (centraliser_vspace V) : vspace_scope.",
            "VernacNotation",
            "37bc489ce3ce70a6c000bf104ac8b95c60c54c03"
        ],
        [
            "Definition center_vspace V := (V :&: 'C(V))%VS.",
            "VernacDefinition",
            "06a8bafea68a6f867a8837ce9ca30626c392e9c5"
        ],
        [
            "Local Notation \"'Z ( V )\" := (center_vspace V) : vspace_scope.",
            "VernacNotation",
            "2855a31535eaccef6cce2c96f365fb7384ff535d"
        ],
        [
            "Lemma cent1vP u v : reflect (u * v = v * u) (u \\in 'C[v]%VS).",
            "VernacStartTheoremProof",
            "33d4ec3c3dbb4ebc690d8c9e7ab8b59678b77298"
        ],
        [
            "by rewrite (sameP eqlfunP eqP) !lfunE /=; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cent1v1 u : 1 \\in 'C[u]%VS.",
            "VernacStartTheoremProof",
            "468519836eec1be48acdcc705aa859a78767ac5d"
        ],
        [
            "by apply/cent1vP; rewrite commr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cent1v_id u : u \\in 'C[u]%VS.",
            "VernacStartTheoremProof",
            "88f701f2f13b21a0de39131895df71702bc092f9"
        ],
        [
            "exact/cent1vP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cent1vX u n : u ^+ n \\in 'C[u]%VS.",
            "VernacStartTheoremProof",
            "5340e463ada2802c02a70487c4240bd94de508dc"
        ],
        [
            "exact/cent1vP/esym/commrX.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cent1vC u v : (u \\in 'C[v])%VS = (v \\in 'C[u])%VS.",
            "VernacStartTheoremProof",
            "2d2c3c334f94620616025f2717ac5dff9dbb63e4"
        ],
        [
            "exact/cent1vP/cent1vP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma centvP u V : reflect {in V, forall v, u * v = v * u} (u \\in 'C(V))%VS.",
            "VernacStartTheoremProof",
            "980ea19fbead354ce9ff817ce0c12d1b8d774944"
        ],
        [
            "apply: (iffP subv_bigcapP) => [cVu y /coord_vbasis-> | cVu i _].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply/esym/cent1vP/rpred_sum=> i _; apply: rpredZ.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite -tnth_nth cent1vC memvE cVu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exact/cent1vP/cVu/vbasis_mem/mem_tnth.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma centvsP U V : reflect {in U & V, commutative *%R} (U <= 'C(V))%VS.",
            "VernacStartTheoremProof",
            "da803396975ac4f15446b7044dab76f07b4b6c2d"
        ],
        [
            "by apply: (iffP subvP) => [cUV u v | cUV u] /cUV-/centvP; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subv_cent1 U v : (U <= 'C[v])%VS = (v \\in 'C(U)%VS).",
            "VernacStartTheoremProof",
            "55b15e3b67addd2aa68effef1107fdbea7b0d7e4"
        ],
        [
            "by apply/subvP/centvP=> cUv u Uu; apply/cent1vP; rewrite 1?cent1vC cUv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma centv1 V : 1 \\in 'C(V)%VS.",
            "VernacStartTheoremProof",
            "79b89ad2cda34a5fb7ffd1048bb4c723686042bc"
        ],
        [
            "by apply/centvP=> v _; rewrite commr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma centvX V u n : u \\in 'C(V)%VS -> u ^+ n \\in 'C(V)%VS.",
            "VernacStartTheoremProof",
            "63e1d5a75650e09fb0925a36f3b9867ed8d3950d"
        ],
        [
            "by move/centvP=> cVu; apply/centvP=> v /cVu/esym/commrX->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma centvC U V : (U <= 'C(V))%VS = (V <= 'C(U))%VS.",
            "VernacStartTheoremProof",
            "0dd0b65e8fce9a739e9d1b01af379856cc9544ca"
        ],
        [
            "by apply/centvsP/centvsP=> cUV u v UVu /cUV->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma centerv_sub V : ('Z(V) <= V)%VS.",
            "VernacStartTheoremProof",
            "7e0c50104151ef4c15d55f8119150da4bd5e77f6"
        ],
        [
            "exact: capvSl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cent_centerv V : (V <= 'C('Z(V)))%VS.",
            "VernacStartTheoremProof",
            "ffde710e21036c63f4d37508b4a5655deef5a703"
        ],
        [
            "by rewrite centvC capvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_algid e U := [/\\ e \\in U, e != 0 & {in U, forall u, e * u = u /\\ u * e = u}].",
            "VernacDefinition",
            "b347875a7a0198cb8f3900a7366e86c81653fa9b"
        ],
        [
            "Fact algid_decidable U : decidable (exists e, is_algid e U).",
            "VernacStartTheoremProof",
            "db7ad0f9ba5f994abb8b15442b3791a37fc378d4"
        ],
        [
            "have [-> | nzU] := eqVneq U 0%VS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by right=> [[e []]]; rewrite memv0 => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose X := vbasis U; pose feq f1 f2 := [tuple of map f1 X ++ map f2 X].",
            "VernacExtend",
            "311b833fadff89b2f7ed817d3cd7cb6971c96a1e"
        ],
        [
            "have feqL f i: tnth (feq _ f _) (lshift _ i) = f X`_i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "set v := f _; rewrite (tnth_nth v) /= nth_cat size_map size_tuple.",
            "VernacExtend",
            "8460a73fe74726b8e94ff0752da65e8d48f68f26"
        ],
        [
            "by rewrite ltn_ord (nth_map 0) ?size_tuple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have feqR f i: tnth (feq _ _ f) (rshift _ i) = f X`_i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "set v := f _; rewrite (tnth_nth v) /= nth_cat size_map size_tuple.",
            "VernacExtend",
            "8460a73fe74726b8e94ff0752da65e8d48f68f26"
        ],
        [
            "by rewrite ltnNge leq_addr addKn /= (nth_map 0) ?size_tuple.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: decP (vsolve_eq (feq _ amulr amull) (feq _ id id) U) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: (iffP (vsolve_eqP _ _ _)) => [[e Ue id_e] | [e [Ue _ id_e]]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "suffices idUe: {in U, forall u, e * u = u /\\ u * e = u}.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "exists e; split=> //; apply: contraNneq nzU => e0; rewrite -subv0.",
            "VernacExtend",
            "c21ab6459fb064356fa60ae7adf41b41e8ff304e"
        ],
        [
            "by apply/subvP=> u /idUe[<- _]; rewrite e0 mul0r mem0v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> u /coord_vbasis->; rewrite mulr_sumr mulr_suml.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "split; apply/eq_bigr=> i _; rewrite -(scalerAr, scalerAl); congr (_ *: _).",
            "VernacExtend",
            "e714d7419beb56c7907eea56133fc9c743c68f0d"
        ],
        [
            "by have:= id_e (lshift _ i); rewrite !feqL lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by have:= id_e (rshift _ i); rewrite !feqR lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have{id_e} /all_and2[ideX idXe]:= id_e _ (vbasis_mem (mem_tnth _ X)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists e => // k; rewrite -[k]splitK.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by case: (split k) => i; rewrite !(feqL, feqR) lfunE /= -tnth_nth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition has_algid : pred {vspace aT} := algid_decidable.",
            "VernacDefinition",
            "06615d44249e8ae89e0136b457cd4de3a6ebff67"
        ],
        [
            "Lemma has_algidP {U} : reflect (exists e, is_algid e U) (has_algid U).",
            "VernacStartTheoremProof",
            "1b0f95bd419b7a3f664611dac2d69747ec226cba"
        ],
        [
            "exact: sumboolP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma has_algid1 U : 1 \\in U -> has_algid U.",
            "VernacStartTheoremProof",
            "978f6061cf042456605a581c64fa5a1f04c5fd07"
        ],
        [
            "move=> U1; apply/has_algidP; exists 1; split; rewrite ?oner_eq0 // => u _.",
            "VernacExtend",
            "ad8afcba0dec932a3c337ca8276cb5e940ffdb6c"
        ],
        [
            "by rewrite mulr1 mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_aspace U := has_algid U && (U * U <= U)%VS.",
            "VernacDefinition",
            "aef4aa9be723a28ac91b1efb26a8c9863ef04c96"
        ],
        [
            "Structure aspace := ASpace {asval :> {vspace aT}; _ : is_aspace asval}.",
            "VernacInductive",
            "176d58dbd1c72a710ad33ce6e33031547553e2c8"
        ],
        [
            "Definition aspace_of of phant aT := aspace.",
            "VernacDefinition",
            "b20cd16e7263a292b82b5f9a82cb630da376e301"
        ],
        [
            "Local Notation \"{ 'aspace' T }\" := (aspace_of (Phant T)) : type_scope.",
            "VernacNotation",
            "a0554e5b7d76bfa26539010703c333e844a1b592"
        ],
        [
            "Canonical aspace_subType := Eval hnf in [subType for asval].",
            "VernacDefinition",
            "33dfab7ef8075e3c7231fb639a2e270291ae4a5c"
        ],
        [
            "Definition aspace_eqMixin := [eqMixin of aspace by <:].",
            "VernacDefinition",
            "f7ed54d0e8b06ab205c6b26c3edf13ea85293ebd"
        ],
        [
            "Canonical aspace_eqType := Eval hnf in EqType aspace aspace_eqMixin.",
            "VernacDefinition",
            "e3db1815cd20168874e61251dad9a0a324c105b4"
        ],
        [
            "Definition aspace_choiceMixin := [choiceMixin of aspace by <:].",
            "VernacDefinition",
            "d2afbac8f84366f0d7b3c07683ad90c5736eea92"
        ],
        [
            "Canonical aspace_choiceType := Eval hnf in ChoiceType aspace aspace_choiceMixin.",
            "VernacDefinition",
            "f2a5cd66967fe60a9c21601e608655c86a08afef"
        ],
        [
            "Canonical aspace_of_subType := Eval hnf in [subType of {aspace aT}].",
            "VernacDefinition",
            "ad6caf7ad799b0afbbda790693796f83206a4388"
        ],
        [
            "Canonical aspace_of_eqType := Eval hnf in [eqType of {aspace aT}].",
            "VernacDefinition",
            "d659b32426c65f9b0600fd0305418dda5abaf22b"
        ],
        [
            "Canonical aspace_of_choiceType := Eval hnf in [choiceType of {aspace aT}].",
            "VernacDefinition",
            "c3c4e2f3cfd4879e9081d0a6167a55ed491ce1a6"
        ],
        [
            "Definition clone_aspace U (A : {aspace aT}) := fun algU & phant_id algU (valP A) => @ASpace U algU : {aspace aT}.",
            "VernacDefinition",
            "72994440c0e22198f9b89e14f07246307135d6d6"
        ],
        [
            "Fact aspace1_subproof : is_aspace 1.",
            "VernacStartTheoremProof",
            "9bc417bb4a7766732b9431e4042ffd66c0a8a465"
        ],
        [
            "by rewrite /is_aspace prod1v -memvE has_algid1 memv_line.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical aspace1 : {aspace aT} := ASpace aspace1_subproof.",
            "VernacDefinition",
            "f4644d20018bab47114a0f14d0bd21934d29aeb8"
        ],
        [
            "Lemma aspacef_subproof : is_aspace fullv.",
            "VernacStartTheoremProof",
            "115a39b0aa8a90555bfdf4b50ed66076e7c70151"
        ],
        [
            "by rewrite /is_aspace subvf has_algid1 ?memvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical aspacef : {aspace aT} := ASpace aspacef_subproof.",
            "VernacDefinition",
            "f1f598beae6c8623d07b1b16d969dfd6fd95b532"
        ],
        [
            "Lemma polyOver1P p : reflect (exists q, p = map_poly (in_alg aT) q) (p \\is a polyOver 1%VS).",
            "VernacStartTheoremProof",
            "9405fdfbb031c0fcf33c7534d83eb7c65a0943fd"
        ],
        [
            "apply: (iffP idP) => [/allP/=Qp | [q ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/polyOverP=> j; rewrite coef_map rpredZ ?memv_line.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (map_poly (coord [tuple 1] 0) p).",
            "VernacExtend",
            "6162f8a55cdd539c5c175c6a8994779cc18b00b7"
        ],
        [
            "rewrite -map_poly_comp map_poly_id // => _ /Qp/vlineP[a ->] /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite linearZ /= (coord_free 0) ?mulr1 // seq1_free ?oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FalgebraTheory.",
            "VernacEndSegment",
            "a652c2c67bf6535c27a471d477e13b9c7187b3a2"
        ],
        [
            "Delimit Scope aspace_scope with AS.",
            "VernacDelimiters",
            "f9bea3877997a8297a4f20404c41e9fc52304f3a"
        ],
        [
            "Bind Scope aspace_scope with aspace.",
            "VernacBindScope",
            "1f76841193a38ca5bb84ae25fa262d519993beed"
        ],
        [
            "Bind Scope aspace_scope with aspace_of.",
            "VernacBindScope",
            "9a93824cee56bfc4a3745eba2a7de1a96d15f562"
        ],
        [
            "Arguments asval {K aT} a%AS.",
            "VernacArguments",
            "14294b5853f49fe0a8c5b037ed5fae87576ae834"
        ],
        [
            "Arguments clone_aspace [K aT U%VS A%AS algU] _.",
            "VernacArguments",
            "9c042442fb56394672021fd42a37a001d0873631"
        ],
        [
            "Notation \"{ 'aspace' T }\" := (aspace_of (Phant T)) : type_scope.",
            "VernacNotation",
            "5e13598294fa1ab8d2ae564028809ceec2940092"
        ],
        [
            "Notation \"A * B\" := (prodv A B) : vspace_scope.",
            "VernacNotation",
            "ffa7ce0d297e1d510bc9b8a09852d7770cf4c241"
        ],
        [
            "Notation \"A ^+ n\" := (expv A n) : vspace_scope.",
            "VernacNotation",
            "fbd33ee381a0e711430b48286e8b6be0b8dc634c"
        ],
        [
            "Notation \"'C [ u ]\" := (centraliser1_vspace u) : vspace_scope.",
            "VernacNotation",
            "4ba2b7a19777e1bcb6aac492e54382115099e0ca"
        ],
        [
            "Notation \"'C_ U [ v ]\" := (capv U 'C[v]) : vspace_scope.",
            "VernacNotation",
            "aeffa7d70d75e267f5eb09f6e294accac84cad6a"
        ],
        [
            "Notation \"'C_ ( U ) [ v ]\" := (capv U 'C[v]) (only parsing) : vspace_scope.",
            "VernacNotation",
            "bfda8720068d8d4cb652eac494af1cbe9c15299f"
        ],
        [
            "Notation \"'C ( V )\" := (centraliser_vspace V) : vspace_scope.",
            "VernacNotation",
            "3038e53f1619ad8303ace4d4e67c9e91e7709703"
        ],
        [
            "Notation \"'C_ U ( V )\" := (capv U 'C(V)) : vspace_scope.",
            "VernacNotation",
            "d982d6063ad67bfdff1b8b903d3ca40cfa68f685"
        ],
        [
            "Notation \"'C_ ( U ) ( V )\" := (capv U 'C(V)) (only parsing) : vspace_scope.",
            "VernacNotation",
            "ebb3543d8afbb2217e2bb7e260c3fe4bf64c723d"
        ],
        [
            "Notation \"'Z ( V )\" := (center_vspace V) : vspace_scope.",
            "VernacNotation",
            "b1cee67eddbc856c2aeb53930cb4336fe7106648"
        ],
        [
            "Notation \"1\" := (aspace1 _) : aspace_scope.",
            "VernacNotation",
            "98ac4eae120b48ecf1ef07dd7805e595f3fe1fa2"
        ],
        [
            "Notation \"{ : aT }\" := (aspacef aT) : aspace_scope.",
            "VernacNotation",
            "ad7129e0f9337069cfd174e8780169694eac67de"
        ],
        [
            "Notation \"[ 'aspace' 'of' U ]\" := (@clone_aspace _ _ U _ _ id) (at level 0, format \"[ 'aspace' 'of' U ]\") : form_scope.",
            "VernacNotation",
            "0919e6ffbf39bf9b69ca628587209236ec42acc7"
        ],
        [
            "Notation \"[ 'aspace' 'of' U 'for' A ]\" := (@clone_aspace _ _ U A _ idfun) (at level 0, format \"[ 'aspace' 'of' U 'for' A ]\") : form_scope.",
            "VernacNotation",
            "946964868bc4752496df43ead17736a220bdfd7e"
        ],
        [
            "Arguments prodvP {K aT U V W}.",
            "VernacArguments",
            "9325c706ac2cc875f55401049fe73fb2701b50bc"
        ],
        [
            "Arguments cent1vP {K aT u v}.",
            "VernacArguments",
            "f67bf12ee3ef136d3ba295367d314e55268dd0c6"
        ],
        [
            "Arguments centvP {K aT u V}.",
            "VernacArguments",
            "1ec4dbc87c1e15b9ad4a016d012c2a37ee83f755"
        ],
        [
            "Arguments centvsP {K aT U V}.",
            "VernacArguments",
            "32f6154f566de8fbbdd263a6d024d42aca3b3a5b"
        ],
        [
            "Arguments has_algidP {K aT U}.",
            "VernacArguments",
            "725642edc31ff1cba49c2ac98e8203157fe747b9"
        ],
        [
            "Arguments polyOver1P {K aT p}.",
            "VernacArguments",
            "3ececd57cfc49cca258b954ecd277989fcb232d6"
        ],
        [
            "Section AspaceTheory.",
            "VernacBeginSection",
            "224f371c6f8d181f402415f4c2cb639db6a9e572"
        ],
        [
            "Variables (K : fieldType) (aT : FalgType K).",
            "VernacAssumption",
            "a8d0ba259eeeb9a3b93ae29c3b791c7edec975ce"
        ],
        [
            "Implicit Types (u v e : aT) (U V : {vspace aT}) (A B : {aspace aT}).",
            "VernacReserve",
            "fb2a68067b796efaba47e577b3bebafc15c3cb05"
        ],
        [
            "Import FalgLfun.",
            "VernacImport",
            "936b73a512a00530f6e9964aa2514e84b842e3d6"
        ],
        [
            "Lemma algid_subproof U : {e | e \\in U & has_algid U ==> (U <= lker (amull e - 1) :&: lker (amulr e - 1))%VS}.",
            "VernacStartTheoremProof",
            "7c163f6289b6c9a10385770ec5c74d8236909c22"
        ],
        [
            "apply: sig2W; case: has_algidP => [[e]|]; last by exists 0; rewrite ?mem0v.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=> Ae _ idAe; exists e => //; apply/subvP=> u /idAe[eu_u ue_u].",
            "VernacExtend",
            "c9a31b5c3dbfd076b1a173b39b5981bc72187636"
        ],
        [
            "by rewrite memv_cap !memv_ker !lfun_simp /= eu_u ue_u subrr eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition algid U := s2val (algid_subproof U).",
            "VernacDefinition",
            "8e343fd32c5e75b3d04e8da183f3ca9145637002"
        ],
        [
            "Lemma memv_algid U : algid U \\in U.",
            "VernacStartTheoremProof",
            "9e5de803f1ddc83675fc0aa8c07c703d0edb050a"
        ],
        [
            "by rewrite /algid; case: algid_subproof.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algidl A : {in A, left_id (algid A) *%R}.",
            "VernacStartTheoremProof",
            "12dea0096ab0e866e41dbcbce737dc850109798b"
        ],
        [
            "rewrite /algid; case: algid_subproof => e _ /=; have /andP[-> _] := valP A.",
            "VernacExtend",
            "c7b5d5b8dfbc53121b4f46ce0816fec04d854bef"
        ],
        [
            "move/subvP=> idAe u /idAe/memv_capP[].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite memv_ker !lfun_simp /= subr_eq0 => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algidr A : {in A, right_id (algid A) *%R}.",
            "VernacStartTheoremProof",
            "ffe9f7d3f21c924a06b83737454f47d35c5558b9"
        ],
        [
            "rewrite /algid; case: algid_subproof => e _ /=; have /andP[-> _] := valP A.",
            "VernacExtend",
            "c7b5d5b8dfbc53121b4f46ce0816fec04d854bef"
        ],
        [
            "move/subvP=> idAe u /idAe/memv_capP[_].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite memv_ker !lfun_simp /= subr_eq0 => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitr_algid1 A u : u \\in A -> u \\is a GRing.unit -> algid A = 1.",
            "VernacStartTheoremProof",
            "9ec9c32cb59e149b5baf3c32941204882bc9bc40"
        ],
        [
            "by move=> Eu /mulrI; apply; rewrite mulr1 algidr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algid_eq1 A : (algid A == 1) = (1 \\in A).",
            "VernacStartTheoremProof",
            "aa7a593f35c8c64f80c23641c4a600135bc90002"
        ],
        [
            "by apply/eqP/idP=> [<- | /algidr <-]; rewrite ?memv_algid ?mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algid_neq0 A : algid A != 0.",
            "VernacStartTheoremProof",
            "9fd6a2d67600d215343d6dbca3cade0e3b3eff80"
        ],
        [
            "have /andP[/has_algidP[u [Au nz_u _]] _] := valP A.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contraNneq nz_u => e0; rewrite -(algidr Au) e0 mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dim_algid A : \\dim <[algid A]> = 1%N.",
            "VernacStartTheoremProof",
            "78c1cfae4d5d26437a5814019702979112ee9859"
        ],
        [
            "by rewrite dim_vline algid_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adim_gt0 A : (0 < \\dim A)%N.",
            "VernacStartTheoremProof",
            "8a6c195c53f79a5a2ae3eff96391dd64a394a7a2"
        ],
        [
            "by rewrite -(dim_algid A) dimvS // -memvE ?memv_algid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_asubv0 A : ~~ (A <= 0)%VS.",
            "VernacStartTheoremProof",
            "ceefcc6f5d6f3d13d8d691ba62b5dab323f8f132"
        ],
        [
            "by rewrite subv0 -dimv_eq0 -lt0n adim_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adim1P {A} : reflect (A = <[algid A]>%VS :> {vspace aT}) (\\dim A == 1%N).",
            "VernacStartTheoremProof",
            "891df55aeaf16a2b91eebb4679083947cd2eadf9"
        ],
        [
            "rewrite eqn_leq adim_gt0 -(memv_algid A) andbC -(dim_algid A) -eqEdim eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: eqP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma asubv A : (A * A <= A)%VS.",
            "VernacStartTheoremProof",
            "83ef5ebeee2fc978616f9e36bb4c335675288c56"
        ],
        [
            "by have /andP[] := valP A.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memvM A : {in A &, forall u v, u * v \\in A}.",
            "VernacStartTheoremProof",
            "88eb8cca6e2d6a8287102c8d1f000cbefa61edcc"
        ],
        [
            "exact/prodvP/asubv.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodv_id A : (A * A)%VS = A.",
            "VernacStartTheoremProof",
            "c0aa21f9db52e91f5a65fd12f36f68e8ce695f0a"
        ],
        [
            "apply/eqP; rewrite eqEsubv asubv; apply/subvP=> u Au.",
            "VernacExtend",
            "da24caf87c1bbbad0538b8be68905ec456c78aa7"
        ],
        [
            "by rewrite -(algidl Au) memv_mul // memv_algid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prodv_sub U V A : (U <= A -> V <= A -> U * V <= A)%VS.",
            "VernacStartTheoremProof",
            "81f356de2184b9ea941dd116df9e2b3da2c69d2a"
        ],
        [
            "by move=> sUA sVA; rewrite -prodv_id prodvS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expv_id A n : (A ^+ n.+1)%VS = A.",
            "VernacStartTheoremProof",
            "f49c7a63716dee23b9f23c54b0846210ddba06e0"
        ],
        [
            "by elim: n => // n IHn; rewrite !expvSl prodvA prodv_id -expvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limg_amulr U v : (amulr v @: U = U * <[v]>)%VS.",
            "VernacStartTheoremProof",
            "343434a823b2b99ed73601af9b40944956ed8613"
        ],
        [
            "rewrite -(span_basis (vbasisP U)) limg_span !span_def big_distrl /= big_map.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_bigr => u; rewrite prodv_line lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_cosetP {U v w} : reflect (exists2 u, u\\in U & w = u * v) (w \\in U * <[v]>)%VS.",
            "VernacStartTheoremProof",
            "bd6cdf73833196fb8e3f807acda12f94ee95bd42"
        ],
        [
            "rewrite -limg_amulr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: (iffP memv_imgP) => [] [u] Uu ->; exists u; rewrite ?lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dim_cosetv_unit V u : u \\is a GRing.unit -> \\dim (V * <[u]>) = \\dim V.",
            "VernacStartTheoremProof",
            "dec2e63f9772813b30c0dc74524844c8fa727db7"
        ],
        [
            "by move/lker0_amulr/eqP=> Uu; rewrite -limg_amulr limg_dim_eq // Uu capv0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memvV A u : (u^-1 \\in A) = (u \\in A).",
            "VernacStartTheoremProof",
            "6a3b5f101af8a60336308e00bbe2cad844c9f95c"
        ],
        [
            "suffices{u} invA: invr_closed A by apply/idP/idP=> /invA; rewrite ?invrK.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "move=> u Au; have [Uu | /invr_out-> //] := boolP (u \\is a GRing.unit).",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite memvE -(limg_ker0 _ _ (lker0_amulr Uu)) limg_line lfunE /= mulVr //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff ->: (amulr u @: A)%VS = A by rewrite -memvE -algid_eq1 (unitr_algid1 Au).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by apply/eqP; rewrite limg_amulr -dimv_leqif_eq ?prodv_sub ?dim_cosetv_unit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact aspace_cap_subproof A B : algid A \\in B -> is_aspace (A :&: B).",
            "VernacStartTheoremProof",
            "3bf87e16de42712103ee844faff7aebd1c53c298"
        ],
        [
            "move=> BeA; apply/andP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "split; [apply/has_algidP | by rewrite subv_cap !prodv_sub ?capvSl ?capvSr].",
            "VernacExtend",
            "cde106ef69f902c67285b49a616d5d25b0ed7003"
        ],
        [
            "exists (algid A); rewrite /is_algid algid_neq0 memv_cap memv_algid.",
            "VernacExtend",
            "ce65048034dfc6435a3c7cb0858f3045f7b5a4f8"
        ],
        [
            "by split=> // u /memv_capP[Au _]; rewrite ?algidl ?algidr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition aspace_cap A B BeA := ASpace (@aspace_cap_subproof A B BeA).",
            "VernacDefinition",
            "eba98046f962480106ddec94f731b8ce6a787603"
        ],
        [
            "Fact centraliser1_is_aspace u : is_aspace 'C[u].",
            "VernacStartTheoremProof",
            "37d0ad56b5e0c3d9adce6772246d9a6fa5426022"
        ],
        [
            "rewrite /is_aspace has_algid1 ?cent1v1 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/prodvP=> v w /cent1vP-cuv /cent1vP-cuw.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/cent1vP; rewrite -mulrA cuw !mulrA cuv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical centraliser1_aspace u := ASpace (centraliser1_is_aspace u).",
            "VernacDefinition",
            "77cda398fc43499f2b994ec8dccbe4136fbfff52"
        ],
        [
            "Fact centraliser_is_aspace V : is_aspace 'C(V).",
            "VernacStartTheoremProof",
            "6164093b205aeab5955108d0cbd954a9b00f41ab"
        ],
        [
            "rewrite /is_aspace has_algid1 ?centv1 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/prodvP=> u w /centvP-cVu /centvP-cVw.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/centvP=> v Vv; rewrite /= -mulrA cVw // !mulrA cVu.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical centraliser_aspace V := ASpace (centraliser_is_aspace V).",
            "VernacDefinition",
            "be858e1125cbf886195245b4f4e91bcc69e3c5f9"
        ],
        [
            "Lemma centv_algid A : algid A \\in 'C(A)%VS.",
            "VernacStartTheoremProof",
            "6e97dac96b1ba39c911febdef472bffc12caddbb"
        ],
        [
            "by apply/centvP=> u Au; rewrite algidl ?algidr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical center_aspace A := [aspace of 'Z(A) for aspace_cap (centv_algid A)].",
            "VernacDefinition",
            "b3ee23302a8ae9c695eb91f0b64cff60f8767f00"
        ],
        [
            "Lemma algid_center A : algid 'Z(A) = algid A.",
            "VernacStartTheoremProof",
            "56e97fd3b28cc6028f1dbaebd9aa1cdb5be9ca65"
        ],
        [
            "rewrite -(algidl (subvP (centerv_sub A) _ (memv_algid _))) algidr //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite memv_cap memv_algid centv_algid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Falgebra_FieldMixin : GRing.IntegralDomain.axiom aT -> GRing.Field.mixin_of aT.",
            "VernacStartTheoremProof",
            "e8af74f57467200e764060034fe13c6d232b09c5"
        ],
        [
            "move=> domT u nz_u; apply/unitrP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "have kerMu: lker (amulr u) == 0%VS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite eqEsubv sub0v andbT; apply/subvP=> v; rewrite memv_ker lfunE /=.",
            "VernacExtend",
            "fe8f197e86415fc7f0a74eda9d312128b9473eda"
        ],
        [
            "by move/eqP/domT; rewrite (negPf nz_u) orbF memv0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /memv_imgP[v _ vu1]: 1 \\in limg (amulr u); last rewrite lfunE /= in vu1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "suffices /eqP->: limg (amulr u) == fullv by rewrite memvf.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite -dimv_leqif_eq ?subvf ?limg_dim_eq // (eqP kerMu) capv0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists v; split=> //; apply: (lker0P kerMu).",
            "VernacExtend",
            "8e9e6cdb0b626d735e30170b21483b9d4f7d1c30"
        ],
        [
            "by rewrite !lfunE /= -mulrA -vu1 mulr1 mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section SkewField.",
            "VernacBeginSection",
            "5db08977d2b4001fc1107e7505776dd9c5efcca0"
        ],
        [
            "Hypothesis fieldT : GRing.Field.mixin_of aT.",
            "VernacAssumption",
            "8553a35e735cdd73b5e3cd6c5e39b7b5cdd76531"
        ],
        [
            "Lemma skew_field_algid1 A : algid A = 1.",
            "VernacStartTheoremProof",
            "7408e60fb56fc9ab6e6711d836ab4efb234121b8"
        ],
        [
            "by rewrite (unitr_algid1 (memv_algid A)) ?fieldT ?algid_neq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma skew_field_module_semisimple A M : let sumA X := (\\sum_(x <- X) A * <[x]>)%VS in (A * M <= M)%VS -> {X | [/\\ sumA X = M, directv (sumA X) & 0 \\notin X]}.",
            "VernacStartTheoremProof",
            "97cb8017fc6f6d2bc484acc1d47a6ad8cefc030e"
        ],
        [
            "move=> sumA sAM_M; pose X := Nil aT; pose k := (\\dim (A * M) - \\dim (sumA X))%N.",
            "VernacExtend",
            "81927515fc3ecfba885b46cf7f9013852021d404"
        ],
        [
            "have: (\\dim (A * M) - \\dim (sumA X) < k.+1)%N by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: [/\\ (sumA X <= A * M)%VS, directv (sumA X) & 0 \\notin X].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /sumA directvE /= !big_nil sub0v dimv0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: {X k}k.+1 (X) => // k IHk X [sAX_AM dxAX nzX]; rewrite ltnS => leAXk.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "have [sM_AX | /subvPn/sig2W[y My notAXy]] := boolP (M <= sumA X)%VS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists X; split=> //; apply/eqP; rewrite eqEsubv (subv_trans sAX_AM).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nz_y: y != 0 by rewrite (memPnC notAXy) ?mem0v.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "pose AY := sumA (y :: X).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have sAY_AM: (AY <= A * M)%VS by rewrite [AY]big_cons subv_add ?prodvSr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have dxAY: directv AY.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite directvE /= !big_cons [_ == _]directv_addE dxAX directvE eqxx /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -/(sumA X) eqEsubv sub0v andbT -limg_amulr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/subvP=> _ /memv_capP[/memv_imgP[a Aa ->]]; rewrite lfunE /= => AXay.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "rewrite memv0 (mulIr_eq0 a (mulIr _)) ?fieldT //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: contraR notAXy => /fieldT-Ua; rewrite -[y](mulKr Ua) /sumA.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -big_distrr -(prodv_id A) /= -prodvA big_distrr memv_mul ?memvV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (IHk (y :: X)); first by rewrite !inE eq_sym negb_or nz_y.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -subSn ?dimvS // (directvP dxAY) /= big_cons -(directvP dxAX) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite subnDA (leq_trans _ leAXk) ?leq_sub2r // leq_subLR -add1n leq_add2r.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite dim_cosetv_unit ?fieldT ?adim_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma skew_field_module_dimS A M : (A * M <= M)%VS -> \\dim A %| \\dim M.",
            "VernacStartTheoremProof",
            "ffa6226b8dde86f00bd9542198e4f283010b5f08"
        ],
        [
            "case/skew_field_module_semisimple=> X [<- /directvP-> nzX] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite big_seq prime.dvdn_sum // => x /(memPn nzX)nz_x.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite dim_cosetv_unit ?fieldT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma skew_field_dimS A B : (A <= B)%VS -> \\dim A %| \\dim B.",
            "VernacStartTheoremProof",
            "74e11bf6a8eae0b7da7c32bdb3d0a490f1f8eafb"
        ],
        [
            "by move=> sAB; rewrite skew_field_module_dimS ?prodv_sub.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SkewField.",
            "VernacEndSegment",
            "4a54ddec04208da3998696d8fa9a2ef437818bcf"
        ],
        [
            "End AspaceTheory.",
            "VernacEndSegment",
            "2631cfb53a4494a149824bd413c61a87a1581382"
        ],
        [
            "Notation \"'C [ u ]\" := (centraliser1_aspace u) : aspace_scope.",
            "VernacNotation",
            "d455aab6c995d0d1dc10e0afa3c8ec8182eeaa2f"
        ],
        [
            "Notation \"'C ( V )\" := (centraliser_aspace V) : aspace_scope.",
            "VernacNotation",
            "a0419443248710f174dc00c58ec72eb6d72363ae"
        ],
        [
            "Notation \"'Z ( A )\" := (center_aspace A) : aspace_scope.",
            "VernacNotation",
            "f86f7f837fc6502acd1b1d60a3c4f17f4cddba46"
        ],
        [
            "Arguments adim1P {K aT A}.",
            "VernacArguments",
            "267a6f48e748de5a9dcb29e7d614e7cd69a52912"
        ],
        [
            "Arguments memv_cosetP {K aT U v w}.",
            "VernacArguments",
            "64643dd2b461358871687d7ef8f64c3d507af4b1"
        ],
        [
            "Section Closure.",
            "VernacBeginSection",
            "1c38e33ad217b0b30c217f2056b8619901ed40f6"
        ],
        [
            "Variables (K : fieldType) (aT : FalgType K).",
            "VernacAssumption",
            "a8d0ba259eeeb9a3b93ae29c3b791c7edec975ce"
        ],
        [
            "Implicit Types (u v : aT) (U V W : {vspace aT}).",
            "VernacReserve",
            "5a0cf606bd4c875b8456e956d55a6b0edf2e0953"
        ],
        [
            "Definition agenv U := (\\sum_(i < \\dim {:aT}) U ^+ i)%VS.",
            "VernacDefinition",
            "54af7889fece0faa50f9dc6a1b1d778ca445de58"
        ],
        [
            "Local Notation \"<< U & vs >>\" := (agenv (U + <<vs>>)) : vspace_scope.",
            "VernacNotation",
            "13dd0688da8f8711897556d87b4b29baaee29e08"
        ],
        [
            "Local Notation \"<< U ; x >>\" := (agenv (U + <[x]>)) : vspace_scope.",
            "VernacNotation",
            "b2369bcfd61b88b7e1d893d70aece2f6a627d4b3"
        ],
        [
            "Lemma agenvEl U : agenv U = (1 + U * agenv U)%VS.",
            "VernacStartTheoremProof",
            "6abd9c82017f66bb1355397b6453d419b1800302"
        ],
        [
            "pose f V := (1 + U * V)%VS; rewrite -/(f _); pose n := \\dim {:aT}.",
            "VernacExtend",
            "183844ed1cbc2fcc661c7a2651cca9af4585eb3d"
        ],
        [
            "have ->: agenv U = iter n f 0%VS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /agenv -/n; elim: n => [|n IHn]; first by rewrite big_ord0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite big_ord_recl /= -{}IHn; congr (1 + _)%VS; rewrite big_distrr /=.",
            "VernacExtend",
            "9d78117f9fa00d8b79d08aff717709f8d084ba84"
        ],
        [
            "by apply: eq_bigr => i; rewrite expvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have fS i j: i <= j -> (iter i f 0 <= iter j f 0)%VS.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by elim: i j => [|i IHi] [|j] leij; rewrite ?sub0v //= addvS ?prodvSr ?IHi.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices /(@trajectP _ f _ n.+1)[i le_i_n Dfi]: looping f 0%VS n.+1.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by apply/eqP; rewrite eqEsubv -iterS fS // Dfi fS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: contraLR (dimvS (subvf (iter n.+1 f 0%VS))); rewrite -/n -ltnNge.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite -looping_uniq; elim: n.+1 => // i IHi; rewrite trajectSr rcons_uniq.",
            "VernacExtend",
            "c376f01ebc4f30ac37ca603296f6548f23fe4a48"
        ],
        [
            "rewrite {1}trajectSr mem_rcons inE negb_or eq_sym eqEdim fS ?leqW // -ltnNge.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -andbA => /and3P[lt_fi _ /IHi/leq_ltn_trans->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agenvEr U : agenv U = (1 + agenv U * U)%VS.",
            "VernacStartTheoremProof",
            "deab29da1749ee0c377d8bdd9a57a414333c2b24"
        ],
        [
            "rewrite [lhs in lhs = _]agenvEl big_distrr big_distrl /=; congr (_ + _)%VS.",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply: eq_bigr => i _ /=; rewrite -expvSr -expvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agenv_modl U V : (U * V <= V -> agenv U * V <= V)%VS.",
            "VernacStartTheoremProof",
            "19dbe12bc1e715a903fa4437b08ff95b5b1ec5df"
        ],
        [
            "rewrite big_distrl /= => idlU_V; apply/subv_sumP=> [[i _] /= _].",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "elim: i => [|i]; first by rewrite expv0 prod1v.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: subv_trans; rewrite expvSr -prodvA prodvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agenv_modr U V : (V * U <= V -> V * agenv U <= V)%VS.",
            "VernacStartTheoremProof",
            "19a38033779ffe80eafd13f1429b547f7ebca998"
        ],
        [
            "rewrite big_distrr /= => idrU_V; apply/subv_sumP=> [[i _] /= _].",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "elim: i => [|i]; first by rewrite expv0 prodv1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: subv_trans; rewrite expvSl prodvA prodvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact agenv_is_aspace U : is_aspace (agenv U).",
            "VernacStartTheoremProof",
            "5062d59eebf8ddb7d7d4312a73d281fcb7b9596d"
        ],
        [
            "rewrite /is_aspace has_algid1; last by rewrite memvE agenvEl addvSl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite agenv_modl // [V in (_ <= V)%VS]agenvEl addvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical agenv_aspace U : {aspace aT} := ASpace (agenv_is_aspace U).",
            "VernacDefinition",
            "5329fb37536218c4d40c8427bdfe4a0648e63b4b"
        ],
        [
            "Lemma agenvE U : agenv U = agenv_aspace U.",
            "VernacStartTheoremProof",
            "4896362e7b2fc1a5af1709e26059f91ddc39d3fd"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agenvM U : (agenv U * agenv U)%VS = agenv U.",
            "VernacStartTheoremProof",
            "1e6a5a670aa365c45eb9b8d35ecd1d9f494a856a"
        ],
        [
            "exact: prodv_id.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agenvX n U : (agenv U ^+ n.+1)%VS = agenv U.",
            "VernacStartTheoremProof",
            "7f56ddd1cf675bb0cbe9e5381a0e4117c104af7b"
        ],
        [
            "exact: expv_id.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub1_agenv U : (1 <= agenv U)%VS.",
            "VernacStartTheoremProof",
            "571ce381ebb404d10d151030f6953eeeeb65a19e"
        ],
        [
            "by rewrite agenvEl addvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_agenv U : (U <= agenv U)%VS.",
            "VernacStartTheoremProof",
            "26fa749ed0b65a688e4dabb1b9f316d77d31ef87"
        ],
        [
            "by rewrite 2!agenvEl addvC prodvDr prodv1 -addvA addvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subX_agenv U n : (U ^+ n <= agenv U)%VS.",
            "VernacStartTheoremProof",
            "2dc61ae6a022eee854b119c39304e836a0481726"
        ],
        [
            "by case: n => [|n]; rewrite ?sub1_agenv // -(agenvX n) expvS // sub_agenv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agenv_sub_modl U V : (1 <= V -> U * V <= V -> agenv U <= V)%VS.",
            "VernacStartTheoremProof",
            "5392ed62c9fba2dd1287a0f1b851394a8914963f"
        ],
        [
            "move=> s1V /agenv_modl; apply: subv_trans.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -[Us in (Us <= _)%VS]prodv1 prodvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agenv_sub_modr U V : (1 <= V -> V * U <= V -> agenv U <= V)%VS.",
            "VernacStartTheoremProof",
            "f79b558e2183e5b467d63ff1c156e5a49ba17813"
        ],
        [
            "move=> s1V /agenv_modr; apply: subv_trans.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -[Us in (Us <= _)%VS]prod1v prodvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agenv_id U : agenv (agenv U) = agenv U.",
            "VernacStartTheoremProof",
            "7d2650ee3731155a1d0b3dcbd340f3233391ed3b"
        ],
        [
            "apply/eqP; rewrite eqEsubv sub_agenv andbT.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite agenv_sub_modl ?sub1_agenv ?agenvM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agenvS U V : (U <= V -> agenv U <= agenv V)%VS.",
            "VernacStartTheoremProof",
            "f33385a533cc1e40073d6fefead0b0162190261a"
        ],
        [
            "move=> sUV; rewrite agenv_sub_modl ?sub1_agenv //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -[Vs in (_ <= Vs)%VS]agenvM prodvSl ?(subv_trans sUV) ?sub_agenv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agenv_add_id U V : agenv (agenv U + V) = agenv (U + V).",
            "VernacStartTheoremProof",
            "7228ef2a7dad65d951fbc7e292a4d81958491402"
        ],
        [
            "apply/eqP; rewrite eqEsubv andbC agenvS ?addvS ?sub_agenv //=.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite agenv_sub_modl ?sub1_agenv //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[rhs in (_ <= rhs)%VS]agenvM prodvSl // subv_add agenvS ?addvSl //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: subv_trans (addvSr U V) (sub_agenv _).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subv_adjoin U x : (U <= <<U; x>>)%VS.",
            "VernacStartTheoremProof",
            "0a2aa86336d0ec2ab37b023c61a5ada34230e61b"
        ],
        [
            "by rewrite (subv_trans (sub_agenv _)) ?agenvS ?addvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subv_adjoin_seq U xs : (U <= <<U & xs>>)%VS.",
            "VernacStartTheoremProof",
            "84d64f7bb1342cc33797a5e9d4e93660b5cc6cba"
        ],
        [
            "by rewrite (subv_trans (sub_agenv _)) // ?agenvS ?addvSl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma memv_adjoin U x : x \\in <<U; x>>%VS.",
            "VernacStartTheoremProof",
            "7b2147bbf2a37b02dc19eeb2e34aded0b6892640"
        ],
        [
            "by rewrite memvE (subv_trans (sub_agenv _)) ?agenvS ?addvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma seqv_sub_adjoin U xs : {subset xs <= <<U & xs>>%VS}.",
            "VernacStartTheoremProof",
            "408b95b5ae94408e76545dd1b6639d77ff4b1d6f"
        ],
        [
            "by apply/span_subvP; rewrite (subv_trans (sub_agenv _)) ?agenvS ?addvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subvP_adjoin U x y : y \\in U -> y \\in <<U; x>>%VS.",
            "VernacStartTheoremProof",
            "7b693283dab8d5177d63fb7f8475cb10585c6ec9"
        ],
        [
            "exact/subvP/subv_adjoin.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adjoin_nil V : <<V & [::]>>%VS = agenv V.",
            "VernacStartTheoremProof",
            "f800ccdd66838d906a90542ec5f5d64a93121a37"
        ],
        [
            "by rewrite span_nil addv0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adjoin_cons V x rs : <<V & x :: rs>>%VS = << <<V; x>> & rs>>%VS.",
            "VernacStartTheoremProof",
            "985100e09860a6178c38023d18f5eabfcbd2aa82"
        ],
        [
            "by rewrite span_cons addvA agenv_add_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adjoin_rcons V rs x : <<V & rcons rs x>>%VS = << <<V & rs>>%VS; x>>%VS.",
            "VernacStartTheoremProof",
            "e3e49ab3a11601187cee46bea5337e160b298747"
        ],
        [
            "by rewrite -cats1 span_cat addvA span_seq1 agenv_add_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adjoin_seq1 V x : <<V & [:: x]>>%VS = <<V; x>>%VS.",
            "VernacStartTheoremProof",
            "e125815960f09c355cdc35e053fcf49ec7d375d9"
        ],
        [
            "by rewrite adjoin_cons adjoin_nil agenv_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adjoinC V x y : << <<V; x>>; y>>%VS = << <<V; y>>; x>>%VS.",
            "VernacStartTheoremProof",
            "9efd8ea358be1594bebccdcbf1c7e6a6309a6425"
        ],
        [
            "by rewrite !agenv_add_id -!addvA (addvC <[x]>%VS).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adjoinSl U V x : (U <= V -> <<U; x>> <= <<V; x>>)%VS.",
            "VernacStartTheoremProof",
            "e840229f7b678ceffa77c4318c0043c79d36b4e2"
        ],
        [
            "by move=> sUV; rewrite agenvS ?addvS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adjoin_seqSl U V rs : (U <= V -> <<U & rs>> <= <<V & rs>>)%VS.",
            "VernacStartTheoremProof",
            "7784ecfeb2db22e42ffaacb7a1df300249dd592f"
        ],
        [
            "by move=> sUV; rewrite agenvS ?addvS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma adjoin_seqSr U rs1 rs2 : {subset rs1 <= rs2} -> (<<U & rs1>> <= <<U & rs2>>)%VS.",
            "VernacStartTheoremProof",
            "8e7b5ef65e07e7ff22d0bc76c4a425a47451ec1a"
        ],
        [
            "by move/sub_span=> s_rs12; rewrite agenvS ?addvS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Closure.",
            "VernacEndSegment",
            "eeda48840ed30cf1906753ce49ab1a9b136edd1f"
        ],
        [
            "Notation \"<< U >>\" := (agenv_aspace U) : aspace_scope.",
            "VernacNotation",
            "360fd9bfc1f3880724d4ea8ac54738f4075855f4"
        ],
        [
            "Notation \"<< U & vs >>\" := (agenv (U + <<vs>>)) : vspace_scope.",
            "VernacNotation",
            "dd3290fc7efee98fd625f7a8e3e3608f5d27d9a9"
        ],
        [
            "Notation \"<< U ; x >>\" := (agenv (U + <[x]>)) : vspace_scope.",
            "VernacNotation",
            "7d815c9c10cf69789291fe76febb2c5bd66027ce"
        ],
        [
            "Notation \"<< U & vs >>\" := << U + <<vs>> >>%AS : aspace_scope.",
            "VernacNotation",
            "e6957b757d625788d0414dc47fb8953fc71534e1"
        ],
        [
            "Notation \"<< U ; x >>\" := << U + <[x]> >>%AS : aspace_scope.",
            "VernacNotation",
            "cb3973e87ce14f95066dfa6d46f41b7298764d37"
        ],
        [
            "Section SubFalgType.",
            "VernacBeginSection",
            "6c5dc089bba4eb08a15ee5bf66a963c8a9d1457c"
        ],
        [
            "Variable (K : fieldType) (aT : FalgType K) (A : {aspace aT}).",
            "VernacAssumption",
            "cad2117c281c64f070ea7b8b578b896c22a16827"
        ],
        [
            "Definition subvs_one := Subvs (memv_algid A).",
            "VernacDefinition",
            "3c4a6bdf7bb1c5944751735920f6cdb22a5f99bd"
        ],
        [
            "Definition subvs_mul (u v : subvs_of A) := Subvs (subv_trans (memv_mul (subvsP u) (subvsP v)) (asubv _)).",
            "VernacDefinition",
            "8757b542994917d811eb9c943a21344828fb66de"
        ],
        [
            "Fact subvs_mulA : associative subvs_mul.",
            "VernacStartTheoremProof",
            "c531a422329a5b276e09213175f55cdbe9aee448"
        ],
        [
            "by move=> x y z; apply/val_inj/mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subvs_mu1l : left_id subvs_one subvs_mul.",
            "VernacStartTheoremProof",
            "e3f771a0007f50a2e6d2acb3e5863ff941c98544"
        ],
        [
            "by move=> x; apply/val_inj/algidl/(valP x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subvs_mul1 : right_id subvs_one subvs_mul.",
            "VernacStartTheoremProof",
            "61e083d62343f203e86c0f20567f5ba0512d1c15"
        ],
        [
            "by move=> x; apply/val_inj/algidr/(valP x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subvs_mulDl : left_distributive subvs_mul +%R.",
            "VernacStartTheoremProof",
            "b9dbd0384294dc762ab27ab6aaa247c85dacbcbd"
        ],
        [
            "move=> x y z; apply/val_inj/mulrDl.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subvs_mulDr : right_distributive subvs_mul +%R.",
            "VernacStartTheoremProof",
            "48b57f284796c54f08b50f550d9efd7b7c9961ad"
        ],
        [
            "move=> x y z; apply/val_inj/mulrDr.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subvs_ringMixin := RingMixin subvs_mulA subvs_mu1l subvs_mul1 subvs_mulDl subvs_mulDr (algid_neq0 _).",
            "VernacDefinition",
            "af30b0d6973de5f4e202786f2ca0ccdc74968723"
        ],
        [
            "Canonical subvs_ringType := Eval hnf in RingType (subvs_of A) subvs_ringMixin.",
            "VernacDefinition",
            "13c3a5221b254ab7e4fb5b0c20c233184c30c51a"
        ],
        [
            "Lemma subvs_scaleAl k (x y : subvs_of A) : k *: (x * y) = (k *: x) * y.",
            "VernacStartTheoremProof",
            "c4ff29dae203798b57dcd53009de6594d8e13b78"
        ],
        [
            "exact/val_inj/scalerAl.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical subvs_lalgType := Eval hnf in LalgType K (subvs_of A) subvs_scaleAl.",
            "VernacDefinition",
            "13814a45fbc7dd04ffe12e4df8beb334f0fd0671"
        ],
        [
            "Lemma subvs_scaleAr k (x y : subvs_of A) : k *: (x * y) = x * (k *: y).",
            "VernacStartTheoremProof",
            "380f7c68783b5662525ee17947377c93823f73cb"
        ],
        [
            "exact/val_inj/scalerAr.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical subvs_algType := Eval hnf in AlgType K (subvs_of A) subvs_scaleAr.",
            "VernacDefinition",
            "17e1a5f61792f4357700c68aa009c7b6d3988e04"
        ],
        [
            "Canonical subvs_unitRingType := Eval hnf in FalgUnitRingType (subvs_of A).",
            "VernacDefinition",
            "03f5dbeb9fbde6d042623fe60c7196b08170bc8d"
        ],
        [
            "Canonical subvs_unitAlgType := Eval hnf in [unitAlgType K of subvs_of A].",
            "VernacDefinition",
            "b1b3b240cf2b81221ea66d06b6acf689846182f2"
        ],
        [
            "Canonical subvs_FalgType := Eval hnf in [FalgType K of subvs_of A].",
            "VernacDefinition",
            "2c3551e4230e80b82a56fff59432c35110ea230c"
        ],
        [
            "Implicit Type w : subvs_of A.",
            "VernacReserve",
            "63297bd2026f919911a244005b7b3a3781999bf6"
        ],
        [
            "Lemma vsval_unitr w : vsval w \\is a GRing.unit -> w \\is a GRing.unit.",
            "VernacStartTheoremProof",
            "38fd13e3775d43d668d4d50c5b6c80c3bb0bbbc5"
        ],
        [
            "case: w => /= u Au Uu; have Au1: u^-1 \\in A by rewrite memvV.",
            "VernacExtend",
            "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
        ],
        [
            "apply/unitrP; exists (Subvs Au1).",
            "VernacExtend",
            "3df6774afc065b08add9a9900f5bed4995b7ab37"
        ],
        [
            "by split; apply: val_inj; rewrite /= ?mulrV ?mulVr ?(unitr_algid1 Au).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vsval_invr w : vsval w \\is a GRing.unit -> val w^-1 = (val w)^-1.",
            "VernacStartTheoremProof",
            "c6644c5a80242797abbc4f2a2b6337ce6cf7b3ea"
        ],
        [
            "move=> Uu; have def_w: w / w * w = w by rewrite divrK ?vsval_unitr.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by apply: (mulrI Uu); rewrite -[in u in u / _]def_w ?mulrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SubFalgType.",
            "VernacEndSegment",
            "591b2feec3bc487b495338434d9aec9d8ab98356"
        ],
        [
            "Section AHom.",
            "VernacBeginSection",
            "e1139fea2d7fef80c7aa0261956794a37bdbebb0"
        ],
        [
            "Variable K : fieldType.",
            "VernacAssumption",
            "83ed4b6bdeec2bdda33f3147d1f70c4d3e116cd1"
        ],
        [
            "Section Class_Def.",
            "VernacBeginSection",
            "06dfd2332038131d279d553ed8fb193fbb60a265"
        ],
        [
            "Variables aT rT : FalgType K.",
            "VernacAssumption",
            "2186eeea96f18b4e884fddec2fff56f9a80f9f14"
        ],
        [
            "Definition ahom_in (U : {vspace aT}) (f : 'Hom(aT, rT)) := let fM_at x y := f (x * y) == f x * f y in all (fun x => all (fM_at x) (vbasis U)) (vbasis U) && (f 1 == 1).",
            "VernacDefinition",
            "c04294765fbfeced5e202792e1dd57334e09b270"
        ],
        [
            "Lemma ahom_inP {f : 'Hom(aT, rT)} {U : {vspace aT}} : reflect ({in U &, {morph f : x y / x * y >-> x * y}} * (f 1 = 1)) (ahom_in U f).",
            "VernacStartTheoremProof",
            "7a3eea9a43bd2e50a9f8e2c41741b48deb12bc32"
        ],
        [
            "apply: (iffP andP) => [[/allP fM /eqP f1] | [fM f1]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite f1; split=> //; apply/allP=> x Ax; apply/allP=> y Ay.",
            "VernacExtend",
            "71a971feb513c752399a2f88cac8d560fb06d5e2"
        ],
        [
            "by rewrite fM // vbasis_mem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=> // x y /coord_vbasis -> /coord_vbasis ->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite !mulr_suml ![f _]linear_sum mulr_suml; apply: eq_bigr => i _ /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite !mulr_sumr linear_sum; apply: eq_bigr => j _ /=.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite !linearZ -!scalerAr -!scalerAl 2!linearZ /=; congr (_ *: (_ *: _)).",
            "VernacExtend",
            "a0279e71fd23ac6bde2b8b4402981a70ea719044"
        ],
        [
            "by apply/eqP/(allP (fM _ _)); apply: memt_nth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ahomP {f : 'Hom(aT, rT)} : reflect (lrmorphism f) (ahom_in {:aT} f).",
            "VernacStartTheoremProof",
            "10a814492d46c32bd771f4fdf6b44d95df8d8372"
        ],
        [
            "apply: (iffP ahom_inP) => [[fM f1] | fRM_P]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "pose fRM := LRMorphism fRM_P.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "by split; [apply: in2W (rmorphM fRM) | apply: (rmorph1 fRM)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split; last exact: linearZZ; split; first exact: linearB.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by split=> // x y; rewrite fM ?memvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Structure ahom := AHom {ahval :> 'Hom(aT, rT); _ : ahom_in {:aT} ahval}.",
            "VernacInductive",
            "c2d088dea1861b4d6cd7967d5ae89332609a15bc"
        ],
        [
            "Canonical ahom_subType := Eval hnf in [subType for ahval].",
            "VernacDefinition",
            "b89d8e1080bdfb8f9bc19b5f06c4a2a2bbf96a7b"
        ],
        [
            "Definition ahom_eqMixin := [eqMixin of ahom by <:].",
            "VernacDefinition",
            "53f4c36fe06b51c6e4de4ce39bf5df10931c67be"
        ],
        [
            "Canonical ahom_eqType := Eval hnf in EqType ahom ahom_eqMixin.",
            "VernacDefinition",
            "de2621345bd87e7b9e088052223ee7655b0acfe6"
        ],
        [
            "Definition ahom_choiceMixin := [choiceMixin of ahom by <:].",
            "VernacDefinition",
            "9c14e002b45cd71241b6c46003b3b616f2e85360"
        ],
        [
            "Canonical ahom_choiceType := Eval hnf in ChoiceType ahom ahom_choiceMixin.",
            "VernacDefinition",
            "0c801201c171333513d460d4c4f692f1563f3454"
        ],
        [
            "Fact linfun_is_ahom (f : {lrmorphism aT -> rT}) : ahom_in {:aT} (linfun f).",
            "VernacStartTheoremProof",
            "bb07b775f965c9155c782ebf6069fc270873c3be"
        ],
        [
            "by apply/ahom_inP; split=> [x y|]; rewrite !lfunE ?rmorphM ?rmorph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical linfun_ahom f := AHom (linfun_is_ahom f).",
            "VernacDefinition",
            "3c6a069f5c298f5e5504ad2eef903fbc2eadf4bf"
        ],
        [
            "End Class_Def.",
            "VernacEndSegment",
            "039764afc2e531bb7994c17e07ecd6f3c4b50be8"
        ],
        [
            "Arguments ahom_in [aT rT].",
            "VernacArguments",
            "8766d1d4174b44c1dbd360f85b1222b17c80a09b"
        ],
        [
            "Arguments ahom_inP {aT rT f U}.",
            "VernacArguments",
            "8aa1d62b8d4587b67f473e5397819555c699bcb7"
        ],
        [
            "Arguments ahomP {aT rT f}.",
            "VernacArguments",
            "728098b6072da8c6155361a93ccc41c2b6cc79ae"
        ],
        [
            "Section LRMorphism.",
            "VernacBeginSection",
            "9d7344060a87b6a1298e7a29dc4729ac646a0add"
        ],
        [
            "Variables aT rT sT : FalgType K.",
            "VernacAssumption",
            "31d3a54ab46105dc22e25ca510f94bc672d1f804"
        ],
        [
            "Fact ahom_is_lrmorphism (f : ahom aT rT) : lrmorphism f.",
            "VernacStartTheoremProof",
            "bc771bba91a155216bbfe6474bee5a4d7d108a66"
        ],
        [
            "by apply/ahomP; case: f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical ahom_rmorphism f := Eval hnf in AddRMorphism (ahom_is_lrmorphism f).",
            "VernacDefinition",
            "ae47f2ec6f1235b696fdb22d40f4e56c4e8bc582"
        ],
        [
            "Canonical ahom_lrmorphism f := Eval hnf in AddLRMorphism (ahom_is_lrmorphism f).",
            "VernacDefinition",
            "f4068bf65ad8cf61e51a9d13c1c757c5c46df861"
        ],
        [
            "Lemma ahomWin (f : ahom aT rT) U : ahom_in U f.",
            "VernacStartTheoremProof",
            "cc33597c3b9e0a8df98bca44f979ebdbe9d0512a"
        ],
        [
            "by apply/ahom_inP; split; [apply: in2W (rmorphM _) | apply: rmorph1].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma id_is_ahom (V : {vspace aT}) : ahom_in V \\1.",
            "VernacStartTheoremProof",
            "e3a37e1599983d88eaaf90cc657e8b03f175b90f"
        ],
        [
            "by apply/ahom_inP; split=> [x y|] /=; rewrite !id_lfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical id_ahom := AHom (id_is_ahom (aspacef aT)).",
            "VernacDefinition",
            "29d396385353a0b97e178df94601bb766cce1a13"
        ],
        [
            "Lemma comp_is_ahom (V : {vspace aT}) (f : 'Hom(rT, sT)) (g : 'Hom(aT, rT)) : ahom_in {:rT} f -> ahom_in V g -> ahom_in V (f \\o g).",
            "VernacStartTheoremProof",
            "64e91a0c09a515fb46860a865a84d48b3c074551"
        ],
        [
            "move=> /ahom_inP fM /ahom_inP gM; apply/ahom_inP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by split=> [x y Vx Vy|] /=; rewrite !comp_lfunE gM // fM ?memvf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical comp_ahom (f : ahom rT sT) (g : ahom aT rT) := AHom (comp_is_ahom (valP f) (valP g)).",
            "VernacDefinition",
            "4796fb5558823a8e71000e8a203453e706aee671"
        ],
        [
            "Lemma aimgM (f : ahom aT rT) U V : (f @: (U * V) = f @: U * f @: V)%VS.",
            "VernacStartTheoremProof",
            "16d1659efa773360260b299e7cd3f6446171171e"
        ],
        [
            "apply/eqP; rewrite eqEsubv; apply/andP; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/prodvP=> _ _ /memv_imgP[u Hu ->] /memv_imgP[v Hv ->].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -rmorphM memv_img // memv_mul.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/subvP=> _ /memv_imgP[w UVw ->]; rewrite memv_preim (subvP _ w UVw) //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by apply/prodvP=> u v Uu Vv; rewrite -memv_preim rmorphM memv_mul // memv_img.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aimg1 (f : ahom aT rT) : (f @: 1 = 1)%VS.",
            "VernacStartTheoremProof",
            "c25937bd1aa0cbd6a3419f044e1450bb1162c2f4"
        ],
        [
            "by rewrite limg_line rmorph1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aimgX (f : ahom aT rT) U n : (f @: (U ^+ n) = f @: U ^+ n)%VS.",
            "VernacStartTheoremProof",
            "c45a7d40039916142e4f99733d18d1d5e5aef072"
        ],
        [
            "elim: n => [|n IH]; first by rewrite !expv0 aimg1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !expvSl aimgM IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aimg_agen (f : ahom aT rT) U : (f @: agenv U)%VS = agenv (f @: U).",
            "VernacStartTheoremProof",
            "1709e9cd51c6876dc5faf44959e698300fbeafd6"
        ],
        [
            "apply/eqP; rewrite eqEsubv; apply/andP; split.",
            "VernacExtend",
            "c6080ad6de433b4aac1c6523f45011ac63415378"
        ],
        [
            "by rewrite limg_sum; apply/subv_sumP => i _; rewrite aimgX subX_agenv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: agenv_sub_modl; first by rewrite -(aimg1 f) limgS // sub1_agenv.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -aimgM limgS // [rhs in (_ <= rhs)%VS]agenvEl addvSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aimg_adjoin (f : ahom aT rT) U x : (f @: <<U; x>> = <<f @: U; f x>>)%VS.",
            "VernacStartTheoremProof",
            "aa921d87de4440c2709e317a8d944ae26635e5e8"
        ],
        [
            "by rewrite aimg_agen limg_add limg_line.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aimg_adjoin_seq (f : ahom aT rT) U xs : (f @: <<U & xs>> = <<f @: U & map f xs>>)%VS.",
            "VernacStartTheoremProof",
            "306e55163ff2a143f7f5fa9bd22436ed1bb38485"
        ],
        [
            "by rewrite aimg_agen limg_add limg_span.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact ker_sub_ahom_is_aspace (f g : ahom aT rT) : is_aspace (lker (ahval f - ahval g)).",
            "VernacStartTheoremProof",
            "b7370f35949cfafa02e8d00753f67e4b1d68c009"
        ],
        [
            "rewrite /is_aspace has_algid1; last by apply/eqlfunP; rewrite !rmorph1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/prodvP=> a b /eqlfunP Dfa /eqlfunP Dfb.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/eqlfunP; rewrite !rmorphM /= Dfa Dfb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical ker_sub_ahom_aspace f g := ASpace (ker_sub_ahom_is_aspace f g).",
            "VernacDefinition",
            "763cc75ea6c6e236eef9c60c3414857d8c840e84"
        ],
        [
            "End LRMorphism.",
            "VernacEndSegment",
            "6fe22639039daed4aecbd37aae89548acc2476f0"
        ],
        [
            "Canonical fixedSpace_aspace aT (f : ahom aT aT) := [aspace of fixedSpace f].",
            "VernacDefinition",
            "3e54a8f9aaed83cd383111116bfc1d8c880eb188"
        ],
        [
            "End AHom.",
            "VernacEndSegment",
            "8356a59fbd2340adbe42e275feee21f90f8375a7"
        ],
        [
            "Arguments ahom_in [K aT rT].",
            "VernacArguments",
            "2f56606b64f40789a7f601a7d5bfc89b9f5d17e4"
        ],
        [
            "Notation \"''AHom' ( aT , rT )\" := (ahom aT rT) : type_scope.",
            "VernacNotation",
            "850d640991e43bc4dd4a820c9d401f2c3250bc2f"
        ],
        [
            "Notation \"''AEnd' ( aT )\" := (ahom aT aT) : type_scope.",
            "VernacNotation",
            "ba1150bfd726f88e41c69ff8068c3579b2b90825"
        ],
        [
            "Delimit Scope lrfun_scope with AF.",
            "VernacDelimiters",
            "bb9a65fdbfe873bf3094ff16ee3c3be3bef9cc6e"
        ],
        [
            "Bind Scope lrfun_scope with ahom.",
            "VernacBindScope",
            "89ebadbbdb8c4596a62fa3e518ec1163e4df945e"
        ],
        [
            "Notation \"\\1\" := (@id_ahom _ _) : lrfun_scope.",
            "VernacNotation",
            "0cbd127adbae57f475089e1dc9f0a1a61cda201b"
        ],
        [
            "Notation \"f \\o g\" := (comp_ahom f g) : lrfun_scope.",
            "VernacNotation",
            "6bd1d24d833d79ef6a254ad6e2326a3110b78f25"
        ]
    ],
    "proofs": [
        {
            "name": "BaseMixin",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "move=> vAm; pose vA := VectType K A vAm.",
                        "VernacExtend",
                        "fef3c4a8f7fcf70b0824f3cce5fb58f2e0ef07fd"
                    ]
                },
                {
                    "command": [
                        "pose am u := linfun (u \\o* idfun : vA -> vA).",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have amE u v : am u v = v * u by rewrite lfunE.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "pose uam := [pred u | lker (am u) == 0%VS].",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "pose vam := [fun u => if u \\in uam then (am u)^-1%VF 1 else u].",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have vamKl: {in uam, left_inverse 1 vam *%R}.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move=> u Uu; rewrite /= Uu -amE lker0_lfunVK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists uam vam => // [u Uu | u v [_ uv1] | u /negbTE/= -> //].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply/(lker0P Uu); rewrite !amE -mulrA vamKl // mul1r mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/lker0P=> w1 w2 /(congr1 (am v)); rewrite !amE -!mulrA uv1 !mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "regular_fullv",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "by apply/esym/eqP; rewrite eqEdim subvf dim_vline oner_eq0 dimvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FalgType_proper",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "rewrite lt0n; apply: contraNneq (oner_neq0 aT) => aT0.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP/v2r_inj; do 2!move: (v2r _); rewrite aT0 => u v; rewrite !thinmx0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_mulE",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "exact: lfunE.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_compE",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_mulVr",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "exact: lker0_compfV.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_mulrV",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "exact: lker0_compVf.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_mulRVr",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "by move=> Uf; rewrite /lfun_invr Uf lfun_mulVr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_mulrRV",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "by move=> Uf; rewrite /lfun_invr Uf lfun_mulrV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_unitrP",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "case=> _ fK; apply/lker0P; apply: can_inj (g) _ => u.",
                        "VernacExtend",
                        "d0ca9c3fd2da32fc51e6c7224f197d333e09c6a3"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lfun_mulE fK lfunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_invr_out",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "by rewrite /lfun_invr => /negPf->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun_invE",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "by rewrite /f^-1 /= /lfun_invr => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "amull_inj",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "by move=> u v /lfunP/(_ 1); rewrite !lfunE /= !mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "amulr_inj",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "by move=> u v /lfunP/(_ 1); rewrite !lfunE /= !mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "amull_is_linear",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "move=> a u v; apply/lfunP => w.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite !lfunE /= scale_lfunE !lfunE /= mulrDl scalerAl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "amull1",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP => z; rewrite id_lfunE lfunE /= mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "amullM",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "by apply/lfunP => w; rewrite comp_lfunE !lfunE /= mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "amulr_is_lrmorphism",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "split=> [|a u]; last by apply/lfunP=> w; rewrite scale_lfunE !lfunE /= scalerAr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "split=> [u v|]; first by apply/lfunP => w; do 3!rewrite !lfunE /= ?mulrBr.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "split=> [u v|]; last by apply/lfunP=> w; rewrite id_lfunE !lfunE /= mulr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/lfunP=> w; rewrite comp_lfunE !lfunE /= mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_amull",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "by move=> Uu; apply/lker0P=> v w; rewrite !lfunE; apply: mulrI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lker0_amulr",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "by move=> Uu; apply/lker0P=> v w; rewrite !lfunE; apply: mulIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lfun1_poly",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "by apply: map_poly_id => u _; apply: id_lfunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodv_key",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_mul",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "move=> u v /coord_vbasis-> /coord_vbasis->.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite mulr_suml; apply: memv_suml => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite mulr_sumr; apply: memv_suml => j _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "rewrite -scalerAl -scalerAr !memvZ // [prodv]unlock memv_span //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/allpairsP; exists ((vbasis U)`_i, (vbasis V)`_j); rewrite !memt_nth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodvP",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [sUVW u v Uu Vv | sUVW].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (subvP sUVW) ?memv_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite [prodv]unlock; apply/span_subvP=> _ /allpairsP[[u v] /= [Uu Vv ->]].",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite sUVW ?vbasis_mem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodv_line",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "apply: subv_anti; rewrite -memvE memv_mul ?memv_line // andbT.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply/prodvP=> _ _ /vlineP[a ->] /vlineP[b ->].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -scalerAr -scalerAl !memvZ ?memv_line.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimv1",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "by rewrite dim_vline oner_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dim_prodv",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock (leq_trans (dim_span _)) ?size_tuple.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vspace1_neq0",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "by rewrite -dimv_eq0 dimv1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vbasis1",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "move: (vbasis 1) (@vbasisP K aT 1); rewrite dim_vline oner_neq0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case/tupleP=> x X0; rewrite {X0}tuple0 => defX; have Xx := mem_head x nil.",
                        "VernacExtend",
                        "d910db0b20b765a581ab66c37a970a135e84f8ff"
                    ]
                },
                {
                    "command": [
                        "have /vlineP[k def_x] := basis_mem defX Xx; exists k; last by rewrite def_x.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by have:= basis_not0 defX Xx; rewrite def_x scaler_eq0 oner_eq0 orbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod0v",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "move=> U; apply/eqP; rewrite -dimv_eq0 -leqn0 (leq_trans (dim_prodv 0 U)) //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite dimv0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodv0",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "move=> U; apply/eqP; rewrite -dimv_eq0 -leqn0 (leq_trans (dim_prodv U 0)) //.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite dimv0 muln0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod1v",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "move=> U; apply/subv_anti/andP; split.",
                        "VernacExtend",
                        "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
                    ]
                },
                {
                    "command": [
                        "by apply/prodvP=> _ u /vlineP[a ->] Uu; rewrite mulr_algl memvZ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/subvP=> u Uu; rewrite -[u]mul1r memv_mul ?memv_line.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodv1",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "move=> U; apply/subv_anti/andP; split.",
                        "VernacExtend",
                        "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
                    ]
                },
                {
                    "command": [
                        "by apply/prodvP=> u _ Uu /vlineP[a ->]; rewrite mulr_algr memvZ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/subvP=> u Uu; rewrite -[u]mulr1 memv_mul ?memv_line.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodvS",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "move/subvP=> sU12 /subvP sV12; apply/prodvP=> u v Uu Vv.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by rewrite memv_mul ?sU12 ?sV12.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodvSl",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "by move/prodvS->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodvSr",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "exact: prodvS.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodvDl",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "move=> U1 U2 V; apply/esym/subv_anti/andP; split.",
                        "VernacExtend",
                        "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
                    ]
                },
                {
                    "command": [
                        "by rewrite subv_add 2?prodvS ?addvSl ?addvSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/prodvP=> _ v /memv_addP[u1 Uu1 [u2 Uu2 ->]] Vv.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrDl memv_add ?memv_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodvDr",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "move=> U V1 V2; apply/esym/subv_anti/andP; split.",
                        "VernacExtend",
                        "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
                    ]
                },
                {
                    "command": [
                        "by rewrite subv_add 2?prodvS ?addvSl ?addvSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/prodvP=> u _ Uu /memv_addP[v1 Vv1 [v2 Vv2 ->]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrDr memv_add ?memv_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodvA",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "move=> U V W; rewrite -(span_basis (vbasisP U)) span_def !big_distrl /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => u _; rewrite -(span_basis (vbasisP W)) span_def !big_distrr.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "apply: eq_bigr => w _; rewrite -(span_basis (vbasisP V)) span_def /=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite !(big_distrl, big_distrr) /=; apply: eq_bigr => v _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite !prodv_line mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expv0",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expv1",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expv2",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expvSl",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "by case: n => //; rewrite prodv1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expv0n",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "by case: n => // n; rewrite expvSl prod0v.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expv1n",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "by elim: n => // n IHn; rewrite expvSl IHn prodv1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expvD",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "by elim: m => [|m IHm]; rewrite ?prod1v // !expvSl IHm prodvA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expvSr",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "by rewrite -addn1 expvD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expvM",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "by elim: n => [|n IHn]; rewrite ?muln0 // mulnS expvD IHn expvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expvS",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "move=> sUV; elim: n => [|n IHn]; first by rewrite !expv0 subvv.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !expvSl prodvS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expv_line",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IH]; first by rewrite expr0 expv0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS expvSl IH prodv_line.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cent1vP",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "by rewrite (sameP eqlfunP eqP) !lfunE /=; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cent1v1",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "by apply/cent1vP; rewrite commr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cent1v_id",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "exact/cent1vP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cent1vX",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "exact/cent1vP/esym/commrX.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cent1vC",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "exact/cent1vP/cent1vP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centvsP",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "by apply: (iffP subvP) => [cUV u v | cUV u] /cUV-/centvP; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subv_cent1",
            "line_nb": 357,
            "steps": [
                {
                    "command": [
                        "by apply/subvP/centvP=> cUv u Uu; apply/cent1vP; rewrite 1?cent1vC cUv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centv1",
            "line_nb": 360,
            "steps": [
                {
                    "command": [
                        "by apply/centvP=> v _; rewrite commr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centvX",
            "line_nb": 363,
            "steps": [
                {
                    "command": [
                        "by move/centvP=> cVu; apply/centvP=> v /cVu/esym/commrX->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centvC",
            "line_nb": 366,
            "steps": [
                {
                    "command": [
                        "by apply/centvsP/centvsP=> cUV u v UVu /cUV->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centerv_sub",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "exact: capvSl.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cent_centerv",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "by rewrite centvC capvSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "has_algidP",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "exact: sumboolP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "has_algid1",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "move=> U1; apply/has_algidP; exists 1; split; rewrite ?oner_eq0 // => u _.",
                        "VernacExtend",
                        "ad8afcba0dec932a3c337ca8276cb5e940ffdb6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr1 mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aspace1_subproof",
            "line_nb": 420,
            "steps": [
                {
                    "command": [
                        "by rewrite /is_aspace prod1v -memvE has_algid1 memv_line.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aspacef_subproof",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "by rewrite /is_aspace subvf has_algid1 ?memvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "polyOver1P",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [/allP/=Qp | [q ->]]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/polyOverP=> j; rewrite coef_map rpredZ ?memv_line.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists (map_poly (coord [tuple 1] 0) p).",
                        "VernacExtend",
                        "6162f8a55cdd539c5c175c6a8994779cc18b00b7"
                    ]
                },
                {
                    "command": [
                        "rewrite -map_poly_comp map_poly_id // => _ /Qp/vlineP[a ->] /=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite linearZ /= (coord_free 0) ?mulr1 // seq1_free ?oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algid_subproof",
            "line_nb": 465,
            "steps": [
                {
                    "command": [
                        "apply: sig2W; case: has_algidP => [[e]|]; last by exists 0; rewrite ?mem0v.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case=> Ae _ idAe; exists e => //; apply/subvP=> u /idAe[eu_u ue_u].",
                        "VernacExtend",
                        "c9a31b5c3dbfd076b1a173b39b5981bc72187636"
                    ]
                },
                {
                    "command": [
                        "by rewrite memv_cap !memv_ker !lfun_simp /= eu_u ue_u subrr eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_algid",
            "line_nb": 471,
            "steps": [
                {
                    "command": [
                        "by rewrite /algid; case: algid_subproof.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algidl",
            "line_nb": 474,
            "steps": [
                {
                    "command": [
                        "rewrite /algid; case: algid_subproof => e _ /=; have /andP[-> _] := valP A.",
                        "VernacExtend",
                        "c7b5d5b8dfbc53121b4f46ce0816fec04d854bef"
                    ]
                },
                {
                    "command": [
                        "move/subvP=> idAe u /idAe/memv_capP[].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite memv_ker !lfun_simp /= subr_eq0 => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algidr",
            "line_nb": 479,
            "steps": [
                {
                    "command": [
                        "rewrite /algid; case: algid_subproof => e _ /=; have /andP[-> _] := valP A.",
                        "VernacExtend",
                        "c7b5d5b8dfbc53121b4f46ce0816fec04d854bef"
                    ]
                },
                {
                    "command": [
                        "move/subvP=> idAe u /idAe/memv_capP[_].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite memv_ker !lfun_simp /= subr_eq0 => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitr_algid1",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "by move=> Eu /mulrI; apply; rewrite mulr1 algidr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algid_eq1",
            "line_nb": 487,
            "steps": [
                {
                    "command": [
                        "by apply/eqP/idP=> [<- | /algidr <-]; rewrite ?memv_algid ?mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algid_neq0",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "have /andP[/has_algidP[u [Au nz_u _]] _] := valP A.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: contraNneq nz_u => e0; rewrite -(algidr Au) e0 mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dim_algid",
            "line_nb": 494,
            "steps": [
                {
                    "command": [
                        "by rewrite dim_vline algid_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adim_gt0",
            "line_nb": 497,
            "steps": [
                {
                    "command": [
                        "by rewrite -(dim_algid A) dimvS // -memvE ?memv_algid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_asubv0",
            "line_nb": 500,
            "steps": [
                {
                    "command": [
                        "by rewrite subv0 -dimv_eq0 -lt0n adim_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adim1P",
            "line_nb": 503,
            "steps": [
                {
                    "command": [
                        "rewrite eqn_leq adim_gt0 -(memv_algid A) andbC -(dim_algid A) -eqEdim eq_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: eqP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "asubv",
            "line_nb": 507,
            "steps": [
                {
                    "command": [
                        "by have /andP[] := valP A.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memvM",
            "line_nb": 510,
            "steps": [
                {
                    "command": [
                        "exact/prodvP/asubv.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodv_id",
            "line_nb": 513,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubv asubv; apply/subvP=> u Au.",
                        "VernacExtend",
                        "da24caf87c1bbbad0538b8be68905ec456c78aa7"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(algidl Au) memv_mul // memv_algid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prodv_sub",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "by move=> sUA sVA; rewrite -prodv_id prodvS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expv_id",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "by elim: n => // n IHn; rewrite !expvSl prodvA prodv_id -expvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limg_amulr",
            "line_nb": 523,
            "steps": [
                {
                    "command": [
                        "rewrite -(span_basis (vbasisP U)) limg_span !span_def big_distrl /= big_map.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => u; rewrite prodv_line lfunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_cosetP",
            "line_nb": 527,
            "steps": [
                {
                    "command": [
                        "rewrite -limg_amulr.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: (iffP memv_imgP) => [] [u] Uu ->; exists u; rewrite ?lfunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dim_cosetv_unit",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "by move/lker0_amulr/eqP=> Uu; rewrite -limg_amulr limg_dim_eq // Uu capv0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memvV",
            "line_nb": 534,
            "steps": [
                {
                    "command": [
                        "suffices{u} invA: invr_closed A by apply/idP/idP=> /invA; rewrite ?invrK.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "move=> u Au; have [Uu | /invr_out-> //] := boolP (u \\is a GRing.unit).",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite memvE -(limg_ker0 _ _ (lker0_amulr Uu)) limg_line lfunE /= mulVr //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suff ->: (amulr u @: A)%VS = A by rewrite -memvE -algid_eq1 (unitr_algid1 Au).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite limg_amulr -dimv_leqif_eq ?prodv_sub ?dim_cosetv_unit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centraliser1_is_aspace",
            "line_nb": 548,
            "steps": [
                {
                    "command": [
                        "rewrite /is_aspace has_algid1 ?cent1v1 //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/prodvP=> v w /cent1vP-cuv /cent1vP-cuw.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply/cent1vP; rewrite -mulrA cuw !mulrA cuv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centraliser_is_aspace",
            "line_nb": 554,
            "steps": [
                {
                    "command": [
                        "rewrite /is_aspace has_algid1 ?centv1 //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/prodvP=> u w /centvP-cVu /centvP-cVw.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply/centvP=> v Vv; rewrite /= -mulrA cVw // !mulrA cVu.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "centv_algid",
            "line_nb": 560,
            "steps": [
                {
                    "command": [
                        "by apply/centvP=> u Au; rewrite algidl ?algidr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algid_center",
            "line_nb": 564,
            "steps": [
                {
                    "command": [
                        "rewrite -(algidl (subvP (centerv_sub A) _ (memv_algid _))) algidr //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite memv_cap memv_algid centv_algid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "skew_field_algid1",
            "line_nb": 581,
            "steps": [
                {
                    "command": [
                        "by rewrite (unitr_algid1 (memv_algid A)) ?fieldT ?algid_neq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "skew_field_module_dimS",
            "line_nb": 607,
            "steps": [
                {
                    "command": [
                        "case/skew_field_module_semisimple=> X [<- /directvP-> nzX] /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite big_seq prime.dvdn_sum // => x /(memPn nzX)nz_x.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite dim_cosetv_unit ?fieldT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "skew_field_dimS",
            "line_nb": 612,
            "steps": [
                {
                    "command": [
                        "by move=> sAB; rewrite skew_field_module_dimS ?prodv_sub.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agenvEl",
            "line_nb": 628,
            "steps": [
                {
                    "command": [
                        "pose f V := (1 + U * V)%VS; rewrite -/(f _); pose n := \\dim {:aT}.",
                        "VernacExtend",
                        "183844ed1cbc2fcc661c7a2651cca9af4585eb3d"
                    ]
                },
                {
                    "command": [
                        "have ->: agenv U = iter n f 0%VS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /agenv -/n; elim: n => [|n IHn]; first by rewrite big_ord0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite big_ord_recl /= -{}IHn; congr (1 + _)%VS; rewrite big_distrr /=.",
                        "VernacExtend",
                        "9d78117f9fa00d8b79d08aff717709f8d084ba84"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_bigr => i; rewrite expvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have fS i j: i <= j -> (iter i f 0 <= iter j f 0)%VS.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by elim: i j => [|i IHi] [|j] leij; rewrite ?sub0v //= addvS ?prodvSr ?IHi.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suffices /(@trajectP _ f _ n.+1)[i le_i_n Dfi]: looping f 0%VS n.+1.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite eqEsubv -iterS fS // Dfi fS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: contraLR (dimvS (subvf (iter n.+1 f 0%VS))); rewrite -/n -ltnNge.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite -looping_uniq; elim: n.+1 => // i IHi; rewrite trajectSr rcons_uniq.",
                        "VernacExtend",
                        "c376f01ebc4f30ac37ca603296f6548f23fe4a48"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}trajectSr mem_rcons inE negb_or eq_sym eqEdim fS ?leqW // -ltnNge.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -andbA => /and3P[lt_fi _ /IHi/leq_ltn_trans->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agenv_modl",
            "line_nb": 647,
            "steps": [
                {
                    "command": [
                        "rewrite big_distrl /= => idlU_V; apply/subv_sumP=> [[i _] /= _].",
                        "VernacExtend",
                        "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
                    ]
                },
                {
                    "command": [
                        "elim: i => [|i]; first by rewrite expv0 prod1v.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: subv_trans; rewrite expvSr -prodvA prodvSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agenv_modr",
            "line_nb": 652,
            "steps": [
                {
                    "command": [
                        "rewrite big_distrr /= => idrU_V; apply/subv_sumP=> [[i _] /= _].",
                        "VernacExtend",
                        "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
                    ]
                },
                {
                    "command": [
                        "elim: i => [|i]; first by rewrite expv0 prodv1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: subv_trans; rewrite expvSl prodvA prodvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agenv_is_aspace",
            "line_nb": 657,
            "steps": [
                {
                    "command": [
                        "rewrite /is_aspace has_algid1; last by rewrite memvE agenvEl addvSl.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite agenv_modl // [V in (_ <= V)%VS]agenvEl addvSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agenvE",
            "line_nb": 662,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agenvM",
            "line_nb": 665,
            "steps": [
                {
                    "command": [
                        "exact: prodv_id.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agenvX",
            "line_nb": 668,
            "steps": [
                {
                    "command": [
                        "exact: expv_id.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub1_agenv",
            "line_nb": 671,
            "steps": [
                {
                    "command": [
                        "by rewrite agenvEl addvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_agenv",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "by rewrite 2!agenvEl addvC prodvDr prodv1 -addvA addvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subX_agenv",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "by case: n => [|n]; rewrite ?sub1_agenv // -(agenvX n) expvS // sub_agenv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agenv_id",
            "line_nb": 688,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubv sub_agenv andbT.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite agenv_sub_modl ?sub1_agenv ?agenvM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agenvS",
            "line_nb": 692,
            "steps": [
                {
                    "command": [
                        "move=> sUV; rewrite agenv_sub_modl ?sub1_agenv //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[Vs in (_ <= Vs)%VS]agenvM prodvSl ?(subv_trans sUV) ?sub_agenv.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agenv_add_id",
            "line_nb": 696,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubv andbC agenvS ?addvS ?sub_agenv //=.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "rewrite agenv_sub_modl ?sub1_agenv //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -[rhs in (_ <= rhs)%VS]agenvM prodvSl // subv_add agenvS ?addvSl //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "exact: subv_trans (addvSr U V) (sub_agenv _).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subv_adjoin",
            "line_nb": 702,
            "steps": [
                {
                    "command": [
                        "by rewrite (subv_trans (sub_agenv _)) ?agenvS ?addvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subv_adjoin_seq",
            "line_nb": 705,
            "steps": [
                {
                    "command": [
                        "by rewrite (subv_trans (sub_agenv _)) // ?agenvS ?addvSl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "memv_adjoin",
            "line_nb": 708,
            "steps": [
                {
                    "command": [
                        "by rewrite memvE (subv_trans (sub_agenv _)) ?agenvS ?addvSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "seqv_sub_adjoin",
            "line_nb": 711,
            "steps": [
                {
                    "command": [
                        "by apply/span_subvP; rewrite (subv_trans (sub_agenv _)) ?agenvS ?addvSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvP_adjoin",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "exact/subvP/subv_adjoin.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjoin_nil",
            "line_nb": 717,
            "steps": [
                {
                    "command": [
                        "by rewrite span_nil addv0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjoin_cons",
            "line_nb": 720,
            "steps": [
                {
                    "command": [
                        "by rewrite span_cons addvA agenv_add_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjoin_rcons",
            "line_nb": 723,
            "steps": [
                {
                    "command": [
                        "by rewrite -cats1 span_cat addvA span_seq1 agenv_add_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjoin_seq1",
            "line_nb": 726,
            "steps": [
                {
                    "command": [
                        "by rewrite adjoin_cons adjoin_nil agenv_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjoinC",
            "line_nb": 729,
            "steps": [
                {
                    "command": [
                        "by rewrite !agenv_add_id -!addvA (addvC <[x]>%VS).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjoinSl",
            "line_nb": 732,
            "steps": [
                {
                    "command": [
                        "by move=> sUV; rewrite agenvS ?addvS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjoin_seqSl",
            "line_nb": 735,
            "steps": [
                {
                    "command": [
                        "by move=> sUV; rewrite agenvS ?addvS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adjoin_seqSr",
            "line_nb": 738,
            "steps": [
                {
                    "command": [
                        "by move/sub_span=> s_rs12; rewrite agenvS ?addvS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvs_mulA",
            "line_nb": 751,
            "steps": [
                {
                    "command": [
                        "by move=> x y z; apply/val_inj/mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvs_mu1l",
            "line_nb": 754,
            "steps": [
                {
                    "command": [
                        "by move=> x; apply/val_inj/algidl/(valP x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvs_mul1",
            "line_nb": 757,
            "steps": [
                {
                    "command": [
                        "by move=> x; apply/val_inj/algidr/(valP x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvs_mulDl",
            "line_nb": 760,
            "steps": [
                {
                    "command": [
                        "move=> x y z; apply/val_inj/mulrDl.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvs_mulDr",
            "line_nb": 763,
            "steps": [
                {
                    "command": [
                        "move=> x y z; apply/val_inj/mulrDr.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvs_scaleAl",
            "line_nb": 768,
            "steps": [
                {
                    "command": [
                        "exact/val_inj/scalerAl.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subvs_scaleAr",
            "line_nb": 772,
            "steps": [
                {
                    "command": [
                        "exact/val_inj/scalerAr.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vsval_unitr",
            "line_nb": 780,
            "steps": [
                {
                    "command": [
                        "case: w => /= u Au Uu; have Au1: u^-1 \\in A by rewrite memvV.",
                        "VernacExtend",
                        "c6460972b7febd45d9a49b3c1ce4f3fe36b53169"
                    ]
                },
                {
                    "command": [
                        "apply/unitrP; exists (Subvs Au1).",
                        "VernacExtend",
                        "3df6774afc065b08add9a9900f5bed4995b7ab37"
                    ]
                },
                {
                    "command": [
                        "by split; apply: val_inj; rewrite /= ?mulrV ?mulVr ?(unitr_algid1 Au).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vsval_invr",
            "line_nb": 785,
            "steps": [
                {
                    "command": [
                        "move=> Uu; have def_w: w / w * w = w by rewrite divrK ?vsval_unitr.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "by apply: (mulrI Uu); rewrite -[in u in u / _]def_w ?mulrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ahomP",
            "line_nb": 805,
            "steps": [
                {
                    "command": [
                        "apply: (iffP ahom_inP) => [[fM f1] | fRM_P]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "pose fRM := LRMorphism fRM_P.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "by split; [apply: in2W (rmorphM fRM) | apply: (rmorph1 fRM)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split; last exact: linearZZ; split; first exact: linearB.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by split=> // x y; rewrite fM ?memvf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linfun_is_ahom",
            "line_nb": 818,
            "steps": [
                {
                    "command": [
                        "by apply/ahom_inP; split=> [x y|]; rewrite !lfunE ?rmorphM ?rmorph1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ahom_is_lrmorphism",
            "line_nb": 828,
            "steps": [
                {
                    "command": [
                        "by apply/ahomP; case: f.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ahomWin",
            "line_nb": 833,
            "steps": [
                {
                    "command": [
                        "by apply/ahom_inP; split; [apply: in2W (rmorphM _) | apply: rmorph1].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "id_is_ahom",
            "line_nb": 836,
            "steps": [
                {
                    "command": [
                        "by apply/ahom_inP; split=> [x y|] /=; rewrite !id_lfunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aimgM",
            "line_nb": 845,
            "steps": [
                {
                    "command": [
                        "apply/eqP; rewrite eqEsubv; apply/andP; split; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/prodvP=> _ _ /memv_imgP[u Hu ->] /memv_imgP[v Hv ->].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -rmorphM memv_img // memv_mul.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/subvP=> _ /memv_imgP[w UVw ->]; rewrite memv_preim (subvP _ w UVw) //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by apply/prodvP=> u v Uu Vv; rewrite -memv_preim rmorphM memv_mul // memv_img.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aimg1",
            "line_nb": 852,
            "steps": [
                {
                    "command": [
                        "by rewrite limg_line rmorph1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aimgX",
            "line_nb": 855,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IH]; first by rewrite !expv0 aimg1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !expvSl aimgM IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aimg_adjoin",
            "line_nb": 865,
            "steps": [
                {
                    "command": [
                        "by rewrite aimg_agen limg_add limg_line.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aimg_adjoin_seq",
            "line_nb": 868,
            "steps": [
                {
                    "command": [
                        "by rewrite aimg_agen limg_add limg_span.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ker_sub_ahom_is_aspace",
            "line_nb": 871,
            "steps": [
                {
                    "command": [
                        "rewrite /is_aspace has_algid1; last by apply/eqlfunP; rewrite !rmorph1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/prodvP=> a b /eqlfunP Dfa /eqlfunP Dfb.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply/eqlfunP; rewrite !rmorphM /= Dfa Dfb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}