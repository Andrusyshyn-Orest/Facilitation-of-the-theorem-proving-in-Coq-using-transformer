{
    "filename": "Elements/OriginalProofs/proposition_44A.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_PGrotate.",
            "VernacRequire",
            "17bb59d77feb0e07635bca0a444781548dd7123d"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_33B.",
            "VernacRequire",
            "0d05c682f37a37c88da6cd4d3342cc27a8430297"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_30.",
            "VernacRequire",
            "1e1840810df20c72b2c8d997e0898586fa521eb1"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_diagonalsbisect.",
            "VernacRequire",
            "9b158a4b46a3e1f5152ddb9647efe19032ed056a"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_triangletoparallelogram.",
            "VernacRequire",
            "5e152ef4e5c604875c2cd9ae7fec10f81d845999"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_parallelbetween.",
            "VernacRequire",
            "1ad899fed6b9679e576f5f6d3ff0d2c32717af49"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_43.",
            "VernacRequire",
            "152258ea3b3f91840c49797856774bc47fcbc8ec"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_43B.",
            "VernacRequire",
            "f8b6f245e61f9612d450accdb2d0aeb335e26821"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:area}.",
            "VernacContext",
            "81ffa005c6d27ee71f963c56f9847264efce50bb"
        ],
        [
            "Lemma proposition_44A : forall A B D E F G J N, PG B E F G -> CongA E B G J D N -> BetS A B E -> exists X Y, PG A B X Y /\\ CongA A B X J D N /\\ EF B E F G Y X B A /\\ BetS G B X.",
            "VernacStartTheoremProof",
            "259ce9825a2fea7774de7a9611eed16ac528b585"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (PG E F G B) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "e4e701b2f7b02aa2efd7c80e14f9e30d1b1d061c"
        ],
        [
            "assert (PG F G B E) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "2d9661345c53a432ed19bd52ab4838097f4b26ea"
        ],
        [
            "assert (PG G B E F) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "8e370be37a2f0b7eb02944ddf2eb5308f9ef9955"
        ],
        [
            "assert (Par G F B E) by (conclude_def PG ).",
            "VernacExtend",
            "dfbd338371499275f93e635362702dfdc64c2228"
        ],
        [
            "assert (nCol G B E) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "67419d1adf842215d9ef7035ef4e433889ee3b08"
        ],
        [
            "assert (neq G B) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "b1be4929c8a4a158116f929cfc6a8cca94a96a27"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists q, (BetS G B q /\\ Cong B q G B)) by (conclude lemma_extension);destruct Tf as [q];spliter.",
            "VernacExtend",
            "442510ac8bb91c890e8a42d1334bfa1dbc2fe9c9"
        ],
        [
            "assert (nCol E B G) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "5c2161d6a733f70001080615d658239e8ac612b6"
        ],
        [
            "assert (Col A B E) by (conclude_def Col ).",
            "VernacExtend",
            "cb1e4569cbb7ad4caf776e0a6f60f35b634e0870"
        ],
        [
            "assert (Col E B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4c5e1f93c7fe9947afff50c1ded8f4ffe0ea9f55"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col E B B) by (conclude_def Col ).",
            "VernacExtend",
            "56c786741aa7e98ffe5eec61f455633580850771"
        ],
        [
            "assert (neq A B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "729d99d00883cb65929e87e6a48ea0634ac9dc68"
        ],
        [
            "assert (nCol A B G) by (conclude lemma_NChelper).",
            "VernacExtend",
            "37db0d53353780f031693ff20d2e1c9f49ab13ae"
        ],
        [
            "assert (Col G B q) by (conclude_def Col ).",
            "VernacExtend",
            "fec0cf441aac6ceb111aae341131b40eee732ea5"
        ],
        [
            "assert (nCol G B A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "39149f154d491af3716c093df8fa98ed178436f0"
        ],
        [
            "assert (neq G q) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a420273dcacaa5b6e6062955594c821a5ab738de"
        ],
        [
            "assert (neq q G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "faee6437ad1e4418b9ea40883fd1871e17d93b04"
        ],
        [
            "assert (eq G G) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
        ],
        [
            "assert (Col G B G) by (conclude_def Col ).",
            "VernacExtend",
            "ce6d926477adcb4a03dec4331cec14426d13d766"
        ],
        [
            "assert (nCol q G A) by (conclude lemma_NChelper).",
            "VernacExtend",
            "eebfb19162f7f687b74ccc0204e938a1f09af855"
        ],
        [
            "assert (nCol G q A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "ecfab532dea1dfd885a9a35306667f014e9902ab"
        ],
        [
            "rename_H H;let Tf:=fresh in assert (Tf:exists H h T, (BetS H A h /\\ CongA h A B A B G /\\ CongA h A B G B A /\\ CongA B A h G B A /\\ CongA H A B A B q /\\ CongA H A B q B A /\\ CongA B A H q B A /\\ Par H h G q /\\ Cong H A B q /\\ Cong A h G B /\\ Cong A T T B /\\ Cong H T T q /\\ Cong G T T h /\\ BetS H T q /\\ BetS G T h /\\ BetS A T B)) by (conclude proposition_31);destruct Tf as [H[h[T]]];spliter.",
            "VernacExtend",
            "2612a4349b6b7e4528681bdbceef0373fbc1c8f5"
        ],
        [
            "assert (Par H h q G) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "07564f4d3cf334a9249cccd588983cfa65a0080d"
        ],
        [
            "assert (Col G B q) by (conclude_def Col ).",
            "VernacExtend",
            "fec0cf441aac6ceb111aae341131b40eee732ea5"
        ],
        [
            "assert (Col q G B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "95bee5db24c00fb8ca9fc5dc03de75c142fa561c"
        ],
        [
            "assert (neq B G) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "34607d07e486f27f87ee91ed277c7ef6c786e3f5"
        ],
        [
            "assert (Par H h B G) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "d5c6bc37343d65382774a39ed8c708b71e315804"
        ],
        [
            "assert (Par H h G B) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "5c1ac7a780e2f995b7e7616a09244c89c7d98f30"
        ],
        [
            "assert (Par G B H h) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "a0850642c3ee95f592335e4b37761431f0b4b72f"
        ],
        [
            "assert (Par G B h H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "ce4cbb4d5379fc37643d55768439439a7412fc46"
        ],
        [
            "assert (Col H A h) by (conclude_def Col ).",
            "VernacExtend",
            "697c186d5a5c67190bf7675aaeebf997d0c9c4f7"
        ],
        [
            "assert (Col h H A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7821b3fcf898b338f302568f17a8940f90989628"
        ],
        [
            "assert (neq H A) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8e2dcd7f7987670d6350726abb922ecc38f8c21c"
        ],
        [
            "assert (neq A H) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "6d8bedb9bbf6ca2c1b894a433ac1aa78fa7a565b"
        ],
        [
            "assert (Par G B A H) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "830308db81d666c07f63d6a130330718040f73ce"
        ],
        [
            "assert (Par G B H A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "01e9b08bae040b7d651779f40a504b9a1c657f64"
        ],
        [
            "assert (Par H A G B) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "07f73a664cd44c7203cbc59743515c76b9995d7a"
        ],
        [
            "assert (Cong H A G B) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "a322e697d3689e9f7c1e91cbf1fffe8c2655a942"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col A B B) by (conclude_def Col ).",
            "VernacExtend",
            "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
        ],
        [
            "assert (Col A T B) by (conclude_def Col ).",
            "VernacExtend",
            "991d6e317dc8ed2681242760c544cb7f562db343"
        ],
        [
            "assert (Col A B T) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6166d862547ee3a50944fd3e8ec3678f30ba7414"
        ],
        [
            "assert (nCol B H A) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "919f5773167c59c0767bc0f65603e492e5503997"
        ],
        [
            "assert (nCol A B H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "52d1bd76b1055d436ec6bda062df5f3b400eeec8"
        ],
        [
            "assert (nCol H A B) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "398860d5b1b922406291c35959c10b72480c8900"
        ],
        [
            "assert (nCol A B H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "52d1bd76b1055d436ec6bda062df5f3b400eeec8"
        ],
        [
            "assert (OS H G A B) by (conclude_def OS ).",
            "VernacExtend",
            "8cbff4095c5e146306c73d8b1953de66aa11fbd8"
        ],
        [
            "assert ((Par H G A B /\\ Cong H G A B)) by (conclude proposition_33B).",
            "VernacExtend",
            "b43ae4adc0544a028f40056e6c0937684eb49d4f"
        ],
        [
            "assert (Par A B H G) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "7015e37afee903862f9b85ca5f8e8a9d6a8ccf40"
        ],
        [
            "assert (Par A B G H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "69b94de604a0f8a040794e1d8eb298c5ce875b7b"
        ],
        [
            "assert ((Par G B E F /\\ Par G F B E)) by (conclude_def PG ).",
            "VernacExtend",
            "1e86751e7e73a5694771a4634ac8b1e167d4454c"
        ],
        [
            "assert (Par G F E B) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "1e062c8de311d27540fc88a740029ecc1c3210ba"
        ],
        [
            "assert (Col A B E) by (conclude_def Col ).",
            "VernacExtend",
            "cb1e4569cbb7ad4caf776e0a6f60f35b634e0870"
        ],
        [
            "assert (Col E B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4c5e1f93c7fe9947afff50c1ded8f4ffe0ea9f55"
        ],
        [
            "assert (Par G F A B) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "5bc025accf3ee695a010c07ab1b4f8e69c8f7ddd"
        ],
        [
            "assert (Par A B G F) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "e2e4aced90878071a8c580e0fd628305144315b0"
        ],
        [
            "assert (Col G H F) by (conclude lemma_Playfair).",
            "VernacExtend",
            "6bab8def111271dd488bfa001b98a7d159809989"
        ],
        [
            "assert (Par H A B G) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "55971f557449d9f5944c76dd0fd7d43d4f6284ba"
        ],
        [
            "assert (Par G B F E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "8514465a007e916a71053cb82a9ac3d262f1073e"
        ],
        [
            "assert (Par F E G B) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "86953b54c3c3ff43cb857d1c48636fa5f9df2bdd"
        ],
        [
            "assert (PG H A B G) by (conclude_def PG ).",
            "VernacExtend",
            "bb633c57282a586b7820c4875c573dab0d275996"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists j, (BetS H j B /\\ BetS A j G)) by (conclude lemma_diagonalsmeet);destruct Tf as [j];spliter.",
            "VernacExtend",
            "29be3679b1d9cae676103815e6e4dd66cb1f72b9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists k, (BetS G k E /\\ BetS B k F)) by (conclude lemma_diagonalsmeet);destruct Tf as [k];spliter.",
            "VernacExtend",
            "f8d1fa6ffd2c0f37b37e89adb6daf1da30e7d9a6"
        ],
        [
            "assert (BetS E B A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ef820e6889f664d0c160455ac9f6c28351c38f56"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Col F E E) by (conclude_def Col ).",
            "VernacExtend",
            "f15008d1282e21073687ac2ae0970095a0319567"
        ],
        [
            "assert (Col G B B) by (conclude_def Col ).",
            "VernacExtend",
            "dac7cec5e52edfa114b00e19675abdfc9cb989f7"
        ],
        [
            "assert (Col H A A) by (conclude_def Col ).",
            "VernacExtend",
            "8e0df73623a89b7b5f6d9297fa4a7c7355d0953c"
        ],
        [
            "assert (nCol F E B) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "97ccafde3f06a0138b61f2ee6b99abb95916f6dd"
        ],
        [
            "assert (neq F E) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "f6646b528289988e7684acafd2d3cbc16287268f"
        ],
        [
            "assert (neq G B) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "b1be4929c8a4a158116f929cfc6a8cca94a96a27"
        ],
        [
            "assert (nCol H A G) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "45039af42fa9caa5fd4e92e1c0cee71307cead7b"
        ],
        [
            "assert (neq H A) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "6393517868cef0a820b594a72c78e9652f1d9726"
        ],
        [
            "assert (Par H A F E) by (eauto using (proposition_30 _ _ _ _ _ _ _ _ _ _ H79 H1 H93)).",
            "VernacExtend",
            "30308cc2ae31907bf346fe9f446b984992d5db1e"
        ],
        [
            "assert (Cong G B F E) by (forward_using proposition_34).",
            "VernacExtend",
            "2e087833d4a63e1a44aa0b799cceb4bd01ec1e11"
        ],
        [
            "assert (Cong H A F E) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "d764047aa6a79d6252045114bd05689613b10c40"
        ],
        [
            "assert (Par G F B E) by (conclude_def PG ).",
            "VernacExtend",
            "dfbd338371499275f93e635362702dfdc64c2228"
        ],
        [
            "assert (Par H G A B) by (conclude_def PG ).",
            "VernacExtend",
            "223dd7f05b44e00068915e432a0e94d9f0cf7e2c"
        ],
        [
            "assert (Par B E G F) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "f8fd7f4a53973d95200f9cff830e73762bd32664"
        ],
        [
            "assert (Par A B H G) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "7015e37afee903862f9b85ca5f8e8a9d6a8ccf40"
        ],
        [
            "assert (TP B E G F) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "e930f6e74e0967500b2bc526fe88714217a51f40"
        ],
        [
            "assert (TP A B H G) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "ae4e8b385936c542f3976c8baa8b243b3885d26e"
        ],
        [
            "assert (OS G F B E) by (conclude_def TP ).",
            "VernacExtend",
            "6d5f32c8aa77f839456481b0fc935c6e048d832b"
        ],
        [
            "assert (OS H G A B) by (conclude_def TP ).",
            "VernacExtend",
            "7d8d537ac7e3257c585af1a6f933ceafcd53f133"
        ],
        [
            "assert (Col A B E) by (conclude_def Col ).",
            "VernacExtend",
            "cb1e4569cbb7ad4caf776e0a6f60f35b634e0870"
        ],
        [
            "assert (neq A E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9dc76a35f0423fea77251119a803e21c8f59a255"
        ],
        [
            "assert (OS H G A E) by (conclude lemma_samesidecollinear).",
            "VernacExtend",
            "5afa6a2d0ac8df5d1b66bca1b5f0a11d61c00ea3"
        ],
        [
            "assert (OS G F E B) by (conclude lemma_samesideflip).",
            "VernacExtend",
            "752aaa4023444aa831fd8cc418b40e7cea94133d"
        ],
        [
            "assert (Col E B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4c5e1f93c7fe9947afff50c1ded8f4ffe0ea9f55"
        ],
        [
            "assert (neq E A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "5eef00ef1d0a882b209a09f629d7ffc97b7486d2"
        ],
        [
            "assert (OS G F E A) by (conclude lemma_samesidecollinear).",
            "VernacExtend",
            "cd0e139fc2c265702cc1ad300d8e2755bd564e1f"
        ],
        [
            "assert (OS G F A E) by (conclude lemma_samesideflip).",
            "VernacExtend",
            "d6709d808b8a30498a2d819d96864e2b82daaba3"
        ],
        [
            "assert (OS H F A E) by (conclude lemma_samesidetransitive).",
            "VernacExtend",
            "4c0e312e33965489de8daa45107166e2366f9d3a"
        ],
        [
            "assert (Par H F A E) by (conclude proposition_33B).",
            "VernacExtend",
            "183808187d90ac1b271e3d2451c3ff3fb97f322a"
        ],
        [
            "assert (Par H A E F) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "ef6d77c7badd23595380afe271fcb2ab5b347168"
        ],
        [
            "assert (PG H A E F) by (conclude_def PG ).",
            "VernacExtend",
            "2d1de1145db80cad5366391f1b9e89fce8d47ac5"
        ],
        [
            "assert (nCol H F E) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "05dac6db72dfeacb1e5f637bd228bf2904b430e5"
        ],
        [
            "assert (nCol E F H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "3463d31759e60e71f41b95ddbf5a808f13eb266f"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists t, (Midpoint H t E /\\ Midpoint A t F)) by (conclude lemma_diagonalsbisect);destruct Tf as [t];spliter.",
            "VernacExtend",
            "54650f185fd96b4b4b0b27a83f496495ce0168bd"
        ],
        [
            "assert ((BetS H t E /\\ Cong H t t E)) by (conclude_def Midpoint ).",
            "VernacExtend",
            "223479ab98e3259e3fb0ebf9a4dd3fbcd6626923"
        ],
        [
            "assert ((BetS A t F /\\ Cong A t t F)) by (conclude_def Midpoint ).",
            "VernacExtend",
            "720ff74737983931250e212259b301d1cce1b536"
        ],
        [
            "assert (Cong A t F t) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "8f3ad9309368e96bcfbe0986a1a50dfc4019404e"
        ],
        [
            "assert (Cong H t E t) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "a57bb47ae892a36f8783cd53b25987d4c4f5a257"
        ],
        [
            "assert (Cong t A t F) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "4bdf917a263c104f565fcd2e34b31aad6b254ced"
        ],
        [
            "assert (nCol H E F) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "02694023f7d84a2716e6da5f60826c0cda803a0f"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists K, (BetS H B K /\\ BetS F E K)) by (conclude postulate_Euclid5);destruct Tf as [K];spliter.",
            "VernacExtend",
            "59990f1ace44a47d5d39fd22229c241fa829e5f2"
        ],
        [
            "assert (Col F E K) by (conclude_def Col ).",
            "VernacExtend",
            "e698943b4c5b17e74aa2d85faf6b6d2199f5c8f4"
        ],
        [
            "assert (Col E F K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d9bd127f0f076ee56d6343eecd988c2a59e8b4d2"
        ],
        [
            "assert (neq F K) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d0d9adba6bfb674c57153ebe6c79acd20215f358"
        ],
        [
            "assert (neq K F) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "b5124447f64f19c7d5439594a9b072936da17866"
        ],
        [
            "assert (Par H A K F) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "096eaaaaa9ce6023e70b1d7d861c450c5a2bb159"
        ],
        [
            "assert (Par H A F K) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "fff4e28878a22ef10e92b651806c002c21a0a105"
        ],
        [
            "assert (Par F K H A) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "ead66917673b4a2caf8dd63cb31a00dd2d5fc911"
        ],
        [
            "assert (Par F K A H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "b7b16d55198bf373fa3dc05a6ce21c3d4faf70b4"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (Col A H H) by (conclude_def Col ).",
            "VernacExtend",
            "752a371e1746e48b35408d6febcf6c383d3fcfb7"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists L, (PG H L K F /\\ Col A H L)) by (conclude lemma_triangletoparallelogram);destruct Tf as [L];spliter.",
            "VernacExtend",
            "eaca472e9ecf54b73f4c5eca005f9e7cebb2815a"
        ],
        [
            "assert (Par H L K F) by (conclude_def PG ).",
            "VernacExtend",
            "2c3d5525a0067b2660ac1b8445ec7cb416fe4e42"
        ],
        [
            "assert (nCol L K F) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "87b60ade3a5523f2af68c0ee70fdcee65969275b"
        ],
        [
            "assert (neq L K) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "c4bbd21c1fa168b07860858989cb3a286d663d8c"
        ],
        [
            "assert (neq K L) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "8ece4f9d9b1c30699377e831e8591e9745035265"
        ],
        [
            "assert (Par G B E F) by (conclude_def PG ).",
            "VernacExtend",
            "baeb9dd1051dab9e4e4db4259a5e622dfa9cdd6f"
        ],
        [
            "assert (Par G B F E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "8514465a007e916a71053cb82a9ac3d262f1073e"
        ],
        [
            "assert (Col F E E) by (conclude_def Col ).",
            "VernacExtend",
            "f15008d1282e21073687ac2ae0970095a0319567"
        ],
        [
            "assert (Col F E K) by (conclude_def Col ).",
            "VernacExtend",
            "e698943b4c5b17e74aa2d85faf6b6d2199f5c8f4"
        ],
        [
            "assert (neq E K) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b63cd02ce81ab06c82d52de5931de7e69c4b731d"
        ],
        [
            "assert (Par G B E K) by (conclude lemma_collinearparallel2).",
            "VernacExtend",
            "8947f208a95cd95b1bbdf91a44d29e9c80d91851"
        ],
        [
            "assert (Par E K G B) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "6984a2ee085af525ca16645e9ab540f0500854a0"
        ],
        [
            "assert (Col G B B) by (conclude_def Col ).",
            "VernacExtend",
            "dac7cec5e52edfa114b00e19675abdfc9cb989f7"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (PG B M K E /\\ Col G B M)) by (conclude lemma_triangletoparallelogram);destruct Tf as [M];spliter.",
            "VernacExtend",
            "923fe0ce42d4e257c10755acbddde9cde86a66bc"
        ],
        [
            "assert (PG L K F H) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "fa1ab581ab8ba3e88522ad6ab9ac043980ba9f67"
        ],
        [
            "assert (PG K L H F) by (conclude lemma_PGflip).",
            "VernacExtend",
            "7097aa06d71c2a82d4f3bd54f13691f30e1ccc17"
        ],
        [
            "assert (PG L H F K) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "6e934ca53a0173cd34f1f5540c608bc05aac6abf"
        ],
        [
            "assert (PG H F K L) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "5064ada1f2b3c089ecb6ac6a9386597c956f82eb"
        ],
        [
            "assert (PG A H G B) by (conclude lemma_PGflip).",
            "VernacExtend",
            "2651bd1ed4d7c7db07e82218b76a2fd5791b6a80"
        ],
        [
            "assert (Par A H G B) by (conclude_def PG ).",
            "VernacExtend",
            "f8a0050e5b3c0627e71a928ad11c1a41a92d51c2"
        ],
        [
            "assert (eq K K) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "89ee1e712221f97ec5067c4595ba2f1f13d3c25c"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (eq F F) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
        ],
        [
            "assert (Par B E M K) by (conclude_def PG ).",
            "VernacExtend",
            "b83ad513c183bd0e604c0d5eddcbe803ac0ea01e"
        ],
        [
            "assert (Par M K B E) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "8d8c2252252669bdcd4541e6c5b8d1658ebf78f3"
        ],
        [
            "assert (Par K M E B) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "5ed9f312d808c132c80b72979dc8ab74436eafc8"
        ],
        [
            "assert (Par G F B E) by (conclude_def PG ).",
            "VernacExtend",
            "dfbd338371499275f93e635362702dfdc64c2228"
        ],
        [
            "assert (nCol E M K) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "2d45fe20b0ab787c0aa937f62348f19193485d66"
        ],
        [
            "assert (nCol B E K) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "74a8d2fd592a9ed70acbc45be6816866a0c6285c"
        ],
        [
            "assert (nCol G F B) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "683a3186c912bd003892858c2da53983e0d2c61b"
        ],
        [
            "assert (Par M K B E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "6bbe462ce544f23f12c81a2f5f970e31fb14ac77"
        ],
        [
            "assert (Par G F B E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "c2092402841830cad4124bfa967ee674d1755517"
        ],
        [
            "assert (BetS K E F) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "96545dd469ea6b45821711bd1840e33176d63689"
        ],
        [
            "assert (Col M K K) by (conclude_def Col ).",
            "VernacExtend",
            "c00dfb2e4aa1b5b8205dd8b1e382376ed1c404ee"
        ],
        [
            "assert (Col B E E) by (conclude_def Col ).",
            "VernacExtend",
            "8cce97936f346b902dd5d8ffb6243f42866766aa"
        ],
        [
            "assert (Col G F F) by (conclude_def Col ).",
            "VernacExtend",
            "29a756ea7c13e234cb11b24c27e6d3d43fb80317"
        ],
        [
            "assert (neq M K) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "fed90c14f8db2e5b4e2064554b457ee6b3967354"
        ],
        [
            "assert (neq B E) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "4dbb01f45ca367df5c5f49f1729f9e038d94a5c4"
        ],
        [
            "assert (neq G F) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "5157bfcbe17dc114331ced0d2fb8dff9e42e5ca8"
        ],
        [
            "assert (Par M K G F) by (conclude proposition_30).",
            "VernacExtend",
            "fd2524202f9dcb588655aca7e34dfe7b08dcce67"
        ],
        [
            "assert (Par K M F G) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "975905f65517c1316e05bf261fe2bd075cf2f77b"
        ],
        [
            "assert (Par F G K M) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "879110ed005865430117ddc23af7a7bb7e6fd4cf"
        ],
        [
            "assert (Par H F L K) by (conclude_def PG ).",
            "VernacExtend",
            "d71005248df19c6347b73dc3a3ce2eec329b8bc2"
        ],
        [
            "assert (Par L K H F) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "19bde53405d869d73606fbe16b5cf3f12d4708bc"
        ],
        [
            "assert (Par K L H F) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "8d68063849c1c9e9eeb42722b29a7baef8151cb7"
        ],
        [
            "assert (Col H F G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "65917e3db87e8b33883f9e1e458688317e2a0f4d"
        ],
        [
            "assert (Par K L G F) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "e44fc60ce1007bf991afc4c303b2146f3bc08c08"
        ],
        [
            "assert (Par K L F G) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "de4578b76d6048507c4f7cfad4611a780f727484"
        ],
        [
            "assert (Par F G K L) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "422493b3b32c668606c45b536905bfc01849e5d7"
        ],
        [
            "assert (Col K M L) by (conclude lemma_Playfair).",
            "VernacExtend",
            "ff2be1927218b004d9c602065c2d6c17b2a0f1f6"
        ],
        [
            "assert (Col M K L) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b7018f356dcf709ae0286cd08c2dcdd08ba12818"
        ],
        [
            "assert (Par B E M K) by (conclude_def PG ).",
            "VernacExtend",
            "b83ad513c183bd0e604c0d5eddcbe803ac0ea01e"
        ],
        [
            "assert (neq L K) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "7c91c93de6daef2a6731c28e8a059cdfef0eca06"
        ],
        [
            "assert (Par B E L K) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "98b1515abbfe22099f2fa25cf46fc1032abae9e7"
        ],
        [
            "assert (Par L K B E) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "d372df296b4edc7f376fe50d0481b264c87bbd80"
        ],
        [
            "assert (Par L K E B) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "3f11d6f4f9ebecea4b027f66f96ae2f745f68a2b"
        ],
        [
            "assert (Col A B E) by (conclude_def Col ).",
            "VernacExtend",
            "cb1e4569cbb7ad4caf776e0a6f60f35b634e0870"
        ],
        [
            "assert (Col E B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4c5e1f93c7fe9947afff50c1ded8f4ffe0ea9f55"
        ],
        [
            "assert (Par L K A B) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "adb9e0d606154d47350c88f04277cdf3ebea664c"
        ],
        [
            "assert (Par A B L K) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "4c911c17cd43c03505f2a2b7203bdf54c3405268"
        ],
        [
            "assert (Par A B K L) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "92aac5fe0e21659d054331350acb8885f118b53d"
        ],
        [
            "assert (BetS K B H) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "21faff77dd0aeb6cdd5d8ebe86724f35216c87a7"
        ],
        [
            "assert (Col L A H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ee5bbd937ac259b876d848e3153530a4fbce6ceb"
        ],
        [
            "assert (BetS L A H) by (conclude lemma_parallelbetween).",
            "VernacExtend",
            "a6884dd1b2c806f7909f47091cc141a79c53f9c0"
        ],
        [
            "assert (BetS H A L) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "7f1a3625c146db21103e9b36e86a40b8f839963f"
        ],
        [
            "assert (Par H A G B) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "bc586134ddbec0900b1fdbe0f16fc94d8a74be39"
        ],
        [
            "assert (nCol B M K) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "46e8ae7888231b5e4295d6f466302602e4a6f735"
        ],
        [
            "assert (neq M B) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "b3bc333fa0fb1ed33f5799c206d7855e8d0c9dbe"
        ],
        [
            "assert (Par H A M B) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "f3c1086590b6df45bb0fe2f344db6c76d3260a3d"
        ],
        [
            "assert (Par M B H A) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "fb6188903603f538587036016b4af061fc620d6d"
        ],
        [
            "assert (Par M B A H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "14130ea4744770bace30d9caa9cb21ab08ad9740"
        ],
        [
            "assert (Col A H L) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5629f030d296972ef04fd5e3e643b33adf8b6254"
        ],
        [
            "assert (Par H L K F) by (conclude_def PG ).",
            "VernacExtend",
            "2c3d5525a0067b2660ac1b8445ec7cb416fe4e42"
        ],
        [
            "assert (nCol H L K) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "ce1d5758fcbfc1e315548933024c4527592c5ee7"
        ],
        [
            "assert (neq L H) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "2d373891d6f3526fc2db087325af17d6f5def208"
        ],
        [
            "assert (Par M B L H) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "ff7a1c9759f5fc866050bc37c1721bd5a1438d1f"
        ],
        [
            "assert (Par M B H L) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "ecf0cee0b1454e0ec00116161409e9a51b7fdd6d"
        ],
        [
            "assert (Col L M K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "39f3edbb894ffea0b291ba713d45ff208570fb82"
        ],
        [
            "assert (BetS L M K) by (conclude lemma_parallelbetween).",
            "VernacExtend",
            "7654449f1f307f0c66a1dcb97bf7011b4b1aa641"
        ],
        [
            "assert (Par G B E F) by (conclude_def PG ).",
            "VernacExtend",
            "baeb9dd1051dab9e4e4db4259a5e622dfa9cdd6f"
        ],
        [
            "assert (Col F E K) by (conclude_def Col ).",
            "VernacExtend",
            "e698943b4c5b17e74aa2d85faf6b6d2199f5c8f4"
        ],
        [
            "assert (Col E F K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d9bd127f0f076ee56d6343eecd988c2a59e8b4d2"
        ],
        [
            "assert (neq F K) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d0d9adba6bfb674c57153ebe6c79acd20215f358"
        ],
        [
            "assert (neq K F) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "b5124447f64f19c7d5439594a9b072936da17866"
        ],
        [
            "assert (Par G B K F) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "14f221de49967035141cb8fff1d9a8fef9f15422"
        ],
        [
            "assert (Col F G H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "feaef5853dd45c1b1e896d217e39eb556941fec4"
        ],
        [
            "assert (BetS F G H) by (conclude lemma_parallelbetween).",
            "VernacExtend",
            "d43d988e387bf4ca08f1cad8ecffd5db22094ef9"
        ],
        [
            "assert (BetS H G F) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "056c6e8f48c3cf2c8e32e9e78f5a4e5c461667e6"
        ],
        [
            "assert (PG A B G H) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "eb558ec9f34a342247361b8a628d4fabe5dbb91c"
        ],
        [
            "assert (PG B G H A) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "926b555705d1d5d80c53eda155217c01e8b9adcc"
        ],
        [
            "assert (PG G H A B) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "7790c742393abc6a72d1fc2ea23929b0989f7937"
        ],
        [
            "assert (PG M K E B) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "2cd62d09306eab0f580d8fe292b8f8bc0778e0e2"
        ],
        [
            "assert (PG K E B M) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "d8174604ad7eba52e1d76983a2f3391b24c7ea55"
        ],
        [
            "assert (PG E B M K) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "5997a752561e4ccd65e26cc25c36417cde51d9d7"
        ],
        [
            "assert (EF B E F G L M B A) by (conclude proposition_43).",
            "VernacExtend",
            "e28ffddc2c3c26d7493429f194567c671905877d"
        ],
        [
            "assert (PG A H G B) by (conclude lemma_PGflip).",
            "VernacExtend",
            "2651bd1ed4d7c7db07e82218b76a2fd5791b6a80"
        ],
        [
            "assert (PG M B E K) by (conclude lemma_PGflip).",
            "VernacExtend",
            "0a71e571e26cf2b7dd2ed0fa18eb0d6815ab2e20"
        ],
        [
            "assert (PG A B M L) by (conclude proposition_43B).",
            "VernacExtend",
            "6d1d985e5699447d927f831df5a602fa7f501ec5"
        ],
        [
            "assert (Col H G F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e2faf3b6f3caa7eb8c73ec7ff071f43dbf0dd365"
        ],
        [
            "assert (neq H F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "303ad83ddd84e20e2559b08e00c9a03382d26396"
        ],
        [
            "assert (neq L K) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "53da36621f75775945a251a9ef332dd97fd28aa3"
        ],
        [
            "assert (neq H G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ebb899f7e6ce14dac3657f30140c065eacc15d92"
        ],
        [
            "assert (neq M K) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "3d9657ad3113154bc203e8b92b5f89fdb4cb7116"
        ],
        [
            "assert (Par H F L K) by (conclude_def PG ).",
            "VernacExtend",
            "d71005248df19c6347b73dc3a3ce2eec329b8bc2"
        ],
        [
            "assert (~ Meet H F L K) by (unfold Par in H251;decompose [ex and] H251;auto).",
            "VernacExtend",
            "5512d873d657f6764d5a6d6c8b6c3434cdafcec8"
        ],
        [
            "assert (Col G M B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "842eca20449e0059da238595c601af0c71e876d8"
        ],
        [
            "assert (BetS G B M) by (conclude lemma_collinearbetween).",
            "VernacExtend",
            "a52058de37168513949cd6e16c9a79af057d7ef5"
        ],
        [
            "assert (CongA A B M G B E) by (conclude proposition_15).",
            "VernacExtend",
            "1cc27f517604bd810782c92eee014290b98e7c11"
        ],
        [
            "assert (CongA G B E E B G) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "417703588e8166adb5f49e931d2ebd5f27ffcafa"
        ],
        [
            "assert (CongA A B M E B G) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "b2b3ab421f5bf92fc95168bee4ce676a49547347"
        ],
        [
            "assert (CongA A B M J D N) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "98d36e07cf35818b2a03a42b17066782f074b54c"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_44A",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (PG E F G B) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "e4e701b2f7b02aa2efd7c80e14f9e30d1b1d061c"
                    ]
                },
                {
                    "command": [
                        "assert (PG F G B E) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "2d9661345c53a432ed19bd52ab4838097f4b26ea"
                    ]
                },
                {
                    "command": [
                        "assert (PG G B E F) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "8e370be37a2f0b7eb02944ddf2eb5308f9ef9955"
                    ]
                },
                {
                    "command": [
                        "assert (Par G F B E) by (conclude_def PG ).",
                        "VernacExtend",
                        "dfbd338371499275f93e635362702dfdc64c2228"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G B E) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "67419d1adf842215d9ef7035ef4e433889ee3b08"
                    ]
                },
                {
                    "command": [
                        "assert (neq G B) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "b1be4929c8a4a158116f929cfc6a8cca94a96a27"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists q, (BetS G B q /\\ Cong B q G B)) by (conclude lemma_extension);destruct Tf as [q];spliter.",
                        "VernacExtend",
                        "442510ac8bb91c890e8a42d1334bfa1dbc2fe9c9"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E B G) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "5c2161d6a733f70001080615d658239e8ac612b6"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B E) by (conclude_def Col ).",
                        "VernacExtend",
                        "cb1e4569cbb7ad4caf776e0a6f60f35b634e0870"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4c5e1f93c7fe9947afff50c1ded8f4ffe0ea9f55"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "56c786741aa7e98ffe5eec61f455633580850771"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "729d99d00883cb65929e87e6a48ea0634ac9dc68"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B G) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "37db0d53353780f031693ff20d2e1c9f49ab13ae"
                    ]
                },
                {
                    "command": [
                        "assert (Col G B q) by (conclude_def Col ).",
                        "VernacExtend",
                        "fec0cf441aac6ceb111aae341131b40eee732ea5"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G B A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "39149f154d491af3716c093df8fa98ed178436f0"
                    ]
                },
                {
                    "command": [
                        "assert (neq G q) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a420273dcacaa5b6e6062955594c821a5ab738de"
                    ]
                },
                {
                    "command": [
                        "assert (neq q G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "faee6437ad1e4418b9ea40883fd1871e17d93b04"
                    ]
                },
                {
                    "command": [
                        "assert (eq G G) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
                    ]
                },
                {
                    "command": [
                        "assert (Col G B G) by (conclude_def Col ).",
                        "VernacExtend",
                        "ce6d926477adcb4a03dec4331cec14426d13d766"
                    ]
                },
                {
                    "command": [
                        "assert (nCol q G A) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "eebfb19162f7f687b74ccc0204e938a1f09af855"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G q A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "ecfab532dea1dfd885a9a35306667f014e9902ab"
                    ]
                },
                {
                    "command": [
                        "rename_H H;let Tf:=fresh in assert (Tf:exists H h T, (BetS H A h /\\ CongA h A B A B G /\\ CongA h A B G B A /\\ CongA B A h G B A /\\ CongA H A B A B q /\\ CongA H A B q B A /\\ CongA B A H q B A /\\ Par H h G q /\\ Cong H A B q /\\ Cong A h G B /\\ Cong A T T B /\\ Cong H T T q /\\ Cong G T T h /\\ BetS H T q /\\ BetS G T h /\\ BetS A T B)) by (conclude proposition_31);destruct Tf as [H[h[T]]];spliter.",
                        "VernacExtend",
                        "2612a4349b6b7e4528681bdbceef0373fbc1c8f5"
                    ]
                },
                {
                    "command": [
                        "assert (Par H h q G) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "07564f4d3cf334a9249cccd588983cfa65a0080d"
                    ]
                },
                {
                    "command": [
                        "assert (Col G B q) by (conclude_def Col ).",
                        "VernacExtend",
                        "fec0cf441aac6ceb111aae341131b40eee732ea5"
                    ]
                },
                {
                    "command": [
                        "assert (Col q G B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "95bee5db24c00fb8ca9fc5dc03de75c142fa561c"
                    ]
                },
                {
                    "command": [
                        "assert (neq B G) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "34607d07e486f27f87ee91ed277c7ef6c786e3f5"
                    ]
                },
                {
                    "command": [
                        "assert (Par H h B G) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "d5c6bc37343d65382774a39ed8c708b71e315804"
                    ]
                },
                {
                    "command": [
                        "assert (Par H h G B) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "5c1ac7a780e2f995b7e7616a09244c89c7d98f30"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B H h) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "a0850642c3ee95f592335e4b37761431f0b4b72f"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B h H) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "ce4cbb4d5379fc37643d55768439439a7412fc46"
                    ]
                },
                {
                    "command": [
                        "assert (Col H A h) by (conclude_def Col ).",
                        "VernacExtend",
                        "697c186d5a5c67190bf7675aaeebf997d0c9c4f7"
                    ]
                },
                {
                    "command": [
                        "assert (Col h H A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7821b3fcf898b338f302568f17a8940f90989628"
                    ]
                },
                {
                    "command": [
                        "assert (neq H A) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8e2dcd7f7987670d6350726abb922ecc38f8c21c"
                    ]
                },
                {
                    "command": [
                        "assert (neq A H) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "6d8bedb9bbf6ca2c1b894a433ac1aa78fa7a565b"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B A H) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "830308db81d666c07f63d6a130330718040f73ce"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B H A) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "01e9b08bae040b7d651779f40a504b9a1c657f64"
                    ]
                },
                {
                    "command": [
                        "assert (Par H A G B) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "07f73a664cd44c7203cbc59743515c76b9995d7a"
                    ]
                },
                {
                    "command": [
                        "assert (Cong H A G B) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "a322e697d3689e9f7c1e91cbf1fffe8c2655a942"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
                    ]
                },
                {
                    "command": [
                        "assert (Col A T B) by (conclude_def Col ).",
                        "VernacExtend",
                        "991d6e317dc8ed2681242760c544cb7f562db343"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B T) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6166d862547ee3a50944fd3e8ec3678f30ba7414"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B H A) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "919f5773167c59c0767bc0f65603e492e5503997"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B H) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "52d1bd76b1055d436ec6bda062df5f3b400eeec8"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H A B) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "398860d5b1b922406291c35959c10b72480c8900"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B H) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "52d1bd76b1055d436ec6bda062df5f3b400eeec8"
                    ]
                },
                {
                    "command": [
                        "assert (OS H G A B) by (conclude_def OS ).",
                        "VernacExtend",
                        "8cbff4095c5e146306c73d8b1953de66aa11fbd8"
                    ]
                },
                {
                    "command": [
                        "assert ((Par H G A B /\\ Cong H G A B)) by (conclude proposition_33B).",
                        "VernacExtend",
                        "b43ae4adc0544a028f40056e6c0937684eb49d4f"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B H G) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "7015e37afee903862f9b85ca5f8e8a9d6a8ccf40"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B G H) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "69b94de604a0f8a040794e1d8eb298c5ce875b7b"
                    ]
                },
                {
                    "command": [
                        "assert ((Par G B E F /\\ Par G F B E)) by (conclude_def PG ).",
                        "VernacExtend",
                        "1e86751e7e73a5694771a4634ac8b1e167d4454c"
                    ]
                },
                {
                    "command": [
                        "assert (Par G F E B) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "1e062c8de311d27540fc88a740029ecc1c3210ba"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B E) by (conclude_def Col ).",
                        "VernacExtend",
                        "cb1e4569cbb7ad4caf776e0a6f60f35b634e0870"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4c5e1f93c7fe9947afff50c1ded8f4ffe0ea9f55"
                    ]
                },
                {
                    "command": [
                        "assert (Par G F A B) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "5bc025accf3ee695a010c07ab1b4f8e69c8f7ddd"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B G F) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "e2e4aced90878071a8c580e0fd628305144315b0"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H F) by (conclude lemma_Playfair).",
                        "VernacExtend",
                        "6bab8def111271dd488bfa001b98a7d159809989"
                    ]
                },
                {
                    "command": [
                        "assert (Par H A B G) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "55971f557449d9f5944c76dd0fd7d43d4f6284ba"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B F E) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "8514465a007e916a71053cb82a9ac3d262f1073e"
                    ]
                },
                {
                    "command": [
                        "assert (Par F E G B) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "86953b54c3c3ff43cb857d1c48636fa5f9df2bdd"
                    ]
                },
                {
                    "command": [
                        "assert (PG H A B G) by (conclude_def PG ).",
                        "VernacExtend",
                        "bb633c57282a586b7820c4875c573dab0d275996"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists j, (BetS H j B /\\ BetS A j G)) by (conclude lemma_diagonalsmeet);destruct Tf as [j];spliter.",
                        "VernacExtend",
                        "29be3679b1d9cae676103815e6e4dd66cb1f72b9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists k, (BetS G k E /\\ BetS B k F)) by (conclude lemma_diagonalsmeet);destruct Tf as [k];spliter.",
                        "VernacExtend",
                        "f8d1fa6ffd2c0f37b37e89adb6daf1da30e7d9a6"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E B A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ef820e6889f664d0c160455ac9f6c28351c38f56"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Col F E E) by (conclude_def Col ).",
                        "VernacExtend",
                        "f15008d1282e21073687ac2ae0970095a0319567"
                    ]
                },
                {
                    "command": [
                        "assert (Col G B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "dac7cec5e52edfa114b00e19675abdfc9cb989f7"
                    ]
                },
                {
                    "command": [
                        "assert (Col H A A) by (conclude_def Col ).",
                        "VernacExtend",
                        "8e0df73623a89b7b5f6d9297fa4a7c7355d0953c"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F E B) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "97ccafde3f06a0138b61f2ee6b99abb95916f6dd"
                    ]
                },
                {
                    "command": [
                        "assert (neq F E) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "f6646b528289988e7684acafd2d3cbc16287268f"
                    ]
                },
                {
                    "command": [
                        "assert (neq G B) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "b1be4929c8a4a158116f929cfc6a8cca94a96a27"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H A G) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "45039af42fa9caa5fd4e92e1c0cee71307cead7b"
                    ]
                },
                {
                    "command": [
                        "assert (neq H A) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "6393517868cef0a820b594a72c78e9652f1d9726"
                    ]
                },
                {
                    "command": [
                        "assert (Par H A F E) by (eauto using (proposition_30 _ _ _ _ _ _ _ _ _ _ H79 H1 H93)).",
                        "VernacExtend",
                        "30308cc2ae31907bf346fe9f446b984992d5db1e"
                    ]
                },
                {
                    "command": [
                        "assert (Cong G B F E) by (forward_using proposition_34).",
                        "VernacExtend",
                        "2e087833d4a63e1a44aa0b799cceb4bd01ec1e11"
                    ]
                },
                {
                    "command": [
                        "assert (Cong H A F E) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "d764047aa6a79d6252045114bd05689613b10c40"
                    ]
                },
                {
                    "command": [
                        "assert (Par G F B E) by (conclude_def PG ).",
                        "VernacExtend",
                        "dfbd338371499275f93e635362702dfdc64c2228"
                    ]
                },
                {
                    "command": [
                        "assert (Par H G A B) by (conclude_def PG ).",
                        "VernacExtend",
                        "223dd7f05b44e00068915e432a0e94d9f0cf7e2c"
                    ]
                },
                {
                    "command": [
                        "assert (Par B E G F) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "f8fd7f4a53973d95200f9cff830e73762bd32664"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B H G) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "7015e37afee903862f9b85ca5f8e8a9d6a8ccf40"
                    ]
                },
                {
                    "command": [
                        "assert (TP B E G F) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "e930f6e74e0967500b2bc526fe88714217a51f40"
                    ]
                },
                {
                    "command": [
                        "assert (TP A B H G) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "ae4e8b385936c542f3976c8baa8b243b3885d26e"
                    ]
                },
                {
                    "command": [
                        "assert (OS G F B E) by (conclude_def TP ).",
                        "VernacExtend",
                        "6d5f32c8aa77f839456481b0fc935c6e048d832b"
                    ]
                },
                {
                    "command": [
                        "assert (OS H G A B) by (conclude_def TP ).",
                        "VernacExtend",
                        "7d8d537ac7e3257c585af1a6f933ceafcd53f133"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B E) by (conclude_def Col ).",
                        "VernacExtend",
                        "cb1e4569cbb7ad4caf776e0a6f60f35b634e0870"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9dc76a35f0423fea77251119a803e21c8f59a255"
                    ]
                },
                {
                    "command": [
                        "assert (OS H G A E) by (conclude lemma_samesidecollinear).",
                        "VernacExtend",
                        "5afa6a2d0ac8df5d1b66bca1b5f0a11d61c00ea3"
                    ]
                },
                {
                    "command": [
                        "assert (OS G F E B) by (conclude lemma_samesideflip).",
                        "VernacExtend",
                        "752aaa4023444aa831fd8cc418b40e7cea94133d"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4c5e1f93c7fe9947afff50c1ded8f4ffe0ea9f55"
                    ]
                },
                {
                    "command": [
                        "assert (neq E A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "5eef00ef1d0a882b209a09f629d7ffc97b7486d2"
                    ]
                },
                {
                    "command": [
                        "assert (OS G F E A) by (conclude lemma_samesidecollinear).",
                        "VernacExtend",
                        "cd0e139fc2c265702cc1ad300d8e2755bd564e1f"
                    ]
                },
                {
                    "command": [
                        "assert (OS G F A E) by (conclude lemma_samesideflip).",
                        "VernacExtend",
                        "d6709d808b8a30498a2d819d96864e2b82daaba3"
                    ]
                },
                {
                    "command": [
                        "assert (OS H F A E) by (conclude lemma_samesidetransitive).",
                        "VernacExtend",
                        "4c0e312e33965489de8daa45107166e2366f9d3a"
                    ]
                },
                {
                    "command": [
                        "assert (Par H F A E) by (conclude proposition_33B).",
                        "VernacExtend",
                        "183808187d90ac1b271e3d2451c3ff3fb97f322a"
                    ]
                },
                {
                    "command": [
                        "assert (Par H A E F) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "ef6d77c7badd23595380afe271fcb2ab5b347168"
                    ]
                },
                {
                    "command": [
                        "assert (PG H A E F) by (conclude_def PG ).",
                        "VernacExtend",
                        "2d1de1145db80cad5366391f1b9e89fce8d47ac5"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H F E) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "05dac6db72dfeacb1e5f637bd228bf2904b430e5"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E F H) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "3463d31759e60e71f41b95ddbf5a808f13eb266f"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists t, (Midpoint H t E /\\ Midpoint A t F)) by (conclude lemma_diagonalsbisect);destruct Tf as [t];spliter.",
                        "VernacExtend",
                        "54650f185fd96b4b4b0b27a83f496495ce0168bd"
                    ]
                },
                {
                    "command": [
                        "assert ((BetS H t E /\\ Cong H t t E)) by (conclude_def Midpoint ).",
                        "VernacExtend",
                        "223479ab98e3259e3fb0ebf9a4dd3fbcd6626923"
                    ]
                },
                {
                    "command": [
                        "assert ((BetS A t F /\\ Cong A t t F)) by (conclude_def Midpoint ).",
                        "VernacExtend",
                        "720ff74737983931250e212259b301d1cce1b536"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A t F t) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "8f3ad9309368e96bcfbe0986a1a50dfc4019404e"
                    ]
                },
                {
                    "command": [
                        "assert (Cong H t E t) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "a57bb47ae892a36f8783cd53b25987d4c4f5a257"
                    ]
                },
                {
                    "command": [
                        "assert (Cong t A t F) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "4bdf917a263c104f565fcd2e34b31aad6b254ced"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H E F) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "02694023f7d84a2716e6da5f60826c0cda803a0f"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists K, (BetS H B K /\\ BetS F E K)) by (conclude postulate_Euclid5);destruct Tf as [K];spliter.",
                        "VernacExtend",
                        "59990f1ace44a47d5d39fd22229c241fa829e5f2"
                    ]
                },
                {
                    "command": [
                        "assert (Col F E K) by (conclude_def Col ).",
                        "VernacExtend",
                        "e698943b4c5b17e74aa2d85faf6b6d2199f5c8f4"
                    ]
                },
                {
                    "command": [
                        "assert (Col E F K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d9bd127f0f076ee56d6343eecd988c2a59e8b4d2"
                    ]
                },
                {
                    "command": [
                        "assert (neq F K) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d0d9adba6bfb674c57153ebe6c79acd20215f358"
                    ]
                },
                {
                    "command": [
                        "assert (neq K F) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "b5124447f64f19c7d5439594a9b072936da17866"
                    ]
                },
                {
                    "command": [
                        "assert (Par H A K F) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "096eaaaaa9ce6023e70b1d7d861c450c5a2bb159"
                    ]
                },
                {
                    "command": [
                        "assert (Par H A F K) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "fff4e28878a22ef10e92b651806c002c21a0a105"
                    ]
                },
                {
                    "command": [
                        "assert (Par F K H A) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "ead66917673b4a2caf8dd63cb31a00dd2d5fc911"
                    ]
                },
                {
                    "command": [
                        "assert (Par F K A H) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "b7b16d55198bf373fa3dc05a6ce21c3d4faf70b4"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (Col A H H) by (conclude_def Col ).",
                        "VernacExtend",
                        "752a371e1746e48b35408d6febcf6c383d3fcfb7"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists L, (PG H L K F /\\ Col A H L)) by (conclude lemma_triangletoparallelogram);destruct Tf as [L];spliter.",
                        "VernacExtend",
                        "eaca472e9ecf54b73f4c5eca005f9e7cebb2815a"
                    ]
                },
                {
                    "command": [
                        "assert (Par H L K F) by (conclude_def PG ).",
                        "VernacExtend",
                        "2c3d5525a0067b2660ac1b8445ec7cb416fe4e42"
                    ]
                },
                {
                    "command": [
                        "assert (nCol L K F) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "87b60ade3a5523f2af68c0ee70fdcee65969275b"
                    ]
                },
                {
                    "command": [
                        "assert (neq L K) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "c4bbd21c1fa168b07860858989cb3a286d663d8c"
                    ]
                },
                {
                    "command": [
                        "assert (neq K L) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "8ece4f9d9b1c30699377e831e8591e9745035265"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B E F) by (conclude_def PG ).",
                        "VernacExtend",
                        "baeb9dd1051dab9e4e4db4259a5e622dfa9cdd6f"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B F E) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "8514465a007e916a71053cb82a9ac3d262f1073e"
                    ]
                },
                {
                    "command": [
                        "assert (Col F E E) by (conclude_def Col ).",
                        "VernacExtend",
                        "f15008d1282e21073687ac2ae0970095a0319567"
                    ]
                },
                {
                    "command": [
                        "assert (Col F E K) by (conclude_def Col ).",
                        "VernacExtend",
                        "e698943b4c5b17e74aa2d85faf6b6d2199f5c8f4"
                    ]
                },
                {
                    "command": [
                        "assert (neq E K) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b63cd02ce81ab06c82d52de5931de7e69c4b731d"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B E K) by (conclude lemma_collinearparallel2).",
                        "VernacExtend",
                        "8947f208a95cd95b1bbdf91a44d29e9c80d91851"
                    ]
                },
                {
                    "command": [
                        "assert (Par E K G B) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "6984a2ee085af525ca16645e9ab540f0500854a0"
                    ]
                },
                {
                    "command": [
                        "assert (Col G B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "dac7cec5e52edfa114b00e19675abdfc9cb989f7"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (PG B M K E /\\ Col G B M)) by (conclude lemma_triangletoparallelogram);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "923fe0ce42d4e257c10755acbddde9cde86a66bc"
                    ]
                },
                {
                    "command": [
                        "assert (PG L K F H) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "fa1ab581ab8ba3e88522ad6ab9ac043980ba9f67"
                    ]
                },
                {
                    "command": [
                        "assert (PG K L H F) by (conclude lemma_PGflip).",
                        "VernacExtend",
                        "7097aa06d71c2a82d4f3bd54f13691f30e1ccc17"
                    ]
                },
                {
                    "command": [
                        "assert (PG L H F K) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "6e934ca53a0173cd34f1f5540c608bc05aac6abf"
                    ]
                },
                {
                    "command": [
                        "assert (PG H F K L) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "5064ada1f2b3c089ecb6ac6a9386597c956f82eb"
                    ]
                },
                {
                    "command": [
                        "assert (PG A H G B) by (conclude lemma_PGflip).",
                        "VernacExtend",
                        "2651bd1ed4d7c7db07e82218b76a2fd5791b6a80"
                    ]
                },
                {
                    "command": [
                        "assert (Par A H G B) by (conclude_def PG ).",
                        "VernacExtend",
                        "f8a0050e5b3c0627e71a928ad11c1a41a92d51c2"
                    ]
                },
                {
                    "command": [
                        "assert (eq K K) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "89ee1e712221f97ec5067c4595ba2f1f13d3c25c"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (eq F F) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
                    ]
                },
                {
                    "command": [
                        "assert (Par B E M K) by (conclude_def PG ).",
                        "VernacExtend",
                        "b83ad513c183bd0e604c0d5eddcbe803ac0ea01e"
                    ]
                },
                {
                    "command": [
                        "assert (Par M K B E) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "8d8c2252252669bdcd4541e6c5b8d1658ebf78f3"
                    ]
                },
                {
                    "command": [
                        "assert (Par K M E B) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "5ed9f312d808c132c80b72979dc8ab74436eafc8"
                    ]
                },
                {
                    "command": [
                        "assert (Par G F B E) by (conclude_def PG ).",
                        "VernacExtend",
                        "dfbd338371499275f93e635362702dfdc64c2228"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E M K) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "2d45fe20b0ab787c0aa937f62348f19193485d66"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B E K) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "74a8d2fd592a9ed70acbc45be6816866a0c6285c"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G F B) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "683a3186c912bd003892858c2da53983e0d2c61b"
                    ]
                },
                {
                    "command": [
                        "assert (Par M K B E) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "6bbe462ce544f23f12c81a2f5f970e31fb14ac77"
                    ]
                },
                {
                    "command": [
                        "assert (Par G F B E) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "c2092402841830cad4124bfa967ee674d1755517"
                    ]
                },
                {
                    "command": [
                        "assert (BetS K E F) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "96545dd469ea6b45821711bd1840e33176d63689"
                    ]
                },
                {
                    "command": [
                        "assert (Col M K K) by (conclude_def Col ).",
                        "VernacExtend",
                        "c00dfb2e4aa1b5b8205dd8b1e382376ed1c404ee"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E E) by (conclude_def Col ).",
                        "VernacExtend",
                        "8cce97936f346b902dd5d8ffb6243f42866766aa"
                    ]
                },
                {
                    "command": [
                        "assert (Col G F F) by (conclude_def Col ).",
                        "VernacExtend",
                        "29a756ea7c13e234cb11b24c27e6d3d43fb80317"
                    ]
                },
                {
                    "command": [
                        "assert (neq M K) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "fed90c14f8db2e5b4e2064554b457ee6b3967354"
                    ]
                },
                {
                    "command": [
                        "assert (neq B E) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "4dbb01f45ca367df5c5f49f1729f9e038d94a5c4"
                    ]
                },
                {
                    "command": [
                        "assert (neq G F) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "5157bfcbe17dc114331ced0d2fb8dff9e42e5ca8"
                    ]
                },
                {
                    "command": [
                        "assert (Par M K G F) by (conclude proposition_30).",
                        "VernacExtend",
                        "fd2524202f9dcb588655aca7e34dfe7b08dcce67"
                    ]
                },
                {
                    "command": [
                        "assert (Par K M F G) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "975905f65517c1316e05bf261fe2bd075cf2f77b"
                    ]
                },
                {
                    "command": [
                        "assert (Par F G K M) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "879110ed005865430117ddc23af7a7bb7e6fd4cf"
                    ]
                },
                {
                    "command": [
                        "assert (Par H F L K) by (conclude_def PG ).",
                        "VernacExtend",
                        "d71005248df19c6347b73dc3a3ce2eec329b8bc2"
                    ]
                },
                {
                    "command": [
                        "assert (Par L K H F) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "19bde53405d869d73606fbe16b5cf3f12d4708bc"
                    ]
                },
                {
                    "command": [
                        "assert (Par K L H F) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "8d68063849c1c9e9eeb42722b29a7baef8151cb7"
                    ]
                },
                {
                    "command": [
                        "assert (Col H F G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "65917e3db87e8b33883f9e1e458688317e2a0f4d"
                    ]
                },
                {
                    "command": [
                        "assert (Par K L G F) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "e44fc60ce1007bf991afc4c303b2146f3bc08c08"
                    ]
                },
                {
                    "command": [
                        "assert (Par K L F G) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "de4578b76d6048507c4f7cfad4611a780f727484"
                    ]
                },
                {
                    "command": [
                        "assert (Par F G K L) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "422493b3b32c668606c45b536905bfc01849e5d7"
                    ]
                },
                {
                    "command": [
                        "assert (Col K M L) by (conclude lemma_Playfair).",
                        "VernacExtend",
                        "ff2be1927218b004d9c602065c2d6c17b2a0f1f6"
                    ]
                },
                {
                    "command": [
                        "assert (Col M K L) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b7018f356dcf709ae0286cd08c2dcdd08ba12818"
                    ]
                },
                {
                    "command": [
                        "assert (Par B E M K) by (conclude_def PG ).",
                        "VernacExtend",
                        "b83ad513c183bd0e604c0d5eddcbe803ac0ea01e"
                    ]
                },
                {
                    "command": [
                        "assert (neq L K) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "7c91c93de6daef2a6731c28e8a059cdfef0eca06"
                    ]
                },
                {
                    "command": [
                        "assert (Par B E L K) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "98b1515abbfe22099f2fa25cf46fc1032abae9e7"
                    ]
                },
                {
                    "command": [
                        "assert (Par L K B E) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "d372df296b4edc7f376fe50d0481b264c87bbd80"
                    ]
                },
                {
                    "command": [
                        "assert (Par L K E B) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "3f11d6f4f9ebecea4b027f66f96ae2f745f68a2b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B E) by (conclude_def Col ).",
                        "VernacExtend",
                        "cb1e4569cbb7ad4caf776e0a6f60f35b634e0870"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4c5e1f93c7fe9947afff50c1ded8f4ffe0ea9f55"
                    ]
                },
                {
                    "command": [
                        "assert (Par L K A B) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "adb9e0d606154d47350c88f04277cdf3ebea664c"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B L K) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "4c911c17cd43c03505f2a2b7203bdf54c3405268"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B K L) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "92aac5fe0e21659d054331350acb8885f118b53d"
                    ]
                },
                {
                    "command": [
                        "assert (BetS K B H) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "21faff77dd0aeb6cdd5d8ebe86724f35216c87a7"
                    ]
                },
                {
                    "command": [
                        "assert (Col L A H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ee5bbd937ac259b876d848e3153530a4fbce6ceb"
                    ]
                },
                {
                    "command": [
                        "assert (BetS L A H) by (conclude lemma_parallelbetween).",
                        "VernacExtend",
                        "a6884dd1b2c806f7909f47091cc141a79c53f9c0"
                    ]
                },
                {
                    "command": [
                        "assert (BetS H A L) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "7f1a3625c146db21103e9b36e86a40b8f839963f"
                    ]
                },
                {
                    "command": [
                        "assert (Par H A G B) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "bc586134ddbec0900b1fdbe0f16fc94d8a74be39"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B M K) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "46e8ae7888231b5e4295d6f466302602e4a6f735"
                    ]
                },
                {
                    "command": [
                        "assert (neq M B) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "b3bc333fa0fb1ed33f5799c206d7855e8d0c9dbe"
                    ]
                },
                {
                    "command": [
                        "assert (Par H A M B) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "f3c1086590b6df45bb0fe2f344db6c76d3260a3d"
                    ]
                },
                {
                    "command": [
                        "assert (Par M B H A) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "fb6188903603f538587036016b4af061fc620d6d"
                    ]
                },
                {
                    "command": [
                        "assert (Par M B A H) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "14130ea4744770bace30d9caa9cb21ab08ad9740"
                    ]
                },
                {
                    "command": [
                        "assert (Col A H L) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5629f030d296972ef04fd5e3e643b33adf8b6254"
                    ]
                },
                {
                    "command": [
                        "assert (Par H L K F) by (conclude_def PG ).",
                        "VernacExtend",
                        "2c3d5525a0067b2660ac1b8445ec7cb416fe4e42"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H L K) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "ce1d5758fcbfc1e315548933024c4527592c5ee7"
                    ]
                },
                {
                    "command": [
                        "assert (neq L H) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "2d373891d6f3526fc2db087325af17d6f5def208"
                    ]
                },
                {
                    "command": [
                        "assert (Par M B L H) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "ff7a1c9759f5fc866050bc37c1721bd5a1438d1f"
                    ]
                },
                {
                    "command": [
                        "assert (Par M B H L) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "ecf0cee0b1454e0ec00116161409e9a51b7fdd6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col L M K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "39f3edbb894ffea0b291ba713d45ff208570fb82"
                    ]
                },
                {
                    "command": [
                        "assert (BetS L M K) by (conclude lemma_parallelbetween).",
                        "VernacExtend",
                        "7654449f1f307f0c66a1dcb97bf7011b4b1aa641"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B E F) by (conclude_def PG ).",
                        "VernacExtend",
                        "baeb9dd1051dab9e4e4db4259a5e622dfa9cdd6f"
                    ]
                },
                {
                    "command": [
                        "assert (Col F E K) by (conclude_def Col ).",
                        "VernacExtend",
                        "e698943b4c5b17e74aa2d85faf6b6d2199f5c8f4"
                    ]
                },
                {
                    "command": [
                        "assert (Col E F K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d9bd127f0f076ee56d6343eecd988c2a59e8b4d2"
                    ]
                },
                {
                    "command": [
                        "assert (neq F K) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d0d9adba6bfb674c57153ebe6c79acd20215f358"
                    ]
                },
                {
                    "command": [
                        "assert (neq K F) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "b5124447f64f19c7d5439594a9b072936da17866"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B K F) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "14f221de49967035141cb8fff1d9a8fef9f15422"
                    ]
                },
                {
                    "command": [
                        "assert (Col F G H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "feaef5853dd45c1b1e896d217e39eb556941fec4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS F G H) by (conclude lemma_parallelbetween).",
                        "VernacExtend",
                        "d43d988e387bf4ca08f1cad8ecffd5db22094ef9"
                    ]
                },
                {
                    "command": [
                        "assert (BetS H G F) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "056c6e8f48c3cf2c8e32e9e78f5a4e5c461667e6"
                    ]
                },
                {
                    "command": [
                        "assert (PG A B G H) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "eb558ec9f34a342247361b8a628d4fabe5dbb91c"
                    ]
                },
                {
                    "command": [
                        "assert (PG B G H A) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "926b555705d1d5d80c53eda155217c01e8b9adcc"
                    ]
                },
                {
                    "command": [
                        "assert (PG G H A B) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "7790c742393abc6a72d1fc2ea23929b0989f7937"
                    ]
                },
                {
                    "command": [
                        "assert (PG M K E B) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "2cd62d09306eab0f580d8fe292b8f8bc0778e0e2"
                    ]
                },
                {
                    "command": [
                        "assert (PG K E B M) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "d8174604ad7eba52e1d76983a2f3391b24c7ea55"
                    ]
                },
                {
                    "command": [
                        "assert (PG E B M K) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "5997a752561e4ccd65e26cc25c36417cde51d9d7"
                    ]
                },
                {
                    "command": [
                        "assert (EF B E F G L M B A) by (conclude proposition_43).",
                        "VernacExtend",
                        "e28ffddc2c3c26d7493429f194567c671905877d"
                    ]
                },
                {
                    "command": [
                        "assert (PG A H G B) by (conclude lemma_PGflip).",
                        "VernacExtend",
                        "2651bd1ed4d7c7db07e82218b76a2fd5791b6a80"
                    ]
                },
                {
                    "command": [
                        "assert (PG M B E K) by (conclude lemma_PGflip).",
                        "VernacExtend",
                        "0a71e571e26cf2b7dd2ed0fa18eb0d6815ab2e20"
                    ]
                },
                {
                    "command": [
                        "assert (PG A B M L) by (conclude proposition_43B).",
                        "VernacExtend",
                        "6d1d985e5699447d927f831df5a602fa7f501ec5"
                    ]
                },
                {
                    "command": [
                        "assert (Col H G F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e2faf3b6f3caa7eb8c73ec7ff071f43dbf0dd365"
                    ]
                },
                {
                    "command": [
                        "assert (neq H F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "303ad83ddd84e20e2559b08e00c9a03382d26396"
                    ]
                },
                {
                    "command": [
                        "assert (neq L K) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "53da36621f75775945a251a9ef332dd97fd28aa3"
                    ]
                },
                {
                    "command": [
                        "assert (neq H G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ebb899f7e6ce14dac3657f30140c065eacc15d92"
                    ]
                },
                {
                    "command": [
                        "assert (neq M K) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "3d9657ad3113154bc203e8b92b5f89fdb4cb7116"
                    ]
                },
                {
                    "command": [
                        "assert (Par H F L K) by (conclude_def PG ).",
                        "VernacExtend",
                        "d71005248df19c6347b73dc3a3ce2eec329b8bc2"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet H F L K) by (unfold Par in H251;decompose [ex and] H251;auto).",
                        "VernacExtend",
                        "5512d873d657f6764d5a6d6c8b6c3434cdafcec8"
                    ]
                },
                {
                    "command": [
                        "assert (Col G M B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "842eca20449e0059da238595c601af0c71e876d8"
                    ]
                },
                {
                    "command": [
                        "assert (BetS G B M) by (conclude lemma_collinearbetween).",
                        "VernacExtend",
                        "a52058de37168513949cd6e16c9a79af057d7ef5"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B M G B E) by (conclude proposition_15).",
                        "VernacExtend",
                        "1cc27f517604bd810782c92eee014290b98e7c11"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G B E E B G) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "417703588e8166adb5f49e931d2ebd5f27ffcafa"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B M E B G) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "b2b3ab421f5bf92fc95168bee4ce676a49547347"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B M J D N) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "98d36e07cf35818b2a03a42b17066782f074b54c"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}