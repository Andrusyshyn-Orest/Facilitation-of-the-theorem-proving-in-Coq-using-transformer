{
    "filename": "Elements/OriginalProofs/proposition_21.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NChelper.",
            "VernacRequire",
            "27d71a9bed299ed932460cd47291d5181182bf2b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_20.",
            "VernacRequire",
            "f3b3b2cebd8ae9e572b7319bcb7831f571f27732"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_21helper.",
            "VernacRequire",
            "6e977ef58651b41354a89dcdd478e8206e2f89b7"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_TTorder.",
            "VernacRequire",
            "1d54054918e308b4d729b848cd86c294bfc42e9e"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_TTflip.",
            "VernacRequire",
            "8bcf95da8113d443f69d50a04df4161299137b0d"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_TTtransitive.",
            "VernacRequire",
            "5e0f6f5cb36a978184dfcb3e501459a721d104cc"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_TTflip2.",
            "VernacRequire",
            "4bf6034fbde244e6affd8fbfa7dd9fbd301539a0"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCdistinct.",
            "VernacRequire",
            "e464db49a36f1840285875a39e67b1d058d20da3"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_21 : forall A B C D E, Triangle A B C -> BetS A E C -> BetS B D E -> TT B A A C B D D C /\\ LtA B A C B D C.",
            "VernacStartTheoremProof",
            "44e39c2c5eeaaec21cc92e4c6ce3aa208de8b665"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (BetS E D B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "0f4d5870d202f5d3ec8ee94f53332b41dc53250d"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (Col A E C) by (conclude_def Col ).",
            "VernacExtend",
            "134baeef628e0b8217966e08d09682d254ae3f40"
        ],
        [
            "assert (Col A C E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "347481e17b70afa6fd0c7ed148c3cc647b35384f"
        ],
        [
            "assert (neq A E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9dc76a35f0423fea77251119a803e21c8f59a255"
        ],
        [
            "assert (nCol A C B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Col A C A) by (conclude_def Col ).",
            "VernacExtend",
            "90820738fc8fd9b98c8e5d75b47814190e6571d7"
        ],
        [
            "assert (nCol A E B) by (conclude lemma_NChelper).",
            "VernacExtend",
            "3a1af2cb7e6b2277638d133e37b416466d6f87d8"
        ],
        [
            "assert (nCol A B E) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "8d1bdfdb6299629f788a613b4a8cf1f08e8a1a56"
        ],
        [
            "assert (Triangle A B E) by (conclude_def Triangle ).",
            "VernacExtend",
            "5ea5b085719557d97a8a97e5b34312899be07a57"
        ],
        [
            "assert (TG B A A E B E) by (conclude proposition_20).",
            "VernacExtend",
            "42192f33456e832372d9237d01e30090b74ba343"
        ],
        [
            "assert (TT B A A C B E E C) by (conclude lemma_21helper).",
            "VernacExtend",
            "eb29fdb6fba4ed4de9c56829b5b9ed1f064601cd"
        ],
        [
            "assert (nCol A C B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
        ],
        [
            "assert (Col A E C) by (conclude_def Col ).",
            "VernacExtend",
            "134baeef628e0b8217966e08d09682d254ae3f40"
        ],
        [
            "assert (Col A C E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "347481e17b70afa6fd0c7ed148c3cc647b35384f"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col A C C) by (conclude_def Col ).",
            "VernacExtend",
            "3068c83efc791ee2a0b851232bbf95facf2cfb45"
        ],
        [
            "assert (neq E C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "11bd8752fbbad03347b69b155e5f87977400b76e"
        ],
        [
            "assert (nCol E C B) by (conclude lemma_NChelper).",
            "VernacExtend",
            "bc410262d413fcee4a57e6705873171138ff275f"
        ],
        [
            "assert (nCol E B C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "9528d05cb521091be7ced5157c9303fddfadc057"
        ],
        [
            "assert (Col E D B) by (conclude_def Col ).",
            "VernacExtend",
            "d018712cb466bac26c851f08afac4697cfe329d0"
        ],
        [
            "assert (Col E B D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d2431451e5055836dd7919a88d946a081de8da9e"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (Col E B E) by (conclude_def Col ).",
            "VernacExtend",
            "8e7dcb7cf247b09b396f54d3b6b2c4e9bda447ca"
        ],
        [
            "assert (neq E D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8953521083819802a3146a18d02061c64859cca"
        ],
        [
            "assert (nCol E D C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "0564585a3fcc5011c6b26ab95a7694da13c0565a"
        ],
        [
            "assert (nCol E C D) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "222202d531fd556d8abf4bd67f9a8aef53f2a997"
        ],
        [
            "assert (Triangle E C D) by (conclude_def Triangle ).",
            "VernacExtend",
            "b9c9f6a70170f54e46044898c8f9c5cf1f67687b"
        ],
        [
            "assert (TG C E E D C D) by (conclude proposition_20).",
            "VernacExtend",
            "04f15a3c4a261ce38748dd6e3a4ef436cac1a754"
        ],
        [
            "assert (TT C E E B C D D B) by (conclude lemma_21helper).",
            "VernacExtend",
            "307e9703ee8208bb0548bd92a3fbc6740f5863f6"
        ],
        [
            "assert (TT E B C E C D D B) by (conclude lemma_TTorder).",
            "VernacExtend",
            "200e07da3a9b323678e47db98c2af0dff237bfa4"
        ],
        [
            "assert (TT B E E C C D D B) by (conclude lemma_TTflip).",
            "VernacExtend",
            "c2af98f6dd23b035ed70544b817c1841990e8afc"
        ],
        [
            "assert (TT B A A C C D D B) by (conclude lemma_TTtransitive).",
            "VernacExtend",
            "23a54987622cd801a112a7c0fe1227424d722f14"
        ],
        [
            "assert (TT B A A C B D D C) by (conclude lemma_TTflip2).",
            "VernacExtend",
            "53661be09f4ea6a592bcbfc49433693d88294cb8"
        ],
        [
            "assert (nCol C E D) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "eb61c1daa602df2319be20d5b4808257c3cdc18b"
        ],
        [
            "assert (Triangle C E D) by (conclude_def Triangle ).",
            "VernacExtend",
            "f9af4903088c09a9fb6bcd6ac8e81cfef5111e4a"
        ],
        [
            "assert (LtA D E C C D B) by (conclude proposition_16).",
            "VernacExtend",
            "2f0fbea0c4122589cc07fa779db655fa3bbf0750"
        ],
        [
            "assert (nCol E B C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "9528d05cb521091be7ced5157c9303fddfadc057"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col E B B) by (conclude_def Col ).",
            "VernacExtend",
            "56c786741aa7e98ffe5eec61f455633580850771"
        ],
        [
            "assert (Col E D B) by (conclude_def Col ).",
            "VernacExtend",
            "d018712cb466bac26c851f08afac4697cfe329d0"
        ],
        [
            "assert (Col E B D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d2431451e5055836dd7919a88d946a081de8da9e"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "9b514e0053ba8f3c49b63d2480a07be55876115a"
        ],
        [
            "assert (nCol D B C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "9d2ef878691cf6d928488d8eb30ef016504fd8c9"
        ],
        [
            "assert (nCol B A E) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "b3bbff5193ce38768a29a1014ea3a94da7f0d557"
        ],
        [
            "assert (Triangle B A E) by (conclude_def Triangle ).",
            "VernacExtend",
            "07902c74a073dfed5636a3de810f46998aac6ad6"
        ],
        [
            "assert (LtA E A B B E C) by (conclude proposition_16).",
            "VernacExtend",
            "16d201f8cf4a3520e8e991c7aa916d6f63a0cbe6"
        ],
        [
            "assert (CongA B A E E A B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "14b52be83dd100914ac2ef322674c5898a33cd52"
        ],
        [
            "assert (LtA B A E B E C) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "7b2a024a833642c7ea6992a8758aba17e5d0864b"
        ],
        [
            "assert (nCol C E B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "ec1c947e3e63d54d7e8e73364093ef1b6a6efc49"
        ],
        [
            "assert (CongA C E B B E C) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "a694f0821ff7340de9475b838aed3df61fe63c98"
        ],
        [
            "assert (LtA B A E C E B) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "008a358be5dd2aae270d69dce5d1550452b2d088"
        ],
        [
            "assert (neq A E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9dc76a35f0423fea77251119a803e21c8f59a255"
        ],
        [
            "assert (Out A E C) by (conclude lemma_ray4).",
            "VernacExtend",
            "6c7b6ef2c916f27c2ed19c7b2537cdd30eed15d1"
        ],
        [
            "assert (Out A C E) by (conclude lemma_ray5).",
            "VernacExtend",
            "1e6f016b7124d73389048c1ea21683c2acc1cd6d"
        ],
        [
            "assert (neq A B) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "8734c6c62963acc25b4886dfc0a545d19560b2ba"
        ],
        [
            "assert (Out A B B) by (conclude lemma_ray4).",
            "VernacExtend",
            "22813113886dbbdce7acaed310fef3f6d11d8640"
        ],
        [
            "assert (nCol B A C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "b951873b79713cf348046c9ba1ee44f908de78a4"
        ],
        [
            "assert (CongA B A C B A C) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "7b25d56040d290a45516c58087301dd50c7fbd27"
        ],
        [
            "assert (CongA B A C B A E) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "7045f53a1226debafa4ac6542a97a8f7f5295cda"
        ],
        [
            "assert (BetS E D B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "0f4d5870d202f5d3ec8ee94f53332b41dc53250d"
        ],
        [
            "assert (Out E D B) by (conclude lemma_ray4).",
            "VernacExtend",
            "bbb447804fbbce1888f19431de22cdd39ff3c7f7"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Out E C C) by (conclude lemma_ray4).",
            "VernacExtend",
            "69bbd7a0f07e437f207b6b0437743d0dcf5730f7"
        ],
        [
            "assert (nCol C E D) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "eb61c1daa602df2319be20d5b4808257c3cdc18b"
        ],
        [
            "assert (CongA C E D C E D) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "92a55ccdeeebae152a4dca976ea69cb4cd2b1b63"
        ],
        [
            "assert (CongA C E D C E B) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "094e3f734d8be090daf376c2e3da7f5d2de7a7f1"
        ],
        [
            "assert (LtA B A E C E D) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "474c728ce34ef9687a3c657c915fa4b33a7f9965"
        ],
        [
            "assert (LtA B A C C E D) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "dbbdcceb3cffedd81ce95b143732773c33dc9523"
        ],
        [
            "assert (nCol D E C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "582ab90e455570b9740aad488af3eadf9250b618"
        ],
        [
            "assert (CongA D E C C E D) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "60ea22d973de8bc0b06a99fcd339ec5feb55a26f"
        ],
        [
            "assert (LtA B A C D E C) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "ee6e83970d5067b887efbbf63592c95177f5152f"
        ],
        [
            "assert (LtA B A C C D B) by (conclude lemma_angleordertransitive).",
            "VernacExtend",
            "f9ddd6116124aa7a4e705292c16704ddee18434a"
        ],
        [
            "assert (nCol B D C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "8dbd4a30df13926be7efef16d3674ee680601f43"
        ],
        [
            "assert (CongA B D C C D B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "b15ee3802c3a64ce231ba9dd8c51b9df663f7f98"
        ],
        [
            "assert (LtA B A C B D C) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "3ef98201a17853ac3dcf098f5995449191894532"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_21",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E D B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "0f4d5870d202f5d3ec8ee94f53332b41dc53250d"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E C) by (conclude_def Col ).",
                        "VernacExtend",
                        "134baeef628e0b8217966e08d09682d254ae3f40"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "347481e17b70afa6fd0c7ed148c3cc647b35384f"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9dc76a35f0423fea77251119a803e21c8f59a255"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C A) by (conclude_def Col ).",
                        "VernacExtend",
                        "90820738fc8fd9b98c8e5d75b47814190e6571d7"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A E B) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "3a1af2cb7e6b2277638d133e37b416466d6f87d8"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B E) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "8d1bdfdb6299629f788a613b4a8cf1f08e8a1a56"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle A B E) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "5ea5b085719557d97a8a97e5b34312899be07a57"
                    ]
                },
                {
                    "command": [
                        "assert (TG B A A E B E) by (conclude proposition_20).",
                        "VernacExtend",
                        "42192f33456e832372d9237d01e30090b74ba343"
                    ]
                },
                {
                    "command": [
                        "assert (TT B A A C B E E C) by (conclude lemma_21helper).",
                        "VernacExtend",
                        "eb29fdb6fba4ed4de9c56829b5b9ed1f064601cd"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E C) by (conclude_def Col ).",
                        "VernacExtend",
                        "134baeef628e0b8217966e08d09682d254ae3f40"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "347481e17b70afa6fd0c7ed148c3cc647b35384f"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C C) by (conclude_def Col ).",
                        "VernacExtend",
                        "3068c83efc791ee2a0b851232bbf95facf2cfb45"
                    ]
                },
                {
                    "command": [
                        "assert (neq E C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "11bd8752fbbad03347b69b155e5f87977400b76e"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E C B) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "bc410262d413fcee4a57e6705873171138ff275f"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E B C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "9528d05cb521091be7ced5157c9303fddfadc057"
                    ]
                },
                {
                    "command": [
                        "assert (Col E D B) by (conclude_def Col ).",
                        "VernacExtend",
                        "d018712cb466bac26c851f08afac4697cfe329d0"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d2431451e5055836dd7919a88d946a081de8da9e"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B E) by (conclude_def Col ).",
                        "VernacExtend",
                        "8e7dcb7cf247b09b396f54d3b6b2c4e9bda447ca"
                    ]
                },
                {
                    "command": [
                        "assert (neq E D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8953521083819802a3146a18d02061c64859cca"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E D C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "0564585a3fcc5011c6b26ab95a7694da13c0565a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E C D) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "222202d531fd556d8abf4bd67f9a8aef53f2a997"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle E C D) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "b9c9f6a70170f54e46044898c8f9c5cf1f67687b"
                    ]
                },
                {
                    "command": [
                        "assert (TG C E E D C D) by (conclude proposition_20).",
                        "VernacExtend",
                        "04f15a3c4a261ce38748dd6e3a4ef436cac1a754"
                    ]
                },
                {
                    "command": [
                        "assert (TT C E E B C D D B) by (conclude lemma_21helper).",
                        "VernacExtend",
                        "307e9703ee8208bb0548bd92a3fbc6740f5863f6"
                    ]
                },
                {
                    "command": [
                        "assert (TT E B C E C D D B) by (conclude lemma_TTorder).",
                        "VernacExtend",
                        "200e07da3a9b323678e47db98c2af0dff237bfa4"
                    ]
                },
                {
                    "command": [
                        "assert (TT B E E C C D D B) by (conclude lemma_TTflip).",
                        "VernacExtend",
                        "c2af98f6dd23b035ed70544b817c1841990e8afc"
                    ]
                },
                {
                    "command": [
                        "assert (TT B A A C C D D B) by (conclude lemma_TTtransitive).",
                        "VernacExtend",
                        "23a54987622cd801a112a7c0fe1227424d722f14"
                    ]
                },
                {
                    "command": [
                        "assert (TT B A A C B D D C) by (conclude lemma_TTflip2).",
                        "VernacExtend",
                        "53661be09f4ea6a592bcbfc49433693d88294cb8"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C E D) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "eb61c1daa602df2319be20d5b4808257c3cdc18b"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle C E D) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "f9af4903088c09a9fb6bcd6ac8e81cfef5111e4a"
                    ]
                },
                {
                    "command": [
                        "assert (LtA D E C C D B) by (conclude proposition_16).",
                        "VernacExtend",
                        "2f0fbea0c4122589cc07fa779db655fa3bbf0750"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E B C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "9528d05cb521091be7ced5157c9303fddfadc057"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "56c786741aa7e98ffe5eec61f455633580850771"
                    ]
                },
                {
                    "command": [
                        "assert (Col E D B) by (conclude_def Col ).",
                        "VernacExtend",
                        "d018712cb466bac26c851f08afac4697cfe329d0"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d2431451e5055836dd7919a88d946a081de8da9e"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "9b514e0053ba8f3c49b63d2480a07be55876115a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D B C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "9d2ef878691cf6d928488d8eb30ef016504fd8c9"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B A E) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "b3bbff5193ce38768a29a1014ea3a94da7f0d557"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle B A E) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "07902c74a073dfed5636a3de810f46998aac6ad6"
                    ]
                },
                {
                    "command": [
                        "assert (LtA E A B B E C) by (conclude proposition_16).",
                        "VernacExtend",
                        "16d201f8cf4a3520e8e991c7aa916d6f63a0cbe6"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A E E A B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "14b52be83dd100914ac2ef322674c5898a33cd52"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B A E B E C) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "7b2a024a833642c7ea6992a8758aba17e5d0864b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C E B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "ec1c947e3e63d54d7e8e73364093ef1b6a6efc49"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C E B B E C) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "a694f0821ff7340de9475b838aed3df61fe63c98"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B A E C E B) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "008a358be5dd2aae270d69dce5d1550452b2d088"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9dc76a35f0423fea77251119a803e21c8f59a255"
                    ]
                },
                {
                    "command": [
                        "assert (Out A E C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "6c7b6ef2c916f27c2ed19c7b2537cdd30eed15d1"
                    ]
                },
                {
                    "command": [
                        "assert (Out A C E) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "1e6f016b7124d73389048c1ea21683c2acc1cd6d"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "8734c6c62963acc25b4886dfc0a545d19560b2ba"
                    ]
                },
                {
                    "command": [
                        "assert (Out A B B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "22813113886dbbdce7acaed310fef3f6d11d8640"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B A C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "b951873b79713cf348046c9ba1ee44f908de78a4"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C B A C) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "7b25d56040d290a45516c58087301dd50c7fbd27"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C B A E) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "7045f53a1226debafa4ac6542a97a8f7f5295cda"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E D B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "0f4d5870d202f5d3ec8ee94f53332b41dc53250d"
                    ]
                },
                {
                    "command": [
                        "assert (Out E D B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "bbb447804fbbce1888f19431de22cdd39ff3c7f7"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Out E C C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "69bbd7a0f07e437f207b6b0437743d0dcf5730f7"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C E D) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "eb61c1daa602df2319be20d5b4808257c3cdc18b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C E D C E D) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "92a55ccdeeebae152a4dca976ea69cb4cd2b1b63"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C E D C E B) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "094e3f734d8be090daf376c2e3da7f5d2de7a7f1"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B A E C E D) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "474c728ce34ef9687a3c657c915fa4b33a7f9965"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B A C C E D) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "dbbdcceb3cffedd81ce95b143732773c33dc9523"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D E C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "582ab90e455570b9740aad488af3eadf9250b618"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D E C C E D) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "60ea22d973de8bc0b06a99fcd339ec5feb55a26f"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B A C D E C) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "ee6e83970d5067b887efbbf63592c95177f5152f"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B A C C D B) by (conclude lemma_angleordertransitive).",
                        "VernacExtend",
                        "f9ddd6116124aa7a4e705292c16704ddee18434a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B D C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "8dbd4a30df13926be7efef16d3674ee680601f43"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B D C C D B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "b15ee3802c3a64ce231ba9dd8c51b9df663f7f98"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B A C B D C) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "3ef98201a17853ac3dcf098f5995449191894532"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}