{
    "filename": "Elements/OriginalProofs/proposition_06a.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_angleorderrespectscongruence2.",
            "VernacRequire",
            "de27a8d358beddba8014a148c6a73ba0ba3b7a17"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_angletrichotomy.",
            "VernacRequire",
            "e17c5c88181ad35ad4f23d3d3470404be4822020"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_06a : forall A B C, Triangle A B C -> CongA A B C A C B -> ~ Lt A C A B.",
            "VernacStartTheoremProof",
            "b17918cd557f4dcb6b3907f075faa29172f583ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (neq A B) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "9649284df41a2d643c1d265e0d98150c3d8d6a08"
        ],
        [
            "assert (neq A C) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "fb1bbf8304c14f46b4fe3e830a007c5b66466470"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "assert (neq C A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "3e0de460aa8733a502d4f01459ffc0ac21de17d3"
        ],
        [
            "assert (neq B C) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "6d5e4fac99b0c73e41bcf598f6ed26b740aa3f8b"
        ],
        [
            "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f6de27d2290b224fed0d2ab5b24228893a410ec8"
        ],
        [
            "assert (~ Lt A C A B).",
            "VernacExtend",
            "fd745aacb72be0d18a321172e10dfa416fa74358"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Cong B A A B) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "ff97827ecde45fe0bf609cc9e02472a1c03a1a68"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists D, (BetS B D A /\\ Cong B D A C)) by (conclude proposition_03);destruct Tf as [D];spliter.",
            "VernacExtend",
            "17fe7e0da3eec88bde6d0036e2611f6f98ceeb1e"
        ],
        [
            "assert (Cong D B A C) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "939edf72470b708d8e5e510c8d695d2a5a194350"
        ],
        [
            "assert (Cong B C B C) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "ed142e8fbde6a84529bd4c830f851b89eb3843f0"
        ],
        [
            "assert (Out B A D) by (conclude lemma_ray4).",
            "VernacExtend",
            "dd4e2de81ee7d7ad86d0a02e1c7277174e8c0364"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Out B C C) by (conclude lemma_ray4).",
            "VernacExtend",
            "a9badce1d2d93b32a5fe3eae0965bd326aa9fa41"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (CongA A B C A B C) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "aded022177916f7e4435a874df64d10bc8cdea41"
        ],
        [
            "assert (CongA A B C D B C) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "f6f51ca5d51ae4d1065b035b804fc4ecd7108e13"
        ],
        [
            "assert (CongA D B C A B C) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "66fad496cc2eb4e3c5cdc87b8519afaa2eb72b3e"
        ],
        [
            "assert (CongA D B C A C B) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "3f972d96b4fd7b8919db4023f3b33509e8cfb4a4"
        ],
        [
            "assert (Cong B D C A) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "714559bf87addf2378765021042db8530299c19c"
        ],
        [
            "assert (Cong B C C B) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "160cd2a9209d9b5a8c658c4c8051ae3146a0e8a3"
        ],
        [
            "assert ((Cong D C A B /\\ CongA B D C C A B /\\ CongA B C D C B A)) by (conclude proposition_04).",
            "VernacExtend",
            "e3d09eea77a3f90d707106606f5ace60dec88a14"
        ],
        [
            "assert (~ Col C B A).",
            "VernacExtend",
            "86233fe6d2145a6e93ed7346f858db350e0c062a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA C B A A B C) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "944d8975dcf87abfbf9178008fcabb9fcd62f1f9"
        ],
        [
            "assert (CongA B C D A B C) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "1089c31ce2b8cc3f4dd60d7031fcb7ee10bc4dd9"
        ],
        [
            "assert (CongA B C D A C B) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "82dda555704fe9f09293321daa57b7a8cf3119e6"
        ],
        [
            "assert (~ Col A C B).",
            "VernacExtend",
            "3107643230c41d6aa35c76ec632c3401d8b052b1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA A C B B C A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "1787bb384f740ae70569aed176d8fae9183e9a96"
        ],
        [
            "assert (CongA B C D B C A) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "e3bf3591ee7b9f0bddcc99393b10ab416718bd73"
        ],
        [
            "assert (CongA B C A B C D) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "fc3696c0ccdb7528c878555137e61899e8ce4e69"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Out C B B) by (conclude lemma_ray4).",
            "VernacExtend",
            "637eb8335a2163c1d041df3535e69682ab03a1ad"
        ],
        [
            "assert (Out C A A) by (conclude lemma_ray4).",
            "VernacExtend",
            "c5aa51775ac2d6725d437ebc1841e67fe453c920"
        ],
        [
            "assert (~ Col B C D).",
            "VernacExtend",
            "1f400b0de914ae951dba021fa809d8f95a2c5c27"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B D A) by (conclude_def Col ).",
            "VernacExtend",
            "0535b0fcc903780c288fb39f975035e2a5592fe7"
        ],
        [
            "assert (Col D B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b7a3a74036f5bb861997341ca7a6a6e1bdd1390c"
        ],
        [
            "assert (Col D B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "9b514e0053ba8f3c49b63d2480a07be55876115a"
        ],
        [
            "assert (Col B A C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B C D B C D) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "cc1e67db8081d171cd5712221faa46fdd9021f2c"
        ],
        [
            "assert (LtA B C D B C A) by (conclude_def LtA ).",
            "VernacExtend",
            "f6d1b95253330bd95313399adec977f3d478a80f"
        ],
        [
            "assert (LtA B C A B C A) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "74d1398d70193aeb1636a79dbfe4d3834a2c15f1"
        ],
        [
            "assert (~ LtA B C A B C A) by (conclude lemma_angletrichotomy).",
            "VernacExtend",
            "aa5c2ab399e651f13e5359fab8dffef66c9c7b87"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_06a",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "9649284df41a2d643c1d265e0d98150c3d8d6a08"
                    ]
                },
                {
                    "command": [
                        "assert (neq A C) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "fb1bbf8304c14f46b4fe3e830a007c5b66466470"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "assert (neq C A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "3e0de460aa8733a502d4f01459ffc0ac21de17d3"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "6d5e4fac99b0c73e41bcf598f6ed26b740aa3f8b"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f6de27d2290b224fed0d2ab5b24228893a410ec8"
                    ]
                },
                {
                    "command": [
                        "assert (~ Lt A C A B).",
                        "VernacExtend",
                        "fd745aacb72be0d18a321172e10dfa416fa74358"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A A B) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "ff97827ecde45fe0bf609cc9e02472a1c03a1a68"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists D, (BetS B D A /\\ Cong B D A C)) by (conclude proposition_03);destruct Tf as [D];spliter.",
                        "VernacExtend",
                        "17fe7e0da3eec88bde6d0036e2611f6f98ceeb1e"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D B A C) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "939edf72470b708d8e5e510c8d695d2a5a194350"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C B C) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "ed142e8fbde6a84529bd4c830f851b89eb3843f0"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "dd4e2de81ee7d7ad86d0a02e1c7277174e8c0364"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "a9badce1d2d93b32a5fe3eae0965bd326aa9fa41"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C A B C) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "aded022177916f7e4435a874df64d10bc8cdea41"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C D B C) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "f6f51ca5d51ae4d1065b035b804fc4ecd7108e13"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D B C A B C) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "66fad496cc2eb4e3c5cdc87b8519afaa2eb72b3e"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D B C A C B) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "3f972d96b4fd7b8919db4023f3b33509e8cfb4a4"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B D C A) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "714559bf87addf2378765021042db8530299c19c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C C B) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "160cd2a9209d9b5a8c658c4c8051ae3146a0e8a3"
                    ]
                },
                {
                    "command": [
                        "assert ((Cong D C A B /\\ CongA B D C C A B /\\ CongA B C D C B A)) by (conclude proposition_04).",
                        "VernacExtend",
                        "e3d09eea77a3f90d707106606f5ace60dec88a14"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C B A).",
                        "VernacExtend",
                        "86233fe6d2145a6e93ed7346f858db350e0c062a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C B A A B C) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "944d8975dcf87abfbf9178008fcabb9fcd62f1f9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C D A B C) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "1089c31ce2b8cc3f4dd60d7031fcb7ee10bc4dd9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C D A C B) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "82dda555704fe9f09293321daa57b7a8cf3119e6"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A C B).",
                        "VernacExtend",
                        "3107643230c41d6aa35c76ec632c3401d8b052b1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A C B B C A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "1787bb384f740ae70569aed176d8fae9183e9a96"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C D B C A) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "e3bf3591ee7b9f0bddcc99393b10ab416718bd73"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C A B C D) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "fc3696c0ccdb7528c878555137e61899e8ce4e69"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Out C B B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "637eb8335a2163c1d041df3535e69682ab03a1ad"
                    ]
                },
                {
                    "command": [
                        "assert (Out C A A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "c5aa51775ac2d6725d437ebc1841e67fe453c920"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C D).",
                        "VernacExtend",
                        "1f400b0de914ae951dba021fa809d8f95a2c5c27"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B D A) by (conclude_def Col ).",
                        "VernacExtend",
                        "0535b0fcc903780c288fb39f975035e2a5592fe7"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b7a3a74036f5bb861997341ca7a6a6e1bdd1390c"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "9b514e0053ba8f3c49b63d2480a07be55876115a"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C D B C D) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "cc1e67db8081d171cd5712221faa46fdd9021f2c"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B C D B C A) by (conclude_def LtA ).",
                        "VernacExtend",
                        "f6d1b95253330bd95313399adec977f3d478a80f"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B C A B C A) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "74d1398d70193aeb1636a79dbfe4d3834a2c15f1"
                    ]
                },
                {
                    "command": [
                        "assert (~ LtA B C A B C A) by (conclude lemma_angletrichotomy).",
                        "VernacExtend",
                        "aa5c2ab399e651f13e5359fab8dffef66c9c7b87"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}