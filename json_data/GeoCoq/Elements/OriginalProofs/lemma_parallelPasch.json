{
    "filename": "Elements/OriginalProofs/lemma_parallelPasch.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_parallelsymmetric.",
            "VernacRequire",
            "380a5936af7e0007ca86a397621339008584ccda"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_paralleldef2B.",
            "VernacRequire",
            "7cf4a0c55706566965dc803af6508768ea4f4a99"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_parallelNC.",
            "VernacRequire",
            "5f4385a2c77e4b4f2518ca3a6e4d8ec4f628cdd8"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_planeseparation.",
            "VernacRequire",
            "dfb172c878e868c4e95a00e2960ea7a0533a4c16"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_parallelPasch : forall A B C D E, PG A B C D -> BetS A D E -> exists X, BetS B X E /\\ BetS C X D.",
            "VernacStartTheoremProof",
            "ad3b72b2b3cf28c21d32fff33a532ee3a1b74555"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Par A B C D) by (conclude_def PG ).",
            "VernacExtend",
            "29dfcd8a524d61e9547a05f7df7e8cb0e3cc1b50"
        ],
        [
            "assert (Par A D B C) by (conclude_def PG ).",
            "VernacExtend",
            "4378c3668a23c6fe646376559fe981073d0d0838"
        ],
        [
            "assert (Par C D A B) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "ce8640be6fb122eec488f5cfb6cd2e44b3f51495"
        ],
        [
            "assert (TP C D A B) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "a0fba3fce2f5bda8c34870c36a12597b2a318606"
        ],
        [
            "assert (OS A B C D) by (conclude_def TP ).",
            "VernacExtend",
            "5874fd0e025c5b764d4d7050ec7fe709cb0c8e17"
        ],
        [
            "assert (OS B A C D) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "718f0380d5de31c52f71f83d64effa2e6a5fa6ce"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (neq A D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9593f1c3c73c1d514f6587ea75e30afd86ddb38b"
        ],
        [
            "assert (Col A D D) by (conclude_def Col ).",
            "VernacExtend",
            "f1df087c3a106a6e7039b8d1f9ef8fe564e0604c"
        ],
        [
            "assert (Col A D E) by (conclude_def Col ).",
            "VernacExtend",
            "841601706217e421ca285eb8190baebf92e18b3f"
        ],
        [
            "assert (Col D D E) by (conclude lemma_collinear4).",
            "VernacExtend",
            "954e98ac485bb6180e2da97647ade91dd37b85d6"
        ],
        [
            "assert (Col E D D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "515150d8f8d584256d125e10eca089ce5870089d"
        ],
        [
            "assert (Col C D D) by (conclude_def Col ).",
            "VernacExtend",
            "d83231adb51ebdd8e8993f4fca06332c909ac166"
        ],
        [
            "assert (nCol A C D) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "f756b81bb0815333592a3de8e0057ed20e62d72b"
        ],
        [
            "assert (nCol C D A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "828ed7fb044e87146fedeabe1cabfc203ea840dc"
        ],
        [
            "assert (TS A C D E) by (conclude_def TS ).",
            "VernacExtend",
            "03e2dc24da349c1595f289ec2a2b6484b54ce173"
        ],
        [
            "assert (TS B C D E) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "91ee8bd3ef8f5331f567236bec38adfee6cac147"
        ],
        [
            "rename_H H;let Tf:=fresh in assert (Tf:exists H, (BetS B H E /\\ Col C D H /\\ nCol C D B)) by (conclude_def TS );destruct Tf as [H];spliter.",
            "VernacExtend",
            "0f2982eb4069bb825391f81bb1388bbd8ac0aa7a"
        ],
        [
            "assert (BetS E H B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "accf7c945f1db981445c4a0f94e1ea003262e448"
        ],
        [
            "assert (Col D C H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ac0081da2c15d00119f964d06cdbc2193c0cf18f"
        ],
        [
            "assert (neq A D) by (conclude_def Par ).",
            "VernacExtend",
            "3ae3ec96af55f9a3d6fdcede52b4892b5c45cc02"
        ],
        [
            "assert (~ Meet A D B C) by (conclude_def Par ).",
            "VernacExtend",
            "6fde469428569604a58f4d8a4ece29fa94f4bd3d"
        ],
        [
            "assert (~ Meet E D C B).",
            "VernacExtend",
            "04e2fd061cbd9f3b16af6e850127db0b4b1965e8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists p, (neq E D /\\ neq C B /\\ Col E D p /\\ Col C B p)) by (conclude_def Meet );destruct Tf as [p];spliter.",
            "VernacExtend",
            "4b360123ff06756d452f1d98e7b0d1c6cd3182f1"
        ],
        [
            "assert (neq B C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "7457a2c089c09af3ab7c569f0a316fffb401ebcc"
        ],
        [
            "assert (Col B C p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6938d6ebc9f3d0530e641b38e917f57a02519d45"
        ],
        [
            "assert (Col E D A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3bfe84195debeb15038ff07a98ac3735562c7b54"
        ],
        [
            "assert (Col D A p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "5a9cbeb3b3880755ef3c8b3e363b1d2233614cc6"
        ],
        [
            "assert (Col A D p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "47814c9860cb26ba3ea5f934b0e68c616e7bbcd8"
        ],
        [
            "assert (Meet A D B C) by (conclude_def Meet ).",
            "VernacExtend",
            "1c54bae5aa3bccf4cb2f470c5182386c52c39780"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (neq D E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "5ab36fa86a17c509d448ec9b6ddf366a2ace98c2"
        ],
        [
            "assert (neq E D) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "e61047105ab8e4e585d40360238f2bc08382ae40"
        ],
        [
            "assert (neq B C) by (conclude_def Par ).",
            "VernacExtend",
            "ddff37c4632b8da2096a716457f0d11dbfc33c0a"
        ],
        [
            "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f6de27d2290b224fed0d2ab5b24228893a410ec8"
        ],
        [
            "assert (Col C C B) by (conclude_def Col ).",
            "VernacExtend",
            "ca20b4d75f16e9606dbed6f8c3fc6068cc9687f9"
        ],
        [
            "assert (BetS D H C) by (conclude lemma_collinearbetween).",
            "VernacExtend",
            "b20d91fd4069db70d2f5e7a9fa798bcfddee0fda"
        ],
        [
            "assert (BetS C H D) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "79d4ea8b54f3dd71e79a151e47053b0754dd1c73"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_parallelPasch",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B C D) by (conclude_def PG ).",
                        "VernacExtend",
                        "29dfcd8a524d61e9547a05f7df7e8cb0e3cc1b50"
                    ]
                },
                {
                    "command": [
                        "assert (Par A D B C) by (conclude_def PG ).",
                        "VernacExtend",
                        "4378c3668a23c6fe646376559fe981073d0d0838"
                    ]
                },
                {
                    "command": [
                        "assert (Par C D A B) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "ce8640be6fb122eec488f5cfb6cd2e44b3f51495"
                    ]
                },
                {
                    "command": [
                        "assert (TP C D A B) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "a0fba3fce2f5bda8c34870c36a12597b2a318606"
                    ]
                },
                {
                    "command": [
                        "assert (OS A B C D) by (conclude_def TP ).",
                        "VernacExtend",
                        "5874fd0e025c5b764d4d7050ec7fe709cb0c8e17"
                    ]
                },
                {
                    "command": [
                        "assert (OS B A C D) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "718f0380d5de31c52f71f83d64effa2e6a5fa6ce"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (neq A D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9593f1c3c73c1d514f6587ea75e30afd86ddb38b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D D) by (conclude_def Col ).",
                        "VernacExtend",
                        "f1df087c3a106a6e7039b8d1f9ef8fe564e0604c"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D E) by (conclude_def Col ).",
                        "VernacExtend",
                        "841601706217e421ca285eb8190baebf92e18b3f"
                    ]
                },
                {
                    "command": [
                        "assert (Col D D E) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "954e98ac485bb6180e2da97647ade91dd37b85d6"
                    ]
                },
                {
                    "command": [
                        "assert (Col E D D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "515150d8f8d584256d125e10eca089ce5870089d"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D D) by (conclude_def Col ).",
                        "VernacExtend",
                        "d83231adb51ebdd8e8993f4fca06332c909ac166"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C D) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "f756b81bb0815333592a3de8e0057ed20e62d72b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C D A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "828ed7fb044e87146fedeabe1cabfc203ea840dc"
                    ]
                },
                {
                    "command": [
                        "assert (TS A C D E) by (conclude_def TS ).",
                        "VernacExtend",
                        "03e2dc24da349c1595f289ec2a2b6484b54ce173"
                    ]
                },
                {
                    "command": [
                        "assert (TS B C D E) by (conclude lemma_planeseparation).",
                        "VernacExtend",
                        "91ee8bd3ef8f5331f567236bec38adfee6cac147"
                    ]
                },
                {
                    "command": [
                        "rename_H H;let Tf:=fresh in assert (Tf:exists H, (BetS B H E /\\ Col C D H /\\ nCol C D B)) by (conclude_def TS );destruct Tf as [H];spliter.",
                        "VernacExtend",
                        "0f2982eb4069bb825391f81bb1388bbd8ac0aa7a"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E H B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "accf7c945f1db981445c4a0f94e1ea003262e448"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ac0081da2c15d00119f964d06cdbc2193c0cf18f"
                    ]
                },
                {
                    "command": [
                        "assert (neq A D) by (conclude_def Par ).",
                        "VernacExtend",
                        "3ae3ec96af55f9a3d6fdcede52b4892b5c45cc02"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet A D B C) by (conclude_def Par ).",
                        "VernacExtend",
                        "6fde469428569604a58f4d8a4ece29fa94f4bd3d"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet E D C B).",
                        "VernacExtend",
                        "04e2fd061cbd9f3b16af6e850127db0b4b1965e8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists p, (neq E D /\\ neq C B /\\ Col E D p /\\ Col C B p)) by (conclude_def Meet );destruct Tf as [p];spliter.",
                        "VernacExtend",
                        "4b360123ff06756d452f1d98e7b0d1c6cd3182f1"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "7457a2c089c09af3ab7c569f0a316fffb401ebcc"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6938d6ebc9f3d0530e641b38e917f57a02519d45"
                    ]
                },
                {
                    "command": [
                        "assert (Col E D A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3bfe84195debeb15038ff07a98ac3735562c7b54"
                    ]
                },
                {
                    "command": [
                        "assert (Col D A p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "5a9cbeb3b3880755ef3c8b3e363b1d2233614cc6"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "47814c9860cb26ba3ea5f934b0e68c616e7bbcd8"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A D B C) by (conclude_def Meet ).",
                        "VernacExtend",
                        "1c54bae5aa3bccf4cb2f470c5182386c52c39780"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (neq D E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "5ab36fa86a17c509d448ec9b6ddf366a2ace98c2"
                    ]
                },
                {
                    "command": [
                        "assert (neq E D) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "e61047105ab8e4e585d40360238f2bc08382ae40"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (conclude_def Par ).",
                        "VernacExtend",
                        "ddff37c4632b8da2096a716457f0d11dbfc33c0a"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f6de27d2290b224fed0d2ab5b24228893a410ec8"
                    ]
                },
                {
                    "command": [
                        "assert (Col C C B) by (conclude_def Col ).",
                        "VernacExtend",
                        "ca20b4d75f16e9606dbed6f8c3fc6068cc9687f9"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D H C) by (conclude lemma_collinearbetween).",
                        "VernacExtend",
                        "b20d91fd4069db70d2f5e7a9fa798bcfddee0fda"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C H D) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "79d4ea8b54f3dd71e79a151e47053b0754dd1c73"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}