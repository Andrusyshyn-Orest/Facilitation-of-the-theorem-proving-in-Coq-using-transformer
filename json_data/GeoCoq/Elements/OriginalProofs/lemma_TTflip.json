{
    "filename": "Elements/OriginalProofs/lemma_TTflip.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_TGflip.",
            "VernacRequire",
            "6de86c086cfa11678cbbc168bd6e95ecf5796922"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_TGsymmetric.",
            "VernacRequire",
            "084bd7a9e4ac03a7a97e28d8ffce34f7d86e085a"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_TTflip : forall A B C D E F G H, TT A B C D E F G H -> TT B A D C E F G H.",
            "VernacStartTheoremProof",
            "6641082886876c7a82f5542d8d7cc680ce10015d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists J, (BetS E F J /\\ Cong F J G H /\\ TG A B C D E J)) by (conclude_def TT );destruct Tf as [J];spliter.",
            "VernacExtend",
            "009bf0dcfc029462b62f3dbb977ec1266dc9ac5f"
        ],
        [
            "assert (TG B A C D E J) by (forward_using lemma_TGflip).",
            "VernacExtend",
            "7b45a962eb9fa09b65e1e25fb9ff732eb3d6729e"
        ],
        [
            "assert (TG C D B A E J) by (conclude lemma_TGsymmetric).",
            "VernacExtend",
            "d6287925400b0cdebe7babafbf20b98c3e5faf4c"
        ],
        [
            "assert (TG D C B A E J) by (forward_using lemma_TGflip).",
            "VernacExtend",
            "8ad8bb59c415d6101cc9a8ccd6ff355170b34330"
        ],
        [
            "assert (TG B A D C E J) by (conclude lemma_TGsymmetric).",
            "VernacExtend",
            "8c6ce40cbd4ab6a2114357923a7bd377c5998ad0"
        ],
        [
            "assert (TT B A D C E F G H) by (conclude_def TT ).",
            "VernacExtend",
            "9ce6570722f416b3bef13bb99ef5c162c0f9a891"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_TTflip",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists J, (BetS E F J /\\ Cong F J G H /\\ TG A B C D E J)) by (conclude_def TT );destruct Tf as [J];spliter.",
                        "VernacExtend",
                        "009bf0dcfc029462b62f3dbb977ec1266dc9ac5f"
                    ]
                },
                {
                    "command": [
                        "assert (TG B A C D E J) by (forward_using lemma_TGflip).",
                        "VernacExtend",
                        "7b45a962eb9fa09b65e1e25fb9ff732eb3d6729e"
                    ]
                },
                {
                    "command": [
                        "assert (TG C D B A E J) by (conclude lemma_TGsymmetric).",
                        "VernacExtend",
                        "d6287925400b0cdebe7babafbf20b98c3e5faf4c"
                    ]
                },
                {
                    "command": [
                        "assert (TG D C B A E J) by (forward_using lemma_TGflip).",
                        "VernacExtend",
                        "8ad8bb59c415d6101cc9a8ccd6ff355170b34330"
                    ]
                },
                {
                    "command": [
                        "assert (TG B A D C E J) by (conclude lemma_TGsymmetric).",
                        "VernacExtend",
                        "8c6ce40cbd4ab6a2114357923a7bd377c5998ad0"
                    ]
                },
                {
                    "command": [
                        "assert (TT B A D C E F G H) by (conclude_def TT ).",
                        "VernacExtend",
                        "9ce6570722f416b3bef13bb99ef5c162c0f9a891"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}