{
    "filename": "Elements/OriginalProofs/lemma_parallelcollinear2.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NChelper.",
            "VernacRequire",
            "27d71a9bed299ed932460cd47291d5181182bf2b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCorder.",
            "VernacRequire",
            "45862997789ccb0c1d124a0a45383611fa0cc836"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_parallelcollinear2 : forall A B C c d, TP A B c d -> BetS c C d -> TP A B C d.",
            "VernacStartTheoremProof",
            "fa7f037b1f53d798392c630e64cc4d1edf47d0b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (BetS d C c) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "d2cc53376f57a17849c88b289710452eaf514410"
        ],
        [
            "assert ((neq A B /\\ neq c d /\\ ~ Meet A B c d /\\ OS c d A B)) by (conclude_def TP ).",
            "VernacExtend",
            "0492d6768f14b34202195afd5b64f777d5ebbb64"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists p q r, (Col A B p /\\ Col A B r /\\ BetS c p q /\\ BetS d r q /\\ nCol A B c /\\ nCol A B d)) by (conclude_def OS );destruct Tf as [p[q[r]]];spliter.",
            "VernacExtend",
            "7c7803a7f893f034ae38d998673cd60ba73995d4"
        ],
        [
            "assert (neq C d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b926c6cf68213af3f8458567b27455600b6abdb1"
        ],
        [
            "assert (BetS q p c) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "f07abdd005d5cbabc47562b3e53b2053bce82101"
        ],
        [
            "assert (BetS q r d) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ff6bc95d481ac4a13d9d541bd2288cd3c009fab1"
        ],
        [
            "assert (BetS d C c) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "d2cc53376f57a17849c88b289710452eaf514410"
        ],
        [
            "assert (BetS q p c) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "f07abdd005d5cbabc47562b3e53b2053bce82101"
        ],
        [
            "assert (Col q p c) by (conclude_def Col ).",
            "VernacExtend",
            "3bde970f7221d436d5ecb419ff311d707944e042"
        ],
        [
            "assert (~ eq p r).",
            "VernacExtend",
            "a0e1b36c266c57d39031f93882eb291ef24797c6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col q r d) by (conclude_def Col ).",
            "VernacExtend",
            "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
        ],
        [
            "assert (Col q p c) by (conclude_def Col ).",
            "VernacExtend",
            "3bde970f7221d436d5ecb419ff311d707944e042"
        ],
        [
            "assert (Col q p d) by (conclude cn_equalitysub).",
            "VernacExtend",
            "c6498eadf428d7f14ff0da4831c208c448ad36ea"
        ],
        [
            "assert (neq q p) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "3766e5baa3b3b0cc00bae5396ad292b312492a7b"
        ],
        [
            "assert (Col p c d) by (conclude lemma_collinear4).",
            "VernacExtend",
            "66de00398bc4eabf91140043310b86950c3aa674"
        ],
        [
            "assert (Col c d p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "907058938a2dd3f67c65b1862c211c87c03426bc"
        ],
        [
            "assert (Meet A B c d) by (conclude_def Meet ).",
            "VernacExtend",
            "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (nCol p r c) by (conclude lemma_NChelper).",
            "VernacExtend",
            "f11b7208c64333a8cf5ae60d266cd48fb11b8c23"
        ],
        [
            "assert (nCol p r d) by (conclude lemma_NChelper).",
            "VernacExtend",
            "9b66672f1e7863ac5ea75ca1f6965057cf575170"
        ],
        [
            "assert (nCol r d p) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "0e50a29188a453a4860de09d4d1201e814a4b799"
        ],
        [
            "assert (Col q r d) by (conclude_def Col ).",
            "VernacExtend",
            "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
        ],
        [
            "assert (Col r d q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d0140f3dfec97c313474488b999874e88b8e9fcb"
        ],
        [
            "assert (eq d d) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "f128d68b59ef0c267bd0ae06a027d9a77fc0e640"
        ],
        [
            "assert (Col r d d) by (conclude_def Col ).",
            "VernacExtend",
            "1e60c660b3d4ff0d8b2719cb859f0fd7d6042a09"
        ],
        [
            "assert (neq q d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "1e556c7d3e40ca39460f4ac2ec127b262830ac7a"
        ],
        [
            "assert (nCol q d p) by (conclude lemma_NChelper).",
            "VernacExtend",
            "f99e11de96c4012a7c0cb82b2d15b57c23ee24d6"
        ],
        [
            "assert (nCol q p d) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "946254dbc1e64e6d7ede39e4cbd91abb3cebda30"
        ],
        [
            "assert (Col q p c) by (conclude_def Col ).",
            "VernacExtend",
            "3bde970f7221d436d5ecb419ff311d707944e042"
        ],
        [
            "assert (eq c c) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "916a0cf6a7760772073fa60385f36a27038fed41"
        ],
        [
            "assert (~ eq c p).",
            "VernacExtend",
            "b03a9752d268e168078e8c595afc1f4694272b15"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq p c) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "391123ce08950fd7f55842579d23f07613d21db6"
        ],
        [
            "assert (Col p r c) by (conclude_def Col ).",
            "VernacExtend",
            "8e2d5164ad05f850d488621077ca3e572a780622"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (eq p p) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "8e39c422133003e1d1418196cf8815d39b52d4cf"
        ],
        [
            "assert (Col q p p) by (conclude_def Col ).",
            "VernacExtend",
            "5b4b3a345bc6bc884498b7b6ce6838463de879fb"
        ],
        [
            "assert (nCol c p d) by (conclude lemma_NChelper).",
            "VernacExtend",
            "6a9eeaef6c476c9e857d8c4b398de4305b2096f4"
        ],
        [
            "assert (Col c p q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0d0839ba9bbb6c71470867543ce3995f6331baf7"
        ],
        [
            "assert (eq c c) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "916a0cf6a7760772073fa60385f36a27038fed41"
        ],
        [
            "assert (Col c p c) by (conclude_def Col ).",
            "VernacExtend",
            "76e794381aadaff77167a4d9d866d9160249b67e"
        ],
        [
            "assert (neq q c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "640afd3dd342c6d32f6c4a6538b174fb962ef0cb"
        ],
        [
            "assert (nCol q c d) by (conclude lemma_NChelper).",
            "VernacExtend",
            "75fa1e3992c873a1b2b2153d87bc9259cbabef00"
        ],
        [
            "assert (BetS q p c) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "f07abdd005d5cbabc47562b3e53b2053bce82101"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (BetS q E C /\\ BetS d E p)) by (conclude postulate_Pasch_inner);destruct Tf as [E];spliter.",
            "VernacExtend",
            "7fe3bfddea34a9e6ce22b4fe7648268f861bef47"
        ],
        [
            "assert (BetS p E d) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "b0052abaeb1aca443bd041d0c35d72434fb356d2"
        ],
        [
            "assert (BetS q r d) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ff6bc95d481ac4a13d9d541bd2288cd3c009fab1"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS q F E /\\ BetS p F r)) by (conclude postulate_Pasch_inner);destruct Tf as [F];spliter.",
            "VernacExtend",
            "8048c0ed6eedd5f8a8b2efc0f51cda876809d8fe"
        ],
        [
            "assert (Col p r F) by (conclude_def Col ).",
            "VernacExtend",
            "e4506f21668ddf178974b6b8784903ed9f77a1e3"
        ],
        [
            "assert (Col B r p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f07d2a512d5838b1a2d2c57f1a1f3f1b655bd404"
        ],
        [
            "assert (Col B A p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
        ],
        [
            "assert (Col B A r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "assert (Col B p r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "79c593f6e1e1239383e45cbb6f47cbf0bbf55726"
        ],
        [
            "assert (Col B p A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1257ea3b6da0733cfa2285a87f7cb86a45bff134"
        ],
        [
            "assert (~ Col A B C).",
            "VernacExtend",
            "a75f346a3102b55e5f88c48f3e148b73c2675143"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col c C d) by (conclude_def Col ).",
            "VernacExtend",
            "267ceaf906b0251260e2cfda2168d3f760f94dbd"
        ],
        [
            "assert (Col c d C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "542c64965b59f72edade4598f0161104c072e0fa"
        ],
        [
            "assert (Meet A B c d) by (conclude_def Meet ).",
            "VernacExtend",
            "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (BetS q F C) by (conclude lemma_3_6b).",
            "VernacExtend",
            "b85858b028e4a116ecf8f118f9f15c23813c1cf8"
        ],
        [
            "assert (BetS C F q) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "f1e35029df2ddc0106b1c0f5d47c291249ea5762"
        ],
        [
            "assert (~ ~ OS C d A B).",
            "VernacExtend",
            "79df149f15e0d45359d15ce74ec998222f5e7f26"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (~ neq B p).",
            "VernacExtend",
            "9556222f933cb2c2aa263c90f9e8d8890d33381b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col p r A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "3212a33b100b6e23f5089aa38a490146e404573c"
        ],
        [
            "assert (Col A p r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "58d49a39c161f604bc248a2d2ba3f738bae01113"
        ],
        [
            "assert (Col A p B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "13213e44480653f018f1aeedf8a88eff7a3dfa69"
        ],
        [
            "assert (~ neq A p).",
            "VernacExtend",
            "b7f107de4b2a4552ffb0f02f61487a837da0c4db"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col p r B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "01b07c2c5b33ccfca5bd38c64e1e34bb7950810a"
        ],
        [
            "assert (Col A B F) by (conclude lemma_collinear5).",
            "VernacExtend",
            "179a28f95b7a408b8f5b8f06110f3f8c268d29d4"
        ],
        [
            "assert (OS C d A B) by (conclude_def OS ).",
            "VernacExtend",
            "d777d45a5d5bcddfa9319ef82c8bec5bcf2729a1"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Col A r F) by (conclude cn_equalitysub).",
            "VernacExtend",
            "c82042dd8b6052aea19cd8589375ecafc958e2e0"
        ],
        [
            "assert (Col r A F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c1cb02615a5ccc67b64997c4252bc72b8aa7d7f5"
        ],
        [
            "assert (Col r A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3135bd6ca1afe3f57301a6fcd5f17e7df6dfc4fb"
        ],
        [
            "assert (~ eq r A).",
            "VernacExtend",
            "f3dff0a265ff4c49f5795e0f7df72e633c308b33"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq r p) by (conclude cn_equalitysub).",
            "VernacExtend",
            "3d532ff9826574b02991f5e14bc7f72ceb73fb18"
        ],
        [
            "assert (neq p r) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "365b8ae45fd2f68aaab516297870581de1e3e8f1"
        ],
        [
            "assert (neq r p) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "bac304f644b192e5abd448653f206581bf521c66"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Col A F B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f3cb522cc0a9406bd6e8151913d6cd03b4e58bef"
        ],
        [
            "assert (Col A B F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3302404df2c9693cdaa14c90d08aa327b8e2c4e0"
        ],
        [
            "assert (OS C d A B) by (conclude_def OS ).",
            "VernacExtend",
            "d777d45a5d5bcddfa9319ef82c8bec5bcf2729a1"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq A p) by (conclude cn_equalitysub).",
            "VernacExtend",
            "255d37201322361c547bb335e6796c6ec4877a91"
        ],
        [
            "assert (Col A p B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "13213e44480653f018f1aeedf8a88eff7a3dfa69"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Col B A A) by (conclude_def Col ).",
            "VernacExtend",
            "b3c9c150b57966476dad1157c60dc75bf0816e36"
        ],
        [
            "assert (Col B A p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
        ],
        [
            "assert (Col B A r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
        ],
        [
            "assert (Col A p r) by (conclude lemma_collinear5).",
            "VernacExtend",
            "8cbdd3a55aba3b29dc0071209fe7b41d304272c2"
        ],
        [
            "assert (Col p B r) by (conclude lemma_collinear4).",
            "VernacExtend",
            "592ea386b884949cc47b68ccd8b5c354651c64b6"
        ],
        [
            "assert (Col p r B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f02be5ac73078f1d72bc9f28da1c0c002cce1975"
        ],
        [
            "assert (Col p r A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "dee4efef4674698f1e8b78ece3e3cf6c765d042b"
        ],
        [
            "assert (Col A B F) by (conclude lemma_collinear5).",
            "VernacExtend",
            "179a28f95b7a408b8f5b8f06110f3f8c268d29d4"
        ],
        [
            "assert (OS C d A B) by (conclude_def OS ).",
            "VernacExtend",
            "d777d45a5d5bcddfa9319ef82c8bec5bcf2729a1"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Meet A B C d).",
            "VernacExtend",
            "a5d6a7c50e73435f0d223893a4a47d87a5d02557"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists R, (neq A B /\\ neq C d /\\ Col A B R /\\ Col C d R)) by (conclude_def Meet );destruct Tf as [R];spliter.",
            "VernacExtend",
            "c5c1f99d6c8e946e6f6ad227af16b7bb405334ce"
        ],
        [
            "assert (Col c C d) by (conclude_def Col ).",
            "VernacExtend",
            "267ceaf906b0251260e2cfda2168d3f760f94dbd"
        ],
        [
            "assert (Col C d c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "35df98aca8fa8eadac70e1e6c21cd656b812f2b5"
        ],
        [
            "assert (neq C d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b926c6cf68213af3f8458567b27455600b6abdb1"
        ],
        [
            "assert (Col d c R) by (conclude lemma_collinear4).",
            "VernacExtend",
            "a38301857268eb65c4c42bb72e6add481e82ab7b"
        ],
        [
            "assert (Col c d R) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1d7892ceb3bcdb4f14b53d0eab7689924f709275"
        ],
        [
            "assert (Meet A B c d) by (conclude_def Meet ).",
            "VernacExtend",
            "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (TP A B C d) by (conclude_def TP ).",
            "VernacExtend",
            "1e0d2014f856b608a7ef34399c5afb9fe53fbf12"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_parallelcollinear2",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (BetS d C c) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "d2cc53376f57a17849c88b289710452eaf514410"
                    ]
                },
                {
                    "command": [
                        "assert ((neq A B /\\ neq c d /\\ ~ Meet A B c d /\\ OS c d A B)) by (conclude_def TP ).",
                        "VernacExtend",
                        "0492d6768f14b34202195afd5b64f777d5ebbb64"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists p q r, (Col A B p /\\ Col A B r /\\ BetS c p q /\\ BetS d r q /\\ nCol A B c /\\ nCol A B d)) by (conclude_def OS );destruct Tf as [p[q[r]]];spliter.",
                        "VernacExtend",
                        "7c7803a7f893f034ae38d998673cd60ba73995d4"
                    ]
                },
                {
                    "command": [
                        "assert (neq C d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b926c6cf68213af3f8458567b27455600b6abdb1"
                    ]
                },
                {
                    "command": [
                        "assert (BetS q p c) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "f07abdd005d5cbabc47562b3e53b2053bce82101"
                    ]
                },
                {
                    "command": [
                        "assert (BetS q r d) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ff6bc95d481ac4a13d9d541bd2288cd3c009fab1"
                    ]
                },
                {
                    "command": [
                        "assert (BetS d C c) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "d2cc53376f57a17849c88b289710452eaf514410"
                    ]
                },
                {
                    "command": [
                        "assert (BetS q p c) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "f07abdd005d5cbabc47562b3e53b2053bce82101"
                    ]
                },
                {
                    "command": [
                        "assert (Col q p c) by (conclude_def Col ).",
                        "VernacExtend",
                        "3bde970f7221d436d5ecb419ff311d707944e042"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq p r).",
                        "VernacExtend",
                        "a0e1b36c266c57d39031f93882eb291ef24797c6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col q r d) by (conclude_def Col ).",
                        "VernacExtend",
                        "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
                    ]
                },
                {
                    "command": [
                        "assert (Col q p c) by (conclude_def Col ).",
                        "VernacExtend",
                        "3bde970f7221d436d5ecb419ff311d707944e042"
                    ]
                },
                {
                    "command": [
                        "assert (Col q p d) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "c6498eadf428d7f14ff0da4831c208c448ad36ea"
                    ]
                },
                {
                    "command": [
                        "assert (neq q p) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "3766e5baa3b3b0cc00bae5396ad292b312492a7b"
                    ]
                },
                {
                    "command": [
                        "assert (Col p c d) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "66de00398bc4eabf91140043310b86950c3aa674"
                    ]
                },
                {
                    "command": [
                        "assert (Col c d p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "907058938a2dd3f67c65b1862c211c87c03426bc"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B c d) by (conclude_def Meet ).",
                        "VernacExtend",
                        "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (nCol p r c) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "f11b7208c64333a8cf5ae60d266cd48fb11b8c23"
                    ]
                },
                {
                    "command": [
                        "assert (nCol p r d) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "9b66672f1e7863ac5ea75ca1f6965057cf575170"
                    ]
                },
                {
                    "command": [
                        "assert (nCol r d p) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "0e50a29188a453a4860de09d4d1201e814a4b799"
                    ]
                },
                {
                    "command": [
                        "assert (Col q r d) by (conclude_def Col ).",
                        "VernacExtend",
                        "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
                    ]
                },
                {
                    "command": [
                        "assert (Col r d q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d0140f3dfec97c313474488b999874e88b8e9fcb"
                    ]
                },
                {
                    "command": [
                        "assert (eq d d) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "f128d68b59ef0c267bd0ae06a027d9a77fc0e640"
                    ]
                },
                {
                    "command": [
                        "assert (Col r d d) by (conclude_def Col ).",
                        "VernacExtend",
                        "1e60c660b3d4ff0d8b2719cb859f0fd7d6042a09"
                    ]
                },
                {
                    "command": [
                        "assert (neq q d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "1e556c7d3e40ca39460f4ac2ec127b262830ac7a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol q d p) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "f99e11de96c4012a7c0cb82b2d15b57c23ee24d6"
                    ]
                },
                {
                    "command": [
                        "assert (nCol q p d) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "946254dbc1e64e6d7ede39e4cbd91abb3cebda30"
                    ]
                },
                {
                    "command": [
                        "assert (Col q p c) by (conclude_def Col ).",
                        "VernacExtend",
                        "3bde970f7221d436d5ecb419ff311d707944e042"
                    ]
                },
                {
                    "command": [
                        "assert (eq c c) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "916a0cf6a7760772073fa60385f36a27038fed41"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq c p).",
                        "VernacExtend",
                        "b03a9752d268e168078e8c595afc1f4694272b15"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq p c) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "391123ce08950fd7f55842579d23f07613d21db6"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r c) by (conclude_def Col ).",
                        "VernacExtend",
                        "8e2d5164ad05f850d488621077ca3e572a780622"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (eq p p) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "8e39c422133003e1d1418196cf8815d39b52d4cf"
                    ]
                },
                {
                    "command": [
                        "assert (Col q p p) by (conclude_def Col ).",
                        "VernacExtend",
                        "5b4b3a345bc6bc884498b7b6ce6838463de879fb"
                    ]
                },
                {
                    "command": [
                        "assert (nCol c p d) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "6a9eeaef6c476c9e857d8c4b398de4305b2096f4"
                    ]
                },
                {
                    "command": [
                        "assert (Col c p q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "0d0839ba9bbb6c71470867543ce3995f6331baf7"
                    ]
                },
                {
                    "command": [
                        "assert (eq c c) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "916a0cf6a7760772073fa60385f36a27038fed41"
                    ]
                },
                {
                    "command": [
                        "assert (Col c p c) by (conclude_def Col ).",
                        "VernacExtend",
                        "76e794381aadaff77167a4d9d866d9160249b67e"
                    ]
                },
                {
                    "command": [
                        "assert (neq q c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "640afd3dd342c6d32f6c4a6538b174fb962ef0cb"
                    ]
                },
                {
                    "command": [
                        "assert (nCol q c d) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "75fa1e3992c873a1b2b2153d87bc9259cbabef00"
                    ]
                },
                {
                    "command": [
                        "assert (BetS q p c) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "f07abdd005d5cbabc47562b3e53b2053bce82101"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (BetS q E C /\\ BetS d E p)) by (conclude postulate_Pasch_inner);destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "7fe3bfddea34a9e6ce22b4fe7648268f861bef47"
                    ]
                },
                {
                    "command": [
                        "assert (BetS p E d) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "b0052abaeb1aca443bd041d0c35d72434fb356d2"
                    ]
                },
                {
                    "command": [
                        "assert (BetS q r d) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ff6bc95d481ac4a13d9d541bd2288cd3c009fab1"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS q F E /\\ BetS p F r)) by (conclude postulate_Pasch_inner);destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "8048c0ed6eedd5f8a8b2efc0f51cda876809d8fe"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r F) by (conclude_def Col ).",
                        "VernacExtend",
                        "e4506f21668ddf178974b6b8784903ed9f77a1e3"
                    ]
                },
                {
                    "command": [
                        "assert (Col B r p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f07d2a512d5838b1a2d2c57f1a1f3f1b655bd404"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "assert (Col B p r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "79c593f6e1e1239383e45cbb6f47cbf0bbf55726"
                    ]
                },
                {
                    "command": [
                        "assert (Col B p A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1257ea3b6da0733cfa2285a87f7cb86a45bff134"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B C).",
                        "VernacExtend",
                        "a75f346a3102b55e5f88c48f3e148b73c2675143"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col c C d) by (conclude_def Col ).",
                        "VernacExtend",
                        "267ceaf906b0251260e2cfda2168d3f760f94dbd"
                    ]
                },
                {
                    "command": [
                        "assert (Col c d C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "542c64965b59f72edade4598f0161104c072e0fa"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B c d) by (conclude_def Meet ).",
                        "VernacExtend",
                        "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (BetS q F C) by (conclude lemma_3_6b).",
                        "VernacExtend",
                        "b85858b028e4a116ecf8f118f9f15c23813c1cf8"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C F q) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "f1e35029df2ddc0106b1c0f5d47c291249ea5762"
                    ]
                },
                {
                    "command": [
                        "assert (~ ~ OS C d A B).",
                        "VernacExtend",
                        "79df149f15e0d45359d15ce74ec998222f5e7f26"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq B p).",
                        "VernacExtend",
                        "9556222f933cb2c2aa263c90f9e8d8890d33381b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "3212a33b100b6e23f5089aa38a490146e404573c"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "58d49a39c161f604bc248a2d2ba3f738bae01113"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "13213e44480653f018f1aeedf8a88eff7a3dfa69"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq A p).",
                        "VernacExtend",
                        "b7f107de4b2a4552ffb0f02f61487a837da0c4db"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "01b07c2c5b33ccfca5bd38c64e1e34bb7950810a"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B F) by (conclude lemma_collinear5).",
                        "VernacExtend",
                        "179a28f95b7a408b8f5b8f06110f3f8c268d29d4"
                    ]
                },
                {
                    "command": [
                        "assert (OS C d A B) by (conclude_def OS ).",
                        "VernacExtend",
                        "d777d45a5d5bcddfa9319ef82c8bec5bcf2729a1"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Col A r F) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "c82042dd8b6052aea19cd8589375ecafc958e2e0"
                    ]
                },
                {
                    "command": [
                        "assert (Col r A F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c1cb02615a5ccc67b64997c4252bc72b8aa7d7f5"
                    ]
                },
                {
                    "command": [
                        "assert (Col r A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3135bd6ca1afe3f57301a6fcd5f17e7df6dfc4fb"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq r A).",
                        "VernacExtend",
                        "f3dff0a265ff4c49f5795e0f7df72e633c308b33"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq r p) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "3d532ff9826574b02991f5e14bc7f72ceb73fb18"
                    ]
                },
                {
                    "command": [
                        "assert (neq p r) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "365b8ae45fd2f68aaab516297870581de1e3e8f1"
                    ]
                },
                {
                    "command": [
                        "assert (neq r p) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "bac304f644b192e5abd448653f206581bf521c66"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Col A F B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f3cb522cc0a9406bd6e8151913d6cd03b4e58bef"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3302404df2c9693cdaa14c90d08aa327b8e2c4e0"
                    ]
                },
                {
                    "command": [
                        "assert (OS C d A B) by (conclude_def OS ).",
                        "VernacExtend",
                        "d777d45a5d5bcddfa9319ef82c8bec5bcf2729a1"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq A p) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "255d37201322361c547bb335e6796c6ec4877a91"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "13213e44480653f018f1aeedf8a88eff7a3dfa69"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A A) by (conclude_def Col ).",
                        "VernacExtend",
                        "b3c9c150b57966476dad1157c60dc75bf0816e36"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p r) by (conclude lemma_collinear5).",
                        "VernacExtend",
                        "8cbdd3a55aba3b29dc0071209fe7b41d304272c2"
                    ]
                },
                {
                    "command": [
                        "assert (Col p B r) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "592ea386b884949cc47b68ccd8b5c354651c64b6"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f02be5ac73078f1d72bc9f28da1c0c002cce1975"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "dee4efef4674698f1e8b78ece3e3cf6c765d042b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B F) by (conclude lemma_collinear5).",
                        "VernacExtend",
                        "179a28f95b7a408b8f5b8f06110f3f8c268d29d4"
                    ]
                },
                {
                    "command": [
                        "assert (OS C d A B) by (conclude_def OS ).",
                        "VernacExtend",
                        "d777d45a5d5bcddfa9319ef82c8bec5bcf2729a1"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet A B C d).",
                        "VernacExtend",
                        "a5d6a7c50e73435f0d223893a4a47d87a5d02557"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists R, (neq A B /\\ neq C d /\\ Col A B R /\\ Col C d R)) by (conclude_def Meet );destruct Tf as [R];spliter.",
                        "VernacExtend",
                        "c5c1f99d6c8e946e6f6ad227af16b7bb405334ce"
                    ]
                },
                {
                    "command": [
                        "assert (Col c C d) by (conclude_def Col ).",
                        "VernacExtend",
                        "267ceaf906b0251260e2cfda2168d3f760f94dbd"
                    ]
                },
                {
                    "command": [
                        "assert (Col C d c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "35df98aca8fa8eadac70e1e6c21cd656b812f2b5"
                    ]
                },
                {
                    "command": [
                        "assert (neq C d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b926c6cf68213af3f8458567b27455600b6abdb1"
                    ]
                },
                {
                    "command": [
                        "assert (Col d c R) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "a38301857268eb65c4c42bb72e6add481e82ab7b"
                    ]
                },
                {
                    "command": [
                        "assert (Col c d R) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1d7892ceb3bcdb4f14b53d0eab7689924f709275"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B c d) by (conclude_def Meet ).",
                        "VernacExtend",
                        "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (TP A B C d) by (conclude_def TP ).",
                        "VernacExtend",
                        "1e0d2014f856b608a7ef34399c5afb9fe53fbf12"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}