{
    "filename": "Elements/OriginalProofs/lemma_EFreflexive.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCorder.",
            "VernacRequire",
            "45862997789ccb0c1d124a0a45383611fa0cc836"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_collinear4.",
            "VernacRequire",
            "31c94163fec0c65e806705b552c4ddb0c11450a8"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_TCreflexive.",
            "VernacRequire",
            "5591a7b9798fe9218dbfa550e434a7d67bd5b72d"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:area}.",
            "VernacContext",
            "81ffa005c6d27ee71f963c56f9847264efce50bb"
        ],
        [
            "Lemma lemma_EFreflexive : forall a b c d p, BetS a p c -> BetS b p d -> nCol a b c -> EF a b c d a b c d.",
            "VernacStartTheoremProof",
            "21365bb04e1c8b755f442ff1c324fc27d920be53"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (nCol a c b) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "718cd8d01e418cbfcc5249a7120dce1c1739da2b"
        ],
        [
            "assert (~ Col a c d).",
            "VernacExtend",
            "9889cd75a8ecfa7eebe2ac915653a113e377e8dd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col b p d) by (conclude_def Col ).",
            "VernacExtend",
            "a31dbf22a769bfb06019d5151dd6ce48f6bb77a6"
        ],
        [
            "assert (Col a p c) by (conclude_def Col ).",
            "VernacExtend",
            "471b2ac371f790e881ec41a34257e2c7c4c4d833"
        ],
        [
            "assert (Col a c p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "855e736dab749f5aab1e4eb681c31d59fd4d2ab4"
        ],
        [
            "assert (neq a c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "00bb95e55506d3c0b39943b54d75d34a9303d33a"
        ],
        [
            "assert (Col c d p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "50c49358c0c3a9c0f2e77ab5ae7863d644dca3da"
        ],
        [
            "assert (Col d p c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d1ae4ba1bed84c35c6af431f71792c1da6beb4fb"
        ],
        [
            "assert (Col d p b) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "bd99265de3d63caf0f9b6da6a27f19e124999ad3"
        ],
        [
            "assert (neq p d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "04be52efd0966dd4fdeb8553c7efa706a9340308"
        ],
        [
            "assert (neq d p) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "332059c2285e117bf8d01517f0981f43bd676a8c"
        ],
        [
            "assert (Col p c b) by (conclude lemma_collinear4).",
            "VernacExtend",
            "ed25975e25a81ba65977ce4cb4abb1f27dff1e31"
        ],
        [
            "assert (Col a p c) by (conclude_def Col ).",
            "VernacExtend",
            "471b2ac371f790e881ec41a34257e2c7c4c4d833"
        ],
        [
            "assert (Col p c a) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b8eacabdbd8f9a0382bb09af60a48c1be87ebe56"
        ],
        [
            "assert (neq p c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "88380e53f36b9a1c328553539bebdf19325a05bd"
        ],
        [
            "assert (Col c b a) by (conclude lemma_collinear4).",
            "VernacExtend",
            "94d8169babaed45d1a89983900e5b03ae67ddf9d"
        ],
        [
            "assert (Col a b c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e0b35bd31288af86783eafdeb62c07531fc3a4f6"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Triangle a c d) by (conclude_def Triangle ).",
            "VernacExtend",
            "81890724b43d80355d2c00040682c77619b6fb54"
        ],
        [
            "assert (Triangle a c b) by (conclude_def Triangle ).",
            "VernacExtend",
            "877fabf5a0b32e85a0d77a1c9951713e4a3bf9cf"
        ],
        [
            "assert (Cong_3 a c d a c d) by (conclude lemma_TCreflexive).",
            "VernacExtend",
            "e475201ca9f54007eed724d29e09c9e4a963be0f"
        ],
        [
            "assert (Cong_3 a c b a c b) by (conclude lemma_TCreflexive).",
            "VernacExtend",
            "2149602e242bc8707543767af5d8fa2b401a4847"
        ],
        [
            "assert (ET a c d a c d) by (conclude axiom_congruentequal).",
            "VernacExtend",
            "64008c6e4d4e232d21468c942774c887e82fd383"
        ],
        [
            "assert (ET a c b a c b) by (conclude axiom_congruentequal).",
            "VernacExtend",
            "e1f22470f01e9c31620a0a2d2766f3bbb7ac6b53"
        ],
        [
            "assert (Col a c p) by (conclude_def Col ).",
            "VernacExtend",
            "89906ed643e8efe0e3bb69b2aa15c89e0bfcd637"
        ],
        [
            "assert (nCol a c b) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "718cd8d01e418cbfcc5249a7120dce1c1739da2b"
        ],
        [
            "assert (TS b a c d) by (conclude_def TS ).",
            "VernacExtend",
            "773a1907d4da7ae15cde545b0e851cc2411135e2"
        ],
        [
            "assert (EF a b c d a b c d) by (conclude axiom_paste3).",
            "VernacExtend",
            "bd8b265e4b599de454ea3569fb3e4f148df164fe"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_EFreflexive",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol a c b) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "718cd8d01e418cbfcc5249a7120dce1c1739da2b"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col a c d).",
                        "VernacExtend",
                        "9889cd75a8ecfa7eebe2ac915653a113e377e8dd"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col b p d) by (conclude_def Col ).",
                        "VernacExtend",
                        "a31dbf22a769bfb06019d5151dd6ce48f6bb77a6"
                    ]
                },
                {
                    "command": [
                        "assert (Col a p c) by (conclude_def Col ).",
                        "VernacExtend",
                        "471b2ac371f790e881ec41a34257e2c7c4c4d833"
                    ]
                },
                {
                    "command": [
                        "assert (Col a c p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "855e736dab749f5aab1e4eb681c31d59fd4d2ab4"
                    ]
                },
                {
                    "command": [
                        "assert (neq a c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "00bb95e55506d3c0b39943b54d75d34a9303d33a"
                    ]
                },
                {
                    "command": [
                        "assert (Col c d p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "50c49358c0c3a9c0f2e77ab5ae7863d644dca3da"
                    ]
                },
                {
                    "command": [
                        "assert (Col d p c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d1ae4ba1bed84c35c6af431f71792c1da6beb4fb"
                    ]
                },
                {
                    "command": [
                        "assert (Col d p b) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "bd99265de3d63caf0f9b6da6a27f19e124999ad3"
                    ]
                },
                {
                    "command": [
                        "assert (neq p d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "04be52efd0966dd4fdeb8553c7efa706a9340308"
                    ]
                },
                {
                    "command": [
                        "assert (neq d p) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "332059c2285e117bf8d01517f0981f43bd676a8c"
                    ]
                },
                {
                    "command": [
                        "assert (Col p c b) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "ed25975e25a81ba65977ce4cb4abb1f27dff1e31"
                    ]
                },
                {
                    "command": [
                        "assert (Col a p c) by (conclude_def Col ).",
                        "VernacExtend",
                        "471b2ac371f790e881ec41a34257e2c7c4c4d833"
                    ]
                },
                {
                    "command": [
                        "assert (Col p c a) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b8eacabdbd8f9a0382bb09af60a48c1be87ebe56"
                    ]
                },
                {
                    "command": [
                        "assert (neq p c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "88380e53f36b9a1c328553539bebdf19325a05bd"
                    ]
                },
                {
                    "command": [
                        "assert (Col c b a) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "94d8169babaed45d1a89983900e5b03ae67ddf9d"
                    ]
                },
                {
                    "command": [
                        "assert (Col a b c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e0b35bd31288af86783eafdeb62c07531fc3a4f6"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle a c d) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "81890724b43d80355d2c00040682c77619b6fb54"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle a c b) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "877fabf5a0b32e85a0d77a1c9951713e4a3bf9cf"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 a c d a c d) by (conclude lemma_TCreflexive).",
                        "VernacExtend",
                        "e475201ca9f54007eed724d29e09c9e4a963be0f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 a c b a c b) by (conclude lemma_TCreflexive).",
                        "VernacExtend",
                        "2149602e242bc8707543767af5d8fa2b401a4847"
                    ]
                },
                {
                    "command": [
                        "assert (ET a c d a c d) by (conclude axiom_congruentequal).",
                        "VernacExtend",
                        "64008c6e4d4e232d21468c942774c887e82fd383"
                    ]
                },
                {
                    "command": [
                        "assert (ET a c b a c b) by (conclude axiom_congruentequal).",
                        "VernacExtend",
                        "e1f22470f01e9c31620a0a2d2766f3bbb7ac6b53"
                    ]
                },
                {
                    "command": [
                        "assert (Col a c p) by (conclude_def Col ).",
                        "VernacExtend",
                        "89906ed643e8efe0e3bb69b2aa15c89e0bfcd637"
                    ]
                },
                {
                    "command": [
                        "assert (nCol a c b) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "718cd8d01e418cbfcc5249a7120dce1c1739da2b"
                    ]
                },
                {
                    "command": [
                        "assert (TS b a c d) by (conclude_def TS ).",
                        "VernacExtend",
                        "773a1907d4da7ae15cde545b0e851cc2411135e2"
                    ]
                },
                {
                    "command": [
                        "assert (EF a b c d a b c d) by (conclude axiom_paste3).",
                        "VernacExtend",
                        "bd8b265e4b599de454ea3569fb3e4f148df164fe"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}