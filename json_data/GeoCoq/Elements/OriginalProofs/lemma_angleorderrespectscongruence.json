{
    "filename": "Elements/OriginalProofs/lemma_angleorderrespectscongruence.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_03.",
            "VernacRequire",
            "278125e454adc9b85b99d6f5805abd556ca3e997"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCorder.",
            "VernacRequire",
            "45862997789ccb0c1d124a0a45383611fa0cc836"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCdistinct.",
            "VernacRequire",
            "e464db49a36f1840285875a39e67b1d058d20da3"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_ABCequalsCBA.",
            "VernacRequire",
            "b41d962fe0e15082ca850c781a7005b05625160b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_equalanglestransitive.",
            "VernacRequire",
            "3d8572a356790eabfa0de91c4f9a3be03ecdf47e"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_angleorderrespectscongruence : forall A B C D E F P Q R, LtA A B C D E F -> CongA P Q R D E F -> LtA A B C P Q R.",
            "VernacStartTheoremProof",
            "80c21b2597e35e398060dddad92ebcda64d5288c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rename_H H;let Tf:=fresh in assert (Tf:exists G H J, (BetS G H J /\\ Out E D G /\\ Out E F J /\\ CongA A B C D E H)) by (conclude_def LtA );destruct Tf as [G[H[J]]];spliter.",
            "VernacExtend",
            "05dd24ff74d567b8f57434e3bd995340222bc6a6"
        ],
        [
            "assert ((neq P Q /\\ neq Q R /\\ neq P R /\\ neq D E /\\ neq E F /\\ neq D F)) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "5a7883ccb3cab9437496e425de25941969719a9c"
        ],
        [
            "assert (neq Q P) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f7ccf58e2bdd4eef3580c9330c5b251c2405df8a"
        ],
        [
            "assert ((neq A B /\\ neq B C /\\ neq A C /\\ neq D E /\\ neq E H /\\ neq D H)) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "a48d83e9d02ecb00bfa71f9ff3cc6bc48765345d"
        ],
        [
            "assert (neq E G) by (conclude lemma_raystrict).",
            "VernacExtend",
            "dcfd06687ff4256e151a4ae80bf66ee9be5a576d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists U, (Out Q P U /\\ Cong Q U E G)) by (conclude lemma_layoff);destruct Tf as [U];spliter.",
            "VernacExtend",
            "b9f73573b1990ae672f97071b08aababc96d7eac"
        ],
        [
            "assert (neq E J) by (conclude lemma_raystrict).",
            "VernacExtend",
            "1d5d23573f67fb8449d4766fb82d4751b498db6f"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists V, (Out Q R V /\\ Cong Q V E J)) by (conclude lemma_layoff);destruct Tf as [V];spliter.",
            "VernacExtend",
            "d26b137b1fe6efdcae8aa682e15ec3c4e29159e4"
        ],
        [
            "assert (Cong G H G H) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "11c09e8ceba51073ad827b9c7dffc51fb9f1371f"
        ],
        [
            "assert (Lt G H G J) by (conclude_def Lt ).",
            "VernacExtend",
            "6210ffff186e7627efe4112e534413eac14cfa87"
        ],
        [
            "assert (CongA D E F P Q R) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "2e7d220246e71ba7447e0fcda138979d65f44722"
        ],
        [
            "assert (CongA D E F U Q V) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "7be2b08e47259812c1c37c01b9bc866b7d7d3c61"
        ],
        [
            "assert (CongA U Q V D E F) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "78259f028ee506047ce519ec3eb2e1cc6302b3e0"
        ],
        [
            "assert (CongA U Q V G E J) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "40d39bcdd630eff1e4245988ba2cc3010111005b"
        ],
        [
            "assert (CongA G E J U Q V) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "c2d413e78c0c14359c08ed4029f63da3d3c5aecf"
        ],
        [
            "assert (Cong E G Q U) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "9601018dbd237be2137356162696fafbbd35aa67"
        ],
        [
            "assert (Cong E J Q V) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "a53037435b845c38ca84b5004098cb3839605687"
        ],
        [
            "assert ((Cong G J U V /\\ CongA E G J Q U V /\\ CongA E J G Q V U)) by (conclude proposition_04).",
            "VernacExtend",
            "f7b1c57ca20687e94f9671e123fd857514f960db"
        ],
        [
            "assert (Cong U V G J) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "51d71f317a982830011d4bf9f93393ebe26f5aca"
        ],
        [
            "assert (neq G J) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b296122bc16eca27f498297bbe9fd3b9ab94ce16"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists W, (BetS U W V /\\ Cong U W G H)) by (conclude proposition_03);destruct Tf as [W];spliter.",
            "VernacExtend",
            "1376d8cd33a12c9b15fa29aec5aa0197564d53af"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (Out E H H) by (conclude lemma_ray4).",
            "VernacExtend",
            "1072ef2af55b557d5e05a152d7574801dacccf47"
        ],
        [
            "assert (CongA A B C G E H) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "5ea4f228f1788e787f2b3a05333a1483e636effa"
        ],
        [
            "assert (nCol G E H) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "9151044ca9f768bd3c8511345e747ffc66b55ed1"
        ],
        [
            "assert (nCol G H E) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "c7201b76e9c9de7073973ec66488c1945d050fe4"
        ],
        [
            "assert (neq U V) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "c7412c71f0954918b30280ee192d7eb7df0b47ec"
        ],
        [
            "assert (Out U V W) by (conclude lemma_ray4).",
            "VernacExtend",
            "275137095c64b89c1379aaa15408f6e5bc39d388"
        ],
        [
            "assert (eq Q Q) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "5b7edb63097c1388a6b5f7cdca8f660723b0d8c0"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (nCol U Q V) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "f93a27bc17d6c475fb52c3c91844387363e5a3f3"
        ],
        [
            "assert (neq U Q) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "4f916b3adea4e240e708ccc383eabcf4fb261493"
        ],
        [
            "assert (Out U Q Q) by (conclude lemma_ray4).",
            "VernacExtend",
            "3583ac71e1bb295e3beb308224d9d2e0a790279c"
        ],
        [
            "assert (~ eq G E).",
            "VernacExtend",
            "55e6300c58c752cfa46d37d1fe4f1455351e4012"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col G H E) by (conclude_def Col ).",
            "VernacExtend",
            "58d78b98764defcb6e13971e62e5a51847073f45"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out G E E) by (conclude lemma_ray4).",
            "VernacExtend",
            "f74f8524e6e50d4362c8bab8335d39fa947ff4df"
        ],
        [
            "assert (CongA E G J Q U W) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "a1153cd804ce534f70caaa5ab6528407222bbd06"
        ],
        [
            "assert (CongA Q U W E G J) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "5a5dbe75eb01b45d625979ff388efd29d4f2b988"
        ],
        [
            "assert (Out G J H) by (conclude lemma_ray4).",
            "VernacExtend",
            "c3de60d0aefef7167d4be0bad1d6d7b43817f6a3"
        ],
        [
            "assert (CongA Q U W E G H) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "11d8002f98c45ea37964eb9c910eb11e0b43ac9f"
        ],
        [
            "assert (CongA E G H Q U W) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "40c4e0ad3f18a885f084e1bd2fdcf9cc2857dbe8"
        ],
        [
            "assert (nCol Q U W) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "f5d8832e087fb8e6922d4797ec0d919202458ef9"
        ],
        [
            "assert (nCol U W Q) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "d957cf10c5f621b1b60fb93c3b702326562a3327"
        ],
        [
            "assert (nCol H G E) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "98c13ee941850d4bd260518fd319dd46c084bcf4"
        ],
        [
            "assert (~ Col W U Q).",
            "VernacExtend",
            "3ce505f90b8f33abbeeb63c0a72bca44b1bd0531"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col U W Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "064cfad07ce9d57f26141bf2be9c5d81dd9b4d33"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong G H U W) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "5b0855133e86828fe9eac794df560dcdce0f03b3"
        ],
        [
            "assert (Cong G E U Q) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "c4b04aeb64c93a415d35957bb6be9a49a4fb612d"
        ],
        [
            "assert (CongA E G H Q U W) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "40c4e0ad3f18a885f084e1bd2fdcf9cc2857dbe8"
        ],
        [
            "assert (CongA Q U W W U Q) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "7d3a4b7dc7ac8639371bcca6391cd8bf22b1cbd2"
        ],
        [
            "assert (CongA E G H W U Q) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "48cf9ab5e4085efc925dcfd1211b833e5f9f6e72"
        ],
        [
            "assert (CongA H G E E G H) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "49bc235d6bfcd81c159a35e2c4ef0f27afdf3763"
        ],
        [
            "assert (CongA H G E W U Q) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "d03542d906e7cf271d209164418a1fc18202433a"
        ],
        [
            "assert ((Cong H E W Q /\\ CongA G H E U W Q /\\ CongA G E H U Q W)) by (conclude proposition_04).",
            "VernacExtend",
            "2762f574bab36b8885972c4f4ea371123a740105"
        ],
        [
            "assert (CongA A B C U Q W) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "223322e564bc9de120c5830edaf255596cba2956"
        ],
        [
            "assert (eq W W) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "aa0e171254082e9dff1fd12b2be2784e1163434b"
        ],
        [
            "assert (~ eq Q W).",
            "VernacExtend",
            "057ed02507774f84f541b63bf53316dc316da0cf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col Q U W) by (conclude_def Col ).",
            "VernacExtend",
            "da5282f1eee57377eee2c78fb30792cfba392e69"
        ],
        [
            "assert (Col W U Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1c554fb64d54bebf074372f2a01287f925338e9b"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out Q W W) by (conclude lemma_ray4).",
            "VernacExtend",
            "f1d9c002e94f4e16b4f208a2a17e8ce2eef9a79a"
        ],
        [
            "assert (Out Q U P) by (conclude lemma_ray5).",
            "VernacExtend",
            "c96803a602e6415499b1896053ed0abb114ae7c1"
        ],
        [
            "assert (CongA A B C P Q W) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "d6fa1adff44111e4c611ea99873b59309650e43e"
        ],
        [
            "assert (LtA A B C P Q R) by (conclude_def LtA ).",
            "VernacExtend",
            "c75fcff4b2e0e26481cb271d3eadb4efa126d1b8"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_angleorderrespectscongruence",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rename_H H;let Tf:=fresh in assert (Tf:exists G H J, (BetS G H J /\\ Out E D G /\\ Out E F J /\\ CongA A B C D E H)) by (conclude_def LtA );destruct Tf as [G[H[J]]];spliter.",
                        "VernacExtend",
                        "05dd24ff74d567b8f57434e3bd995340222bc6a6"
                    ]
                },
                {
                    "command": [
                        "assert ((neq P Q /\\ neq Q R /\\ neq P R /\\ neq D E /\\ neq E F /\\ neq D F)) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "5a7883ccb3cab9437496e425de25941969719a9c"
                    ]
                },
                {
                    "command": [
                        "assert (neq Q P) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f7ccf58e2bdd4eef3580c9330c5b251c2405df8a"
                    ]
                },
                {
                    "command": [
                        "assert ((neq A B /\\ neq B C /\\ neq A C /\\ neq D E /\\ neq E H /\\ neq D H)) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "a48d83e9d02ecb00bfa71f9ff3cc6bc48765345d"
                    ]
                },
                {
                    "command": [
                        "assert (neq E G) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "dcfd06687ff4256e151a4ae80bf66ee9be5a576d"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists U, (Out Q P U /\\ Cong Q U E G)) by (conclude lemma_layoff);destruct Tf as [U];spliter.",
                        "VernacExtend",
                        "b9f73573b1990ae672f97071b08aababc96d7eac"
                    ]
                },
                {
                    "command": [
                        "assert (neq E J) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "1d5d23573f67fb8449d4766fb82d4751b498db6f"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists V, (Out Q R V /\\ Cong Q V E J)) by (conclude lemma_layoff);destruct Tf as [V];spliter.",
                        "VernacExtend",
                        "d26b137b1fe6efdcae8aa682e15ec3c4e29159e4"
                    ]
                },
                {
                    "command": [
                        "assert (Cong G H G H) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "11c09e8ceba51073ad827b9c7dffc51fb9f1371f"
                    ]
                },
                {
                    "command": [
                        "assert (Lt G H G J) by (conclude_def Lt ).",
                        "VernacExtend",
                        "6210ffff186e7627efe4112e534413eac14cfa87"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D E F P Q R) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "2e7d220246e71ba7447e0fcda138979d65f44722"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D E F U Q V) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "7be2b08e47259812c1c37c01b9bc866b7d7d3c61"
                    ]
                },
                {
                    "command": [
                        "assert (CongA U Q V D E F) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "78259f028ee506047ce519ec3eb2e1cc6302b3e0"
                    ]
                },
                {
                    "command": [
                        "assert (CongA U Q V G E J) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "40d39bcdd630eff1e4245988ba2cc3010111005b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G E J U Q V) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "c2d413e78c0c14359c08ed4029f63da3d3c5aecf"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E G Q U) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "9601018dbd237be2137356162696fafbbd35aa67"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E J Q V) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "a53037435b845c38ca84b5004098cb3839605687"
                    ]
                },
                {
                    "command": [
                        "assert ((Cong G J U V /\\ CongA E G J Q U V /\\ CongA E J G Q V U)) by (conclude proposition_04).",
                        "VernacExtend",
                        "f7b1c57ca20687e94f9671e123fd857514f960db"
                    ]
                },
                {
                    "command": [
                        "assert (Cong U V G J) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "51d71f317a982830011d4bf9f93393ebe26f5aca"
                    ]
                },
                {
                    "command": [
                        "assert (neq G J) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b296122bc16eca27f498297bbe9fd3b9ab94ce16"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists W, (BetS U W V /\\ Cong U W G H)) by (conclude proposition_03);destruct Tf as [W];spliter.",
                        "VernacExtend",
                        "1376d8cd33a12c9b15fa29aec5aa0197564d53af"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (Out E H H) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "1072ef2af55b557d5e05a152d7574801dacccf47"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C G E H) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "5ea4f228f1788e787f2b3a05333a1483e636effa"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G E H) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "9151044ca9f768bd3c8511345e747ffc66b55ed1"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G H E) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "c7201b76e9c9de7073973ec66488c1945d050fe4"
                    ]
                },
                {
                    "command": [
                        "assert (neq U V) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "c7412c71f0954918b30280ee192d7eb7df0b47ec"
                    ]
                },
                {
                    "command": [
                        "assert (Out U V W) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "275137095c64b89c1379aaa15408f6e5bc39d388"
                    ]
                },
                {
                    "command": [
                        "assert (eq Q Q) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "5b7edb63097c1388a6b5f7cdca8f660723b0d8c0"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol U Q V) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "f93a27bc17d6c475fb52c3c91844387363e5a3f3"
                    ]
                },
                {
                    "command": [
                        "assert (neq U Q) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "4f916b3adea4e240e708ccc383eabcf4fb261493"
                    ]
                },
                {
                    "command": [
                        "assert (Out U Q Q) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "3583ac71e1bb295e3beb308224d9d2e0a790279c"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq G E).",
                        "VernacExtend",
                        "55e6300c58c752cfa46d37d1fe4f1455351e4012"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H E) by (conclude_def Col ).",
                        "VernacExtend",
                        "58d78b98764defcb6e13971e62e5a51847073f45"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out G E E) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "f74f8524e6e50d4362c8bab8335d39fa947ff4df"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E G J Q U W) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "a1153cd804ce534f70caaa5ab6528407222bbd06"
                    ]
                },
                {
                    "command": [
                        "assert (CongA Q U W E G J) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "5a5dbe75eb01b45d625979ff388efd29d4f2b988"
                    ]
                },
                {
                    "command": [
                        "assert (Out G J H) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "c3de60d0aefef7167d4be0bad1d6d7b43817f6a3"
                    ]
                },
                {
                    "command": [
                        "assert (CongA Q U W E G H) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "11d8002f98c45ea37964eb9c910eb11e0b43ac9f"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E G H Q U W) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "40c4e0ad3f18a885f084e1bd2fdcf9cc2857dbe8"
                    ]
                },
                {
                    "command": [
                        "assert (nCol Q U W) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "f5d8832e087fb8e6922d4797ec0d919202458ef9"
                    ]
                },
                {
                    "command": [
                        "assert (nCol U W Q) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "d957cf10c5f621b1b60fb93c3b702326562a3327"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H G E) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "98c13ee941850d4bd260518fd319dd46c084bcf4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col W U Q).",
                        "VernacExtend",
                        "3ce505f90b8f33abbeeb63c0a72bca44b1bd0531"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col U W Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "064cfad07ce9d57f26141bf2be9c5d81dd9b4d33"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Cong G H U W) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "5b0855133e86828fe9eac794df560dcdce0f03b3"
                    ]
                },
                {
                    "command": [
                        "assert (Cong G E U Q) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "c4b04aeb64c93a415d35957bb6be9a49a4fb612d"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E G H Q U W) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "40c4e0ad3f18a885f084e1bd2fdcf9cc2857dbe8"
                    ]
                },
                {
                    "command": [
                        "assert (CongA Q U W W U Q) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "7d3a4b7dc7ac8639371bcca6391cd8bf22b1cbd2"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E G H W U Q) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "48cf9ab5e4085efc925dcfd1211b833e5f9f6e72"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G E E G H) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "49bc235d6bfcd81c159a35e2c4ef0f27afdf3763"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G E W U Q) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "d03542d906e7cf271d209164418a1fc18202433a"
                    ]
                },
                {
                    "command": [
                        "assert ((Cong H E W Q /\\ CongA G H E U W Q /\\ CongA G E H U Q W)) by (conclude proposition_04).",
                        "VernacExtend",
                        "2762f574bab36b8885972c4f4ea371123a740105"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C U Q W) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "223322e564bc9de120c5830edaf255596cba2956"
                    ]
                },
                {
                    "command": [
                        "assert (eq W W) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "aa0e171254082e9dff1fd12b2be2784e1163434b"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq Q W).",
                        "VernacExtend",
                        "057ed02507774f84f541b63bf53316dc316da0cf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q U W) by (conclude_def Col ).",
                        "VernacExtend",
                        "da5282f1eee57377eee2c78fb30792cfba392e69"
                    ]
                },
                {
                    "command": [
                        "assert (Col W U Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1c554fb64d54bebf074372f2a01287f925338e9b"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out Q W W) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "f1d9c002e94f4e16b4f208a2a17e8ce2eef9a79a"
                    ]
                },
                {
                    "command": [
                        "assert (Out Q U P) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "c96803a602e6415499b1896053ed0abb114ae7c1"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C P Q W) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "d6fa1adff44111e4c611ea99873b59309650e43e"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A B C P Q R) by (conclude_def LtA ).",
                        "VernacExtend",
                        "c75fcff4b2e0e26481cb271d3eadb4efa126d1b8"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}