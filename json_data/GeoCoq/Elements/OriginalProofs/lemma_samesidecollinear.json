{
    "filename": "Elements/OriginalProofs/lemma_samesidecollinear.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCdistinct.",
            "VernacRequire",
            "e464db49a36f1840285875a39e67b1d058d20da3"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NChelper.",
            "VernacRequire",
            "27d71a9bed299ed932460cd47291d5181182bf2b"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "8fa44f4771a9528e103d9f2054b77606cde8225f"
        ],
        [
            "Lemma lemma_samesidecollinear : forall A B C P Q, OS P Q A B -> Col A B C -> neq A C -> OS P Q A C.",
            "VernacStartTheoremProof",
            "51a7eeb04183bfe3be72f4c161e3cc67d6fea5ae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists p q r, (Col A B p /\\ Col A B q /\\ BetS P p r /\\ BetS Q q r /\\ nCol A B P /\\ nCol A B Q)) by (conclude_def OS );destruct Tf as [p[q[r]]];spliter.",
            "VernacExtend",
            "53a71b77bf8ddd6e2e253d25d688db277d336b90"
        ],
        [
            "assert (neq A B) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "8734c6c62963acc25b4886dfc0a545d19560b2ba"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Col A B A) by (conclude_def Col ).",
            "VernacExtend",
            "7fe661a35be4052e3e351decefc3e023ccdb88ad"
        ],
        [
            "assert (nCol A C P) by (conclude lemma_NChelper).",
            "VernacExtend",
            "3b2dd118df8c00c1ee5084280df2efe8772fb71a"
        ],
        [
            "assert (nCol A C Q) by (conclude lemma_NChelper).",
            "VernacExtend",
            "38499bc621f52db2975a2290f01341baab46f5c3"
        ],
        [
            "assert (Col B A p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
        ],
        [
            "assert (Col B A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "assert (Col A C p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "8f64f103b6d409c7b21b67754c0825fa98fa8903"
        ],
        [
            "assert (Col B A q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f393509e5018b89862d133c669c22055d75ff7d4"
        ],
        [
            "assert (Col A C q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "583ea2b6149e1ba19e5acf1ec33b64d74dd5b476"
        ],
        [
            "assert (OS P Q A C) by (conclude_def OS ).",
            "VernacExtend",
            "90aac81fb727b33771638c5abd96239b8427048c"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_samesidecollinear",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists p q r, (Col A B p /\\ Col A B q /\\ BetS P p r /\\ BetS Q q r /\\ nCol A B P /\\ nCol A B Q)) by (conclude_def OS );destruct Tf as [p[q[r]]];spliter.",
                        "VernacExtend",
                        "53a71b77bf8ddd6e2e253d25d688db277d336b90"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "8734c6c62963acc25b4886dfc0a545d19560b2ba"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B A) by (conclude_def Col ).",
                        "VernacExtend",
                        "7fe661a35be4052e3e351decefc3e023ccdb88ad"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C P) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "3b2dd118df8c00c1ee5084280df2efe8772fb71a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C Q) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "38499bc621f52db2975a2290f01341baab46f5c3"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "8f64f103b6d409c7b21b67754c0825fa98fa8903"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f393509e5018b89862d133c669c22055d75ff7d4"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C q) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "583ea2b6149e1ba19e5acf1ec33b64d74dd5b476"
                    ]
                },
                {
                    "command": [
                        "assert (OS P Q A C) by (conclude_def OS ).",
                        "VernacExtend",
                        "90aac81fb727b33771638c5abd96239b8427048c"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}