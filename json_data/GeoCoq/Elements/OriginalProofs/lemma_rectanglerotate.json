{
    "filename": "Elements/OriginalProofs/lemma_rectanglerotate.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.euclidean_tactics.",
            "VernacRequire",
            "7a5bac876396985958fd41788a10bedaca4e41dd"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:area}.",
            "VernacContext",
            "48edf41d85e65cd7bccfad58db3b077495160a72"
        ],
        [
            "Lemma lemma_rectanglerotate : forall A B C D, RE A B C D -> RE B C D A.",
            "VernacStartTheoremProof",
            "2c181ff752a4e44f79397fc4c14bc6425855a3cc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((Per D A B /\\ Per A B C /\\ Per B C D /\\ Per C D A /\\ CR A C B D)) by (conclude_def RE ).",
            "VernacExtend",
            "8c433dfcdf3d662bb0cadd2a1302790a9b6c157e"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS A M C /\\ BetS B M D)) by (conclude_def CR );destruct Tf as [M];spliter.",
            "VernacExtend",
            "41751579e3286704b7a7a049b78650364170be4c"
        ],
        [
            "assert (BetS C M A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "77015f0993e40948997a4b78deeaea35782ca11f"
        ],
        [
            "assert (CR B D C A) by (conclude_def CR ).",
            "VernacExtend",
            "93901bb82eb267e6deb20bf46303a0b7624e3388"
        ],
        [
            "assert (RE B C D A) by (conclude_def RE ).",
            "VernacExtend",
            "e19b4ab7378fed18ce2cc181121851d7ded9597f"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_rectanglerotate",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((Per D A B /\\ Per A B C /\\ Per B C D /\\ Per C D A /\\ CR A C B D)) by (conclude_def RE ).",
                        "VernacExtend",
                        "8c433dfcdf3d662bb0cadd2a1302790a9b6c157e"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS A M C /\\ BetS B M D)) by (conclude_def CR );destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "41751579e3286704b7a7a049b78650364170be4c"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C M A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "77015f0993e40948997a4b78deeaea35782ca11f"
                    ]
                },
                {
                    "command": [
                        "assert (CR B D C A) by (conclude_def CR ).",
                        "VernacExtend",
                        "93901bb82eb267e6deb20bf46303a0b7624e3388"
                    ]
                },
                {
                    "command": [
                        "assert (RE B C D A) by (conclude_def RE ).",
                        "VernacExtend",
                        "e19b4ab7378fed18ce2cc181121851d7ded9597f"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}