{
    "filename": "Elements/OriginalProofs/lemma_paralleldef2A.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_collinear4.",
            "VernacRequire",
            "31c94163fec0c65e806705b552c4ddb0c11450a8"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_paralleldef2A : forall A B C D, TP A B C D -> Par A B C D.",
            "VernacStartTheoremProof",
            "e4738ada2974d145b99910d9a8df2c8e209e5389"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((neq A B /\\ neq C D /\\ ~ Meet A B C D /\\ OS C D A B)) by (conclude_def TP ).",
            "VernacExtend",
            "5317f7cfe69bcd72ad82fb24e8458e862932c64a"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists a b e, (Col A B a /\\ Col A B b /\\ BetS C a e /\\ BetS D b e /\\ nCol A B C /\\ nCol A B D)) by (conclude_def OS );destruct Tf as [a[b[e]]];spliter.",
            "VernacExtend",
            "d6f3f0f90598abd1f46265f3056e90f3f967d2c8"
        ],
        [
            "assert (Col C a e) by (conclude_def Col ).",
            "VernacExtend",
            "3d02097e9d069ea40892e640c5a67b3c924d06ba"
        ],
        [
            "assert (Col D b e) by (conclude_def Col ).",
            "VernacExtend",
            "89292bbba76b4d3fbbdabbe715e48aacce2d4ab8"
        ],
        [
            "assert (neq a e) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "225d01a5ef07286061708915f2b64cb7e19bfcb4"
        ],
        [
            "assert (neq e a) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "434ccff0d7dff6d816d1c7e281c2d60d41ea80dc"
        ],
        [
            "assert (neq C e) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "2d7382a7e528d944d1685b5681bfe191a31e06c5"
        ],
        [
            "assert (neq e C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "541a077aaa12c42ccabf5ae142385dde1301bf41"
        ],
        [
            "assert (neq D e) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "0ba3076ccc5ae109409b338e31ec5c4ea244a415"
        ],
        [
            "assert (neq e D) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "764ed337456b2c4bbb21cacf9792c93c176a80fc"
        ],
        [
            "assert (~ eq a b).",
            "VernacExtend",
            "5a6c22c61b47a2681a49180404f784c11bf89bfa"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col D a e) by (conclude cn_equalitysub).",
            "VernacExtend",
            "b753523783120202d5a528d4833ac04ded2b04e7"
        ],
        [
            "assert (Col a e C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5ac88343d974d6c77992028c19e7ea579b47c30b"
        ],
        [
            "assert (Col a e D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "86cce276292d77293453d50514e7ddd24367f077"
        ],
        [
            "assert (Col e C D) by (conclude lemma_collinear4).",
            "VernacExtend",
            "819372acd274d07211dfed186e6adf58f6a0cd53"
        ],
        [
            "assert (Col e D C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b5a5c38c80ccf36af49b01553f60818bee0714e8"
        ],
        [
            "assert (Col e D b) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "957a9c57981cc052a41934d3c9679a57606c5b08"
        ],
        [
            "assert (Col D C b) by (conclude lemma_collinear4).",
            "VernacExtend",
            "8109217f6b07654b2714094843dbc2c49949e7c2"
        ],
        [
            "assert (Col C D b) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5af5e47289cf6af30ee79f9dd1fd6dc03e69d179"
        ],
        [
            "assert (Meet A B C D) by (conclude_def Meet ).",
            "VernacExtend",
            "3841d60693b9b925aa29ab7795a09f1a233bc444"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col C e D).",
            "VernacExtend",
            "2d3671f835e2176093d15f178ffec63c13e4ba83"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C e a) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "8e52fdad07a5d2724093e691aa0e65b72bdd92b1"
        ],
        [
            "assert (Col e D a) by (conclude lemma_collinear4).",
            "VernacExtend",
            "51e78d81829d8f29b0bd551726da410ec0671734"
        ],
        [
            "assert (Col e D b) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "957a9c57981cc052a41934d3c9679a57606c5b08"
        ],
        [
            "assert (Col D a b) by (conclude lemma_collinear4).",
            "VernacExtend",
            "3e7b103e9885714cbb7d363cd7a8acf7b8d08d31"
        ],
        [
            "assert (Col e D C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b5a5c38c80ccf36af49b01553f60818bee0714e8"
        ],
        [
            "assert (Col D C a) by (conclude lemma_collinear4).",
            "VernacExtend",
            "276ce153bd3f0efeeb2ff49127dc886616371a5e"
        ],
        [
            "assert (Col C D a) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "cb104a4c187d132e98ce20af186c8f2b136032b6"
        ],
        [
            "assert (Meet A B C D) by (conclude_def Meet ).",
            "VernacExtend",
            "3841d60693b9b925aa29ab7795a09f1a233bc444"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS C M b /\\ BetS D M a)) by (conclude postulate_Pasch_inner);destruct Tf as [M];spliter.",
            "VernacExtend",
            "2b16ff01749abd28b208e954161cbc0c70e1720e"
        ],
        [
            "assert (BetS a M D) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "0b4c02f72668bc28341f5abd3dcdccdfad945864"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col C D C) by (conclude_def Col ).",
            "VernacExtend",
            "a5c3d5eb1771de0bbde081130e12a688964681c9"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (Col C D D) by (conclude_def Col ).",
            "VernacExtend",
            "d83231adb51ebdd8e8993f4fca06332c909ac166"
        ],
        [
            "assert (Par A B C D) by (conclude_def Par ).",
            "VernacExtend",
            "dc5bba64feddcf48da4479f4af56ca5f9818465e"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_paralleldef2A",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((neq A B /\\ neq C D /\\ ~ Meet A B C D /\\ OS C D A B)) by (conclude_def TP ).",
                        "VernacExtend",
                        "5317f7cfe69bcd72ad82fb24e8458e862932c64a"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists a b e, (Col A B a /\\ Col A B b /\\ BetS C a e /\\ BetS D b e /\\ nCol A B C /\\ nCol A B D)) by (conclude_def OS );destruct Tf as [a[b[e]]];spliter.",
                        "VernacExtend",
                        "d6f3f0f90598abd1f46265f3056e90f3f967d2c8"
                    ]
                },
                {
                    "command": [
                        "assert (Col C a e) by (conclude_def Col ).",
                        "VernacExtend",
                        "3d02097e9d069ea40892e640c5a67b3c924d06ba"
                    ]
                },
                {
                    "command": [
                        "assert (Col D b e) by (conclude_def Col ).",
                        "VernacExtend",
                        "89292bbba76b4d3fbbdabbe715e48aacce2d4ab8"
                    ]
                },
                {
                    "command": [
                        "assert (neq a e) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "225d01a5ef07286061708915f2b64cb7e19bfcb4"
                    ]
                },
                {
                    "command": [
                        "assert (neq e a) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "434ccff0d7dff6d816d1c7e281c2d60d41ea80dc"
                    ]
                },
                {
                    "command": [
                        "assert (neq C e) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "2d7382a7e528d944d1685b5681bfe191a31e06c5"
                    ]
                },
                {
                    "command": [
                        "assert (neq e C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "541a077aaa12c42ccabf5ae142385dde1301bf41"
                    ]
                },
                {
                    "command": [
                        "assert (neq D e) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "0ba3076ccc5ae109409b338e31ec5c4ea244a415"
                    ]
                },
                {
                    "command": [
                        "assert (neq e D) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "764ed337456b2c4bbb21cacf9792c93c176a80fc"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq a b).",
                        "VernacExtend",
                        "5a6c22c61b47a2681a49180404f784c11bf89bfa"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col D a e) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "b753523783120202d5a528d4833ac04ded2b04e7"
                    ]
                },
                {
                    "command": [
                        "assert (Col a e C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5ac88343d974d6c77992028c19e7ea579b47c30b"
                    ]
                },
                {
                    "command": [
                        "assert (Col a e D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "86cce276292d77293453d50514e7ddd24367f077"
                    ]
                },
                {
                    "command": [
                        "assert (Col e C D) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "819372acd274d07211dfed186e6adf58f6a0cd53"
                    ]
                },
                {
                    "command": [
                        "assert (Col e D C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b5a5c38c80ccf36af49b01553f60818bee0714e8"
                    ]
                },
                {
                    "command": [
                        "assert (Col e D b) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "957a9c57981cc052a41934d3c9679a57606c5b08"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C b) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "8109217f6b07654b2714094843dbc2c49949e7c2"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D b) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5af5e47289cf6af30ee79f9dd1fd6dc03e69d179"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B C D) by (conclude_def Meet ).",
                        "VernacExtend",
                        "3841d60693b9b925aa29ab7795a09f1a233bc444"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C e D).",
                        "VernacExtend",
                        "2d3671f835e2176093d15f178ffec63c13e4ba83"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C e a) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "8e52fdad07a5d2724093e691aa0e65b72bdd92b1"
                    ]
                },
                {
                    "command": [
                        "assert (Col e D a) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "51e78d81829d8f29b0bd551726da410ec0671734"
                    ]
                },
                {
                    "command": [
                        "assert (Col e D b) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "957a9c57981cc052a41934d3c9679a57606c5b08"
                    ]
                },
                {
                    "command": [
                        "assert (Col D a b) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "3e7b103e9885714cbb7d363cd7a8acf7b8d08d31"
                    ]
                },
                {
                    "command": [
                        "assert (Col e D C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b5a5c38c80ccf36af49b01553f60818bee0714e8"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C a) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "276ce153bd3f0efeeb2ff49127dc886616371a5e"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D a) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "cb104a4c187d132e98ce20af186c8f2b136032b6"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B C D) by (conclude_def Meet ).",
                        "VernacExtend",
                        "3841d60693b9b925aa29ab7795a09f1a233bc444"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS C M b /\\ BetS D M a)) by (conclude postulate_Pasch_inner);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "2b16ff01749abd28b208e954161cbc0c70e1720e"
                    ]
                },
                {
                    "command": [
                        "assert (BetS a M D) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "0b4c02f72668bc28341f5abd3dcdccdfad945864"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D C) by (conclude_def Col ).",
                        "VernacExtend",
                        "a5c3d5eb1771de0bbde081130e12a688964681c9"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D D) by (conclude_def Col ).",
                        "VernacExtend",
                        "d83231adb51ebdd8e8993f4fca06332c909ac166"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B C D) by (conclude_def Par ).",
                        "VernacExtend",
                        "dc5bba64feddcf48da4479f4af56ca5f9818465e"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}