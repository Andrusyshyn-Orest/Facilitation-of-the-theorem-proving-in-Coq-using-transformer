{
    "filename": "Elements/OriginalProofs/lemma_subtractequals.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthantransitive.",
            "VernacRequire",
            "d67e4b124216ea0a8df8ac53a0f2614f6793259f"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_trichotomy2.",
            "VernacRequire",
            "86c6f5e9ad894b1fc664796cf5819df86679df6c"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "8fa44f4771a9528e103d9f2054b77606cde8225f"
        ],
        [
            "Lemma lemma_subtractequals : forall A B C D E, BetS A B C -> BetS A D E -> Cong B C D E -> BetS A C E -> BetS A B D.",
            "VernacStartTheoremProof",
            "6977afbcba7eac124633007345f6ed31baa16e24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~ BetS A D B).",
            "VernacExtend",
            "a4905b13831c925de77e669d80dd5b79103b314b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (BetS A D C) by (conclude lemma_3_6b).",
            "VernacExtend",
            "bff98cf7eadcbb20415228324ea8e87dd518ad76"
        ],
        [
            "assert (BetS A D C) by (conclude lemma_3_6b).",
            "VernacExtend",
            "bff98cf7eadcbb20415228324ea8e87dd518ad76"
        ],
        [
            "assert (BetS B C E) by (conclude lemma_3_6a).",
            "VernacExtend",
            "2e75fec1aedc70d9da70f66027e765aa64c1d817"
        ],
        [
            "assert (Cong B C B C) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "ed142e8fbde6a84529bd4c830f851b89eb3843f0"
        ],
        [
            "assert (Lt B C B E) by (conclude_def Lt ).",
            "VernacExtend",
            "8c73cd7b2e5ce2489c911a1af1db7eceb4a8fec4"
        ],
        [
            "assert (Cong B E E B) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "9f5ccc82fa3a67026f87ac7583ed45b8e675f358"
        ],
        [
            "assert (Lt B C E B) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "4cd51f7f48c2a0a0536e31a86a629e9a63111a67"
        ],
        [
            "assert (BetS D C E) by (conclude lemma_3_6a).",
            "VernacExtend",
            "62977c20f4497d8ef87b9fee76a2c31fbafebc72"
        ],
        [
            "assert (BetS D B C) by (conclude lemma_3_6a).",
            "VernacExtend",
            "cf313f60f5f3f69cf002b007034935b067596da4"
        ],
        [
            "assert (BetS D B E) by (conclude lemma_3_6b).",
            "VernacExtend",
            "f9c85b7335acc1573c42c9034c1f7ab828a08375"
        ],
        [
            "assert (BetS E B D) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "947659ba579b9b6de62617bef9a9eab86804f192"
        ],
        [
            "assert (Cong E B E B) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "a73ac2afeea4c43af438ac6d2b450d1ddde3c576"
        ],
        [
            "assert (Lt E B E D) by (conclude_def Lt ).",
            "VernacExtend",
            "525427c102f9e5925d53e06a735a74a021affe9e"
        ],
        [
            "assert (Cong E D D E) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "ab2e4d63f32f86b2f892cd96324692a2974791b6"
        ],
        [
            "assert (Lt E B D E) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "22e312c97d5874b47241f9387af265b7759954e8"
        ],
        [
            "assert (Lt B C D E) by (conclude lemma_lessthantransitive).",
            "VernacExtend",
            "d2128769ce986d6ae8ceede9b0c00c35e9885c69"
        ],
        [
            "assert (Cong D E B C) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "3b45dd86dd55a15dfae74c5fcda8699e3673e987"
        ],
        [
            "assert (Lt B C B C) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "e42b7995a2fffd0088ebd369d6f524fb0d2e1e53"
        ],
        [
            "assert (~ Lt B C B C) by (conclude lemma_trichotomy2).",
            "VernacExtend",
            "b7fc114fb10407b22e6eb1087a6e37be72579519"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ ~ BetS A B D).",
            "VernacExtend",
            "0485e663ddfde933f2199bf55de4513bf4b762dc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (BetS A B E) by (conclude lemma_3_6b).",
            "VernacExtend",
            "86c73859d1535a79b93e0146f927ce21ed425844"
        ],
        [
            "assert (eq B D) by (conclude axiom_connectivity).",
            "VernacExtend",
            "b1b1d8d5537307fe685229b456f02ba1a3febbbe"
        ],
        [
            "assert (Cong A B A B) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "761ea9cec76c4e2f15b6c8b8fcfbf58ea93071ec"
        ],
        [
            "assert (Cong A B A D) by (conclude cn_equalitysub).",
            "VernacExtend",
            "1fd1098b2c5fae9f825387c1d64b61a430c1eeea"
        ],
        [
            "assert (Cong A C A E) by (conclude cn_sumofparts).",
            "VernacExtend",
            "578e834fa75099972fe83a545a54303b1d82d8c3"
        ],
        [
            "assert (BetS A B E) by (conclude cn_equalitysub).",
            "VernacExtend",
            "b5d97bec40d71d8ace841d3d47284436f8015e49"
        ],
        [
            "assert (neq A B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "729d99d00883cb65929e87e6a48ea0634ac9dc68"
        ],
        [
            "assert (Out A B E) by (conclude lemma_ray4).",
            "VernacExtend",
            "0ae1be6203ac5835323473a7c0045d2c9e878152"
        ],
        [
            "assert (Out A B C) by (conclude lemma_ray4).",
            "VernacExtend",
            "3299e1787c4c580606fa7815a45ac6bbbe016e0a"
        ],
        [
            "assert (eq C E) by (conclude lemma_layoffunique).",
            "VernacExtend",
            "501233efbc3c8ee9bd5c933f86e645a3f53e2348"
        ],
        [
            "assert (neq C E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8cb02cc27caec779e42911044c466350ef0446a"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_subtractequals",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (~ BetS A D B).",
                        "VernacExtend",
                        "a4905b13831c925de77e669d80dd5b79103b314b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A D C) by (conclude lemma_3_6b).",
                        "VernacExtend",
                        "bff98cf7eadcbb20415228324ea8e87dd518ad76"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A D C) by (conclude lemma_3_6b).",
                        "VernacExtend",
                        "bff98cf7eadcbb20415228324ea8e87dd518ad76"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B C E) by (conclude lemma_3_6a).",
                        "VernacExtend",
                        "2e75fec1aedc70d9da70f66027e765aa64c1d817"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C B C) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "ed142e8fbde6a84529bd4c830f851b89eb3843f0"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B C B E) by (conclude_def Lt ).",
                        "VernacExtend",
                        "8c73cd7b2e5ce2489c911a1af1db7eceb4a8fec4"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B E E B) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "9f5ccc82fa3a67026f87ac7583ed45b8e675f358"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B C E B) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "4cd51f7f48c2a0a0536e31a86a629e9a63111a67"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D C E) by (conclude lemma_3_6a).",
                        "VernacExtend",
                        "62977c20f4497d8ef87b9fee76a2c31fbafebc72"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D B C) by (conclude lemma_3_6a).",
                        "VernacExtend",
                        "cf313f60f5f3f69cf002b007034935b067596da4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D B E) by (conclude lemma_3_6b).",
                        "VernacExtend",
                        "f9c85b7335acc1573c42c9034c1f7ab828a08375"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E B D) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "947659ba579b9b6de62617bef9a9eab86804f192"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E B E B) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "a73ac2afeea4c43af438ac6d2b450d1ddde3c576"
                    ]
                },
                {
                    "command": [
                        "assert (Lt E B E D) by (conclude_def Lt ).",
                        "VernacExtend",
                        "525427c102f9e5925d53e06a735a74a021affe9e"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E D D E) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "ab2e4d63f32f86b2f892cd96324692a2974791b6"
                    ]
                },
                {
                    "command": [
                        "assert (Lt E B D E) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "22e312c97d5874b47241f9387af265b7759954e8"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B C D E) by (conclude lemma_lessthantransitive).",
                        "VernacExtend",
                        "d2128769ce986d6ae8ceede9b0c00c35e9885c69"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D E B C) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "3b45dd86dd55a15dfae74c5fcda8699e3673e987"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B C B C) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "e42b7995a2fffd0088ebd369d6f524fb0d2e1e53"
                    ]
                },
                {
                    "command": [
                        "assert (~ Lt B C B C) by (conclude lemma_trichotomy2).",
                        "VernacExtend",
                        "b7fc114fb10407b22e6eb1087a6e37be72579519"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ ~ BetS A B D).",
                        "VernacExtend",
                        "0485e663ddfde933f2199bf55de4513bf4b762dc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A B E) by (conclude lemma_3_6b).",
                        "VernacExtend",
                        "86c73859d1535a79b93e0146f927ce21ed425844"
                    ]
                },
                {
                    "command": [
                        "assert (eq B D) by (conclude axiom_connectivity).",
                        "VernacExtend",
                        "b1b1d8d5537307fe685229b456f02ba1a3febbbe"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B A B) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "761ea9cec76c4e2f15b6c8b8fcfbf58ea93071ec"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B A D) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "1fd1098b2c5fae9f825387c1d64b61a430c1eeea"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A C A E) by (conclude cn_sumofparts).",
                        "VernacExtend",
                        "578e834fa75099972fe83a545a54303b1d82d8c3"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A B E) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "b5d97bec40d71d8ace841d3d47284436f8015e49"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "729d99d00883cb65929e87e6a48ea0634ac9dc68"
                    ]
                },
                {
                    "command": [
                        "assert (Out A B E) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "0ae1be6203ac5835323473a7c0045d2c9e878152"
                    ]
                },
                {
                    "command": [
                        "assert (Out A B C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "3299e1787c4c580606fa7815a45ac6bbbe016e0a"
                    ]
                },
                {
                    "command": [
                        "assert (eq C E) by (conclude lemma_layoffunique).",
                        "VernacExtend",
                        "501233efbc3c8ee9bd5c933f86e645a3f53e2348"
                    ]
                },
                {
                    "command": [
                        "assert (neq C E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8cb02cc27caec779e42911044c466350ef0446a"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}