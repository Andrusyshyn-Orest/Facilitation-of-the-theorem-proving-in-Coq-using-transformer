{
    "filename": "Elements/OriginalProofs/lemma_notperp.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_samesidereflexive.",
            "VernacRequire",
            "1d906734dc5c4863ac7bff0dcd63ea78519929d7"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_sameside2.",
            "VernacRequire",
            "ec9ef7cfe28e8891569cbae91e95a2b1b656aa9b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_samesidesymmetric.",
            "VernacRequire",
            "4e53dc1ad6a9b7ecc717014b7170451fe48f6c43"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_12.",
            "VernacRequire",
            "050ea8b5d7b0621627ee33971ef1474346e972fe"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_8_7.",
            "VernacRequire",
            "cc39167830ab8d48ad8711db47c722092fdb226e"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_notperp : forall A B C P, BetS A C B -> nCol A B P -> exists X, nCol A B X /\\ OS X P A B /\\ ~ Per A C X.",
            "VernacStartTheoremProof",
            "cff1e3a8832f0dc19d8d26c3508981a55c16cdde"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (neq C B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "7afd9e17666f6170d930709a4c01bc187dec111d"
        ],
        [
            "assert (neq B C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "7457a2c089c09af3ab7c569f0a316fffb401ebcc"
        ],
        [
            "assert (~ eq C P).",
            "VernacExtend",
            "0ae36883c7c80dda9d8af7cad13835996b20a82d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (nCol A B C) by (conclude cn_equalitysub).",
            "VernacExtend",
            "c11dce0ffd154d4c77aba4fbfa1f53ec50da9341"
        ],
        [
            "assert (Col A C B) by (conclude_def Col ).",
            "VernacExtend",
            "34333505c20cabf34b429f057a3c55283bb30a4b"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists Q, (BetS B C Q /\\ Cong C Q C P)) by (conclude lemma_extension);destruct Tf as [Q];spliter.",
            "VernacExtend",
            "ad8bb18a8dfffb2047d4923850341044ed9aad00"
        ],
        [
            "assert (~ eq P Q).",
            "VernacExtend",
            "245b66e2e61f7acfa3d643969644439d2b6530a0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B C Q) by (conclude_def Col ).",
            "VernacExtend",
            "024339d95d3c154fc524efea72192c9d1e52db0d"
        ],
        [
            "assert (Col B C P) by (conclude cn_equalitysub).",
            "VernacExtend",
            "38afb8d85d09789b85c250da1b5dd42b73df0626"
        ],
        [
            "assert (Col A C B) by (conclude_def Col ).",
            "VernacExtend",
            "34333505c20cabf34b429f057a3c55283bb30a4b"
        ],
        [
            "assert (Col C B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "2fb748db5cf6487f38aa69b0c7b0694eb615be5e"
        ],
        [
            "assert (Col C B P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "97f530a8f7f5b5cd3c72a288ac561d549e719023"
        ],
        [
            "assert (Col B A P) by (conclude lemma_collinear4).",
            "VernacExtend",
            "261354bef91ed71c87f3f93ff29118a876f12f3b"
        ],
        [
            "assert (Col A B P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5af9169c1bf2150991c1493326870658d4e6da80"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS P M Q /\\ Cong M P M Q)) by (conclude proposition_10);destruct Tf as [M];spliter.",
            "VernacExtend",
            "3e72a49089aded60ec58c8930f51bdb6b9b2ed70"
        ],
        [
            "assert (Col A C B) by (conclude_def Col ).",
            "VernacExtend",
            "34333505c20cabf34b429f057a3c55283bb30a4b"
        ],
        [
            "assert (Col C B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "2fb748db5cf6487f38aa69b0c7b0694eb615be5e"
        ],
        [
            "assert (neq C B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "7afd9e17666f6170d930709a4c01bc187dec111d"
        ],
        [
            "assert (Col C B Q) by (conclude_def Col ).",
            "VernacExtend",
            "9583e5c7ad5651aefd6e89cda11e25581df8a2b1"
        ],
        [
            "assert (Col B A Q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "0169122df29f4c08062853b8b0a2f51c33fe56cb"
        ],
        [
            "assert (Col A B Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f9b3ffffc066b22431d224a38f2f2fe01d44c50a"
        ],
        [
            "assert (neq A B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "729d99d00883cb65929e87e6a48ea0634ac9dc68"
        ],
        [
            "assert (OS P P A B) by (conclude lemma_samesidereflexive).",
            "VernacExtend",
            "d1cce9c1af8673fb33e70424e946d11d93d2a58a"
        ],
        [
            "assert (neq Q P) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f7ccf58e2bdd4eef3580c9330c5b251c2405df8a"
        ],
        [
            "assert (BetS Q M P) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "c60b295563ab8ef1b5f2d43868f924b7a22b2a53"
        ],
        [
            "assert (Out Q P M) by (conclude lemma_ray4).",
            "VernacExtend",
            "0a0087a201c7ee354fc4519e32c9ea3b5f9c6ce5"
        ],
        [
            "assert (Col A Q B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "77129487e9647fbfb11fa3004f9d6b00e5cc5cbf"
        ],
        [
            "assert (OS P M A B) by (conclude lemma_sameside2).",
            "VernacExtend",
            "bd7e25b4b38d2ee29c99a1e19ed79f577f7be457"
        ],
        [
            "assert (OS M P A B) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "fd948d7b20df5f15f31d679f7c9d22225f33affa"
        ],
        [
            "assert (~ Col A B M).",
            "VernacExtend",
            "1f31787a12b0035d28dd585f09a10e022f57691f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B M Q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "4f3592ee7559f93996ab06c435b98e2ad3d13335"
        ],
        [
            "assert (Col P M Q) by (conclude_def Col ).",
            "VernacExtend",
            "1cf2bf733275436eedf68503244cb9b4583e3661"
        ],
        [
            "assert (Col M Q P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "edaaf7a34637836a9a591014ca7d3d9ed703791f"
        ],
        [
            "assert (Col M Q B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "428a28bc397d1b935de411cac09b3fe222ab2366"
        ],
        [
            "assert (neq M Q) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "729902e8641900b1fad0df4251376af8163847dc"
        ],
        [
            "assert (Col Q P B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f4e3b10df0bf2024c724f4f8e3dd544d46c3ffa1"
        ],
        [
            "assert (Col Q B P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ae2024c7bee04ecbf16772d7f760ab879fa6c637"
        ],
        [
            "assert (Col Q B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f1f16b56259dbfc9a274803df004922121443e18"
        ],
        [
            "assert (neq B Q) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "e0366e2454a0e7fd2438d9c6382eb99b5574c97b"
        ],
        [
            "assert (neq Q B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "fd740defa466f62735a148da0ddb3f3a282c087c"
        ],
        [
            "assert (Col B P A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "6be7bf340acc3a2ea8297cf4ee53daa210e4d215"
        ],
        [
            "assert (Col A B P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5af9169c1bf2150991c1493326870658d4e6da80"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists R, Perp_at M R A B R) by (conclude proposition_12);destruct Tf as [R];spliter.",
            "VernacExtend",
            "4be51768d996f79c63a4e7f5ebb6c1eead2d13e1"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (Col M R R /\\ Col A B R /\\ Col A B E /\\ Per E R M)) by (conclude_def Perp_at );destruct Tf as [E];spliter.",
            "VernacExtend",
            "835b3d17d2c2a356bc196e65e979dbcf054924d0"
        ],
        [
            "assert (Per M R E) by (conclude lemma_8_2).",
            "VernacExtend",
            "3232f90523f9db66c73447b2f92d822b90902487"
        ],
        [
            "assert (~ eq M R).",
            "VernacExtend",
            "d84b60203795203c3de8e26d842d55e654627c6e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B M) by (conclude cn_equalitysub).",
            "VernacExtend",
            "508360a16f6231b0a25d184e8578a6b33c3cd40a"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq A C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9ccac948939c7ef6427ba87db5086f0baccd3662"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "assert (~ Per A C M).",
            "VernacExtend",
            "89f7f46ccd9536d0c08feadf76d9d63a42fb03ba"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (~ neq R C).",
            "VernacExtend",
            "5c57bc8c9cd5419cc7d8b77f77ed887104c29263"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
        ],
        [
            "assert (Col B A R) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "63be791334c1719d8ef6647ab9189b12877a3d00"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "assert (Col A C R) by (conclude lemma_collinear4).",
            "VernacExtend",
            "a3be3d6f4c496901cc1487406755a4ea57d89537"
        ],
        [
            "assert (Per R C M) by (conclude lemma_collinearright).",
            "VernacExtend",
            "2acd1a45366c83a48f6ccbccbf0656a75bced46c"
        ],
        [
            "assert (~ Per M R C) by (conclude lemma_8_7).",
            "VernacExtend",
            "74d4adf9173f23c6bc1fedf86c482e10b03badcd"
        ],
        [
            "assert (Per E R M) by (conclude lemma_8_2).",
            "VernacExtend",
            "2ce9dc0d0cf1e22b21721ab4209d93285ba77777"
        ],
        [
            "assert (Col B C R) by (conclude lemma_collinear4).",
            "VernacExtend",
            "a6cd3a58d4d184827a7cde747741342058c00464"
        ],
        [
            "assert (Col B C E) by (conclude lemma_collinear4).",
            "VernacExtend",
            "61aa17d483bc532c57e6b9f3e4de7bf654033fb6"
        ],
        [
            "assert (neq C B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "7afd9e17666f6170d930709a4c01bc187dec111d"
        ],
        [
            "assert (neq B C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "7457a2c089c09af3ab7c569f0a316fffb401ebcc"
        ],
        [
            "assert (Col C R E) by (conclude lemma_collinear4).",
            "VernacExtend",
            "ce6670b40b32351bc41d42793b7bc9eaf33b7bb6"
        ],
        [
            "assert (Col E R C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "575a7aae5619fffb88d5ae7e9ba3ec684e46945e"
        ],
        [
            "assert (neq C R) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "3e7e3ce8d84556c9a6aa527dc6f41998be87dd90"
        ],
        [
            "assert (Per C R M) by (conclude lemma_collinearright).",
            "VernacExtend",
            "53bd7056201820b7cc67ce061de4d4754ff2e7fe"
        ],
        [
            "assert (Per M R C) by (conclude lemma_8_2).",
            "VernacExtend",
            "6309639e58ae12eece6ae6a0d927c2e19fcf4680"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq M C).",
            "VernacExtend",
            "c3b3b99cfa368f2ed745851ad05b026001c08318"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B M) by (conclude cn_equalitysub).",
            "VernacExtend",
            "508360a16f6231b0a25d184e8578a6b33c3cd40a"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong Q C P C) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "0747a8e8933867b9ac22e50bf7fa7d98a0a5a5af"
        ],
        [
            "assert (BetS Q M P) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "c60b295563ab8ef1b5f2d43868f924b7a22b2a53"
        ],
        [
            "assert (Cong Q M P M) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "8ba2a0531d4128873b2f3b6dbf8ca051bbd693c2"
        ],
        [
            "assert (Per Q M C) by (conclude_def Per ).",
            "VernacExtend",
            "f78bfa0dd817c81ee89d1725ba45b22c0e052066"
        ],
        [
            "assert (neq C Q) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "406a517b14bb905cc15fa7abe76de9ee4f682d3a"
        ],
        [
            "assert (neq Q C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "b4691a91c9542eb9d309cd41361a33b3c937e74a"
        ],
        [
            "assert (Per E R M) by (conclude lemma_8_2).",
            "VernacExtend",
            "2ce9dc0d0cf1e22b21721ab4209d93285ba77777"
        ],
        [
            "assert (neq Q R) by (conclude cn_equalitysub).",
            "VernacExtend",
            "864d3f4bea10012fad257419ce3fc44a914aed71"
        ],
        [
            "assert (Col B C Q) by (conclude_def Col ).",
            "VernacExtend",
            "024339d95d3c154fc524efea72192c9d1e52db0d"
        ],
        [
            "assert (Col C B Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "56345a5af690eb62df9551e8bf3309bddf20e4cb"
        ],
        [
            "assert (Col Q B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "99e1c5baa5dbd4491211c4404241e86e391b6e55"
        ],
        [
            "assert (Col B E R) by (conclude lemma_collinear4).",
            "VernacExtend",
            "08038128b643430ba4640a71347bb0c7c98fc8dd"
        ],
        [
            "assert (Col B E Q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "094307908feb84b0c176f26b53d150b85abd061f"
        ],
        [
            "assert (~ neq B E).",
            "VernacExtend",
            "5cbb4c313c5a0aecd3feab72b7faf3ad6327e0ce"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col E R Q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "a639cd931f1adc42da1b1ff5b0189bb6783ce6e2"
        ],
        [
            "assert (Per Q R M) by (conclude lemma_collinearright).",
            "VernacExtend",
            "3b94581fe0609a14f834f3359b15c0f28d99412b"
        ],
        [
            "assert (Per Q C M) by (conclude cn_equalitysub).",
            "VernacExtend",
            "9dff4478495b03e1bbf4e76883cfc846a22d46aa"
        ],
        [
            "assert (Per M C Q) by (conclude lemma_8_2).",
            "VernacExtend",
            "ca01a7f382728277ff83a5142b217267e35c1bbd"
        ],
        [
            "assert (~ Per Q M C) by (conclude lemma_8_7).",
            "VernacExtend",
            "46129a8b52eb7ee80a0cf8129ad36dd15fa36bc1"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Col A E R) by (conclude cn_equalitysub).",
            "VernacExtend",
            "7df78ba83735f03ca3a53a7296063491c127fe70"
        ],
        [
            "assert (Col A B Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f9b3ffffc066b22431d224a38f2f2fe01d44c50a"
        ],
        [
            "assert (Col A E Q) by (conclude cn_equalitysub).",
            "VernacExtend",
            "80050f9593c3607d9fdadda845c393d1c1a4730f"
        ],
        [
            "assert (neq A E) by (conclude cn_equalitysub).",
            "VernacExtend",
            "b835fd909b443b80873353a7764aec2d559c8ac4"
        ],
        [
            "assert (Col E R Q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "a639cd931f1adc42da1b1ff5b0189bb6783ce6e2"
        ],
        [
            "assert (Per Q R M) by (conclude lemma_collinearright).",
            "VernacExtend",
            "3b94581fe0609a14f834f3359b15c0f28d99412b"
        ],
        [
            "assert (Per Q C M) by (conclude cn_equalitysub).",
            "VernacExtend",
            "9dff4478495b03e1bbf4e76883cfc846a22d46aa"
        ],
        [
            "assert (Per M C Q) by (conclude lemma_8_2).",
            "VernacExtend",
            "ca01a7f382728277ff83a5142b217267e35c1bbd"
        ],
        [
            "assert (~ Per Q M C) by (conclude lemma_8_7).",
            "VernacExtend",
            "46129a8b52eb7ee80a0cf8129ad36dd15fa36bc1"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exists M;close.",
            "VernacExtend",
            "0983ac1f7924f3dbcca3927422f06b41a96dc3cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_notperp",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "7afd9e17666f6170d930709a4c01bc187dec111d"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "7457a2c089c09af3ab7c569f0a316fffb401ebcc"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C P).",
                        "VernacExtend",
                        "0ae36883c7c80dda9d8af7cad13835996b20a82d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "c11dce0ffd154d4c77aba4fbfa1f53ec50da9341"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C B) by (conclude_def Col ).",
                        "VernacExtend",
                        "34333505c20cabf34b429f057a3c55283bb30a4b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists Q, (BetS B C Q /\\ Cong C Q C P)) by (conclude lemma_extension);destruct Tf as [Q];spliter.",
                        "VernacExtend",
                        "ad8bb18a8dfffb2047d4923850341044ed9aad00"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq P Q).",
                        "VernacExtend",
                        "245b66e2e61f7acfa3d643969644439d2b6530a0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C Q) by (conclude_def Col ).",
                        "VernacExtend",
                        "024339d95d3c154fc524efea72192c9d1e52db0d"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C P) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "38afb8d85d09789b85c250da1b5dd42b73df0626"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C B) by (conclude_def Col ).",
                        "VernacExtend",
                        "34333505c20cabf34b429f057a3c55283bb30a4b"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "2fb748db5cf6487f38aa69b0c7b0694eb615be5e"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "97f530a8f7f5b5cd3c72a288ac561d549e719023"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A P) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "261354bef91ed71c87f3f93ff29118a876f12f3b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5af9169c1bf2150991c1493326870658d4e6da80"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS P M Q /\\ Cong M P M Q)) by (conclude proposition_10);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "3e72a49089aded60ec58c8930f51bdb6b9b2ed70"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C B) by (conclude_def Col ).",
                        "VernacExtend",
                        "34333505c20cabf34b429f057a3c55283bb30a4b"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "2fb748db5cf6487f38aa69b0c7b0694eb615be5e"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "7afd9e17666f6170d930709a4c01bc187dec111d"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B Q) by (conclude_def Col ).",
                        "VernacExtend",
                        "9583e5c7ad5651aefd6e89cda11e25581df8a2b1"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A Q) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "0169122df29f4c08062853b8b0a2f51c33fe56cb"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f9b3ffffc066b22431d224a38f2f2fe01d44c50a"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "729d99d00883cb65929e87e6a48ea0634ac9dc68"
                    ]
                },
                {
                    "command": [
                        "assert (OS P P A B) by (conclude lemma_samesidereflexive).",
                        "VernacExtend",
                        "d1cce9c1af8673fb33e70424e946d11d93d2a58a"
                    ]
                },
                {
                    "command": [
                        "assert (neq Q P) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f7ccf58e2bdd4eef3580c9330c5b251c2405df8a"
                    ]
                },
                {
                    "command": [
                        "assert (BetS Q M P) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "c60b295563ab8ef1b5f2d43868f924b7a22b2a53"
                    ]
                },
                {
                    "command": [
                        "assert (Out Q P M) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "0a0087a201c7ee354fc4519e32c9ea3b5f9c6ce5"
                    ]
                },
                {
                    "command": [
                        "assert (Col A Q B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "77129487e9647fbfb11fa3004f9d6b00e5cc5cbf"
                    ]
                },
                {
                    "command": [
                        "assert (OS P M A B) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "bd7e25b4b38d2ee29c99a1e19ed79f577f7be457"
                    ]
                },
                {
                    "command": [
                        "assert (OS M P A B) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "fd948d7b20df5f15f31d679f7c9d22225f33affa"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B M).",
                        "VernacExtend",
                        "1f31787a12b0035d28dd585f09a10e022f57691f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B M Q) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "4f3592ee7559f93996ab06c435b98e2ad3d13335"
                    ]
                },
                {
                    "command": [
                        "assert (Col P M Q) by (conclude_def Col ).",
                        "VernacExtend",
                        "1cf2bf733275436eedf68503244cb9b4583e3661"
                    ]
                },
                {
                    "command": [
                        "assert (Col M Q P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "edaaf7a34637836a9a591014ca7d3d9ed703791f"
                    ]
                },
                {
                    "command": [
                        "assert (Col M Q B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "428a28bc397d1b935de411cac09b3fe222ab2366"
                    ]
                },
                {
                    "command": [
                        "assert (neq M Q) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "729902e8641900b1fad0df4251376af8163847dc"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q P B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f4e3b10df0bf2024c724f4f8e3dd544d46c3ffa1"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q B P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ae2024c7bee04ecbf16772d7f760ab879fa6c637"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f1f16b56259dbfc9a274803df004922121443e18"
                    ]
                },
                {
                    "command": [
                        "assert (neq B Q) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "e0366e2454a0e7fd2438d9c6382eb99b5574c97b"
                    ]
                },
                {
                    "command": [
                        "assert (neq Q B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "fd740defa466f62735a148da0ddb3f3a282c087c"
                    ]
                },
                {
                    "command": [
                        "assert (Col B P A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "6be7bf340acc3a2ea8297cf4ee53daa210e4d215"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5af9169c1bf2150991c1493326870658d4e6da80"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists R, Perp_at M R A B R) by (conclude proposition_12);destruct Tf as [R];spliter.",
                        "VernacExtend",
                        "4be51768d996f79c63a4e7f5ebb6c1eead2d13e1"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (Col M R R /\\ Col A B R /\\ Col A B E /\\ Per E R M)) by (conclude_def Perp_at );destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "835b3d17d2c2a356bc196e65e979dbcf054924d0"
                    ]
                },
                {
                    "command": [
                        "assert (Per M R E) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "3232f90523f9db66c73447b2f92d822b90902487"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq M R).",
                        "VernacExtend",
                        "d84b60203795203c3de8e26d842d55e654627c6e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B M) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "508360a16f6231b0a25d184e8578a6b33c3cd40a"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq A C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9ccac948939c7ef6427ba87db5086f0baccd3662"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Per A C M).",
                        "VernacExtend",
                        "89f7f46ccd9536d0c08feadf76d9d63a42fb03ba"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq R C).",
                        "VernacExtend",
                        "5c57bc8c9cd5419cc7d8b77f77ed887104c29263"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A R) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "63be791334c1719d8ef6647ab9189b12877a3d00"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C R) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "a3be3d6f4c496901cc1487406755a4ea57d89537"
                    ]
                },
                {
                    "command": [
                        "assert (Per R C M) by (conclude lemma_collinearright).",
                        "VernacExtend",
                        "2acd1a45366c83a48f6ccbccbf0656a75bced46c"
                    ]
                },
                {
                    "command": [
                        "assert (~ Per M R C) by (conclude lemma_8_7).",
                        "VernacExtend",
                        "74d4adf9173f23c6bc1fedf86c482e10b03badcd"
                    ]
                },
                {
                    "command": [
                        "assert (Per E R M) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "2ce9dc0d0cf1e22b21721ab4209d93285ba77777"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C R) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "a6cd3a58d4d184827a7cde747741342058c00464"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C E) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "61aa17d483bc532c57e6b9f3e4de7bf654033fb6"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "7afd9e17666f6170d930709a4c01bc187dec111d"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "7457a2c089c09af3ab7c569f0a316fffb401ebcc"
                    ]
                },
                {
                    "command": [
                        "assert (Col C R E) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "ce6670b40b32351bc41d42793b7bc9eaf33b7bb6"
                    ]
                },
                {
                    "command": [
                        "assert (Col E R C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "575a7aae5619fffb88d5ae7e9ba3ec684e46945e"
                    ]
                },
                {
                    "command": [
                        "assert (neq C R) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "3e7e3ce8d84556c9a6aa527dc6f41998be87dd90"
                    ]
                },
                {
                    "command": [
                        "assert (Per C R M) by (conclude lemma_collinearright).",
                        "VernacExtend",
                        "53bd7056201820b7cc67ce061de4d4754ff2e7fe"
                    ]
                },
                {
                    "command": [
                        "assert (Per M R C) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "6309639e58ae12eece6ae6a0d927c2e19fcf4680"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq M C).",
                        "VernacExtend",
                        "c3b3b99cfa368f2ed745851ad05b026001c08318"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B M) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "508360a16f6231b0a25d184e8578a6b33c3cd40a"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Cong Q C P C) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "0747a8e8933867b9ac22e50bf7fa7d98a0a5a5af"
                    ]
                },
                {
                    "command": [
                        "assert (BetS Q M P) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "c60b295563ab8ef1b5f2d43868f924b7a22b2a53"
                    ]
                },
                {
                    "command": [
                        "assert (Cong Q M P M) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "8ba2a0531d4128873b2f3b6dbf8ca051bbd693c2"
                    ]
                },
                {
                    "command": [
                        "assert (Per Q M C) by (conclude_def Per ).",
                        "VernacExtend",
                        "f78bfa0dd817c81ee89d1725ba45b22c0e052066"
                    ]
                },
                {
                    "command": [
                        "assert (neq C Q) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "406a517b14bb905cc15fa7abe76de9ee4f682d3a"
                    ]
                },
                {
                    "command": [
                        "assert (neq Q C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "b4691a91c9542eb9d309cd41361a33b3c937e74a"
                    ]
                },
                {
                    "command": [
                        "assert (Per E R M) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "2ce9dc0d0cf1e22b21721ab4209d93285ba77777"
                    ]
                },
                {
                    "command": [
                        "assert (neq Q R) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "864d3f4bea10012fad257419ce3fc44a914aed71"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C Q) by (conclude_def Col ).",
                        "VernacExtend",
                        "024339d95d3c154fc524efea72192c9d1e52db0d"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "56345a5af690eb62df9551e8bf3309bddf20e4cb"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "99e1c5baa5dbd4491211c4404241e86e391b6e55"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E R) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "08038128b643430ba4640a71347bb0c7c98fc8dd"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E Q) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "094307908feb84b0c176f26b53d150b85abd061f"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq B E).",
                        "VernacExtend",
                        "5cbb4c313c5a0aecd3feab72b7faf3ad6327e0ce"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col E R Q) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "a639cd931f1adc42da1b1ff5b0189bb6783ce6e2"
                    ]
                },
                {
                    "command": [
                        "assert (Per Q R M) by (conclude lemma_collinearright).",
                        "VernacExtend",
                        "3b94581fe0609a14f834f3359b15c0f28d99412b"
                    ]
                },
                {
                    "command": [
                        "assert (Per Q C M) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "9dff4478495b03e1bbf4e76883cfc846a22d46aa"
                    ]
                },
                {
                    "command": [
                        "assert (Per M C Q) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "ca01a7f382728277ff83a5142b217267e35c1bbd"
                    ]
                },
                {
                    "command": [
                        "assert (~ Per Q M C) by (conclude lemma_8_7).",
                        "VernacExtend",
                        "46129a8b52eb7ee80a0cf8129ad36dd15fa36bc1"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E R) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "7df78ba83735f03ca3a53a7296063491c127fe70"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f9b3ffffc066b22431d224a38f2f2fe01d44c50a"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E Q) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "80050f9593c3607d9fdadda845c393d1c1a4730f"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "b835fd909b443b80873353a7764aec2d559c8ac4"
                    ]
                },
                {
                    "command": [
                        "assert (Col E R Q) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "a639cd931f1adc42da1b1ff5b0189bb6783ce6e2"
                    ]
                },
                {
                    "command": [
                        "assert (Per Q R M) by (conclude lemma_collinearright).",
                        "VernacExtend",
                        "3b94581fe0609a14f834f3359b15c0f28d99412b"
                    ]
                },
                {
                    "command": [
                        "assert (Per Q C M) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "9dff4478495b03e1bbf4e76883cfc846a22d46aa"
                    ]
                },
                {
                    "command": [
                        "assert (Per M C Q) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "ca01a7f382728277ff83a5142b217267e35c1bbd"
                    ]
                },
                {
                    "command": [
                        "assert (~ Per Q M C) by (conclude lemma_8_7).",
                        "VernacExtend",
                        "46129a8b52eb7ee80a0cf8129ad36dd15fa36bc1"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "exists M;close.",
                        "VernacExtend",
                        "0983ac1f7924f3dbcca3927422f06b41a96dc3cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}