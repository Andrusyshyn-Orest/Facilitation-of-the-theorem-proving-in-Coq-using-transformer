{
    "filename": "Elements/OriginalProofs/lemma_partnotequalwhole.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_inequalitysymmetric.",
            "VernacRequire",
            "091b8bf9100b41766c433d93f2d6a54aefc729f6"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_3_7b.",
            "VernacRequire",
            "d3266827391ba16398cf899abf74b6ea0a060a8a"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_partnotequalwhole : forall A B C, BetS A B C -> ~ Cong A B A C.",
            "VernacStartTheoremProof",
            "6ed0b3b4420e817632cf08e36b6adaefd0a21611"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (neq A B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "729d99d00883cb65929e87e6a48ea0634ac9dc68"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists D, BetS B A D) by (conclude postulate_Euclid2);destruct Tf as [D];spliter.",
            "VernacExtend",
            "00917795e9abac16657cb990698d94a13674cd57"
        ],
        [
            "assert (BetS D A B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "c16237e614eaa674840c32f1bf541403f1ce3767"
        ],
        [
            "assert (BetS D A C) by (conclude lemma_3_7b).",
            "VernacExtend",
            "7ed8797049552c0517bbbf3c615fac116581a31a"
        ],
        [
            "assert (neq B C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
        ],
        [
            "assert (~ Cong A B A C).",
            "VernacExtend",
            "9ee08ddb3584ea30ca42ff85a487fb5e1392790c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq B C) by (conclude lemma_extensionunique).",
            "VernacExtend",
            "46b16160975314ad5317060c33339c000504dacf"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_partnotequalwhole",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "729d99d00883cb65929e87e6a48ea0634ac9dc68"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists D, BetS B A D) by (conclude postulate_Euclid2);destruct Tf as [D];spliter.",
                        "VernacExtend",
                        "00917795e9abac16657cb990698d94a13674cd57"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D A B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "c16237e614eaa674840c32f1bf541403f1ce3767"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D A C) by (conclude lemma_3_7b).",
                        "VernacExtend",
                        "7ed8797049552c0517bbbf3c615fac116581a31a"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
                    ]
                },
                {
                    "command": [
                        "assert (~ Cong A B A C).",
                        "VernacExtend",
                        "9ee08ddb3584ea30ca42ff85a487fb5e1392790c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq B C) by (conclude lemma_extensionunique).",
                        "VernacExtend",
                        "46b16160975314ad5317060c33339c000504dacf"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}