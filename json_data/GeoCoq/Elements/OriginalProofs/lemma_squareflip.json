{
    "filename": "Elements/OriginalProofs/lemma_squareflip.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_8_2.",
            "VernacRequire",
            "e9abf66a9a3cf17ce9402c70267a3e30baf0bce3"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "8fa44f4771a9528e103d9f2054b77606cde8225f"
        ],
        [
            "Lemma lemma_squareflip : forall A B C D, SQ A B C D -> SQ B A D C.",
            "VernacStartTheoremProof",
            "c35d04dc532a5815476b200eef6aa2aa2c06c88a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((Cong A B C D /\\ Cong A B B C /\\ Cong A B D A /\\ Per D A B /\\ Per A B C /\\ Per B C D /\\ Per C D A)) by (conclude_def SQ ).",
            "VernacExtend",
            "f4c133f892aafc3ce771233943308adcd267abe8"
        ],
        [
            "assert (Cong B A D C) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "2ee096d184fddaa139b647895808c992fdf41f38"
        ],
        [
            "assert (Cong B A A D) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "ff304a0c3a4baf2a48f4ed7a819e74fc2c86cccf"
        ],
        [
            "assert (Cong B A C B) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "a9656a81c4822971e1308d591a421f839d7addca"
        ],
        [
            "assert (Per C B A) by (conclude lemma_8_2).",
            "VernacExtend",
            "3bc22b960a66ceb679922c391fdd15e68be9557f"
        ],
        [
            "assert (Per B A D) by (conclude lemma_8_2).",
            "VernacExtend",
            "4c6a3505d80aa29ddd1dc2c313bae797994e4233"
        ],
        [
            "assert (Per A D C) by (conclude lemma_8_2).",
            "VernacExtend",
            "53444c0589647e2e28885976260985b84b3e4862"
        ],
        [
            "assert (Per D C B) by (conclude lemma_8_2).",
            "VernacExtend",
            "eaad1229164df19c995b29d875b85475e2e45125"
        ],
        [
            "assert (SQ B A D C) by (conclude_def SQ ).",
            "VernacExtend",
            "a91741ee3ba4a6338943f2a21c00c92af4b34b99"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_squareflip",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((Cong A B C D /\\ Cong A B B C /\\ Cong A B D A /\\ Per D A B /\\ Per A B C /\\ Per B C D /\\ Per C D A)) by (conclude_def SQ ).",
                        "VernacExtend",
                        "f4c133f892aafc3ce771233943308adcd267abe8"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A D C) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "2ee096d184fddaa139b647895808c992fdf41f38"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A A D) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "ff304a0c3a4baf2a48f4ed7a819e74fc2c86cccf"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A C B) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "a9656a81c4822971e1308d591a421f839d7addca"
                    ]
                },
                {
                    "command": [
                        "assert (Per C B A) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "3bc22b960a66ceb679922c391fdd15e68be9557f"
                    ]
                },
                {
                    "command": [
                        "assert (Per B A D) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "4c6a3505d80aa29ddd1dc2c313bae797994e4233"
                    ]
                },
                {
                    "command": [
                        "assert (Per A D C) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "53444c0589647e2e28885976260985b84b3e4862"
                    ]
                },
                {
                    "command": [
                        "assert (Per D C B) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "eaad1229164df19c995b29d875b85475e2e45125"
                    ]
                },
                {
                    "command": [
                        "assert (SQ B A D C) by (conclude_def SQ ).",
                        "VernacExtend",
                        "a91741ee3ba4a6338943f2a21c00c92af4b34b99"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}