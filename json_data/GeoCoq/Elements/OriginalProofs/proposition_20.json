{
    "filename": "Elements/OriginalProofs/proposition_20.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_19.",
            "VernacRequire",
            "d62f6f8b89b82c68a66c0f086eeb4b9498b4049f"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_20 : forall A B C, Triangle A B C -> TG B A A C B C.",
            "VernacStartTheoremProof",
            "a139b72d11590c64743a2907d818511a029fc6c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (~ eq B A).",
            "VernacExtend",
            "7c5358479e6131dbd5aff685ef4c86dbe092625e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A C) by (conclude_def Col ).",
            "VernacExtend",
            "0a9dade7a73d450a134b8130679df44020c3d111"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq B C).",
            "VernacExtend",
            "2a4c174d5fcfb07079559ff9be73565058be28f2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f6de27d2290b224fed0d2ab5b24228893a410ec8"
        ],
        [
            "assert (~ eq C A).",
            "VernacExtend",
            "ebea71ace167bc95a91daefa0553fedcde7493fb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B C A) by (conclude_def Col ).",
            "VernacExtend",
            "16dac0bf75535e259baad41a105cc25e99e90b8d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists D, (BetS B A D /\\ Cong A D C A)) by (conclude lemma_extension);destruct Tf as [D];spliter.",
            "VernacExtend",
            "7a832661e0e538b99edf00e31e59c5dce9813af2"
        ],
        [
            "assert (neq A D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9593f1c3c73c1d514f6587ea75e30afd86ddb38b"
        ],
        [
            "assert (neq D A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "8c2d71a98f48066e4c95be7e226b24641861832e"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "9b514e0053ba8f3c49b63d2480a07be55876115a"
        ],
        [
            "assert (Cong A D A C) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "80e76b97d9c4a70a9679827f17098b7bd3447246"
        ],
        [
            "assert (~ Col A D C).",
            "VernacExtend",
            "29103562a235957200e9d19382cb56853981b5c7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A D) by (conclude_def Col ).",
            "VernacExtend",
            "55971acdfbebca58b64035f5e80e6c3d0509344a"
        ],
        [
            "assert (Col D A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3b9c084590075a0b0c6cf29f98348a34cfa1b2a6"
        ],
        [
            "assert (Col D A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5ecafa2b075cd4616d2a1bd920a1f00bd224fe3f"
        ],
        [
            "assert (neq A D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9593f1c3c73c1d514f6587ea75e30afd86ddb38b"
        ],
        [
            "assert (neq D A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "8c2d71a98f48066e4c95be7e226b24641861832e"
        ],
        [
            "assert (Col A B C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "c7215293ea773f2ac1e4d0c1beeef08eedfcb697"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq D C).",
            "VernacExtend",
            "882f84790e5a10c12d952aded87f171c8926ada1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A D C) by (conclude_def Col ).",
            "VernacExtend",
            "12a2942af064cd04595187a207f3964ead5f6480"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Triangle A D C) by (conclude_def Triangle ).",
            "VernacExtend",
            "6d4909b62bb6b7065c059fd3978bdea5554944cc"
        ],
        [
            "assert (isosceles A D C) by (conclude_def isosceles ).",
            "VernacExtend",
            "b3c538a3db096e19d7a2edbfe2060e4312931d83"
        ],
        [
            "assert (CongA A D C A C D) by (conclude proposition_05).",
            "VernacExtend",
            "9d0cf2d50fe675327b3c92fd81cbd1fe2ba316c4"
        ],
        [
            "assert (~ Col A C D).",
            "VernacExtend",
            "498132f6ca2265ee346b7a874729731ab8c58aaf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A D C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "8d58d7a16a1fa851f48d4f64b7bb1b8ad9cf9f46"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA A C D D C A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "63047c8338661d236508ef7a5ab7e26ba28f736b"
        ],
        [
            "assert (CongA A D C D C A) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "877bf1a2f905b4b872a152f6318dc3c264eafdf4"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (~ eq C D).",
            "VernacExtend",
            "c49a76d05148cf854b03364e141132e91f9b6596"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A C D) by (conclude_def Col ).",
            "VernacExtend",
            "72667fc7218fcf534096804a07b8460c3269541c"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out C D D) by (conclude lemma_ray4).",
            "VernacExtend",
            "5edaa1cc05e74baaf8ca5eff45ab4cd858d1f9e7"
        ],
        [
            "assert (Out C B B) by (conclude lemma_ray4).",
            "VernacExtend",
            "637eb8335a2163c1d041df3535e69682ab03a1ad"
        ],
        [
            "assert (BetS D A B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "c16237e614eaa674840c32f1bf541403f1ce3767"
        ],
        [
            "assert (LtA A D C D C B) by (conclude_def LtA ).",
            "VernacExtend",
            "287d0569dfaf094ecca1cf14d0177854bf41fdc3"
        ],
        [
            "assert (Out D A B) by (conclude lemma_ray4).",
            "VernacExtend",
            "a501d112ee154b8b2c7885a5a05ca7d5798af5a8"
        ],
        [
            "assert (Out D C C) by (conclude lemma_ray4).",
            "VernacExtend",
            "f9394b71e33010eec5d0cafe89f03b004392bfb0"
        ],
        [
            "assert (Out D B B) by (conclude lemma_ray4).",
            "VernacExtend",
            "29e7c133fc2f194d11e13a34ede8e04b15cc3d03"
        ],
        [
            "assert (Cong D B D B) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "6a11dc8602fcf22b9c84c07b8ad24bc2f521e363"
        ],
        [
            "assert (Cong D C D C) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "d1621300a94ff89b64adc48ebdb520b78b39d28c"
        ],
        [
            "assert (Cong B C B C) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "ed142e8fbde6a84529bd4c830f851b89eb3843f0"
        ],
        [
            "assert (CongA A D C B D C) by (conclude_def CongA ).",
            "VernacExtend",
            "bf808c863a5f9fb360165ec0c120c05bcb19a212"
        ],
        [
            "assert (CongA B D C A D C) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "330ff4e3a17bc21c5e166e4827b1ab3d01a9bc56"
        ],
        [
            "assert (LtA B D C D C B) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "bf893aebdc7cbd302299ee0e55ff2e99917c148d"
        ],
        [
            "assert (~ Col B C D).",
            "VernacExtend",
            "1f400b0de914ae951dba021fa809d8f95a2c5c27"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A D) by (conclude_def Col ).",
            "VernacExtend",
            "55971acdfbebca58b64035f5e80e6c3d0509344a"
        ],
        [
            "assert (Col D B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b7a3a74036f5bb861997341ca7a6a6e1bdd1390c"
        ],
        [
            "assert (Col D B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "9b514e0053ba8f3c49b63d2480a07be55876115a"
        ],
        [
            "assert (Col B A C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col C D B).",
            "VernacExtend",
            "cf62dc220ee82cf2e59493c0495b69a88acf922d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B C D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "2bbf76051c5820b160a3d5e27a58112ff361d8b6"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA C D B B D C) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "49007711c396b9e5c47c1da68049d9bac87d4a06"
        ],
        [
            "assert (CongA B C D D C B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "6edea578a4bc6ca18488d9506cbb73bee1d82ccf"
        ],
        [
            "assert (LtA C D B D C B) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "8bfe0d1212f5dcca3525f217fa01e9fca2ad6672"
        ],
        [
            "assert (LtA C D B B C D) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "eddf419c36820d9dad7cad9b7db6b773c93e128f"
        ],
        [
            "assert (Triangle B C D) by (conclude_def Triangle ).",
            "VernacExtend",
            "40be11cd41aa12caddaf9318b260de2b0bc8d080"
        ],
        [
            "assert (Lt B C B D) by (conclude proposition_19).",
            "VernacExtend",
            "11cb6299b45be9fa82bcf4149b98efbf44bbca84"
        ],
        [
            "assert (TG B A A C B C) by (conclude_def TG ).",
            "VernacExtend",
            "49876a023760a438642568611febe0cda5d44d71"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_20",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B A).",
                        "VernacExtend",
                        "7c5358479e6131dbd5aff685ef4c86dbe092625e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude_def Col ).",
                        "VernacExtend",
                        "0a9dade7a73d450a134b8130679df44020c3d111"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B C).",
                        "VernacExtend",
                        "2a4c174d5fcfb07079559ff9be73565058be28f2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f6de27d2290b224fed0d2ab5b24228893a410ec8"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C A).",
                        "VernacExtend",
                        "ebea71ace167bc95a91daefa0553fedcde7493fb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C A) by (conclude_def Col ).",
                        "VernacExtend",
                        "16dac0bf75535e259baad41a105cc25e99e90b8d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists D, (BetS B A D /\\ Cong A D C A)) by (conclude lemma_extension);destruct Tf as [D];spliter.",
                        "VernacExtend",
                        "7a832661e0e538b99edf00e31e59c5dce9813af2"
                    ]
                },
                {
                    "command": [
                        "assert (neq A D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9593f1c3c73c1d514f6587ea75e30afd86ddb38b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "8c2d71a98f48066e4c95be7e226b24641861832e"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "9b514e0053ba8f3c49b63d2480a07be55876115a"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A D A C) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "80e76b97d9c4a70a9679827f17098b7bd3447246"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A D C).",
                        "VernacExtend",
                        "29103562a235957200e9d19382cb56853981b5c7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A D) by (conclude_def Col ).",
                        "VernacExtend",
                        "55971acdfbebca58b64035f5e80e6c3d0509344a"
                    ]
                },
                {
                    "command": [
                        "assert (Col D A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3b9c084590075a0b0c6cf29f98348a34cfa1b2a6"
                    ]
                },
                {
                    "command": [
                        "assert (Col D A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5ecafa2b075cd4616d2a1bd920a1f00bd224fe3f"
                    ]
                },
                {
                    "command": [
                        "assert (neq A D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9593f1c3c73c1d514f6587ea75e30afd86ddb38b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "8c2d71a98f48066e4c95be7e226b24641861832e"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "c7215293ea773f2ac1e4d0c1beeef08eedfcb697"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq D C).",
                        "VernacExtend",
                        "882f84790e5a10c12d952aded87f171c8926ada1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D C) by (conclude_def Col ).",
                        "VernacExtend",
                        "12a2942af064cd04595187a207f3964ead5f6480"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle A D C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "6d4909b62bb6b7065c059fd3978bdea5554944cc"
                    ]
                },
                {
                    "command": [
                        "assert (isosceles A D C) by (conclude_def isosceles ).",
                        "VernacExtend",
                        "b3c538a3db096e19d7a2edbfe2060e4312931d83"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A D C A C D) by (conclude proposition_05).",
                        "VernacExtend",
                        "9d0cf2d50fe675327b3c92fd81cbd1fe2ba316c4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A C D).",
                        "VernacExtend",
                        "498132f6ca2265ee346b7a874729731ab8c58aaf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "8d58d7a16a1fa851f48d4f64b7bb1b8ad9cf9f46"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A C D D C A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "63047c8338661d236508ef7a5ab7e26ba28f736b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A D C D C A) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "877bf1a2f905b4b872a152f6318dc3c264eafdf4"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C D).",
                        "VernacExtend",
                        "c49a76d05148cf854b03364e141132e91f9b6596"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C D) by (conclude_def Col ).",
                        "VernacExtend",
                        "72667fc7218fcf534096804a07b8460c3269541c"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out C D D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "5edaa1cc05e74baaf8ca5eff45ab4cd858d1f9e7"
                    ]
                },
                {
                    "command": [
                        "assert (Out C B B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "637eb8335a2163c1d041df3535e69682ab03a1ad"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D A B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "c16237e614eaa674840c32f1bf541403f1ce3767"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A D C D C B) by (conclude_def LtA ).",
                        "VernacExtend",
                        "287d0569dfaf094ecca1cf14d0177854bf41fdc3"
                    ]
                },
                {
                    "command": [
                        "assert (Out D A B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "a501d112ee154b8b2c7885a5a05ca7d5798af5a8"
                    ]
                },
                {
                    "command": [
                        "assert (Out D C C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "f9394b71e33010eec5d0cafe89f03b004392bfb0"
                    ]
                },
                {
                    "command": [
                        "assert (Out D B B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "29e7c133fc2f194d11e13a34ede8e04b15cc3d03"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D B D B) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "6a11dc8602fcf22b9c84c07b8ad24bc2f521e363"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D C D C) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "d1621300a94ff89b64adc48ebdb520b78b39d28c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C B C) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "ed142e8fbde6a84529bd4c830f851b89eb3843f0"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A D C B D C) by (conclude_def CongA ).",
                        "VernacExtend",
                        "bf808c863a5f9fb360165ec0c120c05bcb19a212"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B D C A D C) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "330ff4e3a17bc21c5e166e4827b1ab3d01a9bc56"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B D C D C B) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "bf893aebdc7cbd302299ee0e55ff2e99917c148d"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C D).",
                        "VernacExtend",
                        "1f400b0de914ae951dba021fa809d8f95a2c5c27"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A D) by (conclude_def Col ).",
                        "VernacExtend",
                        "55971acdfbebca58b64035f5e80e6c3d0509344a"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b7a3a74036f5bb861997341ca7a6a6e1bdd1390c"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "9b514e0053ba8f3c49b63d2480a07be55876115a"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C D B).",
                        "VernacExtend",
                        "cf62dc220ee82cf2e59493c0495b69a88acf922d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "2bbf76051c5820b160a3d5e27a58112ff361d8b6"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C D B B D C) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "49007711c396b9e5c47c1da68049d9bac87d4a06"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C D D C B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "6edea578a4bc6ca18488d9506cbb73bee1d82ccf"
                    ]
                },
                {
                    "command": [
                        "assert (LtA C D B D C B) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "8bfe0d1212f5dcca3525f217fa01e9fca2ad6672"
                    ]
                },
                {
                    "command": [
                        "assert (LtA C D B B C D) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "eddf419c36820d9dad7cad9b7db6b773c93e128f"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle B C D) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "40be11cd41aa12caddaf9318b260de2b0bc8d080"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B C B D) by (conclude proposition_19).",
                        "VernacExtend",
                        "11cb6299b45be9fa82bcf4149b98efbf44bbca84"
                    ]
                },
                {
                    "command": [
                        "assert (TG B A A C B C) by (conclude_def TG ).",
                        "VernacExtend",
                        "49876a023760a438642568611febe0cda5d44d71"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}