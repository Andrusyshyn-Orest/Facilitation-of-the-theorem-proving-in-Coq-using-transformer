{
    "filename": "Elements/OriginalProofs/lemma_betweennesspreserved.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_betweennotequal.",
            "VernacRequire",
            "860b485c7ef1d58f5629a959297727ab055051b5"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_localextension.",
            "VernacRequire",
            "697d8d6dc65c0d7757837f9e2841595d7c4c985b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_congruencesymmetric.",
            "VernacRequire",
            "0ca163db5031118e2bdec27bd816a4f0b73e306f"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_betweennesspreserved : forall A B C a b c, Cong A B a b -> Cong A C a c -> Cong B C b c -> BetS A B C -> BetS a b c.",
            "VernacStartTheoremProof",
            "8d0605e256796d273e5136d0aaca9f0f7801f8a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (neq A B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "729d99d00883cb65929e87e6a48ea0634ac9dc68"
        ],
        [
            "assert (neq a b) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "8231a11781e8e15bf73c20e5b39c119c3bcf4b22"
        ],
        [
            "assert (neq B C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
        ],
        [
            "assert (neq b c) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "de4702f6d876690f5704ad26002eb6be070701e2"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists d, (BetS a b d /\\ Cong b d b c)) by (conclude lemma_localextension);destruct Tf as [d];spliter.",
            "VernacExtend",
            "220d8f8a6ffddbea72802ce4c89b2d04c998e55a"
        ],
        [
            "assert (Cong b c b d) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "a558571156510052f1ba8438e382549888abf027"
        ],
        [
            "assert (Cong b c B C) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "7db20602c2997b3c9dbdac768acb48b5cc595baa"
        ],
        [
            "assert (Cong b d B C) by (conclude cn_congruencetransitive).",
            "VernacExtend",
            "f2f3ae777cb00d42f3d197111ebe5cf083d4b6e5"
        ],
        [
            "assert (Cong B C b d) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "ae4d4ef244cf1f4bad4b4adf97cb884629c658cc"
        ],
        [
            "assert (Cong C C c d) by (conclude axiom_5_line).",
            "VernacExtend",
            "cbe343a0f9104bdc9af9170b6cb03b942e7ccdc7"
        ],
        [
            "assert (Cong c d C C) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "0f5918672ae0c9ca4cd939627918526e59922da7"
        ],
        [
            "assert (~ neq c d).",
            "VernacExtend",
            "18d8fd29a88ff51228d4224dd43d2d8fc51cc177"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (neq C C) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "7fbd76713df18092e6259892800e6ae01f9c0609"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (BetS a b c) by (conclude cn_equalitysub).",
            "VernacExtend",
            "0bb153d84b686a68911d26f7b86a9280ae88f8d9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_betweennesspreserved",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "729d99d00883cb65929e87e6a48ea0634ac9dc68"
                    ]
                },
                {
                    "command": [
                        "assert (neq a b) by (conclude axiom_nocollapse).",
                        "VernacExtend",
                        "8231a11781e8e15bf73c20e5b39c119c3bcf4b22"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
                    ]
                },
                {
                    "command": [
                        "assert (neq b c) by (conclude axiom_nocollapse).",
                        "VernacExtend",
                        "de4702f6d876690f5704ad26002eb6be070701e2"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists d, (BetS a b d /\\ Cong b d b c)) by (conclude lemma_localextension);destruct Tf as [d];spliter.",
                        "VernacExtend",
                        "220d8f8a6ffddbea72802ce4c89b2d04c998e55a"
                    ]
                },
                {
                    "command": [
                        "assert (Cong b c b d) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "a558571156510052f1ba8438e382549888abf027"
                    ]
                },
                {
                    "command": [
                        "assert (Cong b c B C) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "7db20602c2997b3c9dbdac768acb48b5cc595baa"
                    ]
                },
                {
                    "command": [
                        "assert (Cong b d B C) by (conclude cn_congruencetransitive).",
                        "VernacExtend",
                        "f2f3ae777cb00d42f3d197111ebe5cf083d4b6e5"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C b d) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "ae4d4ef244cf1f4bad4b4adf97cb884629c658cc"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C C c d) by (conclude axiom_5_line).",
                        "VernacExtend",
                        "cbe343a0f9104bdc9af9170b6cb03b942e7ccdc7"
                    ]
                },
                {
                    "command": [
                        "assert (Cong c d C C) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "0f5918672ae0c9ca4cd939627918526e59922da7"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq c d).",
                        "VernacExtend",
                        "18d8fd29a88ff51228d4224dd43d2d8fc51cc177"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (neq C C) by (conclude axiom_nocollapse).",
                        "VernacExtend",
                        "7fbd76713df18092e6259892800e6ae01f9c0609"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (BetS a b c) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "0bb153d84b686a68911d26f7b86a9280ae88f8d9"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}