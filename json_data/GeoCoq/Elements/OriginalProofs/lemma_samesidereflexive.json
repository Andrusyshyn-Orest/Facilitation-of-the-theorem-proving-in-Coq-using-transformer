{
    "filename": "Elements/OriginalProofs/lemma_samesidereflexive.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_extension.",
            "VernacRequire",
            "7a395274ff58b809e27cefedbbe9b45804acec33"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "8fa44f4771a9528e103d9f2054b77606cde8225f"
        ],
        [
            "Lemma lemma_samesidereflexive : forall A B P, nCol A B P -> OS P P A B.",
            "VernacStartTheoremProof",
            "300638769e294f4d431d30daa1bc89a7bc4fd054"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (~ eq P A).",
            "VernacExtend",
            "81f8ee1c15d70865111596ee77870fb467cde2e7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B A) by (conclude_def Col ).",
            "VernacExtend",
            "7fe661a35be4052e3e351decefc3e023ccdb88ad"
        ],
        [
            "assert (Col A B P) by (conclude cn_equalitysub).",
            "VernacExtend",
            "8ee0183d19bbe760d9ca562312947c3f72701abc"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq A P) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "ee1575af782d866269c71616d6715b68f493812c"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists C, (BetS P A C /\\ Cong A C A P)) by (conclude lemma_extension);destruct Tf as [C];spliter.",
            "VernacExtend",
            "24e30cbfa47197880be3bbd7bc46724c1567ff71"
        ],
        [
            "assert (Col A B A) by (conclude_def Col ).",
            "VernacExtend",
            "7fe661a35be4052e3e351decefc3e023ccdb88ad"
        ],
        [
            "assert (OS P P A B) by (conclude_def OS ).",
            "VernacExtend",
            "c92390f72babed2400bf8d65e4a816843c4e1447"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_samesidereflexive",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq P A).",
                        "VernacExtend",
                        "81f8ee1c15d70865111596ee77870fb467cde2e7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B A) by (conclude_def Col ).",
                        "VernacExtend",
                        "7fe661a35be4052e3e351decefc3e023ccdb88ad"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B P) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "8ee0183d19bbe760d9ca562312947c3f72701abc"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq A P) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "ee1575af782d866269c71616d6715b68f493812c"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists C, (BetS P A C /\\ Cong A C A P)) by (conclude lemma_extension);destruct Tf as [C];spliter.",
                        "VernacExtend",
                        "24e30cbfa47197880be3bbd7bc46724c1567ff71"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B A) by (conclude_def Col ).",
                        "VernacExtend",
                        "7fe661a35be4052e3e351decefc3e023ccdb88ad"
                    ]
                },
                {
                    "command": [
                        "assert (OS P P A B) by (conclude_def OS ).",
                        "VernacExtend",
                        "c92390f72babed2400bf8d65e4a816843c4e1447"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}