{
    "filename": "Elements/OriginalProofs/lemma_erectedperpendicularunique.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_sameside2.",
            "VernacRequire",
            "ec9ef7cfe28e8891569cbae91e95a2b1b656aa9b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_10_12.",
            "VernacRequire",
            "1018b926b2fb028b36a964bae3e697e1d6533d01"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_07.",
            "VernacRequire",
            "e6ced42edb22bf5c2ae6e53e8396585a01858bc2"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_erectedperpendicularunique : forall A B C E, Per A B C -> Per A B E -> OS C E A B -> Out B C E.",
            "VernacStartTheoremProof",
            "cc8afd22bd511f5b634297b90c60d6fdbb8ee11d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists D, (BetS A B D /\\ Cong A B D B /\\ Cong A C D C /\\ neq B C)) by (conclude_def Per );destruct Tf as [D];spliter.",
            "VernacExtend",
            "21b3c47fc268fc66c06c7322b043d48b4fd5bff5"
        ],
        [
            "assert (neq B E) by (conclude_def Per ).",
            "VernacExtend",
            "fe2a255b18e76f184ed8b7166ad8199aa0f0c1dc"
        ],
        [
            "rename_H H;let Tf:=fresh in assert (Tf:exists H, (Out B E H /\\ Cong B H B C)) by (conclude lemma_layoff);destruct Tf as [H];spliter.",
            "VernacExtend",
            "cbda8bfbff948a6ddb03b0608b06c06d2e77561e"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col A B B) by (conclude_def Col ).",
            "VernacExtend",
            "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
        ],
        [
            "assert (OS C H A B) by (conclude lemma_sameside2).",
            "VernacExtend",
            "c07407f5be7599a0a4b0bb6326c0739bb688de28"
        ],
        [
            "assert (Per A B H) by (conclude lemma_8_3).",
            "VernacExtend",
            "d66c602dbe9236ac0f5650fe5e69a49af1687392"
        ],
        [
            "assert (Cong B C B H) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "b53ed442f2f98f8b4a1975e0dc36d665a65bb5e5"
        ],
        [
            "assert (Cong A C A H) by (conclude lemma_10_12).",
            "VernacExtend",
            "cd5538124fc822738fad8f2c311ce51a9853523d"
        ],
        [
            "assert (Cong C A H A) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "3b3c750d2f7581fb38f30cba47fc63724b5a4874"
        ],
        [
            "assert (Cong C B H B) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "f95cd2c4b8a068b1808604eb48edd562956cc482"
        ],
        [
            "assert (~ eq A B).",
            "VernacExtend",
            "4d33ecdae2e4081df5244e4a21a9919cae1a72e7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "assert (nCol A B C) by (conclude lemma_rightangleNC).",
            "VernacExtend",
            "f2cdc7cb572e9c7235b56c018ed5cae23c323020"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (eq C H) by (conclude proposition_07).",
            "VernacExtend",
            "580c184f8383954875482fb61cd55bf8195c96b9"
        ],
        [
            "assert (Out B E C) by (conclude cn_equalitysub).",
            "VernacExtend",
            "54dc91f87e1748431f9c8ccf451e07bcb397729e"
        ],
        [
            "assert (Out B C E) by (conclude lemma_ray5).",
            "VernacExtend",
            "77c83cea87b4048523d7fea13d9542f7a34ffe8d"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_erectedperpendicularunique",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists D, (BetS A B D /\\ Cong A B D B /\\ Cong A C D C /\\ neq B C)) by (conclude_def Per );destruct Tf as [D];spliter.",
                        "VernacExtend",
                        "21b3c47fc268fc66c06c7322b043d48b4fd5bff5"
                    ]
                },
                {
                    "command": [
                        "assert (neq B E) by (conclude_def Per ).",
                        "VernacExtend",
                        "fe2a255b18e76f184ed8b7166ad8199aa0f0c1dc"
                    ]
                },
                {
                    "command": [
                        "rename_H H;let Tf:=fresh in assert (Tf:exists H, (Out B E H /\\ Cong B H B C)) by (conclude lemma_layoff);destruct Tf as [H];spliter.",
                        "VernacExtend",
                        "cbda8bfbff948a6ddb03b0608b06c06d2e77561e"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
                    ]
                },
                {
                    "command": [
                        "assert (OS C H A B) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "c07407f5be7599a0a4b0bb6326c0739bb688de28"
                    ]
                },
                {
                    "command": [
                        "assert (Per A B H) by (conclude lemma_8_3).",
                        "VernacExtend",
                        "d66c602dbe9236ac0f5650fe5e69a49af1687392"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C B H) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "b53ed442f2f98f8b4a1975e0dc36d665a65bb5e5"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A C A H) by (conclude lemma_10_12).",
                        "VernacExtend",
                        "cd5538124fc822738fad8f2c311ce51a9853523d"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C A H A) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "3b3c750d2f7581fb38f30cba47fc63724b5a4874"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C B H B) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "f95cd2c4b8a068b1808604eb48edd562956cc482"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A B).",
                        "VernacExtend",
                        "4d33ecdae2e4081df5244e4a21a9919cae1a72e7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude lemma_rightangleNC).",
                        "VernacExtend",
                        "f2cdc7cb572e9c7235b56c018ed5cae23c323020"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (eq C H) by (conclude proposition_07).",
                        "VernacExtend",
                        "580c184f8383954875482fb61cd55bf8195c96b9"
                    ]
                },
                {
                    "command": [
                        "assert (Out B E C) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "54dc91f87e1748431f9c8ccf451e07bcb397729e"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C E) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "77c83cea87b4048523d7fea13d9542f7a34ffe8d"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}