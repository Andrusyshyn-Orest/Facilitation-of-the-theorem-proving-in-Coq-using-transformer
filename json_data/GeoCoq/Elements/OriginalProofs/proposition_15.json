{
    "filename": "Elements/OriginalProofs/proposition_15.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_ABCequalsCBA.",
            "VernacRequire",
            "b41d962fe0e15082ca850c781a7005b05625160b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_supplements.",
            "VernacRequire",
            "ee152459d464de3c6f66bbb3633963bf8c97a3a8"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_equalanglestransitive.",
            "VernacRequire",
            "3d8572a356790eabfa0de91c4f9a3be03ecdf47e"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_15 : forall A B C D E, BetS A E B -> BetS C E D -> nCol A E C -> CongA A E C D E B /\\ CongA C E B A E D.",
            "VernacStartTheoremProof",
            "1b4acd34a2ae60ba2bc6f2b6a39eb31abebabf7e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (neq E D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8953521083819802a3146a18d02061c64859cca"
        ],
        [
            "assert (neq D E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "442089e1669e0153e6cbac0113cb9338319b92ca"
        ],
        [
            "assert (neq E B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "5972c39a9c99ab9171d7dce35991133da206a502"
        ],
        [
            "assert (neq B E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "12177431d3546f142d5739c628b237f3f025d561"
        ],
        [
            "assert (~ Col B E D).",
            "VernacExtend",
            "9d7aa2e7b6af8b4759bb8be520a6b35595d22922"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A E B) by (conclude_def Col ).",
            "VernacExtend",
            "2d67e641a0325f1b3a6282335663f70ad1b86a2b"
        ],
        [
            "assert (Col B E A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "002b0fa977c05d5a6beb6123cfa6b54a2dffd052"
        ],
        [
            "assert (Col E A D) by (conclude lemma_collinear4).",
            "VernacExtend",
            "bd255751e1f4ebba321ab22bf4dce6246b907a4b"
        ],
        [
            "assert (Col C E D) by (conclude_def Col ).",
            "VernacExtend",
            "8a01062c755ecae17ba19a1b8e0d405b956dd7af"
        ],
        [
            "assert (Col D E C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d604da6a740e4872c1387c9c4f60c1286b3f1231"
        ],
        [
            "assert (Col D E A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f71c07fba9db837c2a58c3fa616055a3d0a9490b"
        ],
        [
            "assert (Col E C A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "5bf86102fa8107623d3f22f789ca391d2d039cf0"
        ],
        [
            "assert (Col A E C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6beaa6c6fc4fdd531ec9d395ea8940cc90269f42"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Out E D D) by (conclude lemma_ray4).",
            "VernacExtend",
            "18d59d1a0b47ec25f45723ea04cb7786932811e8"
        ],
        [
            "assert (Out E B B) by (conclude lemma_ray4).",
            "VernacExtend",
            "2e93d6a63274822965e96651d0bd56c68a331d31"
        ],
        [
            "assert (BetS B E A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "e1ec45eef27e11b2ea2d8c8bba4dbc231d17e9ac"
        ],
        [
            "assert (Supp B E D D A) by (conclude_def Supp ).",
            "VernacExtend",
            "26e6850144ec8b1eee75eb5d0929f8515832dcbc"
        ],
        [
            "assert (BetS D E C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "82af333281ca68c55d97fadf0ebff992b0580e33"
        ],
        [
            "assert (Supp D E B B C) by (conclude_def Supp ).",
            "VernacExtend",
            "64fb6d7e0b477b977f7d9447c820f4ef382f6a70"
        ],
        [
            "assert (~ Col A E D).",
            "VernacExtend",
            "c2855596038fa85e3c3c4d7dfaecc8dd2ee61de2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C E D) by (conclude_def Col ).",
            "VernacExtend",
            "8a01062c755ecae17ba19a1b8e0d405b956dd7af"
        ],
        [
            "assert (Col D E C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d604da6a740e4872c1387c9c4f60c1286b3f1231"
        ],
        [
            "assert (Col D E A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f71c07fba9db837c2a58c3fa616055a3d0a9490b"
        ],
        [
            "assert (Col E C A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "5bf86102fa8107623d3f22f789ca391d2d039cf0"
        ],
        [
            "assert (Col A E C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6beaa6c6fc4fdd531ec9d395ea8940cc90269f42"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B E D D E B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "edc2efef3a593b20daff27837b5702c48b4beb50"
        ],
        [
            "assert (CongA D E A B E C) by (conclude lemma_supplements).",
            "VernacExtend",
            "2d96aa1c0c2a08f1a92e767ebb8d84e381d18f0c"
        ],
        [
            "assert (~ Col B E C).",
            "VernacExtend",
            "6fd6b2a2b5b9200896e44ba15323684d88b3c75f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A E B) by (conclude_def Col ).",
            "VernacExtend",
            "2d67e641a0325f1b3a6282335663f70ad1b86a2b"
        ],
        [
            "assert (Col B E A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "002b0fa977c05d5a6beb6123cfa6b54a2dffd052"
        ],
        [
            "assert (Col E A C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "3a1ba0fba43505e2f38f864cec84bc82fae9997a"
        ],
        [
            "assert (Col A E C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6beaa6c6fc4fdd531ec9d395ea8940cc90269f42"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B E C C E B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "9ea2b4120b5769309441106952fe2c2b12efd9db"
        ],
        [
            "assert (CongA D E A C E B) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "5a8b1625ccb32a3867a4a04d62538b69e4403af8"
        ],
        [
            "assert (CongA A E D D E A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "da0f7bd3aef171d0658ce32d97720a3ffeb4fe7a"
        ],
        [
            "assert (CongA A E D C E B) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "3a556816245ab737fb87aa3e7c36ee8dc1eeef1e"
        ],
        [
            "assert (CongA C E B A E D) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "17a4f43e516d5937f12a6742d0670517dafb2d03"
        ],
        [
            "assert (~ eq E C).",
            "VernacExtend",
            "3e3c2b1747b546ba5b59e5db3b3b51a095d7e86d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B E C) by (conclude_def Col ).",
            "VernacExtend",
            "ec4b4f48c5e337bebe4bc3d5a0f41feca4805cdb"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out E C C) by (conclude lemma_ray4).",
            "VernacExtend",
            "69bbd7a0f07e437f207b6b0437743d0dcf5730f7"
        ],
        [
            "assert (Supp B E C C A) by (conclude_def Supp ).",
            "VernacExtend",
            "8ff13d88794a636ef41759a581c13ed8a94a77ee"
        ],
        [
            "assert (BetS C E D) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "af6acb18a805eaa93c111ed0e7945c7017907a9b"
        ],
        [
            "assert (Supp C E B B D) by (conclude_def Supp ).",
            "VernacExtend",
            "51c8cb9a2ed5cb317d787165e83454fa0805bb4f"
        ],
        [
            "assert (~ Col A E C).",
            "VernacExtend",
            "fd7d5ada30e3e6c1c51a8c3d56194b9b220e9475"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col D E C) by (conclude_def Col ).",
            "VernacExtend",
            "5d27bb6586fa2e379c20179bd4f82a345fcca2cf"
        ],
        [
            "assert (Col C E D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "8f90495ad64af2e9081665d40abb313998f2a214"
        ],
        [
            "assert (Col C E A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "46428c209b3c2ecabadbcb2314cb4e4d48502801"
        ],
        [
            "assert (neq C E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8cb02cc27caec779e42911044c466350ef0446a"
        ],
        [
            "assert (Col E D A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "d175e82b301f3b68f0cef18e851df511944c1047"
        ],
        [
            "assert (Col A E D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "506ede68879202758cef4e317654ad98179a0f6b"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B E C C E B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "9ea2b4120b5769309441106952fe2c2b12efd9db"
        ],
        [
            "assert (CongA C E A B E D) by (conclude lemma_supplements).",
            "VernacExtend",
            "251cfe1b14d8f4d1c822d17483a6a13d132bedbf"
        ],
        [
            "assert (~ Col B E D).",
            "VernacExtend",
            "9d7aa2e7b6af8b4759bb8be520a6b35595d22922"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A E B) by (conclude_def Col ).",
            "VernacExtend",
            "2d67e641a0325f1b3a6282335663f70ad1b86a2b"
        ],
        [
            "assert (Col B E A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "002b0fa977c05d5a6beb6123cfa6b54a2dffd052"
        ],
        [
            "assert (Col E A D) by (conclude lemma_collinear4).",
            "VernacExtend",
            "bd255751e1f4ebba321ab22bf4dce6246b907a4b"
        ],
        [
            "assert (Col A E D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "506ede68879202758cef4e317654ad98179a0f6b"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B E D D E B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "edc2efef3a593b20daff27837b5702c48b4beb50"
        ],
        [
            "assert (CongA C E A D E B) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "0f1f16e160872e0b5ed46ed9be15034f7d0b8da3"
        ],
        [
            "assert (CongA A E C C E A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "946bb1d738612d7f4428a0b716553fc5f762a384"
        ],
        [
            "assert (CongA A E C D E B) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "2c24e5e103fae05501c857cb17e79cc3dad8949b"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proposition_15a : forall A B C D E : Point, BetS A E B -> BetS C E D -> nCol A E C -> CongA A E C D E B.",
            "VernacStartTheoremProof",
            "6c4256eb216d7358136a508cb1344da80f8ae6e1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (proposition_15 A B C D E);assumption.",
            "VernacExtend",
            "20e0b3c7d6de7bfe522f8855e8ccbc530445d7ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proposition_15b : forall A B C D E : Point, BetS A E B -> BetS C E D -> nCol A E C -> CongA C E B A E D.",
            "VernacStartTheoremProof",
            "e191b1dea1e4c650abc6c333b8e90ba45c1aad0c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (proposition_15 A B C D E);assumption.",
            "VernacExtend",
            "20e0b3c7d6de7bfe522f8855e8ccbc530445d7ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_15",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (neq E D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8953521083819802a3146a18d02061c64859cca"
                    ]
                },
                {
                    "command": [
                        "assert (neq D E) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "442089e1669e0153e6cbac0113cb9338319b92ca"
                    ]
                },
                {
                    "command": [
                        "assert (neq E B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "5972c39a9c99ab9171d7dce35991133da206a502"
                    ]
                },
                {
                    "command": [
                        "assert (neq B E) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "12177431d3546f142d5739c628b237f3f025d561"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B E D).",
                        "VernacExtend",
                        "9d7aa2e7b6af8b4759bb8be520a6b35595d22922"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E B) by (conclude_def Col ).",
                        "VernacExtend",
                        "2d67e641a0325f1b3a6282335663f70ad1b86a2b"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "002b0fa977c05d5a6beb6123cfa6b54a2dffd052"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A D) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "bd255751e1f4ebba321ab22bf4dce6246b907a4b"
                    ]
                },
                {
                    "command": [
                        "assert (Col C E D) by (conclude_def Col ).",
                        "VernacExtend",
                        "8a01062c755ecae17ba19a1b8e0d405b956dd7af"
                    ]
                },
                {
                    "command": [
                        "assert (Col D E C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d604da6a740e4872c1387c9c4f60c1286b3f1231"
                    ]
                },
                {
                    "command": [
                        "assert (Col D E A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f71c07fba9db837c2a58c3fa616055a3d0a9490b"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "5bf86102fa8107623d3f22f789ca391d2d039cf0"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6beaa6c6fc4fdd531ec9d395ea8940cc90269f42"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Out E D D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "18d59d1a0b47ec25f45723ea04cb7786932811e8"
                    ]
                },
                {
                    "command": [
                        "assert (Out E B B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "2e93d6a63274822965e96651d0bd56c68a331d31"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B E A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "e1ec45eef27e11b2ea2d8c8bba4dbc231d17e9ac"
                    ]
                },
                {
                    "command": [
                        "assert (Supp B E D D A) by (conclude_def Supp ).",
                        "VernacExtend",
                        "26e6850144ec8b1eee75eb5d0929f8515832dcbc"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D E C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "82af333281ca68c55d97fadf0ebff992b0580e33"
                    ]
                },
                {
                    "command": [
                        "assert (Supp D E B B C) by (conclude_def Supp ).",
                        "VernacExtend",
                        "64fb6d7e0b477b977f7d9447c820f4ef382f6a70"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A E D).",
                        "VernacExtend",
                        "c2855596038fa85e3c3c4d7dfaecc8dd2ee61de2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C E D) by (conclude_def Col ).",
                        "VernacExtend",
                        "8a01062c755ecae17ba19a1b8e0d405b956dd7af"
                    ]
                },
                {
                    "command": [
                        "assert (Col D E C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d604da6a740e4872c1387c9c4f60c1286b3f1231"
                    ]
                },
                {
                    "command": [
                        "assert (Col D E A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f71c07fba9db837c2a58c3fa616055a3d0a9490b"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "5bf86102fa8107623d3f22f789ca391d2d039cf0"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6beaa6c6fc4fdd531ec9d395ea8940cc90269f42"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B E D D E B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "edc2efef3a593b20daff27837b5702c48b4beb50"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D E A B E C) by (conclude lemma_supplements).",
                        "VernacExtend",
                        "2d96aa1c0c2a08f1a92e767ebb8d84e381d18f0c"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B E C).",
                        "VernacExtend",
                        "6fd6b2a2b5b9200896e44ba15323684d88b3c75f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E B) by (conclude_def Col ).",
                        "VernacExtend",
                        "2d67e641a0325f1b3a6282335663f70ad1b86a2b"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "002b0fa977c05d5a6beb6123cfa6b54a2dffd052"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "3a1ba0fba43505e2f38f864cec84bc82fae9997a"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6beaa6c6fc4fdd531ec9d395ea8940cc90269f42"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B E C C E B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "9ea2b4120b5769309441106952fe2c2b12efd9db"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D E A C E B) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "5a8b1625ccb32a3867a4a04d62538b69e4403af8"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A E D D E A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "da0f7bd3aef171d0658ce32d97720a3ffeb4fe7a"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A E D C E B) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "3a556816245ab737fb87aa3e7c36ee8dc1eeef1e"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C E B A E D) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "17a4f43e516d5937f12a6742d0670517dafb2d03"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq E C).",
                        "VernacExtend",
                        "3e3c2b1747b546ba5b59e5db3b3b51a095d7e86d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E C) by (conclude_def Col ).",
                        "VernacExtend",
                        "ec4b4f48c5e337bebe4bc3d5a0f41feca4805cdb"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out E C C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "69bbd7a0f07e437f207b6b0437743d0dcf5730f7"
                    ]
                },
                {
                    "command": [
                        "assert (Supp B E C C A) by (conclude_def Supp ).",
                        "VernacExtend",
                        "8ff13d88794a636ef41759a581c13ed8a94a77ee"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C E D) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "af6acb18a805eaa93c111ed0e7945c7017907a9b"
                    ]
                },
                {
                    "command": [
                        "assert (Supp C E B B D) by (conclude_def Supp ).",
                        "VernacExtend",
                        "51c8cb9a2ed5cb317d787165e83454fa0805bb4f"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A E C).",
                        "VernacExtend",
                        "fd7d5ada30e3e6c1c51a8c3d56194b9b220e9475"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col D E C) by (conclude_def Col ).",
                        "VernacExtend",
                        "5d27bb6586fa2e379c20179bd4f82a345fcca2cf"
                    ]
                },
                {
                    "command": [
                        "assert (Col C E D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "8f90495ad64af2e9081665d40abb313998f2a214"
                    ]
                },
                {
                    "command": [
                        "assert (Col C E A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "46428c209b3c2ecabadbcb2314cb4e4d48502801"
                    ]
                },
                {
                    "command": [
                        "assert (neq C E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8cb02cc27caec779e42911044c466350ef0446a"
                    ]
                },
                {
                    "command": [
                        "assert (Col E D A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "d175e82b301f3b68f0cef18e851df511944c1047"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "506ede68879202758cef4e317654ad98179a0f6b"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B E C C E B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "9ea2b4120b5769309441106952fe2c2b12efd9db"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C E A B E D) by (conclude lemma_supplements).",
                        "VernacExtend",
                        "251cfe1b14d8f4d1c822d17483a6a13d132bedbf"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B E D).",
                        "VernacExtend",
                        "9d7aa2e7b6af8b4759bb8be520a6b35595d22922"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E B) by (conclude_def Col ).",
                        "VernacExtend",
                        "2d67e641a0325f1b3a6282335663f70ad1b86a2b"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "002b0fa977c05d5a6beb6123cfa6b54a2dffd052"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A D) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "bd255751e1f4ebba321ab22bf4dce6246b907a4b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "506ede68879202758cef4e317654ad98179a0f6b"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B E D D E B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "edc2efef3a593b20daff27837b5702c48b4beb50"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C E A D E B) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "0f1f16e160872e0b5ed46ed9be15034f7d0b8da3"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A E C C E A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "946bb1d738612d7f4428a0b716553fc5f762a384"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A E C D E B) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "2c24e5e103fae05501c857cb17e79cc3dad8949b"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proposition_15a",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (proposition_15 A B C D E);assumption.",
                        "VernacExtend",
                        "20e0b3c7d6de7bfe522f8855e8ccbc530445d7ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proposition_15b",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (proposition_15 A B C D E);assumption.",
                        "VernacExtend",
                        "20e0b3c7d6de7bfe522f8855e8ccbc530445d7ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}