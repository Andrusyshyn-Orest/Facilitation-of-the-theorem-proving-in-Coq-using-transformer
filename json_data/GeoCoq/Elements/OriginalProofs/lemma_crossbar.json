{
    "filename": "Elements/OriginalProofs/lemma_crossbar.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_raystrict.",
            "VernacRequire",
            "60702c48b5c4bad75a242635a560fca35de085ac"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_collinear4.",
            "VernacRequire",
            "31c94163fec0c65e806705b552c4ddb0c11450a8"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthancongruence.",
            "VernacRequire",
            "00b9d54a90df13f5b7010ae28f399946381e76c8"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_crossbar : forall A B C E U V, Triangle A B C -> BetS A E C -> Out B A U -> Out B C V -> exists X, Out B E X /\\ BetS U X V.",
            "VernacStartTheoremProof",
            "c45ac9ef30d15337fd28cb00cd1c74a111e32489"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (~ eq B E).",
            "VernacExtend",
            "6ed1b09483a0cb88f77cb8717363a53289ae12bf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (~ BetS A B C).",
            "VernacExtend",
            "953b9099df4733f50503f750228b5f8d5c5ce068"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (BetS A B C) by (conclude cn_equalitysub).",
            "VernacExtend",
            "5869026fbe9591c129a81775f276dfdd706f5b1f"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq B A).",
            "VernacExtend",
            "7c5358479e6131dbd5aff685ef4c86dbe092625e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq A B) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "e091317cf46e5f53a40c1c49c9759b4c4f76a3cf"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq B C).",
            "VernacExtend",
            "2a4c174d5fcfb07079559ff9be73565058be28f2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq B U) by (conclude lemma_raystrict).",
            "VernacExtend",
            "98b50bf7da53081418f0990532b4f87717927061"
        ],
        [
            "assert (neq B V) by (conclude lemma_raystrict).",
            "VernacExtend",
            "e8c8d24d03bc6fdd9a739ab2c9a55cb1b03526da"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P, (BetS B A P /\\ Cong A P B U)) by (conclude lemma_extension);destruct Tf as [P];spliter.",
            "VernacExtend",
            "8aaeb516282282bf0cf09cf79e3708e1388e69d8"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists Q, (BetS B C Q /\\ Cong C Q B V)) by (conclude lemma_extension);destruct Tf as [Q];spliter.",
            "VernacExtend",
            "934efe6f43fb2334a58935978dd11bf7c9c7919d"
        ],
        [
            "assert (~ Col B Q A).",
            "VernacExtend",
            "21fabfdc1e6f556aa05ed85d52ee03ca1d8ac38a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col Q B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f1f16b56259dbfc9a274803df004922121443e18"
        ],
        [
            "assert (Col B C Q) by (conclude_def Col ).",
            "VernacExtend",
            "024339d95d3c154fc524efea72192c9d1e52db0d"
        ],
        [
            "assert (Col Q B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "99e1c5baa5dbd4491211c4404241e86e391b6e55"
        ],
        [
            "assert (neq B Q) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "e0366e2454a0e7fd2438d9c6382eb99b5574c97b"
        ],
        [
            "assert (neq Q B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "fd740defa466f62735a148da0ddb3f3a282c087c"
        ],
        [
            "assert (Col B A C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS A F Q /\\ BetS B E F)) by (conclude postulate_Pasch_outer);destruct Tf as [F];spliter.",
            "VernacExtend",
            "e5ccecded008e0e622192cb865495bc07d7b78da"
        ],
        [
            "assert (BetS Q F A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "048400751ac8e0b427f7660aca66aa3f96fe68b9"
        ],
        [
            "assert (~ Col B P Q).",
            "VernacExtend",
            "aa8b32203034a4ee6058ee8ccc53ebb9bece4b73"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col P B Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "475d61a1bf29a77ea9000c32ca6aefb787f9c457"
        ],
        [
            "assert (Col B A P) by (conclude_def Col ).",
            "VernacExtend",
            "96160733ffddcce1d1b303fe7092db0496b40e17"
        ],
        [
            "assert (Col P B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6353c697fe9fd039a034ef0345f0cb0f6f3d35f7"
        ],
        [
            "assert (neq B P) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "24dc2ea610fba1e7cbd71db90a85574341f5168c"
        ],
        [
            "assert (neq P B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "914acc6bf3223acbf79d9ba42db2fd5b2655c3a4"
        ],
        [
            "assert (Col B Q A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f9519919bcb50ec3fd194b08a0cc750e475150b6"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists W, (BetS Q W P /\\ BetS B F W)) by (conclude postulate_Pasch_outer);destruct Tf as [W];spliter.",
            "VernacExtend",
            "439c54600b7370f41a57b0a9c801ca9a8a57503c"
        ],
        [
            "assert (BetS B E W) by (conclude lemma_3_6b).",
            "VernacExtend",
            "56d245ed20521ca6e172f32d3ce45c68b66926ad"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists J, (BetS J B U /\\ BetS J B A)) by (conclude_def Out );destruct Tf as [J];spliter.",
            "VernacExtend",
            "23b6bb1b465e1122d4885d8ca03ca7dca081818b"
        ],
        [
            "assert (Cong A P P A) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "f5a841f800c26177041ce278d71162b11adc81bf"
        ],
        [
            "assert (Cong B U A P) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "4ffa0be901a0c1bd8ab86144b1522fc32c02e9b5"
        ],
        [
            "assert (Cong B U P A) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "c5f1067cf3b3ce4398a343e15497141872c87257"
        ],
        [
            "assert (Cong P A B U) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "08e09177e2ab887d613eb6cc45588d36b628202e"
        ],
        [
            "assert (BetS P A B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "65b3f67103aa24dd98526260e16d2d8f09495497"
        ],
        [
            "assert (Lt B U P B) by (conclude_def Lt ).",
            "VernacExtend",
            "374d3ab8648422dc3d28b554d73f26368c8d5e1f"
        ],
        [
            "assert (Cong P B B P) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "23ce9275648cbae402916969ec90876102ef49af"
        ],
        [
            "assert (Lt B U B P) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "74d1aceda517c4434843f69bf11e1fb98da275d8"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists S, (BetS B S P /\\ Cong B S B U)) by (conclude_def Lt );destruct Tf as [S];spliter.",
            "VernacExtend",
            "0505b86a1455ec9af3561bd3ca60fae146b4fa35"
        ],
        [
            "assert (BetS J B P) by (conclude lemma_3_7b).",
            "VernacExtend",
            "6cbefa5c919b00c3e0b1dfd382270ed5033ee368"
        ],
        [
            "assert (BetS J B S) by (conclude axiom_innertransitivity).",
            "VernacExtend",
            "59e026123eaa0ee61abc4efa5d3ad2919dd4bdf5"
        ],
        [
            "assert (eq S U) by (conclude lemma_extensionunique).",
            "VernacExtend",
            "ae7b550c5a40c0acc036ae5fe3f9da35eef8534b"
        ],
        [
            "assert (BetS B U P) by (conclude cn_equalitysub).",
            "VernacExtend",
            "53270a37c9abb06f6b6fae86ae89c1b9c2d7c061"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists K, (BetS K B V /\\ BetS K B C)) by (conclude_def Out );destruct Tf as [K];spliter.",
            "VernacExtend",
            "c36688fe42527297ee87f4f2b8687e68deaa9a6e"
        ],
        [
            "assert (Cong B V C Q) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "3ebfe6401b06c380bbbf56e553a7939c8a24b972"
        ],
        [
            "assert (Cong C Q Q C) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "fa710edee884e8b9b5d9364040340bbebbfd1d94"
        ],
        [
            "assert (Cong B V Q C) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "ac6429948a302516d0c2c22171276ee85b852cb7"
        ],
        [
            "assert (Cong Q C B V) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "a75f5c95e656086eeea5b92b88a09aeb4f52bba8"
        ],
        [
            "assert (BetS Q C B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "334089433c31848757c018d51ee111383990b98a"
        ],
        [
            "assert (Lt B V Q B) by (conclude_def Lt ).",
            "VernacExtend",
            "25071471c585e4bd949d2a97844cb012c8e448aa"
        ],
        [
            "assert (Cong Q B B Q) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "3eb82fdbd52e9c6f2fe730f3e4f8c75c8ee1876e"
        ],
        [
            "assert (Lt B V B Q) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "d014c035186c786d652528fd1490403e26431b72"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists R, (BetS B R Q /\\ Cong B R B V)) by (conclude_def Lt );destruct Tf as [R];spliter.",
            "VernacExtend",
            "bfdd0e1e74c63160daccba38e60ed52f5eaa698a"
        ],
        [
            "assert (BetS K B Q) by (conclude lemma_3_7b).",
            "VernacExtend",
            "4db5148d004015fe86334a74c5e4d9964090f5cf"
        ],
        [
            "assert (BetS K B R) by (conclude axiom_innertransitivity).",
            "VernacExtend",
            "6eb7ea77c9b02a9e5891924e60daaf4655a297a7"
        ],
        [
            "assert (eq R V) by (conclude lemma_extensionunique).",
            "VernacExtend",
            "070d7caa2c74ce341420b353b1a5772797202338"
        ],
        [
            "assert (BetS B V Q) by (conclude cn_equalitysub).",
            "VernacExtend",
            "fc292963cff4bde5ef76e06422bec8eb5196f5d3"
        ],
        [
            "assert (~ Col Q P B).",
            "VernacExtend",
            "ad5d1e0b0576a55f0b27c59829af04b1e6ade735"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B P Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "bd5beb716fb1c163339828928336b80585f86f07"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS Q M U /\\ BetS B M W)) by (conclude postulate_Pasch_inner);destruct Tf as [M];spliter.",
            "VernacExtend",
            "86ad81715c60b8857028565538faca4f4d878073"
        ],
        [
            "assert (BetS U M Q) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "5704dcace90eb38e1c47089401ae13b8015c05e3"
        ],
        [
            "assert (~ Col U Q B).",
            "VernacExtend",
            "e82a49dd8c30d425452667c755e998ec8060ac56"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B U P) by (conclude_def Col ).",
            "VernacExtend",
            "9de59d8fe297756009df6f7a8dbf4d0a9e17f67f"
        ],
        [
            "assert (Col B U Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1454fab8d12daad4bb668c06f7235eac2dfe7bab"
        ],
        [
            "assert (neq B U) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "781e896c69e052fc60cf5de959df4ac039828cf7"
        ],
        [
            "assert (Col U B P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "692d57553db0c8b15472a9b57740e2eaa3fff276"
        ],
        [
            "assert (Col U B Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4050f699a8c2fda5cb77ee2931e490d3568951b8"
        ],
        [
            "assert (neq U B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "643bb94007e882e27155ec9f87703b6846430dab"
        ],
        [
            "assert (Col B P Q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "5f5d54f6e2d8acb39f4d53d2229afc3af1f4373e"
        ],
        [
            "assert (Col Q P B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "8eea25ae83bf44fc2fbc9600aaa1279c6924ce6c"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rename_H H;let Tf:=fresh in assert (Tf:exists H, (BetS U H V /\\ BetS B H M)) by (conclude postulate_Pasch_inner);destruct Tf as [H];spliter.",
            "VernacExtend",
            "4e266300bf44dd4058a75025f66d578581a0f5a5"
        ],
        [
            "assert (~ eq E B).",
            "VernacExtend",
            "9e2c9b3c7fa0be1f5cea63d65682b6d5f7d480c2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq B E) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "5d3fcf800248c27614128779e7b6866ef203184c"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists N, (BetS E B N /\\ Cong B N B E)) by (conclude lemma_extension);destruct Tf as [N];spliter.",
            "VernacExtend",
            "510d2981d36add5f306a96a2664b782d4f94be61"
        ],
        [
            "assert (BetS N B E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "5fe39d7e139b1d0a6971dcc70140f33db77a1d34"
        ],
        [
            "assert (BetS B H W) by (conclude lemma_3_6b).",
            "VernacExtend",
            "affd41a897c7eac3bd1dc8c0e8ad3354459ff6a8"
        ],
        [
            "assert (BetS N B W) by (conclude lemma_3_7b).",
            "VernacExtend",
            "5938aadc150ca5e2c2bbe11e27e8dc5548c17991"
        ],
        [
            "assert (BetS N B H) by (conclude axiom_innertransitivity).",
            "VernacExtend",
            "7e3551bfc998e904c7d0ab99e0abcc16275efffc"
        ],
        [
            "assert (Out B E H) by (conclude_def Out ).",
            "VernacExtend",
            "efc0a769277083dde3ad2a4efbf29e1c544fc74b"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_crossbar",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B E).",
                        "VernacExtend",
                        "6ed1b09483a0cb88f77cb8717363a53289ae12bf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (~ BetS A B C).",
                        "VernacExtend",
                        "953b9099df4733f50503f750228b5f8d5c5ce068"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A B C) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "5869026fbe9591c129a81775f276dfdd706f5b1f"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B A).",
                        "VernacExtend",
                        "7c5358479e6131dbd5aff685ef4c86dbe092625e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq A B) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "e091317cf46e5f53a40c1c49c9759b4c4f76a3cf"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B C).",
                        "VernacExtend",
                        "2a4c174d5fcfb07079559ff9be73565058be28f2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq B U) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "98b50bf7da53081418f0990532b4f87717927061"
                    ]
                },
                {
                    "command": [
                        "assert (neq B V) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "e8c8d24d03bc6fdd9a739ab2c9a55cb1b03526da"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists P, (BetS B A P /\\ Cong A P B U)) by (conclude lemma_extension);destruct Tf as [P];spliter.",
                        "VernacExtend",
                        "8aaeb516282282bf0cf09cf79e3708e1388e69d8"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists Q, (BetS B C Q /\\ Cong C Q B V)) by (conclude lemma_extension);destruct Tf as [Q];spliter.",
                        "VernacExtend",
                        "934efe6f43fb2334a58935978dd11bf7c9c7919d"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B Q A).",
                        "VernacExtend",
                        "21fabfdc1e6f556aa05ed85d52ee03ca1d8ac38a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f1f16b56259dbfc9a274803df004922121443e18"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C Q) by (conclude_def Col ).",
                        "VernacExtend",
                        "024339d95d3c154fc524efea72192c9d1e52db0d"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "99e1c5baa5dbd4491211c4404241e86e391b6e55"
                    ]
                },
                {
                    "command": [
                        "assert (neq B Q) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "e0366e2454a0e7fd2438d9c6382eb99b5574c97b"
                    ]
                },
                {
                    "command": [
                        "assert (neq Q B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "fd740defa466f62735a148da0ddb3f3a282c087c"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS A F Q /\\ BetS B E F)) by (conclude postulate_Pasch_outer);destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "e5ccecded008e0e622192cb865495bc07d7b78da"
                    ]
                },
                {
                    "command": [
                        "assert (BetS Q F A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "048400751ac8e0b427f7660aca66aa3f96fe68b9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B P Q).",
                        "VernacExtend",
                        "aa8b32203034a4ee6058ee8ccc53ebb9bece4b73"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col P B Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "475d61a1bf29a77ea9000c32ca6aefb787f9c457"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A P) by (conclude_def Col ).",
                        "VernacExtend",
                        "96160733ffddcce1d1b303fe7092db0496b40e17"
                    ]
                },
                {
                    "command": [
                        "assert (Col P B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6353c697fe9fd039a034ef0345f0cb0f6f3d35f7"
                    ]
                },
                {
                    "command": [
                        "assert (neq B P) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "24dc2ea610fba1e7cbd71db90a85574341f5168c"
                    ]
                },
                {
                    "command": [
                        "assert (neq P B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "914acc6bf3223acbf79d9ba42db2fd5b2655c3a4"
                    ]
                },
                {
                    "command": [
                        "assert (Col B Q A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f9519919bcb50ec3fd194b08a0cc750e475150b6"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists W, (BetS Q W P /\\ BetS B F W)) by (conclude postulate_Pasch_outer);destruct Tf as [W];spliter.",
                        "VernacExtend",
                        "439c54600b7370f41a57b0a9c801ca9a8a57503c"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B E W) by (conclude lemma_3_6b).",
                        "VernacExtend",
                        "56d245ed20521ca6e172f32d3ce45c68b66926ad"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists J, (BetS J B U /\\ BetS J B A)) by (conclude_def Out );destruct Tf as [J];spliter.",
                        "VernacExtend",
                        "23b6bb1b465e1122d4885d8ca03ca7dca081818b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A P P A) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "f5a841f800c26177041ce278d71162b11adc81bf"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B U A P) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "4ffa0be901a0c1bd8ab86144b1522fc32c02e9b5"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B U P A) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "c5f1067cf3b3ce4398a343e15497141872c87257"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P A B U) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "08e09177e2ab887d613eb6cc45588d36b628202e"
                    ]
                },
                {
                    "command": [
                        "assert (BetS P A B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "65b3f67103aa24dd98526260e16d2d8f09495497"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B U P B) by (conclude_def Lt ).",
                        "VernacExtend",
                        "374d3ab8648422dc3d28b554d73f26368c8d5e1f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P B B P) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "23ce9275648cbae402916969ec90876102ef49af"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B U B P) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "74d1aceda517c4434843f69bf11e1fb98da275d8"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists S, (BetS B S P /\\ Cong B S B U)) by (conclude_def Lt );destruct Tf as [S];spliter.",
                        "VernacExtend",
                        "0505b86a1455ec9af3561bd3ca60fae146b4fa35"
                    ]
                },
                {
                    "command": [
                        "assert (BetS J B P) by (conclude lemma_3_7b).",
                        "VernacExtend",
                        "6cbefa5c919b00c3e0b1dfd382270ed5033ee368"
                    ]
                },
                {
                    "command": [
                        "assert (BetS J B S) by (conclude axiom_innertransitivity).",
                        "VernacExtend",
                        "59e026123eaa0ee61abc4efa5d3ad2919dd4bdf5"
                    ]
                },
                {
                    "command": [
                        "assert (eq S U) by (conclude lemma_extensionunique).",
                        "VernacExtend",
                        "ae7b550c5a40c0acc036ae5fe3f9da35eef8534b"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B U P) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "53270a37c9abb06f6b6fae86ae89c1b9c2d7c061"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists K, (BetS K B V /\\ BetS K B C)) by (conclude_def Out );destruct Tf as [K];spliter.",
                        "VernacExtend",
                        "c36688fe42527297ee87f4f2b8687e68deaa9a6e"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B V C Q) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "3ebfe6401b06c380bbbf56e553a7939c8a24b972"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C Q Q C) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "fa710edee884e8b9b5d9364040340bbebbfd1d94"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B V Q C) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "ac6429948a302516d0c2c22171276ee85b852cb7"
                    ]
                },
                {
                    "command": [
                        "assert (Cong Q C B V) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "a75f5c95e656086eeea5b92b88a09aeb4f52bba8"
                    ]
                },
                {
                    "command": [
                        "assert (BetS Q C B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "334089433c31848757c018d51ee111383990b98a"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B V Q B) by (conclude_def Lt ).",
                        "VernacExtend",
                        "25071471c585e4bd949d2a97844cb012c8e448aa"
                    ]
                },
                {
                    "command": [
                        "assert (Cong Q B B Q) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "3eb82fdbd52e9c6f2fe730f3e4f8c75c8ee1876e"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B V B Q) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "d014c035186c786d652528fd1490403e26431b72"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists R, (BetS B R Q /\\ Cong B R B V)) by (conclude_def Lt );destruct Tf as [R];spliter.",
                        "VernacExtend",
                        "bfdd0e1e74c63160daccba38e60ed52f5eaa698a"
                    ]
                },
                {
                    "command": [
                        "assert (BetS K B Q) by (conclude lemma_3_7b).",
                        "VernacExtend",
                        "4db5148d004015fe86334a74c5e4d9964090f5cf"
                    ]
                },
                {
                    "command": [
                        "assert (BetS K B R) by (conclude axiom_innertransitivity).",
                        "VernacExtend",
                        "6eb7ea77c9b02a9e5891924e60daaf4655a297a7"
                    ]
                },
                {
                    "command": [
                        "assert (eq R V) by (conclude lemma_extensionunique).",
                        "VernacExtend",
                        "070d7caa2c74ce341420b353b1a5772797202338"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B V Q) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "fc292963cff4bde5ef76e06422bec8eb5196f5d3"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col Q P B).",
                        "VernacExtend",
                        "ad5d1e0b0576a55f0b27c59829af04b1e6ade735"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B P Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "bd5beb716fb1c163339828928336b80585f86f07"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS Q M U /\\ BetS B M W)) by (conclude postulate_Pasch_inner);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "86ad81715c60b8857028565538faca4f4d878073"
                    ]
                },
                {
                    "command": [
                        "assert (BetS U M Q) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "5704dcace90eb38e1c47089401ae13b8015c05e3"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col U Q B).",
                        "VernacExtend",
                        "e82a49dd8c30d425452667c755e998ec8060ac56"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B U P) by (conclude_def Col ).",
                        "VernacExtend",
                        "9de59d8fe297756009df6f7a8dbf4d0a9e17f67f"
                    ]
                },
                {
                    "command": [
                        "assert (Col B U Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1454fab8d12daad4bb668c06f7235eac2dfe7bab"
                    ]
                },
                {
                    "command": [
                        "assert (neq B U) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "781e896c69e052fc60cf5de959df4ac039828cf7"
                    ]
                },
                {
                    "command": [
                        "assert (Col U B P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "692d57553db0c8b15472a9b57740e2eaa3fff276"
                    ]
                },
                {
                    "command": [
                        "assert (Col U B Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4050f699a8c2fda5cb77ee2931e490d3568951b8"
                    ]
                },
                {
                    "command": [
                        "assert (neq U B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "643bb94007e882e27155ec9f87703b6846430dab"
                    ]
                },
                {
                    "command": [
                        "assert (Col B P Q) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "5f5d54f6e2d8acb39f4d53d2229afc3af1f4373e"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q P B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "8eea25ae83bf44fc2fbc9600aaa1279c6924ce6c"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rename_H H;let Tf:=fresh in assert (Tf:exists H, (BetS U H V /\\ BetS B H M)) by (conclude postulate_Pasch_inner);destruct Tf as [H];spliter.",
                        "VernacExtend",
                        "4e266300bf44dd4058a75025f66d578581a0f5a5"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq E B).",
                        "VernacExtend",
                        "9e2c9b3c7fa0be1f5cea63d65682b6d5f7d480c2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq B E) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "5d3fcf800248c27614128779e7b6866ef203184c"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists N, (BetS E B N /\\ Cong B N B E)) by (conclude lemma_extension);destruct Tf as [N];spliter.",
                        "VernacExtend",
                        "510d2981d36add5f306a96a2664b782d4f94be61"
                    ]
                },
                {
                    "command": [
                        "assert (BetS N B E) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "5fe39d7e139b1d0a6971dcc70140f33db77a1d34"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B H W) by (conclude lemma_3_6b).",
                        "VernacExtend",
                        "affd41a897c7eac3bd1dc8c0e8ad3354459ff6a8"
                    ]
                },
                {
                    "command": [
                        "assert (BetS N B W) by (conclude lemma_3_7b).",
                        "VernacExtend",
                        "5938aadc150ca5e2c2bbe11e27e8dc5548c17991"
                    ]
                },
                {
                    "command": [
                        "assert (BetS N B H) by (conclude axiom_innertransitivity).",
                        "VernacExtend",
                        "7e3551bfc998e904c7d0ab99e0abcc16275efffc"
                    ]
                },
                {
                    "command": [
                        "assert (Out B E H) by (conclude_def Out ).",
                        "VernacExtend",
                        "efc0a769277083dde3ad2a4efbf29e1c544fc74b"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}