{
    "filename": "Elements/OriginalProofs/proposition_40.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_31short.",
            "VernacRequire",
            "8cb24dbaea86dc0a345e40b873bf46e78f5b6725"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_38.",
            "VernacRequire",
            "977e4b65ab56d656d0815d9dc54ea089eadb3a40"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_39.",
            "VernacRequire",
            "90c0d71eb6648b65018df1fd906911e2b4ab60a2"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:area}.",
            "VernacContext",
            "81ffa005c6d27ee71f963c56f9847264efce50bb"
        ],
        [
            "Lemma proposition_40 : forall A B C D E H, Cong B C H E -> ET A B C D H E -> Triangle A B C -> Triangle D H E -> Col B C H -> Col B C E -> OS A D B C -> neq A D -> Par A D B C.",
            "VernacStartTheoremProof",
            "90cdddd4533850f17b2ae4fc0dd9981ffa2afa9c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (nCol D H E) by (conclude_def Triangle ).",
            "VernacExtend",
            "371031f5defd7f350c0662c73636af79c117317e"
        ],
        [
            "assert (neq H E) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "d51bea137398549d4ada1c8a5e8b1cd19f02d650"
        ],
        [
            "assert (neq E H) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "3b0a6b4692dfc01daef8a287435bfdef3067045f"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists R, (BetS E H R /\\ Cong H R E H)) by (conclude lemma_extension);destruct Tf as [R];spliter.",
            "VernacExtend",
            "a1caa9cdfe8f84dd2f60ff85ecd7808da7b96ce9"
        ],
        [
            "assert (BetS R H E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "3b04e4071c8aa654ba27573311947876c8eaa848"
        ],
        [
            "assert (nCol H E D) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "04624ef8a631d57ad51040757ac3ff73aa9ec4d3"
        ],
        [
            "assert (Col R H E) by (conclude_def Col ).",
            "VernacExtend",
            "a8e9175f7a0646453001b71fc609277778e93a01"
        ],
        [
            "assert (Col H E R) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ecc70e9783353fb4676796b4fe7c4463fc752359"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (Col H E E) by (conclude_def Col ).",
            "VernacExtend",
            "b0fb239e342e76139cb8eb98528e173603015197"
        ],
        [
            "assert (neq R E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "2eb98e078c4cb8b1c88dd80de1e89147ec0ef00e"
        ],
        [
            "assert (nCol R E D) by (conclude lemma_NChelper).",
            "VernacExtend",
            "c5a5fbbecbf0b91fb4b80b9698f68b369dcd5a4d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P Q M, (BetS P D Q /\\ CongA P D H D H E /\\ Par P Q R E /\\ BetS P M E /\\ BetS D M H)) by (conclude proposition_31short);destruct Tf as [P[Q[M]]];spliter.",
            "VernacExtend",
            "b5d7336e562b6cbbb9c686a57d9e9006a8263788"
        ],
        [
            "assert (Col R E H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b146da596622e2eebe4f69ccc95946779af485c0"
        ],
        [
            "assert (Par P Q H E) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "a68323d46fef7c818b6988c889f3a9c026b5e5fa"
        ],
        [
            "assert (Col P D Q) by (conclude_def Col ).",
            "VernacExtend",
            "e5b41d926fd06371389e01509bf59b94672fb17a"
        ],
        [
            "assert (Col P Q D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5e4b6c33dcab573fb0543d7abd94a291a6995962"
        ],
        [
            "assert (Cong H E B C) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "7656e50aef6b15ad22b4a8bb277b32d427ea1c9e"
        ],
        [
            "assert (Col C B H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c1765a1df8530c57c594388f5249e7337b42f1b6"
        ],
        [
            "assert (Col C B E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "8b983e606f0a50e91b36d3dd2986921af5a6c37b"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (neq B C) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "0bb577205eb42d8f9fe7d193058e6055102c5a78"
        ],
        [
            "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f6de27d2290b224fed0d2ab5b24228893a410ec8"
        ],
        [
            "assert (Col B H E) by (conclude lemma_collinear4).",
            "VernacExtend",
            "9dfb2a2c83ef7e2be360fbdab3b42b8df364f561"
        ],
        [
            "assert (Col H E B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1149b8a0e9ff9983bda6770476c3d036ba467348"
        ],
        [
            "assert (Col B C H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9317c84ce6189bec6373489abf29fe4a0ffc14a1"
        ],
        [
            "assert (Col B C E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f8b4c03747eb11dc59b3f950807bc383f63bb430"
        ],
        [
            "assert (Col C H E) by (conclude lemma_collinear4).",
            "VernacExtend",
            "51b0ce84b7c040e40250f2fe774e04c2eba71942"
        ],
        [
            "assert (Col H E C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c3ccb60fe5ca5b003bcdc0dd5a7d1cfffd4eeef2"
        ],
        [
            "assert (ET D H E D B C) by (conclude proposition_38).",
            "VernacExtend",
            "0ef9cb6e691683bffc19fde8f756add3b19f790c"
        ],
        [
            "assert (ET A B C D B C) by (conclude axiom_ETtransitive).",
            "VernacExtend",
            "86a20845641e8618dd7b2e3b5ea219347318ae72"
        ],
        [
            "assert (nCol H E D) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "04624ef8a631d57ad51040757ac3ff73aa9ec4d3"
        ],
        [
            "assert (nCol B C D) by (conclude lemma_NChelper).",
            "VernacExtend",
            "5f6955510438967422d641465fec920c44905ab3"
        ],
        [
            "assert (nCol D B C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "675be29ea58b035f2007d2984607ba05b4ace55e"
        ],
        [
            "assert (Triangle D B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "91a5669078a6b89287ed72df2cd5ed937854aa77"
        ],
        [
            "assert (Par A D B C) by (conclude proposition_39).",
            "VernacExtend",
            "1bd2e507c692e67ab44659c2ee98a004c2f41c00"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_40",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D H E) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "371031f5defd7f350c0662c73636af79c117317e"
                    ]
                },
                {
                    "command": [
                        "assert (neq H E) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "d51bea137398549d4ada1c8a5e8b1cd19f02d650"
                    ]
                },
                {
                    "command": [
                        "assert (neq E H) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "3b0a6b4692dfc01daef8a287435bfdef3067045f"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists R, (BetS E H R /\\ Cong H R E H)) by (conclude lemma_extension);destruct Tf as [R];spliter.",
                        "VernacExtend",
                        "a1caa9cdfe8f84dd2f60ff85ecd7808da7b96ce9"
                    ]
                },
                {
                    "command": [
                        "assert (BetS R H E) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "3b04e4071c8aa654ba27573311947876c8eaa848"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H E D) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "04624ef8a631d57ad51040757ac3ff73aa9ec4d3"
                    ]
                },
                {
                    "command": [
                        "assert (Col R H E) by (conclude_def Col ).",
                        "VernacExtend",
                        "a8e9175f7a0646453001b71fc609277778e93a01"
                    ]
                },
                {
                    "command": [
                        "assert (Col H E R) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ecc70e9783353fb4676796b4fe7c4463fc752359"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (Col H E E) by (conclude_def Col ).",
                        "VernacExtend",
                        "b0fb239e342e76139cb8eb98528e173603015197"
                    ]
                },
                {
                    "command": [
                        "assert (neq R E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "2eb98e078c4cb8b1c88dd80de1e89147ec0ef00e"
                    ]
                },
                {
                    "command": [
                        "assert (nCol R E D) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "c5a5fbbecbf0b91fb4b80b9698f68b369dcd5a4d"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists P Q M, (BetS P D Q /\\ CongA P D H D H E /\\ Par P Q R E /\\ BetS P M E /\\ BetS D M H)) by (conclude proposition_31short);destruct Tf as [P[Q[M]]];spliter.",
                        "VernacExtend",
                        "b5d7336e562b6cbbb9c686a57d9e9006a8263788"
                    ]
                },
                {
                    "command": [
                        "assert (Col R E H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b146da596622e2eebe4f69ccc95946779af485c0"
                    ]
                },
                {
                    "command": [
                        "assert (Par P Q H E) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "a68323d46fef7c818b6988c889f3a9c026b5e5fa"
                    ]
                },
                {
                    "command": [
                        "assert (Col P D Q) by (conclude_def Col ).",
                        "VernacExtend",
                        "e5b41d926fd06371389e01509bf59b94672fb17a"
                    ]
                },
                {
                    "command": [
                        "assert (Col P Q D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5e4b6c33dcab573fb0543d7abd94a291a6995962"
                    ]
                },
                {
                    "command": [
                        "assert (Cong H E B C) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "7656e50aef6b15ad22b4a8bb277b32d427ea1c9e"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c1765a1df8530c57c594388f5249e7337b42f1b6"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "8b983e606f0a50e91b36d3dd2986921af5a6c37b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "0bb577205eb42d8f9fe7d193058e6055102c5a78"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f6de27d2290b224fed0d2ab5b24228893a410ec8"
                    ]
                },
                {
                    "command": [
                        "assert (Col B H E) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "9dfb2a2c83ef7e2be360fbdab3b42b8df364f561"
                    ]
                },
                {
                    "command": [
                        "assert (Col H E B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1149b8a0e9ff9983bda6770476c3d036ba467348"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9317c84ce6189bec6373489abf29fe4a0ffc14a1"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f8b4c03747eb11dc59b3f950807bc383f63bb430"
                    ]
                },
                {
                    "command": [
                        "assert (Col C H E) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "51b0ce84b7c040e40250f2fe774e04c2eba71942"
                    ]
                },
                {
                    "command": [
                        "assert (Col H E C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c3ccb60fe5ca5b003bcdc0dd5a7d1cfffd4eeef2"
                    ]
                },
                {
                    "command": [
                        "assert (ET D H E D B C) by (conclude proposition_38).",
                        "VernacExtend",
                        "0ef9cb6e691683bffc19fde8f756add3b19f790c"
                    ]
                },
                {
                    "command": [
                        "assert (ET A B C D B C) by (conclude axiom_ETtransitive).",
                        "VernacExtend",
                        "86a20845641e8618dd7b2e3b5ea219347318ae72"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H E D) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "04624ef8a631d57ad51040757ac3ff73aa9ec4d3"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B C D) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "5f6955510438967422d641465fec920c44905ab3"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D B C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "675be29ea58b035f2007d2984607ba05b4ace55e"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle D B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "91a5669078a6b89287ed72df2cd5ed937854aa77"
                    ]
                },
                {
                    "command": [
                        "assert (Par A D B C) by (conclude proposition_39).",
                        "VernacExtend",
                        "1bd2e507c692e67ab44659c2ee98a004c2f41c00"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}