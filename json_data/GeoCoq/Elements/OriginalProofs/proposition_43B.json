{
    "filename": "Elements/OriginalProofs/proposition_43B.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_paralleldef2B.",
            "VernacRequire",
            "7cf4a0c55706566965dc803af6508768ea4f4a99"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_samesideflip.",
            "VernacRequire",
            "0c2eb96efb1ebf9be576ec12a4a711f713c56ac0"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_29C.",
            "VernacRequire",
            "fc76f0b06e8a9ade925f50f5127befabbc9bbdfe"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_supplements2.",
            "VernacRequire",
            "739e3b68965731edbad123daf8ffe7cb867516f9"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_samesidecollinear.",
            "VernacRequire",
            "bd0fbd985b33d2bee0199466d820da71c3a40a7d"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_samesidetransitive.",
            "VernacRequire",
            "2529132c89ec14256741e3a67306925f6fa97c17"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_28D.",
            "VernacRequire",
            "b23188f38fdefc37cdd32049db324973b1704878"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:area}.",
            "VernacContext",
            "81ffa005c6d27ee71f963c56f9847264efce50bb"
        ],
        [
            "Lemma proposition_43B : forall A B C D E F G H K, PG A B C D -> BetS A H D -> BetS A E B -> BetS D F C -> BetS B G C -> PG E A H K -> PG G K F C -> PG E K G B.",
            "VernacStartTheoremProof",
            "e2694e7e0c04832a186b7dc35bc4f5fbab0ae1c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Par A D B C) by (conclude_def PG ).",
            "VernacExtend",
            "4378c3668a23c6fe646376559fe981073d0d0838"
        ],
        [
            "assert (Par A B C D) by (conclude_def PG ).",
            "VernacExtend",
            "29dfcd8a524d61e9547a05f7df7e8cb0e3cc1b50"
        ],
        [
            "assert (Par E A H K) by (conclude_def PG ).",
            "VernacExtend",
            "32e732b83b75497dde8b8a247ed8c1799f698c11"
        ],
        [
            "assert (Par E K A H) by (conclude_def PG ).",
            "VernacExtend",
            "dfa1b2887af10b553100250a0eb135bd0ae043aa"
        ],
        [
            "assert (Par G K F C) by (conclude_def PG ).",
            "VernacExtend",
            "63e672c1c836e912339a9a7d286ba6f2e59e5633"
        ],
        [
            "assert (Par F C G K) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "47b88efe8769027fafd15df4c0d56ade628e5528"
        ],
        [
            "assert (Par C F G K) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "e2110f92436a94df710cf8cde02a82093c666b9c"
        ],
        [
            "assert (Par G C K F) by (conclude_def PG ).",
            "VernacExtend",
            "87200f74ab8572179411a0419d21fea90adec8f5"
        ],
        [
            "assert (Par B C A D) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "9293b6a2d3afdc1e2dacfbb39c26ab8ec1fce45f"
        ],
        [
            "assert (Par C D A B) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "ce8640be6fb122eec488f5cfb6cd2e44b3f51495"
        ],
        [
            "assert (Par A H E K) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "88fe6616b4066db6f21c494ead161a3295defa24"
        ],
        [
            "assert (TP A B C D) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "02b259fbaa4998ac74d6652897ff5921ef5dd9ac"
        ],
        [
            "assert (TP E A H K) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "520c50411086aad87990b6b4aabb4e645a0c763e"
        ],
        [
            "assert (TP G C K F) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "c54388ca7cef1e1c13a9fd4f984b37e6ad4534b4"
        ],
        [
            "assert (TP B C A D) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "7dda265917745c72d237c9d0452b3ec2b4d215ef"
        ],
        [
            "assert (OS A D B C) by (conclude_def TP ).",
            "VernacExtend",
            "4a94b16242ad8838a157e615429f99f70bb55544"
        ],
        [
            "assert (OS A D C B) by (conclude lemma_samesideflip).",
            "VernacExtend",
            "9a374c557ad8c1648eb601a62c71416aa08e4093"
        ],
        [
            "assert (OS D A C B) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "f1c0bb75295d03f02e06c00d0216a6fe03bd826b"
        ],
        [
            "assert (OS C D A B) by (conclude_def TP ).",
            "VernacExtend",
            "69133d4a5fa796a881e8a90525869f786b41d307"
        ],
        [
            "assert (OS H K E A) by (conclude_def TP ).",
            "VernacExtend",
            "8385d9d2a178247bb05ed480519a792c7a4bcea8"
        ],
        [
            "assert (OS K F G C) by (conclude_def TP ).",
            "VernacExtend",
            "b305fdb7a4d663c746c6f8c63f4602b26f98ea6c"
        ],
        [
            "assert (neq A E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9dc76a35f0423fea77251119a803e21c8f59a255"
        ],
        [
            "assert (neq A H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "2bbddeb343ed90ffab77cd5a294b68942effb117"
        ],
        [
            "assert (neq B G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "2d6c7920767599fa499e08f01a22a519ccef363c"
        ],
        [
            "assert (neq A B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "729d99d00883cb65929e87e6a48ea0634ac9dc68"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists e, (BetS B A e /\\ Cong A e B A)) by (conclude lemma_extension);destruct Tf as [e];spliter.",
            "VernacExtend",
            "823cb4958de66401fd7ef8195db944019e1c98e4"
        ],
        [
            "assert (BetS e A B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "fd55e42bdf9e63dd665006c96d01ae9abfd01ed7"
        ],
        [
            "assert (OS D C A B) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "1c1131b10f644e673ca3b08a2944bfcda1de3341"
        ],
        [
            "assert (RT D A B A B C) by (conclude proposition_29C).",
            "VernacExtend",
            "bdfd52c3b08a3637d2f965af14eebb67ee38308a"
        ],
        [
            "assert (BetS B E A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "e1ec45eef27e11b2ea2d8c8bba4dbc231d17e9ac"
        ],
        [
            "assert (BetS E A e) by (conclude lemma_3_6a).",
            "VernacExtend",
            "387c45c56d33b5e2f84e387102d5e7a9e6471eab"
        ],
        [
            "assert (BetS e A E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "881b272bbcb330b3146860e73a76d59ed26dfd8a"
        ],
        [
            "assert (OS H K A E) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "a572d23130ceb3a3728fd9ff1ca923580ed72f1b"
        ],
        [
            "assert (RT H A E A E K) by (conclude proposition_29C).",
            "VernacExtend",
            "7705698db237a637c6d003c00cab5dab2b91b1a5"
        ],
        [
            "assert (Out A E B) by (conclude lemma_ray4).",
            "VernacExtend",
            "e547ada41bed6b2ee53fd8019c46b0df9bedf32f"
        ],
        [
            "assert (Out A H D) by (conclude lemma_ray4).",
            "VernacExtend",
            "a7a63ccd69a882820907f17c2fcc0b317c8e66b0"
        ],
        [
            "assert (nCol A H E) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "6574ce189dd0fa3e1649d63b07a17e34230c7440"
        ],
        [
            "assert (nCol E A H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "cd6664d7eb2779511f69ee9e341cd54e744ed50d"
        ],
        [
            "assert (CongA E A H E A H) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "ddfd97f93f57d6911e5c3e5326a8fb6c66cba363"
        ],
        [
            "assert (CongA E A H B A D) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "0db6735498313f8c392c75c602e5e6244a41eab4"
        ],
        [
            "assert (CongA H A E D A B) by (conclude lemma_equalanglesflip).",
            "VernacExtend",
            "4bfc138a724a13aca146bbf992ae85b6704e6b27"
        ],
        [
            "assert (CongA A E K A B C) by (apply (lemma_supplements2 H A E A B C D A B A E K);eauto).",
            "VernacExtend",
            "a576241cddfb9fe3e09655bbb0bdb36ada60ada5"
        ],
        [
            "assert (OS C D B A) by (conclude lemma_samesideflip).",
            "VernacExtend",
            "d813f724f1dccd68280ada2c34abb9b42297f367"
        ],
        [
            "assert (Col A E B) by (conclude_def Col ).",
            "VernacExtend",
            "2d67e641a0325f1b3a6282335663f70ad1b86a2b"
        ],
        [
            "assert (Col B A E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7d8a81edfc37556bec3712d2e7f3d1754b2593f6"
        ],
        [
            "assert (neq E B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "5972c39a9c99ab9171d7dce35991133da206a502"
        ],
        [
            "assert (neq B E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "12177431d3546f142d5739c628b237f3f025d561"
        ],
        [
            "assert (OS C D B E) by (conclude lemma_samesidecollinear).",
            "VernacExtend",
            "38824934bb10234b2edd18d54dbd4ce849ef0806"
        ],
        [
            "assert (Out A H D) by (conclude lemma_ray4).",
            "VernacExtend",
            "a7a63ccd69a882820907f17c2fcc0b317c8e66b0"
        ],
        [
            "assert (Out A D H) by (conclude lemma_ray5).",
            "VernacExtend",
            "55692630c7efcc3a221994a7fe71ad009d768e8f"
        ],
        [
            "assert (OS C H B E) by (conclude lemma_sameside2).",
            "VernacExtend",
            "7a2a8a66840cb15357108023542abb579d2bd3e5"
        ],
        [
            "assert (Col E A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4613a5ad2a9e067edf77e8a304d7f80b70209516"
        ],
        [
            "assert (OS H K E B) by (conclude lemma_samesidecollinear).",
            "VernacExtend",
            "6275281b505e6c1784fab428721e4dbb73fcb430"
        ],
        [
            "assert (OS H K B E) by (conclude lemma_samesideflip).",
            "VernacExtend",
            "5fd572d414308e470888c5644687ca1bd0b44b5a"
        ],
        [
            "assert (OS C K B E) by (conclude lemma_samesidetransitive).",
            "VernacExtend",
            "6b8d81b7ef40d060792835c6354c2235d7cdfcd3"
        ],
        [
            "assert (OS K C B E) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "d34ae16c24f4d17f9a966336387c7135f24e2f38"
        ],
        [
            "assert (Out B G C) by (conclude lemma_ray4).",
            "VernacExtend",
            "ad8e0460e8be0b1399e6e80c9a52b13921eda815"
        ],
        [
            "assert (Out B C G) by (conclude lemma_ray5).",
            "VernacExtend",
            "633bf9b93115fef3a4e67cf5439ba6abbd7f2823"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col B B E) by (conclude_def Col ).",
            "VernacExtend",
            "c1d67f8d5bd58fb0876efcfa301528c2b16b91f9"
        ],
        [
            "assert (OS K G B E) by (conclude lemma_sameside2).",
            "VernacExtend",
            "44b144333bfe2ebb59f5169c519e1ae0a5319675"
        ],
        [
            "assert (OS K G E B) by (conclude lemma_samesideflip).",
            "VernacExtend",
            "f8c05bce93626b9639c17d8f159bf333eb58c3bf"
        ],
        [
            "assert (Out B E A) by (conclude lemma_ray4).",
            "VernacExtend",
            "2a3f3d546ae6ca0ef5433581bcbaf572f93450a2"
        ],
        [
            "assert (Out B A E) by (conclude lemma_ray5).",
            "VernacExtend",
            "6c2b0537bb2ee9f4fb6217a4fe70149f6b7c4b08"
        ],
        [
            "assert (CongA A E K E B G) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "d47c59b725fa756ce864e977e2b1eaa83d1c21a5"
        ],
        [
            "assert (Par E K B G) by (conclude proposition_28D).",
            "VernacExtend",
            "592781da2757f47f745eed144d486746ccf62c02"
        ],
        [
            "assert (Par E K G B) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "9febb07e492c677fcf1dae32f4157ddfea046323"
        ],
        [
            "assert (neq B C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists c, (BetS B C c /\\ Cong C c B C)) by (conclude lemma_extension);destruct Tf as [c];spliter.",
            "VernacExtend",
            "fd572918a62a85809f96b6d5630aef4d1feb5c56"
        ],
        [
            "assert (BetS c C B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "73e30ddbe2631db88b9e71f9ddb93ee271524350"
        ],
        [
            "assert (Par C D B A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "0c9e98b4d5a8df6239aa4126d9d2b5b4571d9955"
        ],
        [
            "assert (RT D C B C B A) by (conclude proposition_29C).",
            "VernacExtend",
            "ad511eea02cb66beb709c14524eed4a1e0b9ca5f"
        ],
        [
            "assert (OS K F C G) by (conclude lemma_samesideflip).",
            "VernacExtend",
            "90d235c095fc752fd41358a87aa8d35de8264a58"
        ],
        [
            "assert (OS F K C G) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "211acfe609d86b69888f76829a55c54f01ea42a1"
        ],
        [
            "assert (BetS C G B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "4b2bfa91a6c23c85e1d64d719aa987b9e0531ab0"
        ],
        [
            "assert (BetS c C G) by (conclude axiom_innertransitivity).",
            "VernacExtend",
            "cc3e56c946a2601ca439ccc5d4dcb33276bc9633"
        ],
        [
            "assert (RT F C G C G K) by (conclude proposition_29C).",
            "VernacExtend",
            "523650d9f374d5b0ff4d090f24c4b27d8cc7cedf"
        ],
        [
            "assert (nCol D B C) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "dee97afe00180e26c4c99350eeaee29c3eb03514"
        ],
        [
            "assert (nCol D C B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "42fa4202075413f8ceea35f10d75ff120a84cd07"
        ],
        [
            "assert (CongA D C B D C B) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "161a98caa0340a71225f05f119705de8540c53e3"
        ],
        [
            "assert (BetS C F D) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "2d0f02665408420d28423c8dcc1312860cb96346"
        ],
        [
            "assert (neq C F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "3a331b8130423421b78af507ab92e13ccc8d8d61"
        ],
        [
            "assert (Out C F D) by (conclude lemma_ray4).",
            "VernacExtend",
            "566a24080856dd8e4ce4cc77691e3118f1dcc06b"
        ],
        [
            "assert (Out C D F) by (conclude lemma_ray5).",
            "VernacExtend",
            "d5e7b40327f84e63aaaf7da6458fa326498a1c41"
        ],
        [
            "assert (BetS C G B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "4b2bfa91a6c23c85e1d64d719aa987b9e0531ab0"
        ],
        [
            "assert (neq C G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "fdfa8129cc6959925f83269b6da8d85fc4b0b7b8"
        ],
        [
            "assert (Out C G B) by (conclude lemma_ray4).",
            "VernacExtend",
            "2086e0edb5491517c4708360367d83b8e8aad3b7"
        ],
        [
            "assert (Out C B G) by (conclude lemma_ray5).",
            "VernacExtend",
            "f1263397b88b51ede567166900be81e6a11df496"
        ],
        [
            "assert (CongA D C B F C G) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "1556ddee67cc3543b3a492be1251cc67e969a5aa"
        ],
        [
            "assert (CongA C B A C G K) by (conclude (lemma_supplements2 D C B C G K F C G C B A)).",
            "VernacExtend",
            "ab7ce9936f81edf45de62d50f0e4941d24712d0e"
        ],
        [
            "assert (CongA C G K C B A) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "5b0b59ebca46b82925cd40e1c1e0156522d3d73d"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Out B A A) by (conclude lemma_ray4).",
            "VernacExtend",
            "6c6ec3ac616495dbfa731f8b969ff3f1e02b3fce"
        ],
        [
            "assert (neq B G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "2d6c7920767599fa499e08f01a22a519ccef363c"
        ],
        [
            "assert (Out B G C) by (conclude lemma_ray4).",
            "VernacExtend",
            "ad8e0460e8be0b1399e6e80c9a52b13921eda815"
        ],
        [
            "assert (Out B C G) by (conclude lemma_ray5).",
            "VernacExtend",
            "633bf9b93115fef3a4e67cf5439ba6abbd7f2823"
        ],
        [
            "assert (CongA C G K G B A) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "eecdadf51516311b1de25e80323591b27b13a9b6"
        ],
        [
            "assert (Col B G C) by (conclude_def Col ).",
            "VernacExtend",
            "dbf9401bb684239ac3ef99282c585117a2fa08b4"
        ],
        [
            "assert (Col C B G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9901c787111c66c73fd491cae6310f1c242b873f"
        ],
        [
            "assert (BetS C F D) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "2d0f02665408420d28423c8dcc1312860cb96346"
        ],
        [
            "assert (neq C F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "3a331b8130423421b78af507ab92e13ccc8d8d61"
        ],
        [
            "assert (Out C F D) by (conclude lemma_ray4).",
            "VernacExtend",
            "566a24080856dd8e4ce4cc77691e3118f1dcc06b"
        ],
        [
            "assert (Out C D F) by (conclude lemma_ray5).",
            "VernacExtend",
            "d5e7b40327f84e63aaaf7da6458fa326498a1c41"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col B C C) by (conclude_def Col ).",
            "VernacExtend",
            "180b69e1d75faa9cbd33f7fe6248015c489b30a7"
        ],
        [
            "assert (OS A F B C) by (conclude lemma_sameside2).",
            "VernacExtend",
            "6f15af552106fa3ededd61fe9e9823cf1544ef83"
        ],
        [
            "assert (TP G C K F) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "c54388ca7cef1e1c13a9fd4f984b37e6ad4534b4"
        ],
        [
            "assert (OS K F G C) by (conclude_def TP ).",
            "VernacExtend",
            "b305fdb7a4d663c746c6f8c63f4602b26f98ea6c"
        ],
        [
            "assert (Col C G B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "a980ffc4e42dba155ac80584711db2ec005e1f42"
        ],
        [
            "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f6de27d2290b224fed0d2ab5b24228893a410ec8"
        ],
        [
            "assert (OS K F C G) by (conclude lemma_samesideflip).",
            "VernacExtend",
            "90d235c095fc752fd41358a87aa8d35de8264a58"
        ],
        [
            "assert (OS K F C B) by (conclude lemma_samesidecollinear).",
            "VernacExtend",
            "cbd6fb9da1ec6a71a655ce4e415ad4a315538835"
        ],
        [
            "assert (OS K F B C) by (conclude lemma_samesideflip).",
            "VernacExtend",
            "663af27c31105fb2e35e84e02e7f1e1cd350ae28"
        ],
        [
            "assert (OS F K B C) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "0f3aed03dca6a80d7ab146b767b1f6cd87336386"
        ],
        [
            "assert (OS A K B C) by (conclude lemma_samesidetransitive).",
            "VernacExtend",
            "093ab62223500fa84598fb7f590e1e3691f074a2"
        ],
        [
            "assert (OS K A B C) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "2ab528b175d7a43b85dab9567a634cd79415d650"
        ],
        [
            "assert (Col B C G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0974deb240a3ecec8cfe6d653332fc3092d1916d"
        ],
        [
            "assert (OS K A B G) by (conclude lemma_samesidecollinear).",
            "VernacExtend",
            "408d98f47d6f1eda944c48964e25c7641d00b09b"
        ],
        [
            "assert (OS K A G B) by (conclude lemma_samesideflip).",
            "VernacExtend",
            "53417ee62a21dc98d51601822bbe315446bad495"
        ],
        [
            "assert (Par G K B A) by (conclude proposition_28D).",
            "VernacExtend",
            "d9adc2bd83628f3088f1d1330a0eb2cc74e1c09e"
        ],
        [
            "assert (Par G K A B) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "d8e78702cfd3fbc839a0ddd3ed6a32f225ceff18"
        ],
        [
            "assert (Col A B E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1d3f211b8bac06731ece5226ea8d8aa9bb171b34"
        ],
        [
            "assert (Par G K E B) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "9d413c19e4a10a03d157df3055008431c96329f0"
        ],
        [
            "assert (Par E B G K) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "dff0fd06d34a4131b1215af9bfbb222ac82fd51b"
        ],
        [
            "assert (Par E B K G) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "a66690b95fc302bcb486beba00bbd80ffa956165"
        ],
        [
            "assert (PG E K G B) by (conclude_def PG ).",
            "VernacExtend",
            "d10c243b98f31dfed6961088485deaf947b8dee4"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_43B",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Par A D B C) by (conclude_def PG ).",
                        "VernacExtend",
                        "4378c3668a23c6fe646376559fe981073d0d0838"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B C D) by (conclude_def PG ).",
                        "VernacExtend",
                        "29dfcd8a524d61e9547a05f7df7e8cb0e3cc1b50"
                    ]
                },
                {
                    "command": [
                        "assert (Par E A H K) by (conclude_def PG ).",
                        "VernacExtend",
                        "32e732b83b75497dde8b8a247ed8c1799f698c11"
                    ]
                },
                {
                    "command": [
                        "assert (Par E K A H) by (conclude_def PG ).",
                        "VernacExtend",
                        "dfa1b2887af10b553100250a0eb135bd0ae043aa"
                    ]
                },
                {
                    "command": [
                        "assert (Par G K F C) by (conclude_def PG ).",
                        "VernacExtend",
                        "63e672c1c836e912339a9a7d286ba6f2e59e5633"
                    ]
                },
                {
                    "command": [
                        "assert (Par F C G K) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "47b88efe8769027fafd15df4c0d56ade628e5528"
                    ]
                },
                {
                    "command": [
                        "assert (Par C F G K) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "e2110f92436a94df710cf8cde02a82093c666b9c"
                    ]
                },
                {
                    "command": [
                        "assert (Par G C K F) by (conclude_def PG ).",
                        "VernacExtend",
                        "87200f74ab8572179411a0419d21fea90adec8f5"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C A D) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "9293b6a2d3afdc1e2dacfbb39c26ab8ec1fce45f"
                    ]
                },
                {
                    "command": [
                        "assert (Par C D A B) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "ce8640be6fb122eec488f5cfb6cd2e44b3f51495"
                    ]
                },
                {
                    "command": [
                        "assert (Par A H E K) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "88fe6616b4066db6f21c494ead161a3295defa24"
                    ]
                },
                {
                    "command": [
                        "assert (TP A B C D) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "02b259fbaa4998ac74d6652897ff5921ef5dd9ac"
                    ]
                },
                {
                    "command": [
                        "assert (TP E A H K) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "520c50411086aad87990b6b4aabb4e645a0c763e"
                    ]
                },
                {
                    "command": [
                        "assert (TP G C K F) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "c54388ca7cef1e1c13a9fd4f984b37e6ad4534b4"
                    ]
                },
                {
                    "command": [
                        "assert (TP B C A D) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "7dda265917745c72d237c9d0452b3ec2b4d215ef"
                    ]
                },
                {
                    "command": [
                        "assert (OS A D B C) by (conclude_def TP ).",
                        "VernacExtend",
                        "4a94b16242ad8838a157e615429f99f70bb55544"
                    ]
                },
                {
                    "command": [
                        "assert (OS A D C B) by (conclude lemma_samesideflip).",
                        "VernacExtend",
                        "9a374c557ad8c1648eb601a62c71416aa08e4093"
                    ]
                },
                {
                    "command": [
                        "assert (OS D A C B) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "f1c0bb75295d03f02e06c00d0216a6fe03bd826b"
                    ]
                },
                {
                    "command": [
                        "assert (OS C D A B) by (conclude_def TP ).",
                        "VernacExtend",
                        "69133d4a5fa796a881e8a90525869f786b41d307"
                    ]
                },
                {
                    "command": [
                        "assert (OS H K E A) by (conclude_def TP ).",
                        "VernacExtend",
                        "8385d9d2a178247bb05ed480519a792c7a4bcea8"
                    ]
                },
                {
                    "command": [
                        "assert (OS K F G C) by (conclude_def TP ).",
                        "VernacExtend",
                        "b305fdb7a4d663c746c6f8c63f4602b26f98ea6c"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9dc76a35f0423fea77251119a803e21c8f59a255"
                    ]
                },
                {
                    "command": [
                        "assert (neq A H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "2bbddeb343ed90ffab77cd5a294b68942effb117"
                    ]
                },
                {
                    "command": [
                        "assert (neq B G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "2d6c7920767599fa499e08f01a22a519ccef363c"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "729d99d00883cb65929e87e6a48ea0634ac9dc68"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists e, (BetS B A e /\\ Cong A e B A)) by (conclude lemma_extension);destruct Tf as [e];spliter.",
                        "VernacExtend",
                        "823cb4958de66401fd7ef8195db944019e1c98e4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS e A B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "fd55e42bdf9e63dd665006c96d01ae9abfd01ed7"
                    ]
                },
                {
                    "command": [
                        "assert (OS D C A B) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "1c1131b10f644e673ca3b08a2944bfcda1de3341"
                    ]
                },
                {
                    "command": [
                        "assert (RT D A B A B C) by (conclude proposition_29C).",
                        "VernacExtend",
                        "bdfd52c3b08a3637d2f965af14eebb67ee38308a"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B E A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "e1ec45eef27e11b2ea2d8c8bba4dbc231d17e9ac"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E A e) by (conclude lemma_3_6a).",
                        "VernacExtend",
                        "387c45c56d33b5e2f84e387102d5e7a9e6471eab"
                    ]
                },
                {
                    "command": [
                        "assert (BetS e A E) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "881b272bbcb330b3146860e73a76d59ed26dfd8a"
                    ]
                },
                {
                    "command": [
                        "assert (OS H K A E) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "a572d23130ceb3a3728fd9ff1ca923580ed72f1b"
                    ]
                },
                {
                    "command": [
                        "assert (RT H A E A E K) by (conclude proposition_29C).",
                        "VernacExtend",
                        "7705698db237a637c6d003c00cab5dab2b91b1a5"
                    ]
                },
                {
                    "command": [
                        "assert (Out A E B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "e547ada41bed6b2ee53fd8019c46b0df9bedf32f"
                    ]
                },
                {
                    "command": [
                        "assert (Out A H D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "a7a63ccd69a882820907f17c2fcc0b317c8e66b0"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A H E) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "6574ce189dd0fa3e1649d63b07a17e34230c7440"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E A H) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "cd6664d7eb2779511f69ee9e341cd54e744ed50d"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E A H E A H) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "ddfd97f93f57d6911e5c3e5326a8fb6c66cba363"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E A H B A D) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "0db6735498313f8c392c75c602e5e6244a41eab4"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H A E D A B) by (conclude lemma_equalanglesflip).",
                        "VernacExtend",
                        "4bfc138a724a13aca146bbf992ae85b6704e6b27"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A E K A B C) by (apply (lemma_supplements2 H A E A B C D A B A E K);eauto).",
                        "VernacExtend",
                        "a576241cddfb9fe3e09655bbb0bdb36ada60ada5"
                    ]
                },
                {
                    "command": [
                        "assert (OS C D B A) by (conclude lemma_samesideflip).",
                        "VernacExtend",
                        "d813f724f1dccd68280ada2c34abb9b42297f367"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E B) by (conclude_def Col ).",
                        "VernacExtend",
                        "2d67e641a0325f1b3a6282335663f70ad1b86a2b"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7d8a81edfc37556bec3712d2e7f3d1754b2593f6"
                    ]
                },
                {
                    "command": [
                        "assert (neq E B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "5972c39a9c99ab9171d7dce35991133da206a502"
                    ]
                },
                {
                    "command": [
                        "assert (neq B E) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "12177431d3546f142d5739c628b237f3f025d561"
                    ]
                },
                {
                    "command": [
                        "assert (OS C D B E) by (conclude lemma_samesidecollinear).",
                        "VernacExtend",
                        "38824934bb10234b2edd18d54dbd4ce849ef0806"
                    ]
                },
                {
                    "command": [
                        "assert (Out A H D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "a7a63ccd69a882820907f17c2fcc0b317c8e66b0"
                    ]
                },
                {
                    "command": [
                        "assert (Out A D H) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "55692630c7efcc3a221994a7fe71ad009d768e8f"
                    ]
                },
                {
                    "command": [
                        "assert (OS C H B E) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "7a2a8a66840cb15357108023542abb579d2bd3e5"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4613a5ad2a9e067edf77e8a304d7f80b70209516"
                    ]
                },
                {
                    "command": [
                        "assert (OS H K E B) by (conclude lemma_samesidecollinear).",
                        "VernacExtend",
                        "6275281b505e6c1784fab428721e4dbb73fcb430"
                    ]
                },
                {
                    "command": [
                        "assert (OS H K B E) by (conclude lemma_samesideflip).",
                        "VernacExtend",
                        "5fd572d414308e470888c5644687ca1bd0b44b5a"
                    ]
                },
                {
                    "command": [
                        "assert (OS C K B E) by (conclude lemma_samesidetransitive).",
                        "VernacExtend",
                        "6b8d81b7ef40d060792835c6354c2235d7cdfcd3"
                    ]
                },
                {
                    "command": [
                        "assert (OS K C B E) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "d34ae16c24f4d17f9a966336387c7135f24e2f38"
                    ]
                },
                {
                    "command": [
                        "assert (Out B G C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "ad8e0460e8be0b1399e6e80c9a52b13921eda815"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C G) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "633bf9b93115fef3a4e67cf5439ba6abbd7f2823"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col B B E) by (conclude_def Col ).",
                        "VernacExtend",
                        "c1d67f8d5bd58fb0876efcfa301528c2b16b91f9"
                    ]
                },
                {
                    "command": [
                        "assert (OS K G B E) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "44b144333bfe2ebb59f5169c519e1ae0a5319675"
                    ]
                },
                {
                    "command": [
                        "assert (OS K G E B) by (conclude lemma_samesideflip).",
                        "VernacExtend",
                        "f8c05bce93626b9639c17d8f159bf333eb58c3bf"
                    ]
                },
                {
                    "command": [
                        "assert (Out B E A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "2a3f3d546ae6ca0ef5433581bcbaf572f93450a2"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A E) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "6c2b0537bb2ee9f4fb6217a4fe70149f6b7c4b08"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A E K E B G) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "d47c59b725fa756ce864e977e2b1eaa83d1c21a5"
                    ]
                },
                {
                    "command": [
                        "assert (Par E K B G) by (conclude proposition_28D).",
                        "VernacExtend",
                        "592781da2757f47f745eed144d486746ccf62c02"
                    ]
                },
                {
                    "command": [
                        "assert (Par E K G B) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "9febb07e492c677fcf1dae32f4157ddfea046323"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists c, (BetS B C c /\\ Cong C c B C)) by (conclude lemma_extension);destruct Tf as [c];spliter.",
                        "VernacExtend",
                        "fd572918a62a85809f96b6d5630aef4d1feb5c56"
                    ]
                },
                {
                    "command": [
                        "assert (BetS c C B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "73e30ddbe2631db88b9e71f9ddb93ee271524350"
                    ]
                },
                {
                    "command": [
                        "assert (Par C D B A) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "0c9e98b4d5a8df6239aa4126d9d2b5b4571d9955"
                    ]
                },
                {
                    "command": [
                        "assert (RT D C B C B A) by (conclude proposition_29C).",
                        "VernacExtend",
                        "ad511eea02cb66beb709c14524eed4a1e0b9ca5f"
                    ]
                },
                {
                    "command": [
                        "assert (OS K F C G) by (conclude lemma_samesideflip).",
                        "VernacExtend",
                        "90d235c095fc752fd41358a87aa8d35de8264a58"
                    ]
                },
                {
                    "command": [
                        "assert (OS F K C G) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "211acfe609d86b69888f76829a55c54f01ea42a1"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C G B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "4b2bfa91a6c23c85e1d64d719aa987b9e0531ab0"
                    ]
                },
                {
                    "command": [
                        "assert (BetS c C G) by (conclude axiom_innertransitivity).",
                        "VernacExtend",
                        "cc3e56c946a2601ca439ccc5d4dcb33276bc9633"
                    ]
                },
                {
                    "command": [
                        "assert (RT F C G C G K) by (conclude proposition_29C).",
                        "VernacExtend",
                        "523650d9f374d5b0ff4d090f24c4b27d8cc7cedf"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D B C) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "dee97afe00180e26c4c99350eeaee29c3eb03514"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D C B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "42fa4202075413f8ceea35f10d75ff120a84cd07"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D C B D C B) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "161a98caa0340a71225f05f119705de8540c53e3"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C F D) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "2d0f02665408420d28423c8dcc1312860cb96346"
                    ]
                },
                {
                    "command": [
                        "assert (neq C F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "3a331b8130423421b78af507ab92e13ccc8d8d61"
                    ]
                },
                {
                    "command": [
                        "assert (Out C F D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "566a24080856dd8e4ce4cc77691e3118f1dcc06b"
                    ]
                },
                {
                    "command": [
                        "assert (Out C D F) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "d5e7b40327f84e63aaaf7da6458fa326498a1c41"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C G B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "4b2bfa91a6c23c85e1d64d719aa987b9e0531ab0"
                    ]
                },
                {
                    "command": [
                        "assert (neq C G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "fdfa8129cc6959925f83269b6da8d85fc4b0b7b8"
                    ]
                },
                {
                    "command": [
                        "assert (Out C G B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "2086e0edb5491517c4708360367d83b8e8aad3b7"
                    ]
                },
                {
                    "command": [
                        "assert (Out C B G) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "f1263397b88b51ede567166900be81e6a11df496"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D C B F C G) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "1556ddee67cc3543b3a492be1251cc67e969a5aa"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C B A C G K) by (conclude (lemma_supplements2 D C B C G K F C G C B A)).",
                        "VernacExtend",
                        "ab7ce9936f81edf45de62d50f0e4941d24712d0e"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C G K C B A) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "5b0b59ebca46b82925cd40e1c1e0156522d3d73d"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "6c6ec3ac616495dbfa731f8b969ff3f1e02b3fce"
                    ]
                },
                {
                    "command": [
                        "assert (neq B G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "2d6c7920767599fa499e08f01a22a519ccef363c"
                    ]
                },
                {
                    "command": [
                        "assert (Out B G C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "ad8e0460e8be0b1399e6e80c9a52b13921eda815"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C G) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "633bf9b93115fef3a4e67cf5439ba6abbd7f2823"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C G K G B A) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "eecdadf51516311b1de25e80323591b27b13a9b6"
                    ]
                },
                {
                    "command": [
                        "assert (Col B G C) by (conclude_def Col ).",
                        "VernacExtend",
                        "dbf9401bb684239ac3ef99282c585117a2fa08b4"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9901c787111c66c73fd491cae6310f1c242b873f"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C F D) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "2d0f02665408420d28423c8dcc1312860cb96346"
                    ]
                },
                {
                    "command": [
                        "assert (neq C F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "3a331b8130423421b78af507ab92e13ccc8d8d61"
                    ]
                },
                {
                    "command": [
                        "assert (Out C F D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "566a24080856dd8e4ce4cc77691e3118f1dcc06b"
                    ]
                },
                {
                    "command": [
                        "assert (Out C D F) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "d5e7b40327f84e63aaaf7da6458fa326498a1c41"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C C) by (conclude_def Col ).",
                        "VernacExtend",
                        "180b69e1d75faa9cbd33f7fe6248015c489b30a7"
                    ]
                },
                {
                    "command": [
                        "assert (OS A F B C) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "6f15af552106fa3ededd61fe9e9823cf1544ef83"
                    ]
                },
                {
                    "command": [
                        "assert (TP G C K F) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "c54388ca7cef1e1c13a9fd4f984b37e6ad4534b4"
                    ]
                },
                {
                    "command": [
                        "assert (OS K F G C) by (conclude_def TP ).",
                        "VernacExtend",
                        "b305fdb7a4d663c746c6f8c63f4602b26f98ea6c"
                    ]
                },
                {
                    "command": [
                        "assert (Col C G B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "a980ffc4e42dba155ac80584711db2ec005e1f42"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f6de27d2290b224fed0d2ab5b24228893a410ec8"
                    ]
                },
                {
                    "command": [
                        "assert (OS K F C G) by (conclude lemma_samesideflip).",
                        "VernacExtend",
                        "90d235c095fc752fd41358a87aa8d35de8264a58"
                    ]
                },
                {
                    "command": [
                        "assert (OS K F C B) by (conclude lemma_samesidecollinear).",
                        "VernacExtend",
                        "cbd6fb9da1ec6a71a655ce4e415ad4a315538835"
                    ]
                },
                {
                    "command": [
                        "assert (OS K F B C) by (conclude lemma_samesideflip).",
                        "VernacExtend",
                        "663af27c31105fb2e35e84e02e7f1e1cd350ae28"
                    ]
                },
                {
                    "command": [
                        "assert (OS F K B C) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "0f3aed03dca6a80d7ab146b767b1f6cd87336386"
                    ]
                },
                {
                    "command": [
                        "assert (OS A K B C) by (conclude lemma_samesidetransitive).",
                        "VernacExtend",
                        "093ab62223500fa84598fb7f590e1e3691f074a2"
                    ]
                },
                {
                    "command": [
                        "assert (OS K A B C) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "2ab528b175d7a43b85dab9567a634cd79415d650"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "0974deb240a3ecec8cfe6d653332fc3092d1916d"
                    ]
                },
                {
                    "command": [
                        "assert (OS K A B G) by (conclude lemma_samesidecollinear).",
                        "VernacExtend",
                        "408d98f47d6f1eda944c48964e25c7641d00b09b"
                    ]
                },
                {
                    "command": [
                        "assert (OS K A G B) by (conclude lemma_samesideflip).",
                        "VernacExtend",
                        "53417ee62a21dc98d51601822bbe315446bad495"
                    ]
                },
                {
                    "command": [
                        "assert (Par G K B A) by (conclude proposition_28D).",
                        "VernacExtend",
                        "d9adc2bd83628f3088f1d1330a0eb2cc74e1c09e"
                    ]
                },
                {
                    "command": [
                        "assert (Par G K A B) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "d8e78702cfd3fbc839a0ddd3ed6a32f225ceff18"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1d3f211b8bac06731ece5226ea8d8aa9bb171b34"
                    ]
                },
                {
                    "command": [
                        "assert (Par G K E B) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "9d413c19e4a10a03d157df3055008431c96329f0"
                    ]
                },
                {
                    "command": [
                        "assert (Par E B G K) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "dff0fd06d34a4131b1215af9bfbb222ac82fd51b"
                    ]
                },
                {
                    "command": [
                        "assert (Par E B K G) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "a66690b95fc302bcb486beba00bbd80ffa956165"
                    ]
                },
                {
                    "command": [
                        "assert (PG E K G B) by (conclude_def PG ).",
                        "VernacExtend",
                        "d10c243b98f31dfed6961088485deaf947b8dee4"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}