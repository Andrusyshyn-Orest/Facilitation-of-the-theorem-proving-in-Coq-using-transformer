{
    "filename": "Elements/OriginalProofs/proposition_19.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_angletrichotomy.",
            "VernacRequire",
            "e17c5c88181ad35ad4f23d3d3470404be4822020"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_18.",
            "VernacRequire",
            "b6014c0c376032584be9b9e0646ded3d8490786a"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_trichotomy1.",
            "VernacRequire",
            "76416a16164283ab1374b918a987c2c8742633a8"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_19 : forall A B C, Triangle A B C -> LtA B C A A B C -> Lt A B A C.",
            "VernacStartTheoremProof",
            "8f5a79457e66196785cbd24bb0371cd4001439af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (nCol B C A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "08abc6c2b49fca606fde82afd7a7faa19e5ae589"
        ],
        [
            "assert (nCol A C B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
        ],
        [
            "assert (~ Cong A C A B).",
            "VernacExtend",
            "f90173e4410308e7ed8d1db08ed6ccae0c39e439"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Cong A B A C) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "d92a9af834dd52b75d0009bcb9e5699444689991"
        ],
        [
            "assert (isosceles A B C) by (conclude_def isosceles ).",
            "VernacExtend",
            "510603b30c2ddbd9888241be61ee6519af6ff164"
        ],
        [
            "assert (CongA A B C A C B) by (conclude proposition_05).",
            "VernacExtend",
            "3c54f04cc3ba0ab31f8be3bba4f308d172a3ea4a"
        ],
        [
            "assert (CongA A C B A B C) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "86862e4edfbe4a19badc902c13ef20ef19d03178"
        ],
        [
            "assert (CongA B C A A C B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "75c7a8ed71ec0c2c1ab6810ae39b2eedb30caa17"
        ],
        [
            "assert (CongA B C A A B C) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "9dfbbace94547033d5dbb0e398f65e41abbb3469"
        ],
        [
            "assert (LtA B C A B C A) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "2055f0b43bee02e7efc41f1e50c0bfa680e1e5ea"
        ],
        [
            "assert (~ LtA B C A B C A) by (conclude lemma_angletrichotomy).",
            "VernacExtend",
            "aa5c2ab399e651f13e5359fab8dffef66c9c7b87"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Lt A C A B).",
            "VernacExtend",
            "fd745aacb72be0d18a321172e10dfa416fa74358"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Triangle A C B) by (conclude_def Triangle ).",
            "VernacExtend",
            "be35450d79b2ec7ec0258c474916f7b9e6560530"
        ],
        [
            "assert (LtA C B A A C B) by (conclude proposition_18).",
            "VernacExtend",
            "936d6f12b0e6d5fd5712918d32f17f10eff62b17"
        ],
        [
            "assert (CongA A B C C B A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "adabb930dfa462438b4c67f245952c72a34fba3e"
        ],
        [
            "assert (LtA A B C A C B) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "cdfe7bceb8d1d060cea50fd0ae39f96c9fb7b770"
        ],
        [
            "assert (CongA B C A A C B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "75c7a8ed71ec0c2c1ab6810ae39b2eedb30caa17"
        ],
        [
            "assert (LtA A B C B C A) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "3c940b9f053fe2d3eac2054a5823d540360cd868"
        ],
        [
            "assert (~ LtA A B C B C A) by (conclude lemma_angletrichotomy).",
            "VernacExtend",
            "853e7c51d284bd0994572caef5b3ae15e10791ef"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA A B C A B C) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "aded022177916f7e4435a874df64d10bc8cdea41"
        ],
        [
            "assert (neq A B) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "9649284df41a2d643c1d265e0d98150c3d8d6a08"
        ],
        [
            "assert (neq A C) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "fb1bbf8304c14f46b4fe3e830a007c5b66466470"
        ],
        [
            "assert (~ ~ Lt A B A C).",
            "VernacExtend",
            "138a39bb990f9d2460ff91cde9d6ae9621e17975"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Cong A B A C) by (conclude lemma_trichotomy1).",
            "VernacExtend",
            "fafabbbfa18e7513db6d021a0c8f7c54c4ec540e"
        ],
        [
            "assert (Cong A C A B) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "988506ed92c9be3fefab65051e10dce6507a63a0"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_19",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B C A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "08abc6c2b49fca606fde82afd7a7faa19e5ae589"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
                    ]
                },
                {
                    "command": [
                        "assert (~ Cong A C A B).",
                        "VernacExtend",
                        "f90173e4410308e7ed8d1db08ed6ccae0c39e439"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B A C) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "d92a9af834dd52b75d0009bcb9e5699444689991"
                    ]
                },
                {
                    "command": [
                        "assert (isosceles A B C) by (conclude_def isosceles ).",
                        "VernacExtend",
                        "510603b30c2ddbd9888241be61ee6519af6ff164"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C A C B) by (conclude proposition_05).",
                        "VernacExtend",
                        "3c54f04cc3ba0ab31f8be3bba4f308d172a3ea4a"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A C B A B C) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "86862e4edfbe4a19badc902c13ef20ef19d03178"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C A A C B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "75c7a8ed71ec0c2c1ab6810ae39b2eedb30caa17"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C A A B C) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "9dfbbace94547033d5dbb0e398f65e41abbb3469"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B C A B C A) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "2055f0b43bee02e7efc41f1e50c0bfa680e1e5ea"
                    ]
                },
                {
                    "command": [
                        "assert (~ LtA B C A B C A) by (conclude lemma_angletrichotomy).",
                        "VernacExtend",
                        "aa5c2ab399e651f13e5359fab8dffef66c9c7b87"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Lt A C A B).",
                        "VernacExtend",
                        "fd745aacb72be0d18a321172e10dfa416fa74358"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle A C B) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "be35450d79b2ec7ec0258c474916f7b9e6560530"
                    ]
                },
                {
                    "command": [
                        "assert (LtA C B A A C B) by (conclude proposition_18).",
                        "VernacExtend",
                        "936d6f12b0e6d5fd5712918d32f17f10eff62b17"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C C B A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "adabb930dfa462438b4c67f245952c72a34fba3e"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A B C A C B) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "cdfe7bceb8d1d060cea50fd0ae39f96c9fb7b770"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C A A C B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "75c7a8ed71ec0c2c1ab6810ae39b2eedb30caa17"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A B C B C A) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "3c940b9f053fe2d3eac2054a5823d540360cd868"
                    ]
                },
                {
                    "command": [
                        "assert (~ LtA A B C B C A) by (conclude lemma_angletrichotomy).",
                        "VernacExtend",
                        "853e7c51d284bd0994572caef5b3ae15e10791ef"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C A B C) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "aded022177916f7e4435a874df64d10bc8cdea41"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "9649284df41a2d643c1d265e0d98150c3d8d6a08"
                    ]
                },
                {
                    "command": [
                        "assert (neq A C) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "fb1bbf8304c14f46b4fe3e830a007c5b66466470"
                    ]
                },
                {
                    "command": [
                        "assert (~ ~ Lt A B A C).",
                        "VernacExtend",
                        "138a39bb990f9d2460ff91cde9d6ae9621e17975"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B A C) by (conclude lemma_trichotomy1).",
                        "VernacExtend",
                        "fafabbbfa18e7513db6d021a0c8f7c54c4ec540e"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A C A B) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "988506ed92c9be3fefab65051e10dce6507a63a0"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}