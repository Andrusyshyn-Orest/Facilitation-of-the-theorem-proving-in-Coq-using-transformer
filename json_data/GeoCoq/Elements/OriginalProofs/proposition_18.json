{
    "filename": "Elements/OriginalProofs/proposition_18.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_16.",
            "VernacRequire",
            "eb16b6740514463d06eab37bbb8ae9f4cd552e84"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_05.",
            "VernacRequire",
            "20839207811dc7ba240e62cfa700cfb31a4bebfb"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_angleordertransitive.",
            "VernacRequire",
            "0fcf3cd47f81e1c34f8b61fc4d3630403e536a1f"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_18 : forall A B C, Triangle A B C -> Lt A B A C -> LtA B C A A B C.",
            "VernacStartTheoremProof",
            "68bf30f0705474bfec91a781f7ac1d2bf42e0b1c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (~ eq A B).",
            "VernacExtend",
            "4d33ecdae2e4081df5244e4a21a9919cae1a72e7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "assert (~ eq A C).",
            "VernacExtend",
            "bac3ad054000c7377a20191ed2a60671ee862b33"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq C A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "3e0de460aa8733a502d4f01459ffc0ac21de17d3"
        ],
        [
            "assert (Cong A C A C) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "4e03037387b68aae11af367d5b093a719c4a5354"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists D, (BetS A D C /\\ Cong A D A B)) by (conclude proposition_03);destruct Tf as [D];spliter.",
            "VernacExtend",
            "2cb3a3bb46a0bb750908578364c291b9432f7a76"
        ],
        [
            "assert (~ Col B C D).",
            "VernacExtend",
            "1f400b0de914ae951dba021fa809d8f95a2c5c27"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col D C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
        ],
        [
            "assert (Col A D C) by (conclude_def Col ).",
            "VernacExtend",
            "12a2942af064cd04595187a207f3964ead5f6480"
        ],
        [
            "assert (Col D C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b4ed13d5f9f4239375e10dc6e0a6b6a68c2f6d96"
        ],
        [
            "assert (neq D C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "dac741e71be8778833d3135c1db363ed1412abfc"
        ],
        [
            "assert (Col C B A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "1c018dd0cbcaf3db9508936af6dbabcf55d57bac"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Triangle B C D) by (conclude_def Triangle ).",
            "VernacExtend",
            "40be11cd41aa12caddaf9318b260de2b0bc8d080"
        ],
        [
            "assert (BetS C D A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "a328aa404e3dd620dfdec7f222b2b7882076de4f"
        ],
        [
            "assert (LtA D C B B D A) by (conclude proposition_16).",
            "VernacExtend",
            "d3bdc6e00ec7e1b459aab6c397ce734e77c7c2af"
        ],
        [
            "assert (~ eq B C).",
            "VernacExtend",
            "2a4c174d5fcfb07079559ff9be73565058be28f2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B C D) by (conclude_def Col ).",
            "VernacExtend",
            "afd1e2d0a6ae54ac1da609fde4731349b531ba6f"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f6de27d2290b224fed0d2ab5b24228893a410ec8"
        ],
        [
            "assert (~ Col A D B).",
            "VernacExtend",
            "b39a9df8eacb7b3663edbf6a7e384ac724058083"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A D C) by (conclude_def Col ).",
            "VernacExtend",
            "12a2942af064cd04595187a207f3964ead5f6480"
        ],
        [
            "assert (Col D A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5ecafa2b075cd4616d2a1bd920a1f00bd224fe3f"
        ],
        [
            "assert (Col D A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3b9c084590075a0b0c6cf29f98348a34cfa1b2a6"
        ],
        [
            "assert (neq A D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9593f1c3c73c1d514f6587ea75e30afd86ddb38b"
        ],
        [
            "assert (neq D A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "8c2d71a98f48066e4c95be7e226b24641861832e"
        ],
        [
            "assert (Col A C B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "7cbe57974e424d7805805e1480041014c4a84843"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Triangle A D B) by (conclude_def Triangle ).",
            "VernacExtend",
            "552600878bf380fb69155dddbcfb60e2d52e8249"
        ],
        [
            "assert (isosceles A D B) by (conclude_def isosceles ).",
            "VernacExtend",
            "e7d6d70411a67e44da962c18bb7122b69474b834"
        ],
        [
            "assert (CongA A D B A B D) by (conclude proposition_05).",
            "VernacExtend",
            "5585911219e9e66ff10dd6b87ab87c3c112da1a8"
        ],
        [
            "assert (Out C A D) by (conclude lemma_ray4).",
            "VernacExtend",
            "3021ab02531da0385d66e6f5372c037b110a2842"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Out C B B) by (conclude lemma_ray4).",
            "VernacExtend",
            "637eb8335a2163c1d041df3535e69682ab03a1ad"
        ],
        [
            "assert (~ Col A C B).",
            "VernacExtend",
            "3107643230c41d6aa35c76ec632c3401d8b052b1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA A C B A C B) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "6626cd1c09969a81bd4f33f96ed6cd567a6ef7cb"
        ],
        [
            "assert (CongA A C B D C B) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "1a04a6b5b61e9b6f1cfd2c01a2447be46dddc84c"
        ],
        [
            "assert (LtA A C B B D A) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "313ffccb942f91ec5809d2916794fe6ed4e59713"
        ],
        [
            "assert (CongA A D B B D A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "3bd05d6832b91b492e10822d335273d46adfdf03"
        ],
        [
            "assert (LtA A C B A D B) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "2ec76fe5082bce7054f8253469e54e713564343d"
        ],
        [
            "assert (CongA A B D A D B) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "d28eee7bb31bfe16cb5e28150162166a345f319f"
        ],
        [
            "assert (LtA A C B A B D) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "692b2dcd16d17ceafcbc5ca8fddf74fc79df4e3a"
        ],
        [
            "assert (~ Col B C A).",
            "VernacExtend",
            "f2ccde2b3f06377cdf6767f60a87564e90095b27"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B C A A C B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "75c7a8ed71ec0c2c1ab6810ae39b2eedb30caa17"
        ],
        [
            "assert (LtA B C A A B D) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "8174a0735c8fff807b0e7286abc26f543da4b0a8"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Out B C C) by (conclude lemma_ray4).",
            "VernacExtend",
            "a9badce1d2d93b32a5fe3eae0965bd326aa9fa41"
        ],
        [
            "assert (Out B A A) by (conclude lemma_ray4).",
            "VernacExtend",
            "6c6ec3ac616495dbfa731f8b969ff3f1e02b3fce"
        ],
        [
            "assert (~ Col A B D).",
            "VernacExtend",
            "ffc0da0a0d65cc00c93dfb4c1e8c861b87b50798"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A D B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "edc33073f65f8c33396bd233388052f607d9e550"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA A B D A B D) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "b50e2c30e7a00ba914b4a117f975a0c4b011a51f"
        ],
        [
            "assert (LtA A B D A B C) by (conclude_def LtA ).",
            "VernacExtend",
            "9664c49d6c7f35b447cb4a931a23fd3a20b33dfd"
        ],
        [
            "assert (LtA B C A A B C) by (conclude lemma_angleordertransitive).",
            "VernacExtend",
            "cefb7f7506fd8a8c0d354f57f3d0dd9070625104"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_18",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A B).",
                        "VernacExtend",
                        "4d33ecdae2e4081df5244e4a21a9919cae1a72e7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A C).",
                        "VernacExtend",
                        "bac3ad054000c7377a20191ed2a60671ee862b33"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq C A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "3e0de460aa8733a502d4f01459ffc0ac21de17d3"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A C A C) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "4e03037387b68aae11af367d5b093a719c4a5354"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists D, (BetS A D C /\\ Cong A D A B)) by (conclude proposition_03);destruct Tf as [D];spliter.",
                        "VernacExtend",
                        "2cb3a3bb46a0bb750908578364c291b9432f7a76"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C D).",
                        "VernacExtend",
                        "1f400b0de914ae951dba021fa809d8f95a2c5c27"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D C) by (conclude_def Col ).",
                        "VernacExtend",
                        "12a2942af064cd04595187a207f3964ead5f6480"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b4ed13d5f9f4239375e10dc6e0a6b6a68c2f6d96"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "dac741e71be8778833d3135c1db363ed1412abfc"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "1c018dd0cbcaf3db9508936af6dbabcf55d57bac"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle B C D) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "40be11cd41aa12caddaf9318b260de2b0bc8d080"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C D A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "a328aa404e3dd620dfdec7f222b2b7882076de4f"
                    ]
                },
                {
                    "command": [
                        "assert (LtA D C B B D A) by (conclude proposition_16).",
                        "VernacExtend",
                        "d3bdc6e00ec7e1b459aab6c397ce734e77c7c2af"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B C).",
                        "VernacExtend",
                        "2a4c174d5fcfb07079559ff9be73565058be28f2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C D) by (conclude_def Col ).",
                        "VernacExtend",
                        "afd1e2d0a6ae54ac1da609fde4731349b531ba6f"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f6de27d2290b224fed0d2ab5b24228893a410ec8"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A D B).",
                        "VernacExtend",
                        "b39a9df8eacb7b3663edbf6a7e384ac724058083"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D C) by (conclude_def Col ).",
                        "VernacExtend",
                        "12a2942af064cd04595187a207f3964ead5f6480"
                    ]
                },
                {
                    "command": [
                        "assert (Col D A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5ecafa2b075cd4616d2a1bd920a1f00bd224fe3f"
                    ]
                },
                {
                    "command": [
                        "assert (Col D A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3b9c084590075a0b0c6cf29f98348a34cfa1b2a6"
                    ]
                },
                {
                    "command": [
                        "assert (neq A D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9593f1c3c73c1d514f6587ea75e30afd86ddb38b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "8c2d71a98f48066e4c95be7e226b24641861832e"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "7cbe57974e424d7805805e1480041014c4a84843"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle A D B) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "552600878bf380fb69155dddbcfb60e2d52e8249"
                    ]
                },
                {
                    "command": [
                        "assert (isosceles A D B) by (conclude_def isosceles ).",
                        "VernacExtend",
                        "e7d6d70411a67e44da962c18bb7122b69474b834"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A D B A B D) by (conclude proposition_05).",
                        "VernacExtend",
                        "5585911219e9e66ff10dd6b87ab87c3c112da1a8"
                    ]
                },
                {
                    "command": [
                        "assert (Out C A D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "3021ab02531da0385d66e6f5372c037b110a2842"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Out C B B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "637eb8335a2163c1d041df3535e69682ab03a1ad"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A C B).",
                        "VernacExtend",
                        "3107643230c41d6aa35c76ec632c3401d8b052b1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A C B A C B) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "6626cd1c09969a81bd4f33f96ed6cd567a6ef7cb"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A C B D C B) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "1a04a6b5b61e9b6f1cfd2c01a2447be46dddc84c"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A C B B D A) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "313ffccb942f91ec5809d2916794fe6ed4e59713"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A D B B D A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "3bd05d6832b91b492e10822d335273d46adfdf03"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A C B A D B) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "2ec76fe5082bce7054f8253469e54e713564343d"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B D A D B) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "d28eee7bb31bfe16cb5e28150162166a345f319f"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A C B A B D) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "692b2dcd16d17ceafcbc5ca8fddf74fc79df4e3a"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C A).",
                        "VernacExtend",
                        "f2ccde2b3f06377cdf6767f60a87564e90095b27"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C A A C B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "75c7a8ed71ec0c2c1ab6810ae39b2eedb30caa17"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B C A A B D) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "8174a0735c8fff807b0e7286abc26f543da4b0a8"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "a9badce1d2d93b32a5fe3eae0965bd326aa9fa41"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "6c6ec3ac616495dbfa731f8b969ff3f1e02b3fce"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B D).",
                        "VernacExtend",
                        "ffc0da0a0d65cc00c93dfb4c1e8c861b87b50798"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "edc33073f65f8c33396bd233388052f607d9e550"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B D A B D) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "b50e2c30e7a00ba914b4a117f975a0c4b011a51f"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A B D A B C) by (conclude_def LtA ).",
                        "VernacExtend",
                        "9664c49d6c7f35b447cb4a931a23fd3a20b33dfd"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B C A A B C) by (conclude lemma_angleordertransitive).",
                        "VernacExtend",
                        "cefb7f7506fd8a8c0d354f57f3d0dd9070625104"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}