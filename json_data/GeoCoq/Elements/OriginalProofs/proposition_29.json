{
    "filename": "Elements/OriginalProofs/proposition_29.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_31.",
            "VernacRequire",
            "fa3f4e7478840f22d54885fa7d62f1d97b74f87c"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_crossbar2.",
            "VernacRequire",
            "ebfefd65fffdf95ed08035574f6dc56012b9a392"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_supplementinequality.",
            "VernacRequire",
            "e3728a05e1af47350b4eb697bad9b1b4cf77ff04"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_angletrichotomy2.",
            "VernacRequire",
            "2a594d688bceb2d17bd90adc30e56d2f79dc4593"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_supplementsymmetric.",
            "VernacRequire",
            "36714b4634975c371f857bd01fe30e71fcb76353"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_euclidean}.",
            "VernacContext",
            "46d5a1bab5cb652e851ee1112917f2bf32229649"
        ],
        [
            "Lemma proposition_29 : forall A B C D E G H, Par A B C D -> BetS A G B -> BetS C H D -> BetS E G H -> TS A G H D -> CongA A G H G H D /\\ CongA E G B G H D /\\ RT B G H G H D.",
            "VernacStartTheoremProof",
            "d784252c29e319bfc7473d83b48880d37c459329"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Col C H D) by (conclude_def Col ).",
            "VernacExtend",
            "72b6452e70fcdd0b4d2c5f02741008d1dc4d17fd"
        ],
        [
            "assert (neq G H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f58acd228c182b5e683f09f760fae997b311ffc8"
        ],
        [
            "assert (neq A B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "729d99d00883cb65929e87e6a48ea0634ac9dc68"
        ],
        [
            "assert (neq C D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ec8ed20fd91c966709071dfab476d123976a3733"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists R, (BetS A R D /\\ Col G H R /\\ nCol G H A)) by (conclude_def TS );destruct Tf as [R];spliter.",
            "VernacExtend",
            "cd2c7d746b37329ff637bb2f509aca5608d96584"
        ],
        [
            "assert (TS D G H A) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "c557e4ba8e6df668b4e2a69bf890166ddbf81f84"
        ],
        [
            "assert (nCol G H D) by (conclude_def TS ).",
            "VernacExtend",
            "bbe612b9111c553a4fe0b1dcda8f5286e20bcc43"
        ],
        [
            "assert (nCol D H G) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "82300a8c79ebafa0457936b55b548d878cbf78fe"
        ],
        [
            "assert (Col D H C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "987bd58ffde186b1b12e4ab50b25eae41f1194ca"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (Col D H H) by (conclude_def Col ).",
            "VernacExtend",
            "0aa938fb2c7d4a5e843e52f44f19540af1898cb0"
        ],
        [
            "assert (neq C H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "65b6100f729b144b587c069692a6abca4d2834e9"
        ],
        [
            "assert (nCol C H G) by (conclude lemma_NChelper).",
            "VernacExtend",
            "91025acf8ec560e7fd75e84a3b408d9771983e09"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col C H C) by (conclude_def Col ).",
            "VernacExtend",
            "0dd99703ac6e90765057c2370efcbcb2d08ff67a"
        ],
        [
            "assert (neq C D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ec8ed20fd91c966709071dfab476d123976a3733"
        ],
        [
            "assert (nCol C D G) by (conclude lemma_NChelper).",
            "VernacExtend",
            "86e1a4746229b1c9aaf854cde7dad664889dab19"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P Q S, (BetS P G Q /\\ CongA Q G H G H C /\\ CongA Q G H C H G /\\ CongA H G Q C H G /\\ CongA P G H G H D /\\ CongA P G H D H G /\\ CongA H G P D H G /\\ Par P Q C D /\\ Cong P G H D /\\ Cong G Q C H /\\ Cong G S S H /\\ Cong P S S D /\\ Cong C S S Q /\\ BetS P S D /\\ BetS C S Q /\\ BetS G S H)) by (conclude proposition_31);destruct Tf as [P[Q[S]]];spliter.",
            "VernacExtend",
            "548c6b913b59427e303acaea9f354fe24f84d7b9"
        ],
        [
            "assert (~ Meet A B C D) by (conclude_def Par ).",
            "VernacExtend",
            "4df950904e10e6c02dbd93543a6b743e3e012346"
        ],
        [
            "assert (eq P P) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "e88188554de7f503b71386a0ce3b6c77c61879af"
        ],
        [
            "assert (neq P G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "c21badc176133355f337d7802457c55723d68698"
        ],
        [
            "assert (neq G P) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "34c33805e04330934cc66a4f6b396c9c5fd65c6b"
        ],
        [
            "assert (Out G P P) by (conclude lemma_ray4).",
            "VernacExtend",
            "3ceb593b2f1fa22b5fec0c23a1629f1b51ac4ea9"
        ],
        [
            "assert (Col G S H) by (conclude_def Col ).",
            "VernacExtend",
            "7de600a730db11e8d7c094a680666b7465f7311c"
        ],
        [
            "assert (Col G H S) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "57799cb46476271fc8acc112986fa5bceb1b7cf7"
        ],
        [
            "assert (CongA G H D P G H) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "c9a7a399affd502822ccf677cca56023fc12e3e1"
        ],
        [
            "assert (nCol P G H) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "4f9c162cc4e746fcd225ac85cb47a72236342332"
        ],
        [
            "assert (nCol G H P) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "9ab42b8f97c7347c9752dc0e6a29a757018773cb"
        ],
        [
            "assert (OS A P G H) by (conclude_def OS ).",
            "VernacExtend",
            "027e7c9188f4a098c4e411567b6dbc87505a5402"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (neq G H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f58acd228c182b5e683f09f760fae997b311ffc8"
        ],
        [
            "assert (Out G H H) by (conclude lemma_ray4).",
            "VernacExtend",
            "0da79dc0fdbdf426dc94e017de1280d10243569c"
        ],
        [
            "assert (~ LtA H G A H G P).",
            "VernacExtend",
            "f3b0d5df7bcf55ae6b015beefe4a5beddd89c0a1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS P M H /\\ Out G A M)) by (conclude lemma_crossbar2);destruct Tf as [M];spliter.",
            "VernacExtend",
            "9d1eb89ffd8f8f940cbfbed57117d67d9cea46c3"
        ],
        [
            "assert (Cong G S H S) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "ef7b595ba162926222d0ce615647c2b15f514a80"
        ],
        [
            "assert (Cong S P S D) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "e65554b64dc9240e16a4ef89cd8e72c7690e8b60"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists K, (BetS G M K /\\ BetS D H K)) by (conclude postulate_Euclid5);destruct Tf as [K];spliter.",
            "VernacExtend",
            "037794f827d0570f6f3ce9841b6d94c807854c84"
        ],
        [
            "assert (Col G A M) by (conclude lemma_rayimpliescollinear).",
            "VernacExtend",
            "603b16e78602cf7d07a1ba4e378c9a3d00588be2"
        ],
        [
            "assert (Col G M K) by (conclude_def Col ).",
            "VernacExtend",
            "93a6fdd1ac641be188139bc366cc9924284131ac"
        ],
        [
            "assert (Col M G A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9566edba9e334af27afc31fa67d36c57cf481525"
        ],
        [
            "assert (Col M G K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d73abf2afcfd165a96a404f2556754005080f5cd"
        ],
        [
            "assert (neq G M) by (conclude lemma_raystrict).",
            "VernacExtend",
            "a706aa85cf458506eb59d3e60aeab2a0eaecbe7a"
        ],
        [
            "assert (neq M G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d0a345f72d4f78388cecb7440fe092f38d5f9570"
        ],
        [
            "assert (Col G A K) by (conclude lemma_collinear4).",
            "VernacExtend",
            "6352d4f4e7d214227a427334425ff1c83f97879a"
        ],
        [
            "assert (Col A G B) by (conclude_def Col ).",
            "VernacExtend",
            "2f55b58ec77a5a8623e4cd5ec3d180029dddb67a"
        ],
        [
            "assert (Col A G K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9cda241c533e48c55fb8aafface87e1b7bee0b06"
        ],
        [
            "assert (Col G A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7faaa20e85da645b8560f5681321c46156e4943c"
        ],
        [
            "assert (Col G A K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ece37a0bd8b39f5a2cca118e332fabcb6607be13"
        ],
        [
            "assert (neq A G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "01ce0c6f72655b04abd7b7bff327342bcc2d7010"
        ],
        [
            "assert (neq G A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "e2791ae9c412727db671b58f53b6b23174e66732"
        ],
        [
            "assert (Col A B K) by (conclude lemma_collinear4).",
            "VernacExtend",
            "afc2b185137277caea9c710bf587eedbbfa0bb75"
        ],
        [
            "assert (Col H D K) by (conclude_def Col ).",
            "VernacExtend",
            "18cfc75bb613b7dbbe21f9c81bb6346696896475"
        ],
        [
            "assert (Col H D C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b020340d2074c303bdd56057fa10e1d66df33704"
        ],
        [
            "assert (neq H D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "60bd0cea572f06becc9d58ac9799f36824992230"
        ],
        [
            "assert (Col D K C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "b2c52a63e64cf775fed9914bdccb58bfd6e3216a"
        ],
        [
            "assert (Col C D K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9e7881283a26530a702c8e7fcffc8e2dbcf98fe5"
        ],
        [
            "assert (Meet A B C D) by (conclude_def Meet ).",
            "VernacExtend",
            "3841d60693b9b925aa29ab7795a09f1a233bc444"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ LtA H G P H G A).",
            "VernacExtend",
            "908a61553306e5c37401c104af3996f35ad099a6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (nCol P G H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "2120d8e8dfa97e70b2866b8fbcbebb67e47ee92b"
        ],
        [
            "assert (CongA P G H H G P) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "4a626d40b5c7e75cadba6c466553a40724992366"
        ],
        [
            "assert (LtA P G H H G A) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "6df60e3f9a7dab37bf63042ef7fed4c4c570ea5e"
        ],
        [
            "assert (~ Col H G A).",
            "VernacExtend",
            "e3b76179e41561c0d7e483d994e9cb5740a2ea2b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col G H A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ba41708759caae6a6f59c0923b08a46ac34d7b25"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA H G A A G H) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "9647d9a8a1b7ac59be7c37cdf725b87391acf353"
        ],
        [
            "assert (CongA A G H H G A) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "be64fd88b1a650e8bc557028cbbbed8056f408d6"
        ],
        [
            "assert (LtA P G H A G H) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "b16fd81145a8fdda34fbbea0eb082ae7c394627d"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (Out G H H) by (conclude lemma_ray4).",
            "VernacExtend",
            "0da79dc0fdbdf426dc94e017de1280d10243569c"
        ],
        [
            "assert (Supp P G H H Q) by (conclude_def Supp ).",
            "VernacExtend",
            "c2a93fd71d9d6cab670aa36f49af5bd2d6d7fe9b"
        ],
        [
            "assert (BetS D H C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "4cdbfca5d339440cebb18edd7e38593366871c96"
        ],
        [
            "assert (eq G G) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
        ],
        [
            "assert (neq H G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d9df94dc080eef15b772bb805e3c034674809907"
        ],
        [
            "assert (Out H G G) by (conclude lemma_ray4).",
            "VernacExtend",
            "924b6a45583bc5b3c432589866e681d294582d58"
        ],
        [
            "assert (Supp D H G G C) by (conclude_def Supp ).",
            "VernacExtend",
            "b7131251a3d629d64ad45494ccc927a972b99b02"
        ],
        [
            "assert (CongA G H D D H G) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "4d4baa101affb5f0ae7db65327fcf52d45e031bd"
        ],
        [
            "assert (CongA P G H D H G) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "c528b7b42918c10b145b3154085cf6401b6173cd"
        ],
        [
            "assert (CongA H G Q G H C) by (conclude lemma_supplements).",
            "VernacExtend",
            "6399859b51f1cf86ec4a68ada42262fbc702be26"
        ],
        [
            "assert (Supp A G H H B) by (conclude_def Supp ).",
            "VernacExtend",
            "9f633f259d56beb45ab54c9494259b7144eb82ec"
        ],
        [
            "assert (LtA H G B H G Q) by (conclude lemma_supplementinequality).",
            "VernacExtend",
            "97bac0ea0b0e822a9db348c6eaf8a80397e58296"
        ],
        [
            "assert (BetS B G A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ebc159b7d726e35d109f030524b7fa40975263d3"
        ],
        [
            "assert (eq G G) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
        ],
        [
            "assert (Col G H G) by (conclude_def Col ).",
            "VernacExtend",
            "087ad4e46922f1209cf97725fc10d113a6fc9c57"
        ],
        [
            "assert (~ Col G H B).",
            "VernacExtend",
            "291df1cd528feaf3c5f8e779400e485e37bd1a7f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A G B) by (conclude_def Col ).",
            "VernacExtend",
            "2f55b58ec77a5a8623e4cd5ec3d180029dddb67a"
        ],
        [
            "assert (Col B G A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b20e9b952a59bfaf28c2c4237cb3b66d5e7ac22e"
        ],
        [
            "assert (Col B G H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4e8bf45e5a762d6ca9cebb16101e83b5fa335dca"
        ],
        [
            "assert (neq G B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ee5726e97085ead52f4cb2cb3b05e8d6d67c499b"
        ],
        [
            "assert (neq B G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "7e9aefc5ade8aeb56f89e17834b919a157b8aec0"
        ],
        [
            "assert (Col G A H) by (conclude lemma_collinear4).",
            "VernacExtend",
            "4c2ee2a390ba4d22944ef82b5ef29fd8f2833afd"
        ],
        [
            "assert (Col H G A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "de170d0a13b89653a5058cd193745830c1a53952"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (TS B G H A) by (conclude_def TS ).",
            "VernacExtend",
            "e3358e0b7f326413eec58175f19d9f285243dad7"
        ],
        [
            "assert (TS A G H B) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "0a6ef084154d2ea3ee0909fbfd18378c12b44653"
        ],
        [
            "assert (OS A P G H) by (conclude_def OS ).",
            "VernacExtend",
            "027e7c9188f4a098c4e411567b6dbc87505a5402"
        ],
        [
            "assert (OS P A G H) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "304555cc2a3288d55f4f7084fb11470f14d3d5cc"
        ],
        [
            "assert (TS P G H B) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "0503dd8cfb969fd5c7009fe8e95a7e94fc3a0137"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists L, (BetS P L B /\\ Col G H L /\\ nCol G H P)) by (conclude_def TS );destruct Tf as [L];spliter.",
            "VernacExtend",
            "6fc18dfd98a87203bfe427502d30c295861e3ca8"
        ],
        [
            "assert (BetS B L P) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "a2e0f852ee3b525890d21bb8d96f2af8cee7f2ff"
        ],
        [
            "assert (CongA G H C H G Q) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "c41e5b7d70dee100aef9bac24b7c9370511810ef"
        ],
        [
            "assert (nCol H G Q) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "7ada3f59a6b3d03f5bc82b1808b36038a9005863"
        ],
        [
            "assert (~ Col G H Q).",
            "VernacExtend",
            "77f3424ee126c53555af57b41c03e73d532c6875"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col H G Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "796d1e324d6f0e12a2605b40f8747c899471e9e1"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (BetS Q G P) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "6f03e6fd809f6003bf8ea0ec86dca681806cb38e"
        ],
        [
            "assert (OS B Q G H) by (conclude_def OS ).",
            "VernacExtend",
            "bd95acf4e116121a1c63731a68e48f3dbb3ab742"
        ],
        [
            "assert (eq Q Q) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "5b7edb63097c1388a6b5f7cdca8f660723b0d8c0"
        ],
        [
            "assert (neq Q G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "3b8ada5b17849ee8c9c41e1589c7a311dd6629a8"
        ],
        [
            "assert (neq G Q) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "8d0fd0722a30c0eb3be9ceb2e89bb627c9cee3be"
        ],
        [
            "assert (Out G Q Q) by (conclude lemma_ray4).",
            "VernacExtend",
            "e2982d2605e1f6c1cbea39ceec0352ba6f70d184"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS Q M H /\\ Out G B M)) by (conclude lemma_crossbar2);destruct Tf as [M];spliter.",
            "VernacExtend",
            "9935bfe8f220d3855f2bc1c44547c032496aa935"
        ],
        [
            "assert (Cong G S H S) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "ef7b595ba162926222d0ce615647c2b15f514a80"
        ],
        [
            "assert (BetS Q S C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "3d3cadede956a5caa95eebf03cfcc75cb5bfe226"
        ],
        [
            "assert (Cong S Q C S) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "a569af8232c8166642c7f1921027b1a1ee1d904d"
        ],
        [
            "assert (Cong S Q S C) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "3e2af794ff97d29f30b4f924afd92b2cac6e601a"
        ],
        [
            "assert (nCol G H C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "caf969fb026d6c17afbcdc0f28775942cc5784b0"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists K, (BetS G M K /\\ BetS C H K)) by (conclude postulate_Euclid5);destruct Tf as [K];spliter.",
            "VernacExtend",
            "4f6090ff54cfe9c366c855e5fa9e6d0407c17ff5"
        ],
        [
            "assert (Col G B M) by (conclude lemma_rayimpliescollinear).",
            "VernacExtend",
            "f329a038d558e64611a3adf9967d240ff0e879c9"
        ],
        [
            "assert (Col G M K) by (conclude_def Col ).",
            "VernacExtend",
            "93a6fdd1ac641be188139bc366cc9924284131ac"
        ],
        [
            "assert (Col M G B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "075841fef5c33af444edd6bfa8b193d4d7df4d35"
        ],
        [
            "assert (Col M G K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d73abf2afcfd165a96a404f2556754005080f5cd"
        ],
        [
            "assert (neq G M) by (conclude lemma_raystrict).",
            "VernacExtend",
            "a706aa85cf458506eb59d3e60aeab2a0eaecbe7a"
        ],
        [
            "assert (neq M G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d0a345f72d4f78388cecb7440fe092f38d5f9570"
        ],
        [
            "assert (Col G B K) by (conclude lemma_collinear4).",
            "VernacExtend",
            "a324aed7776187a5af92b042955058d4bcbd9e0e"
        ],
        [
            "assert (Col B G A) by (conclude_def Col ).",
            "VernacExtend",
            "4e530a6f32d4bdd7154425996ea6313a79b5daa7"
        ],
        [
            "assert (Col B G K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4e293cf82295dd3fdfb4697487f4fe2f64c802ce"
        ],
        [
            "assert (Col G B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f96cb78eb3a08d2995f43d315b6af3cd8e52f029"
        ],
        [
            "assert (Col G B K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "2b1e70c8851fcb12790a45e4bd4c7ff900a2abcb"
        ],
        [
            "assert (neq B G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "2d6c7920767599fa499e08f01a22a519ccef363c"
        ],
        [
            "assert (neq G B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "4df7838a9976b1e92363cbd8d89d5c0c1886e522"
        ],
        [
            "assert (Col B A K) by (conclude lemma_collinear4).",
            "VernacExtend",
            "191eb48e51227c794aca7736ba228e90051147bd"
        ],
        [
            "assert (Col A B K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1702458dcbc3e4b1190d0905e16b71dd0abbbd80"
        ],
        [
            "assert (Col H C K) by (conclude_def Col ).",
            "VernacExtend",
            "86b5152c57349d6f0470f0da33cd571ce469bbc5"
        ],
        [
            "assert (Col H C D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e166cf423c1e1c3942e52dbc7cf764e4e02d2e08"
        ],
        [
            "assert (neq H C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "0500b494e3b83e855d298500e21b45e8932b2f71"
        ],
        [
            "assert (Col C K D) by (conclude lemma_collinear4).",
            "VernacExtend",
            "0b6b834c1542f026f60dacffedaba489c1986e18"
        ],
        [
            "assert (Col C D K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9e7881283a26530a702c8e7fcffc8e2dbcf98fe5"
        ],
        [
            "assert (Meet A B C D) by (conclude_def Meet ).",
            "VernacExtend",
            "3841d60693b9b925aa29ab7795a09f1a233bc444"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col H G P).",
            "VernacExtend",
            "cabc1de7d804bedf85b4736d8d3241f2dfe60a7d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col G H P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "57b119c440c6f25ef02101e6e74e46d5ae59fba7"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col H G A).",
            "VernacExtend",
            "e3b76179e41561c0d7e483d994e9cb5740a2ea2b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col G H A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ba41708759caae6a6f59c0923b08a46ac34d7b25"
        ],
        [
            "assert (nCol G H A) by (conclude_def TS ).",
            "VernacExtend",
            "d5f26d7ce9b695187be81799442334aadffe67fb"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ ~ CongA H G A H G P).",
            "VernacExtend",
            "fc18f816f5a9bb96a3214642862bde40bf798e5c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (LtA H G A H G P) by (conclude lemma_angletrichotomy2).",
            "VernacExtend",
            "a7895cf98237876623a022d5d0923bd4678c46c2"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA H G P P G H) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "eedcbd70ac9a512d61e9a4d5551e01557e5cb7b5"
        ],
        [
            "assert (CongA H G P G H D) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "8fd55275b8073f2dc88e74953a830c3b0be09954"
        ],
        [
            "assert (CongA G H D D H G) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "4d4baa101affb5f0ae7db65327fcf52d45e031bd"
        ],
        [
            "assert (CongA H G P D H G) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "abad6801277fd8fe0272cbc9c4f33c482aa4bc54"
        ],
        [
            "assert (CongA H G A D H G) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "aa6a78e4648ecd249daef128c245c51cf733cd16"
        ],
        [
            "assert (~ Col A G H).",
            "VernacExtend",
            "ff288d9a3155f4920bdde7ddbe5b2357ead4d342"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col G H A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ba41708759caae6a6f59c0923b08a46ac34d7b25"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA A G H H G A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "15752b5caf2c151f30b79053b8bd1b279a776976"
        ],
        [
            "assert (CongA A G H D H G) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "c961411fe36b2e5d79a1b32d290040fdfcf25692"
        ],
        [
            "assert (nCol D H G) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "84970948423b953cc6c6062954f0073d57088c55"
        ],
        [
            "assert (CongA D H G G H D) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "a3db7fa50d7075539f611c5637b31e4962ee8cbc"
        ],
        [
            "assert (CongA A G H G H D) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "ccc019db01f8440b8b75095da09590e669c54bf7"
        ],
        [
            "assert (BetS H G E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "066d43f33ca9ab1285e640908762568b5503296a"
        ],
        [
            "assert (CongA A G H E G B) by (conclude proposition_15a).",
            "VernacExtend",
            "49a44da495e8ad2041b8e6a4c6074ddcd5eca016"
        ],
        [
            "assert (CongA E G B A G H) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "f402a751dead980fdb8087320e86b3e8a8f96deb"
        ],
        [
            "assert (CongA E G B G H D) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "53c3f615da0800e7a366af23bed4578e62d4716b"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (Out G H H) by (conclude lemma_ray4).",
            "VernacExtend",
            "0da79dc0fdbdf426dc94e017de1280d10243569c"
        ],
        [
            "assert (Supp A G H H B) by (conclude_def Supp ).",
            "VernacExtend",
            "9f633f259d56beb45ab54c9494259b7144eb82ec"
        ],
        [
            "assert (~ Col B G H).",
            "VernacExtend",
            "3ae38278d439b56d07de2c0de575f5b05dd28e20"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A G B) by (conclude_def Col ).",
            "VernacExtend",
            "2f55b58ec77a5a8623e4cd5ec3d180029dddb67a"
        ],
        [
            "assert (Col B G A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b20e9b952a59bfaf28c2c4237cb3b66d5e7ac22e"
        ],
        [
            "assert (neq G B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ee5726e97085ead52f4cb2cb3b05e8d6d67c499b"
        ],
        [
            "assert (neq B G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "7e9aefc5ade8aeb56f89e17834b919a157b8aec0"
        ],
        [
            "assert (Col G H A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "586b16bc191cb63d0a1f81f38b845a1d2e63997c"
        ],
        [
            "assert (Col A G H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "12f18aa67035f0c54c66f6f1bf78b1ecee09d65c"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B G H B G H) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "2ff7249e26a3f28101d54ab082750395077b0d34"
        ],
        [
            "assert (CongA G H D A G H) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "1c911f6bfbc7791b231d1ac2e00b8d34b1bdd101"
        ],
        [
            "assert (CongA A G H H G A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "15752b5caf2c151f30b79053b8bd1b279a776976"
        ],
        [
            "assert (CongA G H D H G A) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "b68c302c6688062180444bb0ef66ae028450d0d9"
        ],
        [
            "assert (Supp B G H H A) by (conclude lemma_supplementsymmetric).",
            "VernacExtend",
            "61c968456eeb3f2321466077ae0d496a4e26bad5"
        ],
        [
            "assert (RT B G H G H D) by (conclude_def RT ).",
            "VernacExtend",
            "42dfc7378f508de0102eab340cd2acf99aedc17e"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_29",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Col C H D) by (conclude_def Col ).",
                        "VernacExtend",
                        "72b6452e70fcdd0b4d2c5f02741008d1dc4d17fd"
                    ]
                },
                {
                    "command": [
                        "assert (neq G H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f58acd228c182b5e683f09f760fae997b311ffc8"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "729d99d00883cb65929e87e6a48ea0634ac9dc68"
                    ]
                },
                {
                    "command": [
                        "assert (neq C D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ec8ed20fd91c966709071dfab476d123976a3733"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists R, (BetS A R D /\\ Col G H R /\\ nCol G H A)) by (conclude_def TS );destruct Tf as [R];spliter.",
                        "VernacExtend",
                        "cd2c7d746b37329ff637bb2f509aca5608d96584"
                    ]
                },
                {
                    "command": [
                        "assert (TS D G H A) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "c557e4ba8e6df668b4e2a69bf890166ddbf81f84"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G H D) by (conclude_def TS ).",
                        "VernacExtend",
                        "bbe612b9111c553a4fe0b1dcda8f5286e20bcc43"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D H G) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "82300a8c79ebafa0457936b55b548d878cbf78fe"
                    ]
                },
                {
                    "command": [
                        "assert (Col D H C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "987bd58ffde186b1b12e4ab50b25eae41f1194ca"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (Col D H H) by (conclude_def Col ).",
                        "VernacExtend",
                        "0aa938fb2c7d4a5e843e52f44f19540af1898cb0"
                    ]
                },
                {
                    "command": [
                        "assert (neq C H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "65b6100f729b144b587c069692a6abca4d2834e9"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C H G) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "91025acf8ec560e7fd75e84a3b408d9771983e09"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col C H C) by (conclude_def Col ).",
                        "VernacExtend",
                        "0dd99703ac6e90765057c2370efcbcb2d08ff67a"
                    ]
                },
                {
                    "command": [
                        "assert (neq C D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ec8ed20fd91c966709071dfab476d123976a3733"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C D G) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "86e1a4746229b1c9aaf854cde7dad664889dab19"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists P Q S, (BetS P G Q /\\ CongA Q G H G H C /\\ CongA Q G H C H G /\\ CongA H G Q C H G /\\ CongA P G H G H D /\\ CongA P G H D H G /\\ CongA H G P D H G /\\ Par P Q C D /\\ Cong P G H D /\\ Cong G Q C H /\\ Cong G S S H /\\ Cong P S S D /\\ Cong C S S Q /\\ BetS P S D /\\ BetS C S Q /\\ BetS G S H)) by (conclude proposition_31);destruct Tf as [P[Q[S]]];spliter.",
                        "VernacExtend",
                        "548c6b913b59427e303acaea9f354fe24f84d7b9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet A B C D) by (conclude_def Par ).",
                        "VernacExtend",
                        "4df950904e10e6c02dbd93543a6b743e3e012346"
                    ]
                },
                {
                    "command": [
                        "assert (eq P P) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "e88188554de7f503b71386a0ce3b6c77c61879af"
                    ]
                },
                {
                    "command": [
                        "assert (neq P G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "c21badc176133355f337d7802457c55723d68698"
                    ]
                },
                {
                    "command": [
                        "assert (neq G P) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "34c33805e04330934cc66a4f6b396c9c5fd65c6b"
                    ]
                },
                {
                    "command": [
                        "assert (Out G P P) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "3ceb593b2f1fa22b5fec0c23a1629f1b51ac4ea9"
                    ]
                },
                {
                    "command": [
                        "assert (Col G S H) by (conclude_def Col ).",
                        "VernacExtend",
                        "7de600a730db11e8d7c094a680666b7465f7311c"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H S) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "57799cb46476271fc8acc112986fa5bceb1b7cf7"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G H D P G H) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "c9a7a399affd502822ccf677cca56023fc12e3e1"
                    ]
                },
                {
                    "command": [
                        "assert (nCol P G H) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "4f9c162cc4e746fcd225ac85cb47a72236342332"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G H P) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "9ab42b8f97c7347c9752dc0e6a29a757018773cb"
                    ]
                },
                {
                    "command": [
                        "assert (OS A P G H) by (conclude_def OS ).",
                        "VernacExtend",
                        "027e7c9188f4a098c4e411567b6dbc87505a5402"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (neq G H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f58acd228c182b5e683f09f760fae997b311ffc8"
                    ]
                },
                {
                    "command": [
                        "assert (Out G H H) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "0da79dc0fdbdf426dc94e017de1280d10243569c"
                    ]
                },
                {
                    "command": [
                        "assert (~ LtA H G A H G P).",
                        "VernacExtend",
                        "f3b0d5df7bcf55ae6b015beefe4a5beddd89c0a1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS P M H /\\ Out G A M)) by (conclude lemma_crossbar2);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "9d1eb89ffd8f8f940cbfbed57117d67d9cea46c3"
                    ]
                },
                {
                    "command": [
                        "assert (Cong G S H S) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "ef7b595ba162926222d0ce615647c2b15f514a80"
                    ]
                },
                {
                    "command": [
                        "assert (Cong S P S D) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "e65554b64dc9240e16a4ef89cd8e72c7690e8b60"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists K, (BetS G M K /\\ BetS D H K)) by (conclude postulate_Euclid5);destruct Tf as [K];spliter.",
                        "VernacExtend",
                        "037794f827d0570f6f3ce9841b6d94c807854c84"
                    ]
                },
                {
                    "command": [
                        "assert (Col G A M) by (conclude lemma_rayimpliescollinear).",
                        "VernacExtend",
                        "603b16e78602cf7d07a1ba4e378c9a3d00588be2"
                    ]
                },
                {
                    "command": [
                        "assert (Col G M K) by (conclude_def Col ).",
                        "VernacExtend",
                        "93a6fdd1ac641be188139bc366cc9924284131ac"
                    ]
                },
                {
                    "command": [
                        "assert (Col M G A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9566edba9e334af27afc31fa67d36c57cf481525"
                    ]
                },
                {
                    "command": [
                        "assert (Col M G K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d73abf2afcfd165a96a404f2556754005080f5cd"
                    ]
                },
                {
                    "command": [
                        "assert (neq G M) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "a706aa85cf458506eb59d3e60aeab2a0eaecbe7a"
                    ]
                },
                {
                    "command": [
                        "assert (neq M G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d0a345f72d4f78388cecb7440fe092f38d5f9570"
                    ]
                },
                {
                    "command": [
                        "assert (Col G A K) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "6352d4f4e7d214227a427334425ff1c83f97879a"
                    ]
                },
                {
                    "command": [
                        "assert (Col A G B) by (conclude_def Col ).",
                        "VernacExtend",
                        "2f55b58ec77a5a8623e4cd5ec3d180029dddb67a"
                    ]
                },
                {
                    "command": [
                        "assert (Col A G K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9cda241c533e48c55fb8aafface87e1b7bee0b06"
                    ]
                },
                {
                    "command": [
                        "assert (Col G A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7faaa20e85da645b8560f5681321c46156e4943c"
                    ]
                },
                {
                    "command": [
                        "assert (Col G A K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ece37a0bd8b39f5a2cca118e332fabcb6607be13"
                    ]
                },
                {
                    "command": [
                        "assert (neq A G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "01ce0c6f72655b04abd7b7bff327342bcc2d7010"
                    ]
                },
                {
                    "command": [
                        "assert (neq G A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "e2791ae9c412727db671b58f53b6b23174e66732"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B K) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "afc2b185137277caea9c710bf587eedbbfa0bb75"
                    ]
                },
                {
                    "command": [
                        "assert (Col H D K) by (conclude_def Col ).",
                        "VernacExtend",
                        "18cfc75bb613b7dbbe21f9c81bb6346696896475"
                    ]
                },
                {
                    "command": [
                        "assert (Col H D C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b020340d2074c303bdd56057fa10e1d66df33704"
                    ]
                },
                {
                    "command": [
                        "assert (neq H D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "60bd0cea572f06becc9d58ac9799f36824992230"
                    ]
                },
                {
                    "command": [
                        "assert (Col D K C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "b2c52a63e64cf775fed9914bdccb58bfd6e3216a"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9e7881283a26530a702c8e7fcffc8e2dbcf98fe5"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B C D) by (conclude_def Meet ).",
                        "VernacExtend",
                        "3841d60693b9b925aa29ab7795a09f1a233bc444"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ LtA H G P H G A).",
                        "VernacExtend",
                        "908a61553306e5c37401c104af3996f35ad099a6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (nCol P G H) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "2120d8e8dfa97e70b2866b8fbcbebb67e47ee92b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA P G H H G P) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "4a626d40b5c7e75cadba6c466553a40724992366"
                    ]
                },
                {
                    "command": [
                        "assert (LtA P G H H G A) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "6df60e3f9a7dab37bf63042ef7fed4c4c570ea5e"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col H G A).",
                        "VernacExtend",
                        "e3b76179e41561c0d7e483d994e9cb5740a2ea2b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ba41708759caae6a6f59c0923b08a46ac34d7b25"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G A A G H) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "9647d9a8a1b7ac59be7c37cdf725b87391acf353"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A G H H G A) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "be64fd88b1a650e8bc557028cbbbed8056f408d6"
                    ]
                },
                {
                    "command": [
                        "assert (LtA P G H A G H) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "b16fd81145a8fdda34fbbea0eb082ae7c394627d"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (Out G H H) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "0da79dc0fdbdf426dc94e017de1280d10243569c"
                    ]
                },
                {
                    "command": [
                        "assert (Supp P G H H Q) by (conclude_def Supp ).",
                        "VernacExtend",
                        "c2a93fd71d9d6cab670aa36f49af5bd2d6d7fe9b"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D H C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "4cdbfca5d339440cebb18edd7e38593366871c96"
                    ]
                },
                {
                    "command": [
                        "assert (eq G G) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
                    ]
                },
                {
                    "command": [
                        "assert (neq H G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d9df94dc080eef15b772bb805e3c034674809907"
                    ]
                },
                {
                    "command": [
                        "assert (Out H G G) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "924b6a45583bc5b3c432589866e681d294582d58"
                    ]
                },
                {
                    "command": [
                        "assert (Supp D H G G C) by (conclude_def Supp ).",
                        "VernacExtend",
                        "b7131251a3d629d64ad45494ccc927a972b99b02"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G H D D H G) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "4d4baa101affb5f0ae7db65327fcf52d45e031bd"
                    ]
                },
                {
                    "command": [
                        "assert (CongA P G H D H G) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "c528b7b42918c10b145b3154085cf6401b6173cd"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G Q G H C) by (conclude lemma_supplements).",
                        "VernacExtend",
                        "6399859b51f1cf86ec4a68ada42262fbc702be26"
                    ]
                },
                {
                    "command": [
                        "assert (Supp A G H H B) by (conclude_def Supp ).",
                        "VernacExtend",
                        "9f633f259d56beb45ab54c9494259b7144eb82ec"
                    ]
                },
                {
                    "command": [
                        "assert (LtA H G B H G Q) by (conclude lemma_supplementinequality).",
                        "VernacExtend",
                        "97bac0ea0b0e822a9db348c6eaf8a80397e58296"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B G A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ebc159b7d726e35d109f030524b7fa40975263d3"
                    ]
                },
                {
                    "command": [
                        "assert (eq G G) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H G) by (conclude_def Col ).",
                        "VernacExtend",
                        "087ad4e46922f1209cf97725fc10d113a6fc9c57"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col G H B).",
                        "VernacExtend",
                        "291df1cd528feaf3c5f8e779400e485e37bd1a7f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A G B) by (conclude_def Col ).",
                        "VernacExtend",
                        "2f55b58ec77a5a8623e4cd5ec3d180029dddb67a"
                    ]
                },
                {
                    "command": [
                        "assert (Col B G A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b20e9b952a59bfaf28c2c4237cb3b66d5e7ac22e"
                    ]
                },
                {
                    "command": [
                        "assert (Col B G H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4e8bf45e5a762d6ca9cebb16101e83b5fa335dca"
                    ]
                },
                {
                    "command": [
                        "assert (neq G B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ee5726e97085ead52f4cb2cb3b05e8d6d67c499b"
                    ]
                },
                {
                    "command": [
                        "assert (neq B G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "7e9aefc5ade8aeb56f89e17834b919a157b8aec0"
                    ]
                },
                {
                    "command": [
                        "assert (Col G A H) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "4c2ee2a390ba4d22944ef82b5ef29fd8f2833afd"
                    ]
                },
                {
                    "command": [
                        "assert (Col H G A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "de170d0a13b89653a5058cd193745830c1a53952"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (TS B G H A) by (conclude_def TS ).",
                        "VernacExtend",
                        "e3358e0b7f326413eec58175f19d9f285243dad7"
                    ]
                },
                {
                    "command": [
                        "assert (TS A G H B) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "0a6ef084154d2ea3ee0909fbfd18378c12b44653"
                    ]
                },
                {
                    "command": [
                        "assert (OS A P G H) by (conclude_def OS ).",
                        "VernacExtend",
                        "027e7c9188f4a098c4e411567b6dbc87505a5402"
                    ]
                },
                {
                    "command": [
                        "assert (OS P A G H) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "304555cc2a3288d55f4f7084fb11470f14d3d5cc"
                    ]
                },
                {
                    "command": [
                        "assert (TS P G H B) by (conclude lemma_planeseparation).",
                        "VernacExtend",
                        "0503dd8cfb969fd5c7009fe8e95a7e94fc3a0137"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists L, (BetS P L B /\\ Col G H L /\\ nCol G H P)) by (conclude_def TS );destruct Tf as [L];spliter.",
                        "VernacExtend",
                        "6fc18dfd98a87203bfe427502d30c295861e3ca8"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B L P) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "a2e0f852ee3b525890d21bb8d96f2af8cee7f2ff"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G H C H G Q) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "c41e5b7d70dee100aef9bac24b7c9370511810ef"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H G Q) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "7ada3f59a6b3d03f5bc82b1808b36038a9005863"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col G H Q).",
                        "VernacExtend",
                        "77f3424ee126c53555af57b41c03e73d532c6875"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col H G Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "796d1e324d6f0e12a2605b40f8747c899471e9e1"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (BetS Q G P) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "6f03e6fd809f6003bf8ea0ec86dca681806cb38e"
                    ]
                },
                {
                    "command": [
                        "assert (OS B Q G H) by (conclude_def OS ).",
                        "VernacExtend",
                        "bd95acf4e116121a1c63731a68e48f3dbb3ab742"
                    ]
                },
                {
                    "command": [
                        "assert (eq Q Q) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "5b7edb63097c1388a6b5f7cdca8f660723b0d8c0"
                    ]
                },
                {
                    "command": [
                        "assert (neq Q G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "3b8ada5b17849ee8c9c41e1589c7a311dd6629a8"
                    ]
                },
                {
                    "command": [
                        "assert (neq G Q) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "8d0fd0722a30c0eb3be9ceb2e89bb627c9cee3be"
                    ]
                },
                {
                    "command": [
                        "assert (Out G Q Q) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "e2982d2605e1f6c1cbea39ceec0352ba6f70d184"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS Q M H /\\ Out G B M)) by (conclude lemma_crossbar2);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "9935bfe8f220d3855f2bc1c44547c032496aa935"
                    ]
                },
                {
                    "command": [
                        "assert (Cong G S H S) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "ef7b595ba162926222d0ce615647c2b15f514a80"
                    ]
                },
                {
                    "command": [
                        "assert (BetS Q S C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "3d3cadede956a5caa95eebf03cfcc75cb5bfe226"
                    ]
                },
                {
                    "command": [
                        "assert (Cong S Q C S) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "a569af8232c8166642c7f1921027b1a1ee1d904d"
                    ]
                },
                {
                    "command": [
                        "assert (Cong S Q S C) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "3e2af794ff97d29f30b4f924afd92b2cac6e601a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G H C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "caf969fb026d6c17afbcdc0f28775942cc5784b0"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists K, (BetS G M K /\\ BetS C H K)) by (conclude postulate_Euclid5);destruct Tf as [K];spliter.",
                        "VernacExtend",
                        "4f6090ff54cfe9c366c855e5fa9e6d0407c17ff5"
                    ]
                },
                {
                    "command": [
                        "assert (Col G B M) by (conclude lemma_rayimpliescollinear).",
                        "VernacExtend",
                        "f329a038d558e64611a3adf9967d240ff0e879c9"
                    ]
                },
                {
                    "command": [
                        "assert (Col G M K) by (conclude_def Col ).",
                        "VernacExtend",
                        "93a6fdd1ac641be188139bc366cc9924284131ac"
                    ]
                },
                {
                    "command": [
                        "assert (Col M G B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "075841fef5c33af444edd6bfa8b193d4d7df4d35"
                    ]
                },
                {
                    "command": [
                        "assert (Col M G K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d73abf2afcfd165a96a404f2556754005080f5cd"
                    ]
                },
                {
                    "command": [
                        "assert (neq G M) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "a706aa85cf458506eb59d3e60aeab2a0eaecbe7a"
                    ]
                },
                {
                    "command": [
                        "assert (neq M G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d0a345f72d4f78388cecb7440fe092f38d5f9570"
                    ]
                },
                {
                    "command": [
                        "assert (Col G B K) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "a324aed7776187a5af92b042955058d4bcbd9e0e"
                    ]
                },
                {
                    "command": [
                        "assert (Col B G A) by (conclude_def Col ).",
                        "VernacExtend",
                        "4e530a6f32d4bdd7154425996ea6313a79b5daa7"
                    ]
                },
                {
                    "command": [
                        "assert (Col B G K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4e293cf82295dd3fdfb4697487f4fe2f64c802ce"
                    ]
                },
                {
                    "command": [
                        "assert (Col G B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f96cb78eb3a08d2995f43d315b6af3cd8e52f029"
                    ]
                },
                {
                    "command": [
                        "assert (Col G B K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "2b1e70c8851fcb12790a45e4bd4c7ff900a2abcb"
                    ]
                },
                {
                    "command": [
                        "assert (neq B G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "2d6c7920767599fa499e08f01a22a519ccef363c"
                    ]
                },
                {
                    "command": [
                        "assert (neq G B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "4df7838a9976b1e92363cbd8d89d5c0c1886e522"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A K) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "191eb48e51227c794aca7736ba228e90051147bd"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1702458dcbc3e4b1190d0905e16b71dd0abbbd80"
                    ]
                },
                {
                    "command": [
                        "assert (Col H C K) by (conclude_def Col ).",
                        "VernacExtend",
                        "86b5152c57349d6f0470f0da33cd571ce469bbc5"
                    ]
                },
                {
                    "command": [
                        "assert (Col H C D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e166cf423c1e1c3942e52dbc7cf764e4e02d2e08"
                    ]
                },
                {
                    "command": [
                        "assert (neq H C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "0500b494e3b83e855d298500e21b45e8932b2f71"
                    ]
                },
                {
                    "command": [
                        "assert (Col C K D) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "0b6b834c1542f026f60dacffedaba489c1986e18"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9e7881283a26530a702c8e7fcffc8e2dbcf98fe5"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B C D) by (conclude_def Meet ).",
                        "VernacExtend",
                        "3841d60693b9b925aa29ab7795a09f1a233bc444"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col H G P).",
                        "VernacExtend",
                        "cabc1de7d804bedf85b4736d8d3241f2dfe60a7d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "57b119c440c6f25ef02101e6e74e46d5ae59fba7"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col H G A).",
                        "VernacExtend",
                        "e3b76179e41561c0d7e483d994e9cb5740a2ea2b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ba41708759caae6a6f59c0923b08a46ac34d7b25"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G H A) by (conclude_def TS ).",
                        "VernacExtend",
                        "d5f26d7ce9b695187be81799442334aadffe67fb"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ ~ CongA H G A H G P).",
                        "VernacExtend",
                        "fc18f816f5a9bb96a3214642862bde40bf798e5c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (LtA H G A H G P) by (conclude lemma_angletrichotomy2).",
                        "VernacExtend",
                        "a7895cf98237876623a022d5d0923bd4678c46c2"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G P P G H) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "eedcbd70ac9a512d61e9a4d5551e01557e5cb7b5"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G P G H D) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "8fd55275b8073f2dc88e74953a830c3b0be09954"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G H D D H G) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "4d4baa101affb5f0ae7db65327fcf52d45e031bd"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G P D H G) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "abad6801277fd8fe0272cbc9c4f33c482aa4bc54"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G A D H G) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "aa6a78e4648ecd249daef128c245c51cf733cd16"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A G H).",
                        "VernacExtend",
                        "ff288d9a3155f4920bdde7ddbe5b2357ead4d342"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ba41708759caae6a6f59c0923b08a46ac34d7b25"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A G H H G A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "15752b5caf2c151f30b79053b8bd1b279a776976"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A G H D H G) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "c961411fe36b2e5d79a1b32d290040fdfcf25692"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D H G) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "84970948423b953cc6c6062954f0073d57088c55"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D H G G H D) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "a3db7fa50d7075539f611c5637b31e4962ee8cbc"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A G H G H D) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "ccc019db01f8440b8b75095da09590e669c54bf7"
                    ]
                },
                {
                    "command": [
                        "assert (BetS H G E) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "066d43f33ca9ab1285e640908762568b5503296a"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A G H E G B) by (conclude proposition_15a).",
                        "VernacExtend",
                        "49a44da495e8ad2041b8e6a4c6074ddcd5eca016"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E G B A G H) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "f402a751dead980fdb8087320e86b3e8a8f96deb"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E G B G H D) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "53c3f615da0800e7a366af23bed4578e62d4716b"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (Out G H H) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "0da79dc0fdbdf426dc94e017de1280d10243569c"
                    ]
                },
                {
                    "command": [
                        "assert (Supp A G H H B) by (conclude_def Supp ).",
                        "VernacExtend",
                        "9f633f259d56beb45ab54c9494259b7144eb82ec"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B G H).",
                        "VernacExtend",
                        "3ae38278d439b56d07de2c0de575f5b05dd28e20"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A G B) by (conclude_def Col ).",
                        "VernacExtend",
                        "2f55b58ec77a5a8623e4cd5ec3d180029dddb67a"
                    ]
                },
                {
                    "command": [
                        "assert (Col B G A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b20e9b952a59bfaf28c2c4237cb3b66d5e7ac22e"
                    ]
                },
                {
                    "command": [
                        "assert (neq G B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ee5726e97085ead52f4cb2cb3b05e8d6d67c499b"
                    ]
                },
                {
                    "command": [
                        "assert (neq B G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "7e9aefc5ade8aeb56f89e17834b919a157b8aec0"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "586b16bc191cb63d0a1f81f38b845a1d2e63997c"
                    ]
                },
                {
                    "command": [
                        "assert (Col A G H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "12f18aa67035f0c54c66f6f1bf78b1ecee09d65c"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B G H B G H) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "2ff7249e26a3f28101d54ab082750395077b0d34"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G H D A G H) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "1c911f6bfbc7791b231d1ac2e00b8d34b1bdd101"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A G H H G A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "15752b5caf2c151f30b79053b8bd1b279a776976"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G H D H G A) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "b68c302c6688062180444bb0ef66ae028450d0d9"
                    ]
                },
                {
                    "command": [
                        "assert (Supp B G H H A) by (conclude lemma_supplementsymmetric).",
                        "VernacExtend",
                        "61c968456eeb3f2321466077ae0d496a4e26bad5"
                    ]
                },
                {
                    "command": [
                        "assert (RT B G H G H D) by (conclude_def RT ).",
                        "VernacExtend",
                        "42dfc7378f508de0102eab340cd2acf99aedc17e"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}