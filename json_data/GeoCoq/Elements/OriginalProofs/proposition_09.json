{
    "filename": "Elements/OriginalProofs/proposition_09.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_10.",
            "VernacRequire",
            "0ea207e1bc9972bfee8d49dfe86dbf3dfd02f206"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_ABCequalsCBA.",
            "VernacRequire",
            "b41d962fe0e15082ca850c781a7005b05625160b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_equalanglestransitive.",
            "VernacRequire",
            "3d8572a356790eabfa0de91c4f9a3be03ecdf47e"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_09 : forall A B C, nCol B A C -> exists X, CongA B A X X A C /\\ InAngle B A C X.",
            "VernacStartTheoremProof",
            "c1dc40747f5943cd3feaed63948b2855c40cf025"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~ eq A B).",
            "VernacExtend",
            "4d33ecdae2e4081df5244e4a21a9919cae1a72e7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq B A) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "a9bda3e0bfac6a04429e8bc06513985b0869d13e"
        ],
        [
            "assert (Col B A C) by (conclude_def Col ).",
            "VernacExtend",
            "0a9dade7a73d450a134b8130679df44020c3d111"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq A C).",
            "VernacExtend",
            "bac3ad054000c7377a20191ed2a60671ee862b33"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A C) by (conclude_def Col ).",
            "VernacExtend",
            "0a9dade7a73d450a134b8130679df44020c3d111"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (Out A C E /\\ Cong A E A B)) by (conclude lemma_layoff);destruct Tf as [E];spliter.",
            "VernacExtend",
            "55c079f3586d222432dbe5368cf3dfeceb027c38"
        ],
        [
            "assert (~ eq B E).",
            "VernacExtend",
            "6ed1b09483a0cb88f77cb8717363a53289ae12bf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B E) by (conclude_def Col ).",
            "VernacExtend",
            "cb1e4569cbb7ad4caf776e0a6f60f35b634e0870"
        ],
        [
            "assert (Col A C E) by (conclude lemma_rayimpliescollinear).",
            "VernacExtend",
            "d4f6d2937e3ddecc5213bb295562302e186c881f"
        ],
        [
            "assert (Col E A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4613a5ad2a9e067edf77e8a304d7f80b70209516"
        ],
        [
            "assert (Col E A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "cf8a1b5b5f1e2cfc75e46bde4de52982bbf04a93"
        ],
        [
            "assert (neq A E) by (conclude lemma_raystrict).",
            "VernacExtend",
            "1b6eb133ce29949b65e2fa2864e855c9f52a1547"
        ],
        [
            "assert (neq E A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "5eef00ef1d0a882b209a09f629d7ffc97b7486d2"
        ],
        [
            "assert (Col A B C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "c7215293ea773f2ac1e4d0c1beeef08eedfcb697"
        ],
        [
            "assert (Col B A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS B F E /\\ Cong F B F E)) by (conclude proposition_10);destruct Tf as [F];spliter.",
            "VernacExtend",
            "c0c471b3c28a02200a598c2e1235ee092050c468"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (eq F F) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
        ],
        [
            "assert (Cong A F A F) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "b64d8d4101c4b771124419ae1fd09914d896b54c"
        ],
        [
            "assert (Cong A B A E) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "d04d818e764d53ac463fe43ad1fdfef829a498b8"
        ],
        [
            "assert (Cong E F B F) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "3bc29fa04d5726df69c579b37b19594679c04881"
        ],
        [
            "assert (Cong B F E F) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "240072fbaab32c8175e56bc640fad17f1f789d5c"
        ],
        [
            "assert (~ Col B A F).",
            "VernacExtend",
            "6bcbfdb39ee5bcc482ae9694783cc5937aae79d8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B F E) by (conclude_def Col ).",
            "VernacExtend",
            "d3d8ba90a84588a121541d162d6f4a757175b8b7"
        ],
        [
            "assert (Col F B E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "dcdaa12ff626c6232a8989ac62844b9189ef8e33"
        ],
        [
            "assert (Col F B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fab96fab873903b4c00e4f0ffb4198c270edd29e"
        ],
        [
            "assert (neq B F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "3311f7e0915ee01870bcf1d0e47bbc82a3005605"
        ],
        [
            "assert (neq F B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d5ad8910f3aca3a125d701424f1ef4dd08caa6ea"
        ],
        [
            "assert (Col B E A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "ee5ce967ba54eba367d7f93d54750732fa0031ce"
        ],
        [
            "assert (Col A C E) by (conclude lemma_rayimpliescollinear).",
            "VernacExtend",
            "d4f6d2937e3ddecc5213bb295562302e186c881f"
        ],
        [
            "assert (Col E A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4613a5ad2a9e067edf77e8a304d7f80b70209516"
        ],
        [
            "assert (Col E A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "cf8a1b5b5f1e2cfc75e46bde4de52982bbf04a93"
        ],
        [
            "assert (neq A E) by (conclude lemma_raystrict).",
            "VernacExtend",
            "1b6eb133ce29949b65e2fa2864e855c9f52a1547"
        ],
        [
            "assert (neq E A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "5eef00ef1d0a882b209a09f629d7ffc97b7486d2"
        ],
        [
            "assert (Col A B C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "c7215293ea773f2ac1e4d0c1beeef08eedfcb697"
        ],
        [
            "assert (Col B A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out A B B) by (conclude lemma_ray4).",
            "VernacExtend",
            "22813113886dbbdce7acaed310fef3f6d11d8640"
        ],
        [
            "assert (~ eq A F).",
            "VernacExtend",
            "2a8a2ec0944a2f57abf00f3ce82d3cd52ea0ca50"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A F) by (conclude_def Col ).",
            "VernacExtend",
            "81404a9d53029d406abb438df2ea88979dfd2db7"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out A F F) by (conclude lemma_ray4).",
            "VernacExtend",
            "ef3141479492a223e611ab450b5c0361b4e0ed1d"
        ],
        [
            "assert (CongA B A F C A F) by (conclude_def CongA ).",
            "VernacExtend",
            "ed6d1bf25e84c3e69a82c1001e7b8fb32ac7a99e"
        ],
        [
            "assert (CongA C A F B A F) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "c7c6ca9755263e1e7834a92f59fdbade401449fd"
        ],
        [
            "assert (nCol C A F) by (conclude_def CongA ).",
            "VernacExtend",
            "9b65d92e21e208cff5251fb42f90b4c606da5025"
        ],
        [
            "assert (CongA C A F F A C) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "e55ac8292ce8a193fe34aef5aa8dd65193743698"
        ],
        [
            "assert (CongA B A F F A C) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "edd8d50794e356e0d48af0a2405959ad0d864e60"
        ],
        [
            "assert (InAngle B A C F) by (conclude_def InAngle ).",
            "VernacExtend",
            "422fb3b6ef1e0733ac7ffebe04485f336224dfbe"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_09",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A B).",
                        "VernacExtend",
                        "4d33ecdae2e4081df5244e4a21a9919cae1a72e7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq B A) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "a9bda3e0bfac6a04429e8bc06513985b0869d13e"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude_def Col ).",
                        "VernacExtend",
                        "0a9dade7a73d450a134b8130679df44020c3d111"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A C).",
                        "VernacExtend",
                        "bac3ad054000c7377a20191ed2a60671ee862b33"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude_def Col ).",
                        "VernacExtend",
                        "0a9dade7a73d450a134b8130679df44020c3d111"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (Out A C E /\\ Cong A E A B)) by (conclude lemma_layoff);destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "55c079f3586d222432dbe5368cf3dfeceb027c38"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B E).",
                        "VernacExtend",
                        "6ed1b09483a0cb88f77cb8717363a53289ae12bf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B E) by (conclude_def Col ).",
                        "VernacExtend",
                        "cb1e4569cbb7ad4caf776e0a6f60f35b634e0870"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C E) by (conclude lemma_rayimpliescollinear).",
                        "VernacExtend",
                        "d4f6d2937e3ddecc5213bb295562302e186c881f"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4613a5ad2a9e067edf77e8a304d7f80b70209516"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "cf8a1b5b5f1e2cfc75e46bde4de52982bbf04a93"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "1b6eb133ce29949b65e2fa2864e855c9f52a1547"
                    ]
                },
                {
                    "command": [
                        "assert (neq E A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "5eef00ef1d0a882b209a09f629d7ffc97b7486d2"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "c7215293ea773f2ac1e4d0c1beeef08eedfcb697"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS B F E /\\ Cong F B F E)) by (conclude proposition_10);destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "c0c471b3c28a02200a598c2e1235ee092050c468"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (eq F F) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A F A F) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "b64d8d4101c4b771124419ae1fd09914d896b54c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B A E) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "d04d818e764d53ac463fe43ad1fdfef829a498b8"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E F B F) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "3bc29fa04d5726df69c579b37b19594679c04881"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B F E F) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "240072fbaab32c8175e56bc640fad17f1f789d5c"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B A F).",
                        "VernacExtend",
                        "6bcbfdb39ee5bcc482ae9694783cc5937aae79d8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B F E) by (conclude_def Col ).",
                        "VernacExtend",
                        "d3d8ba90a84588a121541d162d6f4a757175b8b7"
                    ]
                },
                {
                    "command": [
                        "assert (Col F B E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "dcdaa12ff626c6232a8989ac62844b9189ef8e33"
                    ]
                },
                {
                    "command": [
                        "assert (Col F B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fab96fab873903b4c00e4f0ffb4198c270edd29e"
                    ]
                },
                {
                    "command": [
                        "assert (neq B F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "3311f7e0915ee01870bcf1d0e47bbc82a3005605"
                    ]
                },
                {
                    "command": [
                        "assert (neq F B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d5ad8910f3aca3a125d701424f1ef4dd08caa6ea"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "ee5ce967ba54eba367d7f93d54750732fa0031ce"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C E) by (conclude lemma_rayimpliescollinear).",
                        "VernacExtend",
                        "d4f6d2937e3ddecc5213bb295562302e186c881f"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4613a5ad2a9e067edf77e8a304d7f80b70209516"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "cf8a1b5b5f1e2cfc75e46bde4de52982bbf04a93"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "1b6eb133ce29949b65e2fa2864e855c9f52a1547"
                    ]
                },
                {
                    "command": [
                        "assert (neq E A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "5eef00ef1d0a882b209a09f629d7ffc97b7486d2"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "c7215293ea773f2ac1e4d0c1beeef08eedfcb697"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out A B B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "22813113886dbbdce7acaed310fef3f6d11d8640"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A F).",
                        "VernacExtend",
                        "2a8a2ec0944a2f57abf00f3ce82d3cd52ea0ca50"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A F) by (conclude_def Col ).",
                        "VernacExtend",
                        "81404a9d53029d406abb438df2ea88979dfd2db7"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out A F F) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "ef3141479492a223e611ab450b5c0361b4e0ed1d"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A F C A F) by (conclude_def CongA ).",
                        "VernacExtend",
                        "ed6d1bf25e84c3e69a82c1001e7b8fb32ac7a99e"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C A F B A F) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "c7c6ca9755263e1e7834a92f59fdbade401449fd"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C A F) by (conclude_def CongA ).",
                        "VernacExtend",
                        "9b65d92e21e208cff5251fb42f90b4c606da5025"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C A F F A C) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "e55ac8292ce8a193fe34aef5aa8dd65193743698"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A F F A C) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "edd8d50794e356e0d48af0a2405959ad0d864e60"
                    ]
                },
                {
                    "command": [
                        "assert (InAngle B A C F) by (conclude_def InAngle ).",
                        "VernacExtend",
                        "422fb3b6ef1e0733ac7ffebe04485f336224dfbe"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}