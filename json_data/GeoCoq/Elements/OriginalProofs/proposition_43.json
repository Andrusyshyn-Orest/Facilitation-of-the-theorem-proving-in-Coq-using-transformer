{
    "filename": "Elements/OriginalProofs/proposition_43.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_PGflip.",
            "VernacRequire",
            "b12ef5c2dd5a6f01cd12aded94f3d03d3d29682e"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_34.",
            "VernacRequire",
            "41deb1163cc69d0109e8f8c584c8718b6d529795"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:area}.",
            "VernacContext",
            "81ffa005c6d27ee71f963c56f9847264efce50bb"
        ],
        [
            "Lemma proposition_43 : forall A B C D E F G H K, PG A B C D -> BetS A H D -> BetS A E B -> BetS D F C -> BetS B G C -> BetS A K C -> PG E A H K -> PG G K F C -> EF K G B E D F K H.",
            "VernacStartTheoremProof",
            "683fcae25bbe07adaebceb6a5f9a8f0858901e2d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (PG B A D C) by (conclude lemma_PGflip).",
            "VernacExtend",
            "83caa8bf4ea6d87ddfca162de4d6e81952dca59e"
        ],
        [
            "assert (Cong_3 A B C C D A) by (conclude proposition_34).",
            "VernacExtend",
            "e2cd32a26eaa538432628b7904fdfb63bdcab652"
        ],
        [
            "assert (ET A B C C D A) by (conclude axiom_congruentequal).",
            "VernacExtend",
            "1247004586d12ef7468a81765c8790810c4085c6"
        ],
        [
            "assert (Cong_3 A E K K H A) by (conclude proposition_34).",
            "VernacExtend",
            "9ed6ebeeb1a91abaa538d70a606848339a41204a"
        ],
        [
            "assert (ET A E K K H A) by (conclude axiom_congruentequal).",
            "VernacExtend",
            "ef865cc9d3a536cf33d86b11884d0a684eee31b6"
        ],
        [
            "assert (Cong_3 K G C C F K) by (conclude proposition_34).",
            "VernacExtend",
            "ec9ac3d91c9c1e1018e3562d36df1c403be0d0a9"
        ],
        [
            "assert (ET K G C C F K) by (conclude axiom_congruentequal).",
            "VernacExtend",
            "980a90ab13078ed2f5f0801e7c6dc92e2f9d5f65"
        ],
        [
            "assert (ET K G C K C F) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "826350b56de180c9409de82be2d1431e19ca63b9"
        ],
        [
            "assert (ET K C F K G C) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "05bf153d5448dd4d021b5e6eea9622dfe52b44f0"
        ],
        [
            "assert (ET K C F K C G) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "c11c170b5b94c1a41b51d3179001c89359fd0ec2"
        ],
        [
            "assert (ET K C G K C F) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "a0f2eee0134fdb128bc29e58d3a0df6c8f455cbf"
        ],
        [
            "assert (ET A B C A C D) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "2ac38974bff606b57eecddccfd5ccf9db06882cf"
        ],
        [
            "assert (ET A C D A B C) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "50882b2ecc39d2dedc8ea5c97c54b2e4699fb2fa"
        ],
        [
            "assert (ET A C D A C B) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "a5c35ee7912b1859b83fe5ce19a7110140f63fb5"
        ],
        [
            "assert (ET A C B A C D) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "8d0d3fd3791a6ab4cf5f6d37ac94d2fa0724b0e8"
        ],
        [
            "assert (EF A K G B A K F D) by (conclude axiom_cutoff1).",
            "VernacExtend",
            "f51efec3ed5ef19bc50801170b6b77e099c27c4a"
        ],
        [
            "assert (BetS B E A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "e1ec45eef27e11b2ea2d8c8bba4dbc231d17e9ac"
        ],
        [
            "assert (BetS D H A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "12814a5520e62e0fa77ae985a8ef3f049b4bef2a"
        ],
        [
            "assert (ET A E K H A K) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "50131876fc1f31a208560791dc6fef2458791143"
        ],
        [
            "assert (ET H A K A E K) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "1eeeabfec92d16ec20dd473afb7b484a57082bf4"
        ],
        [
            "assert (ET H A K E A K) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "711c3a15f7c52a7fb157a81e8bbac54be29c14ce"
        ],
        [
            "assert (ET E A K H A K) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "693ba463cb361393594ebd3ad0e0bde378fb9a70"
        ],
        [
            "assert (EF A K G B F D A K) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "3a31fe431570a92a4ca476e02e7908c7010f2ec3"
        ],
        [
            "assert (EF F D A K A K G B) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "1992a79f7ce2c81f6882344d3bfe071fb2ad9116"
        ],
        [
            "assert (EF F D A K G B A K) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "c6e694c2169a18f560203e6744a5bb6fff9a42f2"
        ],
        [
            "assert (EF G B A K F D A K) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "5a936d779d3af6bf394053737f2dfcaf6b496a1d"
        ],
        [
            "assert (EF G B E K F D H K) by (conclude axiom_cutoff2).",
            "VernacExtend",
            "d23e4b5b2401e01a55196cdf1988dcef6c2d0288"
        ],
        [
            "assert (EF G B E K D F K H) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "3f3a1e51aa9a0dd4d8bfd48ddab91ac53e143d02"
        ],
        [
            "assert (EF D F K H G B E K) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "91755d174d40e179ded8f834a5e843318d6defc2"
        ],
        [
            "assert (EF D F K H K G B E) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "fc55d9bba3ef185b522b5c2c4def1c84de5dd001"
        ],
        [
            "assert (EF K G B E D F K H) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "64cc412a7248c738d2a64525f5237a9f654a17ea"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_43",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (PG B A D C) by (conclude lemma_PGflip).",
                        "VernacExtend",
                        "83caa8bf4ea6d87ddfca162de4d6e81952dca59e"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 A B C C D A) by (conclude proposition_34).",
                        "VernacExtend",
                        "e2cd32a26eaa538432628b7904fdfb63bdcab652"
                    ]
                },
                {
                    "command": [
                        "assert (ET A B C C D A) by (conclude axiom_congruentequal).",
                        "VernacExtend",
                        "1247004586d12ef7468a81765c8790810c4085c6"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 A E K K H A) by (conclude proposition_34).",
                        "VernacExtend",
                        "9ed6ebeeb1a91abaa538d70a606848339a41204a"
                    ]
                },
                {
                    "command": [
                        "assert (ET A E K K H A) by (conclude axiom_congruentequal).",
                        "VernacExtend",
                        "ef865cc9d3a536cf33d86b11884d0a684eee31b6"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 K G C C F K) by (conclude proposition_34).",
                        "VernacExtend",
                        "ec9ac3d91c9c1e1018e3562d36df1c403be0d0a9"
                    ]
                },
                {
                    "command": [
                        "assert (ET K G C C F K) by (conclude axiom_congruentequal).",
                        "VernacExtend",
                        "980a90ab13078ed2f5f0801e7c6dc92e2f9d5f65"
                    ]
                },
                {
                    "command": [
                        "assert (ET K G C K C F) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "826350b56de180c9409de82be2d1431e19ca63b9"
                    ]
                },
                {
                    "command": [
                        "assert (ET K C F K G C) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "05bf153d5448dd4d021b5e6eea9622dfe52b44f0"
                    ]
                },
                {
                    "command": [
                        "assert (ET K C F K C G) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "c11c170b5b94c1a41b51d3179001c89359fd0ec2"
                    ]
                },
                {
                    "command": [
                        "assert (ET K C G K C F) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "a0f2eee0134fdb128bc29e58d3a0df6c8f455cbf"
                    ]
                },
                {
                    "command": [
                        "assert (ET A B C A C D) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "2ac38974bff606b57eecddccfd5ccf9db06882cf"
                    ]
                },
                {
                    "command": [
                        "assert (ET A C D A B C) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "50882b2ecc39d2dedc8ea5c97c54b2e4699fb2fa"
                    ]
                },
                {
                    "command": [
                        "assert (ET A C D A C B) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "a5c35ee7912b1859b83fe5ce19a7110140f63fb5"
                    ]
                },
                {
                    "command": [
                        "assert (ET A C B A C D) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "8d0d3fd3791a6ab4cf5f6d37ac94d2fa0724b0e8"
                    ]
                },
                {
                    "command": [
                        "assert (EF A K G B A K F D) by (conclude axiom_cutoff1).",
                        "VernacExtend",
                        "f51efec3ed5ef19bc50801170b6b77e099c27c4a"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B E A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "e1ec45eef27e11b2ea2d8c8bba4dbc231d17e9ac"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D H A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "12814a5520e62e0fa77ae985a8ef3f049b4bef2a"
                    ]
                },
                {
                    "command": [
                        "assert (ET A E K H A K) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "50131876fc1f31a208560791dc6fef2458791143"
                    ]
                },
                {
                    "command": [
                        "assert (ET H A K A E K) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "1eeeabfec92d16ec20dd473afb7b484a57082bf4"
                    ]
                },
                {
                    "command": [
                        "assert (ET H A K E A K) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "711c3a15f7c52a7fb157a81e8bbac54be29c14ce"
                    ]
                },
                {
                    "command": [
                        "assert (ET E A K H A K) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "693ba463cb361393594ebd3ad0e0bde378fb9a70"
                    ]
                },
                {
                    "command": [
                        "assert (EF A K G B F D A K) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "3a31fe431570a92a4ca476e02e7908c7010f2ec3"
                    ]
                },
                {
                    "command": [
                        "assert (EF F D A K A K G B) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "1992a79f7ce2c81f6882344d3bfe071fb2ad9116"
                    ]
                },
                {
                    "command": [
                        "assert (EF F D A K G B A K) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "c6e694c2169a18f560203e6744a5bb6fff9a42f2"
                    ]
                },
                {
                    "command": [
                        "assert (EF G B A K F D A K) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "5a936d779d3af6bf394053737f2dfcaf6b496a1d"
                    ]
                },
                {
                    "command": [
                        "assert (EF G B E K F D H K) by (conclude axiom_cutoff2).",
                        "VernacExtend",
                        "d23e4b5b2401e01a55196cdf1988dcef6c2d0288"
                    ]
                },
                {
                    "command": [
                        "assert (EF G B E K D F K H) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "3f3a1e51aa9a0dd4d8bfd48ddab91ac53e143d02"
                    ]
                },
                {
                    "command": [
                        "assert (EF D F K H G B E K) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "91755d174d40e179ded8f834a5e843318d6defc2"
                    ]
                },
                {
                    "command": [
                        "assert (EF D F K H K G B E) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "fc55d9bba3ef185b522b5c2c4def1c84de5dd001"
                    ]
                },
                {
                    "command": [
                        "assert (EF K G B E D F K H) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "64cc412a7248c738d2a64525f5237a9f654a17ea"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}