{
    "filename": "Elements/OriginalProofs/proposition_22.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthannotequal.",
            "VernacRequire",
            "49bebd2c26d0121b4beeb9f8c9036507830e245d"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_together.",
            "VernacRequire",
            "258b37dc9751e446583fffffafd204202e741b3f"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_ray5.",
            "VernacRequire",
            "8939dbe9243f062c6c64f3cf41cffbe849572870"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_subtractequals.",
            "VernacRequire",
            "d5b48845af3b310e75d8735ef376d0a4c2a89306"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_ondiameter.",
            "VernacRequire",
            "ac19a192baa12eac200a94f60241d6bed70541c4"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_togethera : forall A B C D F G P Q a b c : Point, TG A a B b C c -> Cong D F A a -> Cong F G B b -> BetS D F G -> Cong P Q C c -> Lt P Q D G.",
            "VernacStartTheoremProof",
            "b4b6ff186d3dd38b382bf65b97ccdc3becec7b46"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (lemma_together A B C D F G P Q a b c);auto.",
            "VernacExtend",
            "6b6d960f88395f2fb82309661cc8d748c0e31dc1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proposition_22 : forall A B C E F a b c, TG A a B b C c -> TG A a C c B b -> TG B b C c A a -> neq F E -> exists X Y, Cong F X B b /\\ Cong F Y A a /\\ Cong X Y C c /\\ Out F E X /\\ Triangle F X Y.",
            "VernacStartTheoremProof",
            "7e5af1787452e5ecb1f43bdb6082da77f5b60acd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P, (BetS A a P /\\ Cong a P B b /\\ Lt C c A P)) by (conclude_def TG );destruct Tf as [P];spliter.",
            "VernacExtend",
            "be076d3af2771927e244195b364d62b2057c1c88"
        ],
        [
            "assert (neq A a) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "48e4d4b38b32938796c5a51b35f81527da0b9281"
        ],
        [
            "assert (neq a P) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "88d8c3c4918f03819cb3addb31dd61cf8c9a9ff0"
        ],
        [
            "assert (neq B b) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "38fb80f634ab5649b2c94550687dcfb7c5a4fb2d"
        ],
        [
            "assert (neq C c) by (forward_using lemma_lessthannotequal).",
            "VernacExtend",
            "c4a0de464d933404726cf4a9c9ec404604cd4461"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists G, (Out F E G /\\ Cong F G B b)) by (conclude lemma_layoff);destruct Tf as [G];spliter.",
            "VernacExtend",
            "848b5860d18595b7957576e3d97fd1448e9ddc16"
        ],
        [
            "assert (Cong B b F G) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "763a092edeadc0e296769c963c81f4b02a44f969"
        ],
        [
            "assert (neq F G) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "0bd66a5969ee04a1aeb579609c8af40f31a6fe19"
        ],
        [
            "assert (neq G F) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "18ce634591904d2545bfc039f7728a43b6c70258"
        ],
        [
            "rename_H H;let Tf:=fresh in assert (Tf:exists H, (BetS F G H /\\ Cong G H C c)) by (conclude lemma_extension);destruct Tf as [H];spliter.",
            "VernacExtend",
            "ec134bbea02277cd274b10308a0460a4ea5683ab"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists D, (BetS G F D /\\ Cong F D A a)) by (conclude lemma_extension);destruct Tf as [D];spliter.",
            "VernacExtend",
            "de063c9843b3cb55398a5e92b1153acf52a8a82d"
        ],
        [
            "assert (Cong D F A a) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "b952b76113d8d0ff7f9d5f8270516bba30404519"
        ],
        [
            "assert (BetS D F G) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "24a184f49a06f33bc10cd1c58fb18cf05e36085c"
        ],
        [
            "assert (neq F D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8e9379a5496bffdc0134dc59d97510d99acc28ce"
        ],
        [
            "assert (neq G H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f58acd228c182b5e683f09f760fae997b311ffc8"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists L, CI L F F D) by (conclude postulate_Euclid3);destruct Tf as [L];spliter.",
            "VernacExtend",
            "e2aa0487ea9389da0993260b6ae4c44f0a1526c1"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists R, CI R G G H) by (conclude postulate_Euclid3);destruct Tf as [R];spliter.",
            "VernacExtend",
            "5decf779232efdf462def60d4266df3efbba7c13"
        ],
        [
            "assert (Cong G H G H) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "11c09e8ceba51073ad827b9c7dffc51fb9f1371f"
        ],
        [
            "assert (OnCirc H R) by (conclude_def OnCirc ).",
            "VernacExtend",
            "1379f2988acc9ee363df438bce67f3ab5afb22e0"
        ],
        [
            "assert (Lt D F F H) by (conclude lemma_together).",
            "VernacExtend",
            "c43fdf6c1f191e6eba64ae814152d26696923509"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS F M H /\\ Cong F M D F)) by (conclude_def Lt );destruct Tf as [M];spliter.",
            "VernacExtend",
            "dc424427fbf39eb9240f6122e0883f634c3b5a18"
        ],
        [
            "assert (Cong F M A a) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "e2abfb21d234a620473f543de31bd2cf5d89b411"
        ],
        [
            "assert (Cong A a F M) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "fb24765ba31b9419eeea22f4de44076d053de835"
        ],
        [
            "assert (Cong A a F D) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "a7d64ad9a4569d2999b2d2cc85bc1688cc258bd3"
        ],
        [
            "assert (Cong F M F D) by (conclude cn_congruencetransitive).",
            "VernacExtend",
            "02fd86339ac3b6067fa6eeec5e532c788fb1162f"
        ],
        [
            "assert (OutCirc H L) by (conclude_def OutCirc ).",
            "VernacExtend",
            "15957dcf4549cafabee4d8a9fc99c24dfb83eb85"
        ],
        [
            "assert (Cong C c C c) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "7575eed24ef1e14a3d8fb9821d464c20c20c84c4"
        ],
        [
            "assert (Lt C c D G) by (conclude lemma_togethera).",
            "VernacExtend",
            "be1c11ec01c3bb1c95e486f8fb868e0b06a70fa8"
        ],
        [
            "assert (Cong D G G D) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "589616d67a95c91e9101ae6da6cf39f4e1f93c90"
        ],
        [
            "assert (Lt C c G D) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "07b20f1b411c23be97aba70051f0e94e577b2f53"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists N, (BetS G N D /\\ Cong G N C c)) by (conclude_def Lt );destruct Tf as [N];spliter.",
            "VernacExtend",
            "c99b10e243f56413997d3e20386907fef7c60d70"
        ],
        [
            "assert (BetS D F H) by (conclude lemma_3_7b).",
            "VernacExtend",
            "4ca5456f423bfec0f2fde2ec377234ed52a7b8be"
        ],
        [
            "assert (BetS D F M) by (conclude axiom_innertransitivity).",
            "VernacExtend",
            "832613671b469620199d050edaaeaab3bd33a1e2"
        ],
        [
            "assert (Cong F D A a) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "2d46000779d2d6df071604bd37ce076aab240503"
        ],
        [
            "assert (BetS D N G) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "bc6b812f123229d9c2b690bd0c417fc84313ceb9"
        ],
        [
            "assert (neq F M) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "fb8ff667c1306f35416fd97d1c0c4299b707d732"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists J, (BetS F M J /\\ Cong M J C c)) by (conclude lemma_extension);destruct Tf as [J];spliter.",
            "VernacExtend",
            "a62356d93b1f905750b8131b4fd0b0d98de06a21"
        ],
        [
            "assert (BetS D F J) by (conclude lemma_3_7b).",
            "VernacExtend",
            "9b7ed17ebbee51b082b385a90bb37e29c48ea17c"
        ],
        [
            "assert ((Lt F G F J /\\ neq A a /\\ neq C c /\\ neq B b)) by (conclude lemma_together).",
            "VernacExtend",
            "27dc1280c5f29c5d22f15c9a56ad337ff9638c03"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists Q, (BetS F Q J /\\ Cong F Q F G)) by (conclude_def Lt );destruct Tf as [Q];spliter.",
            "VernacExtend",
            "7b5bd7cc02e1c5073c49c81ad1a5592723ad814c"
        ],
        [
            "assert (neq F J) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "18ef347e0cd6cfe3a10e372bb610bc64dc10940d"
        ],
        [
            "assert (Out F J Q) by (conclude lemma_ray4).",
            "VernacExtend",
            "ff1259c82b39f8d758b6b18584a3a40768b26517"
        ],
        [
            "assert (Out F G J) by (conclude_def Out ).",
            "VernacExtend",
            "25423e23735da69071391b1f721387e119d58934"
        ],
        [
            "assert (Out F J G) by (conclude lemma_ray5).",
            "VernacExtend",
            "ef0eb79790363220163742d86b236b3df9b7da00"
        ],
        [
            "assert (eq Q G) by (conclude lemma_layoffunique).",
            "VernacExtend",
            "db2079a73d265f07d9734097b8a7c74b49f3175a"
        ],
        [
            "assert (eq G Q) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "aec5e005cce99fe7271540bb67c4321bec7eaf31"
        ],
        [
            "assert (BetS F G J) by (conclude cn_equalitysub).",
            "VernacExtend",
            "b8b45cdc2f3533ec4dfb3f4a005181397ce1de4b"
        ],
        [
            "assert (BetS D G J) by (conclude lemma_3_7a).",
            "VernacExtend",
            "84121773c368c46fced1e3898d4ce52ffb4ad0cb"
        ],
        [
            "assert (Cong C c M J) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "a892a71bbd802503a285d8ccb67f280a14e11e11"
        ],
        [
            "assert (Cong G N M J) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "fb10407c4773c6cda72ad653f510a3bc243ca157"
        ],
        [
            "assert (Cong N G M J) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "7558d7cc70055e0d9a987ee8ec8bb36ee09d8854"
        ],
        [
            "assert (BetS D M J) by (conclude lemma_3_7a).",
            "VernacExtend",
            "143a1ff39cda19573cda981761e5d38185ef00ac"
        ],
        [
            "assert (BetS D N M) by (conclude lemma_subtractequals).",
            "VernacExtend",
            "16f62fc82320a4c666322b460b9cd356db5fdcc5"
        ],
        [
            "assert (Cong F D F D) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "4702a4f271ce487fc67eb3738f859e7ad62ae8c0"
        ],
        [
            "assert (InCirc N L) by (conclude lemma_ondiameter).",
            "VernacExtend",
            "5e6871a05c5165074d76d8f08d2d6d6f0a59c17f"
        ],
        [
            "assert (Cong C c G H) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "1f112e3bb6bc608c44c3a21c4f1a772ceba74360"
        ],
        [
            "assert (Cong C c G N) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "ead2a21780f6b04e25410875ac054a8a6880030e"
        ],
        [
            "assert (Cong G N G H) by (conclude cn_congruencetransitive).",
            "VernacExtend",
            "7d773eba4339a53b75cef48dd3a42d6c788e7895"
        ],
        [
            "assert (OnCirc N R) by (conclude_def OnCirc ).",
            "VernacExtend",
            "1453e2fb292b42223fde4f5c8bf6ffe98b446d04"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists K, (OnCirc K L /\\ OnCirc K R)) by (conclude postulate_circle_circle);destruct Tf as [K];spliter.",
            "VernacExtend",
            "63737e492e8bee3e2d13e13a356bf8f96a038f98"
        ],
        [
            "assert (Cong F K F D) by (conclude axiom_circle_center_radius).",
            "VernacExtend",
            "74de3d18e04afb83cc100390014db9f0cd10b8ee"
        ],
        [
            "assert (Cong F K A a) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "4804488e053b4fddc518b9266cb02a1f0b7b8bfd"
        ],
        [
            "assert (Cong G K G H) by (conclude axiom_circle_center_radius).",
            "VernacExtend",
            "9bf3e4ee368773c3a27887979b0bc0c7ee3afdf1"
        ],
        [
            "assert (Cong G K C c) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "312f8de75c5eb8047bb2a1dd90d5ef53ed206680"
        ],
        [
            "assert (~ Col F G K).",
            "VernacExtend",
            "e46efdbe45e1f4a38fdf344aa9734c204a963f82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert ((eq F G \\/ eq F K \\/ eq G K \\/ BetS G F K \\/ BetS F G K \\/ BetS F K G)) by (conclude_def Col ).",
            "VernacExtend",
            "849a3b0af477216c6baa9e08b7d9ceb180a25e14"
        ],
        [
            "assert (nCol F G K).",
            "VernacExtend",
            "77df31d04d03da21420d6e0452d54bd13e7d2b16"
        ],
        [
            "by cases on (eq F G \\/ eq F K \\/ eq G K \\/ BetS G F K \\/ BetS F G K \\/ BetS F K G).",
            "VernacExtend",
            "c219330762fd5b930bf8c3e1e5b660499a4464a9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (~ Col F G K).",
            "VernacExtend",
            "e46efdbe45e1f4a38fdf344aa9734c204a963f82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Cong A a F K) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "255981e92281e21187be5dd1c3d7b59065d2d512"
        ],
        [
            "assert (~ Col F G K).",
            "VernacExtend",
            "e46efdbe45e1f4a38fdf344aa9734c204a963f82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (neq F K) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "be689486cc19990aea1d374220a9e2783d007b58"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Cong C c G K) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "d074d21e394f961bddfc6dddff9db66aa167295e"
        ],
        [
            "assert (~ Col F G K).",
            "VernacExtend",
            "e46efdbe45e1f4a38fdf344aa9734c204a963f82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (neq G K) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "d19070e6d842281c9ace8f59b0ed4f9684e5cefa"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (BetS K F G) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "d7d8d15f6b58485b45a8ed0bf9f0a0fd92066de8"
        ],
        [
            "assert (Cong K F A a) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "bfe1f91f8c031820bd23a6d91f4e0238ca9b9d8d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists S, (BetS A a S /\\ Cong a S B b /\\ Lt C c A S)) by (conclude_def TG );destruct Tf as [S];spliter.",
            "VernacExtend",
            "e8ef5c82dc070a7885ac7d0b2538a363b5af8e9a"
        ],
        [
            "assert (Cong A a K F) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "691ca09fe018761afb5a32cb02a3e32a71b2293d"
        ],
        [
            "assert (Cong a S F G) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "5c33bbb40dbcd36454310468e8aed1d59c846bf8"
        ],
        [
            "assert (Cong A S K G) by (conclude cn_sumofparts).",
            "VernacExtend",
            "9747a333a0a17f01703b3a87fbb2312fdc0a08ab"
        ],
        [
            "assert (Cong A S G K) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "e5c12346187b0f722e50bf643475916873906e97"
        ],
        [
            "assert (Lt C c G K) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "ed5995c7e79edcd719fd95d1b4894a0894e4d4db"
        ],
        [
            "assert (Cong C c G K) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "d074d21e394f961bddfc6dddff9db66aa167295e"
        ],
        [
            "assert (Lt G K G K) by (conclude lemma_lessthancongruence2).",
            "VernacExtend",
            "8d94c34d45b10cb3a3bda16256cd5505acf7f93b"
        ],
        [
            "assert (~ Col F G K).",
            "VernacExtend",
            "e46efdbe45e1f4a38fdf344aa9734c204a963f82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (~ Lt G K G K) by (conclude lemma_trichotomy2).",
            "VernacExtend",
            "98f4eaa9585ba1030d13acd57a5a57283c124418"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists S, (BetS B b S /\\ Cong b S C c /\\ Lt A a B S)) by (conclude_def TG );destruct Tf as [S];spliter.",
            "VernacExtend",
            "d70819246ce48bbdb26d2e561c5fb1cd45099d61"
        ],
        [
            "assert (Cong C c b S) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "d140e9082340e181a9447b6e5045c04b36e2fcfd"
        ],
        [
            "assert (Cong G K b S) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "7052b235d198f17c826dc6480f5e2afba7c57e4d"
        ],
        [
            "assert (Cong F K B S) by (conclude cn_sumofparts).",
            "VernacExtend",
            "e4cf9696b2f5feaa24b4ce020a7b18424e8ace1e"
        ],
        [
            "assert (Cong A a F K) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "255981e92281e21187be5dd1c3d7b59065d2d512"
        ],
        [
            "assert (Lt F K B S) by (conclude lemma_lessthancongruence2).",
            "VernacExtend",
            "cc92b7787efa187519acd6e1736191e4b0b31461"
        ],
        [
            "assert (Cong B S F K) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "fceb5d47a836794d78d606c1eeb5e8de7bd0fbc8"
        ],
        [
            "assert (Lt F K F K) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "126bb11ba39ff962f28aa46df2ba3fe4c2470062"
        ],
        [
            "assert (~ Col F G K).",
            "VernacExtend",
            "e46efdbe45e1f4a38fdf344aa9734c204a963f82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (~ Lt F K F K) by (conclude lemma_trichotomy2).",
            "VernacExtend",
            "0853b07eb25c0c5f60bfca715974919fedd82bee"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists S, (BetS A a S /\\ Cong a S C c /\\ Lt B b A S)) by (conclude_def TG );destruct Tf as [S];spliter.",
            "VernacExtend",
            "d135e40fa3af4d16f1e945d58b8d9f2ecd51404a"
        ],
        [
            "assert (Lt F G A S) by (conclude lemma_lessthancongruence2).",
            "VernacExtend",
            "59401655fddbb065a3db054985486d2fec7839b6"
        ],
        [
            "assert (Cong C c a S) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "309c2df67c893bcc9f33560e46f320f68e9cbafc"
        ],
        [
            "assert (Cong G K a S) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "b359256530ffcf2b7875006ee04946b0a457132e"
        ],
        [
            "assert (Cong K G a S) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "3ee0b4eb9c52bad6604a6fe27035d243a7bc808b"
        ],
        [
            "assert (Cong F G A S) by (conclude cn_sumofparts).",
            "VernacExtend",
            "fa8048019de283f7cf8323f48692b9536ef31eec"
        ],
        [
            "assert (Cong A S F G) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "b0d2528b6da85f836a04470f6bef61868bbaf771"
        ],
        [
            "assert (Lt F G F G) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "cba7400ae3e6a5994d548f21acb0285e8a5349b2"
        ],
        [
            "assert (~ Col F G K).",
            "VernacExtend",
            "e46efdbe45e1f4a38fdf344aa9734c204a963f82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (~ Lt F G F G) by (conclude lemma_trichotomy2).",
            "VernacExtend",
            "bdb51b14ababc079c25464aabe372679ab678d32"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Triangle F G K) by (conclude_def Triangle ).",
            "VernacExtend",
            "308baf342acebd4a311a0ed8805827104090b6ae"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_togethera",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (lemma_together A B C D F G P Q a b c);auto.",
                        "VernacExtend",
                        "6b6d960f88395f2fb82309661cc8d748c0e31dc1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}