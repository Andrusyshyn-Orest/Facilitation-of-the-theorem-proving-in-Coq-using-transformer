{
    "filename": "Elements/OriginalProofs/lemma_crossbar2.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_crossbar.",
            "VernacRequire",
            "0106fe97a15011bd08531b64fbb63434c7a191e1"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_equalanglesreflexive.",
            "VernacRequire",
            "a5b0c8cd5b25371ea0dedf900d1cff5bba496d16"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_sameside2.",
            "VernacRequire",
            "ec9ef7cfe28e8891569cbae91e95a2b1b656aa9b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_07.",
            "VernacRequire",
            "e6ced42edb22bf5c2ae6e53e8396585a01858bc2"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_crossbar2 : forall A G H P S T, LtA H G A H G P -> OS A P G H -> Out G H S -> Out G P T -> exists X, BetS T X S /\\ Out G A X.",
            "VernacStartTheoremProof",
            "5f4ba1fa6d035b8ba9a96e5404f4ea59874c7450"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (nCol G H P) by (conclude_def OS ).",
            "VernacExtend",
            "3f69673c276fb2ee166e6dd13038be37427fa56d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists J K L, (BetS L K J /\\ Out G H L /\\ Out G P J /\\ CongA H G A H G K)) by (conclude_def LtA );destruct Tf as [J[K[L]]];spliter.",
            "VernacExtend",
            "6c4a238a660d3817c6926074ea4e3f070b16481f"
        ],
        [
            "assert (nCol H G K) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "b8f617cb9941b6b381a9942db377bce2a3cde611"
        ],
        [
            "assert (~ Col L G J).",
            "VernacExtend",
            "37b8a556d15f82643b0cf2fdb88b1a20d0b06844"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col G H L) by (conclude lemma_rayimpliescollinear).",
            "VernacExtend",
            "0200982f5f4def86e3c6958828f9bbe45d421561"
        ],
        [
            "assert (Col G P J) by (conclude lemma_rayimpliescollinear).",
            "VernacExtend",
            "37e9163b1818a910e8252b995ef661d7acb8029b"
        ],
        [
            "assert (Col L G H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "07383c8c6eb65808abdf1c7da7b19be596d5fa1f"
        ],
        [
            "assert (neq G L) by (conclude lemma_raystrict).",
            "VernacExtend",
            "58f4f21bfc81cabd9680c30b2e959198be76b882"
        ],
        [
            "assert (neq L G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "b9b4baa48f10a49e051dce18902a276c06414fa3"
        ],
        [
            "assert (Col G J H) by (conclude lemma_collinear4).",
            "VernacExtend",
            "165839a34039e101f3208c12cdcd2ddc244e7243"
        ],
        [
            "assert (Col J G H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9a0ef67696df161b32f624e5a95643d9ad2e76d2"
        ],
        [
            "assert (Col J G P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "8c40f0376efed27b8eaa5621895157c9c428fdc0"
        ],
        [
            "assert (neq G J) by (conclude lemma_raystrict).",
            "VernacExtend",
            "fba28d6f8288b24fd7440918ae7d91c6bd3300ea"
        ],
        [
            "assert (neq J G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "9d4ed162af9f08a0db7c3cdce05479228b12bf19"
        ],
        [
            "assert (Col G H P) by (conclude lemma_collinear4).",
            "VernacExtend",
            "4c92f0a5c667c020dcbc2916d7fad355d15834cd"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Triangle L G J) by (conclude_def Triangle ).",
            "VernacExtend",
            "499a3e2fc9f58839074f95bde73b33c5d27f6106"
        ],
        [
            "assert (Out G J T) by (conclude lemma_ray3).",
            "VernacExtend",
            "654c5436ee83a5573da512d05fdea16cb2615535"
        ],
        [
            "assert (Out G L S) by (conclude lemma_ray3).",
            "VernacExtend",
            "bbd124d717cbe721c24d514ee4cd70b7526667eb"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (Out G K M /\\ BetS S M T)) by (conclude lemma_crossbar);destruct Tf as [M];spliter.",
            "VernacExtend",
            "b585c51314ce269af55f811d9faf73dd9461c531"
        ],
        [
            "assert (BetS T M S) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "19d3ac965a3e343f10895781d09a2e9a229738e8"
        ],
        [
            "assert (CongA H G K H G A) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "85a4350279a9b517ead883c2502ae41e36af1b55"
        ],
        [
            "assert (neq G A) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "a2d00927465df48e8b281ed38a80ead5e7f13c20"
        ],
        [
            "assert (neq G M) by (conclude lemma_raystrict).",
            "VernacExtend",
            "a706aa85cf458506eb59d3e60aeab2a0eaecbe7a"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists N, (Out G A N /\\ Cong G N G M)) by (conclude lemma_layoff);destruct Tf as [N];spliter.",
            "VernacExtend",
            "c4b6d221f4cadbc1c023d1863e0417e4c5dbbbb4"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (~ eq G H).",
            "VernacExtend",
            "dd8c54b5ad00946240bc1a277f478a6f134e02e9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col G H P) by (conclude_def Col ).",
            "VernacExtend",
            "d8dea94b3777bc5d545afdf818080f67ada3f756"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out G H H) by (conclude lemma_ray4).",
            "VernacExtend",
            "0da79dc0fdbdf426dc94e017de1280d10243569c"
        ],
        [
            "assert (~ Col H G M).",
            "VernacExtend",
            "07b8c9772e2f6284cd119bd7bd05a8c22366e1f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col G K M) by (conclude lemma_rayimpliescollinear).",
            "VernacExtend",
            "28239d5a2865542ed69cf17f0ea8364b24d3f860"
        ],
        [
            "assert (Col M G K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d73abf2afcfd165a96a404f2556754005080f5cd"
        ],
        [
            "assert (Col M G H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "2d8bc4882f93361e83e24b814f77fa6f83979371"
        ],
        [
            "assert (neq G M) by (conclude lemma_raystrict).",
            "VernacExtend",
            "a706aa85cf458506eb59d3e60aeab2a0eaecbe7a"
        ],
        [
            "assert (neq M G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d0a345f72d4f78388cecb7440fe092f38d5f9570"
        ],
        [
            "assert (Col G K H) by (conclude lemma_collinear4).",
            "VernacExtend",
            "51498486ada74348a0ae1cd40c3a32a8cbec43a9"
        ],
        [
            "assert (Col H G K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "69dae6e9b5b1b2b20fd99ca04988e8b5bb11338b"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA H G M H G M) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "32a9fb0e0457ad5e908c40dce507f3ff80bff944"
        ],
        [
            "assert (Out G M K) by (conclude lemma_ray5).",
            "VernacExtend",
            "454221316f968200ca997952db7c823ca2c4d65b"
        ],
        [
            "assert (CongA H G M H G K) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "b0295f573e1d0ce1e6ffa8f77268fddb62a7238b"
        ],
        [
            "assert (CongA H G M H G A) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "75898f5e7efea1b18070cb99d500d2effe828922"
        ],
        [
            "assert (nCol H G A) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "706677af413798d45d5e9d8116b6433be7cd9440"
        ],
        [
            "assert (CongA H G A H G A) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "876a6dab0f6f908eee58ed74fe7cc9b2131ad0d5"
        ],
        [
            "assert (CongA H G A H G N) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "090c0204352310bdfc4365b893df89d19cc2945b"
        ],
        [
            "assert (CongA H G M H G N) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "a7e25481b36cae521f322b9d7e864f4e84b012d1"
        ],
        [
            "assert (CongA H G N H G M) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "834cb3fd7d69f8778d20cbd110d33aa10364caa0"
        ],
        [
            "assert (Cong G H G H) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "11c09e8ceba51073ad827b9c7dffc51fb9f1371f"
        ],
        [
            "assert (Cong H N H M) by (conclude proposition_04).",
            "VernacExtend",
            "715c7a8d7ab805ef3a9369c8975e28070ae10f93"
        ],
        [
            "assert (eq G G) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
        ],
        [
            "assert (Col G G H) by (conclude_def Col ).",
            "VernacExtend",
            "0ec32a8d9ddae3f5f43c969e23229a58fd1c6f1a"
        ],
        [
            "assert (OS A T G H) by (conclude lemma_sameside2).",
            "VernacExtend",
            "312479c93f1082924f72c04a1e0b20160c8b8e45"
        ],
        [
            "assert (neq S M) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "98227810de89ad3b994027d69af5ce2519c29c89"
        ],
        [
            "assert (Out S M T) by (conclude lemma_ray4).",
            "VernacExtend",
            "94fc3c01063f7d6395eb3966410290157102ba14"
        ],
        [
            "assert (Out S T M) by (conclude lemma_ray5).",
            "VernacExtend",
            "29929a2afffa363566baac2487358764470f9600"
        ],
        [
            "assert (Col G H S) by (conclude lemma_rayimpliescollinear).",
            "VernacExtend",
            "587472428fd6017e1531cdcbc171be5a4ed4e44c"
        ],
        [
            "assert (Col G S H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1935c0ca64c2806e948210f10bb187342ed87e75"
        ],
        [
            "assert (OS A M G H) by (conclude lemma_sameside2).",
            "VernacExtend",
            "1567d32d8b85dd33837b5dcdc4f53c1430176d88"
        ],
        [
            "assert (OS M A G H) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "d67ad3ec5d3f07d6bc4b7aa45da28c8bf49bd44d"
        ],
        [
            "assert (OS M N G H) by (conclude lemma_sameside2).",
            "VernacExtend",
            "067ed0a67fb85bdab6abbffbedac64e731c4b1fa"
        ],
        [
            "assert (Cong N H M H) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "9c56974fbee0d8b55267ab42327f4d18d85bd283"
        ],
        [
            "assert (Cong M H N H) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "6b95eca4b2c129d639e9839aaf4b53452993c56b"
        ],
        [
            "assert (Cong N G M G) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "70485ad50ff4b360388e1fef1dd6533f71bb5631"
        ],
        [
            "assert (Cong M G N G) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "1668df30a92f9d69104ce084f6b3b031d46075fb"
        ],
        [
            "assert (eq M N) by (conclude proposition_07).",
            "VernacExtend",
            "db4a84ecf551457bd0758e0062c7b50a0aedb332"
        ],
        [
            "assert (eq N M) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "a31736eca93c14201cadcc00040fd8681b4b6298"
        ],
        [
            "assert (Out G A M) by (conclude cn_equalitysub).",
            "VernacExtend",
            "0ae08a2b3d88bad18d0babb99a176d45a0369ffc"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_crossbar2",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G H P) by (conclude_def OS ).",
                        "VernacExtend",
                        "3f69673c276fb2ee166e6dd13038be37427fa56d"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists J K L, (BetS L K J /\\ Out G H L /\\ Out G P J /\\ CongA H G A H G K)) by (conclude_def LtA );destruct Tf as [J[K[L]]];spliter.",
                        "VernacExtend",
                        "6c4a238a660d3817c6926074ea4e3f070b16481f"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H G K) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "b8f617cb9941b6b381a9942db377bce2a3cde611"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col L G J).",
                        "VernacExtend",
                        "37b8a556d15f82643b0cf2fdb88b1a20d0b06844"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H L) by (conclude lemma_rayimpliescollinear).",
                        "VernacExtend",
                        "0200982f5f4def86e3c6958828f9bbe45d421561"
                    ]
                },
                {
                    "command": [
                        "assert (Col G P J) by (conclude lemma_rayimpliescollinear).",
                        "VernacExtend",
                        "37e9163b1818a910e8252b995ef661d7acb8029b"
                    ]
                },
                {
                    "command": [
                        "assert (Col L G H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "07383c8c6eb65808abdf1c7da7b19be596d5fa1f"
                    ]
                },
                {
                    "command": [
                        "assert (neq G L) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "58f4f21bfc81cabd9680c30b2e959198be76b882"
                    ]
                },
                {
                    "command": [
                        "assert (neq L G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "b9b4baa48f10a49e051dce18902a276c06414fa3"
                    ]
                },
                {
                    "command": [
                        "assert (Col G J H) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "165839a34039e101f3208c12cdcd2ddc244e7243"
                    ]
                },
                {
                    "command": [
                        "assert (Col J G H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9a0ef67696df161b32f624e5a95643d9ad2e76d2"
                    ]
                },
                {
                    "command": [
                        "assert (Col J G P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "8c40f0376efed27b8eaa5621895157c9c428fdc0"
                    ]
                },
                {
                    "command": [
                        "assert (neq G J) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "fba28d6f8288b24fd7440918ae7d91c6bd3300ea"
                    ]
                },
                {
                    "command": [
                        "assert (neq J G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "9d4ed162af9f08a0db7c3cdce05479228b12bf19"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H P) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "4c92f0a5c667c020dcbc2916d7fad355d15834cd"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle L G J) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "499a3e2fc9f58839074f95bde73b33c5d27f6106"
                    ]
                },
                {
                    "command": [
                        "assert (Out G J T) by (conclude lemma_ray3).",
                        "VernacExtend",
                        "654c5436ee83a5573da512d05fdea16cb2615535"
                    ]
                },
                {
                    "command": [
                        "assert (Out G L S) by (conclude lemma_ray3).",
                        "VernacExtend",
                        "bbd124d717cbe721c24d514ee4cd70b7526667eb"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (Out G K M /\\ BetS S M T)) by (conclude lemma_crossbar);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "b585c51314ce269af55f811d9faf73dd9461c531"
                    ]
                },
                {
                    "command": [
                        "assert (BetS T M S) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "19d3ac965a3e343f10895781d09a2e9a229738e8"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G K H G A) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "85a4350279a9b517ead883c2502ae41e36af1b55"
                    ]
                },
                {
                    "command": [
                        "assert (neq G A) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "a2d00927465df48e8b281ed38a80ead5e7f13c20"
                    ]
                },
                {
                    "command": [
                        "assert (neq G M) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "a706aa85cf458506eb59d3e60aeab2a0eaecbe7a"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists N, (Out G A N /\\ Cong G N G M)) by (conclude lemma_layoff);destruct Tf as [N];spliter.",
                        "VernacExtend",
                        "c4b6d221f4cadbc1c023d1863e0417e4c5dbbbb4"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq G H).",
                        "VernacExtend",
                        "dd8c54b5ad00946240bc1a277f478a6f134e02e9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H P) by (conclude_def Col ).",
                        "VernacExtend",
                        "d8dea94b3777bc5d545afdf818080f67ada3f756"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out G H H) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "0da79dc0fdbdf426dc94e017de1280d10243569c"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col H G M).",
                        "VernacExtend",
                        "07b8c9772e2f6284cd119bd7bd05a8c22366e1f1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col G K M) by (conclude lemma_rayimpliescollinear).",
                        "VernacExtend",
                        "28239d5a2865542ed69cf17f0ea8364b24d3f860"
                    ]
                },
                {
                    "command": [
                        "assert (Col M G K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d73abf2afcfd165a96a404f2556754005080f5cd"
                    ]
                },
                {
                    "command": [
                        "assert (Col M G H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "2d8bc4882f93361e83e24b814f77fa6f83979371"
                    ]
                },
                {
                    "command": [
                        "assert (neq G M) by (conclude lemma_raystrict).",
                        "VernacExtend",
                        "a706aa85cf458506eb59d3e60aeab2a0eaecbe7a"
                    ]
                },
                {
                    "command": [
                        "assert (neq M G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d0a345f72d4f78388cecb7440fe092f38d5f9570"
                    ]
                },
                {
                    "command": [
                        "assert (Col G K H) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "51498486ada74348a0ae1cd40c3a32a8cbec43a9"
                    ]
                },
                {
                    "command": [
                        "assert (Col H G K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "69dae6e9b5b1b2b20fd99ca04988e8b5bb11338b"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G M H G M) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "32a9fb0e0457ad5e908c40dce507f3ff80bff944"
                    ]
                },
                {
                    "command": [
                        "assert (Out G M K) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "454221316f968200ca997952db7c823ca2c4d65b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G M H G K) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "b0295f573e1d0ce1e6ffa8f77268fddb62a7238b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G M H G A) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "75898f5e7efea1b18070cb99d500d2effe828922"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H G A) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "706677af413798d45d5e9d8116b6433be7cd9440"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G A H G A) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "876a6dab0f6f908eee58ed74fe7cc9b2131ad0d5"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G A H G N) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "090c0204352310bdfc4365b893df89d19cc2945b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G M H G N) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "a7e25481b36cae521f322b9d7e864f4e84b012d1"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G N H G M) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "834cb3fd7d69f8778d20cbd110d33aa10364caa0"
                    ]
                },
                {
                    "command": [
                        "assert (Cong G H G H) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "11c09e8ceba51073ad827b9c7dffc51fb9f1371f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong H N H M) by (conclude proposition_04).",
                        "VernacExtend",
                        "715c7a8d7ab805ef3a9369c8975e28070ae10f93"
                    ]
                },
                {
                    "command": [
                        "assert (eq G G) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
                    ]
                },
                {
                    "command": [
                        "assert (Col G G H) by (conclude_def Col ).",
                        "VernacExtend",
                        "0ec32a8d9ddae3f5f43c969e23229a58fd1c6f1a"
                    ]
                },
                {
                    "command": [
                        "assert (OS A T G H) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "312479c93f1082924f72c04a1e0b20160c8b8e45"
                    ]
                },
                {
                    "command": [
                        "assert (neq S M) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "98227810de89ad3b994027d69af5ce2519c29c89"
                    ]
                },
                {
                    "command": [
                        "assert (Out S M T) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "94fc3c01063f7d6395eb3966410290157102ba14"
                    ]
                },
                {
                    "command": [
                        "assert (Out S T M) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "29929a2afffa363566baac2487358764470f9600"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H S) by (conclude lemma_rayimpliescollinear).",
                        "VernacExtend",
                        "587472428fd6017e1531cdcbc171be5a4ed4e44c"
                    ]
                },
                {
                    "command": [
                        "assert (Col G S H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1935c0ca64c2806e948210f10bb187342ed87e75"
                    ]
                },
                {
                    "command": [
                        "assert (OS A M G H) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "1567d32d8b85dd33837b5dcdc4f53c1430176d88"
                    ]
                },
                {
                    "command": [
                        "assert (OS M A G H) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "d67ad3ec5d3f07d6bc4b7aa45da28c8bf49bd44d"
                    ]
                },
                {
                    "command": [
                        "assert (OS M N G H) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "067ed0a67fb85bdab6abbffbedac64e731c4b1fa"
                    ]
                },
                {
                    "command": [
                        "assert (Cong N H M H) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "9c56974fbee0d8b55267ab42327f4d18d85bd283"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M H N H) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "6b95eca4b2c129d639e9839aaf4b53452993c56b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong N G M G) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "70485ad50ff4b360388e1fef1dd6533f71bb5631"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M G N G) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "1668df30a92f9d69104ce084f6b3b031d46075fb"
                    ]
                },
                {
                    "command": [
                        "assert (eq M N) by (conclude proposition_07).",
                        "VernacExtend",
                        "db4a84ecf551457bd0758e0062c7b50a0aedb332"
                    ]
                },
                {
                    "command": [
                        "assert (eq N M) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "a31736eca93c14201cadcc00040fd8681b4b6298"
                    ]
                },
                {
                    "command": [
                        "assert (Out G A M) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "0ae08a2b3d88bad18d0babb99a176d45a0369ffc"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}