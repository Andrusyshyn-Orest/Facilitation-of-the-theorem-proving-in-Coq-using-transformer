{
    "filename": "Elements/OriginalProofs/proposition_10.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_01.",
            "VernacRequire",
            "ccaf776e7acaa56ef3e98c6629bd90be6fc68945"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_03.",
            "VernacRequire",
            "278125e454adc9b85b99d6f5805abd556ca3e997"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_interior5.",
            "VernacRequire",
            "9d2a4752ba0f9174d4f89ab6763e8dd9b2f755f2"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_twolines.",
            "VernacRequire",
            "e4093c612d0e453c4586c73e761309cc8c182655"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_10 : forall A B, neq A B -> exists X, BetS A X B /\\ Cong X A X B.",
            "VernacStartTheoremProof",
            "9f0dec81cd4a9a4a413b2f0177273e17420a9e4c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists C, (equilateral A B C /\\ Triangle A B C)) by (conclude proposition_01);destruct Tf as [C];spliter.",
            "VernacExtend",
            "6717f1f8e2e106b1ec452d1a7668283dfe324509"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert ((Cong A B B C /\\ Cong B C C A)) by (conclude_def equilateral ).",
            "VernacExtend",
            "47ab5b3ccf9ff1b7c486b121cc590b308522eadd"
        ],
        [
            "assert (Cong A C C B) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "bac34674255ba8addd98ef22c976d7a99d6b1187"
        ],
        [
            "assert (Cong A C B C) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "72c916281bc6d0df8c3fb39eb313368319aaaa3c"
        ],
        [
            "assert (~ eq C B).",
            "VernacExtend",
            "5b85bbab0a4342b104116e4dc988109e88c0b3dd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A C B) by (conclude_def Col ).",
            "VernacExtend",
            "34333505c20cabf34b429f057a3c55283bb30a4b"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists D, (BetS C B D /\\ Cong B D A B)) by (conclude lemma_extension);destruct Tf as [D];spliter.",
            "VernacExtend",
            "1d0fa862f2e5da0a06a3dab8bd8436427e0f9c79"
        ],
        [
            "assert (~ eq C A).",
            "VernacExtend",
            "ebea71ace167bc95a91daefa0553fedcde7493fb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B C A) by (conclude_def Col ).",
            "VernacExtend",
            "16dac0bf75535e259baad41a105cc25e99e90b8d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (BetS C A E /\\ Cong A E A B)) by (conclude lemma_extension);destruct Tf as [E];spliter.",
            "VernacExtend",
            "255efb5cd33363b55a81c0b2ce7cb0a387e13d83"
        ],
        [
            "assert (BetS D B C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "6e2d65955fdc85866bd4f2ea0bc42ace4d4b4fb7"
        ],
        [
            "assert (BetS E A C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "dcaa71fad5cdb68debc33ffade6d546942e69fc1"
        ],
        [
            "assert (~ Col D C E).",
            "VernacExtend",
            "6267d2050e22976f3cc0cfb5b0152ac7b3202806"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C A E) by (conclude_def Col ).",
            "VernacExtend",
            "abbf05d4e9d6ae41cde0246eba4678e806a50701"
        ],
        [
            "assert (Col C B D) by (conclude_def Col ).",
            "VernacExtend",
            "3210d9112f5393e9f1e443011ab8c12ecd45da46"
        ],
        [
            "assert (Col E C D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fccc31d15999f4bdde73e2b61d615f64d0b8a107"
        ],
        [
            "assert (Col E C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5f8f922854f481f296fb5d1b1962a85f3756b2d9"
        ],
        [
            "assert (neq C E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8cb02cc27caec779e42911044c466350ef0446a"
        ],
        [
            "assert (neq E C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "69a97d38f6e34162c0ca634999247a17d087318f"
        ],
        [
            "assert (Col C D A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "b31864c4a732a906a8f13b28bac7c4c23395aa8c"
        ],
        [
            "assert (Col D C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
        ],
        [
            "assert (Col D C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b4ed13d5f9f4239375e10dc6e0a6b6a68c2f6d96"
        ],
        [
            "assert (neq C D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ec8ed20fd91c966709071dfab476d123976a3733"
        ],
        [
            "assert (neq D C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f23eb05481a976a61c3e073657f8e5ca451231f4"
        ],
        [
            "assert (Col C B A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "1c018dd0cbcaf3db9508936af6dbabcf55d57bac"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS D F A /\\ BetS E F B)) by (conclude postulate_Pasch_inner);destruct Tf as [F];spliter.",
            "VernacExtend",
            "643474c842bf1531d91899a760ba12b51d7b4186"
        ],
        [
            "assert (BetS B F E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "54b148999d2e3864ab27739429d3f16bb5e9734a"
        ],
        [
            "assert (BetS A F D) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "282011958a07408a4251b5691dcd786e3249303e"
        ],
        [
            "assert (neq C D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ec8ed20fd91c966709071dfab476d123976a3733"
        ],
        [
            "assert (neq D C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f23eb05481a976a61c3e073657f8e5ca451231f4"
        ],
        [
            "assert (~ Col A D C).",
            "VernacExtend",
            "29103562a235957200e9d19382cb56853981b5c7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C B D) by (conclude_def Col ).",
            "VernacExtend",
            "3210d9112f5393e9f1e443011ab8c12ecd45da46"
        ],
        [
            "assert (Col D C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b4ed13d5f9f4239375e10dc6e0a6b6a68c2f6d96"
        ],
        [
            "assert (Col D C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
        ],
        [
            "assert (Col C A B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS A M B /\\ BetS C M F)) by (conclude postulate_Pasch_inner);destruct Tf as [M];spliter.",
            "VernacExtend",
            "8aa60f9f1957b13f1d699fee165d8ba3f7adaa23"
        ],
        [
            "assert (Cong C A C B) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "34e9cb5a83146ecc778a5a189225ca8f99c19644"
        ],
        [
            "assert (Cong A B A E) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "d04d818e764d53ac463fe43ad1fdfef829a498b8"
        ],
        [
            "assert (Cong B D A E) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "dfbbb088f12a837a5972f5768cefba131ecb62f4"
        ],
        [
            "assert (Cong A E B D) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "0b8a220753cee8b502fb17a8fad08ffbf1068c15"
        ],
        [
            "assert (Cong A B B A) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "ab89526fd97a60b22b04b4cbd23aee1121a24fb0"
        ],
        [
            "assert (Cong C B C A) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "bf4b98e5b229e77cfcd091412dd462fbacf76775"
        ],
        [
            "assert (Cong B E A D) by (conclude axiom_5_line).",
            "VernacExtend",
            "ecb9f777309b14c2176545de4d5a938454de8b9d"
        ],
        [
            "assert (Cong B F B F) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "ddb469a22dbd2bb4f0d1ce70231644c89da19c38"
        ],
        [
            "assert (Lt B F B E) by (conclude_def Lt ).",
            "VernacExtend",
            "8b6810b0900ac8a483fa6d0eabe4647d7ccd7689"
        ],
        [
            "assert (Cong A D B E) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "7bcb004e7780f49572eac27d45a7f25744bbad3f"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists G, (BetS A G D /\\ Cong A G B F)) by (conclude proposition_03);destruct Tf as [G];spliter.",
            "VernacExtend",
            "65a822ebd35ba8ee0f33aeba2896742ac0f16e19"
        ],
        [
            "assert (Cong G D F E) by (conclude lemma_differenceofparts).",
            "VernacExtend",
            "c1246dc95dcdd251ee0aca2ac25b6c2680a24190"
        ],
        [
            "assert (Cong E F D G) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "9e8426b8e6552ecf2b8f11119c6ab07833d2d39a"
        ],
        [
            "assert (Cong F B G A) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "899ef4b3fce40aed018d5953b6864afb9f6eb7c5"
        ],
        [
            "assert (Cong E A D B) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "688e04af3b34e488b2f4bc0332071d5fe74b0d22"
        ],
        [
            "assert (Cong B A A B) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "ff97827ecde45fe0bf609cc9e02472a1c03a1a68"
        ],
        [
            "assert (BetS D G A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "833b46bcfe38631d0c8e5299894088ceef1b73fc"
        ],
        [
            "assert (Cong F A G B) by (conclude lemma_interior5).",
            "VernacExtend",
            "6c03d50b87d7b4f3ec5d9c29891795e27a81028d"
        ],
        [
            "assert (Cong A F B G) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "38831dce48a379fc75fe42f9f0fac3adcc3b39dd"
        ],
        [
            "assert (Cong E D D E) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "ab2e4d63f32f86b2f892cd96324692a2974791b6"
        ],
        [
            "assert (Cong F D G E) by (conclude lemma_interior5).",
            "VernacExtend",
            "c08bc0e633f425c36295ee5ef4091cdae7054903"
        ],
        [
            "assert (BetS B G E) by (conclude lemma_betweennesspreserved).",
            "VernacExtend",
            "f29252877f5d8e62486ec838ad6764e7e81182f8"
        ],
        [
            "assert (BetS E G B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "11761ee7ef6295efa7ff0877ff01ef662f18c011"
        ],
        [
            "assert (~ Col A D E).",
            "VernacExtend",
            "d712245b03c543263f3cab4626c58f62d3f55740"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C A E) by (conclude_def Col ).",
            "VernacExtend",
            "abbf05d4e9d6ae41cde0246eba4678e806a50701"
        ],
        [
            "assert (Col A E D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "506ede68879202758cef4e317654ad98179a0f6b"
        ],
        [
            "assert (Col A E C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6beaa6c6fc4fdd531ec9d395ea8940cc90269f42"
        ],
        [
            "assert (neq A E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9dc76a35f0423fea77251119a803e21c8f59a255"
        ],
        [
            "assert (Col E D C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "cf4a733020b01dc64c71897d47a497a2b733df42"
        ],
        [
            "assert (Col E C D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fccc31d15999f4bdde73e2b61d615f64d0b8a107"
        ],
        [
            "assert (Col E C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5f8f922854f481f296fb5d1b1962a85f3756b2d9"
        ],
        [
            "assert (neq C E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8cb02cc27caec779e42911044c466350ef0446a"
        ],
        [
            "assert (neq E C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "69a97d38f6e34162c0ca634999247a17d087318f"
        ],
        [
            "assert (Col C D A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "b31864c4a732a906a8f13b28bac7c4c23395aa8c"
        ],
        [
            "assert (Col C B D) by (conclude_def Col ).",
            "VernacExtend",
            "3210d9112f5393e9f1e443011ab8c12ecd45da46"
        ],
        [
            "assert (Col D C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b4ed13d5f9f4239375e10dc6e0a6b6a68c2f6d96"
        ],
        [
            "assert (Col D C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
        ],
        [
            "assert (neq C D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ec8ed20fd91c966709071dfab476d123976a3733"
        ],
        [
            "assert (neq D C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f23eb05481a976a61c3e073657f8e5ca451231f4"
        ],
        [
            "assert (Col C A B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col A D B).",
            "VernacExtend",
            "b39a9df8eacb7b3663edbf6a7e384ac724058083"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col D B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b7a3a74036f5bb861997341ca7a6a6e1bdd1390c"
        ],
        [
            "assert (Col C B D) by (conclude_def Col ).",
            "VernacExtend",
            "3210d9112f5393e9f1e443011ab8c12ecd45da46"
        ],
        [
            "assert (Col D B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "9b514e0053ba8f3c49b63d2480a07be55876115a"
        ],
        [
            "assert (Col B A C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cut A D E B G) by (conclude_def Cut ).",
            "VernacExtend",
            "f41ac6f60964a761b80ce123f0085565c5ec1c32"
        ],
        [
            "assert (Cut A D E B F) by (conclude_def Cut ).",
            "VernacExtend",
            "b4648113a97b0ac2bdcc4d1b0b3224ec94a4b919"
        ],
        [
            "assert (~ Col D E B).",
            "VernacExtend",
            "4e52a3015ad81c72c24961ca4d271cead90b18f0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C B D) by (conclude_def Col ).",
            "VernacExtend",
            "3210d9112f5393e9f1e443011ab8c12ecd45da46"
        ],
        [
            "assert (Col D B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
        ],
        [
            "assert (Col D B E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c3ccdd206bd7e3e8019392e3d6ad3848490404d7"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "9b514e0053ba8f3c49b63d2480a07be55876115a"
        ],
        [
            "assert (Col B C E) by (conclude lemma_collinear4).",
            "VernacExtend",
            "61aa17d483bc532c57e6b9f3e4de7bf654033fb6"
        ],
        [
            "assert (Col C A E) by (conclude_def Col ).",
            "VernacExtend",
            "abbf05d4e9d6ae41cde0246eba4678e806a50701"
        ],
        [
            "assert (Col E C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5f8f922854f481f296fb5d1b1962a85f3756b2d9"
        ],
        [
            "assert (Col E C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "719226fedabf65a2db4f0cde2b96bf44cea1a9ed"
        ],
        [
            "assert (neq C E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8cb02cc27caec779e42911044c466350ef0446a"
        ],
        [
            "assert (neq E C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "69a97d38f6e34162c0ca634999247a17d087318f"
        ],
        [
            "assert (Col C A B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (eq G F) by (conclude lemma_twolines).",
            "VernacExtend",
            "b003a4f41e32085d7db3e2be2d5dd1bcbd8b9710"
        ],
        [
            "assert (Cong A F B F) by (conclude cn_equalitysub).",
            "VernacExtend",
            "59c14b60f9d0130115a6a9b622f94f508634ddcc"
        ],
        [
            "assert (Cong F A F B) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "1b7e21f29da1b273d5306841b2c806166c13d66c"
        ],
        [
            "assert (Cong C M C M) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "e90fada79361fff8dd92f0b2bbc5294b6560b483"
        ],
        [
            "assert (Cong M F M F) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "af330f6011b8252c6ecf506714eaa4f4aeade55f"
        ],
        [
            "assert (Cong M A M B) by (conclude lemma_interior5).",
            "VernacExtend",
            "be3eb4deb7db80b8e0ea5d121a440cab84a3cace"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_10",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists C, (equilateral A B C /\\ Triangle A B C)) by (conclude proposition_01);destruct Tf as [C];spliter.",
                        "VernacExtend",
                        "6717f1f8e2e106b1ec452d1a7668283dfe324509"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert ((Cong A B B C /\\ Cong B C C A)) by (conclude_def equilateral ).",
                        "VernacExtend",
                        "47ab5b3ccf9ff1b7c486b121cc590b308522eadd"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A C C B) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "bac34674255ba8addd98ef22c976d7a99d6b1187"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A C B C) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "72c916281bc6d0df8c3fb39eb313368319aaaa3c"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C B).",
                        "VernacExtend",
                        "5b85bbab0a4342b104116e4dc988109e88c0b3dd"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C B) by (conclude_def Col ).",
                        "VernacExtend",
                        "34333505c20cabf34b429f057a3c55283bb30a4b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists D, (BetS C B D /\\ Cong B D A B)) by (conclude lemma_extension);destruct Tf as [D];spliter.",
                        "VernacExtend",
                        "1d0fa862f2e5da0a06a3dab8bd8436427e0f9c79"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C A).",
                        "VernacExtend",
                        "ebea71ace167bc95a91daefa0553fedcde7493fb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C A) by (conclude_def Col ).",
                        "VernacExtend",
                        "16dac0bf75535e259baad41a105cc25e99e90b8d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (BetS C A E /\\ Cong A E A B)) by (conclude lemma_extension);destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "255efb5cd33363b55a81c0b2ce7cb0a387e13d83"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D B C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "6e2d65955fdc85866bd4f2ea0bc42ace4d4b4fb7"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E A C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "dcaa71fad5cdb68debc33ffade6d546942e69fc1"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col D C E).",
                        "VernacExtend",
                        "6267d2050e22976f3cc0cfb5b0152ac7b3202806"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A E) by (conclude_def Col ).",
                        "VernacExtend",
                        "abbf05d4e9d6ae41cde0246eba4678e806a50701"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B D) by (conclude_def Col ).",
                        "VernacExtend",
                        "3210d9112f5393e9f1e443011ab8c12ecd45da46"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fccc31d15999f4bdde73e2b61d615f64d0b8a107"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5f8f922854f481f296fb5d1b1962a85f3756b2d9"
                    ]
                },
                {
                    "command": [
                        "assert (neq C E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8cb02cc27caec779e42911044c466350ef0446a"
                    ]
                },
                {
                    "command": [
                        "assert (neq E C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "69a97d38f6e34162c0ca634999247a17d087318f"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "b31864c4a732a906a8f13b28bac7c4c23395aa8c"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b4ed13d5f9f4239375e10dc6e0a6b6a68c2f6d96"
                    ]
                },
                {
                    "command": [
                        "assert (neq C D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ec8ed20fd91c966709071dfab476d123976a3733"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f23eb05481a976a61c3e073657f8e5ca451231f4"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "1c018dd0cbcaf3db9508936af6dbabcf55d57bac"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS D F A /\\ BetS E F B)) by (conclude postulate_Pasch_inner);destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "643474c842bf1531d91899a760ba12b51d7b4186"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B F E) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "54b148999d2e3864ab27739429d3f16bb5e9734a"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A F D) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "282011958a07408a4251b5691dcd786e3249303e"
                    ]
                },
                {
                    "command": [
                        "assert (neq C D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ec8ed20fd91c966709071dfab476d123976a3733"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f23eb05481a976a61c3e073657f8e5ca451231f4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A D C).",
                        "VernacExtend",
                        "29103562a235957200e9d19382cb56853981b5c7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B D) by (conclude_def Col ).",
                        "VernacExtend",
                        "3210d9112f5393e9f1e443011ab8c12ecd45da46"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b4ed13d5f9f4239375e10dc6e0a6b6a68c2f6d96"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS A M B /\\ BetS C M F)) by (conclude postulate_Pasch_inner);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "8aa60f9f1957b13f1d699fee165d8ba3f7adaa23"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C A C B) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "34e9cb5a83146ecc778a5a189225ca8f99c19644"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B A E) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "d04d818e764d53ac463fe43ad1fdfef829a498b8"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B D A E) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "dfbbb088f12a837a5972f5768cefba131ecb62f4"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A E B D) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "0b8a220753cee8b502fb17a8fad08ffbf1068c15"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B B A) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "ab89526fd97a60b22b04b4cbd23aee1121a24fb0"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C B C A) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "bf4b98e5b229e77cfcd091412dd462fbacf76775"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B E A D) by (conclude axiom_5_line).",
                        "VernacExtend",
                        "ecb9f777309b14c2176545de4d5a938454de8b9d"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B F B F) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "ddb469a22dbd2bb4f0d1ce70231644c89da19c38"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B F B E) by (conclude_def Lt ).",
                        "VernacExtend",
                        "8b6810b0900ac8a483fa6d0eabe4647d7ccd7689"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A D B E) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "7bcb004e7780f49572eac27d45a7f25744bbad3f"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists G, (BetS A G D /\\ Cong A G B F)) by (conclude proposition_03);destruct Tf as [G];spliter.",
                        "VernacExtend",
                        "65a822ebd35ba8ee0f33aeba2896742ac0f16e19"
                    ]
                },
                {
                    "command": [
                        "assert (Cong G D F E) by (conclude lemma_differenceofparts).",
                        "VernacExtend",
                        "c1246dc95dcdd251ee0aca2ac25b6c2680a24190"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E F D G) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "9e8426b8e6552ecf2b8f11119c6ab07833d2d39a"
                    ]
                },
                {
                    "command": [
                        "assert (Cong F B G A) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "899ef4b3fce40aed018d5953b6864afb9f6eb7c5"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E A D B) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "688e04af3b34e488b2f4bc0332071d5fe74b0d22"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A A B) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "ff97827ecde45fe0bf609cc9e02472a1c03a1a68"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D G A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "833b46bcfe38631d0c8e5299894088ceef1b73fc"
                    ]
                },
                {
                    "command": [
                        "assert (Cong F A G B) by (conclude lemma_interior5).",
                        "VernacExtend",
                        "6c03d50b87d7b4f3ec5d9c29891795e27a81028d"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A F B G) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "38831dce48a379fc75fe42f9f0fac3adcc3b39dd"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E D D E) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "ab2e4d63f32f86b2f892cd96324692a2974791b6"
                    ]
                },
                {
                    "command": [
                        "assert (Cong F D G E) by (conclude lemma_interior5).",
                        "VernacExtend",
                        "c08bc0e633f425c36295ee5ef4091cdae7054903"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B G E) by (conclude lemma_betweennesspreserved).",
                        "VernacExtend",
                        "f29252877f5d8e62486ec838ad6764e7e81182f8"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E G B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "11761ee7ef6295efa7ff0877ff01ef662f18c011"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A D E).",
                        "VernacExtend",
                        "d712245b03c543263f3cab4626c58f62d3f55740"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A E) by (conclude_def Col ).",
                        "VernacExtend",
                        "abbf05d4e9d6ae41cde0246eba4678e806a50701"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "506ede68879202758cef4e317654ad98179a0f6b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6beaa6c6fc4fdd531ec9d395ea8940cc90269f42"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9dc76a35f0423fea77251119a803e21c8f59a255"
                    ]
                },
                {
                    "command": [
                        "assert (Col E D C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "cf4a733020b01dc64c71897d47a497a2b733df42"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fccc31d15999f4bdde73e2b61d615f64d0b8a107"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5f8f922854f481f296fb5d1b1962a85f3756b2d9"
                    ]
                },
                {
                    "command": [
                        "assert (neq C E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8cb02cc27caec779e42911044c466350ef0446a"
                    ]
                },
                {
                    "command": [
                        "assert (neq E C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "69a97d38f6e34162c0ca634999247a17d087318f"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "b31864c4a732a906a8f13b28bac7c4c23395aa8c"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B D) by (conclude_def Col ).",
                        "VernacExtend",
                        "3210d9112f5393e9f1e443011ab8c12ecd45da46"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b4ed13d5f9f4239375e10dc6e0a6b6a68c2f6d96"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
                    ]
                },
                {
                    "command": [
                        "assert (neq C D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ec8ed20fd91c966709071dfab476d123976a3733"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f23eb05481a976a61c3e073657f8e5ca451231f4"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A D B).",
                        "VernacExtend",
                        "b39a9df8eacb7b3663edbf6a7e384ac724058083"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b7a3a74036f5bb861997341ca7a6a6e1bdd1390c"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B D) by (conclude_def Col ).",
                        "VernacExtend",
                        "3210d9112f5393e9f1e443011ab8c12ecd45da46"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "9b514e0053ba8f3c49b63d2480a07be55876115a"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Cut A D E B G) by (conclude_def Cut ).",
                        "VernacExtend",
                        "f41ac6f60964a761b80ce123f0085565c5ec1c32"
                    ]
                },
                {
                    "command": [
                        "assert (Cut A D E B F) by (conclude_def Cut ).",
                        "VernacExtend",
                        "b4648113a97b0ac2bdcc4d1b0b3224ec94a4b919"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col D E B).",
                        "VernacExtend",
                        "4e52a3015ad81c72c24961ca4d271cead90b18f0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B D) by (conclude_def Col ).",
                        "VernacExtend",
                        "3210d9112f5393e9f1e443011ab8c12ecd45da46"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c3ccdd206bd7e3e8019392e3d6ad3848490404d7"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "9b514e0053ba8f3c49b63d2480a07be55876115a"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C E) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "61aa17d483bc532c57e6b9f3e4de7bf654033fb6"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A E) by (conclude_def Col ).",
                        "VernacExtend",
                        "abbf05d4e9d6ae41cde0246eba4678e806a50701"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5f8f922854f481f296fb5d1b1962a85f3756b2d9"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "719226fedabf65a2db4f0cde2b96bf44cea1a9ed"
                    ]
                },
                {
                    "command": [
                        "assert (neq C E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8cb02cc27caec779e42911044c466350ef0446a"
                    ]
                },
                {
                    "command": [
                        "assert (neq E C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "69a97d38f6e34162c0ca634999247a17d087318f"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (eq G F) by (conclude lemma_twolines).",
                        "VernacExtend",
                        "b003a4f41e32085d7db3e2be2d5dd1bcbd8b9710"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A F B F) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "59c14b60f9d0130115a6a9b622f94f508634ddcc"
                    ]
                },
                {
                    "command": [
                        "assert (Cong F A F B) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "1b7e21f29da1b273d5306841b2c806166c13d66c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C M C M) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "e90fada79361fff8dd92f0b2bbc5294b6560b483"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M F M F) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "af330f6011b8252c6ecf506714eaa4f4aeade55f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M A M B) by (conclude lemma_interior5).",
                        "VernacExtend",
                        "be3eb4deb7db80b8e0ea5d121a440cab84a3cace"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}