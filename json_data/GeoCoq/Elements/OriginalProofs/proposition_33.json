{
    "filename": "Elements/OriginalProofs/proposition_33.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_29B.",
            "VernacRequire",
            "5d237c3959071079475062a23cb0b770aa2ee5ba"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_27B.",
            "VernacRequire",
            "6871ecc998a1c39abf769886afa7596fef531696"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_euclidean}.",
            "VernacContext",
            "46d5a1bab5cb652e851ee1112917f2bf32229649"
        ],
        [
            "Lemma proposition_33 : forall A B C D M, Par A B C D -> Cong A B C D -> BetS A M D -> BetS B M C -> Par A C B D /\\ Cong A C B D.",
            "VernacStartTheoremProof",
            "b8365e77c3bd810ffca9b54e6ba92c72805b73c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists a b c d m, (neq A B /\\ neq C D /\\ Col A B a /\\ Col A B b /\\ neq a b /\\ Col C D c /\\ Col C D d /\\ neq c d /\\ ~ Meet A B C D /\\ BetS a m d /\\ BetS c m b)) by (conclude_def Par );destruct Tf as [a[b[c[d[m]]]]];spliter.",
            "VernacExtend",
            "c0b50e0439768d123ecadbfac424d01b3d3212ea"
        ],
        [
            "assert (Col B M C) by (conclude_def Col ).",
            "VernacExtend",
            "48d3455391aa6042e4c0824a684611b5af7c8a81"
        ],
        [
            "assert (Col B C M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7063a14b6a5e5d46df26c1e86a2f3057b87e3bb9"
        ],
        [
            "assert (~ Col B C A).",
            "VernacExtend",
            "f2ccde2b3f06377cdf6767f60a87564e90095b27"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col C D C) by (conclude_def Col ).",
            "VernacExtend",
            "a5c3d5eb1771de0bbde081130e12a688964681c9"
        ],
        [
            "assert (Meet A B C D) by (conclude_def Meet ).",
            "VernacExtend",
            "3841d60693b9b925aa29ab7795a09f1a233bc444"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (TS A B C D) by (conclude_def TS ).",
            "VernacExtend",
            "e53ac596655ae152cf1133e6003c737d6995db2b"
        ],
        [
            "assert (CongA A B C B C D) by (conclude proposition_29B).",
            "VernacExtend",
            "7875cf4bc359676f8f4dd94584177c90f33d00cb"
        ],
        [
            "assert (~ Col B C D).",
            "VernacExtend",
            "1f400b0de914ae951dba021fa809d8f95a2c5c27"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C D B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "55f469aa33fdb3f1b33b588b41418f49f4e15fe4"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col A B B) by (conclude_def Col ).",
            "VernacExtend",
            "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
        ],
        [
            "assert (Meet A B C D) by (conclude_def Meet ).",
            "VernacExtend",
            "3841d60693b9b925aa29ab7795a09f1a233bc444"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B C D D C B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "6edea578a4bc6ca18488d9506cbb73bee1d82ccf"
        ],
        [
            "assert (CongA A B C D C B) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "79a8d84468c0b792b5611b7e791f70118180cddb"
        ],
        [
            "assert (Cong B C B C) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "ed142e8fbde6a84529bd4c830f851b89eb3843f0"
        ],
        [
            "assert (nCol A B C) by (assert (nCol B C A) by auto; (forward_using lemma_NCorder)).",
            "VernacExtend",
            "a2a0bf74bb0a874b7ae87ae99a38046cd204416c"
        ],
        [
            "assert (Cong B A C D) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "5b14881e6a377e1f67f365fddd1460bf9ec7f7a4"
        ],
        [
            "assert (Cong B C C B) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "dccd274412e9da28b211bf29226703e44a609e64"
        ],
        [
            "assert ((Cong A C D B /\\ CongA B A C C D B /\\ CongA B C A C B D)) by (conclude proposition_04).",
            "VernacExtend",
            "80bc4a478f5b04d5761cf0e16db3483f65382700"
        ],
        [
            "assert (nCol A C B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
        ],
        [
            "assert (CongA A C B B C A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "1787bb384f740ae70569aed176d8fae9183e9a96"
        ],
        [
            "assert (CongA A C B C B D) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "4abff5b01b55c802b9f3367bd8d360a9805ecaf1"
        ],
        [
            "assert (Cong A C B D) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "b1debfcf261146f894ebecb469d4414913f1eb92"
        ],
        [
            "assert (Col C B M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c4e234e367413ef16013499457a5aa51ac86ab40"
        ],
        [
            "assert (nCol C B A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "a4d3eddbdbf0e243199e65bd2fb15e7f1447fc66"
        ],
        [
            "assert (TS A C B D) by (conclude_def TS ).",
            "VernacExtend",
            "c379f2537ceb527f3eac696cae6b35e9a681c952"
        ],
        [
            "assert (Par A C B D) by (conclude proposition_27B).",
            "VernacExtend",
            "71d725fabe24b7e607008ba193d74c5d8051833c"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_33",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists a b c d m, (neq A B /\\ neq C D /\\ Col A B a /\\ Col A B b /\\ neq a b /\\ Col C D c /\\ Col C D d /\\ neq c d /\\ ~ Meet A B C D /\\ BetS a m d /\\ BetS c m b)) by (conclude_def Par );destruct Tf as [a[b[c[d[m]]]]];spliter.",
                        "VernacExtend",
                        "c0b50e0439768d123ecadbfac424d01b3d3212ea"
                    ]
                },
                {
                    "command": [
                        "assert (Col B M C) by (conclude_def Col ).",
                        "VernacExtend",
                        "48d3455391aa6042e4c0824a684611b5af7c8a81"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7063a14b6a5e5d46df26c1e86a2f3057b87e3bb9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C A).",
                        "VernacExtend",
                        "f2ccde2b3f06377cdf6767f60a87564e90095b27"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D C) by (conclude_def Col ).",
                        "VernacExtend",
                        "a5c3d5eb1771de0bbde081130e12a688964681c9"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B C D) by (conclude_def Meet ).",
                        "VernacExtend",
                        "3841d60693b9b925aa29ab7795a09f1a233bc444"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (TS A B C D) by (conclude_def TS ).",
                        "VernacExtend",
                        "e53ac596655ae152cf1133e6003c737d6995db2b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C B C D) by (conclude proposition_29B).",
                        "VernacExtend",
                        "7875cf4bc359676f8f4dd94584177c90f33d00cb"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C D).",
                        "VernacExtend",
                        "1f400b0de914ae951dba021fa809d8f95a2c5c27"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "55f469aa33fdb3f1b33b588b41418f49f4e15fe4"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B C D) by (conclude_def Meet ).",
                        "VernacExtend",
                        "3841d60693b9b925aa29ab7795a09f1a233bc444"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B C D D C B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "6edea578a4bc6ca18488d9506cbb73bee1d82ccf"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C D C B) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "79a8d84468c0b792b5611b7e791f70118180cddb"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C B C) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "ed142e8fbde6a84529bd4c830f851b89eb3843f0"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (assert (nCol B C A) by auto; (forward_using lemma_NCorder)).",
                        "VernacExtend",
                        "a2a0bf74bb0a874b7ae87ae99a38046cd204416c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A C D) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "5b14881e6a377e1f67f365fddd1460bf9ec7f7a4"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C C B) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "dccd274412e9da28b211bf29226703e44a609e64"
                    ]
                },
                {
                    "command": [
                        "assert ((Cong A C D B /\\ CongA B A C C D B /\\ CongA B C A C B D)) by (conclude proposition_04).",
                        "VernacExtend",
                        "80bc4a478f5b04d5761cf0e16db3483f65382700"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A C B B C A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "1787bb384f740ae70569aed176d8fae9183e9a96"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A C B C B D) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "4abff5b01b55c802b9f3367bd8d360a9805ecaf1"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A C B D) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "b1debfcf261146f894ebecb469d4414913f1eb92"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c4e234e367413ef16013499457a5aa51ac86ab40"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C B A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "a4d3eddbdbf0e243199e65bd2fb15e7f1447fc66"
                    ]
                },
                {
                    "command": [
                        "assert (TS A C B D) by (conclude_def TS ).",
                        "VernacExtend",
                        "c379f2537ceb527f3eac696cae6b35e9a681c952"
                    ]
                },
                {
                    "command": [
                        "assert (Par A C B D) by (conclude proposition_27B).",
                        "VernacExtend",
                        "71d725fabe24b7e607008ba193d74c5d8051833c"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}