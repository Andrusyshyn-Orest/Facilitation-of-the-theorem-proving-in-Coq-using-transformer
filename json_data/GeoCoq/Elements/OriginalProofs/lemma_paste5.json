{
    "filename": "Elements/OriginalProofs/lemma_paste5.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_rectangleparallelogram.",
            "VernacRequire",
            "acfc5886fad2582e316d3bbd702f65f14848ae9a"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_34.",
            "VernacRequire",
            "41deb1163cc69d0109e8f8c584c8718b6d529795"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_crossimpliesopposite.",
            "VernacRequire",
            "a08dce83a43e7c20f62cfc791dcf1b1024f5ea6a"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_samenotopposite.",
            "VernacRequire",
            "aa87f8cfe454d847f379d191dc513595288529df"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_crisscross.",
            "VernacRequire",
            "e015773c27b8d355ad3201bf0e512370b0bd5148"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:area}.",
            "VernacContext",
            "81ffa005c6d27ee71f963c56f9847264efce50bb"
        ],
        [
            "Lemma lemma_paste5 : forall B C D E L M b c d e l m, EF B M L D b m l d -> EF M C E L m c e l -> BetS B M C -> BetS b m c -> BetS E L D -> BetS e l d -> RE M C E L -> RE m c e l -> EF B C E D b c e d.",
            "VernacStartTheoremProof",
            "3dcaa715fea8a43f5d8e7810ce61488289c62ed8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (PG M C E L) by (conclude lemma_rectangleparallelogram).",
            "VernacExtend",
            "fd8065fa05e776075d1cb09907c5a56d4f3dfd85"
        ],
        [
            "assert (PG m c e l) by (conclude lemma_rectangleparallelogram).",
            "VernacExtend",
            "c41457409bdf351f8074eecc1a9b7cb83e4ba1f8"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P, (BetS M P E /\\ BetS C P L)) by (conclude lemma_diagonalsmeet);destruct Tf as [P];spliter.",
            "VernacExtend",
            "40b440341c1a3e0fa0a452ab3e32654afcb854d0"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists p, (BetS m p e /\\ BetS c p l)) by (conclude lemma_diagonalsmeet);destruct Tf as [p];spliter.",
            "VernacExtend",
            "2409ee37dcd2b7c3fdf41cb1499971c754da4e05"
        ],
        [
            "assert (Par M C E L) by (conclude_def PG ).",
            "VernacExtend",
            "a0a4a0ab38ba4540b829516989cd69fa6987551f"
        ],
        [
            "assert (nCol M C L) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "b65204a6fd53dd7265721341b86ff1955507e990"
        ],
        [
            "assert (Par m c e l) by (conclude_def PG ).",
            "VernacExtend",
            "46de8965cd916430a8170a330b564ea79f004c17"
        ],
        [
            "assert (nCol m c l) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "f243cd747abdae907f8c89f4c7466baba311e502"
        ],
        [
            "assert (Cong_3 C M L L E C) by (conclude proposition_34).",
            "VernacExtend",
            "98e19f03cadbc70b2edad919e32680729c6710a8"
        ],
        [
            "assert (Cong_3 c m l l e c) by (conclude proposition_34).",
            "VernacExtend",
            "5e28c66872d9a7bcdae09c54cba6776a05f7115f"
        ],
        [
            "assert (ET C M L L E C) by (conclude axiom_congruentequal).",
            "VernacExtend",
            "9290b8cc2f15c1efc7b786f4d4c9ee8648fb7884"
        ],
        [
            "assert (ET c m l l e c) by (conclude axiom_congruentequal).",
            "VernacExtend",
            "93b8ac4bb883358bab6fade9275dcceee6a9babb"
        ],
        [
            "assert (CR M E C L) by (conclude_def RE ).",
            "VernacExtend",
            "a610a510f1a0638496c02757f7c6c5a0011e096e"
        ],
        [
            "assert (CR m e c l) by (conclude_def RE ).",
            "VernacExtend",
            "429e545a0bb7782613cb6713b68933236452a4b5"
        ],
        [
            "assert (ET c m l c l e) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "74aa5b2e55b91ee5ecec64c13ee20490132694fd"
        ],
        [
            "assert (ET c l e c m l) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "1239537777b7fbcd5f7673779476f72654c86982"
        ],
        [
            "assert (ET c l e m c l) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "73ec11aa5be30106b299b56c753c5d095f573abf"
        ],
        [
            "assert (ET m c l c l e) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "efe90c2faac8b84d0b53ead847bdd524232d8cb7"
        ],
        [
            "assert (ET C M L C L E) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "e43eca7fe1a0d68fe26bbc4cbf8ca623be5707a9"
        ],
        [
            "assert (ET C L E C M L) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "fb12b302ca464f0ee4af29f30164414e91741df9"
        ],
        [
            "assert (ET C L E M C L) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "fd05e574710c2a6bfdce9d88da17af4291f57f40"
        ],
        [
            "assert (ET M C L C L E) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "8c84d724d90568a9d1400f0ed396064aaccc5730"
        ],
        [
            "assert (TS M C L E) by (forward_using lemma_crossimpliesopposite).",
            "VernacExtend",
            "29f97c284d9236d5e076b33973558fd8863a4b65"
        ],
        [
            "assert (TS m c l e) by (forward_using lemma_crossimpliesopposite).",
            "VernacExtend",
            "687bb9afa778e35e768e3261f40aef556aea585b"
        ],
        [
            "assert (ET M C L m c l) by (conclude axiom_halvesofequals).",
            "VernacExtend",
            "242ab213d8673c3d32f496b4d924ba14ee5955c6"
        ],
        [
            "assert (EF M C E L e c m l) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "44c05a3ce2493c53a2a978972576994771b43139"
        ],
        [
            "assert (EF e c m l M C E L) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "ae6d117721f4a0e7608353f831bf7be02d215745"
        ],
        [
            "assert (EF e c m l E C M L) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "4407b2d2d475371332469b789fcf55eac54d98dc"
        ],
        [
            "assert (EF E C M L e c m l) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "b1622c5d645cffe92c3daf7eba63db3d536b0bd5"
        ],
        [
            "assert (TS E C L M) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "c88b1273bcef2d120320dc03cde4d93608913470"
        ],
        [
            "assert (TS e c l m) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "2fa104ee2ccca8c76933ef8383f4463de6f4a150"
        ],
        [
            "assert (ET M C L E C L) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "ceeff4ce7a232c4d55382a4c2932581e1cfc9c02"
        ],
        [
            "assert (ET E C L M C L) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "f21ba600b86c3e0095e8107f3527f51f4ea1f4f0"
        ],
        [
            "assert (ET E C L C L M) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "d508cec433b6049a59abaf943ae64b021a482024"
        ],
        [
            "assert (ET m c l e c l) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "059fd00032561e21b0226699195cbdd266adf4b8"
        ],
        [
            "assert (ET e c l m c l) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "ec94edbab8d7b530c3f3d70bfddd908abf356293"
        ],
        [
            "assert (ET e c l c l m) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "1ac57adea30cef5e9017528d80b9476ade4d42b6"
        ],
        [
            "assert (ET E C L e c l) by (conclude axiom_halvesofequals).",
            "VernacExtend",
            "df92232ec604e72660d4b11329c4918a0fbfd582"
        ],
        [
            "assert (EF B M L D d b m l) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "7365798ff970ff12c752901422004164761555f6"
        ],
        [
            "assert (EF d b m l B M L D) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "3394fb1cb76a71cd3f994c84a15c973b7f1ac042"
        ],
        [
            "assert (EF d b m l D B M L) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "f338ce9df27176d6a4edbe49622ded51b52264ac"
        ],
        [
            "assert (EF D B M L d b m l) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "f4a8fa6adfc967931ee7ca7f19ae371843829b8d"
        ],
        [
            "assert (Col B M C) by (conclude_def Col ).",
            "VernacExtend",
            "48d3455391aa6042e4c0824a684611b5af7c8a81"
        ],
        [
            "assert (Col M C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "36c11ae0ed45e0592664ffa86b3d4a80bbf6aaaa"
        ],
        [
            "assert (neq B C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
        ],
        [
            "assert (Par E L M C) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "123bd2b74344c119561a12773a2f1bc83414b33e"
        ],
        [
            "assert (Par E L B C) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "0d22429120ea54e96e18c5611b461e9e4c2f6a6e"
        ],
        [
            "assert (Par B C E L) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "beee4157195b8e60459a49ec56ac40f079e6bf53"
        ],
        [
            "assert (Col E L D) by (conclude_def Col ).",
            "VernacExtend",
            "42ac36125d7f135032b8a76c4e743ec49bd046de"
        ],
        [
            "assert (neq L D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f89c9e4a38e443d464ed7dc58f154c356e04750f"
        ],
        [
            "assert (neq D L) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "1080cdcababa724836c0b3af577d19487a9cfc14"
        ],
        [
            "assert (Par B C D L) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "84ecd441a9bc88eacd1d224fa0f46462874cfe75"
        ],
        [
            "assert (neq E L) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8cfb11db53d9b25244b132df3c5bafd8773372ee"
        ],
        [
            "assert (neq M C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "e4e81160a42288216f6278332fd50e638befc3e3"
        ],
        [
            "assert (~ CR B D C L).",
            "VernacExtend",
            "1de3dcac37f26fd394c871807d04c239baf69bcd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (~ Col C L M).",
            "VernacExtend",
            "c449ae59849e6b80bce91ad9f19daec8e7ef254a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col M C L) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4d81fed7a23c2e34a791366c9f2c9f8f3d1d2053"
        ],
        [
            "assert (eq L L) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "a8338f62315f2cbfeea2610bb3baa213f7e93ddd"
        ],
        [
            "assert (Col E L L) by (conclude_def Col ).",
            "VernacExtend",
            "103ab02f2f69a9d6e46f1302292ab27ba27f64fd"
        ],
        [
            "assert (Meet E L M C) by (conclude_def Meet ).",
            "VernacExtend",
            "bea1ca162231961f3dc64be35089d447388a03b4"
        ],
        [
            "assert (~ Meet E L M C) by (conclude_def Par ).",
            "VernacExtend",
            "4944e0d07620aee434555cfd71c477669ee85fe2"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col C L D).",
            "VernacExtend",
            "4b2d29469b9e283c978b5ff1a731c5a400ef969d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col D L C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "21b0208a5dd7f2874b6b933769e05f2b61a68443"
        ],
        [
            "assert (Col E L D) by (conclude_def Col ).",
            "VernacExtend",
            "42ac36125d7f135032b8a76c4e743ec49bd046de"
        ],
        [
            "assert (Col D L E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6a31110730796fc76daab6b4e804f36078ff13fe"
        ],
        [
            "assert (neq L D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f89c9e4a38e443d464ed7dc58f154c356e04750f"
        ],
        [
            "assert (neq D L) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "1080cdcababa724836c0b3af577d19487a9cfc14"
        ],
        [
            "assert (Col L E C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "4952638c8a41900bc4dd0702758f077dda1e1a30"
        ],
        [
            "assert (Col E L C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "11a27aa8ec6f69a2531e8219d38a30bb030ee8a1"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col M C C) by (conclude_def Col ).",
            "VernacExtend",
            "4f5595bac875a2435cd827fe26929cca485e327d"
        ],
        [
            "assert (Meet E L M C) by (conclude_def Meet ).",
            "VernacExtend",
            "bea1ca162231961f3dc64be35089d447388a03b4"
        ],
        [
            "assert (~ Meet E L M C) by (conclude_def Par ).",
            "VernacExtend",
            "4944e0d07620aee434555cfd71c477669ee85fe2"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (eq L L) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "a8338f62315f2cbfeea2610bb3baa213f7e93ddd"
        ],
        [
            "assert (Col C L L) by (conclude_def Col ).",
            "VernacExtend",
            "3cddd539faa63bb72d7a0ed09f399f6d65b05d39"
        ],
        [
            "assert (BetS D L E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "1627ab37082804cf66f491dced0ded82ae51f7c4"
        ],
        [
            "assert (Col C L P) by (conclude_def Col ).",
            "VernacExtend",
            "bcf231fe798487f9285411b791a340aaeeac0f71"
        ],
        [
            "assert (OS D M C L) by (unfold OS; exists E; exists L; exists P; splits;auto).",
            "VernacExtend",
            "34d4245cd8c1b1f60c248245f20334fcc18b80a2"
        ],
        [
            "assert (BetS C M B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "9c3e998f4dc7aa69650a371555ca7d6d654d7af5"
        ],
        [
            "assert (neq C M) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9981259ce6f2156ffd52c134f10d47bb523c8e50"
        ],
        [
            "assert (Out C M B) by (conclude lemma_ray4).",
            "VernacExtend",
            "11ff998eb45409adbe7078ab28eab567ad1a669c"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col C C L) by (conclude_def Col ).",
            "VernacExtend",
            "f5220bb132abaf996d630e63359b0e1c66dddca2"
        ],
        [
            "assert (OS D B C L) by (conclude lemma_sameside2).",
            "VernacExtend",
            "46e948ba407e4d1eae1d7f77f6b6e8ee91fe786d"
        ],
        [
            "assert (OS B D C L) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "4c597c9456e8515952c7e752c919744f77a4de7c"
        ],
        [
            "assert (~ TS B C L D) by (conclude lemma_samenotopposite).",
            "VernacExtend",
            "6f8186fc5b30898efd776ed9f1e6d006aa0d3678"
        ],
        [
            "assert (~ Col B C L).",
            "VernacExtend",
            "0720123467daca1d302c310563e9dbf6611e9e00"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B M C) by (conclude_def Col ).",
            "VernacExtend",
            "48d3455391aa6042e4c0824a684611b5af7c8a81"
        ],
        [
            "assert (Col B C M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7063a14b6a5e5d46df26c1e86a2f3057b87e3bb9"
        ],
        [
            "assert (neq B C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
        ],
        [
            "assert (Col C M L) by (conclude lemma_collinear4).",
            "VernacExtend",
            "a6ed8673c97b29f34ead2fc5a6a3d241f97d4c7e"
        ],
        [
            "assert (Col M C L) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4d81fed7a23c2e34a791366c9f2c9f8f3d1d2053"
        ],
        [
            "assert (Col E L L) by (conclude_def Col ).",
            "VernacExtend",
            "103ab02f2f69a9d6e46f1302292ab27ba27f64fd"
        ],
        [
            "assert (Meet E L M C) by (conclude_def Meet ).",
            "VernacExtend",
            "bea1ca162231961f3dc64be35089d447388a03b4"
        ],
        [
            "assert (~ Meet E L M C) by (conclude_def Par ).",
            "VernacExtend",
            "4944e0d07620aee434555cfd71c477669ee85fe2"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (TS B C L D) by (conclude (lemma_crossimpliesopposite B D C L)).",
            "VernacExtend",
            "744c8caf33c387af6e4b342b7a8230f649b8ab3c"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CR B L D C) by (conclude lemma_crisscross).",
            "VernacExtend",
            "948ab1668704c6230ec687c4396c8b471dfc6db6"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists R, (BetS B R L /\\ BetS D R C)) by (conclude_def CR );destruct Tf as [R];spliter.",
            "VernacExtend",
            "34b9f4da6dc5e3de7cf2eb2d5afab5e5c40a26e5"
        ],
        [
            "assert (Col b m c) by (conclude_def Col ).",
            "VernacExtend",
            "53df070fb130669b2d86e19bbfd26cfb2632eb93"
        ],
        [
            "assert (Col m c b) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "89d663faa00c22156cbd5c5b6efdb9f576a6e36a"
        ],
        [
            "assert (neq b c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "dd2468271a14045de5a0a4b85d877d0bf8f3b78e"
        ],
        [
            "assert (Par e l m c) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "1d230fc95d1437d993b5e8a08fa8dd1dd7e66aed"
        ],
        [
            "assert (Par e l b c) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "6edd3e10ac07c2998d8f1c557d6f47ca2814cdfe"
        ],
        [
            "assert (Par b c e l) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "49a632be420e0f3d987f42fc097c272235ae91fb"
        ],
        [
            "assert (Col e l d) by (conclude_def Col ).",
            "VernacExtend",
            "fd6a6bdf89ea394f58af7bb3945c6a82cdac8327"
        ],
        [
            "assert (neq l d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8af82930b6137f6a44e9bac19e2c8eea2df43437"
        ],
        [
            "assert (neq d l) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "31e74a9978fc7381f1e7610ea8ad86057debe8ae"
        ],
        [
            "assert (Par b c d l) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "3a3057c621f00ce2690720a1dc5113c4a3ec761f"
        ],
        [
            "assert (neq e l) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9ee07e816e34f2314c7aab8091cd309aba008dea"
        ],
        [
            "assert (neq m c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "81fdeb6ad1fa23ee8c967b195a8acdef2795ee9b"
        ],
        [
            "assert (~ CR b d c l).",
            "VernacExtend",
            "003a4c77a0fd28ce22cc58f7741b30c04e0e53b0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (~ Col c l m).",
            "VernacExtend",
            "74c98b87c85f4dfcaa74acfd1c329a6abf6ca960"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col m c l) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9e724f6be703bb9f9c8dcec52977c0a4356c6d5f"
        ],
        [
            "assert (eq l l) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "b592a220f11ccdf9e9f24016fde9618e72d65776"
        ],
        [
            "assert (Col e l l) by (conclude_def Col ).",
            "VernacExtend",
            "0dd69a4eed0def162b94395b0cd17405c0ff25ca"
        ],
        [
            "assert (Meet e l m c) by (conclude_def Meet ).",
            "VernacExtend",
            "659884e280252a85f7c3f6e9c2ce4aa49958ada1"
        ],
        [
            "assert (~ Meet e l m c) by (conclude_def Par ).",
            "VernacExtend",
            "a3da32d5b1184d3c2ff02b9107d695bdf76af0d4"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col c l d).",
            "VernacExtend",
            "cd70df4982caf3fc2b13ef00d8f200094d076f80"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col d l c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "84887bd6568cb6cf6817cf582fb4bd38511e90fd"
        ],
        [
            "assert (Col e l d) by (conclude_def Col ).",
            "VernacExtend",
            "fd6a6bdf89ea394f58af7bb3945c6a82cdac8327"
        ],
        [
            "assert (Col d l e) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e4c396079e5993cada982093c5766b596156e6a6"
        ],
        [
            "assert (neq l d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8af82930b6137f6a44e9bac19e2c8eea2df43437"
        ],
        [
            "assert (neq d l) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "31e74a9978fc7381f1e7610ea8ad86057debe8ae"
        ],
        [
            "assert (Col l e c) by (conclude lemma_collinear4).",
            "VernacExtend",
            "df954398fb932e406547874768c48e5b2a0eb4d5"
        ],
        [
            "assert (Col e l c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3fbcbb5c7a192869eb55e5435b8575c6f6a13d73"
        ],
        [
            "assert (eq c c) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "916a0cf6a7760772073fa60385f36a27038fed41"
        ],
        [
            "assert (Col m c c) by (conclude_def Col ).",
            "VernacExtend",
            "39263b1f0987eb6ee2a1725135999f9034619649"
        ],
        [
            "assert (Meet e l m c) by (conclude_def Meet ).",
            "VernacExtend",
            "659884e280252a85f7c3f6e9c2ce4aa49958ada1"
        ],
        [
            "assert (~ Meet e l m c) by (conclude_def Par ).",
            "VernacExtend",
            "a3da32d5b1184d3c2ff02b9107d695bdf76af0d4"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (eq l l) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "b592a220f11ccdf9e9f24016fde9618e72d65776"
        ],
        [
            "assert (Col c l l) by (conclude_def Col ).",
            "VernacExtend",
            "59f7eac3439643d099786d5d4e535cea689cdc84"
        ],
        [
            "assert (BetS d l e) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "b0445de3fd4aee9aae97e5130a5d5102b4d878af"
        ],
        [
            "assert (Col c l p) by (conclude_def Col ).",
            "VernacExtend",
            "7cb1c267de1bdebb10f7a7b06558f1c924fa0e37"
        ],
        [
            "assert (OS d m c l) by (unfold OS; exists e;exists l;exists p;splits;auto).",
            "VernacExtend",
            "d11ed46b913b048e4614bdb77c22d1998eb90862"
        ],
        [
            "assert (BetS c m b) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "e44ec99bfc11e8312015e9ab1bb1583b5d2974f6"
        ],
        [
            "assert (neq c m) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "718e6899edda124dd044b6b4742e3dfcddff56f5"
        ],
        [
            "assert (Out c m b) by (conclude lemma_ray4).",
            "VernacExtend",
            "a7b62134ae6d1e33b76d8665185ec70807881c8d"
        ],
        [
            "assert (eq c c) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "916a0cf6a7760772073fa60385f36a27038fed41"
        ],
        [
            "assert (Col c c l) by (conclude_def Col ).",
            "VernacExtend",
            "163646cdb838fcb49ee12fc5fbe68f7e87fc53de"
        ],
        [
            "assert (OS d b c l) by (conclude lemma_sameside2).",
            "VernacExtend",
            "3dde7d15f3da7a028af766519602c9c55ab7d4ec"
        ],
        [
            "assert (OS b d c l) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "0e5240da65b087aea05005053bbe33d3dd70f88a"
        ],
        [
            "assert (~ TS b c l d) by (conclude lemma_samenotopposite).",
            "VernacExtend",
            "fa78bf94a05451553135bd1dfa28e7fd1ec0f92e"
        ],
        [
            "assert (~ Col b c l).",
            "VernacExtend",
            "08c6f4316b7fc3b32a882542ec5c94150ce8d917"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col b m c) by (conclude_def Col ).",
            "VernacExtend",
            "53df070fb130669b2d86e19bbfd26cfb2632eb93"
        ],
        [
            "assert (Col b c m) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9f62b9ab0cc87168088c9d402373313a144b4226"
        ],
        [
            "assert (neq b c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "dd2468271a14045de5a0a4b85d877d0bf8f3b78e"
        ],
        [
            "assert (Col c m l) by (conclude lemma_collinear4).",
            "VernacExtend",
            "35e2ee61b2fa719bcffea980bf0522e718b921d8"
        ],
        [
            "assert (Col m c l) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9e724f6be703bb9f9c8dcec52977c0a4356c6d5f"
        ],
        [
            "assert (Col e l l) by (conclude_def Col ).",
            "VernacExtend",
            "0dd69a4eed0def162b94395b0cd17405c0ff25ca"
        ],
        [
            "assert (Meet e l m c) by (conclude_def Meet ).",
            "VernacExtend",
            "659884e280252a85f7c3f6e9c2ce4aa49958ada1"
        ],
        [
            "assert (~ Meet e l m c) by (conclude_def Par ).",
            "VernacExtend",
            "a3da32d5b1184d3c2ff02b9107d695bdf76af0d4"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (TS b c l d) by (conclude (lemma_crossimpliesopposite b d c l)).",
            "VernacExtend",
            "654192b25aa7b5bcc571e7c32525792394974e39"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CR b l d c) by (conclude lemma_crisscross).",
            "VernacExtend",
            "38eb8169aafe44d32f626a20173968e0d9dcda16"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists r, (BetS b r l /\\ BetS d r c)) by (conclude_def CR );destruct Tf as [r];spliter.",
            "VernacExtend",
            "d9d95cdc9f4053e86b70b1a1493f5a43fba41d4e"
        ],
        [
            "assert (EF D B C L d b c l) by (conclude axiom_paste2).",
            "VernacExtend",
            "20bf9bfce9a18b87c450feb7793b5df038cbde2f"
        ],
        [
            "assert (EF D B C L b d l c) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "e7ac0c6828905995e163087374aa1b93c9685db8"
        ],
        [
            "assert (EF b d l c D B C L) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "ad6ae3034e1a4de4a7dc6843295f76f46645cc6c"
        ],
        [
            "assert (EF b d l c B D L C) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "f5f620ff69e55133b281b0e152924daeecf0976d"
        ],
        [
            "assert (EF B D L C b d l c) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "81f664542d030043b9ad1ceff9cf68cf95b91c6d"
        ],
        [
            "assert (ET E C L l e c) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "ffdcd9444cb9aabd47f1ef43d423444bc3266481"
        ],
        [
            "assert (ET l e c E C L) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "c4ffa5035011374c51e9f07b95bf1ec3a82af240"
        ],
        [
            "assert (ET l e c L E C) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "e50756218ac0fcdd5cb4033f4c2c2a98c5136c8c"
        ],
        [
            "assert (ET L E C l e c) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "fe0cd93f4409c7f9571a4e717fc88754dc5bcb55"
        ],
        [
            "assert (BetS D L E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "1627ab37082804cf66f491dced0ded82ae51f7c4"
        ],
        [
            "assert (BetS d l e) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "b0445de3fd4aee9aae97e5130a5d5102b4d878af"
        ],
        [
            "assert (Par B C L E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "e76142d00ee7138166d9917382dc3d80aa626fb6"
        ],
        [
            "assert (Col E L D) by (conclude_def Col ).",
            "VernacExtend",
            "42ac36125d7f135032b8a76c4e743ec49bd046de"
        ],
        [
            "assert (Col L E D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1d93ebf570ae69f075ea5bfb637fc5dd2aa985b5"
        ],
        [
            "assert (neq E D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8953521083819802a3146a18d02061c64859cca"
        ],
        [
            "assert (neq D E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "442089e1669e0153e6cbac0113cb9338319b92ca"
        ],
        [
            "assert (Par B C D E) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "d38fc0b979adf5896fa340f115a7d2952902300f"
        ],
        [
            "assert (Par M L C E) by (conclude_def PG ).",
            "VernacExtend",
            "fbeed6bb94e1528409389085b171c4fd4c32fe3c"
        ],
        [
            "assert (Par C E M L) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "922e41af56996e6e6c2934cee5c2b25adec82931"
        ],
        [
            "assert (TP C E M L) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "3099d061ec8a621ca86a4f00a3fd7b42e3194f36"
        ],
        [
            "assert (OS M L C E) by (conclude_def TP ).",
            "VernacExtend",
            "1ba448539990242cdf8dbf7a71869eb0a9a64e11"
        ],
        [
            "assert (OS L M C E) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "aa75e97a073561ccff1fa69dc629676d132b419b"
        ],
        [
            "assert (neq M C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "e4e81160a42288216f6278332fd50e638befc3e3"
        ],
        [
            "assert (neq C M) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d8c47da8a9142b14f0728721ea797a85bcf6f30c"
        ],
        [
            "assert (BetS C M B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "9c3e998f4dc7aa69650a371555ca7d6d654d7af5"
        ],
        [
            "assert (Out C M B) by (conclude lemma_ray4).",
            "VernacExtend",
            "11ff998eb45409adbe7078ab28eab567ad1a669c"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col C C E) by (conclude_def Col ).",
            "VernacExtend",
            "51d7ec87318f9008f5aa473854ab4cb3abd0aa83"
        ],
        [
            "assert (OS L B C E) by (conclude lemma_sameside2).",
            "VernacExtend",
            "12dcb22055b1e92d7129ac88bdec9ca3f9bbea05"
        ],
        [
            "assert (OS B L C E) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "0f6c9b2e718129ee5dbe11875a7d05479d173035"
        ],
        [
            "assert (neq E L) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8cfb11db53d9b25244b132df3c5bafd8773372ee"
        ],
        [
            "assert (Out E L D) by (conclude lemma_ray4).",
            "VernacExtend",
            "47d70c74a58fe03d9cf633054b0275587e85e303"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (Col C E E) by (conclude_def Col ).",
            "VernacExtend",
            "23880f92a5db3f2807fb78c640dd239e90e26d37"
        ],
        [
            "assert (OS B D C E) by (conclude lemma_sameside2).",
            "VernacExtend",
            "4f39d0be445e87238b9e1c8215e5fa7be89572ff"
        ],
        [
            "assert (OS D B C E) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "f2f8546ca257b1cdbb0bf47f69c2079bfa21b373"
        ],
        [
            "assert (~ CR B D C E).",
            "VernacExtend",
            "4d844eccf8f949f77482b926c7b36c255fa3221a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (~ Col B C E).",
            "VernacExtend",
            "fa4960d9c9fe82aa8a371e991dca1f396369033a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (Col D E E) by (conclude_def Col ).",
            "VernacExtend",
            "55655b4095c04bedb0384063935384ccdda6004f"
        ],
        [
            "assert (Meet B C D E) by (conclude_def Meet ).",
            "VernacExtend",
            "40d518f25ccf1030e12e3a24ffcf6f252b861256"
        ],
        [
            "assert (~ Meet B C D E) by (conclude_def Par ).",
            "VernacExtend",
            "f642301013c0f18227a969d507c75f3b281efab5"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (TS B C E D) by (conclude (lemma_crossimpliesopposite B D C E)).",
            "VernacExtend",
            "4e0e4da65ccd400318ecc83c54837f716488a1a2"
        ],
        [
            "assert (~ TS B C E D) by (conclude lemma_samenotopposite).",
            "VernacExtend",
            "ec98c0cf77afbd8947966d6f38b2102d8ce2d861"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CR B E D C) by (conclude lemma_crisscross).",
            "VernacExtend",
            "6954e4975edfa8d90f612943b9d7774f46ba6e23"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists T, (BetS B T E /\\ BetS D T C)) by (conclude_def CR );destruct Tf as [T];spliter.",
            "VernacExtend",
            "8040506966a462783a4c2c8b159bace69cbb584c"
        ],
        [
            "assert (Par b c l e) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "3d1ce1ab3db3dfd97d377a661223378e267118cf"
        ],
        [
            "assert (Col e l d) by (conclude_def Col ).",
            "VernacExtend",
            "fd6a6bdf89ea394f58af7bb3945c6a82cdac8327"
        ],
        [
            "assert (Col l e d) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b9c225b545957a7662f69756af71b2ad84f6352a"
        ],
        [
            "assert (neq e d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "6aa1cff1f4e81457f466338de0c511c10db5ba75"
        ],
        [
            "assert (neq d e) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "33bd363ecb5276876fc55a26aa5af4a422e3e76a"
        ],
        [
            "assert (Par b c d e) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "f43f613404fd85c67739c428eae1fcd8a9bb9554"
        ],
        [
            "assert (Par m l c e) by (conclude_def PG ).",
            "VernacExtend",
            "8aa34fea7c9d55e6cb1c2b3244420c22e6f3575b"
        ],
        [
            "assert (Par c e m l) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "060cffb7c0f8a9f24035e7772067cb526eeb648e"
        ],
        [
            "assert (TP c e m l) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "cd26c72b8507625cd8a1360aecf0ba29ad938b82"
        ],
        [
            "assert (OS m l c e) by (conclude_def TP ).",
            "VernacExtend",
            "6de42fb98740fc88503037098cbd4c822aa099b7"
        ],
        [
            "assert (OS l m c e) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "c4b869a5ad6e7044a23c9c17fe2e1fa3d9267b1f"
        ],
        [
            "assert (neq m c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "81fdeb6ad1fa23ee8c967b195a8acdef2795ee9b"
        ],
        [
            "assert (neq c m) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "8628e40d0c3925752d89ffe30afd9707ba458141"
        ],
        [
            "assert (BetS c m b) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "e44ec99bfc11e8312015e9ab1bb1583b5d2974f6"
        ],
        [
            "assert (Out c m b) by (conclude lemma_ray4).",
            "VernacExtend",
            "a7b62134ae6d1e33b76d8665185ec70807881c8d"
        ],
        [
            "assert (eq c c) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "916a0cf6a7760772073fa60385f36a27038fed41"
        ],
        [
            "assert (Col c c e) by (conclude_def Col ).",
            "VernacExtend",
            "adc24ae0308dc471740db5fa2934c05de902490e"
        ],
        [
            "assert (OS l b c e) by (conclude lemma_sameside2).",
            "VernacExtend",
            "8690219b55a132b3b590e71330d7b1c5c9bb2034"
        ],
        [
            "assert (OS b l c e) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "43b8d9bd4ad5cdb3e5ff5a0ebde76f368521b5e6"
        ],
        [
            "assert (neq e l) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9ee07e816e34f2314c7aab8091cd309aba008dea"
        ],
        [
            "assert (Out e l d) by (conclude lemma_ray4).",
            "VernacExtend",
            "bc1b7bf92d8db5b3d7e5df9f2eacacce54254d09"
        ],
        [
            "assert (eq e e) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "65c9fd60c38f66050c64cfd2268aa2fee7d9c064"
        ],
        [
            "assert (Col c e e) by (conclude_def Col ).",
            "VernacExtend",
            "68b81b19dd3731f730eed74229da11db5718a5db"
        ],
        [
            "assert (OS b d c e) by (conclude lemma_sameside2).",
            "VernacExtend",
            "47fe1437d8569f7ff40a7e8586b55f2bf1304bc7"
        ],
        [
            "assert (OS d b c e) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "b4360d58aebfcbf779f0f5d87074d7ceddbf5948"
        ],
        [
            "assert (~ CR b d c e).",
            "VernacExtend",
            "b431e3ebde863e124ba5f7c79d01ac0a4d8fb68d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (~ Col b c e).",
            "VernacExtend",
            "d80d4bbf08f23ebbc7491ab93d7c5a304e134e1d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq e e) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "65c9fd60c38f66050c64cfd2268aa2fee7d9c064"
        ],
        [
            "assert (Col d e e) by (conclude_def Col ).",
            "VernacExtend",
            "013b1420e9c09591700a9ced542ec7992240009f"
        ],
        [
            "assert (Meet b c d e) by (conclude_def Meet ).",
            "VernacExtend",
            "3a3ee07e3e9f26efadbf50b8bac1d3a41bb32cee"
        ],
        [
            "assert (~ Meet b c d e) by (conclude_def Par ).",
            "VernacExtend",
            "55240e5d987d17a27754d607408cf68553bae250"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (TS b c e d) by (conclude (lemma_crossimpliesopposite b d c e)).",
            "VernacExtend",
            "5a20248f3ee933b1f79d807034463900b8e07232"
        ],
        [
            "assert (~ TS b c e d) by (conclude lemma_samenotopposite).",
            "VernacExtend",
            "5c1d264e3695dda48ebf073709bdead24703dc0e"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CR b e d c) by (conclude lemma_crisscross).",
            "VernacExtend",
            "2fc3f6a8a0dd015240119a180edfff2458ea8b9f"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists t, (BetS b t e /\\ BetS d t c)) by (conclude_def CR );destruct Tf as [t];spliter.",
            "VernacExtend",
            "60ee7f797b7ca8cab79278d04701aecdfbb42a84"
        ],
        [
            "assert (EF B D E C b d e c) by (conclude axiom_paste2).",
            "VernacExtend",
            "13e2fe87c4aaa879ab2c0b5af42ff6a05ab804f5"
        ],
        [
            "assert (EF B D E C b c e d) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "175b53660f1886955bb07a3274e82359b8c53a02"
        ],
        [
            "assert (EF b c e d B D E C) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "6782fc46236d8f4651bab6bf8b80e396435e0de0"
        ],
        [
            "assert (EF b c e d B C E D) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "416b73b9b8a1c1cc3ad81510775582a026ec13bb"
        ],
        [
            "assert (EF B C E D b c e d) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "f6c840c73d0ff810e317ddb4590cd05ca3a07120"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_paste5",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (PG M C E L) by (conclude lemma_rectangleparallelogram).",
                        "VernacExtend",
                        "fd8065fa05e776075d1cb09907c5a56d4f3dfd85"
                    ]
                },
                {
                    "command": [
                        "assert (PG m c e l) by (conclude lemma_rectangleparallelogram).",
                        "VernacExtend",
                        "c41457409bdf351f8074eecc1a9b7cb83e4ba1f8"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists P, (BetS M P E /\\ BetS C P L)) by (conclude lemma_diagonalsmeet);destruct Tf as [P];spliter.",
                        "VernacExtend",
                        "40b440341c1a3e0fa0a452ab3e32654afcb854d0"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists p, (BetS m p e /\\ BetS c p l)) by (conclude lemma_diagonalsmeet);destruct Tf as [p];spliter.",
                        "VernacExtend",
                        "2409ee37dcd2b7c3fdf41cb1499971c754da4e05"
                    ]
                },
                {
                    "command": [
                        "assert (Par M C E L) by (conclude_def PG ).",
                        "VernacExtend",
                        "a0a4a0ab38ba4540b829516989cd69fa6987551f"
                    ]
                },
                {
                    "command": [
                        "assert (nCol M C L) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "b65204a6fd53dd7265721341b86ff1955507e990"
                    ]
                },
                {
                    "command": [
                        "assert (Par m c e l) by (conclude_def PG ).",
                        "VernacExtend",
                        "46de8965cd916430a8170a330b564ea79f004c17"
                    ]
                },
                {
                    "command": [
                        "assert (nCol m c l) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "f243cd747abdae907f8c89f4c7466baba311e502"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 C M L L E C) by (conclude proposition_34).",
                        "VernacExtend",
                        "98e19f03cadbc70b2edad919e32680729c6710a8"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 c m l l e c) by (conclude proposition_34).",
                        "VernacExtend",
                        "5e28c66872d9a7bcdae09c54cba6776a05f7115f"
                    ]
                },
                {
                    "command": [
                        "assert (ET C M L L E C) by (conclude axiom_congruentequal).",
                        "VernacExtend",
                        "9290b8cc2f15c1efc7b786f4d4c9ee8648fb7884"
                    ]
                },
                {
                    "command": [
                        "assert (ET c m l l e c) by (conclude axiom_congruentequal).",
                        "VernacExtend",
                        "93b8ac4bb883358bab6fade9275dcceee6a9babb"
                    ]
                },
                {
                    "command": [
                        "assert (CR M E C L) by (conclude_def RE ).",
                        "VernacExtend",
                        "a610a510f1a0638496c02757f7c6c5a0011e096e"
                    ]
                },
                {
                    "command": [
                        "assert (CR m e c l) by (conclude_def RE ).",
                        "VernacExtend",
                        "429e545a0bb7782613cb6713b68933236452a4b5"
                    ]
                },
                {
                    "command": [
                        "assert (ET c m l c l e) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "74aa5b2e55b91ee5ecec64c13ee20490132694fd"
                    ]
                },
                {
                    "command": [
                        "assert (ET c l e c m l) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "1239537777b7fbcd5f7673779476f72654c86982"
                    ]
                },
                {
                    "command": [
                        "assert (ET c l e m c l) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "73ec11aa5be30106b299b56c753c5d095f573abf"
                    ]
                },
                {
                    "command": [
                        "assert (ET m c l c l e) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "efe90c2faac8b84d0b53ead847bdd524232d8cb7"
                    ]
                },
                {
                    "command": [
                        "assert (ET C M L C L E) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "e43eca7fe1a0d68fe26bbc4cbf8ca623be5707a9"
                    ]
                },
                {
                    "command": [
                        "assert (ET C L E C M L) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "fb12b302ca464f0ee4af29f30164414e91741df9"
                    ]
                },
                {
                    "command": [
                        "assert (ET C L E M C L) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "fd05e574710c2a6bfdce9d88da17af4291f57f40"
                    ]
                },
                {
                    "command": [
                        "assert (ET M C L C L E) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "8c84d724d90568a9d1400f0ed396064aaccc5730"
                    ]
                },
                {
                    "command": [
                        "assert (TS M C L E) by (forward_using lemma_crossimpliesopposite).",
                        "VernacExtend",
                        "29f97c284d9236d5e076b33973558fd8863a4b65"
                    ]
                },
                {
                    "command": [
                        "assert (TS m c l e) by (forward_using lemma_crossimpliesopposite).",
                        "VernacExtend",
                        "687bb9afa778e35e768e3261f40aef556aea585b"
                    ]
                },
                {
                    "command": [
                        "assert (ET M C L m c l) by (conclude axiom_halvesofequals).",
                        "VernacExtend",
                        "242ab213d8673c3d32f496b4d924ba14ee5955c6"
                    ]
                },
                {
                    "command": [
                        "assert (EF M C E L e c m l) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "44c05a3ce2493c53a2a978972576994771b43139"
                    ]
                },
                {
                    "command": [
                        "assert (EF e c m l M C E L) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "ae6d117721f4a0e7608353f831bf7be02d215745"
                    ]
                },
                {
                    "command": [
                        "assert (EF e c m l E C M L) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "4407b2d2d475371332469b789fcf55eac54d98dc"
                    ]
                },
                {
                    "command": [
                        "assert (EF E C M L e c m l) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "b1622c5d645cffe92c3daf7eba63db3d536b0bd5"
                    ]
                },
                {
                    "command": [
                        "assert (TS E C L M) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "c88b1273bcef2d120320dc03cde4d93608913470"
                    ]
                },
                {
                    "command": [
                        "assert (TS e c l m) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "2fa104ee2ccca8c76933ef8383f4463de6f4a150"
                    ]
                },
                {
                    "command": [
                        "assert (ET M C L E C L) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "ceeff4ce7a232c4d55382a4c2932581e1cfc9c02"
                    ]
                },
                {
                    "command": [
                        "assert (ET E C L M C L) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "f21ba600b86c3e0095e8107f3527f51f4ea1f4f0"
                    ]
                },
                {
                    "command": [
                        "assert (ET E C L C L M) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "d508cec433b6049a59abaf943ae64b021a482024"
                    ]
                },
                {
                    "command": [
                        "assert (ET m c l e c l) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "059fd00032561e21b0226699195cbdd266adf4b8"
                    ]
                },
                {
                    "command": [
                        "assert (ET e c l m c l) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "ec94edbab8d7b530c3f3d70bfddd908abf356293"
                    ]
                },
                {
                    "command": [
                        "assert (ET e c l c l m) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "1ac57adea30cef5e9017528d80b9476ade4d42b6"
                    ]
                },
                {
                    "command": [
                        "assert (ET E C L e c l) by (conclude axiom_halvesofequals).",
                        "VernacExtend",
                        "df92232ec604e72660d4b11329c4918a0fbfd582"
                    ]
                },
                {
                    "command": [
                        "assert (EF B M L D d b m l) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "7365798ff970ff12c752901422004164761555f6"
                    ]
                },
                {
                    "command": [
                        "assert (EF d b m l B M L D) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "3394fb1cb76a71cd3f994c84a15c973b7f1ac042"
                    ]
                },
                {
                    "command": [
                        "assert (EF d b m l D B M L) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "f338ce9df27176d6a4edbe49622ded51b52264ac"
                    ]
                },
                {
                    "command": [
                        "assert (EF D B M L d b m l) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "f4a8fa6adfc967931ee7ca7f19ae371843829b8d"
                    ]
                },
                {
                    "command": [
                        "assert (Col B M C) by (conclude_def Col ).",
                        "VernacExtend",
                        "48d3455391aa6042e4c0824a684611b5af7c8a81"
                    ]
                },
                {
                    "command": [
                        "assert (Col M C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "36c11ae0ed45e0592664ffa86b3d4a80bbf6aaaa"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
                    ]
                },
                {
                    "command": [
                        "assert (Par E L M C) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "123bd2b74344c119561a12773a2f1bc83414b33e"
                    ]
                },
                {
                    "command": [
                        "assert (Par E L B C) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "0d22429120ea54e96e18c5611b461e9e4c2f6a6e"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C E L) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "beee4157195b8e60459a49ec56ac40f079e6bf53"
                    ]
                },
                {
                    "command": [
                        "assert (Col E L D) by (conclude_def Col ).",
                        "VernacExtend",
                        "42ac36125d7f135032b8a76c4e743ec49bd046de"
                    ]
                },
                {
                    "command": [
                        "assert (neq L D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f89c9e4a38e443d464ed7dc58f154c356e04750f"
                    ]
                },
                {
                    "command": [
                        "assert (neq D L) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "1080cdcababa724836c0b3af577d19487a9cfc14"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C D L) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "84ecd441a9bc88eacd1d224fa0f46462874cfe75"
                    ]
                },
                {
                    "command": [
                        "assert (neq E L) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8cfb11db53d9b25244b132df3c5bafd8773372ee"
                    ]
                },
                {
                    "command": [
                        "assert (neq M C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "e4e81160a42288216f6278332fd50e638befc3e3"
                    ]
                },
                {
                    "command": [
                        "assert (~ CR B D C L).",
                        "VernacExtend",
                        "1de3dcac37f26fd394c871807d04c239baf69bcd"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C L M).",
                        "VernacExtend",
                        "c449ae59849e6b80bce91ad9f19daec8e7ef254a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col M C L) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4d81fed7a23c2e34a791366c9f2c9f8f3d1d2053"
                    ]
                },
                {
                    "command": [
                        "assert (eq L L) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "a8338f62315f2cbfeea2610bb3baa213f7e93ddd"
                    ]
                },
                {
                    "command": [
                        "assert (Col E L L) by (conclude_def Col ).",
                        "VernacExtend",
                        "103ab02f2f69a9d6e46f1302292ab27ba27f64fd"
                    ]
                },
                {
                    "command": [
                        "assert (Meet E L M C) by (conclude_def Meet ).",
                        "VernacExtend",
                        "bea1ca162231961f3dc64be35089d447388a03b4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet E L M C) by (conclude_def Par ).",
                        "VernacExtend",
                        "4944e0d07620aee434555cfd71c477669ee85fe2"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C L D).",
                        "VernacExtend",
                        "4b2d29469b9e283c978b5ff1a731c5a400ef969d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col D L C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "21b0208a5dd7f2874b6b933769e05f2b61a68443"
                    ]
                },
                {
                    "command": [
                        "assert (Col E L D) by (conclude_def Col ).",
                        "VernacExtend",
                        "42ac36125d7f135032b8a76c4e743ec49bd046de"
                    ]
                },
                {
                    "command": [
                        "assert (Col D L E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6a31110730796fc76daab6b4e804f36078ff13fe"
                    ]
                },
                {
                    "command": [
                        "assert (neq L D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f89c9e4a38e443d464ed7dc58f154c356e04750f"
                    ]
                },
                {
                    "command": [
                        "assert (neq D L) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "1080cdcababa724836c0b3af577d19487a9cfc14"
                    ]
                },
                {
                    "command": [
                        "assert (Col L E C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "4952638c8a41900bc4dd0702758f077dda1e1a30"
                    ]
                },
                {
                    "command": [
                        "assert (Col E L C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "11a27aa8ec6f69a2531e8219d38a30bb030ee8a1"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col M C C) by (conclude_def Col ).",
                        "VernacExtend",
                        "4f5595bac875a2435cd827fe26929cca485e327d"
                    ]
                },
                {
                    "command": [
                        "assert (Meet E L M C) by (conclude_def Meet ).",
                        "VernacExtend",
                        "bea1ca162231961f3dc64be35089d447388a03b4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet E L M C) by (conclude_def Par ).",
                        "VernacExtend",
                        "4944e0d07620aee434555cfd71c477669ee85fe2"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (eq L L) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "a8338f62315f2cbfeea2610bb3baa213f7e93ddd"
                    ]
                },
                {
                    "command": [
                        "assert (Col C L L) by (conclude_def Col ).",
                        "VernacExtend",
                        "3cddd539faa63bb72d7a0ed09f399f6d65b05d39"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D L E) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "1627ab37082804cf66f491dced0ded82ae51f7c4"
                    ]
                },
                {
                    "command": [
                        "assert (Col C L P) by (conclude_def Col ).",
                        "VernacExtend",
                        "bcf231fe798487f9285411b791a340aaeeac0f71"
                    ]
                },
                {
                    "command": [
                        "assert (OS D M C L) by (unfold OS; exists E; exists L; exists P; splits;auto).",
                        "VernacExtend",
                        "34d4245cd8c1b1f60c248245f20334fcc18b80a2"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C M B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "9c3e998f4dc7aa69650a371555ca7d6d654d7af5"
                    ]
                },
                {
                    "command": [
                        "assert (neq C M) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9981259ce6f2156ffd52c134f10d47bb523c8e50"
                    ]
                },
                {
                    "command": [
                        "assert (Out C M B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "11ff998eb45409adbe7078ab28eab567ad1a669c"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col C C L) by (conclude_def Col ).",
                        "VernacExtend",
                        "f5220bb132abaf996d630e63359b0e1c66dddca2"
                    ]
                },
                {
                    "command": [
                        "assert (OS D B C L) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "46e948ba407e4d1eae1d7f77f6b6e8ee91fe786d"
                    ]
                },
                {
                    "command": [
                        "assert (OS B D C L) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "4c597c9456e8515952c7e752c919744f77a4de7c"
                    ]
                },
                {
                    "command": [
                        "assert (~ TS B C L D) by (conclude lemma_samenotopposite).",
                        "VernacExtend",
                        "6f8186fc5b30898efd776ed9f1e6d006aa0d3678"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C L).",
                        "VernacExtend",
                        "0720123467daca1d302c310563e9dbf6611e9e00"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B M C) by (conclude_def Col ).",
                        "VernacExtend",
                        "48d3455391aa6042e4c0824a684611b5af7c8a81"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7063a14b6a5e5d46df26c1e86a2f3057b87e3bb9"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
                    ]
                },
                {
                    "command": [
                        "assert (Col C M L) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "a6ed8673c97b29f34ead2fc5a6a3d241f97d4c7e"
                    ]
                },
                {
                    "command": [
                        "assert (Col M C L) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4d81fed7a23c2e34a791366c9f2c9f8f3d1d2053"
                    ]
                },
                {
                    "command": [
                        "assert (Col E L L) by (conclude_def Col ).",
                        "VernacExtend",
                        "103ab02f2f69a9d6e46f1302292ab27ba27f64fd"
                    ]
                },
                {
                    "command": [
                        "assert (Meet E L M C) by (conclude_def Meet ).",
                        "VernacExtend",
                        "bea1ca162231961f3dc64be35089d447388a03b4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet E L M C) by (conclude_def Par ).",
                        "VernacExtend",
                        "4944e0d07620aee434555cfd71c477669ee85fe2"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (TS B C L D) by (conclude (lemma_crossimpliesopposite B D C L)).",
                        "VernacExtend",
                        "744c8caf33c387af6e4b342b7a8230f649b8ab3c"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CR B L D C) by (conclude lemma_crisscross).",
                        "VernacExtend",
                        "948ab1668704c6230ec687c4396c8b471dfc6db6"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists R, (BetS B R L /\\ BetS D R C)) by (conclude_def CR );destruct Tf as [R];spliter.",
                        "VernacExtend",
                        "34b9f4da6dc5e3de7cf2eb2d5afab5e5c40a26e5"
                    ]
                },
                {
                    "command": [
                        "assert (Col b m c) by (conclude_def Col ).",
                        "VernacExtend",
                        "53df070fb130669b2d86e19bbfd26cfb2632eb93"
                    ]
                },
                {
                    "command": [
                        "assert (Col m c b) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "89d663faa00c22156cbd5c5b6efdb9f576a6e36a"
                    ]
                },
                {
                    "command": [
                        "assert (neq b c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "dd2468271a14045de5a0a4b85d877d0bf8f3b78e"
                    ]
                },
                {
                    "command": [
                        "assert (Par e l m c) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "1d230fc95d1437d993b5e8a08fa8dd1dd7e66aed"
                    ]
                },
                {
                    "command": [
                        "assert (Par e l b c) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "6edd3e10ac07c2998d8f1c557d6f47ca2814cdfe"
                    ]
                },
                {
                    "command": [
                        "assert (Par b c e l) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "49a632be420e0f3d987f42fc097c272235ae91fb"
                    ]
                },
                {
                    "command": [
                        "assert (Col e l d) by (conclude_def Col ).",
                        "VernacExtend",
                        "fd6a6bdf89ea394f58af7bb3945c6a82cdac8327"
                    ]
                },
                {
                    "command": [
                        "assert (neq l d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8af82930b6137f6a44e9bac19e2c8eea2df43437"
                    ]
                },
                {
                    "command": [
                        "assert (neq d l) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "31e74a9978fc7381f1e7610ea8ad86057debe8ae"
                    ]
                },
                {
                    "command": [
                        "assert (Par b c d l) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "3a3057c621f00ce2690720a1dc5113c4a3ec761f"
                    ]
                },
                {
                    "command": [
                        "assert (neq e l) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9ee07e816e34f2314c7aab8091cd309aba008dea"
                    ]
                },
                {
                    "command": [
                        "assert (neq m c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "81fdeb6ad1fa23ee8c967b195a8acdef2795ee9b"
                    ]
                },
                {
                    "command": [
                        "assert (~ CR b d c l).",
                        "VernacExtend",
                        "003a4c77a0fd28ce22cc58f7741b30c04e0e53b0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col c l m).",
                        "VernacExtend",
                        "74c98b87c85f4dfcaa74acfd1c329a6abf6ca960"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col m c l) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9e724f6be703bb9f9c8dcec52977c0a4356c6d5f"
                    ]
                },
                {
                    "command": [
                        "assert (eq l l) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "b592a220f11ccdf9e9f24016fde9618e72d65776"
                    ]
                },
                {
                    "command": [
                        "assert (Col e l l) by (conclude_def Col ).",
                        "VernacExtend",
                        "0dd69a4eed0def162b94395b0cd17405c0ff25ca"
                    ]
                },
                {
                    "command": [
                        "assert (Meet e l m c) by (conclude_def Meet ).",
                        "VernacExtend",
                        "659884e280252a85f7c3f6e9c2ce4aa49958ada1"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet e l m c) by (conclude_def Par ).",
                        "VernacExtend",
                        "a3da32d5b1184d3c2ff02b9107d695bdf76af0d4"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col c l d).",
                        "VernacExtend",
                        "cd70df4982caf3fc2b13ef00d8f200094d076f80"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col d l c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "84887bd6568cb6cf6817cf582fb4bd38511e90fd"
                    ]
                },
                {
                    "command": [
                        "assert (Col e l d) by (conclude_def Col ).",
                        "VernacExtend",
                        "fd6a6bdf89ea394f58af7bb3945c6a82cdac8327"
                    ]
                },
                {
                    "command": [
                        "assert (Col d l e) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e4c396079e5993cada982093c5766b596156e6a6"
                    ]
                },
                {
                    "command": [
                        "assert (neq l d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8af82930b6137f6a44e9bac19e2c8eea2df43437"
                    ]
                },
                {
                    "command": [
                        "assert (neq d l) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "31e74a9978fc7381f1e7610ea8ad86057debe8ae"
                    ]
                },
                {
                    "command": [
                        "assert (Col l e c) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "df954398fb932e406547874768c48e5b2a0eb4d5"
                    ]
                },
                {
                    "command": [
                        "assert (Col e l c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3fbcbb5c7a192869eb55e5435b8575c6f6a13d73"
                    ]
                },
                {
                    "command": [
                        "assert (eq c c) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "916a0cf6a7760772073fa60385f36a27038fed41"
                    ]
                },
                {
                    "command": [
                        "assert (Col m c c) by (conclude_def Col ).",
                        "VernacExtend",
                        "39263b1f0987eb6ee2a1725135999f9034619649"
                    ]
                },
                {
                    "command": [
                        "assert (Meet e l m c) by (conclude_def Meet ).",
                        "VernacExtend",
                        "659884e280252a85f7c3f6e9c2ce4aa49958ada1"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet e l m c) by (conclude_def Par ).",
                        "VernacExtend",
                        "a3da32d5b1184d3c2ff02b9107d695bdf76af0d4"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (eq l l) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "b592a220f11ccdf9e9f24016fde9618e72d65776"
                    ]
                },
                {
                    "command": [
                        "assert (Col c l l) by (conclude_def Col ).",
                        "VernacExtend",
                        "59f7eac3439643d099786d5d4e535cea689cdc84"
                    ]
                },
                {
                    "command": [
                        "assert (BetS d l e) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "b0445de3fd4aee9aae97e5130a5d5102b4d878af"
                    ]
                },
                {
                    "command": [
                        "assert (Col c l p) by (conclude_def Col ).",
                        "VernacExtend",
                        "7cb1c267de1bdebb10f7a7b06558f1c924fa0e37"
                    ]
                },
                {
                    "command": [
                        "assert (OS d m c l) by (unfold OS; exists e;exists l;exists p;splits;auto).",
                        "VernacExtend",
                        "d11ed46b913b048e4614bdb77c22d1998eb90862"
                    ]
                },
                {
                    "command": [
                        "assert (BetS c m b) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "e44ec99bfc11e8312015e9ab1bb1583b5d2974f6"
                    ]
                },
                {
                    "command": [
                        "assert (neq c m) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "718e6899edda124dd044b6b4742e3dfcddff56f5"
                    ]
                },
                {
                    "command": [
                        "assert (Out c m b) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "a7b62134ae6d1e33b76d8665185ec70807881c8d"
                    ]
                },
                {
                    "command": [
                        "assert (eq c c) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "916a0cf6a7760772073fa60385f36a27038fed41"
                    ]
                },
                {
                    "command": [
                        "assert (Col c c l) by (conclude_def Col ).",
                        "VernacExtend",
                        "163646cdb838fcb49ee12fc5fbe68f7e87fc53de"
                    ]
                },
                {
                    "command": [
                        "assert (OS d b c l) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "3dde7d15f3da7a028af766519602c9c55ab7d4ec"
                    ]
                },
                {
                    "command": [
                        "assert (OS b d c l) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "0e5240da65b087aea05005053bbe33d3dd70f88a"
                    ]
                },
                {
                    "command": [
                        "assert (~ TS b c l d) by (conclude lemma_samenotopposite).",
                        "VernacExtend",
                        "fa78bf94a05451553135bd1dfa28e7fd1ec0f92e"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col b c l).",
                        "VernacExtend",
                        "08c6f4316b7fc3b32a882542ec5c94150ce8d917"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col b m c) by (conclude_def Col ).",
                        "VernacExtend",
                        "53df070fb130669b2d86e19bbfd26cfb2632eb93"
                    ]
                },
                {
                    "command": [
                        "assert (Col b c m) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9f62b9ab0cc87168088c9d402373313a144b4226"
                    ]
                },
                {
                    "command": [
                        "assert (neq b c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "dd2468271a14045de5a0a4b85d877d0bf8f3b78e"
                    ]
                },
                {
                    "command": [
                        "assert (Col c m l) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "35e2ee61b2fa719bcffea980bf0522e718b921d8"
                    ]
                },
                {
                    "command": [
                        "assert (Col m c l) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9e724f6be703bb9f9c8dcec52977c0a4356c6d5f"
                    ]
                },
                {
                    "command": [
                        "assert (Col e l l) by (conclude_def Col ).",
                        "VernacExtend",
                        "0dd69a4eed0def162b94395b0cd17405c0ff25ca"
                    ]
                },
                {
                    "command": [
                        "assert (Meet e l m c) by (conclude_def Meet ).",
                        "VernacExtend",
                        "659884e280252a85f7c3f6e9c2ce4aa49958ada1"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet e l m c) by (conclude_def Par ).",
                        "VernacExtend",
                        "a3da32d5b1184d3c2ff02b9107d695bdf76af0d4"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (TS b c l d) by (conclude (lemma_crossimpliesopposite b d c l)).",
                        "VernacExtend",
                        "654192b25aa7b5bcc571e7c32525792394974e39"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CR b l d c) by (conclude lemma_crisscross).",
                        "VernacExtend",
                        "38eb8169aafe44d32f626a20173968e0d9dcda16"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists r, (BetS b r l /\\ BetS d r c)) by (conclude_def CR );destruct Tf as [r];spliter.",
                        "VernacExtend",
                        "d9d95cdc9f4053e86b70b1a1493f5a43fba41d4e"
                    ]
                },
                {
                    "command": [
                        "assert (EF D B C L d b c l) by (conclude axiom_paste2).",
                        "VernacExtend",
                        "20bf9bfce9a18b87c450feb7793b5df038cbde2f"
                    ]
                },
                {
                    "command": [
                        "assert (EF D B C L b d l c) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "e7ac0c6828905995e163087374aa1b93c9685db8"
                    ]
                },
                {
                    "command": [
                        "assert (EF b d l c D B C L) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "ad6ae3034e1a4de4a7dc6843295f76f46645cc6c"
                    ]
                },
                {
                    "command": [
                        "assert (EF b d l c B D L C) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "f5f620ff69e55133b281b0e152924daeecf0976d"
                    ]
                },
                {
                    "command": [
                        "assert (EF B D L C b d l c) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "81f664542d030043b9ad1ceff9cf68cf95b91c6d"
                    ]
                },
                {
                    "command": [
                        "assert (ET E C L l e c) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "ffdcd9444cb9aabd47f1ef43d423444bc3266481"
                    ]
                },
                {
                    "command": [
                        "assert (ET l e c E C L) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "c4ffa5035011374c51e9f07b95bf1ec3a82af240"
                    ]
                },
                {
                    "command": [
                        "assert (ET l e c L E C) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "e50756218ac0fcdd5cb4033f4c2c2a98c5136c8c"
                    ]
                },
                {
                    "command": [
                        "assert (ET L E C l e c) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "fe0cd93f4409c7f9571a4e717fc88754dc5bcb55"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D L E) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "1627ab37082804cf66f491dced0ded82ae51f7c4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS d l e) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "b0445de3fd4aee9aae97e5130a5d5102b4d878af"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C L E) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "e76142d00ee7138166d9917382dc3d80aa626fb6"
                    ]
                },
                {
                    "command": [
                        "assert (Col E L D) by (conclude_def Col ).",
                        "VernacExtend",
                        "42ac36125d7f135032b8a76c4e743ec49bd046de"
                    ]
                },
                {
                    "command": [
                        "assert (Col L E D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1d93ebf570ae69f075ea5bfb637fc5dd2aa985b5"
                    ]
                },
                {
                    "command": [
                        "assert (neq E D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8953521083819802a3146a18d02061c64859cca"
                    ]
                },
                {
                    "command": [
                        "assert (neq D E) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "442089e1669e0153e6cbac0113cb9338319b92ca"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C D E) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "d38fc0b979adf5896fa340f115a7d2952902300f"
                    ]
                },
                {
                    "command": [
                        "assert (Par M L C E) by (conclude_def PG ).",
                        "VernacExtend",
                        "fbeed6bb94e1528409389085b171c4fd4c32fe3c"
                    ]
                },
                {
                    "command": [
                        "assert (Par C E M L) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "922e41af56996e6e6c2934cee5c2b25adec82931"
                    ]
                },
                {
                    "command": [
                        "assert (TP C E M L) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "3099d061ec8a621ca86a4f00a3fd7b42e3194f36"
                    ]
                },
                {
                    "command": [
                        "assert (OS M L C E) by (conclude_def TP ).",
                        "VernacExtend",
                        "1ba448539990242cdf8dbf7a71869eb0a9a64e11"
                    ]
                },
                {
                    "command": [
                        "assert (OS L M C E) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "aa75e97a073561ccff1fa69dc629676d132b419b"
                    ]
                },
                {
                    "command": [
                        "assert (neq M C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "e4e81160a42288216f6278332fd50e638befc3e3"
                    ]
                },
                {
                    "command": [
                        "assert (neq C M) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d8c47da8a9142b14f0728721ea797a85bcf6f30c"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C M B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "9c3e998f4dc7aa69650a371555ca7d6d654d7af5"
                    ]
                },
                {
                    "command": [
                        "assert (Out C M B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "11ff998eb45409adbe7078ab28eab567ad1a669c"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col C C E) by (conclude_def Col ).",
                        "VernacExtend",
                        "51d7ec87318f9008f5aa473854ab4cb3abd0aa83"
                    ]
                },
                {
                    "command": [
                        "assert (OS L B C E) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "12dcb22055b1e92d7129ac88bdec9ca3f9bbea05"
                    ]
                },
                {
                    "command": [
                        "assert (OS B L C E) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "0f6c9b2e718129ee5dbe11875a7d05479d173035"
                    ]
                },
                {
                    "command": [
                        "assert (neq E L) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8cfb11db53d9b25244b132df3c5bafd8773372ee"
                    ]
                },
                {
                    "command": [
                        "assert (Out E L D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "47d70c74a58fe03d9cf633054b0275587e85e303"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (Col C E E) by (conclude_def Col ).",
                        "VernacExtend",
                        "23880f92a5db3f2807fb78c640dd239e90e26d37"
                    ]
                },
                {
                    "command": [
                        "assert (OS B D C E) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "4f39d0be445e87238b9e1c8215e5fa7be89572ff"
                    ]
                },
                {
                    "command": [
                        "assert (OS D B C E) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "f2f8546ca257b1cdbb0bf47f69c2079bfa21b373"
                    ]
                },
                {
                    "command": [
                        "assert (~ CR B D C E).",
                        "VernacExtend",
                        "4d844eccf8f949f77482b926c7b36c255fa3221a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C E).",
                        "VernacExtend",
                        "fa4960d9c9fe82aa8a371e991dca1f396369033a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (Col D E E) by (conclude_def Col ).",
                        "VernacExtend",
                        "55655b4095c04bedb0384063935384ccdda6004f"
                    ]
                },
                {
                    "command": [
                        "assert (Meet B C D E) by (conclude_def Meet ).",
                        "VernacExtend",
                        "40d518f25ccf1030e12e3a24ffcf6f252b861256"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet B C D E) by (conclude_def Par ).",
                        "VernacExtend",
                        "f642301013c0f18227a969d507c75f3b281efab5"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (TS B C E D) by (conclude (lemma_crossimpliesopposite B D C E)).",
                        "VernacExtend",
                        "4e0e4da65ccd400318ecc83c54837f716488a1a2"
                    ]
                },
                {
                    "command": [
                        "assert (~ TS B C E D) by (conclude lemma_samenotopposite).",
                        "VernacExtend",
                        "ec98c0cf77afbd8947966d6f38b2102d8ce2d861"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CR B E D C) by (conclude lemma_crisscross).",
                        "VernacExtend",
                        "6954e4975edfa8d90f612943b9d7774f46ba6e23"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists T, (BetS B T E /\\ BetS D T C)) by (conclude_def CR );destruct Tf as [T];spliter.",
                        "VernacExtend",
                        "8040506966a462783a4c2c8b159bace69cbb584c"
                    ]
                },
                {
                    "command": [
                        "assert (Par b c l e) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "3d1ce1ab3db3dfd97d377a661223378e267118cf"
                    ]
                },
                {
                    "command": [
                        "assert (Col e l d) by (conclude_def Col ).",
                        "VernacExtend",
                        "fd6a6bdf89ea394f58af7bb3945c6a82cdac8327"
                    ]
                },
                {
                    "command": [
                        "assert (Col l e d) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b9c225b545957a7662f69756af71b2ad84f6352a"
                    ]
                },
                {
                    "command": [
                        "assert (neq e d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "6aa1cff1f4e81457f466338de0c511c10db5ba75"
                    ]
                },
                {
                    "command": [
                        "assert (neq d e) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "33bd363ecb5276876fc55a26aa5af4a422e3e76a"
                    ]
                },
                {
                    "command": [
                        "assert (Par b c d e) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "f43f613404fd85c67739c428eae1fcd8a9bb9554"
                    ]
                },
                {
                    "command": [
                        "assert (Par m l c e) by (conclude_def PG ).",
                        "VernacExtend",
                        "8aa34fea7c9d55e6cb1c2b3244420c22e6f3575b"
                    ]
                },
                {
                    "command": [
                        "assert (Par c e m l) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "060cffb7c0f8a9f24035e7772067cb526eeb648e"
                    ]
                },
                {
                    "command": [
                        "assert (TP c e m l) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "cd26c72b8507625cd8a1360aecf0ba29ad938b82"
                    ]
                },
                {
                    "command": [
                        "assert (OS m l c e) by (conclude_def TP ).",
                        "VernacExtend",
                        "6de42fb98740fc88503037098cbd4c822aa099b7"
                    ]
                },
                {
                    "command": [
                        "assert (OS l m c e) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "c4b869a5ad6e7044a23c9c17fe2e1fa3d9267b1f"
                    ]
                },
                {
                    "command": [
                        "assert (neq m c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "81fdeb6ad1fa23ee8c967b195a8acdef2795ee9b"
                    ]
                },
                {
                    "command": [
                        "assert (neq c m) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "8628e40d0c3925752d89ffe30afd9707ba458141"
                    ]
                },
                {
                    "command": [
                        "assert (BetS c m b) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "e44ec99bfc11e8312015e9ab1bb1583b5d2974f6"
                    ]
                },
                {
                    "command": [
                        "assert (Out c m b) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "a7b62134ae6d1e33b76d8665185ec70807881c8d"
                    ]
                },
                {
                    "command": [
                        "assert (eq c c) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "916a0cf6a7760772073fa60385f36a27038fed41"
                    ]
                },
                {
                    "command": [
                        "assert (Col c c e) by (conclude_def Col ).",
                        "VernacExtend",
                        "adc24ae0308dc471740db5fa2934c05de902490e"
                    ]
                },
                {
                    "command": [
                        "assert (OS l b c e) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "8690219b55a132b3b590e71330d7b1c5c9bb2034"
                    ]
                },
                {
                    "command": [
                        "assert (OS b l c e) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "43b8d9bd4ad5cdb3e5ff5a0ebde76f368521b5e6"
                    ]
                },
                {
                    "command": [
                        "assert (neq e l) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9ee07e816e34f2314c7aab8091cd309aba008dea"
                    ]
                },
                {
                    "command": [
                        "assert (Out e l d) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "bc1b7bf92d8db5b3d7e5df9f2eacacce54254d09"
                    ]
                },
                {
                    "command": [
                        "assert (eq e e) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "65c9fd60c38f66050c64cfd2268aa2fee7d9c064"
                    ]
                },
                {
                    "command": [
                        "assert (Col c e e) by (conclude_def Col ).",
                        "VernacExtend",
                        "68b81b19dd3731f730eed74229da11db5718a5db"
                    ]
                },
                {
                    "command": [
                        "assert (OS b d c e) by (conclude lemma_sameside2).",
                        "VernacExtend",
                        "47fe1437d8569f7ff40a7e8586b55f2bf1304bc7"
                    ]
                },
                {
                    "command": [
                        "assert (OS d b c e) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "b4360d58aebfcbf779f0f5d87074d7ceddbf5948"
                    ]
                },
                {
                    "command": [
                        "assert (~ CR b d c e).",
                        "VernacExtend",
                        "b431e3ebde863e124ba5f7c79d01ac0a4d8fb68d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col b c e).",
                        "VernacExtend",
                        "d80d4bbf08f23ebbc7491ab93d7c5a304e134e1d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq e e) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "65c9fd60c38f66050c64cfd2268aa2fee7d9c064"
                    ]
                },
                {
                    "command": [
                        "assert (Col d e e) by (conclude_def Col ).",
                        "VernacExtend",
                        "013b1420e9c09591700a9ced542ec7992240009f"
                    ]
                },
                {
                    "command": [
                        "assert (Meet b c d e) by (conclude_def Meet ).",
                        "VernacExtend",
                        "3a3ee07e3e9f26efadbf50b8bac1d3a41bb32cee"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet b c d e) by (conclude_def Par ).",
                        "VernacExtend",
                        "55240e5d987d17a27754d607408cf68553bae250"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (TS b c e d) by (conclude (lemma_crossimpliesopposite b d c e)).",
                        "VernacExtend",
                        "5a20248f3ee933b1f79d807034463900b8e07232"
                    ]
                },
                {
                    "command": [
                        "assert (~ TS b c e d) by (conclude lemma_samenotopposite).",
                        "VernacExtend",
                        "5c1d264e3695dda48ebf073709bdead24703dc0e"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CR b e d c) by (conclude lemma_crisscross).",
                        "VernacExtend",
                        "2fc3f6a8a0dd015240119a180edfff2458ea8b9f"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists t, (BetS b t e /\\ BetS d t c)) by (conclude_def CR );destruct Tf as [t];spliter.",
                        "VernacExtend",
                        "60ee7f797b7ca8cab79278d04701aecdfbb42a84"
                    ]
                },
                {
                    "command": [
                        "assert (EF B D E C b d e c) by (conclude axiom_paste2).",
                        "VernacExtend",
                        "13e2fe87c4aaa879ab2c0b5af42ff6a05ab804f5"
                    ]
                },
                {
                    "command": [
                        "assert (EF B D E C b c e d) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "175b53660f1886955bb07a3274e82359b8c53a02"
                    ]
                },
                {
                    "command": [
                        "assert (EF b c e d B D E C) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "6782fc46236d8f4651bab6bf8b80e396435e0de0"
                    ]
                },
                {
                    "command": [
                        "assert (EF b c e d B C E D) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "416b73b9b8a1c1cc3ad81510775582a026ec13bb"
                    ]
                },
                {
                    "command": [
                        "assert (EF B C E D b c e d) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "f6c840c73d0ff810e317ddb4590cd05ca3a07120"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}