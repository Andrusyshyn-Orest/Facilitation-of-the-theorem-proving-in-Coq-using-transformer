{
    "filename": "Elements/OriginalProofs/lemma_trichotomy1.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_congruenceflip.",
            "VernacRequire",
            "f031442025fb7e58fef1a6f0e7748226615bbedb"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthancongruence.",
            "VernacRequire",
            "00b9d54a90df13f5b7010ae28f399946381e76c8"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_outerconnectivity.",
            "VernacRequire",
            "962432c115026754cd17f134971084fa32c65801"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_trichotomy1 : forall A B C D, ~ Lt A B C D -> ~ Lt C D A B -> neq A B -> neq C D -> Cong A B C D.",
            "VernacStartTheoremProof",
            "63095c9e223c1a14a661e7dc28f84efc5d817747"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P, (BetS B A P /\\ Cong A P A B)) by (conclude lemma_extension);destruct Tf as [P];spliter.",
            "VernacExtend",
            "0ab144ce01c164ef4444f194499c30651862cc38"
        ],
        [
            "assert (BetS P A B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "65b3f67103aa24dd98526260e16d2d8f09495497"
        ],
        [
            "assert (neq A P) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d86eb9034fc0fde35affb5c3d6951a200681cdfd"
        ],
        [
            "assert (neq P A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "89aef120537308b48b9a13e0f2c13e1e6d648441"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (BetS P A E /\\ Cong A E C D)) by (conclude lemma_extension);destruct Tf as [E];spliter.",
            "VernacExtend",
            "84409045c8cc61294dcde35a004da87a9be4d4d8"
        ],
        [
            "assert (~ BetS A B E).",
            "VernacExtend",
            "d68b3a537cc2d635792f7ec20dace337f9160fb3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Cong A B A B) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "761ea9cec76c4e2f15b6c8b8fcfbf58ea93071ec"
        ],
        [
            "assert (Lt A B A E) by (conclude_def Lt ).",
            "VernacExtend",
            "965a56cf119ef1c3b700d8c2f709d6da176081a4"
        ],
        [
            "assert (Lt A B C D) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "116a0038554030a66fd78041ac6d97fdece79ff0"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ BetS A E B).",
            "VernacExtend",
            "1c501cca154f123b0fc4098c489252688f40235a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Lt C D A B) by (conclude_def Lt ).",
            "VernacExtend",
            "4e39bd85841587f63cce6bbdcc6e58618719586d"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (eq E B) by (conclude lemma_outerconnectivity).",
            "VernacExtend",
            "f452aad1ebfebd8a179b27c366f7e540aee62f1f"
        ],
        [
            "assert (Cong A B A B) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "761ea9cec76c4e2f15b6c8b8fcfbf58ea93071ec"
        ],
        [
            "assert (Cong A B A E) by (conclude cn_equalitysub).",
            "VernacExtend",
            "d72d88c0579dbad0fed1bdc9da02ea42e81a5dd1"
        ],
        [
            "assert (Cong A B C D) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "a01f09a2223a7e52a08ce11ef1f9f8e89549cd0c"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_trichotomy1",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists P, (BetS B A P /\\ Cong A P A B)) by (conclude lemma_extension);destruct Tf as [P];spliter.",
                        "VernacExtend",
                        "0ab144ce01c164ef4444f194499c30651862cc38"
                    ]
                },
                {
                    "command": [
                        "assert (BetS P A B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "65b3f67103aa24dd98526260e16d2d8f09495497"
                    ]
                },
                {
                    "command": [
                        "assert (neq A P) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d86eb9034fc0fde35affb5c3d6951a200681cdfd"
                    ]
                },
                {
                    "command": [
                        "assert (neq P A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "89aef120537308b48b9a13e0f2c13e1e6d648441"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (BetS P A E /\\ Cong A E C D)) by (conclude lemma_extension);destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "84409045c8cc61294dcde35a004da87a9be4d4d8"
                    ]
                },
                {
                    "command": [
                        "assert (~ BetS A B E).",
                        "VernacExtend",
                        "d68b3a537cc2d635792f7ec20dace337f9160fb3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B A B) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "761ea9cec76c4e2f15b6c8b8fcfbf58ea93071ec"
                    ]
                },
                {
                    "command": [
                        "assert (Lt A B A E) by (conclude_def Lt ).",
                        "VernacExtend",
                        "965a56cf119ef1c3b700d8c2f709d6da176081a4"
                    ]
                },
                {
                    "command": [
                        "assert (Lt A B C D) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "116a0038554030a66fd78041ac6d97fdece79ff0"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ BetS A E B).",
                        "VernacExtend",
                        "1c501cca154f123b0fc4098c489252688f40235a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Lt C D A B) by (conclude_def Lt ).",
                        "VernacExtend",
                        "4e39bd85841587f63cce6bbdcc6e58618719586d"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (eq E B) by (conclude lemma_outerconnectivity).",
                        "VernacExtend",
                        "f452aad1ebfebd8a179b27c366f7e540aee62f1f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B A B) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "761ea9cec76c4e2f15b6c8b8fcfbf58ea93071ec"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B A E) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "d72d88c0579dbad0fed1bdc9da02ea42e81a5dd1"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B C D) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "a01f09a2223a7e52a08ce11ef1f9f8e89549cd0c"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}