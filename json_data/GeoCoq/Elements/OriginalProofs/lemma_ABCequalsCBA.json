{
    "filename": "Elements/OriginalProofs/lemma_ABCequalsCBA.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_collinearorder.",
            "VernacRequire",
            "34aef7c567861aba437eb51ba850b6bb09ef5e53"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_ray4.",
            "VernacRequire",
            "2ad7d0941fc588ff9e4b600274293cf4b26368d5"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "8fa44f4771a9528e103d9f2054b77606cde8225f"
        ],
        [
            "Lemma lemma_ABCequalsCBA : forall A B C, nCol A B C -> CongA A B C C B A.",
            "VernacStartTheoremProof",
            "9358e68bff29ec1f4ac0bfef4b4c97aa705f0606"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~ eq B A).",
            "VernacExtend",
            "7c5358479e6131dbd5aff685ef4c86dbe092625e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq A B) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "e091317cf46e5f53a40c1c49c9759b4c4f76a3cf"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq C B).",
            "VernacExtend",
            "5b85bbab0a4342b104116e4dc988109e88c0b3dd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C B A) by (conclude_def Col ).",
            "VernacExtend",
            "fd9bf6c0667c329b0c95b8b4ad01b9760b27920f"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (BetS B A E /\\ Cong A E C B)) by (conclude lemma_extension);destruct Tf as [E];spliter.",
            "VernacExtend",
            "17aee7123437475b1959325cd1c852eb5fd899e0"
        ],
        [
            "assert (~ eq B C).",
            "VernacExtend",
            "2a4c174d5fcfb07079559ff9be73565058be28f2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq A B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "de46a552574f2453f7a5fd70fa678381c8a5676b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS B C F /\\ Cong C F A B)) by (conclude lemma_extension);destruct Tf as [F];spliter.",
            "VernacExtend",
            "87319c066a652445f8c6e0575880633f91cc2893"
        ],
        [
            "assert (Cong B A F C) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "24ac4d1fcba5d4e2e9c5f305efa09b991dcb2638"
        ],
        [
            "assert (BetS F C B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "3e1e2e0f0aaab5f22b2c4bd13929e4724dfcb268"
        ],
        [
            "assert (Cong B E F B) by (conclude cn_sumofparts).",
            "VernacExtend",
            "4d8f57d76fd86e7d3f9f3658484d3395cecc615a"
        ],
        [
            "assert (Cong F B B F) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "db161d981b540fbb8fc7e66a67a0476cff785882"
        ],
        [
            "assert (Cong B E B F) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "21322291b442cc32690f32170b86c92226859c9f"
        ],
        [
            "assert (Cong B F B E) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "687e155c6cc0f726c5b80eed3bc7d00ac46966e8"
        ],
        [
            "assert (Cong E F F E) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "f4cee35c8e7e213f2225c65b6fc2b44fea6336cf"
        ],
        [
            "assert (Out B A E) by (conclude lemma_ray4).",
            "VernacExtend",
            "84bd68733633644a8032e79d9a5cf231d70b6af4"
        ],
        [
            "assert (Out B C F) by (conclude lemma_ray4).",
            "VernacExtend",
            "d897cbae20c42bb3647f21304567c809c415cde2"
        ],
        [
            "assert (CongA A B C C B A) by (conclude_def CongA ).",
            "VernacExtend",
            "239539800e2bd7fde465afa492172f86c8642a3b"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_ABCequalsCBA",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B A).",
                        "VernacExtend",
                        "7c5358479e6131dbd5aff685ef4c86dbe092625e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq A B) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "e091317cf46e5f53a40c1c49c9759b4c4f76a3cf"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C B).",
                        "VernacExtend",
                        "5b85bbab0a4342b104116e4dc988109e88c0b3dd"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B A) by (conclude_def Col ).",
                        "VernacExtend",
                        "fd9bf6c0667c329b0c95b8b4ad01b9760b27920f"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (BetS B A E /\\ Cong A E C B)) by (conclude lemma_extension);destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "17aee7123437475b1959325cd1c852eb5fd899e0"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B C).",
                        "VernacExtend",
                        "2a4c174d5fcfb07079559ff9be73565058be28f2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "de46a552574f2453f7a5fd70fa678381c8a5676b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS B C F /\\ Cong C F A B)) by (conclude lemma_extension);destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "87319c066a652445f8c6e0575880633f91cc2893"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A F C) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "24ac4d1fcba5d4e2e9c5f305efa09b991dcb2638"
                    ]
                },
                {
                    "command": [
                        "assert (BetS F C B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "3e1e2e0f0aaab5f22b2c4bd13929e4724dfcb268"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B E F B) by (conclude cn_sumofparts).",
                        "VernacExtend",
                        "4d8f57d76fd86e7d3f9f3658484d3395cecc615a"
                    ]
                },
                {
                    "command": [
                        "assert (Cong F B B F) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "db161d981b540fbb8fc7e66a67a0476cff785882"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B E B F) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "21322291b442cc32690f32170b86c92226859c9f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B F B E) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "687e155c6cc0f726c5b80eed3bc7d00ac46966e8"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E F F E) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "f4cee35c8e7e213f2225c65b6fc2b44fea6336cf"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A E) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "84bd68733633644a8032e79d9a5cf231d70b6af4"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C F) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "d897cbae20c42bb3647f21304567c809c415cde2"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C C B A) by (conclude_def CongA ).",
                        "VernacExtend",
                        "239539800e2bd7fde465afa492172f86c8642a3b"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}