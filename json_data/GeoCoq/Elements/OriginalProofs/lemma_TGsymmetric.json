{
    "filename": "Elements/OriginalProofs/lemma_TGsymmetric.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_congruenceflip.",
            "VernacRequire",
            "f031442025fb7e58fef1a6f0e7748226615bbedb"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthancongruence.",
            "VernacRequire",
            "00b9d54a90df13f5b7010ae28f399946381e76c8"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_TGsymmetric : forall A B C a b c, TG A a B b C c -> TG B b A a C c.",
            "VernacStartTheoremProof",
            "1deb86bcc5fcad5b7d929646963294709f229919"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rename_H H; let Tf:=fresh in assert (Tf:exists H, (BetS A a H /\\ Cong a H B b /\\ Lt C c A H)) by (conclude_def TG );destruct Tf as [H];spliter.",
            "VernacExtend",
            "23cc9b5de60585228e6ba11db0281e8879c945de"
        ],
        [
            "assert (neq a H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "1aee192704658956142712493503cd7839fc0708"
        ],
        [
            "assert (neq B b) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "38fb80f634ab5649b2c94550687dcfb7c5a4fb2d"
        ],
        [
            "assert (neq A a) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "48e4d4b38b32938796c5a51b35f81527da0b9281"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS B b F /\\ Cong b F A a)) by (conclude lemma_extension);destruct Tf as [F];spliter.",
            "VernacExtend",
            "91d7d381b6ac1bc81cc52e284d0d1823753cdc73"
        ],
        [
            "assert (Cong a A F b) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "748f89ab1399b63891d49506141d3c4efd285623"
        ],
        [
            "assert (Cong A a F b) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "0780ccb9594502ddb611211f60bd3b9111de6596"
        ],
        [
            "assert (Cong a H b B) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "4db59271610e8c5278a3efa3bceed926a5cf6514"
        ],
        [
            "assert (BetS F b B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ab002caf74533e6a3adfe4888e5cc3252b83c443"
        ],
        [
            "assert (Cong A H F B) by (conclude cn_sumofparts).",
            "VernacExtend",
            "b0b01594f662afee06c5c8910ba54e7c66e896e7"
        ],
        [
            "assert (Cong A H B F) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "fe960ad1287407c288f66e12f60325a8edfcd226"
        ],
        [
            "assert (Lt C c B F) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "b6615fd294c22a5971b75eb09e3aba9d6076d6d1"
        ],
        [
            "assert (TG B b A a C c) by (conclude_def TG ).",
            "VernacExtend",
            "7dccebfcbca09ec1fce5ee68416557f2b52f4ba1"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_TGsymmetric",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rename_H H; let Tf:=fresh in assert (Tf:exists H, (BetS A a H /\\ Cong a H B b /\\ Lt C c A H)) by (conclude_def TG );destruct Tf as [H];spliter.",
                        "VernacExtend",
                        "23cc9b5de60585228e6ba11db0281e8879c945de"
                    ]
                },
                {
                    "command": [
                        "assert (neq a H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "1aee192704658956142712493503cd7839fc0708"
                    ]
                },
                {
                    "command": [
                        "assert (neq B b) by (conclude axiom_nocollapse).",
                        "VernacExtend",
                        "38fb80f634ab5649b2c94550687dcfb7c5a4fb2d"
                    ]
                },
                {
                    "command": [
                        "assert (neq A a) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "48e4d4b38b32938796c5a51b35f81527da0b9281"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS B b F /\\ Cong b F A a)) by (conclude lemma_extension);destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "91d7d381b6ac1bc81cc52e284d0d1823753cdc73"
                    ]
                },
                {
                    "command": [
                        "assert (Cong a A F b) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "748f89ab1399b63891d49506141d3c4efd285623"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A a F b) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "0780ccb9594502ddb611211f60bd3b9111de6596"
                    ]
                },
                {
                    "command": [
                        "assert (Cong a H b B) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "4db59271610e8c5278a3efa3bceed926a5cf6514"
                    ]
                },
                {
                    "command": [
                        "assert (BetS F b B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ab002caf74533e6a3adfe4888e5cc3252b83c443"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A H F B) by (conclude cn_sumofparts).",
                        "VernacExtend",
                        "b0b01594f662afee06c5c8910ba54e7c66e896e7"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A H B F) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "fe960ad1287407c288f66e12f60325a8edfcd226"
                    ]
                },
                {
                    "command": [
                        "assert (Lt C c B F) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "b6615fd294c22a5971b75eb09e3aba9d6076d6d1"
                    ]
                },
                {
                    "command": [
                        "assert (TG B b A a C c) by (conclude_def TG ).",
                        "VernacExtend",
                        "7dccebfcbca09ec1fce5ee68416557f2b52f4ba1"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}