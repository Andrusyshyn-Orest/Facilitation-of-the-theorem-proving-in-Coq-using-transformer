{
    "filename": "Elements/OriginalProofs/proposition_45.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_44.",
            "VernacRequire",
            "a5cba10feda4019b16f57fde5c701b41730f8984"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_RTcongruence.",
            "VernacRequire",
            "2b1260bdbc812d3ae53068b182b5acacc97c7a44"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_RTsymmetric.",
            "VernacRequire",
            "68445b24a803fad527f504c4e7e3ccd5e97d747f"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_14.",
            "VernacRequire",
            "26dd3b2c4032eb5a65dc8755bb78834dea77901a"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:area}.",
            "VernacContext",
            "81ffa005c6d27ee71f963c56f9847264efce50bb"
        ],
        [
            "Lemma proposition_45 : forall A B C D E J K N O R S, nCol J E N -> nCol A B D -> nCol C B D -> BetS A O C -> BetS B O D -> neq R K -> nCol K R S -> exists X Z U, PG X K Z U /\\ CongA X K Z J E N /\\ EF X K Z U A B C D /\\ Out K R Z /\\ OS X S K Z.",
            "VernacStartTheoremProof",
            "ea08fe3e99b74df3e7a021f6118045eefdb258ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (neq B D) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "c40ffb6f7c7ef362fa0ff361c6c3970adcfe852e"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists m, (BetS B m D /\\ Cong m B m D)) by (conclude proposition_10);destruct Tf as [m];spliter.",
            "VernacExtend",
            "09c2980dbb9a415fa90e5eacdcf816b78bd0576c"
        ],
        [
            "assert (Cong B m m D) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "370e3dba83bae9869ee5c23ac24c1da02edbc1ee"
        ],
        [
            "assert (Midpoint B m D) by (conclude_def Midpoint ).",
            "VernacExtend",
            "fd73d9b5a90d809db684a8cfda5e35d58c250025"
        ],
        [
            "assert (neq B m) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "99a6b15d7af4ad469762f4783fa29514e9728f74"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P, (BetS R K P /\\ Cong K P B m)) by (conclude lemma_extension);destruct Tf as [P];spliter.",
            "VernacExtend",
            "73ffd6dfb01eccda0f0db237bdb1b6fb0fa3653c"
        ],
        [
            "assert (Triangle A B D) by (conclude_def Triangle ).",
            "VernacExtend",
            "fc3c8c2747131318d96fee3f1e453ebc8e51682a"
        ],
        [
            "assert (neq K P) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "5cd38247af620f3559bd2eb13c9b36bccdacb5fa"
        ],
        [
            "assert (neq P K) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c62d49993b3e2da925c3ea6cb80cf05bf16e3782"
        ],
        [
            "rename_H H;let Tf:=fresh in assert (Tf:exists H, (BetS P K H /\\ Cong K H P K)) by (conclude lemma_extension);destruct Tf as [H];spliter.",
            "VernacExtend",
            "66d239539e8bbdc836cfac639624810231118457"
        ],
        [
            "assert (Cong P K K H) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "32c7c8f5a16d072cd679b8fab9cd2f210061f751"
        ],
        [
            "assert (Midpoint P K H) by (conclude_def Midpoint ).",
            "VernacExtend",
            "e3a130bd84e88e451c8c7120dc12ff3c015cbaa5"
        ],
        [
            "assert (Cong P K B m) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "ed2dc34ef1db009652b5efa849b5043df69d57a6"
        ],
        [
            "assert (Cong K H B m) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "ee7325ab09b1c820975ce4cce8591ccc7cabe84f"
        ],
        [
            "assert (Cong B m m D) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "370e3dba83bae9869ee5c23ac24c1da02edbc1ee"
        ],
        [
            "assert (Cong K H m D) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "2e6be2a05507399389184b01157b32532e551ced"
        ],
        [
            "assert (BetS P K R) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "d7c95fababf349d14bb94a273c91d576831e1de0"
        ],
        [
            "assert (Col P K H) by (conclude_def Col ).",
            "VernacExtend",
            "87b262d1ff7579fef493bcd0284e1708d3a4c95f"
        ],
        [
            "assert (Col P K R) by (conclude_def Col ).",
            "VernacExtend",
            "53352deaf5b3a19456c4c0dcd0a422a206378faa"
        ],
        [
            "assert (neq P K) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "5bbc4ee6db745a6c5946b765be8c10d8ba0d4706"
        ],
        [
            "assert (Col K H R) by (conclude lemma_collinear4).",
            "VernacExtend",
            "cd1bc748447f517eda5ac6cf38d7ab69b2be397c"
        ],
        [
            "assert (Col R K H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6eb1f1f2f8a505e97ba56659ad45c061500338da"
        ],
        [
            "assert (nCol R K S) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "17f2ca4f81462c4f279af06e408890ea78d419b2"
        ],
        [
            "assert (eq K K) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "89ee1e712221f97ec5067c4595ba2f1f13d3c25c"
        ],
        [
            "assert (Col R K K) by (conclude_def Col ).",
            "VernacExtend",
            "9e983e96f60c47865e9fa7aa2fa74ba25af80500"
        ],
        [
            "assert (neq K H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "329f62a1a5306c04fa8541bf6ce031812bbb581a"
        ],
        [
            "assert (neq H K) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c02fac14f12e2b81288500756e41532c35c48f50"
        ],
        [
            "assert (nCol H K S) by (conclude lemma_NChelper).",
            "VernacExtend",
            "225d850430c5dd76c1f4e7ba0d1cf04dae545027"
        ],
        [
            "assert (nCol S K H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "d1535e942fcf90734d380e74116675a7654089b3"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F G, (PG F K H G /\\ EF A B m D F K H G /\\ CongA H K F J E N /\\ OS S F K H)) by (conclude proposition_42B);destruct Tf as [F[G]];spliter.",
            "VernacExtend",
            "251b37d7a93e567da171edcf99678d1572534d85"
        ],
        [
            "assert (nCol D B C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "675be29ea58b035f2007d2984607ba05b4ace55e"
        ],
        [
            "assert (Triangle D B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "91a5669078a6b89287ed72df2cd5ed937854aa77"
        ],
        [
            "assert (Par F K H G) by (conclude_def PG ).",
            "VernacExtend",
            "a79c9646315b0353198fb069394c3df198cc97b9"
        ],
        [
            "assert (nCol K H G) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "7854c8b3b68781315547496ac18109ba6d42bdc7"
        ],
        [
            "assert (nCol H G K) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "2e08f044446001189ca49673769f7902c268fdbf"
        ],
        [
            "assert (nCol G H K) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "c80f95af6459f19e78a602d81786a6aa47efd650"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M L e, (PG G H M L /\\ CongA G H M J E N /\\ EF D B e C G H M L /\\ Midpoint B e C /\\ TS M G H K)) by (conclude proposition_44);destruct Tf as [M[L[e]]];spliter.",
            "VernacExtend",
            "3e57e4c46391b9d439c735ce6930666ee4cf43bf"
        ],
        [
            "assert (BetS B e C) by (conclude_def Midpoint ).",
            "VernacExtend",
            "7137a6e39ca0f0fd509112db8d5c99eb2bbe1622"
        ],
        [
            "assert (CongA J E N G H M) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "2fc7ec88f3e48beeabfd4f9c6dba1e45c40e1747"
        ],
        [
            "assert (CongA H K F G H M) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "435309237d7d06aab9d3a9faf9e087066e5549c8"
        ],
        [
            "assert (Par F K H G) by (conclude_def PG ).",
            "VernacExtend",
            "a79c9646315b0353198fb069394c3df198cc97b9"
        ],
        [
            "assert (Par K F H G) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "9d4ce2d5a4c7f38645c52a5565dc54a2274f03f5"
        ],
        [
            "assert (neq H K) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "4bddfdc28e80e1cb7c19e6577e35f1459fc001da"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists s, (BetS H K s /\\ Cong K s H K)) by (conclude lemma_extension);destruct Tf as [s];spliter.",
            "VernacExtend",
            "b283a72a6b85e50953c70cc727707dff36a87a19"
        ],
        [
            "assert (Par F G K H) by (conclude_def PG ).",
            "VernacExtend",
            "1338caff22656648433a5e5ee83d17831f8cf30f"
        ],
        [
            "assert (Par K H F G) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "2037d20ac78de383a994e5bb63d356c09baa561d"
        ],
        [
            "assert (TP K H F G) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "62b7fa44bffe64dc03fe48f192948e6bc49b07db"
        ],
        [
            "assert (OS F G K H) by (conclude_def TP ).",
            "VernacExtend",
            "b2cd56c9b9484aaf1cda9a900b0cc20b46f94c01"
        ],
        [
            "assert (RT F K H K H G) by (conclude proposition_29C).",
            "VernacExtend",
            "d17f1d9edcdb0eba535878f7ace76c1655b4d794"
        ],
        [
            "assert (CongA G H M H K F) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "f038f57439ec6f2c90e36369a3dc7259766fa3de"
        ],
        [
            "assert (nCol H K F) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "75809479f5bd8a882b5aa22037bc66812b48e0b7"
        ],
        [
            "assert (nCol F K H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "ffcd8281ab80f0b3248b47ed1a78da2339dc5a5c"
        ],
        [
            "assert (CongA F K H H K F) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "273668cb832089e083d094e4bddb89bb4006b5e8"
        ],
        [
            "assert (CongA F K H G H M) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "4bbc859ce0960cf7ba003e7d6d8d24177fec0fb0"
        ],
        [
            "assert (RT G H M K H G) by (conclude lemma_RTcongruence).",
            "VernacExtend",
            "b043c94c03f9f109716f0b316190bdbe2a68f8e0"
        ],
        [
            "assert (RT K H G G H M) by (conclude lemma_RTsymmetric).",
            "VernacExtend",
            "c1133b90c6e0adb2783f911a269753a06fe43ba8"
        ],
        [
            "assert (eq G G) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
        ],
        [
            "assert (neq H G) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "18268bd6c2371572f2c785b30415fb6bd85e612c"
        ],
        [
            "assert (Out H G G) by (conclude lemma_ray4).",
            "VernacExtend",
            "924b6a45583bc5b3c432589866e681d294582d58"
        ],
        [
            "assert (BetS K H M) by (conclude proposition_14).",
            "VernacExtend",
            "e9ba1e59302fa6f24cac18fce375da46c0c890c5"
        ],
        [
            "assert (neq F K) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "80b9ab747c96a415f1761db6bf983dda10209a1b"
        ],
        [
            "assert (nCol G H M) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "c45604e595c48d4264be88ab94aef9953a17a7a4"
        ],
        [
            "assert (neq G H) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "dfb05d072b8616f917aef353a7a7e4efaf89340e"
        ],
        [
            "assert (Par G H M L) by (conclude_def PG ).",
            "VernacExtend",
            "f4b689893b08ebdb4f4ab762075f711d0b0da32b"
        ],
        [
            "assert (nCol H M L) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "4484d70276b0175097330d3cfdf23b8d0a68be93"
        ],
        [
            "assert (neq L M) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "7579ff8474ff9ede97deb84ffcaf1d7cbb74f228"
        ],
        [
            "assert (eq K K) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "89ee1e712221f97ec5067c4595ba2f1f13d3c25c"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (eq M M) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "916516fe5c9a8a86b775db55e27d0edb471a111f"
        ],
        [
            "assert (Col F K K) by (conclude_def Col ).",
            "VernacExtend",
            "07397dfc0cb870c22204576f1174901b15db2e31"
        ],
        [
            "assert (Col G H H) by (conclude_def Col ).",
            "VernacExtend",
            "1455771c4dbd5afaeb51dc728630c33d1dfef441"
        ],
        [
            "assert (Col L M M) by (conclude_def Col ).",
            "VernacExtend",
            "029f6775e73eeb58e9c93963c65421d886937236"
        ],
        [
            "assert (Par F K G H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "91a8b269641cd9e1ae45cb0c096cba43d8df4288"
        ],
        [
            "assert (Par M L G H) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "d35d4752110828a26ad5736b546ec486adf68a9c"
        ],
        [
            "assert (Par L M G H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "83100ac37fa11e9fa968e15fab7f50df8985b793"
        ],
        [
            "assert (Par F K L M) by (conclude proposition_30).",
            "VernacExtend",
            "6a9afa8c872758586c30340cbe5e47a2be212cff"
        ],
        [
            "assert (Par F K M L) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "d486e6b80bc13883fafdff456329894fbe9e8a73"
        ],
        [
            "assert (Par F G K H) by (conclude_def PG ).",
            "VernacExtend",
            "1338caff22656648433a5e5ee83d17831f8cf30f"
        ],
        [
            "assert (Par G L H M) by (conclude_def PG ).",
            "VernacExtend",
            "688b9ac7845b37cea2445acc97590cc83aba0796"
        ],
        [
            "assert (Par F G H K) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "1c76d3c0a2a740da0a306bfbaff964fff1e1969d"
        ],
        [
            "assert (Col K H M) by (conclude_def Col ).",
            "VernacExtend",
            "852b8a84e77b7d955f179c20bc8e825c6756b90f"
        ],
        [
            "assert (Col H K M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6d4aa65df3f36bbb4b6a97763f4007acdf065193"
        ],
        [
            "assert (neq K M) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "50d89d838530e256ba60328a34ecc056f0dfa6b3"
        ],
        [
            "assert (neq M K) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "2c1f42c49dbcd3ab4ecfe2d4b71fd6afa068fbe1"
        ],
        [
            "assert (Par F G M K) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "a2550781fa54c1a651c1e74ed1ec8e7992d61b15"
        ],
        [
            "assert (Col H M K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f9f3985c3704bf4ef8590d0e43a546da6cda7a0e"
        ],
        [
            "assert (Par G L K M) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "f83bd3b77b19b34e2c855e6f75763e1eb60633ec"
        ],
        [
            "assert (Par G L M K) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "06affbf2547dca62d978a1f0798ebf1bc103dfa0"
        ],
        [
            "assert (Par M K G L) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "96d3732bb202e84fcda629128c75b17102af4016"
        ],
        [
            "assert (Par M K F G) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "c255f211c9d86ea7ccdce3fadeb2f3db7c5519a1"
        ],
        [
            "assert (Par M K G F) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "11845788e1b767d3406a0be28c98143e837bb3fe"
        ],
        [
            "assert (Col G L F) by (conclude lemma_Playfair).",
            "VernacExtend",
            "c64f4526776443c06e355389320be80dd3b4f091"
        ],
        [
            "assert (Col G F L) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "2786f26f8ad484bcb26bffee79fff8189d6199d8"
        ],
        [
            "assert (nCol F L M) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "e47111c23cc2ad5b5e13f6f3bdd046213a21d59f"
        ],
        [
            "assert (neq L F) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "51613a8a7190fab5561fc1beaacd8f23f86da402"
        ],
        [
            "assert (Par M K L F) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "62b4473cf4eadbd9a1731925b9b2202a1cac7519"
        ],
        [
            "assert (Par L F M K) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "d7cf94612877c927b430325426d9741a894c8cdb"
        ],
        [
            "assert (Par F L K M) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "cc7d5f3fd575438eae9ca0f30dc46324abc9fb10"
        ],
        [
            "assert (PG F K M L) by (conclude_def PG ).",
            "VernacExtend",
            "a6cca3f88de3307875a9e0765a837464f150b6f8"
        ],
        [
            "assert (nCol F K H) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "a4ebf74b453021743347687266ece45df6b9568a"
        ],
        [
            "assert (CongA F K H H K F) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "273668cb832089e083d094e4bddb89bb4006b5e8"
        ],
        [
            "assert (CongA F K H J E N) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "866587c7f8fb10caa94b8cb4d64bcd8de1e50151"
        ],
        [
            "assert (neq K H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "329f62a1a5306c04fa8541bf6ce031812bbb581a"
        ],
        [
            "assert (Out K H M) by (conclude lemma_ray4).",
            "VernacExtend",
            "cc2763593a2db6c77555ddad211bc05c92cdd7b6"
        ],
        [
            "assert (Out K M H) by (conclude lemma_ray5).",
            "VernacExtend",
            "5396d3d076127cc5d2ef38ebd1bbdbc992f69791"
        ],
        [
            "assert (eq F F) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
        ],
        [
            "assert (neq K F) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "bbdbb76f5a0f4c9f735743cd110f09dc4452180d"
        ],
        [
            "assert (Out K F F) by (conclude lemma_ray4).",
            "VernacExtend",
            "8d5de5b714ae3048a1b5aef742fbcf38879b0431"
        ],
        [
            "assert (nCol F K M) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "65ecd1db723be433a0997c0bcc40ed1f376734e3"
        ],
        [
            "assert (CongA F K M F K M) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "91444c0e285f9f115ad0df8fabc6bd3ad5c61de2"
        ],
        [
            "assert (CongA F K M F K H) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "674658e0454e63e885d87233548c6cf3e9d316b8"
        ],
        [
            "assert (CongA F K M J E N) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "e719816f5b969127d9aaa3e3e5c67d68ec5fd6b0"
        ],
        [
            "assert (Col B O D) by (conclude_def Col ).",
            "VernacExtend",
            "e925c06bc7e18b7d43187226081aa126f6fcd7d9"
        ],
        [
            "assert (Col B D O) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "d155b9ee14a771369ac6153f6f31623fdfc572a3"
        ],
        [
            "assert (nCol B D A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "01f2fd51f5d8ffd33afe030aecc4f49efff0de25"
        ],
        [
            "assert (TS A B D C) by (conclude_def TS ).",
            "VernacExtend",
            "f90c000f105d6610b88e62277e9d3cd8256703c7"
        ],
        [
            "assert (Par G H L M) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "87ee67f42b37940a0c5042b5abb714169e907838"
        ],
        [
            "assert (TP G H L M) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "f8c66adbcf28d8f0be22ff787ce5ced5c2b61a41"
        ],
        [
            "assert (OS L M G H) by (conclude_def TP ).",
            "VernacExtend",
            "a8d2c70896858a7d254170ec0fefe15f729ecb17"
        ],
        [
            "assert (Par F K G H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "91a8b269641cd9e1ae45cb0c096cba43d8df4288"
        ],
        [
            "assert (Par G H F K) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "219aeca9e2d4f89f9ec629216d2c7ec45c20b88f"
        ],
        [
            "assert (TP G H F K) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "106f749c2ec9bd7cd57c97f4844e5d8c359c1bdb"
        ],
        [
            "assert (OS F K G H) by (conclude_def TP ).",
            "VernacExtend",
            "808038b8fe4805754a77acb975debaac1e26a26a"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (Col G H H) by (conclude_def Col ).",
            "VernacExtend",
            "1455771c4dbd5afaeb51dc728630c33d1dfef441"
        ],
        [
            "assert (TS K G H M) by (conclude_def TS ).",
            "VernacExtend",
            "fdfbe64a52c7f8e7bbad435c5260e877b3a28425"
        ],
        [
            "assert (TS F G H M) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "5f0a6ddb1431e62e3352005568d15920fdfde733"
        ],
        [
            "assert (TS M G H F) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "8fd78fa7c1d2de29484ea6fa5c4b53dde7d66e96"
        ],
        [
            "assert (TS L G H F) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "ac0155bb6fc6fccabed7ebef8ba2414211d5ffbf"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists t, (BetS L t F /\\ Col G H t /\\ nCol G H L)) by (conclude_def TS );destruct Tf as [t];spliter.",
            "VernacExtend",
            "b4726c2b92d63293f4308d3137d9ee9d10333885"
        ],
        [
            "assert (Col F L G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ae1f17d7d0a0ecd223bb863a67bc5a7ce08350be"
        ],
        [
            "assert (Col L t F) by (conclude_def Col ).",
            "VernacExtend",
            "d4fd99423561c2edc9194d476e468ec7d15c856b"
        ],
        [
            "assert (Col F L t) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "a0f2b0ca10f742ab9d72420199a5cd1e0f6a3883"
        ],
        [
            "assert (neq F L) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "8a30c7094225142aa0f3745f39a339a91aaf4c57"
        ],
        [
            "assert (Col L G t) by (conclude lemma_collinear4).",
            "VernacExtend",
            "852c313fcae97a0a4999e530e9dd2ef0a80e21b4"
        ],
        [
            "assert (Col t G L) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5ea00dac9becc825cd41985efaf0c124532181cc"
        ],
        [
            "assert (Col t G H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3cda285cba591777d7fca128792eb61b9c83537c"
        ],
        [
            "assert (~ neq t G).",
            "VernacExtend",
            "9b5f397e9de2f7a6bc6e8e451cc2788b719131da"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col G L H) by (conclude lemma_collinear4).",
            "VernacExtend",
            "57b7e875ed30ae1ebd29ec294b4bbb1d6f30b291"
        ],
        [
            "assert (Col G H L) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5eb3f44188770eb25cb62a6ebd061ecd0a14f79a"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (BetS L G F) by (conclude cn_equalitysub).",
            "VernacExtend",
            "5260eed56817210c0d69d29ab076c3ad13058624"
        ],
        [
            "assert (BetS F G L) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "6a23e8f1744a1fe1e794722f329823b24a29033d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists j, (BetS F j M /\\ BetS K j L)) by (conclude lemma_diagonalsmeet);destruct Tf as [j];spliter.",
            "VernacExtend",
            "3fe9600b57a13d84547e1579b5cba39d4dcbf1af"
        ],
        [
            "assert (EF A B C D F K M L) by (conclude axiom_paste4).",
            "VernacExtend",
            "962cf5526879134be7ddfc2116221811b905fcee"
        ],
        [
            "assert (EF F K M L A B C D) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "86712845b4b7a5c7e4f79c72764a97df68729aec"
        ],
        [
            "assert (BetS P K M) by (conclude lemma_3_7b).",
            "VernacExtend",
            "4a6e0d5d59e491158787713b52bb9d324223eedd"
        ],
        [
            "assert (Out K R M) by (conclude_def Out ).",
            "VernacExtend",
            "905b42ac5ef595d0b7b04d9c8cd69a481ebe4623"
        ],
        [
            "assert (OS F S K H) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "9632ba92c86c53be00f3eee09b602a4a116b2add"
        ],
        [
            "assert (Col K H M) by (conclude_def Col ).",
            "VernacExtend",
            "852b8a84e77b7d955f179c20bc8e825c6756b90f"
        ],
        [
            "assert (OS F S K M) by (conclude lemma_samesidecollinear).",
            "VernacExtend",
            "8268f530c8c739b6dc22fd86f6cdb46263848d4c"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_45",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "c40ffb6f7c7ef362fa0ff361c6c3970adcfe852e"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists m, (BetS B m D /\\ Cong m B m D)) by (conclude proposition_10);destruct Tf as [m];spliter.",
                        "VernacExtend",
                        "09c2980dbb9a415fa90e5eacdcf816b78bd0576c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B m m D) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "370e3dba83bae9869ee5c23ac24c1da02edbc1ee"
                    ]
                },
                {
                    "command": [
                        "assert (Midpoint B m D) by (conclude_def Midpoint ).",
                        "VernacExtend",
                        "fd73d9b5a90d809db684a8cfda5e35d58c250025"
                    ]
                },
                {
                    "command": [
                        "assert (neq B m) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "99a6b15d7af4ad469762f4783fa29514e9728f74"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists P, (BetS R K P /\\ Cong K P B m)) by (conclude lemma_extension);destruct Tf as [P];spliter.",
                        "VernacExtend",
                        "73ffd6dfb01eccda0f0db237bdb1b6fb0fa3653c"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle A B D) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "fc3c8c2747131318d96fee3f1e453ebc8e51682a"
                    ]
                },
                {
                    "command": [
                        "assert (neq K P) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "5cd38247af620f3559bd2eb13c9b36bccdacb5fa"
                    ]
                },
                {
                    "command": [
                        "assert (neq P K) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "c62d49993b3e2da925c3ea6cb80cf05bf16e3782"
                    ]
                },
                {
                    "command": [
                        "rename_H H;let Tf:=fresh in assert (Tf:exists H, (BetS P K H /\\ Cong K H P K)) by (conclude lemma_extension);destruct Tf as [H];spliter.",
                        "VernacExtend",
                        "66d239539e8bbdc836cfac639624810231118457"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P K K H) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "32c7c8f5a16d072cd679b8fab9cd2f210061f751"
                    ]
                },
                {
                    "command": [
                        "assert (Midpoint P K H) by (conclude_def Midpoint ).",
                        "VernacExtend",
                        "e3a130bd84e88e451c8c7120dc12ff3c015cbaa5"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P K B m) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "ed2dc34ef1db009652b5efa849b5043df69d57a6"
                    ]
                },
                {
                    "command": [
                        "assert (Cong K H B m) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "ee7325ab09b1c820975ce4cce8591ccc7cabe84f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B m m D) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "370e3dba83bae9869ee5c23ac24c1da02edbc1ee"
                    ]
                },
                {
                    "command": [
                        "assert (Cong K H m D) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "2e6be2a05507399389184b01157b32532e551ced"
                    ]
                },
                {
                    "command": [
                        "assert (BetS P K R) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "d7c95fababf349d14bb94a273c91d576831e1de0"
                    ]
                },
                {
                    "command": [
                        "assert (Col P K H) by (conclude_def Col ).",
                        "VernacExtend",
                        "87b262d1ff7579fef493bcd0284e1708d3a4c95f"
                    ]
                },
                {
                    "command": [
                        "assert (Col P K R) by (conclude_def Col ).",
                        "VernacExtend",
                        "53352deaf5b3a19456c4c0dcd0a422a206378faa"
                    ]
                },
                {
                    "command": [
                        "assert (neq P K) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "5bbc4ee6db745a6c5946b765be8c10d8ba0d4706"
                    ]
                },
                {
                    "command": [
                        "assert (Col K H R) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "cd1bc748447f517eda5ac6cf38d7ab69b2be397c"
                    ]
                },
                {
                    "command": [
                        "assert (Col R K H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6eb1f1f2f8a505e97ba56659ad45c061500338da"
                    ]
                },
                {
                    "command": [
                        "assert (nCol R K S) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "17f2ca4f81462c4f279af06e408890ea78d419b2"
                    ]
                },
                {
                    "command": [
                        "assert (eq K K) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "89ee1e712221f97ec5067c4595ba2f1f13d3c25c"
                    ]
                },
                {
                    "command": [
                        "assert (Col R K K) by (conclude_def Col ).",
                        "VernacExtend",
                        "9e983e96f60c47865e9fa7aa2fa74ba25af80500"
                    ]
                },
                {
                    "command": [
                        "assert (neq K H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "329f62a1a5306c04fa8541bf6ce031812bbb581a"
                    ]
                },
                {
                    "command": [
                        "assert (neq H K) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "c02fac14f12e2b81288500756e41532c35c48f50"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H K S) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "225d850430c5dd76c1f4e7ba0d1cf04dae545027"
                    ]
                },
                {
                    "command": [
                        "assert (nCol S K H) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "d1535e942fcf90734d380e74116675a7654089b3"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F G, (PG F K H G /\\ EF A B m D F K H G /\\ CongA H K F J E N /\\ OS S F K H)) by (conclude proposition_42B);destruct Tf as [F[G]];spliter.",
                        "VernacExtend",
                        "251b37d7a93e567da171edcf99678d1572534d85"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D B C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "675be29ea58b035f2007d2984607ba05b4ace55e"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle D B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "91a5669078a6b89287ed72df2cd5ed937854aa77"
                    ]
                },
                {
                    "command": [
                        "assert (Par F K H G) by (conclude_def PG ).",
                        "VernacExtend",
                        "a79c9646315b0353198fb069394c3df198cc97b9"
                    ]
                },
                {
                    "command": [
                        "assert (nCol K H G) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "7854c8b3b68781315547496ac18109ba6d42bdc7"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H G K) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "2e08f044446001189ca49673769f7902c268fdbf"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G H K) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "c80f95af6459f19e78a602d81786a6aa47efd650"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M L e, (PG G H M L /\\ CongA G H M J E N /\\ EF D B e C G H M L /\\ Midpoint B e C /\\ TS M G H K)) by (conclude proposition_44);destruct Tf as [M[L[e]]];spliter.",
                        "VernacExtend",
                        "3e57e4c46391b9d439c735ce6930666ee4cf43bf"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B e C) by (conclude_def Midpoint ).",
                        "VernacExtend",
                        "7137a6e39ca0f0fd509112db8d5c99eb2bbe1622"
                    ]
                },
                {
                    "command": [
                        "assert (CongA J E N G H M) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "2fc7ec88f3e48beeabfd4f9c6dba1e45c40e1747"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H K F G H M) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "435309237d7d06aab9d3a9faf9e087066e5549c8"
                    ]
                },
                {
                    "command": [
                        "assert (Par F K H G) by (conclude_def PG ).",
                        "VernacExtend",
                        "a79c9646315b0353198fb069394c3df198cc97b9"
                    ]
                },
                {
                    "command": [
                        "assert (Par K F H G) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "9d4ce2d5a4c7f38645c52a5565dc54a2274f03f5"
                    ]
                },
                {
                    "command": [
                        "assert (neq H K) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "4bddfdc28e80e1cb7c19e6577e35f1459fc001da"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists s, (BetS H K s /\\ Cong K s H K)) by (conclude lemma_extension);destruct Tf as [s];spliter.",
                        "VernacExtend",
                        "b283a72a6b85e50953c70cc727707dff36a87a19"
                    ]
                },
                {
                    "command": [
                        "assert (Par F G K H) by (conclude_def PG ).",
                        "VernacExtend",
                        "1338caff22656648433a5e5ee83d17831f8cf30f"
                    ]
                },
                {
                    "command": [
                        "assert (Par K H F G) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "2037d20ac78de383a994e5bb63d356c09baa561d"
                    ]
                },
                {
                    "command": [
                        "assert (TP K H F G) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "62b7fa44bffe64dc03fe48f192948e6bc49b07db"
                    ]
                },
                {
                    "command": [
                        "assert (OS F G K H) by (conclude_def TP ).",
                        "VernacExtend",
                        "b2cd56c9b9484aaf1cda9a900b0cc20b46f94c01"
                    ]
                },
                {
                    "command": [
                        "assert (RT F K H K H G) by (conclude proposition_29C).",
                        "VernacExtend",
                        "d17f1d9edcdb0eba535878f7ace76c1655b4d794"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G H M H K F) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "f038f57439ec6f2c90e36369a3dc7259766fa3de"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H K F) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "75809479f5bd8a882b5aa22037bc66812b48e0b7"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F K H) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "ffcd8281ab80f0b3248b47ed1a78da2339dc5a5c"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F K H H K F) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "273668cb832089e083d094e4bddb89bb4006b5e8"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F K H G H M) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "4bbc859ce0960cf7ba003e7d6d8d24177fec0fb0"
                    ]
                },
                {
                    "command": [
                        "assert (RT G H M K H G) by (conclude lemma_RTcongruence).",
                        "VernacExtend",
                        "b043c94c03f9f109716f0b316190bdbe2a68f8e0"
                    ]
                },
                {
                    "command": [
                        "assert (RT K H G G H M) by (conclude lemma_RTsymmetric).",
                        "VernacExtend",
                        "c1133b90c6e0adb2783f911a269753a06fe43ba8"
                    ]
                },
                {
                    "command": [
                        "assert (eq G G) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
                    ]
                },
                {
                    "command": [
                        "assert (neq H G) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "18268bd6c2371572f2c785b30415fb6bd85e612c"
                    ]
                },
                {
                    "command": [
                        "assert (Out H G G) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "924b6a45583bc5b3c432589866e681d294582d58"
                    ]
                },
                {
                    "command": [
                        "assert (BetS K H M) by (conclude proposition_14).",
                        "VernacExtend",
                        "e9ba1e59302fa6f24cac18fce375da46c0c890c5"
                    ]
                },
                {
                    "command": [
                        "assert (neq F K) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "80b9ab747c96a415f1761db6bf983dda10209a1b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G H M) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "c45604e595c48d4264be88ab94aef9953a17a7a4"
                    ]
                },
                {
                    "command": [
                        "assert (neq G H) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "dfb05d072b8616f917aef353a7a7e4efaf89340e"
                    ]
                },
                {
                    "command": [
                        "assert (Par G H M L) by (conclude_def PG ).",
                        "VernacExtend",
                        "f4b689893b08ebdb4f4ab762075f711d0b0da32b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H M L) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "4484d70276b0175097330d3cfdf23b8d0a68be93"
                    ]
                },
                {
                    "command": [
                        "assert (neq L M) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "7579ff8474ff9ede97deb84ffcaf1d7cbb74f228"
                    ]
                },
                {
                    "command": [
                        "assert (eq K K) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "89ee1e712221f97ec5067c4595ba2f1f13d3c25c"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (eq M M) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "916516fe5c9a8a86b775db55e27d0edb471a111f"
                    ]
                },
                {
                    "command": [
                        "assert (Col F K K) by (conclude_def Col ).",
                        "VernacExtend",
                        "07397dfc0cb870c22204576f1174901b15db2e31"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H H) by (conclude_def Col ).",
                        "VernacExtend",
                        "1455771c4dbd5afaeb51dc728630c33d1dfef441"
                    ]
                },
                {
                    "command": [
                        "assert (Col L M M) by (conclude_def Col ).",
                        "VernacExtend",
                        "029f6775e73eeb58e9c93963c65421d886937236"
                    ]
                },
                {
                    "command": [
                        "assert (Par F K G H) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "91a8b269641cd9e1ae45cb0c096cba43d8df4288"
                    ]
                },
                {
                    "command": [
                        "assert (Par M L G H) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "d35d4752110828a26ad5736b546ec486adf68a9c"
                    ]
                },
                {
                    "command": [
                        "assert (Par L M G H) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "83100ac37fa11e9fa968e15fab7f50df8985b793"
                    ]
                },
                {
                    "command": [
                        "assert (Par F K L M) by (conclude proposition_30).",
                        "VernacExtend",
                        "6a9afa8c872758586c30340cbe5e47a2be212cff"
                    ]
                },
                {
                    "command": [
                        "assert (Par F K M L) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "d486e6b80bc13883fafdff456329894fbe9e8a73"
                    ]
                },
                {
                    "command": [
                        "assert (Par F G K H) by (conclude_def PG ).",
                        "VernacExtend",
                        "1338caff22656648433a5e5ee83d17831f8cf30f"
                    ]
                },
                {
                    "command": [
                        "assert (Par G L H M) by (conclude_def PG ).",
                        "VernacExtend",
                        "688b9ac7845b37cea2445acc97590cc83aba0796"
                    ]
                },
                {
                    "command": [
                        "assert (Par F G H K) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "1c76d3c0a2a740da0a306bfbaff964fff1e1969d"
                    ]
                },
                {
                    "command": [
                        "assert (Col K H M) by (conclude_def Col ).",
                        "VernacExtend",
                        "852b8a84e77b7d955f179c20bc8e825c6756b90f"
                    ]
                },
                {
                    "command": [
                        "assert (Col H K M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6d4aa65df3f36bbb4b6a97763f4007acdf065193"
                    ]
                },
                {
                    "command": [
                        "assert (neq K M) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "50d89d838530e256ba60328a34ecc056f0dfa6b3"
                    ]
                },
                {
                    "command": [
                        "assert (neq M K) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "2c1f42c49dbcd3ab4ecfe2d4b71fd6afa068fbe1"
                    ]
                },
                {
                    "command": [
                        "assert (Par F G M K) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "a2550781fa54c1a651c1e74ed1ec8e7992d61b15"
                    ]
                },
                {
                    "command": [
                        "assert (Col H M K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f9f3985c3704bf4ef8590d0e43a546da6cda7a0e"
                    ]
                },
                {
                    "command": [
                        "assert (Par G L K M) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "f83bd3b77b19b34e2c855e6f75763e1eb60633ec"
                    ]
                },
                {
                    "command": [
                        "assert (Par G L M K) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "06affbf2547dca62d978a1f0798ebf1bc103dfa0"
                    ]
                },
                {
                    "command": [
                        "assert (Par M K G L) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "96d3732bb202e84fcda629128c75b17102af4016"
                    ]
                },
                {
                    "command": [
                        "assert (Par M K F G) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "c255f211c9d86ea7ccdce3fadeb2f3db7c5519a1"
                    ]
                },
                {
                    "command": [
                        "assert (Par M K G F) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "11845788e1b767d3406a0be28c98143e837bb3fe"
                    ]
                },
                {
                    "command": [
                        "assert (Col G L F) by (conclude lemma_Playfair).",
                        "VernacExtend",
                        "c64f4526776443c06e355389320be80dd3b4f091"
                    ]
                },
                {
                    "command": [
                        "assert (Col G F L) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "2786f26f8ad484bcb26bffee79fff8189d6199d8"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F L M) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "e47111c23cc2ad5b5e13f6f3bdd046213a21d59f"
                    ]
                },
                {
                    "command": [
                        "assert (neq L F) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "51613a8a7190fab5561fc1beaacd8f23f86da402"
                    ]
                },
                {
                    "command": [
                        "assert (Par M K L F) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "62b4473cf4eadbd9a1731925b9b2202a1cac7519"
                    ]
                },
                {
                    "command": [
                        "assert (Par L F M K) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "d7cf94612877c927b430325426d9741a894c8cdb"
                    ]
                },
                {
                    "command": [
                        "assert (Par F L K M) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "cc7d5f3fd575438eae9ca0f30dc46324abc9fb10"
                    ]
                },
                {
                    "command": [
                        "assert (PG F K M L) by (conclude_def PG ).",
                        "VernacExtend",
                        "a6cca3f88de3307875a9e0765a837464f150b6f8"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F K H) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "a4ebf74b453021743347687266ece45df6b9568a"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F K H H K F) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "273668cb832089e083d094e4bddb89bb4006b5e8"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F K H J E N) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "866587c7f8fb10caa94b8cb4d64bcd8de1e50151"
                    ]
                },
                {
                    "command": [
                        "assert (neq K H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "329f62a1a5306c04fa8541bf6ce031812bbb581a"
                    ]
                },
                {
                    "command": [
                        "assert (Out K H M) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "cc2763593a2db6c77555ddad211bc05c92cdd7b6"
                    ]
                },
                {
                    "command": [
                        "assert (Out K M H) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "5396d3d076127cc5d2ef38ebd1bbdbc992f69791"
                    ]
                },
                {
                    "command": [
                        "assert (eq F F) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
                    ]
                },
                {
                    "command": [
                        "assert (neq K F) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "bbdbb76f5a0f4c9f735743cd110f09dc4452180d"
                    ]
                },
                {
                    "command": [
                        "assert (Out K F F) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "8d5de5b714ae3048a1b5aef742fbcf38879b0431"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F K M) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "65ecd1db723be433a0997c0bcc40ed1f376734e3"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F K M F K M) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "91444c0e285f9f115ad0df8fabc6bd3ad5c61de2"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F K M F K H) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "674658e0454e63e885d87233548c6cf3e9d316b8"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F K M J E N) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "e719816f5b969127d9aaa3e3e5c67d68ec5fd6b0"
                    ]
                },
                {
                    "command": [
                        "assert (Col B O D) by (conclude_def Col ).",
                        "VernacExtend",
                        "e925c06bc7e18b7d43187226081aa126f6fcd7d9"
                    ]
                },
                {
                    "command": [
                        "assert (Col B D O) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "d155b9ee14a771369ac6153f6f31623fdfc572a3"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B D A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "01f2fd51f5d8ffd33afe030aecc4f49efff0de25"
                    ]
                },
                {
                    "command": [
                        "assert (TS A B D C) by (conclude_def TS ).",
                        "VernacExtend",
                        "f90c000f105d6610b88e62277e9d3cd8256703c7"
                    ]
                },
                {
                    "command": [
                        "assert (Par G H L M) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "87ee67f42b37940a0c5042b5abb714169e907838"
                    ]
                },
                {
                    "command": [
                        "assert (TP G H L M) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "f8c66adbcf28d8f0be22ff787ce5ced5c2b61a41"
                    ]
                },
                {
                    "command": [
                        "assert (OS L M G H) by (conclude_def TP ).",
                        "VernacExtend",
                        "a8d2c70896858a7d254170ec0fefe15f729ecb17"
                    ]
                },
                {
                    "command": [
                        "assert (Par F K G H) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "91a8b269641cd9e1ae45cb0c096cba43d8df4288"
                    ]
                },
                {
                    "command": [
                        "assert (Par G H F K) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "219aeca9e2d4f89f9ec629216d2c7ec45c20b88f"
                    ]
                },
                {
                    "command": [
                        "assert (TP G H F K) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "106f749c2ec9bd7cd57c97f4844e5d8c359c1bdb"
                    ]
                },
                {
                    "command": [
                        "assert (OS F K G H) by (conclude_def TP ).",
                        "VernacExtend",
                        "808038b8fe4805754a77acb975debaac1e26a26a"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H H) by (conclude_def Col ).",
                        "VernacExtend",
                        "1455771c4dbd5afaeb51dc728630c33d1dfef441"
                    ]
                },
                {
                    "command": [
                        "assert (TS K G H M) by (conclude_def TS ).",
                        "VernacExtend",
                        "fdfbe64a52c7f8e7bbad435c5260e877b3a28425"
                    ]
                },
                {
                    "command": [
                        "assert (TS F G H M) by (conclude lemma_planeseparation).",
                        "VernacExtend",
                        "5f0a6ddb1431e62e3352005568d15920fdfde733"
                    ]
                },
                {
                    "command": [
                        "assert (TS M G H F) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "8fd78fa7c1d2de29484ea6fa5c4b53dde7d66e96"
                    ]
                },
                {
                    "command": [
                        "assert (TS L G H F) by (conclude lemma_planeseparation).",
                        "VernacExtend",
                        "ac0155bb6fc6fccabed7ebef8ba2414211d5ffbf"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists t, (BetS L t F /\\ Col G H t /\\ nCol G H L)) by (conclude_def TS );destruct Tf as [t];spliter.",
                        "VernacExtend",
                        "b4726c2b92d63293f4308d3137d9ee9d10333885"
                    ]
                },
                {
                    "command": [
                        "assert (Col F L G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ae1f17d7d0a0ecd223bb863a67bc5a7ce08350be"
                    ]
                },
                {
                    "command": [
                        "assert (Col L t F) by (conclude_def Col ).",
                        "VernacExtend",
                        "d4fd99423561c2edc9194d476e468ec7d15c856b"
                    ]
                },
                {
                    "command": [
                        "assert (Col F L t) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "a0f2b0ca10f742ab9d72420199a5cd1e0f6a3883"
                    ]
                },
                {
                    "command": [
                        "assert (neq F L) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "8a30c7094225142aa0f3745f39a339a91aaf4c57"
                    ]
                },
                {
                    "command": [
                        "assert (Col L G t) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "852c313fcae97a0a4999e530e9dd2ef0a80e21b4"
                    ]
                },
                {
                    "command": [
                        "assert (Col t G L) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5ea00dac9becc825cd41985efaf0c124532181cc"
                    ]
                },
                {
                    "command": [
                        "assert (Col t G H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3cda285cba591777d7fca128792eb61b9c83537c"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq t G).",
                        "VernacExtend",
                        "9b5f397e9de2f7a6bc6e8e451cc2788b719131da"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col G L H) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "57b7e875ed30ae1ebd29ec294b4bbb1d6f30b291"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H L) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5eb3f44188770eb25cb62a6ebd061ecd0a14f79a"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (BetS L G F) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "5260eed56817210c0d69d29ab076c3ad13058624"
                    ]
                },
                {
                    "command": [
                        "assert (BetS F G L) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "6a23e8f1744a1fe1e794722f329823b24a29033d"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists j, (BetS F j M /\\ BetS K j L)) by (conclude lemma_diagonalsmeet);destruct Tf as [j];spliter.",
                        "VernacExtend",
                        "3fe9600b57a13d84547e1579b5cba39d4dcbf1af"
                    ]
                },
                {
                    "command": [
                        "assert (EF A B C D F K M L) by (conclude axiom_paste4).",
                        "VernacExtend",
                        "962cf5526879134be7ddfc2116221811b905fcee"
                    ]
                },
                {
                    "command": [
                        "assert (EF F K M L A B C D) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "86712845b4b7a5c7e4f79c72764a97df68729aec"
                    ]
                },
                {
                    "command": [
                        "assert (BetS P K M) by (conclude lemma_3_7b).",
                        "VernacExtend",
                        "4a6e0d5d59e491158787713b52bb9d324223eedd"
                    ]
                },
                {
                    "command": [
                        "assert (Out K R M) by (conclude_def Out ).",
                        "VernacExtend",
                        "905b42ac5ef595d0b7b04d9c8cd69a481ebe4623"
                    ]
                },
                {
                    "command": [
                        "assert (OS F S K H) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "9632ba92c86c53be00f3eee09b602a4a116b2add"
                    ]
                },
                {
                    "command": [
                        "assert (Col K H M) by (conclude_def Col ).",
                        "VernacExtend",
                        "852b8a84e77b7d955f179c20bc8e825c6756b90f"
                    ]
                },
                {
                    "command": [
                        "assert (OS F S K M) by (conclude lemma_samesidecollinear).",
                        "VernacExtend",
                        "8268f530c8c739b6dc22fd86f6cdb46263848d4c"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}