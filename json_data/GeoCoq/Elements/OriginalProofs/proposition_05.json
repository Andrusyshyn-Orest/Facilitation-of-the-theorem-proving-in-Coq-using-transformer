{
    "filename": "Elements/OriginalProofs/proposition_05.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_ABCequalsCBA.",
            "VernacRequire",
            "b41d962fe0e15082ca850c781a7005b05625160b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_04.",
            "VernacRequire",
            "1f34271e524c191125935110cc8447318dde5cfc"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_05 : forall A B C, isosceles A B C -> CongA A B C A C B.",
            "VernacStartTheoremProof",
            "f4500bed5d4da5cd1a9a431c5fd4211ea5d012cc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((Triangle A B C /\\ Cong A B A C)) by (conclude_def isosceles ).",
            "VernacExtend",
            "7d011c68d37f196787201798babef80ee98ffb64"
        ],
        [
            "assert (Cong A C A B) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "988506ed92c9be3fefab65051e10dce6507a63a0"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (~ Col C A B).",
            "VernacExtend",
            "10101811f25a8d53460b103ccd0ae59f2160209f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA C A B B A C) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "d32e86d94f4fb6e7d75c60d9f4082722376a87a7"
        ],
        [
            "assert ((Cong C B B C /\\ CongA A C B A B C /\\ CongA A B C A C B)) by (conclude proposition_04).",
            "VernacExtend",
            "f5396d231b61558b5b44851b512d8c25aff6a8f7"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_05",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((Triangle A B C /\\ Cong A B A C)) by (conclude_def isosceles ).",
                        "VernacExtend",
                        "7d011c68d37f196787201798babef80ee98ffb64"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A C A B) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "988506ed92c9be3fefab65051e10dce6507a63a0"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C A B).",
                        "VernacExtend",
                        "10101811f25a8d53460b103ccd0ae59f2160209f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C A B B A C) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "d32e86d94f4fb6e7d75c60d9f4082722376a87a7"
                    ]
                },
                {
                    "command": [
                        "assert ((Cong C B B C /\\ CongA A C B A B C /\\ CongA A B C A C B)) by (conclude proposition_04).",
                        "VernacExtend",
                        "f5396d231b61558b5b44851b512d8c25aff6a8f7"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}