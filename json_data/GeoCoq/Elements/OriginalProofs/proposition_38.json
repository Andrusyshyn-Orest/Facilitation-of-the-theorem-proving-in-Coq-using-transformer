{
    "filename": "Elements/OriginalProofs/proposition_38.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_triangletoparallelogram.",
            "VernacRequire",
            "5e152ef4e5c604875c2cd9ae7fec10f81d845999"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_PGrotate.",
            "VernacRequire",
            "17bb59d77feb0e07635bca0a444781548dd7123d"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_36.",
            "VernacRequire",
            "6fff766e33e7137217e05daf213ffa2f4d7b6581"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:area}.",
            "VernacContext",
            "81ffa005c6d27ee71f963c56f9847264efce50bb"
        ],
        [
            "Lemma proposition_38 : forall A B C D E F P Q, Par P Q B C -> Col P Q A -> Col P Q D -> Cong B C E F -> Col B C E -> Col B C F -> ET A B C D E F.",
            "VernacStartTheoremProof",
            "afd67c47dd3c9f7ad8615d4fc526963857601fbe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Par B C P Q) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "48b251d45d0041e34a0688d746419c65fc3e9ef5"
        ],
        [
            "assert (Par C B P Q) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "313eb6b32b77118724c57020c8ea4066e9435f71"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists G, (PG A G B C /\\ Col P Q G)) by (conclude lemma_triangletoparallelogram);destruct Tf as [G];spliter.",
            "VernacExtend",
            "77ad084a9cc10a47e18a1376cda320f0cc368846"
        ],
        [
            "assert (PG G B C A) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "4be297a0f9d3e6d16dd6874227ab6252c8f79627"
        ],
        [
            "assert (nCol P B C) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "bb83e7d6f6013eb7f74742a846ab227fb1616c83"
        ],
        [
            "assert (neq B C) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "0bb577205eb42d8f9fe7d193058e6055102c5a78"
        ],
        [
            "assert (neq E F) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "9582be2f799cedc4cac961a80fd5ab49d3b1adf7"
        ],
        [
            "assert (Par P Q E F) by (conclude lemma_collinearparallel2).",
            "VernacExtend",
            "7ad3f52b8d515dbc1acc454bcdc74fd4e85d6d93"
        ],
        [
            "assert (Par E F P Q) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "9fbc0eded177a47f1bc851fccb4bb1571850acb7"
        ],
        [
            "rename_H H;let Tf:=fresh in assert (Tf:exists H, (PG D H F E /\\ Col P Q H)) by (conclude lemma_triangletoparallelogram);destruct Tf as [H];spliter.",
            "VernacExtend",
            "582f490cad28a52ccee512dd8e78d2f28dcc72dc"
        ],
        [
            "assert (PG H F E D) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "911fc2baf72476a507d860d5088130b7e616ea96"
        ],
        [
            "assert (Cong B C F E) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "2ca9c61d5f64e1a00eef024244afd79a17c3c1f6"
        ],
        [
            "assert (nCol P Q B) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "e1dd9a6a004847a09acb2df00e849987c8ad31e6"
        ],
        [
            "assert (neq P Q) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "2955a22e0c103dd8b367825b8b12613649d68998"
        ],
        [
            "assert (Col G A H) by (conclude lemma_collinear5).",
            "VernacExtend",
            "6c3646c7d9a8c51f5744eb35027995488195d7e4"
        ],
        [
            "assert (Col G A D) by (conclude lemma_collinear5).",
            "VernacExtend",
            "a3710179ca577a17fbd9e62c66ee921a13b1bf51"
        ],
        [
            "assert (EF G B C A H F E D) by (conclude proposition_36).",
            "VernacExtend",
            "426200ac4827f66674982f93db3f4ce23654074e"
        ],
        [
            "assert (EF G B C A E F H D) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "9dfa77b60ffb32abee14ac584221ba4b603d6711"
        ],
        [
            "assert (EF E F H D G B C A) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "32118e03ee1884a8a5ada353abf0bf35833f2be6"
        ],
        [
            "assert (EF E F H D C B G A) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "1afc9ec1989ce831f54ce24cee151a1b699b8e23"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS D M F /\\ BetS H M E)) by (conclude lemma_diagonalsmeet);destruct Tf as [M];spliter.",
            "VernacExtend",
            "3949b9c56f62d33f097866b3250d01d9abcc0b0c"
        ],
        [
            "assert (Col D M F) by (conclude_def Col ).",
            "VernacExtend",
            "b535cab796bc36c2765624df3e666601e53d8d08"
        ],
        [
            "assert (Col F D M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3f1f3fe462d937beda993d84d64b851212eb1ba2"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists m, (BetS A m B /\\ BetS G m C)) by (conclude lemma_diagonalsmeet);destruct Tf as [m];spliter.",
            "VernacExtend",
            "2c0fb082271eb5277e83a58e30c0c0010198f712"
        ],
        [
            "assert (Col A m B) by (conclude_def Col ).",
            "VernacExtend",
            "8e0b312ccb8a9301620a8a59979a90e23ba28e31"
        ],
        [
            "assert (Col B A m) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6ad88cab5b06abc30466e99a548289a150fc0717"
        ],
        [
            "assert (Par A G B C) by (conclude_def PG ).",
            "VernacExtend",
            "b730bd538bdc5339e3e6289251a4baa594d6263e"
        ],
        [
            "assert (nCol A G B) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "09514a903a45e5afcaee3ee3ace601d4145ac752"
        ],
        [
            "assert (nCol B A G) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "64ad58cbb5b5d776287e23af0bbb98630140c601"
        ],
        [
            "assert (Par D H F E) by (conclude_def PG ).",
            "VernacExtend",
            "69bba6b9d256243b4308ff115d299957334e52e2"
        ],
        [
            "assert (nCol D H F) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "34c45eeaab8bd9e6eb5072e73cdaa2f7027d031b"
        ],
        [
            "assert (nCol F D H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "72fa428d090b652fc6e5580f59b69e7008f527c0"
        ],
        [
            "assert (TS G B A C) by (conclude_def TS ).",
            "VernacExtend",
            "d974a61de483ded8a86ea62fb9a1fcaa18578195"
        ],
        [
            "assert (TS C B A G) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "c51c484e7cb52d765179e8981cf4cefde3edf00e"
        ],
        [
            "assert (TS H F D E) by (conclude_def TS ).",
            "VernacExtend",
            "9271be835258d8fd513182467f2449c6896afc57"
        ],
        [
            "assert (TS E F D H) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "ebe42d663ad307b7bd36456db49306c9de01761c"
        ],
        [
            "assert (Cong_3 F H D D E F) by (conclude proposition_34).",
            "VernacExtend",
            "2b8360f872df05077557f33e005cef237043046f"
        ],
        [
            "assert (ET F H D D E F) by (conclude axiom_congruentequal).",
            "VernacExtend",
            "ef083d7c2999101d71b53a7b1f3c0fa6ee3a7a0b"
        ],
        [
            "assert (ET F H D E F D) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "a1914693be48c27dbd2230822bf233c9d0a19aad"
        ],
        [
            "assert (ET E F D F H D) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "c640857d29403af81338c223988deea8e96e5148"
        ],
        [
            "assert (ET E F D F D H) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "165d877a3438e17c2bb324b7fbf6a63ff9f07b5c"
        ],
        [
            "assert (PG G B C A) by (conclude lemma_PGrotate).",
            "VernacExtend",
            "4be297a0f9d3e6d16dd6874227ab6252c8f79627"
        ],
        [
            "assert (Cong_3 B G A A C B) by (conclude proposition_34).",
            "VernacExtend",
            "f841abdb72387b9337570de3ecf350ed8af14902"
        ],
        [
            "assert (ET B G A A C B) by (conclude axiom_congruentequal).",
            "VernacExtend",
            "62755986f50ece8db2654287d5d39d5e5c1ea4ee"
        ],
        [
            "assert (ET B G A C B A) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "a784338f657f639ebfb1939bb6fb2f9cb2582e5a"
        ],
        [
            "assert (ET C B A B G A) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "806ee8ceb167cee98675101af373e9b4dca030ea"
        ],
        [
            "assert (ET C B A B A G) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "cb065e1ce5660cf1b2e68aa4ba3d4b1baecd41f1"
        ],
        [
            "assert (ET E F D C B A) by (conclude axiom_halvesofequals).",
            "VernacExtend",
            "d14e19748873b058e52e15537017cb580a5272ca"
        ],
        [
            "assert (ET E F D A B C) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "33ead9eb0282b021f9b7a55f62f0eb672aa77025"
        ],
        [
            "assert (ET A B C E F D) by (conclude axiom_ETsymmetric).",
            "VernacExtend",
            "af640e20465c7460ab8ce8b3eb1e84be2b1c2b3e"
        ],
        [
            "assert (ET A B C D E F) by (forward_using axiom_ETpermutation).",
            "VernacExtend",
            "c25c9479a34b45c038e3cd308e63edece237935a"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_38",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C P Q) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "48b251d45d0041e34a0688d746419c65fc3e9ef5"
                    ]
                },
                {
                    "command": [
                        "assert (Par C B P Q) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "313eb6b32b77118724c57020c8ea4066e9435f71"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists G, (PG A G B C /\\ Col P Q G)) by (conclude lemma_triangletoparallelogram);destruct Tf as [G];spliter.",
                        "VernacExtend",
                        "77ad084a9cc10a47e18a1376cda320f0cc368846"
                    ]
                },
                {
                    "command": [
                        "assert (PG G B C A) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "4be297a0f9d3e6d16dd6874227ab6252c8f79627"
                    ]
                },
                {
                    "command": [
                        "assert (nCol P B C) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "bb83e7d6f6013eb7f74742a846ab227fb1616c83"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "0bb577205eb42d8f9fe7d193058e6055102c5a78"
                    ]
                },
                {
                    "command": [
                        "assert (neq E F) by (conclude axiom_nocollapse).",
                        "VernacExtend",
                        "9582be2f799cedc4cac961a80fd5ab49d3b1adf7"
                    ]
                },
                {
                    "command": [
                        "assert (Par P Q E F) by (conclude lemma_collinearparallel2).",
                        "VernacExtend",
                        "7ad3f52b8d515dbc1acc454bcdc74fd4e85d6d93"
                    ]
                },
                {
                    "command": [
                        "assert (Par E F P Q) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "9fbc0eded177a47f1bc851fccb4bb1571850acb7"
                    ]
                },
                {
                    "command": [
                        "rename_H H;let Tf:=fresh in assert (Tf:exists H, (PG D H F E /\\ Col P Q H)) by (conclude lemma_triangletoparallelogram);destruct Tf as [H];spliter.",
                        "VernacExtend",
                        "582f490cad28a52ccee512dd8e78d2f28dcc72dc"
                    ]
                },
                {
                    "command": [
                        "assert (PG H F E D) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "911fc2baf72476a507d860d5088130b7e616ea96"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C F E) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "2ca9c61d5f64e1a00eef024244afd79a17c3c1f6"
                    ]
                },
                {
                    "command": [
                        "assert (nCol P Q B) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "e1dd9a6a004847a09acb2df00e849987c8ad31e6"
                    ]
                },
                {
                    "command": [
                        "assert (neq P Q) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "2955a22e0c103dd8b367825b8b12613649d68998"
                    ]
                },
                {
                    "command": [
                        "assert (Col G A H) by (conclude lemma_collinear5).",
                        "VernacExtend",
                        "6c3646c7d9a8c51f5744eb35027995488195d7e4"
                    ]
                },
                {
                    "command": [
                        "assert (Col G A D) by (conclude lemma_collinear5).",
                        "VernacExtend",
                        "a3710179ca577a17fbd9e62c66ee921a13b1bf51"
                    ]
                },
                {
                    "command": [
                        "assert (EF G B C A H F E D) by (conclude proposition_36).",
                        "VernacExtend",
                        "426200ac4827f66674982f93db3f4ce23654074e"
                    ]
                },
                {
                    "command": [
                        "assert (EF G B C A E F H D) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "9dfa77b60ffb32abee14ac584221ba4b603d6711"
                    ]
                },
                {
                    "command": [
                        "assert (EF E F H D G B C A) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "32118e03ee1884a8a5ada353abf0bf35833f2be6"
                    ]
                },
                {
                    "command": [
                        "assert (EF E F H D C B G A) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "1afc9ec1989ce831f54ce24cee151a1b699b8e23"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS D M F /\\ BetS H M E)) by (conclude lemma_diagonalsmeet);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "3949b9c56f62d33f097866b3250d01d9abcc0b0c"
                    ]
                },
                {
                    "command": [
                        "assert (Col D M F) by (conclude_def Col ).",
                        "VernacExtend",
                        "b535cab796bc36c2765624df3e666601e53d8d08"
                    ]
                },
                {
                    "command": [
                        "assert (Col F D M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3f1f3fe462d937beda993d84d64b851212eb1ba2"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists m, (BetS A m B /\\ BetS G m C)) by (conclude lemma_diagonalsmeet);destruct Tf as [m];spliter.",
                        "VernacExtend",
                        "2c0fb082271eb5277e83a58e30c0c0010198f712"
                    ]
                },
                {
                    "command": [
                        "assert (Col A m B) by (conclude_def Col ).",
                        "VernacExtend",
                        "8e0b312ccb8a9301620a8a59979a90e23ba28e31"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A m) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6ad88cab5b06abc30466e99a548289a150fc0717"
                    ]
                },
                {
                    "command": [
                        "assert (Par A G B C) by (conclude_def PG ).",
                        "VernacExtend",
                        "b730bd538bdc5339e3e6289251a4baa594d6263e"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A G B) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "09514a903a45e5afcaee3ee3ace601d4145ac752"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B A G) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "64ad58cbb5b5d776287e23af0bbb98630140c601"
                    ]
                },
                {
                    "command": [
                        "assert (Par D H F E) by (conclude_def PG ).",
                        "VernacExtend",
                        "69bba6b9d256243b4308ff115d299957334e52e2"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D H F) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "34c45eeaab8bd9e6eb5072e73cdaa2f7027d031b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F D H) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "72fa428d090b652fc6e5580f59b69e7008f527c0"
                    ]
                },
                {
                    "command": [
                        "assert (TS G B A C) by (conclude_def TS ).",
                        "VernacExtend",
                        "d974a61de483ded8a86ea62fb9a1fcaa18578195"
                    ]
                },
                {
                    "command": [
                        "assert (TS C B A G) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "c51c484e7cb52d765179e8981cf4cefde3edf00e"
                    ]
                },
                {
                    "command": [
                        "assert (TS H F D E) by (conclude_def TS ).",
                        "VernacExtend",
                        "9271be835258d8fd513182467f2449c6896afc57"
                    ]
                },
                {
                    "command": [
                        "assert (TS E F D H) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "ebe42d663ad307b7bd36456db49306c9de01761c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 F H D D E F) by (conclude proposition_34).",
                        "VernacExtend",
                        "2b8360f872df05077557f33e005cef237043046f"
                    ]
                },
                {
                    "command": [
                        "assert (ET F H D D E F) by (conclude axiom_congruentequal).",
                        "VernacExtend",
                        "ef083d7c2999101d71b53a7b1f3c0fa6ee3a7a0b"
                    ]
                },
                {
                    "command": [
                        "assert (ET F H D E F D) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "a1914693be48c27dbd2230822bf233c9d0a19aad"
                    ]
                },
                {
                    "command": [
                        "assert (ET E F D F H D) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "c640857d29403af81338c223988deea8e96e5148"
                    ]
                },
                {
                    "command": [
                        "assert (ET E F D F D H) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "165d877a3438e17c2bb324b7fbf6a63ff9f07b5c"
                    ]
                },
                {
                    "command": [
                        "assert (PG G B C A) by (conclude lemma_PGrotate).",
                        "VernacExtend",
                        "4be297a0f9d3e6d16dd6874227ab6252c8f79627"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 B G A A C B) by (conclude proposition_34).",
                        "VernacExtend",
                        "f841abdb72387b9337570de3ecf350ed8af14902"
                    ]
                },
                {
                    "command": [
                        "assert (ET B G A A C B) by (conclude axiom_congruentequal).",
                        "VernacExtend",
                        "62755986f50ece8db2654287d5d39d5e5c1ea4ee"
                    ]
                },
                {
                    "command": [
                        "assert (ET B G A C B A) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "a784338f657f639ebfb1939bb6fb2f9cb2582e5a"
                    ]
                },
                {
                    "command": [
                        "assert (ET C B A B G A) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "806ee8ceb167cee98675101af373e9b4dca030ea"
                    ]
                },
                {
                    "command": [
                        "assert (ET C B A B A G) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "cb065e1ce5660cf1b2e68aa4ba3d4b1baecd41f1"
                    ]
                },
                {
                    "command": [
                        "assert (ET E F D C B A) by (conclude axiom_halvesofequals).",
                        "VernacExtend",
                        "d14e19748873b058e52e15537017cb580a5272ca"
                    ]
                },
                {
                    "command": [
                        "assert (ET E F D A B C) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "33ead9eb0282b021f9b7a55f62f0eb672aa77025"
                    ]
                },
                {
                    "command": [
                        "assert (ET A B C E F D) by (conclude axiom_ETsymmetric).",
                        "VernacExtend",
                        "af640e20465c7460ab8ce8b3eb1e84be2b1c2b3e"
                    ]
                },
                {
                    "command": [
                        "assert (ET A B C D E F) by (forward_using axiom_ETpermutation).",
                        "VernacExtend",
                        "c25c9479a34b45c038e3cd308e63edece237935a"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}