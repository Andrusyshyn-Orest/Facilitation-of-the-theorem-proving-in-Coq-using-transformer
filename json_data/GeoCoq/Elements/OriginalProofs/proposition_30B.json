{
    "filename": "Elements/OriginalProofs/proposition_30B.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_parallelsymmetric.",
            "VernacRequire",
            "380a5936af7e0007ca86a397621339008584ccda"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_29.",
            "VernacRequire",
            "5a62595bdaa8d7b7227f03051fc7729c87131e90"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_28A.",
            "VernacRequire",
            "ab8f29ea53ee3f09cd9e5af3a31422752471ab34"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_euclidean}.",
            "VernacContext",
            "46d5a1bab5cb652e851ee1112917f2bf32229649"
        ],
        [
            "Lemma proposition_30B : forall A B C D E F G H K, Par A B E F -> Par C D E F -> BetS G K H -> BetS A G B -> BetS E H F -> BetS C K D -> TS A G H F -> TS C K H F -> Par A B C D.",
            "VernacStartTheoremProof",
            "58133a806177188f84226ad688b4da1198b4a549"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (neq G H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f58acd228c182b5e683f09f760fae997b311ffc8"
        ],
        [
            "assert (neq H G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d9df94dc080eef15b772bb805e3c034674809907"
        ],
        [
            "assert (neq K H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "329f62a1a5306c04fa8541bf6ce031812bbb581a"
        ],
        [
            "assert (neq H K) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c02fac14f12e2b81288500756e41532c35c48f50"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P, (BetS H G P /\\ Cong G P G H)) by (conclude lemma_extension);destruct Tf as [P];spliter.",
            "VernacExtend",
            "ae775719d53fec8c0b2b6bef4f1c0f200711a120"
        ],
        [
            "assert (BetS P G H) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "881284b627eab530accc8aae64261669416c7ce3"
        ],
        [
            "assert (CongA A G H G H F) by (apply (proposition_29 A B E F P G H);auto).",
            "VernacExtend",
            "c44e3fc41bab813834506d9a734aad8625506fe6"
        ],
        [
            "assert (BetS P K H) by (conclude lemma_3_5b).",
            "VernacExtend",
            "f427828187b9eefd2c7dd5b42cc1efdafe62f825"
        ],
        [
            "assert (CongA C K H K H F) by (conclude (proposition_29 C D E F P )).",
            "VernacExtend",
            "ff675d31c4f97d2285e8176f4c324c4ae2968bb1"
        ],
        [
            "assert (BetS H K G) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "36704261561bb0231c219eb9a4cc50739b823e74"
        ],
        [
            "assert (Out H K G) by (conclude lemma_ray4).",
            "VernacExtend",
            "64a98df9076bccef73266b6e3f77f50210775372"
        ],
        [
            "assert (Out H G K) by (conclude lemma_ray5).",
            "VernacExtend",
            "33fde04b947cc14c380c57da1d8f6eec5233aa6d"
        ],
        [
            "assert (eq F F) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
        ],
        [
            "assert (neq H F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "303ad83ddd84e20e2559b08e00c9a03382d26396"
        ],
        [
            "assert (Out H F F) by (conclude lemma_ray4).",
            "VernacExtend",
            "027c2279000e7f9f289edd5d074f15ffa9d586d6"
        ],
        [
            "assert (CongA A G H K H F) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "8eee3ac8c1aff369103feae674a83421efea5d20"
        ],
        [
            "assert (CongA K H F A G H) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "71f859b3976b0b88de62d0c675cb6cdcd9bf4841"
        ],
        [
            "assert (CongA C K H A G H) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "4a878650fdb725d78475d6a0e5fdac78db1cd4d4"
        ],
        [
            "assert (neq G H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f58acd228c182b5e683f09f760fae997b311ffc8"
        ],
        [
            "assert (Out G H K) by (conclude lemma_ray4).",
            "VernacExtend",
            "008a38d59e29668887e5ad40c98a4b5bc1b2c6cc"
        ],
        [
            "assert (neq A G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "01ce0c6f72655b04abd7b7bff327342bcc2d7010"
        ],
        [
            "assert (neq G A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "e2791ae9c412727db671b58f53b6b23174e66732"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Out G A A) by (conclude lemma_ray4).",
            "VernacExtend",
            "f0d36422f9677bc41aff316892110c6a0e29b77c"
        ],
        [
            "assert (CongA C K H A G K) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "eaafabd96a4225976f8ad0ec15069b198774dede"
        ],
        [
            "assert (CongA H K C K G A) by (conclude lemma_equalanglesflip).",
            "VernacExtend",
            "3d39c28a1f7c393cc014dd8758522ca137a15619"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS A M F /\\ Col G H M /\\ nCol G H A)) by (conclude_def TS );destruct Tf as [M];spliter.",
            "VernacExtend",
            "0ff8c598eb4b6789f4b461ab17c1d7ac8e3dc0f6"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists m, (BetS C m F /\\ Col K H m /\\ nCol K H C)) by (conclude_def TS );destruct Tf as [m];spliter.",
            "VernacExtend",
            "b149ed9e0ba5d42217e9087a573a599989d55f87"
        ],
        [
            "assert (Col G K H) by (conclude_def Col ).",
            "VernacExtend",
            "9d4f86fe52eb890856af81f1622a0c6101ab59c2"
        ],
        [
            "assert (Col H G K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "69dae6e9b5b1b2b20fd99ca04988e8b5bb11338b"
        ],
        [
            "assert (Col H G M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fdd65519592ac955c47113c980fe499d6b0a4ef5"
        ],
        [
            "assert (neq H G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ebb899f7e6ce14dac3657f30140c065eacc15d92"
        ],
        [
            "assert (Col G K M) by (conclude lemma_collinear4).",
            "VernacExtend",
            "75265f521cf26866745f63c7a2647fc3704a7e13"
        ],
        [
            "assert (Col K G M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "a7fe579a48395d0e6bfd3318796921e6e0b85189"
        ],
        [
            "assert (Col H K m) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e64b56a7dc1f713a0a19cc953e7088ef2a1888c7"
        ],
        [
            "assert (Col H K G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "aec989929305b5b3949b680838d5e88061d04738"
        ],
        [
            "assert (neq H K) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "2d5386d01d697a489879c64423dede57045b7f50"
        ],
        [
            "assert (Col K m G) by (conclude lemma_collinear4).",
            "VernacExtend",
            "3be68837904afd5a8890b78224973a4ffb2b060e"
        ],
        [
            "assert (Col K G m) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "80aa47f92839949596bc23a655b27c9ddbff7744"
        ],
        [
            "assert (Col G H K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0857b78e729ad0fcebe9298dfa903793f553a709"
        ],
        [
            "assert (eq G G) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
        ],
        [
            "assert (Col G H G) by (conclude_def Col ).",
            "VernacExtend",
            "087ad4e46922f1209cf97725fc10d113a6fc9c57"
        ],
        [
            "assert (neq G K) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8df2f7912c127c43a0ceb9c434acc249d686e7ca"
        ],
        [
            "assert (nCol G K A) by (conclude lemma_NChelper).",
            "VernacExtend",
            "70b7d915869a7d2ad37d53422dcde10604d484de"
        ],
        [
            "assert (nCol K G A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "bf611b18b14de49e5ee9912ab69a9537aed9f1db"
        ],
        [
            "assert (Col K H G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "229af8cb25b8ddb08e7bfabb4f1b9be14e1b5c02"
        ],
        [
            "assert (eq K K) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "89ee1e712221f97ec5067c4595ba2f1f13d3c25c"
        ],
        [
            "assert (Col K H K) by (conclude_def Col ).",
            "VernacExtend",
            "a6863fb95c9b0975c89a51b4b254839047dec22d"
        ],
        [
            "assert (neq G K) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8df2f7912c127c43a0ceb9c434acc249d686e7ca"
        ],
        [
            "assert (neq K G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c0c34c83dbe4ec3c06fe3dd7f55a0581fab3df42"
        ],
        [
            "assert (nCol K G C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "5f903bc766f9af8f5cec88a4220a743391bba433"
        ],
        [
            "assert (OS A C K G) by (conclude_def OS ).",
            "VernacExtend",
            "46d1fafaa16c8bf88b6fe69ea5d69b139c01d8d3"
        ],
        [
            "assert (OS C A K G) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "4c1aa7cd91fb45bba815e17bf46eacf1a699e1ee"
        ],
        [
            "assert (BetS D K C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ab74a1960e0cbf64bd860096edda88af124ac4c4"
        ],
        [
            "assert (BetS B G A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ebc159b7d726e35d109f030524b7fa40975263d3"
        ],
        [
            "assert (Par D C B A) by (conclude proposition_28A).",
            "VernacExtend",
            "caff63f32a81f2688dac34266226ecac9343698a"
        ],
        [
            "assert (Par C D A B) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "aef51269eb6d26b089d5d541ca5a4437c82c9486"
        ],
        [
            "assert (Par A B C D) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "25c17144a7fa0b138b6ed715f37cb8b45f13adb9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_30B",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (neq G H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f58acd228c182b5e683f09f760fae997b311ffc8"
                    ]
                },
                {
                    "command": [
                        "assert (neq H G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d9df94dc080eef15b772bb805e3c034674809907"
                    ]
                },
                {
                    "command": [
                        "assert (neq K H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "329f62a1a5306c04fa8541bf6ce031812bbb581a"
                    ]
                },
                {
                    "command": [
                        "assert (neq H K) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "c02fac14f12e2b81288500756e41532c35c48f50"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists P, (BetS H G P /\\ Cong G P G H)) by (conclude lemma_extension);destruct Tf as [P];spliter.",
                        "VernacExtend",
                        "ae775719d53fec8c0b2b6bef4f1c0f200711a120"
                    ]
                },
                {
                    "command": [
                        "assert (BetS P G H) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "881284b627eab530accc8aae64261669416c7ce3"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A G H G H F) by (apply (proposition_29 A B E F P G H);auto).",
                        "VernacExtend",
                        "c44e3fc41bab813834506d9a734aad8625506fe6"
                    ]
                },
                {
                    "command": [
                        "assert (BetS P K H) by (conclude lemma_3_5b).",
                        "VernacExtend",
                        "f427828187b9eefd2c7dd5b42cc1efdafe62f825"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C K H K H F) by (conclude (proposition_29 C D E F P )).",
                        "VernacExtend",
                        "ff675d31c4f97d2285e8176f4c324c4ae2968bb1"
                    ]
                },
                {
                    "command": [
                        "assert (BetS H K G) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "36704261561bb0231c219eb9a4cc50739b823e74"
                    ]
                },
                {
                    "command": [
                        "assert (Out H K G) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "64a98df9076bccef73266b6e3f77f50210775372"
                    ]
                },
                {
                    "command": [
                        "assert (Out H G K) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "33fde04b947cc14c380c57da1d8f6eec5233aa6d"
                    ]
                },
                {
                    "command": [
                        "assert (eq F F) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
                    ]
                },
                {
                    "command": [
                        "assert (neq H F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "303ad83ddd84e20e2559b08e00c9a03382d26396"
                    ]
                },
                {
                    "command": [
                        "assert (Out H F F) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "027c2279000e7f9f289edd5d074f15ffa9d586d6"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A G H K H F) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "8eee3ac8c1aff369103feae674a83421efea5d20"
                    ]
                },
                {
                    "command": [
                        "assert (CongA K H F A G H) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "71f859b3976b0b88de62d0c675cb6cdcd9bf4841"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C K H A G H) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "4a878650fdb725d78475d6a0e5fdac78db1cd4d4"
                    ]
                },
                {
                    "command": [
                        "assert (neq G H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f58acd228c182b5e683f09f760fae997b311ffc8"
                    ]
                },
                {
                    "command": [
                        "assert (Out G H K) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "008a38d59e29668887e5ad40c98a4b5bc1b2c6cc"
                    ]
                },
                {
                    "command": [
                        "assert (neq A G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "01ce0c6f72655b04abd7b7bff327342bcc2d7010"
                    ]
                },
                {
                    "command": [
                        "assert (neq G A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "e2791ae9c412727db671b58f53b6b23174e66732"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Out G A A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "f0d36422f9677bc41aff316892110c6a0e29b77c"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C K H A G K) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "eaafabd96a4225976f8ad0ec15069b198774dede"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H K C K G A) by (conclude lemma_equalanglesflip).",
                        "VernacExtend",
                        "3d39c28a1f7c393cc014dd8758522ca137a15619"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS A M F /\\ Col G H M /\\ nCol G H A)) by (conclude_def TS );destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "0ff8c598eb4b6789f4b461ab17c1d7ac8e3dc0f6"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists m, (BetS C m F /\\ Col K H m /\\ nCol K H C)) by (conclude_def TS );destruct Tf as [m];spliter.",
                        "VernacExtend",
                        "b149ed9e0ba5d42217e9087a573a599989d55f87"
                    ]
                },
                {
                    "command": [
                        "assert (Col G K H) by (conclude_def Col ).",
                        "VernacExtend",
                        "9d4f86fe52eb890856af81f1622a0c6101ab59c2"
                    ]
                },
                {
                    "command": [
                        "assert (Col H G K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "69dae6e9b5b1b2b20fd99ca04988e8b5bb11338b"
                    ]
                },
                {
                    "command": [
                        "assert (Col H G M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fdd65519592ac955c47113c980fe499d6b0a4ef5"
                    ]
                },
                {
                    "command": [
                        "assert (neq H G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ebb899f7e6ce14dac3657f30140c065eacc15d92"
                    ]
                },
                {
                    "command": [
                        "assert (Col G K M) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "75265f521cf26866745f63c7a2647fc3704a7e13"
                    ]
                },
                {
                    "command": [
                        "assert (Col K G M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "a7fe579a48395d0e6bfd3318796921e6e0b85189"
                    ]
                },
                {
                    "command": [
                        "assert (Col H K m) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e64b56a7dc1f713a0a19cc953e7088ef2a1888c7"
                    ]
                },
                {
                    "command": [
                        "assert (Col H K G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "aec989929305b5b3949b680838d5e88061d04738"
                    ]
                },
                {
                    "command": [
                        "assert (neq H K) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "2d5386d01d697a489879c64423dede57045b7f50"
                    ]
                },
                {
                    "command": [
                        "assert (Col K m G) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "3be68837904afd5a8890b78224973a4ffb2b060e"
                    ]
                },
                {
                    "command": [
                        "assert (Col K G m) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "80aa47f92839949596bc23a655b27c9ddbff7744"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "0857b78e729ad0fcebe9298dfa903793f553a709"
                    ]
                },
                {
                    "command": [
                        "assert (eq G G) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H G) by (conclude_def Col ).",
                        "VernacExtend",
                        "087ad4e46922f1209cf97725fc10d113a6fc9c57"
                    ]
                },
                {
                    "command": [
                        "assert (neq G K) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8df2f7912c127c43a0ceb9c434acc249d686e7ca"
                    ]
                },
                {
                    "command": [
                        "assert (nCol G K A) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "70b7d915869a7d2ad37d53422dcde10604d484de"
                    ]
                },
                {
                    "command": [
                        "assert (nCol K G A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "bf611b18b14de49e5ee9912ab69a9537aed9f1db"
                    ]
                },
                {
                    "command": [
                        "assert (Col K H G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "229af8cb25b8ddb08e7bfabb4f1b9be14e1b5c02"
                    ]
                },
                {
                    "command": [
                        "assert (eq K K) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "89ee1e712221f97ec5067c4595ba2f1f13d3c25c"
                    ]
                },
                {
                    "command": [
                        "assert (Col K H K) by (conclude_def Col ).",
                        "VernacExtend",
                        "a6863fb95c9b0975c89a51b4b254839047dec22d"
                    ]
                },
                {
                    "command": [
                        "assert (neq G K) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8df2f7912c127c43a0ceb9c434acc249d686e7ca"
                    ]
                },
                {
                    "command": [
                        "assert (neq K G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "c0c34c83dbe4ec3c06fe3dd7f55a0581fab3df42"
                    ]
                },
                {
                    "command": [
                        "assert (nCol K G C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "5f903bc766f9af8f5cec88a4220a743391bba433"
                    ]
                },
                {
                    "command": [
                        "assert (OS A C K G) by (conclude_def OS ).",
                        "VernacExtend",
                        "46d1fafaa16c8bf88b6fe69ea5d69b139c01d8d3"
                    ]
                },
                {
                    "command": [
                        "assert (OS C A K G) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "4c1aa7cd91fb45bba815e17bf46eacf1a699e1ee"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D K C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ab74a1960e0cbf64bd860096edda88af124ac4c4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B G A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ebc159b7d726e35d109f030524b7fa40975263d3"
                    ]
                },
                {
                    "command": [
                        "assert (Par D C B A) by (conclude proposition_28A).",
                        "VernacExtend",
                        "caff63f32a81f2688dac34266226ecac9343698a"
                    ]
                },
                {
                    "command": [
                        "assert (Par C D A B) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "aef51269eb6d26b089d5d541ca5a4437c82c9486"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B C D) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "25c17144a7fa0b138b6ed715f37cb8b45f13adb9"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}