{
    "filename": "Elements/OriginalProofs/proposition_16.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_10.",
            "VernacRequire",
            "0ea207e1bc9972bfee8d49dfe86dbf3dfd02f206"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_15.",
            "VernacRequire",
            "ef7ea525696656df0faa7f8d9beb5519b1538cb0"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_equalanglesreflexive.",
            "VernacRequire",
            "a5b0c8cd5b25371ea0dedf900d1cff5bba496d16"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_angleorderrespectscongruence.",
            "VernacRequire",
            "c2bd6e17c765cc0ffa70acda0768e1e750e5c37e"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_angleorderrespectscongruence2.",
            "VernacRequire",
            "de27a8d358beddba8014a148c6a73ba0ba3b7a17"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_16 : forall A B C D, Triangle A B C -> BetS B C D -> LtA B A C A C D /\\ LtA C B A A C D.",
            "VernacStartTheoremProof",
            "43de0ff9c38e1896be7292633a68c884caf69bff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (~ eq A C).",
            "VernacExtend",
            "bac3ad054000c7377a20191ed2a60671ee862b33"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq B C).",
            "VernacExtend",
            "2a4c174d5fcfb07079559ff9be73565058be28f2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f6de27d2290b224fed0d2ab5b24228893a410ec8"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (BetS A E C /\\ Cong E A E C)) by (conclude proposition_10);destruct Tf as [E];spliter.",
            "VernacExtend",
            "ff7bbb208800a54b16e7d09021531ce48c750471"
        ],
        [
            "assert (~ eq B E).",
            "VernacExtend",
            "6ed1b09483a0cb88f77cb8717363a53289ae12bf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (BetS A B C) by (conclude cn_equalitysub).",
            "VernacExtend",
            "5869026fbe9591c129a81775f276dfdd706f5b1f"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq E B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "fdcff29c293eec992662c7fb2d6c669edf09d93d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS B E F /\\ Cong E F E B)) by (conclude lemma_extension);destruct Tf as [F];spliter.",
            "VernacExtend",
            "63d8b8f2ce8393b0819748546f03d038802e9e07"
        ],
        [
            "assert (~ eq A C).",
            "VernacExtend",
            "bac3ad054000c7377a20191ed2a60671ee862b33"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq C A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "3e0de460aa8733a502d4f01459ffc0ac21de17d3"
        ],
        [
            "assert (neq E C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "11bd8752fbbad03347b69b155e5f87977400b76e"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists G, (BetS A C G /\\ Cong C G E C)) by (conclude lemma_extension);destruct Tf as [G];spliter.",
            "VernacExtend",
            "518da1b34e7c223e7f3c96dc03644882f62118f5"
        ],
        [
            "assert (~ Col B E A).",
            "VernacExtend",
            "4677eded7395a72197463df35bfff745038ada6f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A E C) by (conclude_def Col ).",
            "VernacExtend",
            "134baeef628e0b8217966e08d09682d254ae3f40"
        ],
        [
            "assert (Col E A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4613a5ad2a9e067edf77e8a304d7f80b70209516"
        ],
        [
            "assert (Col E A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "cf8a1b5b5f1e2cfc75e46bde4de52982bbf04a93"
        ],
        [
            "assert (neq A E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9dc76a35f0423fea77251119a803e21c8f59a255"
        ],
        [
            "assert (neq E A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "5eef00ef1d0a882b209a09f629d7ffc97b7486d2"
        ],
        [
            "assert (Col A B C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "c7215293ea773f2ac1e4d0c1beeef08eedfcb697"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B E A C E F) by (conclude proposition_15a).",
            "VernacExtend",
            "35311424837174c1503859182778da5c514715eb"
        ],
        [
            "assert (~ Col A E B).",
            "VernacExtend",
            "02d6f2ceb494f931facf94068f2a7b648163547d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B E A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "002b0fa977c05d5a6beb6123cfa6b54a2dffd052"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA A E B B E A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "43d6d814db719281d6b4c30fe1af09a5a874d0b8"
        ],
        [
            "assert (CongA A E B C E F) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "e27d8ec78bf473dbc1625f723fcee672c7c098c1"
        ],
        [
            "assert (Cong B E F E) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "035e29480265761672fdb3186424807e461b28ca"
        ],
        [
            "assert (Cong E B E F) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "8273759ff2a9dd32be2db158de610bdde1dc9ddf"
        ],
        [
            "assert (~ Col E A B).",
            "VernacExtend",
            "3e2d21a446bd2300ce83079aa95f2f87326a6bd2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B E A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "002b0fa977c05d5a6beb6123cfa6b54a2dffd052"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert ((Cong A B C F /\\ CongA E A B E C F /\\ CongA E B A E F C)) by (conclude proposition_04).",
            "VernacExtend",
            "c6a91feafc96affeb0f84d13536ea58aa7b8e95d"
        ],
        [
            "assert (~ Col B A E).",
            "VernacExtend",
            "b52874eac2a54aa5336e76d7b73f69262271e200"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col E A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4613a5ad2a9e067edf77e8a304d7f80b70209516"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out A C E) by (conclude lemma_ray4).",
            "VernacExtend",
            "8e73fa9e09a023f66329376c8dae2c6d98215871"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (neq A B) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "9649284df41a2d643c1d265e0d98150c3d8d6a08"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "assert (Out A B B) by (conclude lemma_ray4).",
            "VernacExtend",
            "22813113886dbbdce7acaed310fef3f6d11d8640"
        ],
        [
            "assert (~ Col B A C).",
            "VernacExtend",
            "119e756c043d3eda79fbabedada4b8a673b1637b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B A C B A C) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "7b25d56040d290a45516c58087301dd50c7fbd27"
        ],
        [
            "assert (CongA B A C B A E) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "7045f53a1226debafa4ac6542a97a8f7f5295cda"
        ],
        [
            "assert (CongA B A E E A B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "14b52be83dd100914ac2ef322674c5898a33cd52"
        ],
        [
            "assert (CongA B A C E A B) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "dd5fc686aa591190d426081d3ce3a46e0706462e"
        ],
        [
            "assert (CongA B A C E C F) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "4099b2ab1d508d6771c28cb3db9596951e667f87"
        ],
        [
            "assert (BetS C E A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "7c1c579146dad95e6d2d5a7c03cd6d6b25ba5645"
        ],
        [
            "assert (neq C E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8cb02cc27caec779e42911044c466350ef0446a"
        ],
        [
            "assert (Out C E A) by (conclude lemma_ray4).",
            "VernacExtend",
            "9d90c035628627adf7fee32bf82f558d1d8375f5"
        ],
        [
            "assert (eq F F) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
        ],
        [
            "assert (~ Col E C F).",
            "VernacExtend",
            "3e84f202322d6ad1bf6cef62efd382fe6dd1164f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B E F) by (conclude_def Col ).",
            "VernacExtend",
            "44ccca138fe3af2774376656525c850d7fefc38b"
        ],
        [
            "assert (Col F E B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0b6e6fd65cb8d2f01e42950732927ade81514f3c"
        ],
        [
            "assert (Col F E C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f286c5486fe873a2114070f449e30e1d201df9e0"
        ],
        [
            "assert (neq E F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "24d9090140e0d09ffb9bfc0a8bab177a6d8c8b7d"
        ],
        [
            "assert (neq F E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c0cd186aa29309ff7497bf8f03906985e3cd35a6"
        ],
        [
            "assert (Col E B C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "9a832f35ca3c4f868b36a5690795dc38059d20cf"
        ],
        [
            "assert (Col A E C) by (conclude_def Col ).",
            "VernacExtend",
            "134baeef628e0b8217966e08d09682d254ae3f40"
        ],
        [
            "assert (Col E C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "719226fedabf65a2db4f0cde2b96bf44cea1a9ed"
        ],
        [
            "assert (Col E C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5f8f922854f481f296fb5d1b1962a85f3756b2d9"
        ],
        [
            "assert (neq E C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "11bd8752fbbad03347b69b155e5f87977400b76e"
        ],
        [
            "assert (Col C B A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "1c018dd0cbcaf3db9508936af6dbabcf55d57bac"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq C F).",
            "VernacExtend",
            "6d21a329ea6c485ed210b4672775abc0fe9dec3a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col E C F) by (conclude_def Col ).",
            "VernacExtend",
            "7eeb1df87c5d7f47c6d7e254c709ec271ed20228"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out C F F) by (conclude lemma_ray4).",
            "VernacExtend",
            "0fabf8216c0577977ac973d408618e0e992c1d40"
        ],
        [
            "assert (CongA E C F E C F) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "8f22677231f02ca94229c7b6819ec0e50484ea65"
        ],
        [
            "assert (CongA E C F A C F) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "5c00479251c0d41248fc63b9f467bc06cc2ec668"
        ],
        [
            "assert (CongA B A C A C F) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "3af3ea7e117e1c1c1698a63f9afd7ad7cc13bf95"
        ],
        [
            "assert (BetS D C B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "f8e83b3954564e194be4b1d9fbbe17468f2a408c"
        ],
        [
            "assert (BetS F E B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "0d4a85ecbf60f88e55c65f1953eb1cc6d19eaa8d"
        ],
        [
            "assert (~ Col D B F).",
            "VernacExtend",
            "4eb8e9c2f845505e634f544bde50d0621d52f1d7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col F B D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "dbf746526715fedff8ca9bb48d38904e0d3114c5"
        ],
        [
            "assert (Col B E F) by (conclude_def Col ).",
            "VernacExtend",
            "44ccca138fe3af2774376656525c850d7fefc38b"
        ],
        [
            "assert (Col F B E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "dcdaa12ff626c6232a8989ac62844b9189ef8e33"
        ],
        [
            "assert (neq B F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "3311f7e0915ee01870bcf1d0e47bbc82a3005605"
        ],
        [
            "assert (neq F B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d5ad8910f3aca3a125d701424f1ef4dd08caa6ea"
        ],
        [
            "assert (Col B D E) by (conclude lemma_collinear4).",
            "VernacExtend",
            "4d57458c57aa115d7de6192408f4b77a715d2ae1"
        ],
        [
            "assert (Col D B E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c3ccdd206bd7e3e8019392e3d6ad3848490404d7"
        ],
        [
            "assert (Col B C D) by (conclude_def Col ).",
            "VernacExtend",
            "afd1e2d0a6ae54ac1da609fde4731349b531ba6f"
        ],
        [
            "assert (Col D B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "9b514e0053ba8f3c49b63d2480a07be55876115a"
        ],
        [
            "assert (Col B E C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "86e0cc98e99562529ed50f5aacec1913cc2400a8"
        ],
        [
            "assert (Col E C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "719226fedabf65a2db4f0cde2b96bf44cea1a9ed"
        ],
        [
            "assert (Col A E C) by (conclude_def Col ).",
            "VernacExtend",
            "134baeef628e0b8217966e08d09682d254ae3f40"
        ],
        [
            "assert (Col E C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5f8f922854f481f296fb5d1b1962a85f3756b2d9"
        ],
        [
            "assert (neq E C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "11bd8752fbbad03347b69b155e5f87977400b76e"
        ],
        [
            "assert (Col C B A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "1c018dd0cbcaf3db9508936af6dbabcf55d57bac"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rename_H H; let Tf:=fresh in assert (Tf:exists H, (BetS D H E /\\ BetS F H C)) by (conclude postulate_Pasch_inner);destruct Tf as [H];spliter.",
            "VernacExtend",
            "6708f3863ae51474abae3ffe5ec3cb90d93eceb8"
        ],
        [
            "assert (BetS C H F) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "c357011dde476bde537e2157b46b7d5514fa7126"
        ],
        [
            "assert (Out C F H) by (conclude lemma_ray4).",
            "VernacExtend",
            "82a08d884f752a458df0d7ed865accb3e85619f2"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Out C A A) by (conclude lemma_ray4).",
            "VernacExtend",
            "c5aa51775ac2d6725d437ebc1841e67fe453c920"
        ],
        [
            "assert (CongA B A C A C H) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "7afb77ea2177ac6a863e92591790cf4f45eca458"
        ],
        [
            "assert (CongA B A C A C F) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "ccd3d8f578c9fcb81866c8c565b324085af6b2dc"
        ],
        [
            "assert (BetS E H D) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "5cb25cb24ae0a604e748ccadba3491c3608cb4c3"
        ],
        [
            "assert (Out C A E) by (conclude lemma_ray5).",
            "VernacExtend",
            "c30b7ffcad9aedd22a0cc7eb2a8731718a6e577f"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (neq D C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "dac741e71be8778833d3135c1db363ed1412abfc"
        ],
        [
            "assert (neq C D) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c7e81de516241ce4e74c736518aa3cecf412e158"
        ],
        [
            "assert (Out C D D) by (conclude lemma_ray4).",
            "VernacExtend",
            "5edaa1cc05e74baaf8ca5eff45ab4cd858d1f9e7"
        ],
        [
            "assert (CongA B A C A C H) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "18e485d72e304dd2ab6c9d0be8f993326ce389ec"
        ],
        [
            "assert (LtA B A C A C D) by (conclude_def LtA ).",
            "VernacExtend",
            "dddd9bb89dadac0b5f941492cb2ba82867ef13bd"
        ],
        [
            "assert (neq B C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists e, (BetS B e C /\\ Cong e B e C)) by (conclude proposition_10);destruct Tf as [e];spliter.",
            "VernacExtend",
            "dc7ae84318d087794c297be84367f17b06d1e32a"
        ],
        [
            "assert (Col B e C) by (conclude_def Col ).",
            "VernacExtend",
            "80e4544ece25b56724930f5aa47438d644dfa3ae"
        ],
        [
            "assert (~ eq A e).",
            "VernacExtend",
            "0a781b1961ba05532633456dc36151a9e504d54f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (BetS B A C) by (conclude cn_equalitysub).",
            "VernacExtend",
            "ec931d7a1e345eca1abf8b08e2e780b96868938f"
        ],
        [
            "assert (Col B A C) by (conclude_def Col ).",
            "VernacExtend",
            "0a9dade7a73d450a134b8130679df44020c3d111"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq e A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "e96256a1b3a8d34f25de2fd042c9185629703524"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists f, (BetS A e f /\\ Cong e f e A)) by (conclude lemma_extension);destruct Tf as [f];spliter.",
            "VernacExtend",
            "a98b3e67148a9cb3a54839a83d65dc1e9e670271"
        ],
        [
            "assert (~ eq B C).",
            "VernacExtend",
            "2a4c174d5fcfb07079559ff9be73565058be28f2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A C) by (conclude_def Col ).",
            "VernacExtend",
            "0a9dade7a73d450a134b8130679df44020c3d111"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col A e B).",
            "VernacExtend",
            "a05c45bfde3cbd131f3690cae656cebf3bb0aa6c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B e C) by (conclude_def Col ).",
            "VernacExtend",
            "80e4544ece25b56724930f5aa47438d644dfa3ae"
        ],
        [
            "assert (Col e B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e87e038fdff0ccdf3bff33c9052f4be01d13f883"
        ],
        [
            "assert (Col e B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "cbd5c037a6bddccebe74ca5ecab87178297fc6aa"
        ],
        [
            "assert (neq B e) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "1ab5a8224d2f9105d2759aeb1487ed59d736baa2"
        ],
        [
            "assert (neq e B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "7bd4ca6411cbeefdee596a6f8a3b5bafb8fae737"
        ],
        [
            "assert (Col B A C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA A e B C e f) by (conclude proposition_15a).",
            "VernacExtend",
            "e3aa7d53498e73b09ba2e86201dac85de9265196"
        ],
        [
            "assert (~ Col B e A).",
            "VernacExtend",
            "afbb415197822b897cfa227f28b6de179c249a5b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A e B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9226d4e687c8b3b872df3727d9d7c307c4cd398c"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B e A A e B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "597b7b3b0a0130f732d5dd6977e3ed2940542109"
        ],
        [
            "assert (CongA B e A C e f) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "0e96c2d745bec9495aa0c96c4c73a08bd2aa7082"
        ],
        [
            "assert (Cong A e f e) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "ff9f1d562ef67dd20c0b0f9464e36ef8ea72f0bd"
        ],
        [
            "assert (Cong e A e f) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "b458a25ed73e3d7e64bb457801b5e38773afac6e"
        ],
        [
            "assert (~ Col e B A).",
            "VernacExtend",
            "1638f1c9fc25f7f3a5b3fe20661bdab5c4afb3dc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A e B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9226d4e687c8b3b872df3727d9d7c307c4cd398c"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert ((Cong B A C f /\\ CongA e B A e C f /\\ CongA e A B e f C)) by (conclude proposition_04).",
            "VernacExtend",
            "41de8dc593c04e9e602f9f084a6a693f3a9ce2a1"
        ],
        [
            "assert (~ Col A B e).",
            "VernacExtend",
            "e1c3d2bbc1d3a6018b41bdc4198cd87caccf651d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col e B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e87e038fdff0ccdf3bff33c9052f4be01d13f883"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out B C e) by (conclude lemma_ray4).",
            "VernacExtend",
            "9bd5db28f2fa622115ef0a3f0ed91001f725541a"
        ],
        [
            "assert (Out B A A) by (conclude lemma_ray4).",
            "VernacExtend",
            "6c6ec3ac616495dbfa731f8b969ff3f1e02b3fce"
        ],
        [
            "assert (~ Col A B C).",
            "VernacExtend",
            "a75f346a3102b55e5f88c48f3e148b73c2675143"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA A B C A B C) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "aded022177916f7e4435a874df64d10bc8cdea41"
        ],
        [
            "assert (CongA A B C A B e) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "59e39c706ccaf1caeeba01982f0d942591e01bfb"
        ],
        [
            "assert (CongA A B e e B A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "89594bfc37d5a20bfd44615560187e98904ba4fd"
        ],
        [
            "assert (CongA A B C e B A) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "2614added06ba4478b1d9182bc8bb29e50f163b3"
        ],
        [
            "assert (CongA A B C e C f) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "c1ce6f250c7db3567ff1ca6e5500863c1df388e2"
        ],
        [
            "assert (BetS C e B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "7a94e5dd970f264905893358a82a31e8a0150d7b"
        ],
        [
            "assert (neq C e) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "2d7382a7e528d944d1685b5681bfe191a31e06c5"
        ],
        [
            "assert (Out C e B) by (conclude lemma_ray4).",
            "VernacExtend",
            "83a489131bd04181cc2c587cfc7eb0c60b7fc2c6"
        ],
        [
            "assert (eq f f) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "316499f73096f2874308cda27ae289c6f535a7a4"
        ],
        [
            "assert (nCol e C f) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "f85a7e90db4a1e1191e2a6a1e5cc0c7609c84010"
        ],
        [
            "assert (~ eq C f).",
            "VernacExtend",
            "38c04fe0a545b7430b4acb5cc65902976d2dd830"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col e C f) by (conclude_def Col ).",
            "VernacExtend",
            "9f38445b54b5442b263bc6ce4ee0a431441d3ea4"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out C f f) by (conclude lemma_ray4).",
            "VernacExtend",
            "da98121dc2510ae6512ff08fce4025da252eeb35"
        ],
        [
            "assert (~ Col e C f).",
            "VernacExtend",
            "7bd96d49844e67de47e87ad13ccf978c05bbb408"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A e f) by (conclude_def Col ).",
            "VernacExtend",
            "b10bffdea0be6809581ce3faf90b45723f0afa5f"
        ],
        [
            "assert (Col f e A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "82371c794694431b063f4b347ecf49b524415937"
        ],
        [
            "assert (Col f e C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f546dd91a9f552f5c971b153aa8250a24c3f6ae7"
        ],
        [
            "assert (neq e f) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d35623fd4c437ce86fc3d01c42abbbece6886bd0"
        ],
        [
            "assert (neq f e) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "cc2da5a3585622736c108a6fbaefed9d8c87970d"
        ],
        [
            "assert (Col e A C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f60790514d61a1e3ed9794d6f9f3d4f2a0b80876"
        ],
        [
            "assert (Col e C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5ebde766e36f579e5961629d5a9deee8bc848e3e"
        ],
        [
            "assert (Col e C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "88cc835c9017000dc703d7ab1b297710eb82a9b4"
        ],
        [
            "assert (neq e C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "e03eb508ce03c1a7ba174d425c7e64a411d4f912"
        ],
        [
            "assert (Col C A B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
        ],
        [
            "assert (Col B A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA e C f e C f) by (conclude lemma_equalanglesreflexive).",
            "VernacExtend",
            "d1cf008bf23c44f2c9c83b2dd359df5340071e01"
        ],
        [
            "assert (CongA e C f B C f) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "7cc5deda2623f79c21b1bcea2f16a7de7d1f1e8f"
        ],
        [
            "assert (CongA A B C B C f) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "439045c451c333466d22ef8664ed006ebd12bcaf"
        ],
        [
            "assert (BetS G C A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "579e6340def52d12b4c856483f64c9b625f4ae77"
        ],
        [
            "assert (neq G C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "63dd458d3b8a273f0a5fdd40789229c1f65e7e1a"
        ],
        [
            "assert (neq C G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "65eb5aeb5fb5f688314a130b770611d49f86d4e7"
        ],
        [
            "assert (BetS f e A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "c295254c14c1171c414d9bf8633c5fae9cd1acdf"
        ],
        [
            "assert (~ Col G A f).",
            "VernacExtend",
            "1df644a0cde51b1f067804aafbcd8ccd81fb7bdb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col f A G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5cb89487c323045894050b6467c2a174ccfd6076"
        ],
        [
            "assert (Col A e f) by (conclude_def Col ).",
            "VernacExtend",
            "b10bffdea0be6809581ce3faf90b45723f0afa5f"
        ],
        [
            "assert (Col f A e) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0928a0e41a725f683927c7fcff8c81a10ae0744e"
        ],
        [
            "assert (neq A f) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "6b725fef977859d1ddd29737338f5440b22541b6"
        ],
        [
            "assert (neq f A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "5f8efb51cc50db755c1d4e874ee6c818440b5271"
        ],
        [
            "assert (Col A G e) by (conclude lemma_collinear4).",
            "VernacExtend",
            "5b88b9a241243231b5389d3600441b9ffc712aba"
        ],
        [
            "assert (Col G A e) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "58cdd0f7028631260386db196550727dad40f4d1"
        ],
        [
            "assert (Col A C G) by (conclude_def Col ).",
            "VernacExtend",
            "cb606688d5bd769d4f9895388a009bcb483aff53"
        ],
        [
            "assert (Col G A C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "683e918733125fdaa6ac8bb441872801e2e435fb"
        ],
        [
            "assert (neq A G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "01ce0c6f72655b04abd7b7bff327342bcc2d7010"
        ],
        [
            "assert (neq G A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "e2791ae9c412727db671b58f53b6b23174e66732"
        ],
        [
            "assert (Col A e C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "95f47ee41fe50e656ab87c2927637048926174c8"
        ],
        [
            "assert (Col e C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5ebde766e36f579e5961629d5a9deee8bc848e3e"
        ],
        [
            "assert (Col B e C) by (conclude_def Col ).",
            "VernacExtend",
            "80e4544ece25b56724930f5aa47438d644dfa3ae"
        ],
        [
            "assert (Col e C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "88cc835c9017000dc703d7ab1b297710eb82a9b4"
        ],
        [
            "assert (neq e C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "e03eb508ce03c1a7ba174d425c7e64a411d4f912"
        ],
        [
            "assert (Col C A B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists h, (BetS G h e /\\ BetS f h C)) by (conclude postulate_Pasch_inner);destruct Tf as [h];spliter.",
            "VernacExtend",
            "f76e6e0f090bb77355eaf2f9557073d13164b867"
        ],
        [
            "assert (BetS C h f) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "998f00ab92c4cf76d0b0b93dbcf073aa6a555c5f"
        ],
        [
            "assert (neq h C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d34e304f5cdbb7d1c08b6f8a260aaa65ede2db5f"
        ],
        [
            "assert (neq C h) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "2d40aab1edcc1b801ad38fd0d1a03299fa980d2f"
        ],
        [
            "assert (Out C h f) by (conclude lemma_ray4).",
            "VernacExtend",
            "5cf40b47776d0c2711ec7b25567be4da023f45a8"
        ],
        [
            "assert (Out C f h) by (conclude lemma_ray5).",
            "VernacExtend",
            "8a1c9e39e54035f853b95a3757f267175382c5d1"
        ],
        [
            "assert (Out C B B) by (conclude lemma_ray4).",
            "VernacExtend",
            "637eb8335a2163c1d041df3535e69682ab03a1ad"
        ],
        [
            "assert (CongA A B C B C h) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "237e332d761279bada756bf6ebdff18a14587549"
        ],
        [
            "assert (CongA A B C B C f) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "a703461e2cdd8c985385b61f5443df90a44b296a"
        ],
        [
            "assert (BetS e h G) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "86ee0a5ffe44d790ed61871031eda93051849985"
        ],
        [
            "assert (BetS C e B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "7a94e5dd970f264905893358a82a31e8a0150d7b"
        ],
        [
            "assert (Out C e B) by (conclude lemma_ray4).",
            "VernacExtend",
            "83a489131bd04181cc2c587cfc7eb0c60b7fc2c6"
        ],
        [
            "assert (Out C B e) by (conclude lemma_ray5).",
            "VernacExtend",
            "5a09a157d7159083ad02ba343195a4e88bb1a28b"
        ],
        [
            "assert (eq G G) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
        ],
        [
            "assert (Out C G G) by (conclude lemma_ray4).",
            "VernacExtend",
            "260764251df307403dfa4a3155af6d73c3d10b8b"
        ],
        [
            "assert (CongA A B C B C h) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "f5d197ded4ca784a1fc35ca66f413c4fd4b844eb"
        ],
        [
            "assert (LtA A B C B C G) by (conclude_def LtA ).",
            "VernacExtend",
            "4276a1c5c119c055062cc13d5d1dc48ae07e1017"
        ],
        [
            "assert (~ Col G C B).",
            "VernacExtend",
            "b264d43639a555eb8b05193e0b5873be7f3056a1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A C G) by (conclude_def Col ).",
            "VernacExtend",
            "cb606688d5bd769d4f9895388a009bcb483aff53"
        ],
        [
            "assert (Col G C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3b1b21b9c9ffa6d5aacf98e1b973145d5993d55b"
        ],
        [
            "assert (neq C G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "fdfa8129cc6959925f83269b6da8d85fc4b0b7b8"
        ],
        [
            "assert (neq G C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "10a4c94265d22f24f38d2e1b67568e7280eae345"
        ],
        [
            "assert (Col C B A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "1c018dd0cbcaf3db9508936af6dbabcf55d57bac"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA G C B D C A) by (conclude proposition_15a).",
            "VernacExtend",
            "608e78b765c7f2e4dd397adc8eb384fe57ef55b2"
        ],
        [
            "assert (~ Col A C D).",
            "VernacExtend",
            "498132f6ca2265ee346b7a874729731ab8c58aaf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col D C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b4ed13d5f9f4239375e10dc6e0a6b6a68c2f6d96"
        ],
        [
            "assert (Col B C D) by (conclude_def Col ).",
            "VernacExtend",
            "afd1e2d0a6ae54ac1da609fde4731349b531ba6f"
        ],
        [
            "assert (Col D C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
        ],
        [
            "assert (neq C D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ec8ed20fd91c966709071dfab476d123976a3733"
        ],
        [
            "assert (neq D C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f23eb05481a976a61c3e073657f8e5ca451231f4"
        ],
        [
            "assert (Col C A B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA G C B B C G) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "fa8529c8ba1ac59eba417801cd1b6e6020542804"
        ],
        [
            "assert (LtA A B C G C B) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "21fef0637658b08836e67b5b8e41a5642348e56a"
        ],
        [
            "assert (~ Col D C A).",
            "VernacExtend",
            "6464db860a89fd99c0b48ce104f1508e409789ec"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A C D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "dc9cd9e1fbf7d2567adcbf0f4eb3309986f99c10"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA D C A A C D) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "9ecdec3e9a8c61d9ce82b47d7dde6839ee51c1f8"
        ],
        [
            "assert (CongA G C B A C D) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "8ab582340bcefddbba158503d608d5d50a23e130"
        ],
        [
            "assert (CongA A C D G C B) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "0e4cad6c32b9208b4838fd531d51635f5bee6b34"
        ],
        [
            "assert (LtA A B C A C D) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "bf5640bb009b649d1e0d325114839122e8880485"
        ],
        [
            "assert (~ Col C B A).",
            "VernacExtend",
            "86233fe6d2145a6e93ed7346f858db350e0c062a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA C B A A B C) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "944d8975dcf87abfbf9178008fcabb9fcd62f1f9"
        ],
        [
            "assert (LtA C B A A C D) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "49b74250f30434df34df239c4e11bd1b5c666a0b"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_16",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A C).",
                        "VernacExtend",
                        "bac3ad054000c7377a20191ed2a60671ee862b33"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B C).",
                        "VernacExtend",
                        "2a4c174d5fcfb07079559ff9be73565058be28f2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f6de27d2290b224fed0d2ab5b24228893a410ec8"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (BetS A E C /\\ Cong E A E C)) by (conclude proposition_10);destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "ff7bbb208800a54b16e7d09021531ce48c750471"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B E).",
                        "VernacExtend",
                        "6ed1b09483a0cb88f77cb8717363a53289ae12bf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A B C) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "5869026fbe9591c129a81775f276dfdd706f5b1f"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq E B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "fdcff29c293eec992662c7fb2d6c669edf09d93d"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS B E F /\\ Cong E F E B)) by (conclude lemma_extension);destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "63d8b8f2ce8393b0819748546f03d038802e9e07"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A C).",
                        "VernacExtend",
                        "bac3ad054000c7377a20191ed2a60671ee862b33"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq C A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "3e0de460aa8733a502d4f01459ffc0ac21de17d3"
                    ]
                },
                {
                    "command": [
                        "assert (neq E C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "11bd8752fbbad03347b69b155e5f87977400b76e"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists G, (BetS A C G /\\ Cong C G E C)) by (conclude lemma_extension);destruct Tf as [G];spliter.",
                        "VernacExtend",
                        "518da1b34e7c223e7f3c96dc03644882f62118f5"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B E A).",
                        "VernacExtend",
                        "4677eded7395a72197463df35bfff745038ada6f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E C) by (conclude_def Col ).",
                        "VernacExtend",
                        "134baeef628e0b8217966e08d09682d254ae3f40"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4613a5ad2a9e067edf77e8a304d7f80b70209516"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "cf8a1b5b5f1e2cfc75e46bde4de52982bbf04a93"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9dc76a35f0423fea77251119a803e21c8f59a255"
                    ]
                },
                {
                    "command": [
                        "assert (neq E A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "5eef00ef1d0a882b209a09f629d7ffc97b7486d2"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "c7215293ea773f2ac1e4d0c1beeef08eedfcb697"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B E A C E F) by (conclude proposition_15a).",
                        "VernacExtend",
                        "35311424837174c1503859182778da5c514715eb"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A E B).",
                        "VernacExtend",
                        "02d6f2ceb494f931facf94068f2a7b648163547d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "002b0fa977c05d5a6beb6123cfa6b54a2dffd052"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A E B B E A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "43d6d814db719281d6b4c30fe1af09a5a874d0b8"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A E B C E F) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "e27d8ec78bf473dbc1625f723fcee672c7c098c1"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B E F E) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "035e29480265761672fdb3186424807e461b28ca"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E B E F) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "8273759ff2a9dd32be2db158de610bdde1dc9ddf"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col E A B).",
                        "VernacExtend",
                        "3e2d21a446bd2300ce83079aa95f2f87326a6bd2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "002b0fa977c05d5a6beb6123cfa6b54a2dffd052"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert ((Cong A B C F /\\ CongA E A B E C F /\\ CongA E B A E F C)) by (conclude proposition_04).",
                        "VernacExtend",
                        "c6a91feafc96affeb0f84d13536ea58aa7b8e95d"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B A E).",
                        "VernacExtend",
                        "b52874eac2a54aa5336e76d7b73f69262271e200"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4613a5ad2a9e067edf77e8a304d7f80b70209516"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out A C E) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "8e73fa9e09a023f66329376c8dae2c6d98215871"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "9649284df41a2d643c1d265e0d98150c3d8d6a08"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "assert (Out A B B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "22813113886dbbdce7acaed310fef3f6d11d8640"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B A C).",
                        "VernacExtend",
                        "119e756c043d3eda79fbabedada4b8a673b1637b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C B A C) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "7b25d56040d290a45516c58087301dd50c7fbd27"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C B A E) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "7045f53a1226debafa4ac6542a97a8f7f5295cda"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A E E A B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "14b52be83dd100914ac2ef322674c5898a33cd52"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C E A B) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "dd5fc686aa591190d426081d3ce3a46e0706462e"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C E C F) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "4099b2ab1d508d6771c28cb3db9596951e667f87"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C E A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "7c1c579146dad95e6d2d5a7c03cd6d6b25ba5645"
                    ]
                },
                {
                    "command": [
                        "assert (neq C E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8cb02cc27caec779e42911044c466350ef0446a"
                    ]
                },
                {
                    "command": [
                        "assert (Out C E A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "9d90c035628627adf7fee32bf82f558d1d8375f5"
                    ]
                },
                {
                    "command": [
                        "assert (eq F F) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col E C F).",
                        "VernacExtend",
                        "3e84f202322d6ad1bf6cef62efd382fe6dd1164f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E F) by (conclude_def Col ).",
                        "VernacExtend",
                        "44ccca138fe3af2774376656525c850d7fefc38b"
                    ]
                },
                {
                    "command": [
                        "assert (Col F E B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "0b6e6fd65cb8d2f01e42950732927ade81514f3c"
                    ]
                },
                {
                    "command": [
                        "assert (Col F E C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f286c5486fe873a2114070f449e30e1d201df9e0"
                    ]
                },
                {
                    "command": [
                        "assert (neq E F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "24d9090140e0d09ffb9bfc0a8bab177a6d8c8b7d"
                    ]
                },
                {
                    "command": [
                        "assert (neq F E) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "c0cd186aa29309ff7497bf8f03906985e3cd35a6"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "9a832f35ca3c4f868b36a5690795dc38059d20cf"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E C) by (conclude_def Col ).",
                        "VernacExtend",
                        "134baeef628e0b8217966e08d09682d254ae3f40"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "719226fedabf65a2db4f0cde2b96bf44cea1a9ed"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5f8f922854f481f296fb5d1b1962a85f3756b2d9"
                    ]
                },
                {
                    "command": [
                        "assert (neq E C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "11bd8752fbbad03347b69b155e5f87977400b76e"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "1c018dd0cbcaf3db9508936af6dbabcf55d57bac"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C F).",
                        "VernacExtend",
                        "6d21a329ea6c485ed210b4672775abc0fe9dec3a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C F) by (conclude_def Col ).",
                        "VernacExtend",
                        "7eeb1df87c5d7f47c6d7e254c709ec271ed20228"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out C F F) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "0fabf8216c0577977ac973d408618e0e992c1d40"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E C F E C F) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "8f22677231f02ca94229c7b6819ec0e50484ea65"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E C F A C F) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "5c00479251c0d41248fc63b9f467bc06cc2ec668"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C A C F) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "3af3ea7e117e1c1c1698a63f9afd7ad7cc13bf95"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D C B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "f8e83b3954564e194be4b1d9fbbe17468f2a408c"
                    ]
                },
                {
                    "command": [
                        "assert (BetS F E B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "0d4a85ecbf60f88e55c65f1953eb1cc6d19eaa8d"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col D B F).",
                        "VernacExtend",
                        "4eb8e9c2f845505e634f544bde50d0621d52f1d7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col F B D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "dbf746526715fedff8ca9bb48d38904e0d3114c5"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E F) by (conclude_def Col ).",
                        "VernacExtend",
                        "44ccca138fe3af2774376656525c850d7fefc38b"
                    ]
                },
                {
                    "command": [
                        "assert (Col F B E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "dcdaa12ff626c6232a8989ac62844b9189ef8e33"
                    ]
                },
                {
                    "command": [
                        "assert (neq B F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "3311f7e0915ee01870bcf1d0e47bbc82a3005605"
                    ]
                },
                {
                    "command": [
                        "assert (neq F B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d5ad8910f3aca3a125d701424f1ef4dd08caa6ea"
                    ]
                },
                {
                    "command": [
                        "assert (Col B D E) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "4d57458c57aa115d7de6192408f4b77a715d2ae1"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c3ccdd206bd7e3e8019392e3d6ad3848490404d7"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C D) by (conclude_def Col ).",
                        "VernacExtend",
                        "afd1e2d0a6ae54ac1da609fde4731349b531ba6f"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "9b514e0053ba8f3c49b63d2480a07be55876115a"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "86e0cc98e99562529ed50f5aacec1913cc2400a8"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "719226fedabf65a2db4f0cde2b96bf44cea1a9ed"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E C) by (conclude_def Col ).",
                        "VernacExtend",
                        "134baeef628e0b8217966e08d09682d254ae3f40"
                    ]
                },
                {
                    "command": [
                        "assert (Col E C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5f8f922854f481f296fb5d1b1962a85f3756b2d9"
                    ]
                },
                {
                    "command": [
                        "assert (neq E C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "11bd8752fbbad03347b69b155e5f87977400b76e"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "1c018dd0cbcaf3db9508936af6dbabcf55d57bac"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rename_H H; let Tf:=fresh in assert (Tf:exists H, (BetS D H E /\\ BetS F H C)) by (conclude postulate_Pasch_inner);destruct Tf as [H];spliter.",
                        "VernacExtend",
                        "6708f3863ae51474abae3ffe5ec3cb90d93eceb8"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C H F) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "c357011dde476bde537e2157b46b7d5514fa7126"
                    ]
                },
                {
                    "command": [
                        "assert (Out C F H) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "82a08d884f752a458df0d7ed865accb3e85619f2"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Out C A A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "c5aa51775ac2d6725d437ebc1841e67fe453c920"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C A C H) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "7afb77ea2177ac6a863e92591790cf4f45eca458"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C A C F) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "ccd3d8f578c9fcb81866c8c565b324085af6b2dc"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E H D) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "5cb25cb24ae0a604e748ccadba3491c3608cb4c3"
                    ]
                },
                {
                    "command": [
                        "assert (Out C A E) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "c30b7ffcad9aedd22a0cc7eb2a8731718a6e577f"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "dac741e71be8778833d3135c1db363ed1412abfc"
                    ]
                },
                {
                    "command": [
                        "assert (neq C D) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "c7e81de516241ce4e74c736518aa3cecf412e158"
                    ]
                },
                {
                    "command": [
                        "assert (Out C D D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "5edaa1cc05e74baaf8ca5eff45ab4cd858d1f9e7"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C A C H) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "18e485d72e304dd2ab6c9d0be8f993326ce389ec"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B A C A C D) by (conclude_def LtA ).",
                        "VernacExtend",
                        "dddd9bb89dadac0b5f941492cb2ba82867ef13bd"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists e, (BetS B e C /\\ Cong e B e C)) by (conclude proposition_10);destruct Tf as [e];spliter.",
                        "VernacExtend",
                        "dc7ae84318d087794c297be84367f17b06d1e32a"
                    ]
                },
                {
                    "command": [
                        "assert (Col B e C) by (conclude_def Col ).",
                        "VernacExtend",
                        "80e4544ece25b56724930f5aa47438d644dfa3ae"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A e).",
                        "VernacExtend",
                        "0a781b1961ba05532633456dc36151a9e504d54f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B A C) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "ec931d7a1e345eca1abf8b08e2e780b96868938f"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude_def Col ).",
                        "VernacExtend",
                        "0a9dade7a73d450a134b8130679df44020c3d111"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq e A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "e96256a1b3a8d34f25de2fd042c9185629703524"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists f, (BetS A e f /\\ Cong e f e A)) by (conclude lemma_extension);destruct Tf as [f];spliter.",
                        "VernacExtend",
                        "a98b3e67148a9cb3a54839a83d65dc1e9e670271"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B C).",
                        "VernacExtend",
                        "2a4c174d5fcfb07079559ff9be73565058be28f2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude_def Col ).",
                        "VernacExtend",
                        "0a9dade7a73d450a134b8130679df44020c3d111"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A e B).",
                        "VernacExtend",
                        "a05c45bfde3cbd131f3690cae656cebf3bb0aa6c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B e C) by (conclude_def Col ).",
                        "VernacExtend",
                        "80e4544ece25b56724930f5aa47438d644dfa3ae"
                    ]
                },
                {
                    "command": [
                        "assert (Col e B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e87e038fdff0ccdf3bff33c9052f4be01d13f883"
                    ]
                },
                {
                    "command": [
                        "assert (Col e B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "cbd5c037a6bddccebe74ca5ecab87178297fc6aa"
                    ]
                },
                {
                    "command": [
                        "assert (neq B e) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "1ab5a8224d2f9105d2759aeb1487ed59d736baa2"
                    ]
                },
                {
                    "command": [
                        "assert (neq e B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "7bd4ca6411cbeefdee596a6f8a3b5bafb8fae737"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A e B C e f) by (conclude proposition_15a).",
                        "VernacExtend",
                        "e3aa7d53498e73b09ba2e86201dac85de9265196"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B e A).",
                        "VernacExtend",
                        "afbb415197822b897cfa227f28b6de179c249a5b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A e B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9226d4e687c8b3b872df3727d9d7c307c4cd398c"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B e A A e B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "597b7b3b0a0130f732d5dd6977e3ed2940542109"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B e A C e f) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "0e96c2d745bec9495aa0c96c4c73a08bd2aa7082"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A e f e) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "ff9f1d562ef67dd20c0b0f9464e36ef8ea72f0bd"
                    ]
                },
                {
                    "command": [
                        "assert (Cong e A e f) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "b458a25ed73e3d7e64bb457801b5e38773afac6e"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col e B A).",
                        "VernacExtend",
                        "1638f1c9fc25f7f3a5b3fe20661bdab5c4afb3dc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A e B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9226d4e687c8b3b872df3727d9d7c307c4cd398c"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert ((Cong B A C f /\\ CongA e B A e C f /\\ CongA e A B e f C)) by (conclude proposition_04).",
                        "VernacExtend",
                        "41de8dc593c04e9e602f9f084a6a693f3a9ce2a1"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B e).",
                        "VernacExtend",
                        "e1c3d2bbc1d3a6018b41bdc4198cd87caccf651d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col e B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e87e038fdff0ccdf3bff33c9052f4be01d13f883"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C e) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "9bd5db28f2fa622115ef0a3f0ed91001f725541a"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "6c6ec3ac616495dbfa731f8b969ff3f1e02b3fce"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B C).",
                        "VernacExtend",
                        "a75f346a3102b55e5f88c48f3e148b73c2675143"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C A B C) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "aded022177916f7e4435a874df64d10bc8cdea41"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C A B e) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "59e39c706ccaf1caeeba01982f0d942591e01bfb"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B e e B A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "89594bfc37d5a20bfd44615560187e98904ba4fd"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C e B A) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "2614added06ba4478b1d9182bc8bb29e50f163b3"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C e C f) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "c1ce6f250c7db3567ff1ca6e5500863c1df388e2"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C e B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "7a94e5dd970f264905893358a82a31e8a0150d7b"
                    ]
                },
                {
                    "command": [
                        "assert (neq C e) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "2d7382a7e528d944d1685b5681bfe191a31e06c5"
                    ]
                },
                {
                    "command": [
                        "assert (Out C e B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "83a489131bd04181cc2c587cfc7eb0c60b7fc2c6"
                    ]
                },
                {
                    "command": [
                        "assert (eq f f) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "316499f73096f2874308cda27ae289c6f535a7a4"
                    ]
                },
                {
                    "command": [
                        "assert (nCol e C f) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "f85a7e90db4a1e1191e2a6a1e5cc0c7609c84010"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C f).",
                        "VernacExtend",
                        "38c04fe0a545b7430b4acb5cc65902976d2dd830"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col e C f) by (conclude_def Col ).",
                        "VernacExtend",
                        "9f38445b54b5442b263bc6ce4ee0a431441d3ea4"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out C f f) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "da98121dc2510ae6512ff08fce4025da252eeb35"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col e C f).",
                        "VernacExtend",
                        "7bd96d49844e67de47e87ad13ccf978c05bbb408"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A e f) by (conclude_def Col ).",
                        "VernacExtend",
                        "b10bffdea0be6809581ce3faf90b45723f0afa5f"
                    ]
                },
                {
                    "command": [
                        "assert (Col f e A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "82371c794694431b063f4b347ecf49b524415937"
                    ]
                },
                {
                    "command": [
                        "assert (Col f e C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f546dd91a9f552f5c971b153aa8250a24c3f6ae7"
                    ]
                },
                {
                    "command": [
                        "assert (neq e f) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d35623fd4c437ce86fc3d01c42abbbece6886bd0"
                    ]
                },
                {
                    "command": [
                        "assert (neq f e) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "cc2da5a3585622736c108a6fbaefed9d8c87970d"
                    ]
                },
                {
                    "command": [
                        "assert (Col e A C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f60790514d61a1e3ed9794d6f9f3d4f2a0b80876"
                    ]
                },
                {
                    "command": [
                        "assert (Col e C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5ebde766e36f579e5961629d5a9deee8bc848e3e"
                    ]
                },
                {
                    "command": [
                        "assert (Col e C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "88cc835c9017000dc703d7ab1b297710eb82a9b4"
                    ]
                },
                {
                    "command": [
                        "assert (neq e C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "e03eb508ce03c1a7ba174d425c7e64a411d4f912"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "31b8c23c71769cdc91e8b8f8a630a2ce0bfb6516"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA e C f e C f) by (conclude lemma_equalanglesreflexive).",
                        "VernacExtend",
                        "d1cf008bf23c44f2c9c83b2dd359df5340071e01"
                    ]
                },
                {
                    "command": [
                        "assert (CongA e C f B C f) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "7cc5deda2623f79c21b1bcea2f16a7de7d1f1e8f"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C B C f) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "439045c451c333466d22ef8664ed006ebd12bcaf"
                    ]
                },
                {
                    "command": [
                        "assert (BetS G C A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "579e6340def52d12b4c856483f64c9b625f4ae77"
                    ]
                },
                {
                    "command": [
                        "assert (neq G C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "63dd458d3b8a273f0a5fdd40789229c1f65e7e1a"
                    ]
                },
                {
                    "command": [
                        "assert (neq C G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "65eb5aeb5fb5f688314a130b770611d49f86d4e7"
                    ]
                },
                {
                    "command": [
                        "assert (BetS f e A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "c295254c14c1171c414d9bf8633c5fae9cd1acdf"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col G A f).",
                        "VernacExtend",
                        "1df644a0cde51b1f067804aafbcd8ccd81fb7bdb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col f A G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5cb89487c323045894050b6467c2a174ccfd6076"
                    ]
                },
                {
                    "command": [
                        "assert (Col A e f) by (conclude_def Col ).",
                        "VernacExtend",
                        "b10bffdea0be6809581ce3faf90b45723f0afa5f"
                    ]
                },
                {
                    "command": [
                        "assert (Col f A e) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "0928a0e41a725f683927c7fcff8c81a10ae0744e"
                    ]
                },
                {
                    "command": [
                        "assert (neq A f) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "6b725fef977859d1ddd29737338f5440b22541b6"
                    ]
                },
                {
                    "command": [
                        "assert (neq f A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "5f8efb51cc50db755c1d4e874ee6c818440b5271"
                    ]
                },
                {
                    "command": [
                        "assert (Col A G e) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "5b88b9a241243231b5389d3600441b9ffc712aba"
                    ]
                },
                {
                    "command": [
                        "assert (Col G A e) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "58cdd0f7028631260386db196550727dad40f4d1"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C G) by (conclude_def Col ).",
                        "VernacExtend",
                        "cb606688d5bd769d4f9895388a009bcb483aff53"
                    ]
                },
                {
                    "command": [
                        "assert (Col G A C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "683e918733125fdaa6ac8bb441872801e2e435fb"
                    ]
                },
                {
                    "command": [
                        "assert (neq A G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "01ce0c6f72655b04abd7b7bff327342bcc2d7010"
                    ]
                },
                {
                    "command": [
                        "assert (neq G A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "e2791ae9c412727db671b58f53b6b23174e66732"
                    ]
                },
                {
                    "command": [
                        "assert (Col A e C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "95f47ee41fe50e656ab87c2927637048926174c8"
                    ]
                },
                {
                    "command": [
                        "assert (Col e C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5ebde766e36f579e5961629d5a9deee8bc848e3e"
                    ]
                },
                {
                    "command": [
                        "assert (Col B e C) by (conclude_def Col ).",
                        "VernacExtend",
                        "80e4544ece25b56724930f5aa47438d644dfa3ae"
                    ]
                },
                {
                    "command": [
                        "assert (Col e C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "88cc835c9017000dc703d7ab1b297710eb82a9b4"
                    ]
                },
                {
                    "command": [
                        "assert (neq e C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "e03eb508ce03c1a7ba174d425c7e64a411d4f912"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists h, (BetS G h e /\\ BetS f h C)) by (conclude postulate_Pasch_inner);destruct Tf as [h];spliter.",
                        "VernacExtend",
                        "f76e6e0f090bb77355eaf2f9557073d13164b867"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C h f) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "998f00ab92c4cf76d0b0b93dbcf073aa6a555c5f"
                    ]
                },
                {
                    "command": [
                        "assert (neq h C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d34e304f5cdbb7d1c08b6f8a260aaa65ede2db5f"
                    ]
                },
                {
                    "command": [
                        "assert (neq C h) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "2d40aab1edcc1b801ad38fd0d1a03299fa980d2f"
                    ]
                },
                {
                    "command": [
                        "assert (Out C h f) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "5cf40b47776d0c2711ec7b25567be4da023f45a8"
                    ]
                },
                {
                    "command": [
                        "assert (Out C f h) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "8a1c9e39e54035f853b95a3757f267175382c5d1"
                    ]
                },
                {
                    "command": [
                        "assert (Out C B B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "637eb8335a2163c1d041df3535e69682ab03a1ad"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C B C h) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "237e332d761279bada756bf6ebdff18a14587549"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C B C f) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "a703461e2cdd8c985385b61f5443df90a44b296a"
                    ]
                },
                {
                    "command": [
                        "assert (BetS e h G) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "86ee0a5ffe44d790ed61871031eda93051849985"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C e B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "7a94e5dd970f264905893358a82a31e8a0150d7b"
                    ]
                },
                {
                    "command": [
                        "assert (Out C e B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "83a489131bd04181cc2c587cfc7eb0c60b7fc2c6"
                    ]
                },
                {
                    "command": [
                        "assert (Out C B e) by (conclude lemma_ray5).",
                        "VernacExtend",
                        "5a09a157d7159083ad02ba343195a4e88bb1a28b"
                    ]
                },
                {
                    "command": [
                        "assert (eq G G) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
                    ]
                },
                {
                    "command": [
                        "assert (Out C G G) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "260764251df307403dfa4a3155af6d73c3d10b8b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C B C h) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "f5d197ded4ca784a1fc35ca66f413c4fd4b844eb"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A B C B C G) by (conclude_def LtA ).",
                        "VernacExtend",
                        "4276a1c5c119c055062cc13d5d1dc48ae07e1017"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col G C B).",
                        "VernacExtend",
                        "b264d43639a555eb8b05193e0b5873be7f3056a1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C G) by (conclude_def Col ).",
                        "VernacExtend",
                        "cb606688d5bd769d4f9895388a009bcb483aff53"
                    ]
                },
                {
                    "command": [
                        "assert (Col G C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3b1b21b9c9ffa6d5aacf98e1b973145d5993d55b"
                    ]
                },
                {
                    "command": [
                        "assert (neq C G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "fdfa8129cc6959925f83269b6da8d85fc4b0b7b8"
                    ]
                },
                {
                    "command": [
                        "assert (neq G C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "10a4c94265d22f24f38d2e1b67568e7280eae345"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "1c018dd0cbcaf3db9508936af6dbabcf55d57bac"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G C B D C A) by (conclude proposition_15a).",
                        "VernacExtend",
                        "608e78b765c7f2e4dd397adc8eb384fe57ef55b2"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A C D).",
                        "VernacExtend",
                        "498132f6ca2265ee346b7a874729731ab8c58aaf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b4ed13d5f9f4239375e10dc6e0a6b6a68c2f6d96"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C D) by (conclude_def Col ).",
                        "VernacExtend",
                        "afd1e2d0a6ae54ac1da609fde4731349b531ba6f"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
                    ]
                },
                {
                    "command": [
                        "assert (neq C D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ec8ed20fd91c966709071dfab476d123976a3733"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f23eb05481a976a61c3e073657f8e5ca451231f4"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G C B B C G) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "fa8529c8ba1ac59eba417801cd1b6e6020542804"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A B C G C B) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "21fef0637658b08836e67b5b8e41a5642348e56a"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col D C A).",
                        "VernacExtend",
                        "6464db860a89fd99c0b48ce104f1508e409789ec"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "dc9cd9e1fbf7d2567adcbf0f4eb3309986f99c10"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D C A A C D) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "9ecdec3e9a8c61d9ce82b47d7dde6839ee51c1f8"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G C B A C D) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "8ab582340bcefddbba158503d608d5d50a23e130"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A C D G C B) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "0e4cad6c32b9208b4838fd531d51635f5bee6b34"
                    ]
                },
                {
                    "command": [
                        "assert (LtA A B C A C D) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "bf5640bb009b649d1e0d325114839122e8880485"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C B A).",
                        "VernacExtend",
                        "86233fe6d2145a6e93ed7346f858db350e0c062a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C B A A B C) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "944d8975dcf87abfbf9178008fcabb9fcd62f1f9"
                    ]
                },
                {
                    "command": [
                        "assert (LtA C B A A C D) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "49b74250f30434df34df239c4e11bd1b5c666a0b"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}