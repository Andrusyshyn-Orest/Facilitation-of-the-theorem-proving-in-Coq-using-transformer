{
    "filename": "Elements/OriginalProofs/lemma_collinearparallel.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_collinear4.",
            "VernacRequire",
            "31c94163fec0c65e806705b552c4ddb0c11450a8"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_collinearparallel : forall A B C c d, Par A B c d -> Col c d C -> neq C d -> Par A B C d.",
            "VernacStartTheoremProof",
            "152e87986610b231b58df5d6bf52147d48c0d34d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists R a b p q, (neq A B /\\ neq c d /\\ Col A B a /\\ Col A B b /\\ neq a b /\\ Col c d p /\\ Col c d q /\\ neq p q /\\ ~ Meet A B c d /\\ BetS a R q /\\ BetS p R b)) by (conclude_def Par );destruct Tf as [R[a[b[p[q]]]]];spliter.",
            "VernacExtend",
            "5c3e7ac0574923ea8c6e1c972d15212a91992352"
        ],
        [
            "assert (neq d C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c2555f4e7f257794e22f1ffad3cf4f3018b1ccb0"
        ],
        [
            "assert (Col d C p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "308c21d174c5713a57f849aedce82c40e4511b69"
        ],
        [
            "assert (Col C d p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3409dd88552054a46cdbce44ec30faee463b8c16"
        ],
        [
            "assert (Col d C q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "a76d00774653be7c4814e478f26681576e68e8b6"
        ],
        [
            "assert (Col C d q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c57b6209265ec905b8c401b8d514936bb1148602"
        ],
        [
            "assert (~ Meet A B C d).",
            "VernacExtend",
            "a5d6a7c50e73435f0d223893a4a47d87a5d02557"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (neq A B /\\ neq C d /\\ Col A B E /\\ Col C d E)) by (conclude_def Meet );destruct Tf as [E];spliter.",
            "VernacExtend",
            "338e0346a4add82f2e539a8ee566bf31dc26be9a"
        ],
        [
            "assert (Col C d c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "35df98aca8fa8eadac70e1e6c21cd656b812f2b5"
        ],
        [
            "assert (Col d E c) by (conclude lemma_collinear4).",
            "VernacExtend",
            "d681dd808b35e100b0cbf16e75c537f1d4d47ec3"
        ],
        [
            "assert (Col c d E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "19ece8cde4b5bdfc2e191a34f5ca9af2356f8bda"
        ],
        [
            "assert (Meet A B c d) by (conclude_def Meet ).",
            "VernacExtend",
            "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Par A B C d) by (conclude_def Par ).",
            "VernacExtend",
            "b4d7abd12b0a56ccee6fa64186dfe0ccca6efdeb"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_collinearparallel",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists R a b p q, (neq A B /\\ neq c d /\\ Col A B a /\\ Col A B b /\\ neq a b /\\ Col c d p /\\ Col c d q /\\ neq p q /\\ ~ Meet A B c d /\\ BetS a R q /\\ BetS p R b)) by (conclude_def Par );destruct Tf as [R[a[b[p[q]]]]];spliter.",
                        "VernacExtend",
                        "5c3e7ac0574923ea8c6e1c972d15212a91992352"
                    ]
                },
                {
                    "command": [
                        "assert (neq d C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "c2555f4e7f257794e22f1ffad3cf4f3018b1ccb0"
                    ]
                },
                {
                    "command": [
                        "assert (Col d C p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "308c21d174c5713a57f849aedce82c40e4511b69"
                    ]
                },
                {
                    "command": [
                        "assert (Col C d p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3409dd88552054a46cdbce44ec30faee463b8c16"
                    ]
                },
                {
                    "command": [
                        "assert (Col d C q) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "a76d00774653be7c4814e478f26681576e68e8b6"
                    ]
                },
                {
                    "command": [
                        "assert (Col C d q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c57b6209265ec905b8c401b8d514936bb1148602"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet A B C d).",
                        "VernacExtend",
                        "a5d6a7c50e73435f0d223893a4a47d87a5d02557"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (neq A B /\\ neq C d /\\ Col A B E /\\ Col C d E)) by (conclude_def Meet );destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "338e0346a4add82f2e539a8ee566bf31dc26be9a"
                    ]
                },
                {
                    "command": [
                        "assert (Col C d c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "35df98aca8fa8eadac70e1e6c21cd656b812f2b5"
                    ]
                },
                {
                    "command": [
                        "assert (Col d E c) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "d681dd808b35e100b0cbf16e75c537f1d4d47ec3"
                    ]
                },
                {
                    "command": [
                        "assert (Col c d E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "19ece8cde4b5bdfc2e191a34f5ca9af2356f8bda"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B c d) by (conclude_def Meet ).",
                        "VernacExtend",
                        "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B C d) by (conclude_def Par ).",
                        "VernacExtend",
                        "b4d7abd12b0a56ccee6fa64186dfe0ccca6efdeb"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}