{
    "filename": "Elements/OriginalProofs/lemma_trichotomy2.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthancongruence.",
            "VernacRequire",
            "00b9d54a90df13f5b7010ae28f399946381e76c8"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_3_6b.",
            "VernacRequire",
            "890560d978007679b9add74082b85d8cf2cfc109"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_partnotequalwhole.",
            "VernacRequire",
            "08fd94b354789a2f6a43c58789f0e47800269447"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_trichotomy2 : forall A B C D, Lt A B C D -> ~ Lt C D A B.",
            "VernacStartTheoremProof",
            "b67c3e7e1b6f10c7c11bac02fba6ebf513637fc1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (BetS C E D /\\ Cong C E A B)) by (conclude_def Lt );destruct Tf as [E];spliter.",
            "VernacExtend",
            "4bd5fefe1fa51d12b052278fec83b865da760b54"
        ],
        [
            "assert (Cong A B C E) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "96c89d5c9a880bcf551533fbc562f0bb4273ba80"
        ],
        [
            "assert (~ Lt C D A B).",
            "VernacExtend",
            "af0fa8c74207fc58685ce501149c72bc63e89f00"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Lt C D C E) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "b043c87e2e425facf63840b75bfc7cb728569c0c"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS C F E /\\ Cong C F C D)) by (conclude_def Lt );destruct Tf as [F];spliter.",
            "VernacExtend",
            "ec4944a21e9005e7e9ebbea9d271ab1523c9d00d"
        ],
        [
            "assert (BetS C F D) by (conclude lemma_3_6b).",
            "VernacExtend",
            "4d3652e27189389a6db54bf2c11b7646134e1e76"
        ],
        [
            "assert (~ Cong C F C D) by (conclude lemma_partnotequalwhole).",
            "VernacExtend",
            "3e1f37bbbdee165bdbe4623ed2c4fe9bb317503b"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_trichotomy2",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (BetS C E D /\\ Cong C E A B)) by (conclude_def Lt );destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "4bd5fefe1fa51d12b052278fec83b865da760b54"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B C E) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "96c89d5c9a880bcf551533fbc562f0bb4273ba80"
                    ]
                },
                {
                    "command": [
                        "assert (~ Lt C D A B).",
                        "VernacExtend",
                        "af0fa8c74207fc58685ce501149c72bc63e89f00"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Lt C D C E) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "b043c87e2e425facf63840b75bfc7cb728569c0c"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS C F E /\\ Cong C F C D)) by (conclude_def Lt );destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "ec4944a21e9005e7e9ebbea9d271ab1523c9d00d"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C F D) by (conclude lemma_3_6b).",
                        "VernacExtend",
                        "4d3652e27189389a6db54bf2c11b7646134e1e76"
                    ]
                },
                {
                    "command": [
                        "assert (~ Cong C F C D) by (conclude lemma_partnotequalwhole).",
                        "VernacExtend",
                        "3e1f37bbbdee165bdbe4623ed2c4fe9bb317503b"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}