{
    "filename": "Elements/OriginalProofs/lemma_TGflip.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_congruenceflip.",
            "VernacRequire",
            "f031442025fb7e58fef1a6f0e7748226615bbedb"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthancongruence.",
            "VernacRequire",
            "00b9d54a90df13f5b7010ae28f399946381e76c8"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthancongruence2.",
            "VernacRequire",
            "9ea7bc6d614a484da577fe8b249254ad11cf2676"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_TGflip : forall A B C a b c, TG A a B b C c -> TG a A B b C c /\\ TG A a B b c C.",
            "VernacStartTheoremProof",
            "121bf73f375167e0b091b1c3ee188653377454eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rename_H H;let Tf:=fresh in assert (Tf:exists H, (BetS A a H /\\ Cong a H B b /\\ Lt C c A H)) by (conclude_def TG );destruct Tf as [H];spliter.",
            "VernacExtend",
            "23cc9b5de60585228e6ba11db0281e8879c945de"
        ],
        [
            "assert (neq A a) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "48e4d4b38b32938796c5a51b35f81527da0b9281"
        ],
        [
            "assert (neq a A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "3e8ec1f54adfe5498a7d719adc74275ad024fa15"
        ],
        [
            "assert (neq a H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "1aee192704658956142712493503cd7839fc0708"
        ],
        [
            "assert (neq B b) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "38fb80f634ab5649b2c94550687dcfb7c5a4fb2d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists h, (BetS a A h /\\ Cong A h B b)) by (conclude lemma_extension);destruct Tf as [h];spliter.",
            "VernacExtend",
            "84e53ceaeae70cc71da81c734fba4fdc143d33bf"
        ],
        [
            "assert (Cong A a a A) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "fe4006d3f720658e3359b9bd032391d95358db64"
        ],
        [
            "assert (Cong B b A h) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "e26edddf80c1a5038f3c27bc0190fabe81f83e08"
        ],
        [
            "assert (Cong a H A h) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "d81ff73a17dc0946acc18fc9b975de344eaa102b"
        ],
        [
            "assert (Cong A H a h) by (conclude cn_sumofparts).",
            "VernacExtend",
            "8e23c5c0406d0f39f5466e78c336d94685a4a912"
        ],
        [
            "assert (Lt C c a h) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "c7302d9362a49bb71b29977dafb6cf14dba03f90"
        ],
        [
            "assert (TG a A B b C c) by (conclude_def TG ).",
            "VernacExtend",
            "fd206d12f51fa8fd377169cef8b59725271878cd"
        ],
        [
            "assert (Cong C c c C) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "a8c255f27ae9a500492dd81c948b89e739f85741"
        ],
        [
            "assert (Lt c C A H) by (conclude lemma_lessthancongruence2).",
            "VernacExtend",
            "f53d0b89e5142ed10ab7332487f88f0410ca7ecf"
        ],
        [
            "assert (TG A a B b c C) by (conclude_def TG ).",
            "VernacExtend",
            "df1553ca4af5852e98e0cabd93b6284cf6eec702"
        ],
        [
            "assert (Lt C c a h) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "c7302d9362a49bb71b29977dafb6cf14dba03f90"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_TGflip",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rename_H H;let Tf:=fresh in assert (Tf:exists H, (BetS A a H /\\ Cong a H B b /\\ Lt C c A H)) by (conclude_def TG );destruct Tf as [H];spliter.",
                        "VernacExtend",
                        "23cc9b5de60585228e6ba11db0281e8879c945de"
                    ]
                },
                {
                    "command": [
                        "assert (neq A a) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "48e4d4b38b32938796c5a51b35f81527da0b9281"
                    ]
                },
                {
                    "command": [
                        "assert (neq a A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "3e8ec1f54adfe5498a7d719adc74275ad024fa15"
                    ]
                },
                {
                    "command": [
                        "assert (neq a H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "1aee192704658956142712493503cd7839fc0708"
                    ]
                },
                {
                    "command": [
                        "assert (neq B b) by (conclude axiom_nocollapse).",
                        "VernacExtend",
                        "38fb80f634ab5649b2c94550687dcfb7c5a4fb2d"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists h, (BetS a A h /\\ Cong A h B b)) by (conclude lemma_extension);destruct Tf as [h];spliter.",
                        "VernacExtend",
                        "84e53ceaeae70cc71da81c734fba4fdc143d33bf"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A a a A) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "fe4006d3f720658e3359b9bd032391d95358db64"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B b A h) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "e26edddf80c1a5038f3c27bc0190fabe81f83e08"
                    ]
                },
                {
                    "command": [
                        "assert (Cong a H A h) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "d81ff73a17dc0946acc18fc9b975de344eaa102b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A H a h) by (conclude cn_sumofparts).",
                        "VernacExtend",
                        "8e23c5c0406d0f39f5466e78c336d94685a4a912"
                    ]
                },
                {
                    "command": [
                        "assert (Lt C c a h) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "c7302d9362a49bb71b29977dafb6cf14dba03f90"
                    ]
                },
                {
                    "command": [
                        "assert (TG a A B b C c) by (conclude_def TG ).",
                        "VernacExtend",
                        "fd206d12f51fa8fd377169cef8b59725271878cd"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C c c C) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "a8c255f27ae9a500492dd81c948b89e739f85741"
                    ]
                },
                {
                    "command": [
                        "assert (Lt c C A H) by (conclude lemma_lessthancongruence2).",
                        "VernacExtend",
                        "f53d0b89e5142ed10ab7332487f88f0410ca7ecf"
                    ]
                },
                {
                    "command": [
                        "assert (TG A a B b c C) by (conclude_def TG ).",
                        "VernacExtend",
                        "df1553ca4af5852e98e0cabd93b6284cf6eec702"
                    ]
                },
                {
                    "command": [
                        "assert (Lt C c a h) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "c7302d9362a49bb71b29977dafb6cf14dba03f90"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}