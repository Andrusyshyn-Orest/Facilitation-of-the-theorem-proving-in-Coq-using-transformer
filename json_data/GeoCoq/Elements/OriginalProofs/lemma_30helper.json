{
    "filename": "Elements/OriginalProofs/lemma_30helper.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_crisscross.",
            "VernacRequire",
            "e015773c27b8d355ad3201bf0e512370b0bd5148"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "8fa44f4771a9528e103d9f2054b77606cde8225f"
        ],
        [
            "Lemma lemma_30helper : forall A B E F G H, Par A B E F -> BetS A G B -> BetS E H F -> ~ CR A F G H -> CR A E G H.",
            "VernacStartTheoremProof",
            "f4c4ea4429ea82a2d2c3aefcd9b561764de46ee6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Col A G B) by (conclude_def Col ).",
            "VernacExtend",
            "2f55b58ec77a5a8623e4cd5ec3d180029dddb67a"
        ],
        [
            "assert (Col E H F) by (conclude_def Col ).",
            "VernacExtend",
            "beba031113c0af7a321b85b9d3795bb2731003c1"
        ],
        [
            "assert (Col B A G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "dfb63bcc139465b1f07969b6b87aa36803939eb6"
        ],
        [
            "assert (Col E F H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6f29a46a27166170de207ecc8d9e243c31c5a468"
        ],
        [
            "assert (neq H F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "303ad83ddd84e20e2559b08e00c9a03382d26396"
        ],
        [
            "assert (neq E H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f224b963b427a2716200c2752fccdccaf4ad7d4f"
        ],
        [
            "assert (neq H E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "37b87d1662cb842d5199ef2777ef4add1c0b5127"
        ],
        [
            "assert (neq F H) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "5babe52b6f67145aef91c127cf445c965f70b0e2"
        ],
        [
            "assert (neq A G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "01ce0c6f72655b04abd7b7bff327342bcc2d7010"
        ],
        [
            "assert (neq G A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "e2791ae9c412727db671b58f53b6b23174e66732"
        ],
        [
            "assert (Par A B F E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "a99d2f2bd48157dc6ebdec58dbe73e39e7a17df7"
        ],
        [
            "assert (Col F E H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "37b50006ae024356725348173f709b09ab460562"
        ],
        [
            "assert (Par A B H E) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "c288c5d6d7c4ee4cba4ca34ab036ea968df10b5f"
        ],
        [
            "assert (Par A B H F) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "0fbabefec7029964d8a4868f3242b36f82e82f23"
        ],
        [
            "assert (Par H F A B) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "b3ab0e4fe0e7a7d4ca0d6b41be91a3b61b06af39"
        ],
        [
            "assert (Par H F B A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "2076a83bba323b7bf87bf942b84b3296c68af9aa"
        ],
        [
            "assert (Par H F G A) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "3d10d6802e67090ff2361e3d665d052606d3210b"
        ],
        [
            "assert (Par H F A G) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "95a26802005dc21a66a922e1d2aeaa49a5d79f9d"
        ],
        [
            "assert (Par A G H F) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "3756b1a95ff86f859deab3f7ca978a94eb5ca540"
        ],
        [
            "assert (Par A G F H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "dc5cebff95fc9e3a54f022b414fe93a6a0e9dafb"
        ],
        [
            "assert (CR A H F G) by (conclude lemma_crisscross).",
            "VernacExtend",
            "ce4153915c7110149bb21803a746c913a72dba29"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS A M H /\\ BetS F M G)) by (conclude_def CR );destruct Tf as [M];spliter.",
            "VernacExtend",
            "bbcb2c1b97a6557d9fde04b3aaee4f60a3507e82"
        ],
        [
            "assert (neq A H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "2bbddeb343ed90ffab77cd5a294b68942effb117"
        ],
        [
            "assert (neq F G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "406bbf81af3729bacc3c2d352fa9011a5afe7e21"
        ],
        [
            "assert (BetS G M F) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "88308387f285a935b50757c31d76a23702e0d446"
        ],
        [
            "assert (nCol A E F) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "93c00afa80ec900c77f50bae24bb50705fa11d9a"
        ],
        [
            "assert (nCol F E A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "b7e5c2b7e283071c4b833ca89cd14c86925a7d49"
        ],
        [
            "assert (BetS F H E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "b753b468a7b344a5ffcd13a80441b220ef149378"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists p, (BetS A p E /\\ BetS F M p)) by (conclude postulate_Pasch_outer);destruct Tf as [p];spliter.",
            "VernacExtend",
            "c4e3bbe2b53f89079ebf4cc8ae04b10703f55e3a"
        ],
        [
            "assert (nCol A G H) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "2b2cefe78e610099392814eb60b646848a538920"
        ],
        [
            "assert (nCol A H G) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "37118015306682ca845c3bc60043d2d5466eae9a"
        ],
        [
            "assert (Col F M G) by (conclude_def Col ).",
            "VernacExtend",
            "d6784ce1e77ee59a868d38cc6a0c06ffa057cf4f"
        ],
        [
            "assert (Col F M p) by (conclude_def Col ).",
            "VernacExtend",
            "a2e2cfb5ce1af5263b5688e12bdf0dce648fb91b"
        ],
        [
            "assert (neq F M) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "fb8ff667c1306f35416fd97d1c0c4299b707d732"
        ],
        [
            "assert (Col M G p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "1ae77264b3309742041de544f29349bb593e43d2"
        ],
        [
            "assert (Col M p G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "38ef2678f061abf577d5bf05128b8d4366ea3b60"
        ],
        [
            "assert (Col M p F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "447ff49c28b86df4f7e26a07fe6bdc80829b3132"
        ],
        [
            "assert (neq M p) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "5b77b73652766bdbcf9fe296669eecf726b48f71"
        ],
        [
            "assert (Col p G F) by (conclude lemma_collinear4).",
            "VernacExtend",
            "32457d9cc89498935f956fcae9e9552dc0ce9a6d"
        ],
        [
            "assert (Col G F p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0fa9c0bd7f56251e90792e9d6833fd025a8ac226"
        ],
        [
            "assert (Col H F E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b74477a364eb8697343b655852b72ac7a8ae2725"
        ],
        [
            "assert (neq A B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "729d99d00883cb65929e87e6a48ea0634ac9dc68"
        ],
        [
            "assert (neq A G) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "01ce0c6f72655b04abd7b7bff327342bcc2d7010"
        ],
        [
            "assert (neq E F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "24d9090140e0d09ffb9bfc0a8bab177a6d8c8b7d"
        ],
        [
            "assert (neq F E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c0cd186aa29309ff7497bf8f03906985e3cd35a6"
        ],
        [
            "assert (~ Meet A B H E) by (conclude_def Par ).",
            "VernacExtend",
            "dbdf11535b71466e4446609fe412402c52c49da4"
        ],
        [
            "assert (BetS G p F) by (conclude lemma_collinearbetween).",
            "VernacExtend",
            "53ba4cef2fe1c5fb12bbc52dea9163e7da5f1855"
        ],
        [
            "assert (BetS F p G) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "9e129e194982bd91312a9eace1f87dd092d76261"
        ],
        [
            "assert (BetS M p G) by (conclude lemma_3_6a).",
            "VernacExtend",
            "5d7c556e086de20f99deb6f6b30a3fcad17df7c7"
        ],
        [
            "assert (BetS G p M) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "d8c533f048b58c3174d5de8caf2c82d3ace37317"
        ],
        [
            "assert (nCol A G H) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "2b2cefe78e610099392814eb60b646848a538920"
        ],
        [
            "assert (nCol A H G) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "37118015306682ca845c3bc60043d2d5466eae9a"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists m, (BetS G m H /\\ BetS A p m)) by (conclude postulate_Pasch_outer);destruct Tf as [m];spliter.",
            "VernacExtend",
            "a3db1c3825866edce370348654abbd7484e3eb92"
        ],
        [
            "assert (Col A p m) by (conclude_def Col ).",
            "VernacExtend",
            "12108462fffa611c617e060d4b262718fa72529b"
        ],
        [
            "assert (Col A p E) by (conclude_def Col ).",
            "VernacExtend",
            "1ca5bf317906ea57d9107d9a0617d4a3a406103e"
        ],
        [
            "assert (neq A p) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a0a242d0f9403223eabdd22f2f1a63103462ad48"
        ],
        [
            "assert (Col p m E) by (conclude lemma_collinear4).",
            "VernacExtend",
            "bb1a9e5dc450563cd93954e0e68a6a7a96a55226"
        ],
        [
            "assert (Col p m A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fc0ce7f3d59ef00bbf4963f52ac8e870a07af7dd"
        ],
        [
            "assert (neq p m) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "14e9a5463620be75cec1551458ff390b67c77ae3"
        ],
        [
            "assert (Col m E A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "9e9e62e3086076395e4ce152ee40276bd0c94354"
        ],
        [
            "assert (Col A E m) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "be0ccabd31862cf1a0a1b4491b0ae0c1c224cee6"
        ],
        [
            "assert (neq A E) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "12ec29d6d64784c40ee268c36fdd097858f06837"
        ],
        [
            "assert (neq G H) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "dfb05d072b8616f917aef353a7a7e4efaf89340e"
        ],
        [
            "assert (neq G B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ee5726e97085ead52f4cb2cb3b05e8d6d67c499b"
        ],
        [
            "assert (neq B G) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "7e9aefc5ade8aeb56f89e17834b919a157b8aec0"
        ],
        [
            "assert (Par H F B G) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "d0c9a3dab35e2e726a22c3e456469996847f6e5d"
        ],
        [
            "assert (Par B G H F) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "095e27940091ce59e40baa338d6eb4477e8b8dcd"
        ],
        [
            "assert (Par G B F H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "aef60476a60b4afefd88a5409f018fbc2a1d0f6a"
        ],
        [
            "assert (~ Meet G B F H) by (conclude_def Par ).",
            "VernacExtend",
            "175b0940de10ac352d50d597a57a7060b4f70d82"
        ],
        [
            "assert (Col G A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7faaa20e85da645b8560f5681321c46156e4943c"
        ],
        [
            "assert (BetS A m E) by (conclude lemma_collinearbetween).",
            "VernacExtend",
            "b29883890f01b93591b8c699ffa74b111d78c37e"
        ],
        [
            "assert (CR A E G H) by (conclude_def CR ).",
            "VernacExtend",
            "204d776f78c4fbd438b77372477492368e6c280b"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_30helper",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A G B) by (conclude_def Col ).",
                        "VernacExtend",
                        "2f55b58ec77a5a8623e4cd5ec3d180029dddb67a"
                    ]
                },
                {
                    "command": [
                        "assert (Col E H F) by (conclude_def Col ).",
                        "VernacExtend",
                        "beba031113c0af7a321b85b9d3795bb2731003c1"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "dfb63bcc139465b1f07969b6b87aa36803939eb6"
                    ]
                },
                {
                    "command": [
                        "assert (Col E F H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6f29a46a27166170de207ecc8d9e243c31c5a468"
                    ]
                },
                {
                    "command": [
                        "assert (neq H F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "303ad83ddd84e20e2559b08e00c9a03382d26396"
                    ]
                },
                {
                    "command": [
                        "assert (neq E H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f224b963b427a2716200c2752fccdccaf4ad7d4f"
                    ]
                },
                {
                    "command": [
                        "assert (neq H E) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "37b87d1662cb842d5199ef2777ef4add1c0b5127"
                    ]
                },
                {
                    "command": [
                        "assert (neq F H) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "5babe52b6f67145aef91c127cf445c965f70b0e2"
                    ]
                },
                {
                    "command": [
                        "assert (neq A G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "01ce0c6f72655b04abd7b7bff327342bcc2d7010"
                    ]
                },
                {
                    "command": [
                        "assert (neq G A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "e2791ae9c412727db671b58f53b6b23174e66732"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B F E) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "a99d2f2bd48157dc6ebdec58dbe73e39e7a17df7"
                    ]
                },
                {
                    "command": [
                        "assert (Col F E H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "37b50006ae024356725348173f709b09ab460562"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B H E) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "c288c5d6d7c4ee4cba4ca34ab036ea968df10b5f"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B H F) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "0fbabefec7029964d8a4868f3242b36f82e82f23"
                    ]
                },
                {
                    "command": [
                        "assert (Par H F A B) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "b3ab0e4fe0e7a7d4ca0d6b41be91a3b61b06af39"
                    ]
                },
                {
                    "command": [
                        "assert (Par H F B A) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "2076a83bba323b7bf87bf942b84b3296c68af9aa"
                    ]
                },
                {
                    "command": [
                        "assert (Par H F G A) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "3d10d6802e67090ff2361e3d665d052606d3210b"
                    ]
                },
                {
                    "command": [
                        "assert (Par H F A G) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "95a26802005dc21a66a922e1d2aeaa49a5d79f9d"
                    ]
                },
                {
                    "command": [
                        "assert (Par A G H F) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "3756b1a95ff86f859deab3f7ca978a94eb5ca540"
                    ]
                },
                {
                    "command": [
                        "assert (Par A G F H) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "dc5cebff95fc9e3a54f022b414fe93a6a0e9dafb"
                    ]
                },
                {
                    "command": [
                        "assert (CR A H F G) by (conclude lemma_crisscross).",
                        "VernacExtend",
                        "ce4153915c7110149bb21803a746c913a72dba29"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS A M H /\\ BetS F M G)) by (conclude_def CR );destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "bbcb2c1b97a6557d9fde04b3aaee4f60a3507e82"
                    ]
                },
                {
                    "command": [
                        "assert (neq A H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "2bbddeb343ed90ffab77cd5a294b68942effb117"
                    ]
                },
                {
                    "command": [
                        "assert (neq F G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "406bbf81af3729bacc3c2d352fa9011a5afe7e21"
                    ]
                },
                {
                    "command": [
                        "assert (BetS G M F) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "88308387f285a935b50757c31d76a23702e0d446"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A E F) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "93c00afa80ec900c77f50bae24bb50705fa11d9a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F E A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "b7e5c2b7e283071c4b833ca89cd14c86925a7d49"
                    ]
                },
                {
                    "command": [
                        "assert (BetS F H E) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "b753b468a7b344a5ffcd13a80441b220ef149378"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists p, (BetS A p E /\\ BetS F M p)) by (conclude postulate_Pasch_outer);destruct Tf as [p];spliter.",
                        "VernacExtend",
                        "c4e3bbe2b53f89079ebf4cc8ae04b10703f55e3a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A G H) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "2b2cefe78e610099392814eb60b646848a538920"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A H G) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "37118015306682ca845c3bc60043d2d5466eae9a"
                    ]
                },
                {
                    "command": [
                        "assert (Col F M G) by (conclude_def Col ).",
                        "VernacExtend",
                        "d6784ce1e77ee59a868d38cc6a0c06ffa057cf4f"
                    ]
                },
                {
                    "command": [
                        "assert (Col F M p) by (conclude_def Col ).",
                        "VernacExtend",
                        "a2e2cfb5ce1af5263b5688e12bdf0dce648fb91b"
                    ]
                },
                {
                    "command": [
                        "assert (neq F M) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "fb8ff667c1306f35416fd97d1c0c4299b707d732"
                    ]
                },
                {
                    "command": [
                        "assert (Col M G p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "1ae77264b3309742041de544f29349bb593e43d2"
                    ]
                },
                {
                    "command": [
                        "assert (Col M p G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "38ef2678f061abf577d5bf05128b8d4366ea3b60"
                    ]
                },
                {
                    "command": [
                        "assert (Col M p F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "447ff49c28b86df4f7e26a07fe6bdc80829b3132"
                    ]
                },
                {
                    "command": [
                        "assert (neq M p) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "5b77b73652766bdbcf9fe296669eecf726b48f71"
                    ]
                },
                {
                    "command": [
                        "assert (Col p G F) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "32457d9cc89498935f956fcae9e9552dc0ce9a6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col G F p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "0fa9c0bd7f56251e90792e9d6833fd025a8ac226"
                    ]
                },
                {
                    "command": [
                        "assert (Col H F E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b74477a364eb8697343b655852b72ac7a8ae2725"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "729d99d00883cb65929e87e6a48ea0634ac9dc68"
                    ]
                },
                {
                    "command": [
                        "assert (neq A G) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "01ce0c6f72655b04abd7b7bff327342bcc2d7010"
                    ]
                },
                {
                    "command": [
                        "assert (neq E F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "24d9090140e0d09ffb9bfc0a8bab177a6d8c8b7d"
                    ]
                },
                {
                    "command": [
                        "assert (neq F E) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "c0cd186aa29309ff7497bf8f03906985e3cd35a6"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet A B H E) by (conclude_def Par ).",
                        "VernacExtend",
                        "dbdf11535b71466e4446609fe412402c52c49da4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS G p F) by (conclude lemma_collinearbetween).",
                        "VernacExtend",
                        "53ba4cef2fe1c5fb12bbc52dea9163e7da5f1855"
                    ]
                },
                {
                    "command": [
                        "assert (BetS F p G) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "9e129e194982bd91312a9eace1f87dd092d76261"
                    ]
                },
                {
                    "command": [
                        "assert (BetS M p G) by (conclude lemma_3_6a).",
                        "VernacExtend",
                        "5d7c556e086de20f99deb6f6b30a3fcad17df7c7"
                    ]
                },
                {
                    "command": [
                        "assert (BetS G p M) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "d8c533f048b58c3174d5de8caf2c82d3ace37317"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A G H) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "2b2cefe78e610099392814eb60b646848a538920"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A H G) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "37118015306682ca845c3bc60043d2d5466eae9a"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists m, (BetS G m H /\\ BetS A p m)) by (conclude postulate_Pasch_outer);destruct Tf as [m];spliter.",
                        "VernacExtend",
                        "a3db1c3825866edce370348654abbd7484e3eb92"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p m) by (conclude_def Col ).",
                        "VernacExtend",
                        "12108462fffa611c617e060d4b262718fa72529b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p E) by (conclude_def Col ).",
                        "VernacExtend",
                        "1ca5bf317906ea57d9107d9a0617d4a3a406103e"
                    ]
                },
                {
                    "command": [
                        "assert (neq A p) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a0a242d0f9403223eabdd22f2f1a63103462ad48"
                    ]
                },
                {
                    "command": [
                        "assert (Col p m E) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "bb1a9e5dc450563cd93954e0e68a6a7a96a55226"
                    ]
                },
                {
                    "command": [
                        "assert (Col p m A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fc0ce7f3d59ef00bbf4963f52ac8e870a07af7dd"
                    ]
                },
                {
                    "command": [
                        "assert (neq p m) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "14e9a5463620be75cec1551458ff390b67c77ae3"
                    ]
                },
                {
                    "command": [
                        "assert (Col m E A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "9e9e62e3086076395e4ce152ee40276bd0c94354"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E m) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "be0ccabd31862cf1a0a1b4491b0ae0c1c224cee6"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "12ec29d6d64784c40ee268c36fdd097858f06837"
                    ]
                },
                {
                    "command": [
                        "assert (neq G H) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "dfb05d072b8616f917aef353a7a7e4efaf89340e"
                    ]
                },
                {
                    "command": [
                        "assert (neq G B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ee5726e97085ead52f4cb2cb3b05e8d6d67c499b"
                    ]
                },
                {
                    "command": [
                        "assert (neq B G) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "7e9aefc5ade8aeb56f89e17834b919a157b8aec0"
                    ]
                },
                {
                    "command": [
                        "assert (Par H F B G) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "d0c9a3dab35e2e726a22c3e456469996847f6e5d"
                    ]
                },
                {
                    "command": [
                        "assert (Par B G H F) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "095e27940091ce59e40baa338d6eb4477e8b8dcd"
                    ]
                },
                {
                    "command": [
                        "assert (Par G B F H) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "aef60476a60b4afefd88a5409f018fbc2a1d0f6a"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet G B F H) by (conclude_def Par ).",
                        "VernacExtend",
                        "175b0940de10ac352d50d597a57a7060b4f70d82"
                    ]
                },
                {
                    "command": [
                        "assert (Col G A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7faaa20e85da645b8560f5681321c46156e4943c"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A m E) by (conclude lemma_collinearbetween).",
                        "VernacExtend",
                        "b29883890f01b93591b8c699ffa74b111d78c37e"
                    ]
                },
                {
                    "command": [
                        "assert (CR A E G H) by (conclude_def CR ).",
                        "VernacExtend",
                        "204d776f78c4fbd438b77372477492368e6c280b"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}