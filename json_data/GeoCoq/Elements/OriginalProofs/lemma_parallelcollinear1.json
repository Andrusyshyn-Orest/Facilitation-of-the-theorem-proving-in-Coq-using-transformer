{
    "filename": "Elements/OriginalProofs/lemma_parallelcollinear1.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_collinearbetween.",
            "VernacRequire",
            "4ee622cbe81f17aa95880cb220d7a8abe1669aad"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NChelper.",
            "VernacRequire",
            "27d71a9bed299ed932460cd47291d5181182bf2b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCorder.",
            "VernacRequire",
            "45862997789ccb0c1d124a0a45383611fa0cc836"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_parallelcollinear1 : forall A B C c d, TP A B c d -> BetS C c d -> TP A B C d.",
            "VernacStartTheoremProof",
            "e9854eb63b5710c8e12c847bc891383e5d7f6b84"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Col C c d) by (conclude_def Col ).",
            "VernacExtend",
            "7fac7c7d768a44dfe0badd2825c05784b1ad568a"
        ],
        [
            "assert (neq C c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "7ca47e72d73d89cb6a9f9174bac8031716f43ed5"
        ],
        [
            "assert (neq c d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "c03df0c73b598a003a93c0ca29e18e71deafb899"
        ],
        [
            "assert (neq C d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b926c6cf68213af3f8458567b27455600b6abdb1"
        ],
        [
            "assert ((neq A B /\\ neq c d /\\ ~ Meet A B c d /\\ OS c d A B)) by (conclude_def TP ).",
            "VernacExtend",
            "0492d6768f14b34202195afd5b64f777d5ebbb64"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists p q r, (Col A B p /\\ Col A B r /\\ BetS c p q /\\ BetS d r q /\\ nCol A B c /\\ nCol A B d)) by (conclude_def OS );destruct Tf as [p[q[r]]];spliter.",
            "VernacExtend",
            "7c7803a7f893f034ae38d998673cd60ba73995d4"
        ],
        [
            "assert (BetS q r d) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ff6bc95d481ac4a13d9d541bd2288cd3c009fab1"
        ],
        [
            "assert (Col C c d) by (conclude_def Col ).",
            "VernacExtend",
            "7fac7c7d768a44dfe0badd2825c05784b1ad568a"
        ],
        [
            "assert (Col c d C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "542c64965b59f72edade4598f0161104c072e0fa"
        ],
        [
            "assert (BetS d c C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "bbb1914eb031cf217502038630975917a404ab3b"
        ],
        [
            "assert (BetS q p c) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "f07abdd005d5cbabc47562b3e53b2053bce82101"
        ],
        [
            "assert (~ eq p r).",
            "VernacExtend",
            "a0e1b36c266c57d39031f93882eb291ef24797c6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col q r d) by (conclude_def Col ).",
            "VernacExtend",
            "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
        ],
        [
            "assert (Col q p c) by (conclude_def Col ).",
            "VernacExtend",
            "3bde970f7221d436d5ecb419ff311d707944e042"
        ],
        [
            "assert (Col q p d) by (conclude cn_equalitysub).",
            "VernacExtend",
            "c6498eadf428d7f14ff0da4831c208c448ad36ea"
        ],
        [
            "assert (neq q p) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "3766e5baa3b3b0cc00bae5396ad292b312492a7b"
        ],
        [
            "assert (Col p c d) by (conclude lemma_collinear4).",
            "VernacExtend",
            "66de00398bc4eabf91140043310b86950c3aa674"
        ],
        [
            "assert (Col c d p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "907058938a2dd3f67c65b1862c211c87c03426bc"
        ],
        [
            "assert (Meet A B c d) by (conclude_def Meet ).",
            "VernacExtend",
            "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Col q p c) by (conclude_def Col ).",
            "VernacExtend",
            "3bde970f7221d436d5ecb419ff311d707944e042"
        ],
        [
            "assert (~ Col q d C).",
            "VernacExtend",
            "db92c65a864c00901c87c3322ade4e26bf5e8a73"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col d c C) by (conclude_def Col ).",
            "VernacExtend",
            "4239efd9c91c9631dc34724bc07a782e7a8a30f5"
        ],
        [
            "assert (Col C d c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "35df98aca8fa8eadac70e1e6c21cd656b812f2b5"
        ],
        [
            "assert (Col C d q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c57b6209265ec905b8c401b8d514936bb1148602"
        ],
        [
            "assert (neq C d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b926c6cf68213af3f8458567b27455600b6abdb1"
        ],
        [
            "assert (Col d c q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "1b2ac3aa68b8790a9b9d1f0606646798c0c0ffb7"
        ],
        [
            "assert (Col c q d) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c7916ef45436e57aed2602e3487be5dfdf2af3cb"
        ],
        [
            "assert (Col c q p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "10f1470b6a4611ef7710c36ff62fbda5fbb681d4"
        ],
        [
            "assert (neq q c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "640afd3dd342c6d32f6c4a6538b174fb962ef0cb"
        ],
        [
            "assert (neq c q) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "fe2599902065534f47cfc3d7e833ddbe4b49029f"
        ],
        [
            "assert (Col q d p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "c5214a2f147c3f050c7f652ad5126a4f4e36c122"
        ],
        [
            "assert (Col q r d) by (conclude_def Col ).",
            "VernacExtend",
            "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
        ],
        [
            "assert (Col q d r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7dd8d29f03e245476b74a3738454f2591cb7bc98"
        ],
        [
            "assert (neq q d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "1e556c7d3e40ca39460f4ac2ec127b262830ac7a"
        ],
        [
            "assert (Col d p r) by (conclude lemma_collinear4).",
            "VernacExtend",
            "c2f1020f21b521bccfe5e5b95fb7b8b0eac90c09"
        ],
        [
            "assert (Col B p r) by (conclude lemma_collinear4).",
            "VernacExtend",
            "2317afeb8ce0788933fe6752ee0a487a5b23d6ca"
        ],
        [
            "assert (Col B A p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
        ],
        [
            "assert (Col B p A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1257ea3b6da0733cfa2285a87f7cb86a45bff134"
        ],
        [
            "assert (Col B A r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "assert (Col A p r) by (conclude lemma_collinear4).",
            "VernacExtend",
            "fbf40790f16e11e957ce020528dcb12d03c78acd"
        ],
        [
            "assert (~ neq B p).",
            "VernacExtend",
            "9556222f933cb2c2aa263c90f9e8d8890d33381b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col p r A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "3212a33b100b6e23f5089aa38a490146e404573c"
        ],
        [
            "assert (Col p r d) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e4988a0ba13342baf6afc342c363cbcddc6d7319"
        ],
        [
            "assert (Col r A d) by (conclude lemma_collinear4).",
            "VernacExtend",
            "fe9149ed1c1a10dfd6c11a1a5cff03b075555fb0"
        ],
        [
            "assert (Col r A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3135bd6ca1afe3f57301a6fcd5f17e7df6dfc4fb"
        ],
        [
            "assert (~ neq r A).",
            "VernacExtend",
            "da6f228151ae618b00e7e194cb03dbb7a3dd6dab"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A d B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "12cc1cc534c2ac84fbb867d186566914666e89e8"
        ],
        [
            "assert (Col A B d) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "60f215f665fa57aa8d2ece513319531fef7673b4"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Col p A d) by (conclude cn_equalitysub).",
            "VernacExtend",
            "ce1ac4226dbe21ccf4837a077cecfc2e68a48c2b"
        ],
        [
            "assert (Col p A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7a3400b6548049da7238a5976c563812bf6ba697"
        ],
        [
            "assert (~ neq p A).",
            "VernacExtend",
            "c38925119879233c666316f67601b03c9cf73ee1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A d B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "12cc1cc534c2ac84fbb867d186566914666e89e8"
        ],
        [
            "assert (Col A B d) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "60f215f665fa57aa8d2ece513319531fef7673b4"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (eq A p) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "38ce2a3df07c4707c0f0cb33aa63d0f3eb94edf6"
        ],
        [
            "assert (eq r p) by (conclude cn_equalitytransitive).",
            "VernacExtend",
            "eb8f005437f8543301d14a14013415ae95d27176"
        ],
        [
            "assert (Col q p d) by (conclude cn_equalitysub).",
            "VernacExtend",
            "c6498eadf428d7f14ff0da4831c208c448ad36ea"
        ],
        [
            "assert (neq q p) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "3766e5baa3b3b0cc00bae5396ad292b312492a7b"
        ],
        [
            "assert (Col p c d) by (conclude lemma_collinear4).",
            "VernacExtend",
            "66de00398bc4eabf91140043310b86950c3aa674"
        ],
        [
            "assert (Col c d p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "907058938a2dd3f67c65b1862c211c87c03426bc"
        ],
        [
            "assert (Meet A B c d) by (conclude_def Meet ).",
            "VernacExtend",
            "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq A p) by (conclude cn_equalitysub).",
            "VernacExtend",
            "255d37201322361c547bb335e6796c6ec4877a91"
        ],
        [
            "assert (Col A p B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "13213e44480653f018f1aeedf8a88eff7a3dfa69"
        ],
        [
            "assert (~ eq r A).",
            "VernacExtend",
            "f3dff0a265ff4c49f5795e0f7df72e633c308b33"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col d p A) by (conclude cn_equalitysub).",
            "VernacExtend",
            "f41a51e4f6bbcfc1553350eb8850f171e3a003ee"
        ],
        [
            "assert (Col d B A) by (conclude cn_equalitysub).",
            "VernacExtend",
            "f37aea6372259dff1a201cc476dbe3fcb63917dd"
        ],
        [
            "assert (Col A B d) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "60f215f665fa57aa8d2ece513319531fef7673b4"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Col r A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3135bd6ca1afe3f57301a6fcd5f17e7df6dfc4fb"
        ],
        [
            "assert (Col d B r) by (conclude cn_equalitysub).",
            "VernacExtend",
            "0bbd3cfcd4e5f6748394cd02f515e5be926a9fda"
        ],
        [
            "assert (Col r B d) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "71664954f9bd04f78e5853a76ef6b531d448aa0b"
        ],
        [
            "assert (Col r B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4810706595bd044d41057538711a4f0c09a63c68"
        ],
        [
            "assert (~ neq r B).",
            "VernacExtend",
            "08d2a6ed38032a69b2e27af8dfab1cc750397ac3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B d A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "93c98543018306aa66e1f98b494dc10bac3c5a6b"
        ],
        [
            "assert (Col A B d) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "60f215f665fa57aa8d2ece513319531fef7673b4"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (eq B r) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "8583deff22f6eb8499be8850e31b60b94b92652e"
        ],
        [
            "assert (eq p B) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "a7803f76032b4d3e38fae10c6860f8f4d0563dff"
        ],
        [
            "assert (eq p r) by (conclude cn_equalitytransitive).",
            "VernacExtend",
            "26d7c8b8beb5e3145a04e4f92b9e86a17c2dde59"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (BetS q E c /\\ BetS C E r)) by (conclude postulate_Pasch_inner);destruct Tf as [E];spliter.",
            "VernacExtend",
            "0373a1916460b4d5350b91ed637611cb3a1bb0d6"
        ],
        [
            "assert (BetS r E C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "607cf0283c1048050f34a1fe09e11153ec65584b"
        ],
        [
            "assert (Col q E c) by (conclude_def Col ).",
            "VernacExtend",
            "fb4480c86da46a72236f28fdd3af31dc3d7d92a4"
        ],
        [
            "assert (Col q c p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "16fd1f0120108444bb3d062849d4662a09444147"
        ],
        [
            "assert (Col q c E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "649684042f6278330af40868754169aae0c4c51c"
        ],
        [
            "assert (neq q c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "640afd3dd342c6d32f6c4a6538b174fb962ef0cb"
        ],
        [
            "assert (Col c p E) by (conclude lemma_collinear4).",
            "VernacExtend",
            "ad4aa6e46a5f9d118bad9e91653172ff70401b72"
        ],
        [
            "assert (Col c E p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9689d5a58d0b2e28c1dd6bd430dc40b343b14998"
        ],
        [
            "assert (neq r p) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "bac304f644b192e5abd448653f206581bf521c66"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists J, (BetS r p J /\\ Cong p J r p)) by (conclude lemma_extension);destruct Tf as [J];spliter.",
            "VernacExtend",
            "68b6dce31b6bfb46be1903085f2595a48fda11b3"
        ],
        [
            "assert (BetS J p r) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "c40eaf61a6e3ddcbafd99247a98bf2012bb93a3f"
        ],
        [
            "assert (Col J p r) by (conclude_def Col ).",
            "VernacExtend",
            "3041f33c35b670a09a32e50d5130b8074b91c9f9"
        ],
        [
            "assert (neq J r) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "68e9841bce0d7bf3f2d2bce20cc1f4ec937a436d"
        ],
        [
            "assert (neq p r) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "365b8ae45fd2f68aaab516297870581de1e3e8f1"
        ],
        [
            "assert (neq J p) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b8974df78ecc807630f9eb01c4b7817cedad631b"
        ],
        [
            "assert (Col B p r) by (conclude lemma_collinear4).",
            "VernacExtend",
            "2317afeb8ce0788933fe6752ee0a487a5b23d6ca"
        ],
        [
            "assert (Col B A p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
        ],
        [
            "assert (Col B A r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
        ],
        [
            "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d75f90193cbf0f3e92de057e91d772e7f4222c89"
        ],
        [
            "assert (Col A p r) by (conclude lemma_collinear4).",
            "VernacExtend",
            "fbf40790f16e11e957ce020528dcb12d03c78acd"
        ],
        [
            "assert (Col p r A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "dee4efef4674698f1e8b78ece3e3cf6c765d042b"
        ],
        [
            "assert (Col p r B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f02be5ac73078f1d72bc9f28da1c0c002cce1975"
        ],
        [
            "assert (~ Meet C d J r).",
            "VernacExtend",
            "596e2fa3c133967c6d4ae58b9373bcc2ccca8d3e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists K, (neq C d /\\ neq J r /\\ Col C d K /\\ Col J r K)) by (conclude_def Meet );destruct Tf as [K];spliter.",
            "VernacExtend",
            "ea594ad5a611d978b52f54215fd8db3ff746f56e"
        ],
        [
            "assert (Col C c d) by (conclude_def Col ).",
            "VernacExtend",
            "7fac7c7d768a44dfe0badd2825c05784b1ad568a"
        ],
        [
            "assert (Col C d c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "35df98aca8fa8eadac70e1e6c21cd656b812f2b5"
        ],
        [
            "assert (neq c d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "c03df0c73b598a003a93c0ca29e18e71deafb899"
        ],
        [
            "assert (neq d c) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "bf140f5d0d467cc41497ae50da73e8efa49185bb"
        ],
        [
            "assert (Col d c K) by (conclude lemma_collinear4).",
            "VernacExtend",
            "5dcbef261e68fac2c5e20a7cfb48220f349f7a53"
        ],
        [
            "assert (Col c d K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "97642a172364a791f9e184d2a1c6ddd134c131e5"
        ],
        [
            "assert (Col r p J) by (conclude_def Col ).",
            "VernacExtend",
            "866d94396951a9a02e106ecd3b4609462e6552ef"
        ],
        [
            "assert (Col r J p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4cddb942098226dc4e1b40bf088a3fd3733150ae"
        ],
        [
            "assert (neq r J) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8ae85434669d53cb81191637a2617026d3a23153"
        ],
        [
            "assert (Col r J K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "a5717d8a4277245ad91056dc20a65507246dca00"
        ],
        [
            "assert (Col J p K) by (conclude lemma_collinear4).",
            "VernacExtend",
            "fec648ce1af046a0be6df397b75517333a350ce0"
        ],
        [
            "assert (Col J p r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e3f371b1e36fdca9828e4d653bc63b121e8004e3"
        ],
        [
            "assert (neq p J) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "7cb5f8372433dc690acc4da3c6418b4df430146b"
        ],
        [
            "assert (neq J p) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "4d6abfee3e026f62cabef343601049f0fb4bcddc"
        ],
        [
            "assert (Col p K r) by (conclude lemma_collinear4).",
            "VernacExtend",
            "8c3218d4a603cb79933c412c7c9d03b354b49df9"
        ],
        [
            "assert (Col p r K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3332482824f41e1885dad13b93b88d4b119d3175"
        ],
        [
            "assert (Col A B K) by (conclude lemma_collinear5).",
            "VernacExtend",
            "d3d895fdba75f5086e814f1c3c8efa01d96cf51f"
        ],
        [
            "assert (Meet A B c d) by (conclude_def Meet ).",
            "VernacExtend",
            "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (BetS c E p) by (conclude lemma_collinearbetween).",
            "VernacExtend",
            "ab9b6b171e24b232ca5ff796c965de9142d6691f"
        ],
        [
            "assert (BetS p E c) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "5f252005c0dbeaaacb1fe7adc82cfae86f6edeb0"
        ],
        [
            "assert (BetS q p E) by (conclude axiom_innertransitivity).",
            "VernacExtend",
            "2d1e313f3e0f01722fead4301eec5053a1a8234f"
        ],
        [
            "assert (nCol p r c) by (conclude lemma_NChelper).",
            "VernacExtend",
            "f11b7208c64333a8cf5ae60d266cd48fb11b8c23"
        ],
        [
            "assert (nCol p c r) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "07fafa67558711ec8a88635accd76afd2f12c09c"
        ],
        [
            "assert (Col q p c) by (conclude_def Col ).",
            "VernacExtend",
            "3bde970f7221d436d5ecb419ff311d707944e042"
        ],
        [
            "assert (Col p c q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "66824f6712036ab3cc56047cf638ac8f4c1dda35"
        ],
        [
            "assert (eq c c) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "916a0cf6a7760772073fa60385f36a27038fed41"
        ],
        [
            "assert (Col p c c) by (conclude_def Col ).",
            "VernacExtend",
            "4fe0ae2a5b68558882867fbf5fd3ac0c5694000e"
        ],
        [
            "assert (neq q c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "640afd3dd342c6d32f6c4a6538b174fb962ef0cb"
        ],
        [
            "assert (nCol q c r) by (conclude lemma_NChelper).",
            "VernacExtend",
            "464bcee6d01cc007ffdc3816965d1de79f96f7d1"
        ],
        [
            "assert (nCol q r c) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "8119ebbea39efef4756ac81a4c7feae94ea2965f"
        ],
        [
            "assert (neq q d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "1e556c7d3e40ca39460f4ac2ec127b262830ac7a"
        ],
        [
            "assert (Col q r d) by (conclude_def Col ).",
            "VernacExtend",
            "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
        ],
        [
            "assert (eq q q) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "1b2794cf48e80ec760579eace61c8ea4e105fdcb"
        ],
        [
            "assert (Col q r q) by (conclude_def Col ).",
            "VernacExtend",
            "1704a17f4eb2c7e559796104a324da19971efc35"
        ],
        [
            "assert (nCol q d c) by (conclude lemma_NChelper).",
            "VernacExtend",
            "c27688e6cf99d36a537840fa7f2b64277947c0c7"
        ],
        [
            "assert (nCol d c q) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "ffdb82eb17637a88b7e219f46b36124412b31e9f"
        ],
        [
            "assert (Col C c d) by (conclude_def Col ).",
            "VernacExtend",
            "7fac7c7d768a44dfe0badd2825c05784b1ad568a"
        ],
        [
            "assert (Col d c C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6f94d926387995424814cc7e1195bfd3a4349778"
        ],
        [
            "assert (eq d d) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "f128d68b59ef0c267bd0ae06a027d9a77fc0e640"
        ],
        [
            "assert (Col d c d) by (conclude_def Col ).",
            "VernacExtend",
            "32483e21cd01c4e62aa2da20c5d7a7a5d18db4d0"
        ],
        [
            "assert (neq C d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b926c6cf68213af3f8458567b27455600b6abdb1"
        ],
        [
            "assert (neq d C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c2555f4e7f257794e22f1ffad3cf4f3018b1ccb0"
        ],
        [
            "assert (nCol d C q) by (conclude lemma_NChelper).",
            "VernacExtend",
            "035b640a3dafaeddfbf5a85bfb996c3b438274b0"
        ],
        [
            "assert (nCol d q C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "552b4b47219499191cc70e7d7d1e3958bf5118e1"
        ],
        [
            "assert (Col q r d) by (conclude_def Col ).",
            "VernacExtend",
            "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
        ],
        [
            "assert (Col d q r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b8a4f99465c92ae13170470c06ef818b8e21d9dc"
        ],
        [
            "assert (Col d q q) by (conclude_def Col ).",
            "VernacExtend",
            "566040452ceeebf0ff3694d9cfbff454a25ba5da"
        ],
        [
            "assert (~ eq r C).",
            "VernacExtend",
            "f248c1d801ec5557aed2923a2ff1df5db74933d4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude cn_equalitysub).",
            "VernacExtend",
            "a542176031ac453a9edd172139510a5bd23f20d4"
        ],
        [
            "assert (Meet A B c d) by (conclude_def Meet ).",
            "VernacExtend",
            "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq r q).",
            "VernacExtend",
            "c7a444a997de7677bc40d36e838350f58d467987"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col r q c) by (conclude_def Col ).",
            "VernacExtend",
            "9a29b025b6f3d0a31176ccd0a447e3d6e23a28f2"
        ],
        [
            "assert (Col q r c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7d1f949908f1dff2a00866abd2c8e6eae1265a46"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (nCol r q C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "3b47d5c41e9273791104c8db51d80de45758a6c7"
        ],
        [
            "assert (nCol r C q) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "5aff1eee0f793cc7ae6cc855e7ab3442614abf27"
        ],
        [
            "assert (BetS r E C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "607cf0283c1048050f34a1fe09e11153ec65584b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS q F C /\\ BetS r p F)) by (conclude postulate_Pasch_outer);destruct Tf as [F];spliter.",
            "VernacExtend",
            "78ff807572c7d9d4526d2db82389f05e2d15f39e"
        ],
        [
            "assert (BetS C F q) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "f1e35029df2ddc0106b1c0f5d47c291249ea5762"
        ],
        [
            "assert (Col r p F) by (conclude_def Col ).",
            "VernacExtend",
            "452f656294e8999725c36c89eefd6d0af23790ca"
        ],
        [
            "assert (Col r p A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "55b67d6d24922fc5ea2f294b767ffb10fb52daab"
        ],
        [
            "assert (Col r p B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "cde06205a062326df42e0fa8fe51c49051419d80"
        ],
        [
            "assert (Col A B F) by (conclude lemma_collinear5).",
            "VernacExtend",
            "179a28f95b7a408b8f5b8f06110f3f8c268d29d4"
        ],
        [
            "assert (eq r r) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "496e2a323f10950b011ed045bc7b2062211fca66"
        ],
        [
            "assert (Col d q r) by (conclude_def Col ).",
            "VernacExtend",
            "681a54ddd42cbd79b9bf7afdf39fdc29f14d6401"
        ],
        [
            "assert (neq q r) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8a4ba530383b0c05c68c5bd9ef5998156fc9ce35"
        ],
        [
            "assert (nCol q r C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "1ab8abdb56f1d855d590b878cfd1fee65e75417c"
        ],
        [
            "assert (nCol q C r) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "45d7e4bc19f2b1dcd04b40d6856b5fdb9bba6ea0"
        ],
        [
            "assert (Col q F C) by (conclude_def Col ).",
            "VernacExtend",
            "c0d1bcfd7b67973a572a03f4a5f7ab28c9b64491"
        ],
        [
            "assert (Col q C F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c89c821c376c80205c784fbbe2ea9eed2c93509b"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col q C C) by (conclude_def Col ).",
            "VernacExtend",
            "05ffcaeb18de0bd9723e7d02ac3c30c8a9917003"
        ],
        [
            "assert (neq F C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ea02f13cf14629ebf47e463db19324326219f289"
        ],
        [
            "assert (nCol F C r) by (conclude lemma_NChelper).",
            "VernacExtend",
            "03ae4f8a20cf9482c6a4b404ea19901be4ded241"
        ],
        [
            "assert (nCol F r C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "88241dd509237ed1617a417c52d7819512385181"
        ],
        [
            "assert (Col B r p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f07d2a512d5838b1a2d2c57f1a1f3f1b655bd404"
        ],
        [
            "assert (Col B p r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "79c593f6e1e1239383e45cbb6f47cbf0bbf55726"
        ],
        [
            "assert (Col B p A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1257ea3b6da0733cfa2285a87f7cb86a45bff134"
        ],
        [
            "assert (Col B A r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
        ],
        [
            "assert (Col B A p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
        ],
        [
            "assert (Col A r p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "ba8c7720ff09364c345eefef292a1cd0b024fc15"
        ],
        [
            "assert (Col p r A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "dee4efef4674698f1e8b78ece3e3cf6c765d042b"
        ],
        [
            "assert (Col p r F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "513cbead22b4303baf58172db04a5f9e942973f5"
        ],
        [
            "assert (neq p r) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "365b8ae45fd2f68aaab516297870581de1e3e8f1"
        ],
        [
            "assert (Col r A F) by (conclude lemma_collinear4).",
            "VernacExtend",
            "01bbc025bbbafc8d799c574034f4bae7cc609f7f"
        ],
        [
            "assert (Col F r A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "702f74e6a2a4c19596acfb8b5d03bde757894b47"
        ],
        [
            "assert (Col B A r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
        ],
        [
            "assert (Col B A p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
        ],
        [
            "assert (Col A r p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "ba8c7720ff09364c345eefef292a1cd0b024fc15"
        ],
        [
            "assert (Col A p r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "58d49a39c161f604bc248a2d2ba3f738bae01113"
        ],
        [
            "assert (Col A p B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "13213e44480653f018f1aeedf8a88eff7a3dfa69"
        ],
        [
            "assert (Col A B r) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6fc8ba2e5eab3c69373c98252d42729d28c5ea61"
        ],
        [
            "assert (Col A B p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "710c2e24e0a8936d854b0207c7cb5fca30209f42"
        ],
        [
            "assert (Col B r p) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f07d2a512d5838b1a2d2c57f1a1f3f1b655bd404"
        ],
        [
            "assert (Col p r B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f02be5ac73078f1d72bc9f28da1c0c002cce1975"
        ],
        [
            "assert (Col r B F) by (conclude lemma_collinear4).",
            "VernacExtend",
            "7acba687c1f2ef5bbcf0ee8c89ddb667464943c7"
        ],
        [
            "assert (Col F r B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "8673bac1cdf2cd34d135585cd11f630c06c0c2ea"
        ],
        [
            "assert (nCol A B C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "6a0945eccdbe230c407b06bb57a2a9af03b5560e"
        ],
        [
            "assert (TS C A B q) by (conclude_def TS ).",
            "VernacExtend",
            "9dbaa9a54dba268d2bd6ae17b3faf7a8fd88ffbf"
        ],
        [
            "assert (OS C d A B) by (conclude_def OS ).",
            "VernacExtend",
            "d777d45a5d5bcddfa9319ef82c8bec5bcf2729a1"
        ],
        [
            "assert (~ Meet A B C d).",
            "VernacExtend",
            "a5d6a7c50e73435f0d223893a4a47d87a5d02557"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists K, (neq A B /\\ neq C d /\\ Col A B K /\\ Col C d K)) by (conclude_def Meet );destruct Tf as [K];spliter.",
            "VernacExtend",
            "da1d4c1c5947ed8169e27467fef41c57546c05d9"
        ],
        [
            "assert (Col C c d) by (conclude_def Col ).",
            "VernacExtend",
            "7fac7c7d768a44dfe0badd2825c05784b1ad568a"
        ],
        [
            "assert (Col C d c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "35df98aca8fa8eadac70e1e6c21cd656b812f2b5"
        ],
        [
            "assert (neq C d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b926c6cf68213af3f8458567b27455600b6abdb1"
        ],
        [
            "assert (Col d c K) by (conclude lemma_collinear4).",
            "VernacExtend",
            "5dcbef261e68fac2c5e20a7cfb48220f349f7a53"
        ],
        [
            "assert (Col c d K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "97642a172364a791f9e184d2a1c6ddd134c131e5"
        ],
        [
            "assert (Meet A B c d) by (conclude_def Meet ).",
            "VernacExtend",
            "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq C d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b926c6cf68213af3f8458567b27455600b6abdb1"
        ],
        [
            "assert (TP A B C d) by (conclude_def TP ).",
            "VernacExtend",
            "1e0d2014f856b608a7ef34399c5afb9fe53fbf12"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_parallelcollinear1",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Col C c d) by (conclude_def Col ).",
                        "VernacExtend",
                        "7fac7c7d768a44dfe0badd2825c05784b1ad568a"
                    ]
                },
                {
                    "command": [
                        "assert (neq C c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "7ca47e72d73d89cb6a9f9174bac8031716f43ed5"
                    ]
                },
                {
                    "command": [
                        "assert (neq c d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "c03df0c73b598a003a93c0ca29e18e71deafb899"
                    ]
                },
                {
                    "command": [
                        "assert (neq C d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b926c6cf68213af3f8458567b27455600b6abdb1"
                    ]
                },
                {
                    "command": [
                        "assert ((neq A B /\\ neq c d /\\ ~ Meet A B c d /\\ OS c d A B)) by (conclude_def TP ).",
                        "VernacExtend",
                        "0492d6768f14b34202195afd5b64f777d5ebbb64"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists p q r, (Col A B p /\\ Col A B r /\\ BetS c p q /\\ BetS d r q /\\ nCol A B c /\\ nCol A B d)) by (conclude_def OS );destruct Tf as [p[q[r]]];spliter.",
                        "VernacExtend",
                        "7c7803a7f893f034ae38d998673cd60ba73995d4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS q r d) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ff6bc95d481ac4a13d9d541bd2288cd3c009fab1"
                    ]
                },
                {
                    "command": [
                        "assert (Col C c d) by (conclude_def Col ).",
                        "VernacExtend",
                        "7fac7c7d768a44dfe0badd2825c05784b1ad568a"
                    ]
                },
                {
                    "command": [
                        "assert (Col c d C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "542c64965b59f72edade4598f0161104c072e0fa"
                    ]
                },
                {
                    "command": [
                        "assert (BetS d c C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "bbb1914eb031cf217502038630975917a404ab3b"
                    ]
                },
                {
                    "command": [
                        "assert (BetS q p c) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "f07abdd005d5cbabc47562b3e53b2053bce82101"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq p r).",
                        "VernacExtend",
                        "a0e1b36c266c57d39031f93882eb291ef24797c6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col q r d) by (conclude_def Col ).",
                        "VernacExtend",
                        "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
                    ]
                },
                {
                    "command": [
                        "assert (Col q p c) by (conclude_def Col ).",
                        "VernacExtend",
                        "3bde970f7221d436d5ecb419ff311d707944e042"
                    ]
                },
                {
                    "command": [
                        "assert (Col q p d) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "c6498eadf428d7f14ff0da4831c208c448ad36ea"
                    ]
                },
                {
                    "command": [
                        "assert (neq q p) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "3766e5baa3b3b0cc00bae5396ad292b312492a7b"
                    ]
                },
                {
                    "command": [
                        "assert (Col p c d) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "66de00398bc4eabf91140043310b86950c3aa674"
                    ]
                },
                {
                    "command": [
                        "assert (Col c d p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "907058938a2dd3f67c65b1862c211c87c03426bc"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B c d) by (conclude_def Meet ).",
                        "VernacExtend",
                        "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Col q p c) by (conclude_def Col ).",
                        "VernacExtend",
                        "3bde970f7221d436d5ecb419ff311d707944e042"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col q d C).",
                        "VernacExtend",
                        "db92c65a864c00901c87c3322ade4e26bf5e8a73"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col d c C) by (conclude_def Col ).",
                        "VernacExtend",
                        "4239efd9c91c9631dc34724bc07a782e7a8a30f5"
                    ]
                },
                {
                    "command": [
                        "assert (Col C d c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "35df98aca8fa8eadac70e1e6c21cd656b812f2b5"
                    ]
                },
                {
                    "command": [
                        "assert (Col C d q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c57b6209265ec905b8c401b8d514936bb1148602"
                    ]
                },
                {
                    "command": [
                        "assert (neq C d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b926c6cf68213af3f8458567b27455600b6abdb1"
                    ]
                },
                {
                    "command": [
                        "assert (Col d c q) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "1b2ac3aa68b8790a9b9d1f0606646798c0c0ffb7"
                    ]
                },
                {
                    "command": [
                        "assert (Col c q d) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c7916ef45436e57aed2602e3487be5dfdf2af3cb"
                    ]
                },
                {
                    "command": [
                        "assert (Col c q p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "10f1470b6a4611ef7710c36ff62fbda5fbb681d4"
                    ]
                },
                {
                    "command": [
                        "assert (neq q c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "640afd3dd342c6d32f6c4a6538b174fb962ef0cb"
                    ]
                },
                {
                    "command": [
                        "assert (neq c q) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "fe2599902065534f47cfc3d7e833ddbe4b49029f"
                    ]
                },
                {
                    "command": [
                        "assert (Col q d p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "c5214a2f147c3f050c7f652ad5126a4f4e36c122"
                    ]
                },
                {
                    "command": [
                        "assert (Col q r d) by (conclude_def Col ).",
                        "VernacExtend",
                        "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
                    ]
                },
                {
                    "command": [
                        "assert (Col q d r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7dd8d29f03e245476b74a3738454f2591cb7bc98"
                    ]
                },
                {
                    "command": [
                        "assert (neq q d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "1e556c7d3e40ca39460f4ac2ec127b262830ac7a"
                    ]
                },
                {
                    "command": [
                        "assert (Col d p r) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "c2f1020f21b521bccfe5e5b95fb7b8b0eac90c09"
                    ]
                },
                {
                    "command": [
                        "assert (Col B p r) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "2317afeb8ce0788933fe6752ee0a487a5b23d6ca"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
                    ]
                },
                {
                    "command": [
                        "assert (Col B p A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1257ea3b6da0733cfa2285a87f7cb86a45bff134"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p r) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "fbf40790f16e11e957ce020528dcb12d03c78acd"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq B p).",
                        "VernacExtend",
                        "9556222f933cb2c2aa263c90f9e8d8890d33381b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "3212a33b100b6e23f5089aa38a490146e404573c"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r d) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e4988a0ba13342baf6afc342c363cbcddc6d7319"
                    ]
                },
                {
                    "command": [
                        "assert (Col r A d) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "fe9149ed1c1a10dfd6c11a1a5cff03b075555fb0"
                    ]
                },
                {
                    "command": [
                        "assert (Col r A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3135bd6ca1afe3f57301a6fcd5f17e7df6dfc4fb"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq r A).",
                        "VernacExtend",
                        "da6f228151ae618b00e7e194cb03dbb7a3dd6dab"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A d B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "12cc1cc534c2ac84fbb867d186566914666e89e8"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B d) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "60f215f665fa57aa8d2ece513319531fef7673b4"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Col p A d) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "ce1ac4226dbe21ccf4837a077cecfc2e68a48c2b"
                    ]
                },
                {
                    "command": [
                        "assert (Col p A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7a3400b6548049da7238a5976c563812bf6ba697"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq p A).",
                        "VernacExtend",
                        "c38925119879233c666316f67601b03c9cf73ee1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A d B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "12cc1cc534c2ac84fbb867d186566914666e89e8"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B d) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "60f215f665fa57aa8d2ece513319531fef7673b4"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (eq A p) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "38ce2a3df07c4707c0f0cb33aa63d0f3eb94edf6"
                    ]
                },
                {
                    "command": [
                        "assert (eq r p) by (conclude cn_equalitytransitive).",
                        "VernacExtend",
                        "eb8f005437f8543301d14a14013415ae95d27176"
                    ]
                },
                {
                    "command": [
                        "assert (Col q p d) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "c6498eadf428d7f14ff0da4831c208c448ad36ea"
                    ]
                },
                {
                    "command": [
                        "assert (neq q p) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "3766e5baa3b3b0cc00bae5396ad292b312492a7b"
                    ]
                },
                {
                    "command": [
                        "assert (Col p c d) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "66de00398bc4eabf91140043310b86950c3aa674"
                    ]
                },
                {
                    "command": [
                        "assert (Col c d p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "907058938a2dd3f67c65b1862c211c87c03426bc"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B c d) by (conclude_def Meet ).",
                        "VernacExtend",
                        "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq A p) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "255d37201322361c547bb335e6796c6ec4877a91"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "13213e44480653f018f1aeedf8a88eff7a3dfa69"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq r A).",
                        "VernacExtend",
                        "f3dff0a265ff4c49f5795e0f7df72e633c308b33"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col d p A) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "f41a51e4f6bbcfc1553350eb8850f171e3a003ee"
                    ]
                },
                {
                    "command": [
                        "assert (Col d B A) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "f37aea6372259dff1a201cc476dbe3fcb63917dd"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B d) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "60f215f665fa57aa8d2ece513319531fef7673b4"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Col r A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3135bd6ca1afe3f57301a6fcd5f17e7df6dfc4fb"
                    ]
                },
                {
                    "command": [
                        "assert (Col d B r) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "0bbd3cfcd4e5f6748394cd02f515e5be926a9fda"
                    ]
                },
                {
                    "command": [
                        "assert (Col r B d) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "71664954f9bd04f78e5853a76ef6b531d448aa0b"
                    ]
                },
                {
                    "command": [
                        "assert (Col r B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4810706595bd044d41057538711a4f0c09a63c68"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq r B).",
                        "VernacExtend",
                        "08d2a6ed38032a69b2e27af8dfab1cc750397ac3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B d A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "93c98543018306aa66e1f98b494dc10bac3c5a6b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B d) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "60f215f665fa57aa8d2ece513319531fef7673b4"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (eq B r) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "8583deff22f6eb8499be8850e31b60b94b92652e"
                    ]
                },
                {
                    "command": [
                        "assert (eq p B) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "a7803f76032b4d3e38fae10c6860f8f4d0563dff"
                    ]
                },
                {
                    "command": [
                        "assert (eq p r) by (conclude cn_equalitytransitive).",
                        "VernacExtend",
                        "26d7c8b8beb5e3145a04e4f92b9e86a17c2dde59"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (BetS q E c /\\ BetS C E r)) by (conclude postulate_Pasch_inner);destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "0373a1916460b4d5350b91ed637611cb3a1bb0d6"
                    ]
                },
                {
                    "command": [
                        "assert (BetS r E C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "607cf0283c1048050f34a1fe09e11153ec65584b"
                    ]
                },
                {
                    "command": [
                        "assert (Col q E c) by (conclude_def Col ).",
                        "VernacExtend",
                        "fb4480c86da46a72236f28fdd3af31dc3d7d92a4"
                    ]
                },
                {
                    "command": [
                        "assert (Col q c p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "16fd1f0120108444bb3d062849d4662a09444147"
                    ]
                },
                {
                    "command": [
                        "assert (Col q c E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "649684042f6278330af40868754169aae0c4c51c"
                    ]
                },
                {
                    "command": [
                        "assert (neq q c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "640afd3dd342c6d32f6c4a6538b174fb962ef0cb"
                    ]
                },
                {
                    "command": [
                        "assert (Col c p E) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "ad4aa6e46a5f9d118bad9e91653172ff70401b72"
                    ]
                },
                {
                    "command": [
                        "assert (Col c E p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9689d5a58d0b2e28c1dd6bd430dc40b343b14998"
                    ]
                },
                {
                    "command": [
                        "assert (neq r p) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "bac304f644b192e5abd448653f206581bf521c66"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists J, (BetS r p J /\\ Cong p J r p)) by (conclude lemma_extension);destruct Tf as [J];spliter.",
                        "VernacExtend",
                        "68b6dce31b6bfb46be1903085f2595a48fda11b3"
                    ]
                },
                {
                    "command": [
                        "assert (BetS J p r) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "c40eaf61a6e3ddcbafd99247a98bf2012bb93a3f"
                    ]
                },
                {
                    "command": [
                        "assert (Col J p r) by (conclude_def Col ).",
                        "VernacExtend",
                        "3041f33c35b670a09a32e50d5130b8074b91c9f9"
                    ]
                },
                {
                    "command": [
                        "assert (neq J r) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "68e9841bce0d7bf3f2d2bce20cc1f4ec937a436d"
                    ]
                },
                {
                    "command": [
                        "assert (neq p r) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "365b8ae45fd2f68aaab516297870581de1e3e8f1"
                    ]
                },
                {
                    "command": [
                        "assert (neq J p) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b8974df78ecc807630f9eb01c4b7817cedad631b"
                    ]
                },
                {
                    "command": [
                        "assert (Col B p r) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "2317afeb8ce0788933fe6752ee0a487a5b23d6ca"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d75f90193cbf0f3e92de057e91d772e7f4222c89"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p r) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "fbf40790f16e11e957ce020528dcb12d03c78acd"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "dee4efef4674698f1e8b78ece3e3cf6c765d042b"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f02be5ac73078f1d72bc9f28da1c0c002cce1975"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet C d J r).",
                        "VernacExtend",
                        "596e2fa3c133967c6d4ae58b9373bcc2ccca8d3e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists K, (neq C d /\\ neq J r /\\ Col C d K /\\ Col J r K)) by (conclude_def Meet );destruct Tf as [K];spliter.",
                        "VernacExtend",
                        "ea594ad5a611d978b52f54215fd8db3ff746f56e"
                    ]
                },
                {
                    "command": [
                        "assert (Col C c d) by (conclude_def Col ).",
                        "VernacExtend",
                        "7fac7c7d768a44dfe0badd2825c05784b1ad568a"
                    ]
                },
                {
                    "command": [
                        "assert (Col C d c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "35df98aca8fa8eadac70e1e6c21cd656b812f2b5"
                    ]
                },
                {
                    "command": [
                        "assert (neq c d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "c03df0c73b598a003a93c0ca29e18e71deafb899"
                    ]
                },
                {
                    "command": [
                        "assert (neq d c) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "bf140f5d0d467cc41497ae50da73e8efa49185bb"
                    ]
                },
                {
                    "command": [
                        "assert (Col d c K) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "5dcbef261e68fac2c5e20a7cfb48220f349f7a53"
                    ]
                },
                {
                    "command": [
                        "assert (Col c d K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "97642a172364a791f9e184d2a1c6ddd134c131e5"
                    ]
                },
                {
                    "command": [
                        "assert (Col r p J) by (conclude_def Col ).",
                        "VernacExtend",
                        "866d94396951a9a02e106ecd3b4609462e6552ef"
                    ]
                },
                {
                    "command": [
                        "assert (Col r J p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4cddb942098226dc4e1b40bf088a3fd3733150ae"
                    ]
                },
                {
                    "command": [
                        "assert (neq r J) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8ae85434669d53cb81191637a2617026d3a23153"
                    ]
                },
                {
                    "command": [
                        "assert (Col r J K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "a5717d8a4277245ad91056dc20a65507246dca00"
                    ]
                },
                {
                    "command": [
                        "assert (Col J p K) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "fec648ce1af046a0be6df397b75517333a350ce0"
                    ]
                },
                {
                    "command": [
                        "assert (Col J p r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e3f371b1e36fdca9828e4d653bc63b121e8004e3"
                    ]
                },
                {
                    "command": [
                        "assert (neq p J) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "7cb5f8372433dc690acc4da3c6418b4df430146b"
                    ]
                },
                {
                    "command": [
                        "assert (neq J p) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "4d6abfee3e026f62cabef343601049f0fb4bcddc"
                    ]
                },
                {
                    "command": [
                        "assert (Col p K r) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "8c3218d4a603cb79933c412c7c9d03b354b49df9"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3332482824f41e1885dad13b93b88d4b119d3175"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B K) by (conclude lemma_collinear5).",
                        "VernacExtend",
                        "d3d895fdba75f5086e814f1c3c8efa01d96cf51f"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B c d) by (conclude_def Meet ).",
                        "VernacExtend",
                        "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (BetS c E p) by (conclude lemma_collinearbetween).",
                        "VernacExtend",
                        "ab9b6b171e24b232ca5ff796c965de9142d6691f"
                    ]
                },
                {
                    "command": [
                        "assert (BetS p E c) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "5f252005c0dbeaaacb1fe7adc82cfae86f6edeb0"
                    ]
                },
                {
                    "command": [
                        "assert (BetS q p E) by (conclude axiom_innertransitivity).",
                        "VernacExtend",
                        "2d1e313f3e0f01722fead4301eec5053a1a8234f"
                    ]
                },
                {
                    "command": [
                        "assert (nCol p r c) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "f11b7208c64333a8cf5ae60d266cd48fb11b8c23"
                    ]
                },
                {
                    "command": [
                        "assert (nCol p c r) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "07fafa67558711ec8a88635accd76afd2f12c09c"
                    ]
                },
                {
                    "command": [
                        "assert (Col q p c) by (conclude_def Col ).",
                        "VernacExtend",
                        "3bde970f7221d436d5ecb419ff311d707944e042"
                    ]
                },
                {
                    "command": [
                        "assert (Col p c q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "66824f6712036ab3cc56047cf638ac8f4c1dda35"
                    ]
                },
                {
                    "command": [
                        "assert (eq c c) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "916a0cf6a7760772073fa60385f36a27038fed41"
                    ]
                },
                {
                    "command": [
                        "assert (Col p c c) by (conclude_def Col ).",
                        "VernacExtend",
                        "4fe0ae2a5b68558882867fbf5fd3ac0c5694000e"
                    ]
                },
                {
                    "command": [
                        "assert (neq q c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "640afd3dd342c6d32f6c4a6538b174fb962ef0cb"
                    ]
                },
                {
                    "command": [
                        "assert (nCol q c r) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "464bcee6d01cc007ffdc3816965d1de79f96f7d1"
                    ]
                },
                {
                    "command": [
                        "assert (nCol q r c) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "8119ebbea39efef4756ac81a4c7feae94ea2965f"
                    ]
                },
                {
                    "command": [
                        "assert (neq q d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "1e556c7d3e40ca39460f4ac2ec127b262830ac7a"
                    ]
                },
                {
                    "command": [
                        "assert (Col q r d) by (conclude_def Col ).",
                        "VernacExtend",
                        "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
                    ]
                },
                {
                    "command": [
                        "assert (eq q q) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "1b2794cf48e80ec760579eace61c8ea4e105fdcb"
                    ]
                },
                {
                    "command": [
                        "assert (Col q r q) by (conclude_def Col ).",
                        "VernacExtend",
                        "1704a17f4eb2c7e559796104a324da19971efc35"
                    ]
                },
                {
                    "command": [
                        "assert (nCol q d c) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "c27688e6cf99d36a537840fa7f2b64277947c0c7"
                    ]
                },
                {
                    "command": [
                        "assert (nCol d c q) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "ffdb82eb17637a88b7e219f46b36124412b31e9f"
                    ]
                },
                {
                    "command": [
                        "assert (Col C c d) by (conclude_def Col ).",
                        "VernacExtend",
                        "7fac7c7d768a44dfe0badd2825c05784b1ad568a"
                    ]
                },
                {
                    "command": [
                        "assert (Col d c C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6f94d926387995424814cc7e1195bfd3a4349778"
                    ]
                },
                {
                    "command": [
                        "assert (eq d d) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "f128d68b59ef0c267bd0ae06a027d9a77fc0e640"
                    ]
                },
                {
                    "command": [
                        "assert (Col d c d) by (conclude_def Col ).",
                        "VernacExtend",
                        "32483e21cd01c4e62aa2da20c5d7a7a5d18db4d0"
                    ]
                },
                {
                    "command": [
                        "assert (neq C d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b926c6cf68213af3f8458567b27455600b6abdb1"
                    ]
                },
                {
                    "command": [
                        "assert (neq d C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "c2555f4e7f257794e22f1ffad3cf4f3018b1ccb0"
                    ]
                },
                {
                    "command": [
                        "assert (nCol d C q) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "035b640a3dafaeddfbf5a85bfb996c3b438274b0"
                    ]
                },
                {
                    "command": [
                        "assert (nCol d q C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "552b4b47219499191cc70e7d7d1e3958bf5118e1"
                    ]
                },
                {
                    "command": [
                        "assert (Col q r d) by (conclude_def Col ).",
                        "VernacExtend",
                        "74fac2c51631a3b9f74bd8cd9fa659e4b85b9fc3"
                    ]
                },
                {
                    "command": [
                        "assert (Col d q r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b8a4f99465c92ae13170470c06ef818b8e21d9dc"
                    ]
                },
                {
                    "command": [
                        "assert (Col d q q) by (conclude_def Col ).",
                        "VernacExtend",
                        "566040452ceeebf0ff3694d9cfbff454a25ba5da"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq r C).",
                        "VernacExtend",
                        "f248c1d801ec5557aed2923a2ff1df5db74933d4"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "a542176031ac453a9edd172139510a5bd23f20d4"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B c d) by (conclude_def Meet ).",
                        "VernacExtend",
                        "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq r q).",
                        "VernacExtend",
                        "c7a444a997de7677bc40d36e838350f58d467987"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col r q c) by (conclude_def Col ).",
                        "VernacExtend",
                        "9a29b025b6f3d0a31176ccd0a447e3d6e23a28f2"
                    ]
                },
                {
                    "command": [
                        "assert (Col q r c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7d1f949908f1dff2a00866abd2c8e6eae1265a46"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (nCol r q C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "3b47d5c41e9273791104c8db51d80de45758a6c7"
                    ]
                },
                {
                    "command": [
                        "assert (nCol r C q) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "5aff1eee0f793cc7ae6cc855e7ab3442614abf27"
                    ]
                },
                {
                    "command": [
                        "assert (BetS r E C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "607cf0283c1048050f34a1fe09e11153ec65584b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS q F C /\\ BetS r p F)) by (conclude postulate_Pasch_outer);destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "78ff807572c7d9d4526d2db82389f05e2d15f39e"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C F q) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "f1e35029df2ddc0106b1c0f5d47c291249ea5762"
                    ]
                },
                {
                    "command": [
                        "assert (Col r p F) by (conclude_def Col ).",
                        "VernacExtend",
                        "452f656294e8999725c36c89eefd6d0af23790ca"
                    ]
                },
                {
                    "command": [
                        "assert (Col r p A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "55b67d6d24922fc5ea2f294b767ffb10fb52daab"
                    ]
                },
                {
                    "command": [
                        "assert (Col r p B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "cde06205a062326df42e0fa8fe51c49051419d80"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B F) by (conclude lemma_collinear5).",
                        "VernacExtend",
                        "179a28f95b7a408b8f5b8f06110f3f8c268d29d4"
                    ]
                },
                {
                    "command": [
                        "assert (eq r r) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "496e2a323f10950b011ed045bc7b2062211fca66"
                    ]
                },
                {
                    "command": [
                        "assert (Col d q r) by (conclude_def Col ).",
                        "VernacExtend",
                        "681a54ddd42cbd79b9bf7afdf39fdc29f14d6401"
                    ]
                },
                {
                    "command": [
                        "assert (neq q r) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8a4ba530383b0c05c68c5bd9ef5998156fc9ce35"
                    ]
                },
                {
                    "command": [
                        "assert (nCol q r C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "1ab8abdb56f1d855d590b878cfd1fee65e75417c"
                    ]
                },
                {
                    "command": [
                        "assert (nCol q C r) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "45d7e4bc19f2b1dcd04b40d6856b5fdb9bba6ea0"
                    ]
                },
                {
                    "command": [
                        "assert (Col q F C) by (conclude_def Col ).",
                        "VernacExtend",
                        "c0d1bcfd7b67973a572a03f4a5f7ab28c9b64491"
                    ]
                },
                {
                    "command": [
                        "assert (Col q C F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c89c821c376c80205c784fbbe2ea9eed2c93509b"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col q C C) by (conclude_def Col ).",
                        "VernacExtend",
                        "05ffcaeb18de0bd9723e7d02ac3c30c8a9917003"
                    ]
                },
                {
                    "command": [
                        "assert (neq F C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ea02f13cf14629ebf47e463db19324326219f289"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F C r) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "03ae4f8a20cf9482c6a4b404ea19901be4ded241"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F r C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "88241dd509237ed1617a417c52d7819512385181"
                    ]
                },
                {
                    "command": [
                        "assert (Col B r p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f07d2a512d5838b1a2d2c57f1a1f3f1b655bd404"
                    ]
                },
                {
                    "command": [
                        "assert (Col B p r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "79c593f6e1e1239383e45cbb6f47cbf0bbf55726"
                    ]
                },
                {
                    "command": [
                        "assert (Col B p A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1257ea3b6da0733cfa2285a87f7cb86a45bff134"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
                    ]
                },
                {
                    "command": [
                        "assert (Col A r p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "ba8c7720ff09364c345eefef292a1cd0b024fc15"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "dee4efef4674698f1e8b78ece3e3cf6c765d042b"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "513cbead22b4303baf58172db04a5f9e942973f5"
                    ]
                },
                {
                    "command": [
                        "assert (neq p r) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "365b8ae45fd2f68aaab516297870581de1e3e8f1"
                    ]
                },
                {
                    "command": [
                        "assert (Col r A F) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "01bbc025bbbafc8d799c574034f4bae7cc609f7f"
                    ]
                },
                {
                    "command": [
                        "assert (Col F r A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "702f74e6a2a4c19596acfb8b5d03bde757894b47"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6834901a310b77c8b0ec2ef6a65ac0515d9a2e28"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
                    ]
                },
                {
                    "command": [
                        "assert (Col A r p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "ba8c7720ff09364c345eefef292a1cd0b024fc15"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "58d49a39c161f604bc248a2d2ba3f738bae01113"
                    ]
                },
                {
                    "command": [
                        "assert (Col A p B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "13213e44480653f018f1aeedf8a88eff7a3dfa69"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B r) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "6fc8ba2e5eab3c69373c98252d42729d28c5ea61"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "710c2e24e0a8936d854b0207c7cb5fca30209f42"
                    ]
                },
                {
                    "command": [
                        "assert (Col B r p) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f07d2a512d5838b1a2d2c57f1a1f3f1b655bd404"
                    ]
                },
                {
                    "command": [
                        "assert (Col p r B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f02be5ac73078f1d72bc9f28da1c0c002cce1975"
                    ]
                },
                {
                    "command": [
                        "assert (Col r B F) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "7acba687c1f2ef5bbcf0ee8c89ddb667464943c7"
                    ]
                },
                {
                    "command": [
                        "assert (Col F r B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "8673bac1cdf2cd34d135585cd11f630c06c0c2ea"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "6a0945eccdbe230c407b06bb57a2a9af03b5560e"
                    ]
                },
                {
                    "command": [
                        "assert (TS C A B q) by (conclude_def TS ).",
                        "VernacExtend",
                        "9dbaa9a54dba268d2bd6ae17b3faf7a8fd88ffbf"
                    ]
                },
                {
                    "command": [
                        "assert (OS C d A B) by (conclude_def OS ).",
                        "VernacExtend",
                        "d777d45a5d5bcddfa9319ef82c8bec5bcf2729a1"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet A B C d).",
                        "VernacExtend",
                        "a5d6a7c50e73435f0d223893a4a47d87a5d02557"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists K, (neq A B /\\ neq C d /\\ Col A B K /\\ Col C d K)) by (conclude_def Meet );destruct Tf as [K];spliter.",
                        "VernacExtend",
                        "da1d4c1c5947ed8169e27467fef41c57546c05d9"
                    ]
                },
                {
                    "command": [
                        "assert (Col C c d) by (conclude_def Col ).",
                        "VernacExtend",
                        "7fac7c7d768a44dfe0badd2825c05784b1ad568a"
                    ]
                },
                {
                    "command": [
                        "assert (Col C d c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "35df98aca8fa8eadac70e1e6c21cd656b812f2b5"
                    ]
                },
                {
                    "command": [
                        "assert (neq C d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b926c6cf68213af3f8458567b27455600b6abdb1"
                    ]
                },
                {
                    "command": [
                        "assert (Col d c K) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "5dcbef261e68fac2c5e20a7cfb48220f349f7a53"
                    ]
                },
                {
                    "command": [
                        "assert (Col c d K) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "97642a172364a791f9e184d2a1c6ddd134c131e5"
                    ]
                },
                {
                    "command": [
                        "assert (Meet A B c d) by (conclude_def Meet ).",
                        "VernacExtend",
                        "9499e42e4d9b0af392c289d5fd16b3f72d1ebf30"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq C d) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b926c6cf68213af3f8458567b27455600b6abdb1"
                    ]
                },
                {
                    "command": [
                        "assert (TP A B C d) by (conclude_def TP ).",
                        "VernacExtend",
                        "1e0d2014f856b608a7ef34399c5afb9fe53fbf12"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}