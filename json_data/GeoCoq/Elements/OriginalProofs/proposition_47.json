{
    "filename": "Elements/OriginalProofs/proposition_47.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_47B.",
            "VernacRequire",
            "4699ad31330ff0e7d63a03db96f91468ff5193b5"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_squareflip.",
            "VernacRequire",
            "43b4e93c685c34de35c8b8b82bba3f7e71917642"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:area}.",
            "VernacContext",
            "81ffa005c6d27ee71f963c56f9847264efce50bb"
        ],
        [
            "Lemma proposition_47 : forall A B C D E F G H K, Triangle A B C -> Per B A C -> SQ A B F G -> TS G B A C -> SQ A C K H -> TS H C A B -> SQ B C E D -> TS D C B A -> exists X Y, PG B X Y D /\\ BetS B X C /\\ PG X C E Y /\\ BetS D Y E /\\ EF A B F G B X Y D /\\ EF A C K H X C E Y.",
            "VernacStartTheoremProof",
            "abdb43886167f45f601b17deb06f12f19a195527"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M L, (PG B M L D /\\ BetS B M C /\\ PG M C E L /\\ BetS D L E /\\ BetS L M A /\\ Per D L A /\\ EF A B F G B M L D)) by (conclude proposition_47B);destruct Tf as [M[L]];spliter.",
            "VernacExtend",
            "850513455678d629d5a962d0ea4a3b8da3583256"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (nCol A C B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
        ],
        [
            "assert (Triangle A C B) by (conclude_def Triangle ).",
            "VernacExtend",
            "be35450d79b2ec7ec0258c474916f7b9e6560530"
        ],
        [
            "assert (Per C A B) by (conclude lemma_8_2).",
            "VernacExtend",
            "581a2ac7aa69a977dddccc1b6608972b8cf95025"
        ],
        [
            "assert (SQ C B D E) by (conclude lemma_squareflip).",
            "VernacExtend",
            "8e6497eb385c9ab02926bd69d5b79b2a9008c0b4"
        ],
        [
            "assert (TS D B C A) by (conclude lemma_oppositesideflip).",
            "VernacExtend",
            "be2aed0cda844d833e8c1f3c61296cb169c598e6"
        ],
        [
            "assert (PG B C E D) by (conclude lemma_squareparallelogram).",
            "VernacExtend",
            "6e85b6a042d46999eb57f3d44a973dfb2b3b3ea8"
        ],
        [
            "assert (Par B C E D) by (conclude_def PG ).",
            "VernacExtend",
            "a6a12c800fe6d2714d3034e6af7e7d6e2e291b15"
        ],
        [
            "assert (TP B C E D) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "4a972e0b1e4104e9aae84a65bd836fad44e77e5b"
        ],
        [
            "assert (OS E D B C) by (conclude_def TP ).",
            "VernacExtend",
            "604f41de3a21ecf74c762f1a0a7284655159d907"
        ],
        [
            "assert (TS E B C A) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "cb53a9ab4c499ea37ef544b59be0adc345c044d6"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists m l, (PG C m l E /\\ BetS C m B /\\ PG m B D l /\\ BetS E l D /\\ BetS l m A /\\ Per E l A /\\ EF A C K H C m l E)) by (conclude proposition_47B);destruct Tf as [m[l]];spliter.",
            "VernacExtend",
            "0ac77edfd41359460cd290a06a0df97ce214e43e"
        ],
        [
            "assert (neq E D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8953521083819802a3146a18d02061c64859cca"
        ],
        [
            "assert (neq D E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "442089e1669e0153e6cbac0113cb9338319b92ca"
        ],
        [
            "assert (Col E l D) by (conclude_def Col ).",
            "VernacExtend",
            "f58cdbb482375e13ab4462aa1e707feb37a09ee7"
        ],
        [
            "assert (Col D L E) by (conclude_def Col ).",
            "VernacExtend",
            "786056280db1aa25b062f54217af5e22b5023b3e"
        ],
        [
            "assert (Col D E L) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5a4b86e26a1502f38adead25d251daaf3403799d"
        ],
        [
            "assert (Col D E l) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c650c8b1ffba742eb8a6c2882af4418c213a8b8f"
        ],
        [
            "assert (Col E l L) by (conclude lemma_collinear4).",
            "VernacExtend",
            "0da91b3b37df507e8f8932c28545bcf8e98668b6"
        ],
        [
            "assert (neq L E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "eeca2fbd19755e36251a55b3a06b00bc50e23833"
        ],
        [
            "assert (neq E L) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "e2a5004b9dd188e8e719dd58f57ad52630c514cc"
        ],
        [
            "assert (Per E L A) by (conclude lemma_collinearright).",
            "VernacExtend",
            "49bcd52bff35eaab4ed7e48c2125aadb8495a6e6"
        ],
        [
            "assert (eq l L) by (conclude lemma_droppedperpendicularunique).",
            "VernacExtend",
            "7b20c940f621690da3ea4baedbfcee0017e5c03f"
        ],
        [
            "assert (eq L l) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "980ee7f8194672cab436a1c6fc798a41e6de9614"
        ],
        [
            "assert (BetS L m A) by (conclude cn_equalitysub).",
            "VernacExtend",
            "5660bc2c7f44dbac5b6f16d5193045941ee818ff"
        ],
        [
            "assert (BetS C M B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "9c3e998f4dc7aa69650a371555ca7d6d654d7af5"
        ],
        [
            "assert (Col L m A) by (conclude_def Col ).",
            "VernacExtend",
            "0242019f003d6b561888640e1dcbc52a418c4379"
        ],
        [
            "assert (Col L M A) by (conclude_def Col ).",
            "VernacExtend",
            "416f8b2ed15af42f48f420e944ea4fef057369fa"
        ],
        [
            "assert (Col L A m) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "1faa5087949476954f660d6c3cbdbad4dcbe6081"
        ],
        [
            "assert (Col L A M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "33839e579489befb27a21bb483480954d5caa19c"
        ],
        [
            "assert (neq L A) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "0a7f114577e6a9642dbdd0735c928ea5506eceb5"
        ],
        [
            "assert (Col A m M) by (conclude lemma_collinear4).",
            "VernacExtend",
            "c581af00105e4adc5936a7b11f6627fad64a6be3"
        ],
        [
            "assert (Col M m A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "801362ce1ddf9381f94c675ca99b914b17f1619b"
        ],
        [
            "assert (Col B M C) by (conclude_def Col ).",
            "VernacExtend",
            "48d3455391aa6042e4c0824a684611b5af7c8a81"
        ],
        [
            "assert (Col C B M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c4e234e367413ef16013499457a5aa51ac86ab40"
        ],
        [
            "assert (Col C m B) by (conclude_def Col ).",
            "VernacExtend",
            "61d5d46f8b1319be3761dd36569ce93c935812ab"
        ],
        [
            "assert (Col C B m) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ee446bb636cb698f97c13b021cceb46a6939fb9b"
        ],
        [
            "assert (neq C B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "7afd9e17666f6170d930709a4c01bc187dec111d"
        ],
        [
            "assert (Col B M m) by (conclude lemma_collinear4).",
            "VernacExtend",
            "2a516705ca22b1aae3ae2d92c75b9d7c37d15d49"
        ],
        [
            "assert (Col M m B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "a57896226fc7be5e777dffa39f7f31a79658ff1e"
        ],
        [
            "assert (~ neq M m).",
            "VernacExtend",
            "d3592c070aea4e8b32a2b22054e414e9b9e9625f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col m M A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "2c0376968be23d25d97df48f1eb027406193324a"
        ],
        [
            "assert (Col m M B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "46b0a5f5e1f90fd0816f6133b77f088bc111792c"
        ],
        [
            "assert (neq m M) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "464c7761273a11f187c9ad5ae1a1f11905a929f9"
        ],
        [
            "assert (Col M A B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "a94e58281b17179db0e937c384fbe78400d4fe94"
        ],
        [
            "assert (Col M B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f40e78396657be1d3df5d98ddbe138067441fabc"
        ],
        [
            "assert (Col M B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3e5a173ee8bef813d80d294005382973eb64e719"
        ],
        [
            "assert (neq M B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "13ca07d5e2adcd810a4cc59253eb6651cd915e69"
        ],
        [
            "assert (Col B A C) by (conclude lemma_collinear4).",
            "VernacExtend",
            "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (EF A C K H C M l E) by (conclude cn_equalitysub).",
            "VernacExtend",
            "e4bf3927668de0cc56ae74b1ac63b490ba9922e6"
        ],
        [
            "assert (EF A C K H C M L E) by (conclude cn_equalitysub).",
            "VernacExtend",
            "e7448970a3e91f4fbde82ad2a0588481274e79e8"
        ],
        [
            "assert (EF A C K H M C E L) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "3a0650182fc1bcd8dd19ff4a63ce4f1d9534b2c9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_47",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M L, (PG B M L D /\\ BetS B M C /\\ PG M C E L /\\ BetS D L E /\\ BetS L M A /\\ Per D L A /\\ EF A B F G B M L D)) by (conclude proposition_47B);destruct Tf as [M[L]];spliter.",
                        "VernacExtend",
                        "850513455678d629d5a962d0ea4a3b8da3583256"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle A C B) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "be35450d79b2ec7ec0258c474916f7b9e6560530"
                    ]
                },
                {
                    "command": [
                        "assert (Per C A B) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "581a2ac7aa69a977dddccc1b6608972b8cf95025"
                    ]
                },
                {
                    "command": [
                        "assert (SQ C B D E) by (conclude lemma_squareflip).",
                        "VernacExtend",
                        "8e6497eb385c9ab02926bd69d5b79b2a9008c0b4"
                    ]
                },
                {
                    "command": [
                        "assert (TS D B C A) by (conclude lemma_oppositesideflip).",
                        "VernacExtend",
                        "be2aed0cda844d833e8c1f3c61296cb169c598e6"
                    ]
                },
                {
                    "command": [
                        "assert (PG B C E D) by (conclude lemma_squareparallelogram).",
                        "VernacExtend",
                        "6e85b6a042d46999eb57f3d44a973dfb2b3b3ea8"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C E D) by (conclude_def PG ).",
                        "VernacExtend",
                        "a6a12c800fe6d2714d3034e6af7e7d6e2e291b15"
                    ]
                },
                {
                    "command": [
                        "assert (TP B C E D) by (conclude lemma_paralleldef2B).",
                        "VernacExtend",
                        "4a972e0b1e4104e9aae84a65bd836fad44e77e5b"
                    ]
                },
                {
                    "command": [
                        "assert (OS E D B C) by (conclude_def TP ).",
                        "VernacExtend",
                        "604f41de3a21ecf74c762f1a0a7284655159d907"
                    ]
                },
                {
                    "command": [
                        "assert (TS E B C A) by (conclude lemma_planeseparation).",
                        "VernacExtend",
                        "cb53a9ab4c499ea37ef544b59be0adc345c044d6"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists m l, (PG C m l E /\\ BetS C m B /\\ PG m B D l /\\ BetS E l D /\\ BetS l m A /\\ Per E l A /\\ EF A C K H C m l E)) by (conclude proposition_47B);destruct Tf as [m[l]];spliter.",
                        "VernacExtend",
                        "0ac77edfd41359460cd290a06a0df97ce214e43e"
                    ]
                },
                {
                    "command": [
                        "assert (neq E D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8953521083819802a3146a18d02061c64859cca"
                    ]
                },
                {
                    "command": [
                        "assert (neq D E) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "442089e1669e0153e6cbac0113cb9338319b92ca"
                    ]
                },
                {
                    "command": [
                        "assert (Col E l D) by (conclude_def Col ).",
                        "VernacExtend",
                        "f58cdbb482375e13ab4462aa1e707feb37a09ee7"
                    ]
                },
                {
                    "command": [
                        "assert (Col D L E) by (conclude_def Col ).",
                        "VernacExtend",
                        "786056280db1aa25b062f54217af5e22b5023b3e"
                    ]
                },
                {
                    "command": [
                        "assert (Col D E L) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "5a4b86e26a1502f38adead25d251daaf3403799d"
                    ]
                },
                {
                    "command": [
                        "assert (Col D E l) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c650c8b1ffba742eb8a6c2882af4418c213a8b8f"
                    ]
                },
                {
                    "command": [
                        "assert (Col E l L) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "0da91b3b37df507e8f8932c28545bcf8e98668b6"
                    ]
                },
                {
                    "command": [
                        "assert (neq L E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "eeca2fbd19755e36251a55b3a06b00bc50e23833"
                    ]
                },
                {
                    "command": [
                        "assert (neq E L) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "e2a5004b9dd188e8e719dd58f57ad52630c514cc"
                    ]
                },
                {
                    "command": [
                        "assert (Per E L A) by (conclude lemma_collinearright).",
                        "VernacExtend",
                        "49bcd52bff35eaab4ed7e48c2125aadb8495a6e6"
                    ]
                },
                {
                    "command": [
                        "assert (eq l L) by (conclude lemma_droppedperpendicularunique).",
                        "VernacExtend",
                        "7b20c940f621690da3ea4baedbfcee0017e5c03f"
                    ]
                },
                {
                    "command": [
                        "assert (eq L l) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "980ee7f8194672cab436a1c6fc798a41e6de9614"
                    ]
                },
                {
                    "command": [
                        "assert (BetS L m A) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "5660bc2c7f44dbac5b6f16d5193045941ee818ff"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C M B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "9c3e998f4dc7aa69650a371555ca7d6d654d7af5"
                    ]
                },
                {
                    "command": [
                        "assert (Col L m A) by (conclude_def Col ).",
                        "VernacExtend",
                        "0242019f003d6b561888640e1dcbc52a418c4379"
                    ]
                },
                {
                    "command": [
                        "assert (Col L M A) by (conclude_def Col ).",
                        "VernacExtend",
                        "416f8b2ed15af42f48f420e944ea4fef057369fa"
                    ]
                },
                {
                    "command": [
                        "assert (Col L A m) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "1faa5087949476954f660d6c3cbdbad4dcbe6081"
                    ]
                },
                {
                    "command": [
                        "assert (Col L A M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "33839e579489befb27a21bb483480954d5caa19c"
                    ]
                },
                {
                    "command": [
                        "assert (neq L A) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "0a7f114577e6a9642dbdd0735c928ea5506eceb5"
                    ]
                },
                {
                    "command": [
                        "assert (Col A m M) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "c581af00105e4adc5936a7b11f6627fad64a6be3"
                    ]
                },
                {
                    "command": [
                        "assert (Col M m A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "801362ce1ddf9381f94c675ca99b914b17f1619b"
                    ]
                },
                {
                    "command": [
                        "assert (Col B M C) by (conclude_def Col ).",
                        "VernacExtend",
                        "48d3455391aa6042e4c0824a684611b5af7c8a81"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c4e234e367413ef16013499457a5aa51ac86ab40"
                    ]
                },
                {
                    "command": [
                        "assert (Col C m B) by (conclude_def Col ).",
                        "VernacExtend",
                        "61d5d46f8b1319be3761dd36569ce93c935812ab"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B m) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ee446bb636cb698f97c13b021cceb46a6939fb9b"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "7afd9e17666f6170d930709a4c01bc187dec111d"
                    ]
                },
                {
                    "command": [
                        "assert (Col B M m) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "2a516705ca22b1aae3ae2d92c75b9d7c37d15d49"
                    ]
                },
                {
                    "command": [
                        "assert (Col M m B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "a57896226fc7be5e777dffa39f7f31a79658ff1e"
                    ]
                },
                {
                    "command": [
                        "assert (~ neq M m).",
                        "VernacExtend",
                        "d3592c070aea4e8b32a2b22054e414e9b9e9625f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col m M A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "2c0376968be23d25d97df48f1eb027406193324a"
                    ]
                },
                {
                    "command": [
                        "assert (Col m M B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "46b0a5f5e1f90fd0816f6133b77f088bc111792c"
                    ]
                },
                {
                    "command": [
                        "assert (neq m M) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "464c7761273a11f187c9ad5ae1a1f11905a929f9"
                    ]
                },
                {
                    "command": [
                        "assert (Col M A B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "a94e58281b17179db0e937c384fbe78400d4fe94"
                    ]
                },
                {
                    "command": [
                        "assert (Col M B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f40e78396657be1d3df5d98ddbe138067441fabc"
                    ]
                },
                {
                    "command": [
                        "assert (Col M B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3e5a173ee8bef813d80d294005382973eb64e719"
                    ]
                },
                {
                    "command": [
                        "assert (neq M B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "13ca07d5e2adcd810a4cc59253eb6651cd915e69"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "f3eed40a6b4eae7191d8ca2c58e9bf0a64032a6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (EF A C K H C M l E) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "e4bf3927668de0cc56ae74b1ac63b490ba9922e6"
                    ]
                },
                {
                    "command": [
                        "assert (EF A C K H C M L E) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "e7448970a3e91f4fbde82ad2a0588481274e79e8"
                    ]
                },
                {
                    "command": [
                        "assert (EF A C K H M C E L) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "3a0650182fc1bcd8dd19ff4a63ce4f1d9534b2c9"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}