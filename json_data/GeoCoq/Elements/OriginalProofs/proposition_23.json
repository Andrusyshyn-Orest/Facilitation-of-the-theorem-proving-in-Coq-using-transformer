{
    "filename": "Elements/OriginalProofs/proposition_23.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_20.",
            "VernacRequire",
            "f3b3b2cebd8ae9e572b7319bcb7831f571f27732"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_TGsymmetric.",
            "VernacRequire",
            "084bd7a9e4ac03a7a97e28d8ffce34f7d86e085a"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_TGflip.",
            "VernacRequire",
            "6de86c086cfa11678cbbc168bd6e95ecf5796922"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_22.",
            "VernacRequire",
            "71b762aafbe3a929249422ab9e7b015f6fd2531b"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_23 : forall A B C D E, neq A B -> nCol D C E -> exists X Y, Out A B Y /\\ CongA X A Y D C E.",
            "VernacStartTheoremProof",
            "4d19db3cce573a83b2d70d16c91ee4f7158094c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~ Col E C D).",
            "VernacExtend",
            "ba398fa019b01554eebb7f35545cbee615d66a94"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col D C E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c1620443af91b2346158035f804b887364e0f309"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col C E D).",
            "VernacExtend",
            "0f708cd06e2f149202cc3c3eb8ece0118ee8e125"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col D C E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c1620443af91b2346158035f804b887364e0f309"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Triangle D C E) by (conclude_def Triangle ).",
            "VernacExtend",
            "23bd527c928c54364b0b97651b7329d1d75284e5"
        ],
        [
            "assert (Triangle C E D) by (conclude_def Triangle ).",
            "VernacExtend",
            "f9af4903088c09a9fb6bcd6ac8e81cfef5111e4a"
        ],
        [
            "assert (Triangle E C D) by (conclude_def Triangle ).",
            "VernacExtend",
            "b9c9f6a70170f54e46044898c8f9c5cf1f67687b"
        ],
        [
            "assert (TG C D D E C E) by (conclude proposition_20).",
            "VernacExtend",
            "f403958c714aac885ffd395415c5bed15420232d"
        ],
        [
            "assert (TG C E E D C D) by (conclude proposition_20).",
            "VernacExtend",
            "04f15a3c4a261ce38748dd6e3a4ef436cac1a754"
        ],
        [
            "assert (TG E C C D E D) by (conclude proposition_20).",
            "VernacExtend",
            "17274a3c09b5637bcaf3c8b74ad3d92f100a3544"
        ],
        [
            "assert (TG C D E C E D) by (conclude lemma_TGsymmetric).",
            "VernacExtend",
            "58aa4f9f46013249194e3d6df4ef92ab3f1f2fba"
        ],
        [
            "assert (TG C D D E E C) by (forward_using lemma_TGflip).",
            "VernacExtend",
            "9c360d32bb11ed4bd8c3c9fbacd7da3a3155432e"
        ],
        [
            "assert (TG D E C D E C) by (conclude lemma_TGsymmetric).",
            "VernacExtend",
            "ff430e5f816e3f9963239e3b28cffc4033affd25"
        ],
        [
            "assert (TG E D C D E C) by (forward_using lemma_TGflip).",
            "VernacExtend",
            "9494a59e3054272f29448a59fcaae1e2f2cacc52"
        ],
        [
            "assert (TG C D E D E C) by (conclude lemma_TGsymmetric).",
            "VernacExtend",
            "2b783683b540690fbf9b6eb2f8c2fb07bfae1b21"
        ],
        [
            "assert (TG E C E D C D) by (forward_using lemma_TGflip).",
            "VernacExtend",
            "871f9892f9c36505929f644e166f43f8ca404caf"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists G F, (Cong A G E C /\\ Cong A F C D /\\ Cong G F E D /\\ Out A B G /\\ Triangle A G F)) by (conclude proposition_22);destruct Tf as [G[F]];spliter.",
            "VernacExtend",
            "d294982c31d3f50332cd52f5ba49bf9dbad02c13"
        ],
        [
            "assert (Cong A G C E) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "4b4aef283e33417fe1b86b07a0ae9de65389a5a4"
        ],
        [
            "assert (Cong F G D E) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "d478b867d8da5a1f646a89929bfe4c721e8fb0f8"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (eq F F) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
        ],
        [
            "assert (eq G G) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
        ],
        [
            "assert (~ eq C E).",
            "VernacExtend",
            "187d8915955e66aa534399418fd4a40c29ebd27a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col D C E) by (conclude_def Col ).",
            "VernacExtend",
            "55314cb21ecc2e4126d2b5439e0c20ca9cc72792"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq C D).",
            "VernacExtend",
            "c49a76d05148cf854b03364e141132e91f9b6596"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C D E) by (conclude_def Col ).",
            "VernacExtend",
            "94eaca8cb4e0c55a74915594c7c2340d76c5e252"
        ],
        [
            "assert (Col D C E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c1620443af91b2346158035f804b887364e0f309"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out C E E) by (conclude lemma_ray4).",
            "VernacExtend",
            "e86a9899b3899a5975bcc366135d4e8e13b3da1c"
        ],
        [
            "assert (Out C D D) by (conclude lemma_ray4).",
            "VernacExtend",
            "5edaa1cc05e74baaf8ca5eff45ab4cd858d1f9e7"
        ],
        [
            "assert (~ Col F A G).",
            "VernacExtend",
            "27d34ff69cd8c7fc83bdbb8b1f64ccaded3dcdb8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A G F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4b8a5c15ab9b546306bab07e8be5ade6da58911c"
        ],
        [
            "assert (nCol A G F) by (conclude_def Triangle ).",
            "VernacExtend",
            "f007048a4918dc2147d01195e76a6e546506e12e"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq A F).",
            "VernacExtend",
            "2a8a2ec0944a2f57abf00f3ce82d3cd52ea0ca50"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A F G) by (conclude_def Col ).",
            "VernacExtend",
            "516e2c3311cbcbb1558dc9892119ec884ada1828"
        ],
        [
            "assert (Col F A G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "efa973f6215a67988e3214094b0504ae86abd3b0"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out A F F) by (conclude lemma_ray4).",
            "VernacExtend",
            "ef3141479492a223e611ab450b5c0361b4e0ed1d"
        ],
        [
            "assert (~ eq A G).",
            "VernacExtend",
            "186a1b836bcf89fe9c0e1cc77c2753f9c1fe575d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A G F) by (conclude_def Col ).",
            "VernacExtend",
            "cc9428234887f6df4b37c25222fea84403a01060"
        ],
        [
            "assert (Col F A G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "efa973f6215a67988e3214094b0504ae86abd3b0"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out A G G) by (conclude lemma_ray4).",
            "VernacExtend",
            "d07a1ee0327fb4a7f0023f9352151624867e4f88"
        ],
        [
            "assert (CongA F A G D C E) by (conclude_def CongA ).",
            "VernacExtend",
            "eba5642faad177caf7d80e634de2844d005a497a"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_23",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col E C D).",
                        "VernacExtend",
                        "ba398fa019b01554eebb7f35545cbee615d66a94"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c1620443af91b2346158035f804b887364e0f309"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C E D).",
                        "VernacExtend",
                        "0f708cd06e2f149202cc3c3eb8ece0118ee8e125"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c1620443af91b2346158035f804b887364e0f309"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle D C E) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "23bd527c928c54364b0b97651b7329d1d75284e5"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle C E D) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "f9af4903088c09a9fb6bcd6ac8e81cfef5111e4a"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle E C D) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "b9c9f6a70170f54e46044898c8f9c5cf1f67687b"
                    ]
                },
                {
                    "command": [
                        "assert (TG C D D E C E) by (conclude proposition_20).",
                        "VernacExtend",
                        "f403958c714aac885ffd395415c5bed15420232d"
                    ]
                },
                {
                    "command": [
                        "assert (TG C E E D C D) by (conclude proposition_20).",
                        "VernacExtend",
                        "04f15a3c4a261ce38748dd6e3a4ef436cac1a754"
                    ]
                },
                {
                    "command": [
                        "assert (TG E C C D E D) by (conclude proposition_20).",
                        "VernacExtend",
                        "17274a3c09b5637bcaf3c8b74ad3d92f100a3544"
                    ]
                },
                {
                    "command": [
                        "assert (TG C D E C E D) by (conclude lemma_TGsymmetric).",
                        "VernacExtend",
                        "58aa4f9f46013249194e3d6df4ef92ab3f1f2fba"
                    ]
                },
                {
                    "command": [
                        "assert (TG C D D E E C) by (forward_using lemma_TGflip).",
                        "VernacExtend",
                        "9c360d32bb11ed4bd8c3c9fbacd7da3a3155432e"
                    ]
                },
                {
                    "command": [
                        "assert (TG D E C D E C) by (conclude lemma_TGsymmetric).",
                        "VernacExtend",
                        "ff430e5f816e3f9963239e3b28cffc4033affd25"
                    ]
                },
                {
                    "command": [
                        "assert (TG E D C D E C) by (forward_using lemma_TGflip).",
                        "VernacExtend",
                        "9494a59e3054272f29448a59fcaae1e2f2cacc52"
                    ]
                },
                {
                    "command": [
                        "assert (TG C D E D E C) by (conclude lemma_TGsymmetric).",
                        "VernacExtend",
                        "2b783683b540690fbf9b6eb2f8c2fb07bfae1b21"
                    ]
                },
                {
                    "command": [
                        "assert (TG E C E D C D) by (forward_using lemma_TGflip).",
                        "VernacExtend",
                        "871f9892f9c36505929f644e166f43f8ca404caf"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists G F, (Cong A G E C /\\ Cong A F C D /\\ Cong G F E D /\\ Out A B G /\\ Triangle A G F)) by (conclude proposition_22);destruct Tf as [G[F]];spliter.",
                        "VernacExtend",
                        "d294982c31d3f50332cd52f5ba49bf9dbad02c13"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A G C E) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "4b4aef283e33417fe1b86b07a0ae9de65389a5a4"
                    ]
                },
                {
                    "command": [
                        "assert (Cong F G D E) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "d478b867d8da5a1f646a89929bfe4c721e8fb0f8"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (eq F F) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
                    ]
                },
                {
                    "command": [
                        "assert (eq G G) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C E).",
                        "VernacExtend",
                        "187d8915955e66aa534399418fd4a40c29ebd27a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C E) by (conclude_def Col ).",
                        "VernacExtend",
                        "55314cb21ecc2e4126d2b5439e0c20ca9cc72792"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C D).",
                        "VernacExtend",
                        "c49a76d05148cf854b03364e141132e91f9b6596"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D E) by (conclude_def Col ).",
                        "VernacExtend",
                        "94eaca8cb4e0c55a74915594c7c2340d76c5e252"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c1620443af91b2346158035f804b887364e0f309"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out C E E) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "e86a9899b3899a5975bcc366135d4e8e13b3da1c"
                    ]
                },
                {
                    "command": [
                        "assert (Out C D D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "5edaa1cc05e74baaf8ca5eff45ab4cd858d1f9e7"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col F A G).",
                        "VernacExtend",
                        "27d34ff69cd8c7fc83bdbb8b1f64ccaded3dcdb8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A G F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4b8a5c15ab9b546306bab07e8be5ade6da58911c"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A G F) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "f007048a4918dc2147d01195e76a6e546506e12e"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A F).",
                        "VernacExtend",
                        "2a8a2ec0944a2f57abf00f3ce82d3cd52ea0ca50"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A F G) by (conclude_def Col ).",
                        "VernacExtend",
                        "516e2c3311cbcbb1558dc9892119ec884ada1828"
                    ]
                },
                {
                    "command": [
                        "assert (Col F A G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "efa973f6215a67988e3214094b0504ae86abd3b0"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out A F F) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "ef3141479492a223e611ab450b5c0361b4e0ed1d"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A G).",
                        "VernacExtend",
                        "186a1b836bcf89fe9c0e1cc77c2753f9c1fe575d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A G F) by (conclude_def Col ).",
                        "VernacExtend",
                        "cc9428234887f6df4b37c25222fea84403a01060"
                    ]
                },
                {
                    "command": [
                        "assert (Col F A G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "efa973f6215a67988e3214094b0504ae86abd3b0"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out A G G) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "d07a1ee0327fb4a7f0023f9352151624867e4f88"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F A G D C E) by (conclude_def CongA ).",
                        "VernacExtend",
                        "eba5642faad177caf7d80e634de2844d005a497a"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}