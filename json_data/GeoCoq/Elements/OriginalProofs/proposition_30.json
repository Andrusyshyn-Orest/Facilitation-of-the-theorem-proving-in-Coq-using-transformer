{
    "filename": "Elements/OriginalProofs/proposition_30.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_30helper.",
            "VernacRequire",
            "95f49eb5a16201af9da3a5f78e53f58344eb34ca"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_crossimpliesopposite.",
            "VernacRequire",
            "a08dce83a43e7c20f62cfc791dcf1b1024f5ea6a"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_30A.",
            "VernacRequire",
            "733c01db611c7282e1f76e0932d354e942bec2e8"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_euclidean}.",
            "VernacContext",
            "46d5a1bab5cb652e851ee1112917f2bf32229649"
        ],
        [
            "Lemma parnotmeet: forall A B C D, Par A B C D -> ~ Meet A B C D.",
            "VernacStartTheoremProof",
            "801819f01ff7149b6f70e657d12753629e760a48"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "conclude_def Par.",
            "VernacExtend",
            "f080a6cfe3c58900a374bb8b24744a77c666adf9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proposition_30 : forall A B C D E F G H K, Par A B E F -> Par C D E F -> BetS G H K -> Col A B G -> Col E F H -> Col C D K -> neq A G -> neq E H -> neq C K -> Par A B C D.",
            "VernacStartTheoremProof",
            "5a4efc80657dbec96c5e2299ea06323c32377c1e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists b, (BetS A G b /\\ Cong G b A G)) by (conclude lemma_extension);destruct Tf as [b];spliter.",
            "VernacExtend",
            "64302a5390020df76174a871b024219bc0046a3d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists f, (BetS E H f /\\ Cong H f E H)) by (conclude lemma_extension);destruct Tf as [f];spliter.",
            "VernacExtend",
            "e36772345e2fb5fb356421517bdda55141d3cb31"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists d, (BetS C K d /\\ Cong K d C K)) by (conclude lemma_extension);destruct Tf as [d];spliter.",
            "VernacExtend",
            "20950f11ca430a82bf9d0863370512955297c364"
        ],
        [
            "assert (nCol C D E) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "ded593752b364106be36d8b5638ec7b6211ede0b"
        ],
        [
            "assert (neq C D) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "3c15a0cca9b4ed2a86186532871fa9f0d4bd5578"
        ],
        [
            "assert (Col A G b) by (conclude_def Col ).",
            "VernacExtend",
            "5dd9cc89d79649c7f2c869bc1b470562508812c5"
        ],
        [
            "assert (Col G A b) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e0b037c07d52f6d34e1bcceac24ecd27ae3495bd"
        ],
        [
            "assert (Col G A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7faaa20e85da645b8560f5681321c46156e4943c"
        ],
        [
            "assert (neq G A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "e2791ae9c412727db671b58f53b6b23174e66732"
        ],
        [
            "assert (Col A b B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "a4b6bcf36d1c872c56ae89eb0a552706cceaf18b"
        ],
        [
            "assert (Col B A b) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b3e381c0a7e2add85f3e715f9e14d00b8eba91d7"
        ],
        [
            "assert (Par E F A B) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "149eb2e15db8604c37b584e8fb80e1a01b119e81"
        ],
        [
            "assert (Par E F B A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "9fb78efc690d574908ec0e4de023d16c19e0ddd8"
        ],
        [
            "assert (neq A b) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "0b3dafa03b6593609e289e77522adb4a147d2244"
        ],
        [
            "assert (neq b A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "4c2a11538922a7e9e94db1ade1849affe3f4079c"
        ],
        [
            "assert (Par E F b A) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "dfb1a52b1539e5d6432a8a58aebb184fa6985703"
        ],
        [
            "assert (Par E F A b) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "5cbf0c7883fa711fd04b3dd6fe691aed3ed887fa"
        ],
        [
            "assert (Par A b E F) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "71a0b1e0af1f5dab035f4275b348fe63d2f2d396"
        ],
        [
            "assert (Col E H f) by (conclude_def Col ).",
            "VernacExtend",
            "d2709004bbc8b275cf9334720c48e697c2978ea3"
        ],
        [
            "assert (Col H E f) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "59aa5fe43d197b62840e37cbe061c4ded637c63f"
        ],
        [
            "assert (Col H E F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "a3df609398a7b1a09a027ed8f74232bfb7545f39"
        ],
        [
            "assert (neq H E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "37b87d1662cb842d5199ef2777ef4add1c0b5127"
        ],
        [
            "assert (Col E f F) by (conclude lemma_collinear4).",
            "VernacExtend",
            "8fb6ad448daf7b03945ad9a89a853c30d59aecb1"
        ],
        [
            "assert (Col F E f) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b70266202d1559563276939f4558675fd37a5d9a"
        ],
        [
            "assert (neq E f) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "24b5e50d5267596c5d85e7b4a3a3c9701b987d91"
        ],
        [
            "assert (neq f E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "b23446e390b6462d08844159efa365afa900ef51"
        ],
        [
            "assert (Par A b F E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "2fb41e03e1ea0abb88e8f3bf91401f75933cda2d"
        ],
        [
            "assert (Par A b f E) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "b5a915caf358708cf87e942d703332ca287ea496"
        ],
        [
            "assert (Par A b E f) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "a37d02095cd35b99c78552c82f1a0eea2d044956"
        ],
        [
            "assert (Col C K d) by (conclude_def Col ).",
            "VernacExtend",
            "3cf059125e575b7f6f2315fffd562dd27e6fe309"
        ],
        [
            "assert (Col K C d) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c8dfd2090afdb0937e3902f7f9e1946fe01e8e7a"
        ],
        [
            "assert (Col K C D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "535af6a26198904241ae9131d9e00a34809e1ebe"
        ],
        [
            "assert (neq K C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "545f1f4e59cc8d8108e1e5e1a292a7a62b4da43b"
        ],
        [
            "assert (Col C d D) by (conclude lemma_collinear4).",
            "VernacExtend",
            "6191bc920ec6409bffc26bd3a85ff9d32ee271fe"
        ],
        [
            "assert (Col D C d) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0735d58abccdbb737368951b76756af643d1f05b"
        ],
        [
            "assert (Par E F C D) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "5904982b120ac3e8bca04b5e065b5801891be905"
        ],
        [
            "assert (Par E F D C) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "86487e8cf296afcb04ea69c086368d8197b3e714"
        ],
        [
            "assert (neq C d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b926c6cf68213af3f8458567b27455600b6abdb1"
        ],
        [
            "assert (neq d C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c2555f4e7f257794e22f1ffad3cf4f3018b1ccb0"
        ],
        [
            "assert (Par E F d C) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "3cc1cf3bdf5b196eadd8396092b951d4757fcc4c"
        ],
        [
            "assert (Par E F C d) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "fad7e7b619cb7d54df69f25f618c7896dc488918"
        ],
        [
            "assert (Par C d E F) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "355ee52343b142abc8e30293ce6a6ddb677a1e48"
        ],
        [
            "assert (Par C d F E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "4c47a7a62488e72b223da2e617693c718af73080"
        ],
        [
            "assert (Par C d f E) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "e06a37bad71c459c8e7c079919150cfc4f66dede"
        ],
        [
            "assert (Par C d E f) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "6f8391f56ff8b2d0ee55cf7a6a07d8ab628b2bb9"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (Col E H H) by (conclude_def Col ).",
            "VernacExtend",
            "541aea1ce061e22c58bc0abd6a628fb45332174c"
        ],
        [
            "assert (Col A b G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "a659badee1ef4dfefb86405dc21053b2e8d22bef"
        ],
        [
            "assert (Col E f H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b668ddaa19266b448716e6d8a61e9180dad4f601"
        ],
        [
            "assert (Col f E H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5cf5d5daad78bad6aa467c1ff213bd6ee1960275"
        ],
        [
            "assert (Par A b f E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "449d7439a343a25946470eee9990a5b965ac87cb"
        ],
        [
            "assert (Par A b H E) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "e4a1dc41d8cc8843327ab00539249b95e3487f8f"
        ],
        [
            "assert (Par H E A b) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "8a21a37e7248b677635a1f7bf40cc515dbfd3f24"
        ],
        [
            "assert (Par E H b A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "2bea96650fdeead1cbf6bbfa8350aace12a3056b"
        ],
        [
            "assert (Col b A G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5e046479f34b2f608959a4e5c35e7229089fc608"
        ],
        [
            "assert (Par E H G A) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "67b1b2dd7c7f0a1f52df88abb557cc43fb86a14f"
        ],
        [
            "assert (Par E H A G) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "a987acb7e24c3c7003eead8d8fb45fa3c3f3625b"
        ],
        [
            "assert (Par A G E H) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "d05f29ed9c6ed9cf8f7b20267d1b505b325d8ccf"
        ],
        [
            "assert (Par C d f E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "8e9483f7985ab2254ffbbdacff02bd2673bd093f"
        ],
        [
            "assert (Col f E H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "5cf5d5daad78bad6aa467c1ff213bd6ee1960275"
        ],
        [
            "assert (Par C d H E) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "5c9af9c4394f911ce47828c40e95bdd87ee7fa02"
        ],
        [
            "assert (Par H E C d) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "0dbfc2e4934a1f1e99d7b6a7d077a202700a1bd3"
        ],
        [
            "assert (Par H E d C) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "1577e22e4ae2fde45862780e5b2af5b443cbff50"
        ],
        [
            "assert (Col C K d) by (conclude_def Col ).",
            "VernacExtend",
            "3cf059125e575b7f6f2315fffd562dd27e6fe309"
        ],
        [
            "assert (Col d C K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3ec91777b1b979d9efd2208c5516661ef92785e5"
        ],
        [
            "assert (neq C K) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "dccb403920e5595777cc43703592f07098695e55"
        ],
        [
            "assert (neq K C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "545f1f4e59cc8d8108e1e5e1a292a7a62b4da43b"
        ],
        [
            "assert (Par H E K C) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "774b299e7508346b20bebfae488a6192bfa04d5a"
        ],
        [
            "assert (Par E H C K) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "009191f6ff35ba8ff4f58bf8b471b4a1a97947ef"
        ],
        [
            "assert (TP E H C K) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "fed3b18f6ed0c42ea8f299f37222240edda4c8e6"
        ],
        [
            "assert (OS C K E H) by (conclude_def TP ).",
            "VernacExtend",
            "e38f92222481a3dea382cd33386911679bd7f152"
        ],
        [
            "assert (nCol E H K) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "7683ef469d098a57d2fa68f8b6f8b9e84ea283d7"
        ],
        [
            "assert (BetS K H G) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "5f54c9011a0cee827ae0639b45b6551a6690025f"
        ],
        [
            "assert (TS K E H G) by (conclude_def TS ).",
            "VernacExtend",
            "55dbb1807c1d3d4f05f282b40837b6eb7801f0d1"
        ],
        [
            "assert (TS C E H G) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "392fd70ef52862b2ca929f5dca693dd98d911288"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists Q, (BetS C Q G /\\ Col E H Q /\\ nCol E H C)) by (conclude_def TS );destruct Tf as [Q];spliter.",
            "VernacExtend",
            "f6fc4a397c2c8d6cfe31dbb7f1e506a6a18130f9"
        ],
        [
            "assert (Par E f C d) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "64091123c2959f241f65c7976afc8047002ce5c6"
        ],
        [
            "assert (TP E f C d) by (conclude lemma_paralleldef2B).",
            "VernacExtend",
            "b884bc1d9d5cb59804a07f8a20aacda092af0597"
        ],
        [
            "assert (OS C d E f) by (conclude_def TP ).",
            "VernacExtend",
            "f7f91d22de5400df14a3ed7b1f220917aaa1acbb"
        ],
        [
            "assert (OS d C E f) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "6e9a40271f15139db7341d527200f951dd3d6414"
        ],
        [
            "assert (Col E H f) by (conclude_def Col ).",
            "VernacExtend",
            "d2709004bbc8b275cf9334720c48e697c2978ea3"
        ],
        [
            "assert (Col H E f) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "59aa5fe43d197b62840e37cbe061c4ded637c63f"
        ],
        [
            "assert (Col H E Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "8799c0776caa9fa7b95b7f1ef64085a908ac3fe0"
        ],
        [
            "assert (Col E f Q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "70b7ebf7443e4afe21838f1a9aacf9f907ba1966"
        ],
        [
            "assert (nCol C E f) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "433a74f0b2f58b5e3017c96e60e490e3cc009b4f"
        ],
        [
            "assert (nCol E f C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "0c2ae1760ce16af739920c714caca1d3a163e318"
        ],
        [
            "assert (TS C E f G) by (conclude_def TS ).",
            "VernacExtend",
            "cc914c09b26081aa5771c4e21e3ba2c697fccfc0"
        ],
        [
            "assert (TS d E f G) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "074906f5cb4567220ebcf2a75611d88c41950d9f"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P, (BetS d P G /\\ Col E f P /\\ nCol E f d)) by (conclude_def TS );destruct Tf as [P];spliter.",
            "VernacExtend",
            "f889596905006137540dceb889f42d2e39fba2ce"
        ],
        [
            "assert (~ ~ (CR A f G H \\/ CR A E G H)).",
            "VernacExtend",
            "9f1c59a5455f032fa0e51406b76c2bedcfde113a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (CR A E G H) by (conclude lemma_30helper).",
            "VernacExtend",
            "549341ef4f348bb1d7cea95d222c4c8efb5fe4f0"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ ~ (CR C f K H \\/ CR C E K H)).",
            "VernacExtend",
            "5d24a6974e1df4f0a10220b38c029a5506f02cc9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (CR C E K H) by (conclude lemma_30helper).",
            "VernacExtend",
            "67a18a6eaa76d821042e96f2459630ebaf60dc1a"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Col F E H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "37b50006ae024356725348173f709b09ab460562"
        ],
        [
            "assert (Col B A G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "dfb63bcc139465b1f07969b6b87aa36803939eb6"
        ],
        [
            "assert (Par A B F E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "a99d2f2bd48157dc6ebdec58dbe73e39e7a17df7"
        ],
        [
            "assert (Par A B H E) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "c288c5d6d7c4ee4cba4ca34ab036ea968df10b5f"
        ],
        [
            "assert (Par A B E H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "f5d0bd0321760490579b5e71320ec6965e61db49"
        ],
        [
            "assert (Par E H A B) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "b5f6b33c588612f34b937856cd513779db958e14"
        ],
        [
            "assert (Par E H B A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "39d22cc91fcd4d8ed1507a74b8c417dd6bbbc5da"
        ],
        [
            "assert (Par E H G A) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "67b1b2dd7c7f0a1f52df88abb557cc43fb86a14f"
        ],
        [
            "assert (Par E H A G) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "a987acb7e24c3c7003eead8d8fb45fa3c3f3625b"
        ],
        [
            "assert (Par A G E H) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "d05f29ed9c6ed9cf8f7b20267d1b505b325d8ccf"
        ],
        [
            "assert (nCol A G H) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "2b2cefe78e610099392814eb60b646848a538920"
        ],
        [
            "assert (Par C D F E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "a1544db16bec41efde27c5cf7cbe9f579f1a0bf6"
        ],
        [
            "assert (Par C D H E) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "39491a79110bf6f5c931845a19efad58b86d40cb"
        ],
        [
            "assert (Par C D E H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "c947173652fd47ceb8066d8be01a1e95bca35f06"
        ],
        [
            "assert (Par E H C D) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "9d563afcc3f0de90b06cdfcf6169e753979f2175"
        ],
        [
            "assert (Par E H D C) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "bec526bfafb61e075209021eaca097dfe3185c24"
        ],
        [
            "assert (Col D C K) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7a0ab5bf24fee985af0bac742c034e0ac99763d0"
        ],
        [
            "assert (Par E H K C) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "34a70202b1c818cf0fe4b3d88e6a6b74fe2533d3"
        ],
        [
            "assert (Par E H C K) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "009191f6ff35ba8ff4f58bf8b471b4a1a97947ef"
        ],
        [
            "assert (Par C K E H) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "fa4a9033f331cd69033fdd4dd0896b9f4b93ed12"
        ],
        [
            "assert (nCol C K H) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "6471d39d51e60c624dca1a351f6f8516e44c89c6"
        ],
        [
            "assert (nCol K H C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "a438e48264dc16cbb82fd785342fa87961710d1f"
        ],
        [
            "assert (nCol E H K) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "7683ef469d098a57d2fa68f8b6f8b9e84ea283d7"
        ],
        [
            "assert (Col E H f) by (conclude_def Col ).",
            "VernacExtend",
            "d2709004bbc8b275cf9334720c48e697c2978ea3"
        ],
        [
            "assert (neq H f) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "38da2c7760a72827b7ea16df8f62e308402e7bff"
        ],
        [
            "assert (neq f H) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "cc4448662a7861598ce258cbfc16ae1b92facccf"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (Col E H H) by (conclude_def Col ).",
            "VernacExtend",
            "541aea1ce061e22c58bc0abd6a628fb45332174c"
        ],
        [
            "assert (nCol f H K) by (conclude lemma_NChelper).",
            "VernacExtend",
            "3a019b850be939142c541c6874b48e8617bc8cca"
        ],
        [
            "assert (nCol K H f) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "23382ffb7f97241c85349006518f49d98e589076"
        ],
        [
            "assert (Col K H H) by (conclude_def Col ).",
            "VernacExtend",
            "6f59f9d1c34d6ef29ddf9253e7a00ada1bdce3df"
        ],
        [
            "assert (Par A b C d).",
            "VernacExtend",
            "a1dfc77226a288da04155beb6ee2138e01e8a7c7"
        ],
        [
            "by cases on (CR A f G H \\/ CR A E G H).",
            "VernacExtend",
            "6e42e54d083200abf373cea63a3b9aac7380fd6e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (TS A G H f) by (forward_using lemma_crossimpliesopposite).",
            "VernacExtend",
            "bc69482490c9e665ad0718b27b1357d6ea64666c"
        ],
        [
            "assert (Par A b C d).",
            "VernacExtend",
            "a1dfc77226a288da04155beb6ee2138e01e8a7c7"
        ],
        [
            "by cases on (CR C f K H \\/ CR C E K H).",
            "VernacExtend",
            "216c199c7448bc1d3acb8e5834dab691a33d52fd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (TS f H K C) by (forward_using lemma_crossimpliesopposite).",
            "VernacExtend",
            "0fccfbc942c3062df8c45f3b9e30d7e9cd5c2c54"
        ],
        [
            "assert (Par A b C d) by (apply (proposition_30A _ _ _ _ E f G H K);assumption).",
            "VernacExtend",
            "5b44e27a8ed0c352da223d4d1d60783201517883"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS C M E /\\ BetS K M H)) by (conclude_def CR );destruct Tf as [M];spliter.",
            "VernacExtend",
            "dc54513ba4f4b1e96561b5432cb0c39494b37a2a"
        ],
        [
            "assert (Col K M H) by (conclude_def Col ).",
            "VernacExtend",
            "36f9d8fad7fa93118a691126894af5a3226e29d0"
        ],
        [
            "assert (Col K H M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "47f3f3534c22f0ab8d7a5fea5fcf2bb6dcd92ddc"
        ],
        [
            "assert (BetS f H E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "d20325445447c06606e5b303cd6ca780a0a06088"
        ],
        [
            "assert (OS f C K H) by (conclude_def OS ).",
            "VernacExtend",
            "06ef9746a0ac8f0da37c5262a50088cea2b21d05"
        ],
        [
            "assert (eq K K) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "89ee1e712221f97ec5067c4595ba2f1f13d3c25c"
        ],
        [
            "assert (Col K H K) by (conclude_def Col ).",
            "VernacExtend",
            "a6863fb95c9b0975c89a51b4b254839047dec22d"
        ],
        [
            "assert (TS C K H d) by (conclude_def TS ).",
            "VernacExtend",
            "cc851dee39389cf91f336094f8302ec2e5ae995c"
        ],
        [
            "assert (TS f K H d) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "4479bdfc1905731ff5a63b62284ec88159eaa2eb"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists m, (BetS f m d /\\ Col K H m /\\ nCol K H f)) by (conclude_def TS );destruct Tf as [m];spliter.",
            "VernacExtend",
            "7ef8c8fdd40893760824fdbe229b45b49c11099d"
        ],
        [
            "assert (Par f E C d) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "26e8ce82f5b491dae1c699d61f43481920f28893"
        ],
        [
            "assert (~ Meet f E C d) by (auto using parnotmeet).",
            "VernacExtend",
            "d106bf9eb04723edcdca33fa9ab06487f50e8f35"
        ],
        [
            "assert (Col f H E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "6730fd51e4d497bd830bd4cbf3c4dff8a349003b"
        ],
        [
            "assert (neq f E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "e4dc30bf4a87f8aeb47df44c4f3d1658cd0cde0f"
        ],
        [
            "assert (neq f H) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "cc4448662a7861598ce258cbfc16ae1b92facccf"
        ],
        [
            "assert (neq K d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "487957b3458f1019676e38b679b2aeaec5e2222a"
        ],
        [
            "assert (Col H K m) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e64b56a7dc1f713a0a19cc953e7088ef2a1888c7"
        ],
        [
            "assert (BetS H m K) by (conclude lemma_collinearbetween).",
            "VernacExtend",
            "217acd59523656e7b35d0dea91a72568efb67e4e"
        ],
        [
            "assert (BetS K m H) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "2ab79d31ab25420b9821702eabb8008859edaecb"
        ],
        [
            "assert (BetS d m f) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "79e57116d58a00367b57b426f314d360e1fa04d4"
        ],
        [
            "assert (CR d f K H) by (conclude_def CR ).",
            "VernacExtend",
            "9d3ade273d46e0eaa69a88ca868cc154222a6b35"
        ],
        [
            "assert (nCol C K H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "c0bcd50c0db96dac1e7529f73285009458adfc90"
        ],
        [
            "assert (Col C K d) by (conclude_def Col ).",
            "VernacExtend",
            "3cf059125e575b7f6f2315fffd562dd27e6fe309"
        ],
        [
            "assert (neq d K) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "6d605a9dc623b36bc3c7cb549ee15a846f911baf"
        ],
        [
            "assert (Col C K K) by (conclude_def Col ).",
            "VernacExtend",
            "f44a23c5e831acc0cf507e53704631e63d7a8c8f"
        ],
        [
            "assert (nCol d K H) by (conclude lemma_NChelper).",
            "VernacExtend",
            "1a559b3726a084d77394d6019ac375613366bb29"
        ],
        [
            "assert (TS d H K f) by (forward_using lemma_crossimpliesopposite).",
            "VernacExtend",
            "63694aac11b439f8b20078588c5c99f9fde1348f"
        ],
        [
            "assert (Par d C E f) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "3df17c6b6bf32b4223f2aac8942239a24ab81e1e"
        ],
        [
            "assert (BetS d K C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "87cc437dc15e10de0604a8664edce71dc7b526f6"
        ],
        [
            "assert (TS f H K d) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "c6edf1dcd551cefa8d83c9691f273c1626261569"
        ],
        [
            "assert (Par A b d C).",
            "VernacExtend",
            "bb1d1e6d3bd5e53568a9bf0fdcd4131f26773a75"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "simple eapply proposition_30A.",
            "VernacExtend",
            "6eab84204086d7f22fa99883d3311c2f9e4fe65f"
        ],
        [
            "exact H40.",
            "VernacExtend",
            "e33a6a308cdfee3d4a4fd2cb9ba54cfb181b9713"
        ],
        [
            "exact H171.",
            "VernacExtend",
            "28dd580c1612fd30a30f3fabc66eb28af77f1981"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "exact H9.",
            "VernacExtend",
            "6afcdb5a3ddac99d13c019fefd4457c64d0b9ba5"
        ],
        [
            "exact H11.",
            "VernacExtend",
            "a042eadf777081a124ce4981cc2ec0c6477698a5"
        ],
        [
            "exact H172.",
            "VernacExtend",
            "b078d3a760b6a39406a8851e6615d0a9dfbfb755"
        ],
        [
            "exact H138.",
            "VernacExtend",
            "96d5595f41535da48a5054e9a37dbd3b37cd15a7"
        ],
        [
            "exact H173.",
            "VernacExtend",
            "5aea86766617eed3d48cca1688012c91ee0aaa94"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Par A b C d) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "4a0dbf95a6d92cf6770ab4e5d3eee7e42b04fc68"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Par A b C d).",
            "VernacExtend",
            "a1dfc77226a288da04155beb6ee2138e01e8a7c7"
        ],
        [
            "by cases on (CR C f K H \\/ CR C E K H).",
            "VernacExtend",
            "216c199c7448bc1d3acb8e5834dab691a33d52fd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS C M f /\\ BetS K M H)) by (conclude_def CR );destruct Tf as [M];spliter.",
            "VernacExtend",
            "4dc323c530610cce241b4063a395767b1f98a41d"
        ],
        [
            "assert (Col K M H) by (conclude_def Col ).",
            "VernacExtend",
            "36f9d8fad7fa93118a691126894af5a3226e29d0"
        ],
        [
            "assert (Col K H M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "47f3f3534c22f0ab8d7a5fea5fcf2bb6dcd92ddc"
        ],
        [
            "assert (nCol K H E) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "6540bb89f5970d2e63090fd70ece29e38b010d54"
        ],
        [
            "assert (nCol K H C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "a438e48264dc16cbb82fd785342fa87961710d1f"
        ],
        [
            "assert (OS E C K H) by (conclude_def OS ).",
            "VernacExtend",
            "8e04e747cf348b870b4189241be39ae15378f180"
        ],
        [
            "assert (eq K K) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "89ee1e712221f97ec5067c4595ba2f1f13d3c25c"
        ],
        [
            "assert (Col K H K) by (conclude_def Col ).",
            "VernacExtend",
            "a6863fb95c9b0975c89a51b4b254839047dec22d"
        ],
        [
            "assert (TS C K H d) by (conclude_def TS ).",
            "VernacExtend",
            "cc851dee39389cf91f336094f8302ec2e5ae995c"
        ],
        [
            "assert (TS E K H d) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "4dd314daa9c9476e9c47200623abb2b8818fa3a5"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists m, (BetS E m d /\\ Col K H m /\\ nCol K H E)) by (conclude_def TS );destruct Tf as [m];spliter.",
            "VernacExtend",
            "7c254e8d39c1ed48075cd2180663a3d2c55ced4c"
        ],
        [
            "assert (Par E f C d) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "64091123c2959f241f65c7976afc8047002ce5c6"
        ],
        [
            "assert (~ Meet E f C d) by (auto using parnotmeet).",
            "VernacExtend",
            "a1f45a701e7a08f064a6d2477e02a5bc3bc18858"
        ],
        [
            "assert (Col E H f) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fcdaa9683cfa43e05956b65bd63d823edb944317"
        ],
        [
            "assert (neq E f) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "24b5e50d5267596c5d85e7b4a3a3c9701b987d91"
        ],
        [
            "assert (neq E H) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "3b0a6b4692dfc01daef8a287435bfdef3067045f"
        ],
        [
            "assert (neq K d) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "487957b3458f1019676e38b679b2aeaec5e2222a"
        ],
        [
            "assert (Col H K m) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e64b56a7dc1f713a0a19cc953e7088ef2a1888c7"
        ],
        [
            "assert (BetS H m K) by (conclude lemma_collinearbetween).",
            "VernacExtend",
            "217acd59523656e7b35d0dea91a72568efb67e4e"
        ],
        [
            "assert (BetS K m H) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "2ab79d31ab25420b9821702eabb8008859edaecb"
        ],
        [
            "assert (BetS d m E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "fb4d6ed0d005fd3890eed4f2054e3245a970ad07"
        ],
        [
            "assert (CR d E K H) by (conclude_def CR ).",
            "VernacExtend",
            "a84e83746310cedbd4343a53ba01e3c64b659109"
        ],
        [
            "assert (nCol C K H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "c0bcd50c0db96dac1e7529f73285009458adfc90"
        ],
        [
            "assert (Col C K d) by (conclude_def Col ).",
            "VernacExtend",
            "3cf059125e575b7f6f2315fffd562dd27e6fe309"
        ],
        [
            "assert (neq d K) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "6d605a9dc623b36bc3c7cb549ee15a846f911baf"
        ],
        [
            "assert (Col C K K) by (conclude_def Col ).",
            "VernacExtend",
            "f44a23c5e831acc0cf507e53704631e63d7a8c8f"
        ],
        [
            "assert (nCol d K H) by (conclude lemma_NChelper).",
            "VernacExtend",
            "1a559b3726a084d77394d6019ac375613366bb29"
        ],
        [
            "assert (TS d H K E) by (forward_using lemma_crossimpliesopposite).",
            "VernacExtend",
            "bcce108c4265aff02567d970702c269519a1af12"
        ],
        [
            "assert (Par d C f E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "14a7577e4c0de3efd539243a296171b46519b0a7"
        ],
        [
            "assert (BetS d K C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "87cc437dc15e10de0604a8664edce71dc7b526f6"
        ],
        [
            "assert (TS E H K d) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "c8c06171a750cb60a98275a312f0ce7cf6532c12"
        ],
        [
            "assert (TS A G H E) by (forward_using lemma_crossimpliesopposite).",
            "VernacExtend",
            "9064c6a20842381314849684a8786b7a1891a069"
        ],
        [
            "assert (BetS f H E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "d20325445447c06606e5b303cd6ca780a0a06088"
        ],
        [
            "assert (Par A b d C) by (conclude proposition_30A).",
            "VernacExtend",
            "449e87716ec814202c345c71a209bac3174df821"
        ],
        [
            "assert (Par A b C d) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "4a0dbf95a6d92cf6770ab4e5d3eee7e42b04fc68"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (TS C H K E) by (forward_using lemma_crossimpliesopposite).",
            "VernacExtend",
            "d4394f581c67b0c8a53849b350fb10eb5862f2ed"
        ],
        [
            "assert (TS E H K C) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "f68c7575cd29e10fe6b61b601bde41dcb54dcdc1"
        ],
        [
            "assert (TS A G H E) by (forward_using lemma_crossimpliesopposite).",
            "VernacExtend",
            "9064c6a20842381314849684a8786b7a1891a069"
        ],
        [
            "assert (BetS f H E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "d20325445447c06606e5b303cd6ca780a0a06088"
        ],
        [
            "assert (Par A b C d).",
            "VernacExtend",
            "a1dfc77226a288da04155beb6ee2138e01e8a7c7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "simple eapply proposition_30A.",
            "VernacExtend",
            "6eab84204086d7f22fa99883d3311c2f9e4fe65f"
        ],
        [
            "exact H62.",
            "VernacExtend",
            "9a31594cbd3cda24ff931c4ecf5c584cda3a9e98"
        ],
        [
            "exact H70.",
            "VernacExtend",
            "6a100752ace09d2cb27023c0c5e464bf5bb6e1b7"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "exact H9.",
            "VernacExtend",
            "6afcdb5a3ddac99d13c019fefd4457c64d0b9ba5"
        ],
        [
            "exact H143.",
            "VernacExtend",
            "2c674bc66d64f9b186a9b1d326eadd3f36fe0636"
        ],
        [
            "exact H13.",
            "VernacExtend",
            "8dc06dea31fdf7198c141e4d8da2fed47b774452"
        ],
        [
            "exact H142.",
            "VernacExtend",
            "5aedf386d26e8da58a42c07fd30670d973b553df"
        ],
        [
            "exact H141.",
            "VernacExtend",
            "b58fd7efaf2c1c254a61bb9e20514f766579747e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Par A b d C) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "e42a120defb4e02e7ac49400aee833f98532a075"
        ],
        [
            "assert (Col d C D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0781409ae71408480fd8494ff69a9235ec02dc3f"
        ],
        [
            "assert (neq D C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f23eb05481a976a61c3e073657f8e5ca451231f4"
        ],
        [
            "assert (Par A b D C) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "1c3a81464982f0cfe20951a272089c74088295ba"
        ],
        [
            "assert (Par A b C D) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "e6c252f0ebb897db296cedc16278c7fba45afb3e"
        ],
        [
            "assert (Par C D A b) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "142115d34f33d747cbd1e5173d68f1eead0d0cbf"
        ],
        [
            "assert (Par C D b A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "2b9bee909fa1af605400efe90aee098162a51d59"
        ],
        [
            "assert (Col b A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "bc3a566d3f562cabcd281e7001ecf5562929b04f"
        ],
        [
            "assert (nCol A B E) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "74645a064b0dc20100c143d649081529110c8c69"
        ],
        [
            "assert (neq B A) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "f05572d51181c9202443ce99ec9c621f00191cb7"
        ],
        [
            "assert (Par C D B A) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "56d4363ad6ececf7b072fb9363a7ac685b85af6d"
        ],
        [
            "assert (Par C D A B) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "aef51269eb6d26b089d5d541ca5a4437c82c9486"
        ],
        [
            "assert (Par A B C D) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "25c17144a7fa0b138b6ed715f37cb8b45f13adb9"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "parnotmeet",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "conclude_def Par.",
                        "VernacExtend",
                        "f080a6cfe3c58900a374bb8b24744a77c666adf9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}