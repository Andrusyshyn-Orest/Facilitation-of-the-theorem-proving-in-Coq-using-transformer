{
    "filename": "Elements/OriginalProofs/proposition_27B.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_27.",
            "VernacRequire",
            "af50e00317cea13608638a2bc52fd67959082353"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_collinearparallel.",
            "VernacRequire",
            "6a771fcd6e2f1b0bfb49807cb56ed3946cdf7c62"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_parallelsymmetric.",
            "VernacRequire",
            "380a5936af7e0007ca86a397621339008584ccda"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_parallelflip.",
            "VernacRequire",
            "7e326a39aefef12c19bc0b3c6ce0d726a1c02da9"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_27B : forall A D E F, CongA A E F E F D -> TS A E F D -> Par A E F D.",
            "VernacStartTheoremProof",
            "03771ec40e24ffd51ab45de7a5409fffd256b7f9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (neq A E) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "7ea2f09c89b6c72d41ef1fb7cf7dd48055027531"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists B, (BetS A E B /\\ Cong E B A E)) by (conclude lemma_extension);destruct Tf as [B];spliter.",
            "VernacExtend",
            "a2eeb713fbbcbd1f3009fc9994dcd552fcc11d43"
        ],
        [
            "assert (neq F D) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "9906de1385839d2bf3dd1345e670ff9c2a45939a"
        ],
        [
            "assert (neq D F) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "5a14a6632ade5bbc44f0c5bb32d9d63705706bd6"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists C, (BetS D F C /\\ Cong F C F D)) by (conclude lemma_extension);destruct Tf as [C];spliter.",
            "VernacExtend",
            "badc274a8d9949a9aa9b980a804ae59be669da3a"
        ],
        [
            "assert (BetS C F D) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "2d0f02665408420d28423c8dcc1312860cb96346"
        ],
        [
            "assert (Par A B C D) by (conclude proposition_27).",
            "VernacExtend",
            "f7c01f086521e973d64a08bcc4d200c0c0609760"
        ],
        [
            "assert (Col D F C) by (conclude_def Col ).",
            "VernacExtend",
            "630f3c84bde61b83a423af2b889910994aa5af1c"
        ],
        [
            "assert (Col C D F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ee2939215bed28863bf4ccdc795e8989eee4458a"
        ],
        [
            "assert (Par A B F D) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "c9bfd438c7d84214e7ce43c5401a9f28a0ec3f8b"
        ],
        [
            "assert (Par F D A B) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "e350bc7b4658dacce2117dbde88d3f4269983cbf"
        ],
        [
            "assert (Par F D B A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "e119b64f0e403be00ad228d057afd61165aa1010"
        ],
        [
            "assert (Col A E B) by (conclude_def Col ).",
            "VernacExtend",
            "2d67e641a0325f1b3a6282335663f70ad1b86a2b"
        ],
        [
            "assert (Col B A E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7d8a81edfc37556bec3712d2e7f3d1754b2593f6"
        ],
        [
            "assert (neq A E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9dc76a35f0423fea77251119a803e21c8f59a255"
        ],
        [
            "assert (neq E A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "5eef00ef1d0a882b209a09f629d7ffc97b7486d2"
        ],
        [
            "assert (Par F D E A) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "ac261a8b11982c0b99dc2026b4258d88a54b74fa"
        ],
        [
            "assert (Par F D A E) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "794a4e3e673d517d643898ab50c56ee14f06df52"
        ],
        [
            "assert (Par A E F D) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "ae76ff8e36507104c41a925ea957d27d47a21132"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_27B",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "7ea2f09c89b6c72d41ef1fb7cf7dd48055027531"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists B, (BetS A E B /\\ Cong E B A E)) by (conclude lemma_extension);destruct Tf as [B];spliter.",
                        "VernacExtend",
                        "a2eeb713fbbcbd1f3009fc9994dcd552fcc11d43"
                    ]
                },
                {
                    "command": [
                        "assert (neq F D) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "9906de1385839d2bf3dd1345e670ff9c2a45939a"
                    ]
                },
                {
                    "command": [
                        "assert (neq D F) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "5a14a6632ade5bbc44f0c5bb32d9d63705706bd6"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists C, (BetS D F C /\\ Cong F C F D)) by (conclude lemma_extension);destruct Tf as [C];spliter.",
                        "VernacExtend",
                        "badc274a8d9949a9aa9b980a804ae59be669da3a"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C F D) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "2d0f02665408420d28423c8dcc1312860cb96346"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B C D) by (conclude proposition_27).",
                        "VernacExtend",
                        "f7c01f086521e973d64a08bcc4d200c0c0609760"
                    ]
                },
                {
                    "command": [
                        "assert (Col D F C) by (conclude_def Col ).",
                        "VernacExtend",
                        "630f3c84bde61b83a423af2b889910994aa5af1c"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ee2939215bed28863bf4ccdc795e8989eee4458a"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B F D) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "c9bfd438c7d84214e7ce43c5401a9f28a0ec3f8b"
                    ]
                },
                {
                    "command": [
                        "assert (Par F D A B) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "e350bc7b4658dacce2117dbde88d3f4269983cbf"
                    ]
                },
                {
                    "command": [
                        "assert (Par F D B A) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "e119b64f0e403be00ad228d057afd61165aa1010"
                    ]
                },
                {
                    "command": [
                        "assert (Col A E B) by (conclude_def Col ).",
                        "VernacExtend",
                        "2d67e641a0325f1b3a6282335663f70ad1b86a2b"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7d8a81edfc37556bec3712d2e7f3d1754b2593f6"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9dc76a35f0423fea77251119a803e21c8f59a255"
                    ]
                },
                {
                    "command": [
                        "assert (neq E A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "5eef00ef1d0a882b209a09f629d7ffc97b7486d2"
                    ]
                },
                {
                    "command": [
                        "assert (Par F D E A) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "ac261a8b11982c0b99dc2026b4258d88a54b74fa"
                    ]
                },
                {
                    "command": [
                        "assert (Par F D A E) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "794a4e3e673d517d643898ab50c56ee14f06df52"
                    ]
                },
                {
                    "command": [
                        "assert (Par A E F D) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "ae76ff8e36507104c41a925ea957d27d47a21132"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}