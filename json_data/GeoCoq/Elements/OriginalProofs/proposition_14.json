{
    "filename": "Elements/OriginalProofs/proposition_14.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCdistinct.",
            "VernacRequire",
            "e464db49a36f1840285875a39e67b1d058d20da3"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NChelper.",
            "VernacRequire",
            "27d71a9bed299ed932460cd47291d5181182bf2b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_oppositesidesymmetric.",
            "VernacRequire",
            "4e2011e913226485bed5d882d28dd2a3e317b6e7"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_07.",
            "VernacRequire",
            "e6ced42edb22bf5c2ae6e53e8396585a01858bc2"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_14 : forall A B C D E, RT A B C D B E -> Out B C D -> TS E D B A -> Supp A B C D E /\\ BetS A B E.",
            "VernacStartTheoremProof",
            "e6b165a05ad3f7b1736d9fdfcf93a60743b8d593"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists a b c d e, (Supp a b c d e /\\ CongA A B C a b c /\\ CongA D B E d b e)) by (conclude_def RT );destruct Tf as [a[b[c[d[e]]]]];spliter.",
            "VernacExtend",
            "137ec0c207e0da95a906a74fce745fb060d3527e"
        ],
        [
            "assert (CongA a b c A B C) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "e53f41be4a991395cd97d5f745de2ddef088b02c"
        ],
        [
            "assert (CongA d b e D B E) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "f5e143728c4c5fb24aa3d226f68f5e7dea423768"
        ],
        [
            "assert (nCol A B C) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "991fdcd61d196a964bf09663c3de00cfd15fa6ac"
        ],
        [
            "assert (neq A B) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "8734c6c62963acc25b4886dfc0a545d19560b2ba"
        ],
        [
            "assert (nCol D B E) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "50fd7043af32a5a3924b0f91e5f511d4212b461f"
        ],
        [
            "assert (neq B E) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "4dbb01f45ca367df5c5f49f1729f9e038d94a5c4"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists T, (BetS A B T /\\ Cong B T B E)) by (conclude lemma_extension);destruct Tf as [T];spliter.",
            "VernacExtend",
            "513186104baf95f9578786280230d90f629300c3"
        ],
        [
            "assert (Cong B D B D) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "3bfdacec303410ba28fbb10edc2d36b47fda7e60"
        ],
        [
            "assert (Supp A B C D T) by (conclude_def Supp ).",
            "VernacExtend",
            "9f0b9f3a5d05685d368801b1e6e001800a03b8ab"
        ],
        [
            "assert (CongA a b c A B C) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "e53f41be4a991395cd97d5f745de2ddef088b02c"
        ],
        [
            "assert (CongA d b e D B E) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "f5e143728c4c5fb24aa3d226f68f5e7dea423768"
        ],
        [
            "assert (CongA d b e D B T) by (conclude lemma_supplements).",
            "VernacExtend",
            "e2d3dd87c1f8a745e8c7ad92dea5f88ed8ec1f96"
        ],
        [
            "assert (CongA D B E D B T) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "a3d8235f9626bdca95b9351274164d336a33c34a"
        ],
        [
            "assert (CongA D B T D B E) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "7bef32dbc29f98b7395a41795391a819396decd7"
        ],
        [
            "assert (Col A B T) by (conclude_def Col ).",
            "VernacExtend",
            "9512877fc80070e484aa0dbf565721b3d9fcda0a"
        ],
        [
            "assert (neq B T) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "11075ffa336542d6e601025d54cf753a390d7873"
        ],
        [
            "assert (neq T B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "e60181c31a1768e863ad79d2f973fecbd3f0570b"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col A B B) by (conclude_def Col ).",
            "VernacExtend",
            "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
        ],
        [
            "assert (nCol T B C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "dabbc44d456ab8138598b09a7c2f0a741c3cc4a7"
        ],
        [
            "assert (nCol C B T) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "23b6c653b1ebfc8ebe408d105ee195fe1439ac56"
        ],
        [
            "assert (Col B C D) by (conclude lemma_rayimpliescollinear).",
            "VernacExtend",
            "ad4350c8e0ce743751938b31995c5ac20b73a4d0"
        ],
        [
            "assert (Col C B D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f7cbdfa50d106ed7c307c363e9c76f670ab0193b"
        ],
        [
            "assert (neq D B) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "278d4cf17c0b7243f32819d93ffcba6493b04968"
        ],
        [
            "assert (Col C B B) by (conclude_def Col ).",
            "VernacExtend",
            "d87901cda7c272a98225bfd2f414623fea325d88"
        ],
        [
            "assert (nCol D B T) by (conclude lemma_NChelper).",
            "VernacExtend",
            "cb3f6c66ee105efe98e9097bef1d7ff83b5d81cb"
        ],
        [
            "assert (Cong D T D E) by (conclude proposition_04).",
            "VernacExtend",
            "9888766efc10f6bd35ea3f0ffbea44302900950d"
        ],
        [
            "assert (Cong T D E D) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "7521fc9a965c94d92e5d8bf74cc9596cfc630cb7"
        ],
        [
            "assert (Cong T B E B) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "befe499bb496326dd50aeeaac5ad5c759bae700c"
        ],
        [
            "assert (Col D B B) by (conclude_def Col ).",
            "VernacExtend",
            "4ae50054336f83aea8911d0c88160933c1cfc984"
        ],
        [
            "assert (TS A D B E) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "3f7844409a027d942a1860026be841526376a4e7"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists m, (BetS A m E /\\ Col D B m /\\ nCol D B A)) by (conclude_def TS );destruct Tf as [m];spliter.",
            "VernacExtend",
            "234326fb50713455eb16dc917ff05c446a1b0424"
        ],
        [
            "assert (BetS E m A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "667670c1a78bc2f21dd6e6a89fdc0a4f7b564dfc"
        ],
        [
            "assert (BetS T B A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ee3514606d64a56898289f16c39835259ea983f0"
        ],
        [
            "assert (OS T E D B) by (conclude_def OS ).",
            "VernacExtend",
            "b4629d1ef733697d14982ac96c90c0fd402c577b"
        ],
        [
            "assert (neq B C) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "0bb577205eb42d8f9fe7d193058e6055102c5a78"
        ],
        [
            "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f6de27d2290b224fed0d2ab5b24228893a410ec8"
        ],
        [
            "assert (eq T E) by (conclude proposition_07).",
            "VernacExtend",
            "888a168c0e47d45feeb90cd57bd92c1d9cb44382"
        ],
        [
            "assert (BetS A B E) by (conclude cn_equalitysub).",
            "VernacExtend",
            "b5d97bec40d71d8ace841d3d47284436f8015e49"
        ],
        [
            "assert (Supp A B C D E) by (conclude_def Supp ).",
            "VernacExtend",
            "2c9c3f2104e3e50f59c4ed7da7f3090821011410"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_14",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists a b c d e, (Supp a b c d e /\\ CongA A B C a b c /\\ CongA D B E d b e)) by (conclude_def RT );destruct Tf as [a[b[c[d[e]]]]];spliter.",
                        "VernacExtend",
                        "137ec0c207e0da95a906a74fce745fb060d3527e"
                    ]
                },
                {
                    "command": [
                        "assert (CongA a b c A B C) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "e53f41be4a991395cd97d5f745de2ddef088b02c"
                    ]
                },
                {
                    "command": [
                        "assert (CongA d b e D B E) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "f5e143728c4c5fb24aa3d226f68f5e7dea423768"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "991fdcd61d196a964bf09663c3de00cfd15fa6ac"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "8734c6c62963acc25b4886dfc0a545d19560b2ba"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D B E) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "50fd7043af32a5a3924b0f91e5f511d4212b461f"
                    ]
                },
                {
                    "command": [
                        "assert (neq B E) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "4dbb01f45ca367df5c5f49f1729f9e038d94a5c4"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists T, (BetS A B T /\\ Cong B T B E)) by (conclude lemma_extension);destruct Tf as [T];spliter.",
                        "VernacExtend",
                        "513186104baf95f9578786280230d90f629300c3"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B D B D) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "3bfdacec303410ba28fbb10edc2d36b47fda7e60"
                    ]
                },
                {
                    "command": [
                        "assert (Supp A B C D T) by (conclude_def Supp ).",
                        "VernacExtend",
                        "9f0b9f3a5d05685d368801b1e6e001800a03b8ab"
                    ]
                },
                {
                    "command": [
                        "assert (CongA a b c A B C) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "e53f41be4a991395cd97d5f745de2ddef088b02c"
                    ]
                },
                {
                    "command": [
                        "assert (CongA d b e D B E) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "f5e143728c4c5fb24aa3d226f68f5e7dea423768"
                    ]
                },
                {
                    "command": [
                        "assert (CongA d b e D B T) by (conclude lemma_supplements).",
                        "VernacExtend",
                        "e2d3dd87c1f8a745e8c7ad92dea5f88ed8ec1f96"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D B E D B T) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "a3d8235f9626bdca95b9351274164d336a33c34a"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D B T D B E) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "7bef32dbc29f98b7395a41795391a819396decd7"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B T) by (conclude_def Col ).",
                        "VernacExtend",
                        "9512877fc80070e484aa0dbf565721b3d9fcda0a"
                    ]
                },
                {
                    "command": [
                        "assert (neq B T) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "11075ffa336542d6e601025d54cf753a390d7873"
                    ]
                },
                {
                    "command": [
                        "assert (neq T B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "e60181c31a1768e863ad79d2f973fecbd3f0570b"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
                    ]
                },
                {
                    "command": [
                        "assert (nCol T B C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "dabbc44d456ab8138598b09a7c2f0a741c3cc4a7"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C B T) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "23b6c653b1ebfc8ebe408d105ee195fe1439ac56"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C D) by (conclude lemma_rayimpliescollinear).",
                        "VernacExtend",
                        "ad4350c8e0ce743751938b31995c5ac20b73a4d0"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f7cbdfa50d106ed7c307c363e9c76f670ab0193b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D B) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "278d4cf17c0b7243f32819d93ffcba6493b04968"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "d87901cda7c272a98225bfd2f414623fea325d88"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D B T) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "cb3f6c66ee105efe98e9097bef1d7ff83b5d81cb"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D T D E) by (conclude proposition_04).",
                        "VernacExtend",
                        "9888766efc10f6bd35ea3f0ffbea44302900950d"
                    ]
                },
                {
                    "command": [
                        "assert (Cong T D E D) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "7521fc9a965c94d92e5d8bf74cc9596cfc630cb7"
                    ]
                },
                {
                    "command": [
                        "assert (Cong T B E B) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "befe499bb496326dd50aeeaac5ad5c759bae700c"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "4ae50054336f83aea8911d0c88160933c1cfc984"
                    ]
                },
                {
                    "command": [
                        "assert (TS A D B E) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "3f7844409a027d942a1860026be841526376a4e7"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists m, (BetS A m E /\\ Col D B m /\\ nCol D B A)) by (conclude_def TS );destruct Tf as [m];spliter.",
                        "VernacExtend",
                        "234326fb50713455eb16dc917ff05c446a1b0424"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E m A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "667670c1a78bc2f21dd6e6a89fdc0a4f7b564dfc"
                    ]
                },
                {
                    "command": [
                        "assert (BetS T B A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ee3514606d64a56898289f16c39835259ea983f0"
                    ]
                },
                {
                    "command": [
                        "assert (OS T E D B) by (conclude_def OS ).",
                        "VernacExtend",
                        "b4629d1ef733697d14982ac96c90c0fd402c577b"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "0bb577205eb42d8f9fe7d193058e6055102c5a78"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f6de27d2290b224fed0d2ab5b24228893a410ec8"
                    ]
                },
                {
                    "command": [
                        "assert (eq T E) by (conclude proposition_07).",
                        "VernacExtend",
                        "888a168c0e47d45feeb90cd57bd92c1d9cb44382"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A B E) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "b5d97bec40d71d8ace841d3d47284436f8015e49"
                    ]
                },
                {
                    "command": [
                        "assert (Supp A B C D E) by (conclude_def Supp ).",
                        "VernacExtend",
                        "2c9c3f2104e3e50f59c4ed7da7f3090821011410"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}