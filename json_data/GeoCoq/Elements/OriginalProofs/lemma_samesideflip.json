{
    "filename": "Elements/OriginalProofs/lemma_samesideflip.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCorder.",
            "VernacRequire",
            "45862997789ccb0c1d124a0a45383611fa0cc836"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral}.",
            "VernacContext",
            "2b23404dca7c933c43ab174476f98a2dd3fed6cf"
        ],
        [
            "Lemma lemma_samesideflip : forall A B P Q, OS P Q A B -> OS P Q B A.",
            "VernacStartTheoremProof",
            "9c03befd56ed38c47436790cd211fc62b456158b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists p q r, (Col A B p /\\ Col A B q /\\ BetS P p r /\\ BetS Q q r /\\ nCol A B P /\\ nCol A B Q)) by (conclude_def OS );destruct Tf as [p[q[r]]];spliter.",
            "VernacExtend",
            "53a71b77bf8ddd6e2e253d25d688db277d336b90"
        ],
        [
            "assert (Col B A p) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
        ],
        [
            "assert (Col B A q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f393509e5018b89862d133c669c22055d75ff7d4"
        ],
        [
            "assert (nCol B A P) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "b2fd8810aacbd22b06eeda092e68d7c18a38a3b0"
        ],
        [
            "assert (nCol B A Q) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "70238759d40b8f4849b57b365833f2bd0f51b556"
        ],
        [
            "assert (OS P Q B A) by (conclude_def OS ).",
            "VernacExtend",
            "87319ef800f4e9cf77a85d72a869ac41e852871d"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_samesideflip",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists p q r, (Col A B p /\\ Col A B q /\\ BetS P p r /\\ BetS Q q r /\\ nCol A B P /\\ nCol A B Q)) by (conclude_def OS );destruct Tf as [p[q[r]]];spliter.",
                        "VernacExtend",
                        "53a71b77bf8ddd6e2e253d25d688db277d336b90"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A p) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c7bd93afcbfcf3614efe5a3e0b5520cc56d13681"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f393509e5018b89862d133c669c22055d75ff7d4"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B A P) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "b2fd8810aacbd22b06eeda092e68d7c18a38a3b0"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B A Q) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "70238759d40b8f4849b57b365833f2bd0f51b556"
                    ]
                },
                {
                    "command": [
                        "assert (OS P Q B A) by (conclude_def OS ).",
                        "VernacExtend",
                        "87319ef800f4e9cf77a85d72a869ac41e852871d"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}