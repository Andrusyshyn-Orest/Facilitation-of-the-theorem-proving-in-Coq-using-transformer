{
    "filename": "Elements/OriginalProofs/proposition_32.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCdistinct.",
            "VernacRequire",
            "e464db49a36f1840285875a39e67b1d058d20da3"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_31short.",
            "VernacRequire",
            "8cb24dbaea86dc0a345e40b873bf46e78f5b6725"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_collinearparallel.",
            "VernacRequire",
            "6a771fcd6e2f1b0bfb49807cb56ed3946cdf7c62"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_29.",
            "VernacRequire",
            "5a62595bdaa8d7b7227f03051fc7729c87131e90"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_euclidean}.",
            "VernacContext",
            "46d5a1bab5cb652e851ee1112917f2bf32229649"
        ],
        [
            "Lemma proposition_32 : forall A B C D, Triangle A B C -> BetS B C D -> SumA C A B A B C A C D.",
            "VernacStartTheoremProof",
            "569a864330f4ef8f37c3ebcc8a43a002af5014d2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (neq B A) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "f05572d51181c9202443ce99ec9c621f00191cb7"
        ],
        [
            "assert (neq A B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "de46a552574f2453f7a5fd70fa678381c8a5676b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS B A F /\\ Cong A F B A)) by (conclude lemma_extension);destruct Tf as [F];spliter.",
            "VernacExtend",
            "1064b285d3db5b419d63d39442c287c100db3d70"
        ],
        [
            "assert (Col B A F) by (conclude_def Col ).",
            "VernacExtend",
            "81404a9d53029d406abb438df2ea88979dfd2db7"
        ],
        [
            "assert (Col A B F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3302404df2c9693cdaa14c90d08aa327b8e2c4e0"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col A B B) by (conclude_def Col ).",
            "VernacExtend",
            "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
        ],
        [
            "assert (neq B F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "3311f7e0915ee01870bcf1d0e47bbc82a3005605"
        ],
        [
            "assert (neq F B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d5ad8910f3aca3a125d701424f1ef4dd08caa6ea"
        ],
        [
            "assert (nCol F B C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "83567912473d03f042881c21b89359fcd8cec491"
        ],
        [
            "assert (BetS F A B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "77fcef22b8043720c6013898fe58a2213b5c4004"
        ],
        [
            "rename_H H;let Tf:=fresh in assert (Tf:exists E H S, (BetS E C H /\\ CongA E C A C A B /\\ Par E H F B /\\ BetS E S B /\\ BetS C S A)) by (conclude proposition_31short);destruct Tf as [E[H[S]]];spliter.",
            "VernacExtend",
            "e9affb350bdc76f1e8aa76b22cbe533983c47903"
        ],
        [
            "assert (neq B C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
        ],
        [
            "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f6de27d2290b224fed0d2ab5b24228893a410ec8"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists G, (BetS C B G /\\ Cong B G C B)) by (conclude lemma_extension);destruct Tf as [G];spliter.",
            "VernacExtend",
            "a9dc944d3e692303f1c9b72cd8ec712f2c495995"
        ],
        [
            "assert (neq C A) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "c8c6037c8dc0e793c06fbcbf31a6f2299782d479"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists J, (BetS C A J /\\ Cong A J C A)) by (conclude lemma_extension);destruct Tf as [J];spliter.",
            "VernacExtend",
            "bdbe7260fa17d098ce14952e0576d89b64a4c992"
        ],
        [
            "assert (neq A C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "d3502433b3e0473a7498224779513e518068209b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists K, (BetS A C K /\\ Cong C K A C)) by (conclude lemma_extension);destruct Tf as [K];spliter.",
            "VernacExtend",
            "417f27e1e21467ac0498136345e5ce7bbfc7cafe"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS A B M /\\ Cong B M A B)) by (conclude lemma_extension);destruct Tf as [M];spliter.",
            "VernacExtend",
            "c0aa7d33489377509f58c09d6710db8aa44ce398"
        ],
        [
            "assert (Col F B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fab96fab873903b4c00e4f0ffb4198c270edd29e"
        ],
        [
            "assert (Par E H A B) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "c049f3d36346fb39c7e6a51b35dbeeac30aef095"
        ],
        [
            "assert (BetS K C A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ddeac2bf96733a04aaf25a04c525949e712d197b"
        ],
        [
            "assert (Col C S A) by (conclude_def Col ).",
            "VernacExtend",
            "1b35bb16a896b089c05b9fa0347c9e884cfc8a7e"
        ],
        [
            "assert (Col C A S) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b28d20969afa82ec965f8c598d767a37d42623f7"
        ],
        [
            "assert (nCol A C B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
        ],
        [
            "assert (Col A C S) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "20bba03fd9eec07601fa555714f7ab6e38282768"
        ],
        [
            "assert (neq C S) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "de5865a5e40d2cca2bddee91f3c12143bcb031f5"
        ],
        [
            "assert (neq S C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "e4f2025262f49c92f162ed05d04af47a3d2842ba"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col A C C) by (conclude_def Col ).",
            "VernacExtend",
            "3068c83efc791ee2a0b851232bbf95facf2cfb45"
        ],
        [
            "assert (nCol S C B) by (conclude lemma_NChelper).",
            "VernacExtend",
            "5f1bc1337b00b4be9fd77bb69f9f3f6ea2c72f53"
        ],
        [
            "assert (nCol B S C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "cc50b2d4335f2c9caeabb38e8689e2da19d319f0"
        ],
        [
            "assert (Col E S B) by (conclude_def Col ).",
            "VernacExtend",
            "e6ba7f5dc684f373b55aa15c933be7d7b6d221c4"
        ],
        [
            "assert (Col B S E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "36f8c026cc06c54d430fe3a941fc9c0601c6050c"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col B S B) by (conclude_def Col ).",
            "VernacExtend",
            "b8a99445bc6da48483093d35acadf2971b272b2d"
        ],
        [
            "assert (BetS B S E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "a00a043407761184ebf3182534aee391a1ca1da8"
        ],
        [
            "assert (neq B E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "33d569a7c9181367345905ba23a4d65f23db0a03"
        ],
        [
            "assert (nCol B E C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "60c7e1d1decc26b56ec2b68c29bdf043670b8e99"
        ],
        [
            "assert (Col B E S) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f39fd7d14869ed11f28b4ba333715b057cc312cf"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (Col B E E) by (conclude_def Col ).",
            "VernacExtend",
            "8cce97936f346b902dd5d8ffb6243f42866766aa"
        ],
        [
            "assert (neq S E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "6e35d37cb08e8390b0d1daca03d79ec5442efcb9"
        ],
        [
            "assert (nCol S E C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "d45a12881a715d876443466b62ce48e3dc657e03"
        ],
        [
            "assert (nCol S C E) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "8897957a3a4eee44943a5aa2e46a9f9797523b83"
        ],
        [
            "assert (Col S C C) by (conclude_def Col ).",
            "VernacExtend",
            "b8d952f41209c52bc4dc0707766721de52aefbc8"
        ],
        [
            "assert (Col C S A) by (conclude_def Col ).",
            "VernacExtend",
            "1b35bb16a896b089c05b9fa0347c9e884cfc8a7e"
        ],
        [
            "assert (Col S C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "4faff4f73efe3a3e0fcc1548aba3088a70db5740"
        ],
        [
            "assert (neq C A) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "fd49ca921de734b27ab456d3bb01077d3160cc82"
        ],
        [
            "assert (nCol C A E) by (conclude lemma_NChelper).",
            "VernacExtend",
            "0e5a43f3c19ff5a4882185464a9e31037acb947d"
        ],
        [
            "assert (Col A B M) by (conclude_def Col ).",
            "VernacExtend",
            "639ca0d6869bef40da5fde91bbd7498a1a3a33ec"
        ],
        [
            "assert (Col B A M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "20d71deeb49a9dd3130caa7e6c2a12dc211fcb66"
        ],
        [
            "assert (Par E H B A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "39d22cc91fcd4d8ed1507a74b8c417dd6bbbc5da"
        ],
        [
            "assert (neq A M) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "407201e66570093eecf4511ea06ce7ff3751330d"
        ],
        [
            "assert (neq M A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "4ef354a6e7b0311428e5a56e1e5728422738823e"
        ],
        [
            "assert (Par E H M A) by (conclude lemma_collinearparallel).",
            "VernacExtend",
            "40f9518f00c64fb2b26c773699a30b067958d8a4"
        ],
        [
            "assert (BetS H C E) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "41fb49bdd6c67647ed5b2175a2daa7ad0f297d98"
        ],
        [
            "assert (BetS M B A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "9fcba825ebc91027dd9883174e86339749256f3c"
        ],
        [
            "assert (BetS F A B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "77fcef22b8043720c6013898fe58a2213b5c4004"
        ],
        [
            "assert (BetS D C B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "f8e83b3954564e194be4b1d9fbbe17468f2a408c"
        ],
        [
            "assert (nCol B C A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "08abc6c2b49fca606fde82afd7a7faa19e5ae589"
        ],
        [
            "assert (nCol A C B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (neq B E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "33d569a7c9181367345905ba23a4d65f23db0a03"
        ],
        [
            "assert (BetS E C H) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "0981b1cdbb58389679ff12508d2fc9bd13aafb3c"
        ],
        [
            "assert (BetS A S C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "eb3caae2e2ca86181eeb22ae9b81162baa506d57"
        ],
        [
            "assert (nCol C E A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "042d712504b797e36a5c89c303926ee973a2048a"
        ],
        [
            "assert (Col C E H) by (conclude_def Col ).",
            "VernacExtend",
            "53b98859de49b15f1af247a56838527952c28071"
        ],
        [
            "assert (Col C E E) by (conclude_def Col ).",
            "VernacExtend",
            "23880f92a5db3f2807fb78c640dd239e90e26d37"
        ],
        [
            "assert (neq E H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f224b963b427a2716200c2752fccdccaf4ad7d4f"
        ],
        [
            "assert (neq H E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "37b87d1662cb842d5199ef2777ef4add1c0b5127"
        ],
        [
            "assert (nCol H E A) by (conclude lemma_NChelper).",
            "VernacExtend",
            "d4b4f89e72cf438c806b718a8213fe513a21d82c"
        ],
        [
            "assert (nCol E H A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "d32a5682d727fe84f88e13b28a265971e679dd43"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists Q, (BetS A Q H /\\ BetS E S Q)) by (conclude postulate_Pasch_outer);destruct Tf as [Q];spliter.",
            "VernacExtend",
            "3e7d9619d56b404c79e2ef1e5253c9177fcdbfb5"
        ],
        [
            "assert (Col E S Q) by (conclude_def Col ).",
            "VernacExtend",
            "916f41da6b9f2ea6b95e4b606bc1c2f35297cd8e"
        ],
        [
            "assert (Col S E B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0a316b8c9e87f38c8d52b97bc9d6a7b1cc4c4dc5"
        ],
        [
            "assert (Col S E Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "dc752e757e6feadfafb8809385912ef7ad712d88"
        ],
        [
            "assert (Col E B Q) by (conclude lemma_collinear4).",
            "VernacExtend",
            "aaa0709d54b6f5040374ef915fc489990e7154dc"
        ],
        [
            "assert (Col B E Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "51ce59b06cd31af717f6a01a74baf47f8b5d03a4"
        ],
        [
            "assert (neq H E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ec46262ca3c75d19c225f2ba2517176a9fa3929a"
        ],
        [
            "assert (neq C E) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a8cb02cc27caec779e42911044c466350ef0446a"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists L, (BetS H E L /\\ Cong E L C E)) by (conclude lemma_extension);destruct Tf as [L];spliter.",
            "VernacExtend",
            "e3a7bade31664d3e1312aa7ba3703219fb516c6b"
        ],
        [
            "assert (BetS L E H) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "a681db0a32b9f511cb0eab41ea8ab0b21130cb7d"
        ],
        [
            "assert (Col L E H) by (conclude_def Col ).",
            "VernacExtend",
            "6cb5176dd19caa43886a91dc6e5dbbe3e256b396"
        ],
        [
            "assert (neq L H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "b028739fc4c59cf87167f5401dee883fa8b75e66"
        ],
        [
            "assert (neq E H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f224b963b427a2716200c2752fccdccaf4ad7d4f"
        ],
        [
            "assert (Col A B M) by (conclude_def Col ).",
            "VernacExtend",
            "639ca0d6869bef40da5fde91bbd7498a1a3a33ec"
        ],
        [
            "assert (neq A M) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "407201e66570093eecf4511ea06ce7ff3751330d"
        ],
        [
            "assert (neq A B) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "729d99d00883cb65929e87e6a48ea0634ac9dc68"
        ],
        [
            "assert (~ Meet A M L H).",
            "VernacExtend",
            "4b5faaeb14d2df896d1fc868e3837723a92eb481"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists c, (neq A M /\\ neq L H /\\ Col A M c /\\ Col L H c)) by (conclude_def Meet );destruct Tf as [c];spliter.",
            "VernacExtend",
            "bfc553861b508590beaaff4456f3e405436ae9fe"
        ],
        [
            "assert (Col H E L) by (conclude_def Col ).",
            "VernacExtend",
            "993b99cb993699c579a65c460d1a3911bb4f52dc"
        ],
        [
            "assert (Col L H E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "15313f7e3ec3fddebbd323fa160011a194f4f5a3"
        ],
        [
            "assert (neq H L) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9d83873a023f808f891a05adb39b37d5fa6fcef7"
        ],
        [
            "assert (neq L H) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "42ef726f3f78a261236dee4cf96756e92c0b7c41"
        ],
        [
            "assert (Col H c E) by (conclude lemma_collinear4).",
            "VernacExtend",
            "0b9bb12092ba2547e4cc6306bd087a16bb425db6"
        ],
        [
            "assert (Col E H c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "c97c296292b3573f05f7e4f4d5540e374af53816"
        ],
        [
            "assert (Col A B M) by (conclude_def Col ).",
            "VernacExtend",
            "639ca0d6869bef40da5fde91bbd7498a1a3a33ec"
        ],
        [
            "assert (Col M A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "78ad6447674bdc580d03092e6cc3497abeea0366"
        ],
        [
            "assert (Col M A c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7be5ff26ffb5196d4110b47327f0e9879096a089"
        ],
        [
            "assert (neq A M) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "407201e66570093eecf4511ea06ce7ff3751330d"
        ],
        [
            "assert (neq M A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "4ef354a6e7b0311428e5a56e1e5728422738823e"
        ],
        [
            "assert (Col A B c) by (conclude lemma_collinear4).",
            "VernacExtend",
            "eada3d1f16fcff7d53a303248b5b9f3e2705125e"
        ],
        [
            "assert (Col B A F) by (conclude_def Col ).",
            "VernacExtend",
            "81404a9d53029d406abb438df2ea88979dfd2db7"
        ],
        [
            "assert (Col A B F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3302404df2c9693cdaa14c90d08aa327b8e2c4e0"
        ],
        [
            "assert (Col B c F) by (conclude lemma_collinear4).",
            "VernacExtend",
            "3787a4f4bfdc771b80001cd5044c1d8e1468d311"
        ],
        [
            "assert (Col F B c) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b43cda07d3113a998d60f90554ab43d7ac3c4912"
        ],
        [
            "assert (Meet E H F B) by (conclude_def Meet ).",
            "VernacExtend",
            "0e836e923970391eca596abb84700ef30eb48e48"
        ],
        [
            "assert (~ Meet E H F B) by (conclude_def Par ).",
            "VernacExtend",
            "23bf21b1049a407c9ce09e4187bf4679f6cb03b8"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (BetS B Q E) by (conclude lemma_collinearbetween).",
            "VernacExtend",
            "4436e0603fd612b8f269c57126c5f6257aa0f1ab"
        ],
        [
            "assert (nCol A H E) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "917b54660a0d465a1026bfc3ed46f4a8d6bba078"
        ],
        [
            "assert (Col A Q H) by (conclude_def Col ).",
            "VernacExtend",
            "ce2771a2d67f274bc621f8da2d4e22e5b3cb3d48"
        ],
        [
            "assert (Col A H Q) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "014455a6150309d4744d752be73dc2b1c9718d8d"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (Col A H H) by (conclude_def Col ).",
            "VernacExtend",
            "752a371e1746e48b35408d6febcf6c383d3fcfb7"
        ],
        [
            "assert (neq Q H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "7ed5953acee7638f7cae0aadd0d4a194695d9f8d"
        ],
        [
            "assert (nCol Q H E) by (conclude lemma_NChelper).",
            "VernacExtend",
            "54867cbfcad478f34fcc2556227ef9b3c25006a2"
        ],
        [
            "assert (nCol Q E H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "bfd9425837aaa4f3f91b6fe5c7c4c8af1942dc5b"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (Col Q E E) by (conclude_def Col ).",
            "VernacExtend",
            "a51c13e8e740522a847569f276cde180f292c72f"
        ],
        [
            "assert (Col Q E B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "27763286e0e2a310864c2cade70bac72cabca362"
        ],
        [
            "assert (nCol B E H) by (conclude lemma_NChelper).",
            "VernacExtend",
            "6ea4efa48726078479b070a655f333428ca3a609"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists T, (BetS B T C /\\ BetS H T Q)) by (conclude postulate_Pasch_inner);destruct Tf as [T];spliter.",
            "VernacExtend",
            "ba626d5c99ca587634707a54bbb6024a2fbf4b50"
        ],
        [
            "assert (BetS Q T H) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "da28d7865b69caeb00b5c1454d6d902b8ab48952"
        ],
        [
            "assert (BetS A T H) by (conclude lemma_3_5b).",
            "VernacExtend",
            "c3e72874e523ecc7c5ec80c411639bee7b61772f"
        ],
        [
            "assert (Col B T C) by (conclude_def Col ).",
            "VernacExtend",
            "aa636ca03e9ee9ac93f51c19e75193c26504b119"
        ],
        [
            "assert (Col C B T) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e835bc4013595f653ce7f23d36e08924978523db"
        ],
        [
            "assert (nCol C B A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "a4d3eddbdbf0e243199e65bd2fb15e7f1447fc66"
        ],
        [
            "assert (TS A C B H) by (conclude_def TS ).",
            "VernacExtend",
            "9be414125ef762c506ce6f8003861646634e3191"
        ],
        [
            "assert (TS H C B A) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "f6637c2ea0f7cc3fa027d269fd1a84c9b67956c9"
        ],
        [
            "assert (Par H E M A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "ebc70125f6db1e0c99151906ac2f1441194df452"
        ],
        [
            "assert (CongA A C E B A C) by (conclude lemma_equalanglesflip).",
            "VernacExtend",
            "160fa0ad8b37f6eb7d70d13b9bbe246bdaf0989c"
        ],
        [
            "assert ((CongA H C B C B A /\\ CongA D C E C B A /\\ RT E C B C B A)) by (conclude proposition_29).",
            "VernacExtend",
            "e229ee2666940497b67cc47f2cb6d29df17ce926"
        ],
        [
            "assert (CongA C B A A B C) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "944d8975dcf87abfbf9178008fcabb9fcd62f1f9"
        ],
        [
            "assert (CongA D C E A B C) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "8b746ec628fd0737edfa6a45c73e020251123d4c"
        ],
        [
            "assert (BetS T C D) by (conclude lemma_3_6a).",
            "VernacExtend",
            "c1abf4bd629048c632ae2aadb8fb168bb5e3d915"
        ],
        [
            "assert (neq T D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "530a96e70aeb2738d4943b49ab7f7530c4b3c886"
        ],
        [
            "assert (nCol B C A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "08abc6c2b49fca606fde82afd7a7faa19e5ae589"
        ],
        [
            "assert (Col B C T) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3dae94cb110ac5f30cec2afa4ea5b53a7315dc71"
        ],
        [
            "assert (Col B C D) by (conclude_def Col ).",
            "VernacExtend",
            "afd1e2d0a6ae54ac1da609fde4731349b531ba6f"
        ],
        [
            "assert (nCol T D A) by (conclude lemma_NChelper).",
            "VernacExtend",
            "49ebce90a8c4dc319d2fcce28b40eb50157c7540"
        ],
        [
            "assert (nCol A T D) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "c4d61a09aa9f54987fe82ac62e408dfa1167eec9"
        ],
        [
            "assert (Col A T A) by (conclude_def Col ).",
            "VernacExtend",
            "017e4c275a77000aa0c22b2e9616cbfce4c74643"
        ],
        [
            "assert (Col A T H) by (conclude_def Col ).",
            "VernacExtend",
            "7d2ad0c533b8ba23552598fd4bf4b62dab2f2865"
        ],
        [
            "assert (neq A H) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "2bbddeb343ed90ffab77cd5a294b68942effb117"
        ],
        [
            "assert (nCol A H D) by (conclude lemma_NChelper).",
            "VernacExtend",
            "dfdc3507d4eadf48f66bd5e8d54de33ed47f50a3"
        ],
        [
            "assert (nCol H A D) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "7bc78e1a016c2ce8b8199b864e04f8ddc6842487"
        ],
        [
            "assert (BetS H T A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "cbc274282077073ca99e1c97bd93c60ed5f112b4"
        ],
        [
            "assert (BetS D C T) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "c3af7f027b9e98cc3441fddc21a26a5d2f87b73d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists R, (BetS D R A /\\ BetS H C R)) by (conclude postulate_Pasch_outer);destruct Tf as [R];spliter.",
            "VernacExtend",
            "013ed3bca5f5a3ed2312c163416b58f205cfbd65"
        ],
        [
            "assert (Out C E R) by (conclude_def Out ).",
            "VernacExtend",
            "90e86d6db6f9d1775c0bfcfc0822cdb11b44df00"
        ],
        [
            "assert (Out C A A) by (conclude lemma_ray4).",
            "VernacExtend",
            "c5aa51775ac2d6725d437ebc1841e67fe453c920"
        ],
        [
            "assert (neq C D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "ec8ed20fd91c966709071dfab476d123976a3733"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (BetS A R D) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "e8cd63b799dfe85a52c143d7aa3348d18081fbf5"
        ],
        [
            "assert (CongA B A C A C E) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "bd3922c8e5504f3c52af7cf82bd548d0806816f9"
        ],
        [
            "assert (CongA B A C A C R) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "1af8bdb93ce0d2708bb82dd614ca8d14b9ef2f45"
        ],
        [
            "assert (nCol C A B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "e7185bac6af815e2eedf681e13d2558faef5022b"
        ],
        [
            "assert (CongA C A B B A C) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "d32e86d94f4fb6e7d75c60d9f4082722376a87a7"
        ],
        [
            "assert (CongA C A B A C R) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "bc70358bc38e3c3d6873ba3cd558b19c823cf4e3"
        ],
        [
            "assert (Out C D D) by (conclude lemma_ray4).",
            "VernacExtend",
            "5edaa1cc05e74baaf8ca5eff45ab4cd858d1f9e7"
        ],
        [
            "assert (CongA A B C D C E) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "84efe0fdd83d885cbc421018b152facb71c7e3e1"
        ],
        [
            "assert (CongA A B C D C R) by (conclude lemma_equalangleshelper).",
            "VernacExtend",
            "809874834aac7ec7b5d93ce778132972a2e92f93"
        ],
        [
            "assert (nCol A D H) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "12928b5b1a35b698d520294dd37ccad1d56367cc"
        ],
        [
            "assert (Col D R A) by (conclude_def Col ).",
            "VernacExtend",
            "a6a01f3f764af0d67a5e282779df7a1d89169601"
        ],
        [
            "assert (Col A D R) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3aca11d326f609a29f66fd6342164f8939b58703"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (Col A D D) by (conclude_def Col ).",
            "VernacExtend",
            "f1df087c3a106a6e7039b8d1f9ef8fe564e0604c"
        ],
        [
            "assert (neq D R) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "fbccfc90511c5d286ebe2b7054f497278e10e61c"
        ],
        [
            "assert (neq R D) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "05c057475199db0e90432dbd164a5d2a2cd96b3c"
        ],
        [
            "assert (nCol R D H) by (conclude lemma_NChelper).",
            "VernacExtend",
            "9bb992b96723465b6740fcf925613a8097d7155b"
        ],
        [
            "assert (nCol R H D) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "a12b69398141db10de1478616687ae779bd6cd0d"
        ],
        [
            "assert (Col H C R) by (conclude_def Col ).",
            "VernacExtend",
            "da93d931525871350b466ff6c88ffa40ebd486bf"
        ],
        [
            "assert (Col R H C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "891b2e24aaf7bd4feeb170b1347361eacef34925"
        ],
        [
            "assert (eq R R) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "5717b4ce5380408a24b2f5d5ee26a24a214afe7d"
        ],
        [
            "assert (Col R H R) by (conclude_def Col ).",
            "VernacExtend",
            "4cf75ff72650921daa2afcfe63a9f4d03650f155"
        ],
        [
            "assert (neq C R) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "a9b166ccef177cc7a004e611e239cd5a350026ce"
        ],
        [
            "assert (neq R C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "2a9f089323fa4319c56534b032410301af55d568"
        ],
        [
            "assert (nCol R C D) by (conclude lemma_NChelper).",
            "VernacExtend",
            "f304b933a5dd1d7653e0d21a2acae3ae754a7146"
        ],
        [
            "assert (nCol D C R) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "d1b962432a871f9d7da7dfea2e65b3f7c78362d5"
        ],
        [
            "assert (CongA D C R R C D) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "4b9ad538b456246efa355461bbfcdc847a64c2dc"
        ],
        [
            "assert (CongA A B C R C D) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "8557a2d710688516d4fd6d9e2bea31e007ad7624"
        ],
        [
            "assert (SumA C A B A B C A C D) by (conclude_def SumA ).",
            "VernacExtend",
            "d312bf8e25fa58897121a228deea9f8d1e249b0e"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_32",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "f05572d51181c9202443ce99ec9c621f00191cb7"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "de46a552574f2453f7a5fd70fa678381c8a5676b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS B A F /\\ Cong A F B A)) by (conclude lemma_extension);destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "1064b285d3db5b419d63d39442c287c100db3d70"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A F) by (conclude_def Col ).",
                        "VernacExtend",
                        "81404a9d53029d406abb438df2ea88979dfd2db7"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3302404df2c9693cdaa14c90d08aa327b8e2c4e0"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
                    ]
                },
                {
                    "command": [
                        "assert (neq B F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "3311f7e0915ee01870bcf1d0e47bbc82a3005605"
                    ]
                },
                {
                    "command": [
                        "assert (neq F B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d5ad8910f3aca3a125d701424f1ef4dd08caa6ea"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F B C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "83567912473d03f042881c21b89359fcd8cec491"
                    ]
                },
                {
                    "command": [
                        "assert (BetS F A B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "77fcef22b8043720c6013898fe58a2213b5c4004"
                    ]
                },
                {
                    "command": [
                        "rename_H H;let Tf:=fresh in assert (Tf:exists E H S, (BetS E C H /\\ CongA E C A C A B /\\ Par E H F B /\\ BetS E S B /\\ BetS C S A)) by (conclude proposition_31short);destruct Tf as [E[H[S]]];spliter.",
                        "VernacExtend",
                        "e9affb350bdc76f1e8aa76b22cbe533983c47903"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f6de27d2290b224fed0d2ab5b24228893a410ec8"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists G, (BetS C B G /\\ Cong B G C B)) by (conclude lemma_extension);destruct Tf as [G];spliter.",
                        "VernacExtend",
                        "a9dc944d3e692303f1c9b72cd8ec712f2c495995"
                    ]
                },
                {
                    "command": [
                        "assert (neq C A) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "c8c6037c8dc0e793c06fbcbf31a6f2299782d479"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists J, (BetS C A J /\\ Cong A J C A)) by (conclude lemma_extension);destruct Tf as [J];spliter.",
                        "VernacExtend",
                        "bdbe7260fa17d098ce14952e0576d89b64a4c992"
                    ]
                },
                {
                    "command": [
                        "assert (neq A C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "d3502433b3e0473a7498224779513e518068209b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists K, (BetS A C K /\\ Cong C K A C)) by (conclude lemma_extension);destruct Tf as [K];spliter.",
                        "VernacExtend",
                        "417f27e1e21467ac0498136345e5ce7bbfc7cafe"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS A B M /\\ Cong B M A B)) by (conclude lemma_extension);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "c0aa7d33489377509f58c09d6710db8aa44ce398"
                    ]
                },
                {
                    "command": [
                        "assert (Col F B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fab96fab873903b4c00e4f0ffb4198c270edd29e"
                    ]
                },
                {
                    "command": [
                        "assert (Par E H A B) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "c049f3d36346fb39c7e6a51b35dbeeac30aef095"
                    ]
                },
                {
                    "command": [
                        "assert (BetS K C A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ddeac2bf96733a04aaf25a04c525949e712d197b"
                    ]
                },
                {
                    "command": [
                        "assert (Col C S A) by (conclude_def Col ).",
                        "VernacExtend",
                        "1b35bb16a896b089c05b9fa0347c9e884cfc8a7e"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A S) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b28d20969afa82ec965f8c598d767a37d42623f7"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C S) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "20bba03fd9eec07601fa555714f7ab6e38282768"
                    ]
                },
                {
                    "command": [
                        "assert (neq C S) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "de5865a5e40d2cca2bddee91f3c12143bcb031f5"
                    ]
                },
                {
                    "command": [
                        "assert (neq S C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "e4f2025262f49c92f162ed05d04af47a3d2842ba"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C C) by (conclude_def Col ).",
                        "VernacExtend",
                        "3068c83efc791ee2a0b851232bbf95facf2cfb45"
                    ]
                },
                {
                    "command": [
                        "assert (nCol S C B) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "5f1bc1337b00b4be9fd77bb69f9f3f6ea2c72f53"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B S C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "cc50b2d4335f2c9caeabb38e8689e2da19d319f0"
                    ]
                },
                {
                    "command": [
                        "assert (Col E S B) by (conclude_def Col ).",
                        "VernacExtend",
                        "e6ba7f5dc684f373b55aa15c933be7d7b6d221c4"
                    ]
                },
                {
                    "command": [
                        "assert (Col B S E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "36f8c026cc06c54d430fe3a941fc9c0601c6050c"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col B S B) by (conclude_def Col ).",
                        "VernacExtend",
                        "b8a99445bc6da48483093d35acadf2971b272b2d"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B S E) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "a00a043407761184ebf3182534aee391a1ca1da8"
                    ]
                },
                {
                    "command": [
                        "assert (neq B E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "33d569a7c9181367345905ba23a4d65f23db0a03"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B E C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "60c7e1d1decc26b56ec2b68c29bdf043670b8e99"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E S) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f39fd7d14869ed11f28b4ba333715b057cc312cf"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E E) by (conclude_def Col ).",
                        "VernacExtend",
                        "8cce97936f346b902dd5d8ffb6243f42866766aa"
                    ]
                },
                {
                    "command": [
                        "assert (neq S E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "6e35d37cb08e8390b0d1daca03d79ec5442efcb9"
                    ]
                },
                {
                    "command": [
                        "assert (nCol S E C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "d45a12881a715d876443466b62ce48e3dc657e03"
                    ]
                },
                {
                    "command": [
                        "assert (nCol S C E) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "8897957a3a4eee44943a5aa2e46a9f9797523b83"
                    ]
                },
                {
                    "command": [
                        "assert (Col S C C) by (conclude_def Col ).",
                        "VernacExtend",
                        "b8d952f41209c52bc4dc0707766721de52aefbc8"
                    ]
                },
                {
                    "command": [
                        "assert (Col C S A) by (conclude_def Col ).",
                        "VernacExtend",
                        "1b35bb16a896b089c05b9fa0347c9e884cfc8a7e"
                    ]
                },
                {
                    "command": [
                        "assert (Col S C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "4faff4f73efe3a3e0fcc1548aba3088a70db5740"
                    ]
                },
                {
                    "command": [
                        "assert (neq C A) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "fd49ca921de734b27ab456d3bb01077d3160cc82"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C A E) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "0e5a43f3c19ff5a4882185464a9e31037acb947d"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B M) by (conclude_def Col ).",
                        "VernacExtend",
                        "639ca0d6869bef40da5fde91bbd7498a1a3a33ec"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "20d71deeb49a9dd3130caa7e6c2a12dc211fcb66"
                    ]
                },
                {
                    "command": [
                        "assert (Par E H B A) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "39d22cc91fcd4d8ed1507a74b8c417dd6bbbc5da"
                    ]
                },
                {
                    "command": [
                        "assert (neq A M) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "407201e66570093eecf4511ea06ce7ff3751330d"
                    ]
                },
                {
                    "command": [
                        "assert (neq M A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "4ef354a6e7b0311428e5a56e1e5728422738823e"
                    ]
                },
                {
                    "command": [
                        "assert (Par E H M A) by (conclude lemma_collinearparallel).",
                        "VernacExtend",
                        "40f9518f00c64fb2b26c773699a30b067958d8a4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS H C E) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "41fb49bdd6c67647ed5b2175a2daa7ad0f297d98"
                    ]
                },
                {
                    "command": [
                        "assert (BetS M B A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "9fcba825ebc91027dd9883174e86339749256f3c"
                    ]
                },
                {
                    "command": [
                        "assert (BetS F A B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "77fcef22b8043720c6013898fe58a2213b5c4004"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D C B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "f8e83b3954564e194be4b1d9fbbe17468f2a408c"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B C A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "08abc6c2b49fca606fde82afd7a7faa19e5ae589"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "6fa4d8521101c4cf3f499b7ee679c8ac57247afc"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (neq B E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "33d569a7c9181367345905ba23a4d65f23db0a03"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E C H) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "0981b1cdbb58389679ff12508d2fc9bd13aafb3c"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A S C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "eb3caae2e2ca86181eeb22ae9b81162baa506d57"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C E A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "042d712504b797e36a5c89c303926ee973a2048a"
                    ]
                },
                {
                    "command": [
                        "assert (Col C E H) by (conclude_def Col ).",
                        "VernacExtend",
                        "53b98859de49b15f1af247a56838527952c28071"
                    ]
                },
                {
                    "command": [
                        "assert (Col C E E) by (conclude_def Col ).",
                        "VernacExtend",
                        "23880f92a5db3f2807fb78c640dd239e90e26d37"
                    ]
                },
                {
                    "command": [
                        "assert (neq E H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f224b963b427a2716200c2752fccdccaf4ad7d4f"
                    ]
                },
                {
                    "command": [
                        "assert (neq H E) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "37b87d1662cb842d5199ef2777ef4add1c0b5127"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H E A) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "d4b4f89e72cf438c806b718a8213fe513a21d82c"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E H A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "d32a5682d727fe84f88e13b28a265971e679dd43"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists Q, (BetS A Q H /\\ BetS E S Q)) by (conclude postulate_Pasch_outer);destruct Tf as [Q];spliter.",
                        "VernacExtend",
                        "3e7d9619d56b404c79e2ef1e5253c9177fcdbfb5"
                    ]
                },
                {
                    "command": [
                        "assert (Col E S Q) by (conclude_def Col ).",
                        "VernacExtend",
                        "916f41da6b9f2ea6b95e4b606bc1c2f35297cd8e"
                    ]
                },
                {
                    "command": [
                        "assert (Col S E B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "0a316b8c9e87f38c8d52b97bc9d6a7b1cc4c4dc5"
                    ]
                },
                {
                    "command": [
                        "assert (Col S E Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "dc752e757e6feadfafb8809385912ef7ad712d88"
                    ]
                },
                {
                    "command": [
                        "assert (Col E B Q) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "aaa0709d54b6f5040374ef915fc489990e7154dc"
                    ]
                },
                {
                    "command": [
                        "assert (Col B E Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "51ce59b06cd31af717f6a01a74baf47f8b5d03a4"
                    ]
                },
                {
                    "command": [
                        "assert (neq H E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ec46262ca3c75d19c225f2ba2517176a9fa3929a"
                    ]
                },
                {
                    "command": [
                        "assert (neq C E) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a8cb02cc27caec779e42911044c466350ef0446a"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists L, (BetS H E L /\\ Cong E L C E)) by (conclude lemma_extension);destruct Tf as [L];spliter.",
                        "VernacExtend",
                        "e3a7bade31664d3e1312aa7ba3703219fb516c6b"
                    ]
                },
                {
                    "command": [
                        "assert (BetS L E H) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "a681db0a32b9f511cb0eab41ea8ab0b21130cb7d"
                    ]
                },
                {
                    "command": [
                        "assert (Col L E H) by (conclude_def Col ).",
                        "VernacExtend",
                        "6cb5176dd19caa43886a91dc6e5dbbe3e256b396"
                    ]
                },
                {
                    "command": [
                        "assert (neq L H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "b028739fc4c59cf87167f5401dee883fa8b75e66"
                    ]
                },
                {
                    "command": [
                        "assert (neq E H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f224b963b427a2716200c2752fccdccaf4ad7d4f"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B M) by (conclude_def Col ).",
                        "VernacExtend",
                        "639ca0d6869bef40da5fde91bbd7498a1a3a33ec"
                    ]
                },
                {
                    "command": [
                        "assert (neq A M) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "407201e66570093eecf4511ea06ce7ff3751330d"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "729d99d00883cb65929e87e6a48ea0634ac9dc68"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet A M L H).",
                        "VernacExtend",
                        "4b5faaeb14d2df896d1fc868e3837723a92eb481"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists c, (neq A M /\\ neq L H /\\ Col A M c /\\ Col L H c)) by (conclude_def Meet );destruct Tf as [c];spliter.",
                        "VernacExtend",
                        "bfc553861b508590beaaff4456f3e405436ae9fe"
                    ]
                },
                {
                    "command": [
                        "assert (Col H E L) by (conclude_def Col ).",
                        "VernacExtend",
                        "993b99cb993699c579a65c460d1a3911bb4f52dc"
                    ]
                },
                {
                    "command": [
                        "assert (Col L H E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "15313f7e3ec3fddebbd323fa160011a194f4f5a3"
                    ]
                },
                {
                    "command": [
                        "assert (neq H L) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9d83873a023f808f891a05adb39b37d5fa6fcef7"
                    ]
                },
                {
                    "command": [
                        "assert (neq L H) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "42ef726f3f78a261236dee4cf96756e92c0b7c41"
                    ]
                },
                {
                    "command": [
                        "assert (Col H c E) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "0b9bb12092ba2547e4cc6306bd087a16bb425db6"
                    ]
                },
                {
                    "command": [
                        "assert (Col E H c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "c97c296292b3573f05f7e4f4d5540e374af53816"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B M) by (conclude_def Col ).",
                        "VernacExtend",
                        "639ca0d6869bef40da5fde91bbd7498a1a3a33ec"
                    ]
                },
                {
                    "command": [
                        "assert (Col M A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "78ad6447674bdc580d03092e6cc3497abeea0366"
                    ]
                },
                {
                    "command": [
                        "assert (Col M A c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7be5ff26ffb5196d4110b47327f0e9879096a089"
                    ]
                },
                {
                    "command": [
                        "assert (neq A M) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "407201e66570093eecf4511ea06ce7ff3751330d"
                    ]
                },
                {
                    "command": [
                        "assert (neq M A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "4ef354a6e7b0311428e5a56e1e5728422738823e"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B c) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "eada3d1f16fcff7d53a303248b5b9f3e2705125e"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A F) by (conclude_def Col ).",
                        "VernacExtend",
                        "81404a9d53029d406abb438df2ea88979dfd2db7"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3302404df2c9693cdaa14c90d08aa327b8e2c4e0"
                    ]
                },
                {
                    "command": [
                        "assert (Col B c F) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "3787a4f4bfdc771b80001cd5044c1d8e1468d311"
                    ]
                },
                {
                    "command": [
                        "assert (Col F B c) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b43cda07d3113a998d60f90554ab43d7ac3c4912"
                    ]
                },
                {
                    "command": [
                        "assert (Meet E H F B) by (conclude_def Meet ).",
                        "VernacExtend",
                        "0e836e923970391eca596abb84700ef30eb48e48"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet E H F B) by (conclude_def Par ).",
                        "VernacExtend",
                        "23bf21b1049a407c9ce09e4187bf4679f6cb03b8"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B Q E) by (conclude lemma_collinearbetween).",
                        "VernacExtend",
                        "4436e0603fd612b8f269c57126c5f6257aa0f1ab"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A H E) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "917b54660a0d465a1026bfc3ed46f4a8d6bba078"
                    ]
                },
                {
                    "command": [
                        "assert (Col A Q H) by (conclude_def Col ).",
                        "VernacExtend",
                        "ce2771a2d67f274bc621f8da2d4e22e5b3cb3d48"
                    ]
                },
                {
                    "command": [
                        "assert (Col A H Q) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "014455a6150309d4744d752be73dc2b1c9718d8d"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (Col A H H) by (conclude_def Col ).",
                        "VernacExtend",
                        "752a371e1746e48b35408d6febcf6c383d3fcfb7"
                    ]
                },
                {
                    "command": [
                        "assert (neq Q H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "7ed5953acee7638f7cae0aadd0d4a194695d9f8d"
                    ]
                },
                {
                    "command": [
                        "assert (nCol Q H E) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "54867cbfcad478f34fcc2556227ef9b3c25006a2"
                    ]
                },
                {
                    "command": [
                        "assert (nCol Q E H) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "bfd9425837aaa4f3f91b6fe5c7c4c8af1942dc5b"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q E E) by (conclude_def Col ).",
                        "VernacExtend",
                        "a51c13e8e740522a847569f276cde180f292c72f"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q E B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "27763286e0e2a310864c2cade70bac72cabca362"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B E H) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "6ea4efa48726078479b070a655f333428ca3a609"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists T, (BetS B T C /\\ BetS H T Q)) by (conclude postulate_Pasch_inner);destruct Tf as [T];spliter.",
                        "VernacExtend",
                        "ba626d5c99ca587634707a54bbb6024a2fbf4b50"
                    ]
                },
                {
                    "command": [
                        "assert (BetS Q T H) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "da28d7865b69caeb00b5c1454d6d902b8ab48952"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A T H) by (conclude lemma_3_5b).",
                        "VernacExtend",
                        "c3e72874e523ecc7c5ec80c411639bee7b61772f"
                    ]
                },
                {
                    "command": [
                        "assert (Col B T C) by (conclude_def Col ).",
                        "VernacExtend",
                        "aa636ca03e9ee9ac93f51c19e75193c26504b119"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B T) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e835bc4013595f653ce7f23d36e08924978523db"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C B A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "a4d3eddbdbf0e243199e65bd2fb15e7f1447fc66"
                    ]
                },
                {
                    "command": [
                        "assert (TS A C B H) by (conclude_def TS ).",
                        "VernacExtend",
                        "9be414125ef762c506ce6f8003861646634e3191"
                    ]
                },
                {
                    "command": [
                        "assert (TS H C B A) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "f6637c2ea0f7cc3fa027d269fd1a84c9b67956c9"
                    ]
                },
                {
                    "command": [
                        "assert (Par H E M A) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "ebc70125f6db1e0c99151906ac2f1441194df452"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A C E B A C) by (conclude lemma_equalanglesflip).",
                        "VernacExtend",
                        "160fa0ad8b37f6eb7d70d13b9bbe246bdaf0989c"
                    ]
                },
                {
                    "command": [
                        "assert ((CongA H C B C B A /\\ CongA D C E C B A /\\ RT E C B C B A)) by (conclude proposition_29).",
                        "VernacExtend",
                        "e229ee2666940497b67cc47f2cb6d29df17ce926"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C B A A B C) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "944d8975dcf87abfbf9178008fcabb9fcd62f1f9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D C E A B C) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "8b746ec628fd0737edfa6a45c73e020251123d4c"
                    ]
                },
                {
                    "command": [
                        "assert (BetS T C D) by (conclude lemma_3_6a).",
                        "VernacExtend",
                        "c1abf4bd629048c632ae2aadb8fb168bb5e3d915"
                    ]
                },
                {
                    "command": [
                        "assert (neq T D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "530a96e70aeb2738d4943b49ab7f7530c4b3c886"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B C A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "08abc6c2b49fca606fde82afd7a7faa19e5ae589"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C T) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3dae94cb110ac5f30cec2afa4ea5b53a7315dc71"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C D) by (conclude_def Col ).",
                        "VernacExtend",
                        "afd1e2d0a6ae54ac1da609fde4731349b531ba6f"
                    ]
                },
                {
                    "command": [
                        "assert (nCol T D A) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "49ebce90a8c4dc319d2fcce28b40eb50157c7540"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A T D) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "c4d61a09aa9f54987fe82ac62e408dfa1167eec9"
                    ]
                },
                {
                    "command": [
                        "assert (Col A T A) by (conclude_def Col ).",
                        "VernacExtend",
                        "017e4c275a77000aa0c22b2e9616cbfce4c74643"
                    ]
                },
                {
                    "command": [
                        "assert (Col A T H) by (conclude_def Col ).",
                        "VernacExtend",
                        "7d2ad0c533b8ba23552598fd4bf4b62dab2f2865"
                    ]
                },
                {
                    "command": [
                        "assert (neq A H) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "2bbddeb343ed90ffab77cd5a294b68942effb117"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A H D) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "dfdc3507d4eadf48f66bd5e8d54de33ed47f50a3"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H A D) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "7bc78e1a016c2ce8b8199b864e04f8ddc6842487"
                    ]
                },
                {
                    "command": [
                        "assert (BetS H T A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "cbc274282077073ca99e1c97bd93c60ed5f112b4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D C T) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "c3af7f027b9e98cc3441fddc21a26a5d2f87b73d"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists R, (BetS D R A /\\ BetS H C R)) by (conclude postulate_Pasch_outer);destruct Tf as [R];spliter.",
                        "VernacExtend",
                        "013ed3bca5f5a3ed2312c163416b58f205cfbd65"
                    ]
                },
                {
                    "command": [
                        "assert (Out C E R) by (conclude_def Out ).",
                        "VernacExtend",
                        "90e86d6db6f9d1775c0bfcfc0822cdb11b44df00"
                    ]
                },
                {
                    "command": [
                        "assert (Out C A A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "c5aa51775ac2d6725d437ebc1841e67fe453c920"
                    ]
                },
                {
                    "command": [
                        "assert (neq C D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "ec8ed20fd91c966709071dfab476d123976a3733"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (BetS A R D) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "e8cd63b799dfe85a52c143d7aa3348d18081fbf5"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C A C E) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "bd3922c8e5504f3c52af7cf82bd548d0806816f9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C A C R) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "1af8bdb93ce0d2708bb82dd614ca8d14b9ef2f45"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C A B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "e7185bac6af815e2eedf681e13d2558faef5022b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C A B B A C) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "d32e86d94f4fb6e7d75c60d9f4082722376a87a7"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C A B A C R) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "bc70358bc38e3c3d6873ba3cd558b19c823cf4e3"
                    ]
                },
                {
                    "command": [
                        "assert (Out C D D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "5edaa1cc05e74baaf8ca5eff45ab4cd858d1f9e7"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C D C E) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "84efe0fdd83d885cbc421018b152facb71c7e3e1"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C D C R) by (conclude lemma_equalangleshelper).",
                        "VernacExtend",
                        "809874834aac7ec7b5d93ce778132972a2e92f93"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A D H) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "12928b5b1a35b698d520294dd37ccad1d56367cc"
                    ]
                },
                {
                    "command": [
                        "assert (Col D R A) by (conclude_def Col ).",
                        "VernacExtend",
                        "a6a01f3f764af0d67a5e282779df7a1d89169601"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D R) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3aca11d326f609a29f66fd6342164f8939b58703"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D D) by (conclude_def Col ).",
                        "VernacExtend",
                        "f1df087c3a106a6e7039b8d1f9ef8fe564e0604c"
                    ]
                },
                {
                    "command": [
                        "assert (neq D R) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "fbccfc90511c5d286ebe2b7054f497278e10e61c"
                    ]
                },
                {
                    "command": [
                        "assert (neq R D) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "05c057475199db0e90432dbd164a5d2a2cd96b3c"
                    ]
                },
                {
                    "command": [
                        "assert (nCol R D H) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "9bb992b96723465b6740fcf925613a8097d7155b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol R H D) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "a12b69398141db10de1478616687ae779bd6cd0d"
                    ]
                },
                {
                    "command": [
                        "assert (Col H C R) by (conclude_def Col ).",
                        "VernacExtend",
                        "da93d931525871350b466ff6c88ffa40ebd486bf"
                    ]
                },
                {
                    "command": [
                        "assert (Col R H C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "891b2e24aaf7bd4feeb170b1347361eacef34925"
                    ]
                },
                {
                    "command": [
                        "assert (eq R R) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "5717b4ce5380408a24b2f5d5ee26a24a214afe7d"
                    ]
                },
                {
                    "command": [
                        "assert (Col R H R) by (conclude_def Col ).",
                        "VernacExtend",
                        "4cf75ff72650921daa2afcfe63a9f4d03650f155"
                    ]
                },
                {
                    "command": [
                        "assert (neq C R) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "a9b166ccef177cc7a004e611e239cd5a350026ce"
                    ]
                },
                {
                    "command": [
                        "assert (neq R C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "2a9f089323fa4319c56534b032410301af55d568"
                    ]
                },
                {
                    "command": [
                        "assert (nCol R C D) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "f304b933a5dd1d7653e0d21a2acae3ae754a7146"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D C R) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "d1b962432a871f9d7da7dfea2e65b3f7c78362d5"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D C R R C D) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "4b9ad538b456246efa355461bbfcdc847a64c2dc"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C R C D) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "8557a2d710688516d4fd6d9e2bea31e007ad7624"
                    ]
                },
                {
                    "command": [
                        "assert (SumA C A B A B C A C D) by (conclude_def SumA ).",
                        "VernacExtend",
                        "d312bf8e25fa58897121a228deea9f8d1e249b0e"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}