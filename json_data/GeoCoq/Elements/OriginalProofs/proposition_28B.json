{
    "filename": "Elements/OriginalProofs/proposition_28B.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_supplementsymmetric.",
            "VernacRequire",
            "36714b4634975c371f857bd01fe30e71fcb76353"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_oppositesidesymmetric.",
            "VernacRequire",
            "4e2011e913226485bed5d882d28dd2a3e317b6e7"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_27.",
            "VernacRequire",
            "af50e00317cea13608638a2bc52fd67959082353"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_28B : forall A B C D G H, BetS A G B -> BetS C H D -> RT B G H G H D -> OS B D G H -> Par A B C D.",
            "VernacStartTheoremProof",
            "eb6b9ac4f9dcd2c61bb1f36424f9b0f391029d9d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (OS D B G H) by (forward_using lemma_samesidesymmetric).",
            "VernacExtend",
            "f2219f2f326f947ab2eabd87492ad7ffb4ccd9d0"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists a b c d e, (Supp a b c e d /\\ CongA B G H a b c /\\ CongA G H D e b d)) by (conclude_def RT );destruct Tf as [a[b[c[d[e]]]]];spliter.",
            "VernacExtend",
            "8057d872f5e29331b897cb9d7de89fa223235234"
        ],
        [
            "assert (CongA a b c B G H) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "42e7f5d31da0976079f3cfd5571e6964c5412553"
        ],
        [
            "assert (neq G H) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "e1df2fe7f17293177c92004f4736ba325777e67b"
        ],
        [
            "assert (CongA e b d G H D) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "0a372e5c6d67bf0c6e6e66d583aad87515ec3eef"
        ],
        [
            "assert (eq H H) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
        ],
        [
            "assert (Out G H H) by (conclude lemma_ray4).",
            "VernacExtend",
            "0da79dc0fdbdf426dc94e017de1280d10243569c"
        ],
        [
            "assert (Supp A G H H B) by (conclude_def Supp ).",
            "VernacExtend",
            "9f633f259d56beb45ab54c9494259b7144eb82ec"
        ],
        [
            "assert (Supp B G H H A) by (conclude lemma_supplementsymmetric).",
            "VernacExtend",
            "61c968456eeb3f2321466077ae0d496a4e26bad5"
        ],
        [
            "assert (CongA e b d H G A) by (conclude lemma_supplements).",
            "VernacExtend",
            "b282918a9393f02f5870e9b018d4571eac1303c3"
        ],
        [
            "assert (CongA G H D e b d) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "66b172f338a40fcf70c75cf06c4f206730a381a3"
        ],
        [
            "assert (CongA G H D H G A) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "b68c302c6688062180444bb0ef66ae028450d0d9"
        ],
        [
            "assert (nCol H G A) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "706677af413798d45d5e9d8116b6433be7cd9440"
        ],
        [
            "assert (CongA H G A A G H) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "9647d9a8a1b7ac59be7c37cdf725b87391acf353"
        ],
        [
            "assert (CongA G H D A G H) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "1d612d263e3d45266177e1a7a66dd6374e2d9849"
        ],
        [
            "assert (CongA A G H G H D) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "e02abe4f63509db1fc793a8abbc6a10ebcd4ca34"
        ],
        [
            "assert (eq G G) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
        ],
        [
            "assert (Col G H G) by (conclude_def Col ).",
            "VernacExtend",
            "087ad4e46922f1209cf97725fc10d113a6fc9c57"
        ],
        [
            "assert (nCol A G H) by (conclude lemma_equalanglesNC).",
            "VernacExtend",
            "f06759d2dae3a7407448e5247a7191d200b2a57c"
        ],
        [
            "assert (~ Col G H A).",
            "VernacExtend",
            "a79ab6e669f589425f6e27f3f83bf8bb561cf127"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A G H) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "12f18aa67035f0c54c66f6f1bf78b1ecee09d65c"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (TS A G H B) by (conclude_def TS ).",
            "VernacExtend",
            "ef93354acd487cc6e3d4aae3b38d0db3f664d814"
        ],
        [
            "assert (TS B G H A) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "1089f8f9920e02f1372143af575761d2e7e32be4"
        ],
        [
            "assert (TS D G H A) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "22169f48e4c9b0a8f377f64c9763e88a4ec98b14"
        ],
        [
            "assert (TS A G H D) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "1c3b9b02dca9c0f807a2e944a155bf671b1e4c05"
        ],
        [
            "assert (Par A B C D) by (conclude proposition_27).",
            "VernacExtend",
            "f7c01f086521e973d64a08bcc4d200c0c0609760"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_28B",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (OS D B G H) by (forward_using lemma_samesidesymmetric).",
                        "VernacExtend",
                        "f2219f2f326f947ab2eabd87492ad7ffb4ccd9d0"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists a b c d e, (Supp a b c e d /\\ CongA B G H a b c /\\ CongA G H D e b d)) by (conclude_def RT );destruct Tf as [a[b[c[d[e]]]]];spliter.",
                        "VernacExtend",
                        "8057d872f5e29331b897cb9d7de89fa223235234"
                    ]
                },
                {
                    "command": [
                        "assert (CongA a b c B G H) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "42e7f5d31da0976079f3cfd5571e6964c5412553"
                    ]
                },
                {
                    "command": [
                        "assert (neq G H) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "e1df2fe7f17293177c92004f4736ba325777e67b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA e b d G H D) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "0a372e5c6d67bf0c6e6e66d583aad87515ec3eef"
                    ]
                },
                {
                    "command": [
                        "assert (eq H H) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "4edcfc35fe1c1eb61e5f33e0efa52ce557093efe"
                    ]
                },
                {
                    "command": [
                        "assert (Out G H H) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "0da79dc0fdbdf426dc94e017de1280d10243569c"
                    ]
                },
                {
                    "command": [
                        "assert (Supp A G H H B) by (conclude_def Supp ).",
                        "VernacExtend",
                        "9f633f259d56beb45ab54c9494259b7144eb82ec"
                    ]
                },
                {
                    "command": [
                        "assert (Supp B G H H A) by (conclude lemma_supplementsymmetric).",
                        "VernacExtend",
                        "61c968456eeb3f2321466077ae0d496a4e26bad5"
                    ]
                },
                {
                    "command": [
                        "assert (CongA e b d H G A) by (conclude lemma_supplements).",
                        "VernacExtend",
                        "b282918a9393f02f5870e9b018d4571eac1303c3"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G H D e b d) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "66b172f338a40fcf70c75cf06c4f206730a381a3"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G H D H G A) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "b68c302c6688062180444bb0ef66ae028450d0d9"
                    ]
                },
                {
                    "command": [
                        "assert (nCol H G A) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "706677af413798d45d5e9d8116b6433be7cd9440"
                    ]
                },
                {
                    "command": [
                        "assert (CongA H G A A G H) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "9647d9a8a1b7ac59be7c37cdf725b87391acf353"
                    ]
                },
                {
                    "command": [
                        "assert (CongA G H D A G H) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "1d612d263e3d45266177e1a7a66dd6374e2d9849"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A G H G H D) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "e02abe4f63509db1fc793a8abbc6a10ebcd4ca34"
                    ]
                },
                {
                    "command": [
                        "assert (eq G G) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "ceec5da855388b0cfaa07a6b0ade9e68d09baace"
                    ]
                },
                {
                    "command": [
                        "assert (Col G H G) by (conclude_def Col ).",
                        "VernacExtend",
                        "087ad4e46922f1209cf97725fc10d113a6fc9c57"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A G H) by (conclude lemma_equalanglesNC).",
                        "VernacExtend",
                        "f06759d2dae3a7407448e5247a7191d200b2a57c"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col G H A).",
                        "VernacExtend",
                        "a79ab6e669f589425f6e27f3f83bf8bb561cf127"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A G H) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "12f18aa67035f0c54c66f6f1bf78b1ecee09d65c"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (TS A G H B) by (conclude_def TS ).",
                        "VernacExtend",
                        "ef93354acd487cc6e3d4aae3b38d0db3f664d814"
                    ]
                },
                {
                    "command": [
                        "assert (TS B G H A) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "1089f8f9920e02f1372143af575761d2e7e32be4"
                    ]
                },
                {
                    "command": [
                        "assert (TS D G H A) by (conclude lemma_planeseparation).",
                        "VernacExtend",
                        "22169f48e4c9b0a8f377f64c9763e88a4ec98b14"
                    ]
                },
                {
                    "command": [
                        "assert (TS A G H D) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "1c3b9b02dca9c0f807a2e944a155bf671b1e4c05"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B C D) by (conclude proposition_27).",
                        "VernacExtend",
                        "f7c01f086521e973d64a08bcc4d200c0c0609760"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}