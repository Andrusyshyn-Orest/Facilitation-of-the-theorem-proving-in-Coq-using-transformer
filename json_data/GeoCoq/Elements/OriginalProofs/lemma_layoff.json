{
    "filename": "Elements/OriginalProofs/lemma_layoff.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_extension.",
            "VernacRequire",
            "7a395274ff58b809e27cefedbbe9b45804acec33"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_layoff : forall A B C D, neq A B -> neq C D -> exists X, Out A B X /\\ Cong A X C D.",
            "VernacStartTheoremProof",
            "30ef0becb00d1922dbae1a0329e730ede1455978"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~ eq B A).",
            "VernacExtend",
            "7c5358479e6131dbd5aff685ef4c86dbe092625e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq A B) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "e091317cf46e5f53a40c1c49c9759b4c4f76a3cf"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (BetS B A E /\\ Cong A E C D)) by (conclude lemma_extension);destruct Tf as [E];spliter.",
            "VernacExtend",
            "f2c541b2c2b94acb1a2a72475360c1e448eed2b1"
        ],
        [
            "assert (BetS E A B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "e66c611b32d479b6be6fdb8bc566786d01b7d411"
        ],
        [
            "assert (neq E A) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8f7fee3eedee25ddd548f0a1db8e30b7d2d248a4"
        ],
        [
            "assert (BetS E A B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "e66c611b32d479b6be6fdb8bc566786d01b7d411"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P, (BetS E A P /\\ Cong A P C D)) by (conclude lemma_extension);destruct Tf as [P];spliter.",
            "VernacExtend",
            "b5e9f2d2d8e731c65f3968736ee35972e731a250"
        ],
        [
            "assert (Out A B P) by (conclude_def Out ).",
            "VernacExtend",
            "c93bd93fcada5d5df3b5027d51d686044e588763"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_layoff",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B A).",
                        "VernacExtend",
                        "7c5358479e6131dbd5aff685ef4c86dbe092625e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq A B) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "e091317cf46e5f53a40c1c49c9759b4c4f76a3cf"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (BetS B A E /\\ Cong A E C D)) by (conclude lemma_extension);destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "f2c541b2c2b94acb1a2a72475360c1e448eed2b1"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E A B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "e66c611b32d479b6be6fdb8bc566786d01b7d411"
                    ]
                },
                {
                    "command": [
                        "assert (neq E A) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8f7fee3eedee25ddd548f0a1db8e30b7d2d248a4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E A B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "e66c611b32d479b6be6fdb8bc566786d01b7d411"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists P, (BetS E A P /\\ Cong A P C D)) by (conclude lemma_extension);destruct Tf as [P];spliter.",
                        "VernacExtend",
                        "b5e9f2d2d8e731c65f3968736ee35972e731a250"
                    ]
                },
                {
                    "command": [
                        "assert (Out A B P) by (conclude_def Out ).",
                        "VernacExtend",
                        "c93bd93fcada5d5df3b5027d51d686044e588763"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}