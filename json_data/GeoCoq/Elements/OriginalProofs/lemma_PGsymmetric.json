{
    "filename": "Elements/OriginalProofs/lemma_PGsymmetric.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_parallelsymmetric.",
            "VernacRequire",
            "380a5936af7e0007ca86a397621339008584ccda"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_parallelflip.",
            "VernacRequire",
            "7e326a39aefef12c19bc0b3c6ce0d726a1c02da9"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral}.",
            "VernacContext",
            "2b23404dca7c933c43ab174476f98a2dd3fed6cf"
        ],
        [
            "Lemma lemma_PGsymmetric : forall A B C D, PG A B C D -> PG C D A B.",
            "VernacStartTheoremProof",
            "ef67a78dbfe6ab1ee41d8c647d386b08d9bbc473"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((Par A B C D /\\ Par A D B C)) by (conclude_def PG ).",
            "VernacExtend",
            "c77dd17b33f6ec4d8aa9e075e4dc231661c9c7c2"
        ],
        [
            "assert (Par C D A B) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "ce8640be6fb122eec488f5cfb6cd2e44b3f51495"
        ],
        [
            "assert (Par B C A D) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "9293b6a2d3afdc1e2dacfbb39c26ab8ec1fce45f"
        ],
        [
            "assert (Par C B D A) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "8226e5314be45aa31239f968a583a8daa31c9dce"
        ],
        [
            "assert (PG C D A B) by (conclude_def PG ).",
            "VernacExtend",
            "b840601d7dca9b8af4aace51cf51b11ede20c06c"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_PGsymmetric",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((Par A B C D /\\ Par A D B C)) by (conclude_def PG ).",
                        "VernacExtend",
                        "c77dd17b33f6ec4d8aa9e075e4dc231661c9c7c2"
                    ]
                },
                {
                    "command": [
                        "assert (Par C D A B) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "ce8640be6fb122eec488f5cfb6cd2e44b3f51495"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C A D) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "9293b6a2d3afdc1e2dacfbb39c26ab8ec1fce45f"
                    ]
                },
                {
                    "command": [
                        "assert (Par C B D A) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "8226e5314be45aa31239f968a583a8daa31c9dce"
                    ]
                },
                {
                    "command": [
                        "assert (PG C D A B) by (conclude_def PG ).",
                        "VernacExtend",
                        "b840601d7dca9b8af4aace51cf51b11ede20c06c"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}