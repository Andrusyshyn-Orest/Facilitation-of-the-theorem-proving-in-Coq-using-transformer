{
    "filename": "Elements/OriginalProofs/proposition_36A.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_collinearparallel2.",
            "VernacRequire",
            "2fd3906a80134e8ea54e818c7918eeeb15419f3b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_33.",
            "VernacRequire",
            "573ba20c8ad84f5a81770a01198bdb9d35b3c6ec"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_35.",
            "VernacRequire",
            "7b66973815222aa79fdd9ed3761d94162027f68b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_PGsymmetric.",
            "VernacRequire",
            "8172bdfa327bbff1611c098fa97eb7fee168cebd"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:area}.",
            "VernacContext",
            "81ffa005c6d27ee71f963c56f9847264efce50bb"
        ],
        [
            "Lemma proposition_36A : forall A B C D E F G H M, PG A B C D -> PG E F G H -> Col A D E -> Col A D H -> Col B C F -> Col B C G -> Cong B C F G -> BetS B M H -> BetS C M E -> EF A B C D E F G H.",
            "VernacStartTheoremProof",
            "2e5b9b267b88410ac8efd4299f978576160145d3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((Par A B C D /\\ Par A D B C)) by (conclude_def PG ).",
            "VernacExtend",
            "c77dd17b33f6ec4d8aa9e075e4dc231661c9c7c2"
        ],
        [
            "assert ((Par E F G H /\\ Par E H F G)) by (conclude_def PG ).",
            "VernacExtend",
            "e898395bb6317c13f343d9dde6d2b1121112db8a"
        ],
        [
            "assert (nCol A C D) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "f756b81bb0815333592a3de8e0057ed20e62d72b"
        ],
        [
            "assert (neq A D) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "3b96af8ab9fddde4f358b7b7ca0a2caaf9675c51"
        ],
        [
            "assert (Cong A D B C) by (forward_using proposition_34).",
            "VernacExtend",
            "962b83cad359c26d1b1131e41c44b5ad3f72e618"
        ],
        [
            "assert (Cong E H F G) by (forward_using proposition_34).",
            "VernacExtend",
            "f7f4884a4c83425459172eb56d8f6ebb22e31a09"
        ],
        [
            "assert (Cong F G E H) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "d1af200e92e2fb9234d2024ae3af8d69be42fd1f"
        ],
        [
            "assert (Cong B C E H) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "dec0a22890dec8f07017eb38da3856fe7ba59b57"
        ],
        [
            "assert (Par B C A D) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "9293b6a2d3afdc1e2dacfbb39c26ab8ec1fce45f"
        ],
        [
            "assert (nCol A B C) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "30b2269e12d3d82d20738e21215d5428affb96f6"
        ],
        [
            "assert (neq B C) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "0bb577205eb42d8f9fe7d193058e6055102c5a78"
        ],
        [
            "assert (neq E H) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "b8faba3b8fbf6e24fcf75ddbe45d0cb349534b45"
        ],
        [
            "assert (Par B C E H) by (conclude lemma_collinearparallel2).",
            "VernacExtend",
            "d2adf61d6fab1584529ea5df1aba5381af3f4ef1"
        ],
        [
            "assert ((Par B E C H /\\ Cong B E C H)) by (conclude proposition_33).",
            "VernacExtend",
            "a1f051b873b716305b953427a619377d65d0213d"
        ],
        [
            "assert (Par E B C H) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "288b94d3bbcedad61d22b7f296b802b344bb9e91"
        ],
        [
            "assert (Par E H B C) by (conclude lemma_parallelsymmetric).",
            "VernacExtend",
            "fcbb3e545206b31e49c324ae887c7188f0752240"
        ],
        [
            "assert (PG E B C H) by (conclude_def PG ).",
            "VernacExtend",
            "ceb0179c08cebacda2256ad69b6a62ee5610dbfc"
        ],
        [
            "assert (EF A B C D E B C H) by (conclude proposition_35).",
            "VernacExtend",
            "0369a3403e34d326c9089f72dfabbd19843b7006"
        ],
        [
            "assert (Cong F G B C) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "7d3f56a0b37441f1c74d53c63d19e32552590f5b"
        ],
        [
            "assert (Cong G F C B) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "2521d8a8ffb52b6cd4c2f75fe19a4762d910028e"
        ],
        [
            "assert (PG C H E B) by (conclude lemma_PGsymmetric).",
            "VernacExtend",
            "8f300ed5ac08804b750ad2aa24625d5f95e1d466"
        ],
        [
            "assert (nCol A B C) by (forward_using lemma_parallelNC).",
            "VernacExtend",
            "30b2269e12d3d82d20738e21215d5428affb96f6"
        ],
        [
            "assert (neq B C) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "0bb577205eb42d8f9fe7d193058e6055102c5a78"
        ],
        [
            "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "f6de27d2290b224fed0d2ab5b24228893a410ec8"
        ],
        [
            "assert (Col C F G) by (conclude lemma_collinear4).",
            "VernacExtend",
            "5e36f568cf7f9baf3c32bfb77b267a185eedb056"
        ],
        [
            "assert (Col G F C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7ff4ce730eb5e6d9c9504ea532418ee8bbf45b65"
        ],
        [
            "assert (Col C B F) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "41fac16ea0f42a65351f226ecadeba8febdb0f64"
        ],
        [
            "assert (Col C B G) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "9901c787111c66c73fd491cae6310f1c242b873f"
        ],
        [
            "assert (Col B F G) by (conclude lemma_collinear4).",
            "VernacExtend",
            "3e7cc8d89d806b53499a2da42ad0342b8182bb7b"
        ],
        [
            "assert (Col G F B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b9e754115c4af14d8d22ae6febd48fadae6dcc40"
        ],
        [
            "assert (PG G H E F) by (conclude lemma_PGsymmetric).",
            "VernacExtend",
            "02f558dab72d472c63f19079809db4cfc7b866c6"
        ],
        [
            "assert (EF G H E F C H E B) by (conclude proposition_35).",
            "VernacExtend",
            "d13c50932de1c64119466c8f2a6a8dcf2f57d281"
        ],
        [
            "assert (EF G H E F E B C H) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "2f647cd26a79f82d8f1ffc485b44cc96be34de9e"
        ],
        [
            "assert (EF E B C H G H E F) by (conclude axiom_EFsymmetric).",
            "VernacExtend",
            "b49c299d617f9d1804b3935dabd2b1cc94374ac0"
        ],
        [
            "assert (EF A B C D G H E F) by (conclude axiom_EFtransitive).",
            "VernacExtend",
            "fa10de4206474d82014818e3cae4601973ea4365"
        ],
        [
            "assert (EF A B C D E F G H) by (forward_using axiom_EFpermutation).",
            "VernacExtend",
            "8bc7ca66749c07e154de1738d924c697d39d5d29"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_36A",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((Par A B C D /\\ Par A D B C)) by (conclude_def PG ).",
                        "VernacExtend",
                        "c77dd17b33f6ec4d8aa9e075e4dc231661c9c7c2"
                    ]
                },
                {
                    "command": [
                        "assert ((Par E F G H /\\ Par E H F G)) by (conclude_def PG ).",
                        "VernacExtend",
                        "e898395bb6317c13f343d9dde6d2b1121112db8a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A C D) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "f756b81bb0815333592a3de8e0057ed20e62d72b"
                    ]
                },
                {
                    "command": [
                        "assert (neq A D) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "3b96af8ab9fddde4f358b7b7ca0a2caaf9675c51"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A D B C) by (forward_using proposition_34).",
                        "VernacExtend",
                        "962b83cad359c26d1b1131e41c44b5ad3f72e618"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E H F G) by (forward_using proposition_34).",
                        "VernacExtend",
                        "f7f4884a4c83425459172eb56d8f6ebb22e31a09"
                    ]
                },
                {
                    "command": [
                        "assert (Cong F G E H) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "d1af200e92e2fb9234d2024ae3af8d69be42fd1f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C E H) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "dec0a22890dec8f07017eb38da3856fe7ba59b57"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C A D) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "9293b6a2d3afdc1e2dacfbb39c26ab8ec1fce45f"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "30b2269e12d3d82d20738e21215d5428affb96f6"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "0bb577205eb42d8f9fe7d193058e6055102c5a78"
                    ]
                },
                {
                    "command": [
                        "assert (neq E H) by (conclude axiom_nocollapse).",
                        "VernacExtend",
                        "b8faba3b8fbf6e24fcf75ddbe45d0cb349534b45"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C E H) by (conclude lemma_collinearparallel2).",
                        "VernacExtend",
                        "d2adf61d6fab1584529ea5df1aba5381af3f4ef1"
                    ]
                },
                {
                    "command": [
                        "assert ((Par B E C H /\\ Cong B E C H)) by (conclude proposition_33).",
                        "VernacExtend",
                        "a1f051b873b716305b953427a619377d65d0213d"
                    ]
                },
                {
                    "command": [
                        "assert (Par E B C H) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "288b94d3bbcedad61d22b7f296b802b344bb9e91"
                    ]
                },
                {
                    "command": [
                        "assert (Par E H B C) by (conclude lemma_parallelsymmetric).",
                        "VernacExtend",
                        "fcbb3e545206b31e49c324ae887c7188f0752240"
                    ]
                },
                {
                    "command": [
                        "assert (PG E B C H) by (conclude_def PG ).",
                        "VernacExtend",
                        "ceb0179c08cebacda2256ad69b6a62ee5610dbfc"
                    ]
                },
                {
                    "command": [
                        "assert (EF A B C D E B C H) by (conclude proposition_35).",
                        "VernacExtend",
                        "0369a3403e34d326c9089f72dfabbd19843b7006"
                    ]
                },
                {
                    "command": [
                        "assert (Cong F G B C) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "7d3f56a0b37441f1c74d53c63d19e32552590f5b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong G F C B) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "2521d8a8ffb52b6cd4c2f75fe19a4762d910028e"
                    ]
                },
                {
                    "command": [
                        "assert (PG C H E B) by (conclude lemma_PGsymmetric).",
                        "VernacExtend",
                        "8f300ed5ac08804b750ad2aa24625d5f95e1d466"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (forward_using lemma_parallelNC).",
                        "VernacExtend",
                        "30b2269e12d3d82d20738e21215d5428affb96f6"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "0bb577205eb42d8f9fe7d193058e6055102c5a78"
                    ]
                },
                {
                    "command": [
                        "assert (neq C B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "f6de27d2290b224fed0d2ab5b24228893a410ec8"
                    ]
                },
                {
                    "command": [
                        "assert (Col C F G) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "5e36f568cf7f9baf3c32bfb77b267a185eedb056"
                    ]
                },
                {
                    "command": [
                        "assert (Col G F C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7ff4ce730eb5e6d9c9504ea532418ee8bbf45b65"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B F) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "41fac16ea0f42a65351f226ecadeba8febdb0f64"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B G) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "9901c787111c66c73fd491cae6310f1c242b873f"
                    ]
                },
                {
                    "command": [
                        "assert (Col B F G) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "3e7cc8d89d806b53499a2da42ad0342b8182bb7b"
                    ]
                },
                {
                    "command": [
                        "assert (Col G F B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b9e754115c4af14d8d22ae6febd48fadae6dcc40"
                    ]
                },
                {
                    "command": [
                        "assert (PG G H E F) by (conclude lemma_PGsymmetric).",
                        "VernacExtend",
                        "02f558dab72d472c63f19079809db4cfc7b866c6"
                    ]
                },
                {
                    "command": [
                        "assert (EF G H E F C H E B) by (conclude proposition_35).",
                        "VernacExtend",
                        "d13c50932de1c64119466c8f2a6a8dcf2f57d281"
                    ]
                },
                {
                    "command": [
                        "assert (EF G H E F E B C H) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "2f647cd26a79f82d8f1ffc485b44cc96be34de9e"
                    ]
                },
                {
                    "command": [
                        "assert (EF E B C H G H E F) by (conclude axiom_EFsymmetric).",
                        "VernacExtend",
                        "b49c299d617f9d1804b3935dabd2b1cc94374ac0"
                    ]
                },
                {
                    "command": [
                        "assert (EF A B C D G H E F) by (conclude axiom_EFtransitive).",
                        "VernacExtend",
                        "fa10de4206474d82014818e3cae4601973ea4365"
                    ]
                },
                {
                    "command": [
                        "assert (EF A B C D E F G H) by (forward_using axiom_EFpermutation).",
                        "VernacExtend",
                        "8bc7ca66749c07e154de1738d924c697d39d5d29"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}