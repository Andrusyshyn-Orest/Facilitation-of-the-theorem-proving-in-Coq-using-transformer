{
    "filename": "Elements/OriginalProofs/lemma_rectangleparallelogram.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_8_7.",
            "VernacRequire",
            "cc39167830ab8d48ad8711db47c722092fdb226e"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NCdistinct.",
            "VernacRequire",
            "e464db49a36f1840285875a39e67b1d058d20da3"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_rectangleparallelogram : forall A B C D, RE A B C D -> PG A B C D.",
            "VernacStartTheoremProof",
            "2ac2511329fb86cb21462f051fc359fa2d6a8d1b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((Per D A B /\\ Per A B C /\\ Per B C D /\\ Per C D A /\\ CR A C B D)) by (conclude_def RE ).",
            "VernacExtend",
            "8c433dfcdf3d662bb0cadd2a1302790a9b6c157e"
        ],
        [
            "assert (nCol D A B) by (conclude lemma_rightangleNC).",
            "VernacExtend",
            "6accdf93d3e5fcbfa98ecf49f2534bb1950d3db7"
        ],
        [
            "assert (nCol A B C) by (conclude lemma_rightangleNC).",
            "VernacExtend",
            "f2cdc7cb572e9c7235b56c018ed5cae23c323020"
        ],
        [
            "assert (nCol C D A) by (conclude lemma_rightangleNC).",
            "VernacExtend",
            "220c9d07a910f20ff9b0e24adf23eceff8519ff1"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS A M C /\\ BetS B M D)) by (conclude_def CR );destruct Tf as [M];spliter.",
            "VernacExtend",
            "41751579e3286704b7a7a049b78650364170be4c"
        ],
        [
            "assert (~ Meet A B C D).",
            "VernacExtend",
            "03378f4145e3d326f8d303da475716ec3954a985"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P, (neq A B /\\ neq C D /\\ Col A B P /\\ Col C D P)) by (conclude_def Meet );destruct Tf as [P];spliter.",
            "VernacExtend",
            "f699ba536c6417705058909f2598328ae722fec9"
        ],
        [
            "assert (~ eq A P).",
            "VernacExtend",
            "c6df804058cf29701492dcc856cddbfdfc04ddae"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C D A) by (conclude cn_equalitysub).",
            "VernacExtend",
            "bdd8375c9e93af13ea6084ccd9548e13dfce98c1"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq D P).",
            "VernacExtend",
            "e3d9e5893e070c85abb36d8bc442d3d202dec5ba"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B D) by (conclude cn_equalitysub).",
            "VernacExtend",
            "8f702554f84a11116b82c3b541601789f3428307"
        ],
        [
            "assert (Col D A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3b9c084590075a0b0c6cf29f98348a34cfa1b2a6"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Per B A D) by (conclude lemma_8_2).",
            "VernacExtend",
            "4c6a3505d80aa29ddd1dc2c313bae797994e4233"
        ],
        [
            "assert (Col B A P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ab3ac52bdb502a4fc0f489d139d5067a91d2f75f"
        ],
        [
            "assert (neq P A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "89aef120537308b48b9a13e0f2c13e1e6d648441"
        ],
        [
            "assert (Per P A D) by (conclude lemma_collinearright).",
            "VernacExtend",
            "29f7b8013ecfbe4c54f498f2bfe47d07a39b4f10"
        ],
        [
            "assert (neq P D) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "4a7efd19bbd99c183f0d1d2a10fe377d24a3a0a4"
        ],
        [
            "assert (Per P D A) by (conclude lemma_collinearright).",
            "VernacExtend",
            "fd1b3be825ac2b6d36543161e33eb870409a441e"
        ],
        [
            "assert (Per A D P) by (conclude lemma_8_2).",
            "VernacExtend",
            "6364a150c808f7a66101320034963c41ac85f4d0"
        ],
        [
            "assert (~ Per P A D) by (conclude lemma_8_7).",
            "VernacExtend",
            "6fd2a05e63d632c5afac67ca8a080298b8995a5a"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq A B) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "8734c6c62963acc25b4886dfc0a545d19560b2ba"
        ],
        [
            "assert (neq C D) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "3c15a0cca9b4ed2a86186532871fa9f0d4bd5578"
        ],
        [
            "assert (neq D C) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "9237553638c0e7a25b7e8c2781363c6b63e4b08e"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Col A B A) by (conclude_def Col ).",
            "VernacExtend",
            "7fe661a35be4052e3e351decefc3e023ccdb88ad"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col A B B) by (conclude_def Col ).",
            "VernacExtend",
            "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Col C D C) by (conclude_def Col ).",
            "VernacExtend",
            "a5c3d5eb1771de0bbde081130e12a688964681c9"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (Col C D D) by (conclude_def Col ).",
            "VernacExtend",
            "d83231adb51ebdd8e8993f4fca06332c909ac166"
        ],
        [
            "assert (BetS D M B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "74b412eed2f09b18c6e55a9679a88d7c03f9a77a"
        ],
        [
            "assert (Par A B C D) by (conclude_def Par ).",
            "VernacExtend",
            "dc5bba64feddcf48da4479f4af56ca5f9818465e"
        ],
        [
            "assert (~ Meet A D B C).",
            "VernacExtend",
            "32368130c28fda4d7183d2b2f623bdae9d6e300b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists P, (neq A D /\\ neq B C /\\ Col A D P /\\ Col B C P)) by (conclude_def Meet );destruct Tf as [P];spliter.",
            "VernacExtend",
            "b9e9223b0eb2948ead04bcd8aabf72d957fb8622"
        ],
        [
            "assert (~ eq A P).",
            "VernacExtend",
            "c6df804058cf29701492dcc856cddbfdfc04ddae"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B C A) by (conclude cn_equalitysub).",
            "VernacExtend",
            "d64d199e229631e0ef4dd81fb4b4b5ec38637cc5"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ eq B P).",
            "VernacExtend",
            "11bb94f1c0b36b377c968412380cd9aa36c133c9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A D B) by (conclude cn_equalitysub).",
            "VernacExtend",
            "5c11fb8ee65ab78b0e8324156d98245bb68df100"
        ],
        [
            "assert (Col D A B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "3b9c084590075a0b0c6cf29f98348a34cfa1b2a6"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq P A) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "89aef120537308b48b9a13e0f2c13e1e6d648441"
        ],
        [
            "assert (Col D A P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "2aeffff37989e168dc07a8dbff9086041bf1402d"
        ],
        [
            "assert (Per P A B) by (conclude lemma_collinearright).",
            "VernacExtend",
            "11a6510e96797ac35bc9bad47f9887e080598d81"
        ],
        [
            "assert (Per C B A) by (conclude lemma_8_2).",
            "VernacExtend",
            "3bc22b960a66ceb679922c391fdd15e68be9557f"
        ],
        [
            "assert (Col C B P) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "97f530a8f7f5b5cd3c72a288ac561d549e719023"
        ],
        [
            "assert (neq P B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "914acc6bf3223acbf79d9ba42db2fd5b2655c3a4"
        ],
        [
            "assert (Per P B A) by (conclude lemma_collinearright).",
            "VernacExtend",
            "911b6ddfd3232d0e63d2d0bba3f975e86093135d"
        ],
        [
            "assert (Per B A P) by (conclude lemma_8_2).",
            "VernacExtend",
            "fb0dbc70e1d975e1a738ba5b92188891f8e87aff"
        ],
        [
            "assert (~ Per P B A) by (conclude lemma_8_7).",
            "VernacExtend",
            "e27478531d74c36a0fb764408a29282e3eaeb4d7"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq A D) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "3b96af8ab9fddde4f358b7b7ca0a2caaf9675c51"
        ],
        [
            "assert (neq B C) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "0bb577205eb42d8f9fe7d193058e6055102c5a78"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (Col A D A) by (conclude_def Col ).",
            "VernacExtend",
            "55d256bdc258444c2f6db57dfce71e5bf2e31d88"
        ],
        [
            "assert (Col A D D) by (conclude_def Col ).",
            "VernacExtend",
            "f1df087c3a106a6e7039b8d1f9ef8fe564e0604c"
        ],
        [
            "assert (Col B C B) by (conclude_def Col ).",
            "VernacExtend",
            "b9712bc9f35cfd97230afedc7bbe6a97f60723fa"
        ],
        [
            "assert (Col B C C) by (conclude_def Col ).",
            "VernacExtend",
            "180b69e1d75faa9cbd33f7fe6248015c489b30a7"
        ],
        [
            "assert (Par A D B C) by (conclude_def Par ).",
            "VernacExtend",
            "f34073de3c7e2cb0cb670683c9989993630b7fcf"
        ],
        [
            "assert (PG A B C D) by (conclude_def PG ).",
            "VernacExtend",
            "edb58d750f3bc9b0dba54d3d8487126eecbb1591"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_rectangleparallelogram",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((Per D A B /\\ Per A B C /\\ Per B C D /\\ Per C D A /\\ CR A C B D)) by (conclude_def RE ).",
                        "VernacExtend",
                        "8c433dfcdf3d662bb0cadd2a1302790a9b6c157e"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D A B) by (conclude lemma_rightangleNC).",
                        "VernacExtend",
                        "6accdf93d3e5fcbfa98ecf49f2534bb1950d3db7"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude lemma_rightangleNC).",
                        "VernacExtend",
                        "f2cdc7cb572e9c7235b56c018ed5cae23c323020"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C D A) by (conclude lemma_rightangleNC).",
                        "VernacExtend",
                        "220c9d07a910f20ff9b0e24adf23eceff8519ff1"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS A M C /\\ BetS B M D)) by (conclude_def CR );destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "41751579e3286704b7a7a049b78650364170be4c"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet A B C D).",
                        "VernacExtend",
                        "03378f4145e3d326f8d303da475716ec3954a985"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists P, (neq A B /\\ neq C D /\\ Col A B P /\\ Col C D P)) by (conclude_def Meet );destruct Tf as [P];spliter.",
                        "VernacExtend",
                        "f699ba536c6417705058909f2598328ae722fec9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A P).",
                        "VernacExtend",
                        "c6df804058cf29701492dcc856cddbfdfc04ddae"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D A) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "bdd8375c9e93af13ea6084ccd9548e13dfce98c1"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq D P).",
                        "VernacExtend",
                        "e3d9e5893e070c85abb36d8bc442d3d202dec5ba"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B D) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "8f702554f84a11116b82c3b541601789f3428307"
                    ]
                },
                {
                    "command": [
                        "assert (Col D A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3b9c084590075a0b0c6cf29f98348a34cfa1b2a6"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Per B A D) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "4c6a3505d80aa29ddd1dc2c313bae797994e4233"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ab3ac52bdb502a4fc0f489d139d5067a91d2f75f"
                    ]
                },
                {
                    "command": [
                        "assert (neq P A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "89aef120537308b48b9a13e0f2c13e1e6d648441"
                    ]
                },
                {
                    "command": [
                        "assert (Per P A D) by (conclude lemma_collinearright).",
                        "VernacExtend",
                        "29f7b8013ecfbe4c54f498f2bfe47d07a39b4f10"
                    ]
                },
                {
                    "command": [
                        "assert (neq P D) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "4a7efd19bbd99c183f0d1d2a10fe377d24a3a0a4"
                    ]
                },
                {
                    "command": [
                        "assert (Per P D A) by (conclude lemma_collinearright).",
                        "VernacExtend",
                        "fd1b3be825ac2b6d36543161e33eb870409a441e"
                    ]
                },
                {
                    "command": [
                        "assert (Per A D P) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "6364a150c808f7a66101320034963c41ac85f4d0"
                    ]
                },
                {
                    "command": [
                        "assert (~ Per P A D) by (conclude lemma_8_7).",
                        "VernacExtend",
                        "6fd2a05e63d632c5afac67ca8a080298b8995a5a"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "8734c6c62963acc25b4886dfc0a545d19560b2ba"
                    ]
                },
                {
                    "command": [
                        "assert (neq C D) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "3c15a0cca9b4ed2a86186532871fa9f0d4bd5578"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "9237553638c0e7a25b7e8c2781363c6b63e4b08e"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B A) by (conclude_def Col ).",
                        "VernacExtend",
                        "7fe661a35be4052e3e351decefc3e023ccdb88ad"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "ac6fe831a1522e9592f37d8b3ffd3c4256b9b8b4"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D C) by (conclude_def Col ).",
                        "VernacExtend",
                        "a5c3d5eb1771de0bbde081130e12a688964681c9"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (Col C D D) by (conclude_def Col ).",
                        "VernacExtend",
                        "d83231adb51ebdd8e8993f4fca06332c909ac166"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D M B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "74b412eed2f09b18c6e55a9679a88d7c03f9a77a"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B C D) by (conclude_def Par ).",
                        "VernacExtend",
                        "dc5bba64feddcf48da4479f4af56ca5f9818465e"
                    ]
                },
                {
                    "command": [
                        "assert (~ Meet A D B C).",
                        "VernacExtend",
                        "32368130c28fda4d7183d2b2f623bdae9d6e300b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists P, (neq A D /\\ neq B C /\\ Col A D P /\\ Col B C P)) by (conclude_def Meet );destruct Tf as [P];spliter.",
                        "VernacExtend",
                        "b9e9223b0eb2948ead04bcd8aabf72d957fb8622"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A P).",
                        "VernacExtend",
                        "c6df804058cf29701492dcc856cddbfdfc04ddae"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C A) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "d64d199e229631e0ef4dd81fb4b4b5ec38637cc5"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B P).",
                        "VernacExtend",
                        "11bb94f1c0b36b377c968412380cd9aa36c133c9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D B) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "5c11fb8ee65ab78b0e8324156d98245bb68df100"
                    ]
                },
                {
                    "command": [
                        "assert (Col D A B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "3b9c084590075a0b0c6cf29f98348a34cfa1b2a6"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq P A) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "89aef120537308b48b9a13e0f2c13e1e6d648441"
                    ]
                },
                {
                    "command": [
                        "assert (Col D A P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "2aeffff37989e168dc07a8dbff9086041bf1402d"
                    ]
                },
                {
                    "command": [
                        "assert (Per P A B) by (conclude lemma_collinearright).",
                        "VernacExtend",
                        "11a6510e96797ac35bc9bad47f9887e080598d81"
                    ]
                },
                {
                    "command": [
                        "assert (Per C B A) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "3bc22b960a66ceb679922c391fdd15e68be9557f"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B P) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "97f530a8f7f5b5cd3c72a288ac561d549e719023"
                    ]
                },
                {
                    "command": [
                        "assert (neq P B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "914acc6bf3223acbf79d9ba42db2fd5b2655c3a4"
                    ]
                },
                {
                    "command": [
                        "assert (Per P B A) by (conclude lemma_collinearright).",
                        "VernacExtend",
                        "911b6ddfd3232d0e63d2d0bba3f975e86093135d"
                    ]
                },
                {
                    "command": [
                        "assert (Per B A P) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "fb0dbc70e1d975e1a738ba5b92188891f8e87aff"
                    ]
                },
                {
                    "command": [
                        "assert (~ Per P B A) by (conclude lemma_8_7).",
                        "VernacExtend",
                        "e27478531d74c36a0fb764408a29282e3eaeb4d7"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq A D) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "3b96af8ab9fddde4f358b7b7ca0a2caaf9675c51"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "0bb577205eb42d8f9fe7d193058e6055102c5a78"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D A) by (conclude_def Col ).",
                        "VernacExtend",
                        "55d256bdc258444c2f6db57dfce71e5bf2e31d88"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D D) by (conclude_def Col ).",
                        "VernacExtend",
                        "f1df087c3a106a6e7039b8d1f9ef8fe564e0604c"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C B) by (conclude_def Col ).",
                        "VernacExtend",
                        "b9712bc9f35cfd97230afedc7bbe6a97f60723fa"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C C) by (conclude_def Col ).",
                        "VernacExtend",
                        "180b69e1d75faa9cbd33f7fe6248015c489b30a7"
                    ]
                },
                {
                    "command": [
                        "assert (Par A D B C) by (conclude_def Par ).",
                        "VernacExtend",
                        "f34073de3c7e2cb0cb670683c9989993630b7fcf"
                    ]
                },
                {
                    "command": [
                        "assert (PG A B C D) by (conclude_def PG ).",
                        "VernacExtend",
                        "edb58d750f3bc9b0dba54d3d8487126eecbb1591"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}