{
    "filename": "Elements/OriginalProofs/proposition_31.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_NChelper.",
            "VernacRequire",
            "27d71a9bed299ed932460cd47291d5181182bf2b"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_pointreflectionisometry.",
            "VernacRequire",
            "4a00f255fd5dc8efc5b1d42979ed621af0cc08fc"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_oppositesidesymmetric.",
            "VernacRequire",
            "4e2011e913226485bed5d882d28dd2a3e317b6e7"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_27.",
            "VernacRequire",
            "af50e00317cea13608638a2bc52fd67959082353"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_parallelflip.",
            "VernacRequire",
            "7e326a39aefef12c19bc0b3c6ce0d726a1c02da9"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_31 : forall A B C D, BetS B D C -> nCol B C A -> exists X Y Z, BetS X A Y /\\ CongA Y A D A D B /\\ CongA Y A D B D A /\\ CongA D A Y B D A /\\ CongA X A D A D C /\\ CongA X A D C D A /\\ CongA D A X C D A /\\ Par X Y B C /\\ Cong X A D C /\\ Cong A Y B D /\\ Cong A Z Z D /\\ Cong X Z Z C /\\ Cong B Z Z Y /\\ BetS X Z C /\\ BetS B Z Y /\\ BetS A Z D.",
            "VernacStartTheoremProof",
            "129a1e7306aa142d4ea033abf89bb5ce769a1a42"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Col B D C) by (conclude_def Col ).",
            "VernacExtend",
            "1028361474774d74f0661ef3dd761b91c19878a9"
        ],
        [
            "assert (~ eq A D).",
            "VernacExtend",
            "496d8b2570fb2aa329649620b3153fa47756f92e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A C) by (conclude cn_equalitysub).",
            "VernacExtend",
            "c87d9b81b7153ddc97bd29fcb64cdc1d8bc037fd"
        ],
        [
            "assert (Col B C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "be42e7d5208e775ad19c84b67eecd36d88d09b42"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS A M D /\\ Cong M A M D)) by (conclude proposition_10);destruct Tf as [M];spliter.",
            "VernacExtend",
            "adce9859c71c40fd49a8e5e3db627c95c7909c21"
        ],
        [
            "assert (Cong A M M D) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "895d01fa9150dcb74cb90418afb11b0b8e65d2b8"
        ],
        [
            "assert (Col C B D) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "f7cbdfa50d106ed7c307c363e9c76f670ab0193b"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (Col C B B) by (conclude_def Col ).",
            "VernacExtend",
            "d87901cda7c272a98225bfd2f414623fea325d88"
        ],
        [
            "assert (nCol C B A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "a4d3eddbdbf0e243199e65bd2fb15e7f1447fc66"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (nCol B D A) by (conclude lemma_NChelper).",
            "VernacExtend",
            "c8de7ae8d76998cc6cd6985bc0b30a6b9ec3d486"
        ],
        [
            "assert (Col B D C) by (conclude_def Col ).",
            "VernacExtend",
            "1028361474774d74f0661ef3dd761b91c19878a9"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (Col B D D) by (conclude_def Col ).",
            "VernacExtend",
            "71e8162e6290b2addef43eff4aa70833474a320f"
        ],
        [
            "assert (neq D C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "dac741e71be8778833d3135c1db363ed1412abfc"
        ],
        [
            "assert (neq C D) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "c7e81de516241ce4e74c736518aa3cecf412e158"
        ],
        [
            "assert (nCol C D A) by (conclude lemma_NChelper).",
            "VernacExtend",
            "a783f7db3155e30c1922668924b4d42f2e4d6712"
        ],
        [
            "assert (nCol A D C) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "48d0dee09ebf8e866241978d112495065019a972"
        ],
        [
            "assert (Col A M D) by (conclude_def Col ).",
            "VernacExtend",
            "5cbf9f06349b78b93ae20554643fa89c04fead49"
        ],
        [
            "assert (Col A D M) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0c98213a19d7b116863022983fe332a6d6bb86d0"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (Col A D A) by (conclude_def Col ).",
            "VernacExtend",
            "55d256bdc258444c2f6db57dfce71e5bf2e31d88"
        ],
        [
            "assert (neq A M) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "407201e66570093eecf4511ea06ce7ff3751330d"
        ],
        [
            "assert (nCol A M C) by (conclude lemma_NChelper).",
            "VernacExtend",
            "a91792e1c8c59da4229ad0bf7e92a51304470339"
        ],
        [
            "assert (~ eq C M).",
            "VernacExtend",
            "9670b9d232de71193bc77f731e00b5b4b4ba9676"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A C M) by (conclude_def Col ).",
            "VernacExtend",
            "efe2bcd72e602158cd5f911f753516b5d08f6760"
        ],
        [
            "assert (Col A M C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "0d12327561073237228a6f559bc909c26e5dd5b1"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq M C) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "40ae98e3eb7afd46571b72ffcac7d0f360abbb8e"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E, (BetS C M E /\\ Cong M E M C)) by (conclude lemma_extension);destruct Tf as [E];spliter.",
            "VernacExtend",
            "f3f17512751bee94c1f12e4f5f210504e332dee5"
        ],
        [
            "assert (Cong M C M E) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "d80e252cfe7a70d4572299248e4db4b6a559ca3c"
        ],
        [
            "assert (Cong C M M E) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "86150a69adf58689fc242d2eb4b64d7bc288017b"
        ],
        [
            "assert (Midpoint C M E) by (conclude_def Midpoint ).",
            "VernacExtend",
            "d89d5005a4db2e97a363b2851a55352dd2dac337"
        ],
        [
            "assert (neq A M) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "407201e66570093eecf4511ea06ce7ff3751330d"
        ],
        [
            "assert (nCol A D B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "7bfdf40824a4ab71cc0cc2a67e3e3cf3ab8da5cf"
        ],
        [
            "assert (nCol A M B) by (conclude lemma_NChelper).",
            "VernacExtend",
            "a30deaaf0d633077e6c7854766e7219a51cee9eb"
        ],
        [
            "assert (~ eq B M).",
            "VernacExtend",
            "558ae44d9127874dbc5a1887d43a7e206beb061b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B M) by (conclude_def Col ).",
            "VernacExtend",
            "639ca0d6869bef40da5fde91bbd7498a1a3a33ec"
        ],
        [
            "assert (Col A M B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "7ca5a0df4cb77b39ed7c65155c7792e412632f81"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq M B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "795095023af8ed74cf302ded1f9e7c631fa6155d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists F, (BetS B M F /\\ Cong M F M B)) by (conclude lemma_extension);destruct Tf as [F];spliter.",
            "VernacExtend",
            "9c1881814c859eda80a2d1e053ab6c744a3368ba"
        ],
        [
            "assert (Cong M F B M) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "aa54dcc9245c8454d6fe7cfd8c1a395b8e163e1d"
        ],
        [
            "assert (Cong B M M F) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "ebefc308c2d97109500092e1711187bc31ee2eb0"
        ],
        [
            "assert (Midpoint B M F) by (conclude_def Midpoint ).",
            "VernacExtend",
            "5b1d6cce99886b072900016af52b18d61aaa0b64"
        ],
        [
            "assert (Cong M D M A) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "d4e5530e4c8df59859456ea5de947dfbe2f598f8"
        ],
        [
            "assert (BetS D M A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "ac472cdb78546096ad98f81d0235da2b4dafaac3"
        ],
        [
            "assert (Cong D M M A) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "b56e7b5a29c0218329bae10f23189de6d42fc199"
        ],
        [
            "assert (Midpoint D M A) by (conclude_def Midpoint ).",
            "VernacExtend",
            "041299db10833a15966215ce13ec22b3977c539b"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (neq D C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "dac741e71be8778833d3135c1db363ed1412abfc"
        ],
        [
            "assert (neq B C) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "0bb577205eb42d8f9fe7d193058e6055102c5a78"
        ],
        [
            "assert (Cong B D F A) by (conclude lemma_pointreflectionisometry).",
            "VernacExtend",
            "a589ca7b71f015bd06322db06c91866984372240"
        ],
        [
            "assert (Cong D C A E) by (conclude lemma_pointreflectionisometry).",
            "VernacExtend",
            "11a6194797a19681ee02eea662fd7127097d3d82"
        ],
        [
            "assert (Cong B C F E) by (conclude lemma_pointreflectionisometry).",
            "VernacExtend",
            "28a8e3a46f03be3d86fc611a5b80a943e3aa1218"
        ],
        [
            "assert (BetS F A E) by (conclude lemma_betweennesspreserved).",
            "VernacExtend",
            "777b9cd9a36573a4696d5bb509ec2f4225249066"
        ],
        [
            "assert (BetS E A F) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "e87ca1037242833add682b703a96ca599d8e4e20"
        ],
        [
            "assert (eq F F) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
        ],
        [
            "assert (neq A F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "80629ffcb8465e1098f2e62d70dce4a9683f02f1"
        ],
        [
            "assert (Out A F F) by (conclude lemma_ray4).",
            "VernacExtend",
            "ef3141479492a223e611ab450b5c0361b4e0ed1d"
        ],
        [
            "assert (eq B B) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "00ae07b3d0c590585c3f543859688f9bdbb4d207"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "9b514e0053ba8f3c49b63d2480a07be55876115a"
        ],
        [
            "assert (Out D B B) by (conclude lemma_ray4).",
            "VernacExtend",
            "29e7c133fc2f194d11e13a34ede8e04b15cc3d03"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (neq D A) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "838197a1011d387c4f386edd9c052ec4fb690362"
        ],
        [
            "assert (Out D A A) by (conclude lemma_ray4).",
            "VernacExtend",
            "9c977f82f89e783eb6a45604e86a10d4fc940a89"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (neq A D) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "a92ee1ba0241d520bce35a627b0053c54c563b2f"
        ],
        [
            "assert (Out A D D) by (conclude lemma_ray4).",
            "VernacExtend",
            "5bfbfb8c5a7f7d3b2b8ce75cf3745b9f680909dc"
        ],
        [
            "assert (nCol B M A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "b817dfa43a6b88c21947a0ab71d731789da3ed8c"
        ],
        [
            "assert (Col B M F) by (conclude_def Col ).",
            "VernacExtend",
            "da15e2be256f482af357f2c126251cb45b7c185f"
        ],
        [
            "assert (eq M M) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "916516fe5c9a8a86b775db55e27d0edb471a111f"
        ],
        [
            "assert (Col B M M) by (conclude_def Col ).",
            "VernacExtend",
            "02c402dbf9a738a9e8b979ce0e3efd99d6708804"
        ],
        [
            "assert (neq M F) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "bda6dd2bfb73fdeae87563286a2a0cf51bb4813e"
        ],
        [
            "assert (neq F M) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "7bf09e736b02ee44fde4fb037e35d24926aef7d1"
        ],
        [
            "assert (nCol F M A) by (conclude lemma_NChelper).",
            "VernacExtend",
            "7c0569d89ec2b900732c60ab5995945d762325e8"
        ],
        [
            "assert (nCol A M F) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "12f46c3a7ab1964ab2c35b0dda22278b323fbed4"
        ],
        [
            "assert (Col A M A) by (conclude_def Col ).",
            "VernacExtend",
            "ef2dbc487c97bad86184b84fb901accb10d7fac4"
        ],
        [
            "assert (Col A M D) by (conclude_def Col ).",
            "VernacExtend",
            "5cbf9f06349b78b93ae20554643fa89c04fead49"
        ],
        [
            "assert (nCol A D F) by (conclude lemma_NChelper).",
            "VernacExtend",
            "11656a6a7140a81877f14890bad454709d52760a"
        ],
        [
            "assert (nCol F A D) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "4e603e707b62afde5018b4d90873a112109248af"
        ],
        [
            "assert (Cong D B A F) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "b9291bf672049beeee2c22fc781c519c4de1a14b"
        ],
        [
            "assert (Midpoint A M D) by (conclude_def Midpoint ).",
            "VernacExtend",
            "ee5162eba47a08288f9cdb5c6bd7571b8d509712"
        ],
        [
            "assert (neq B A) by (forward_using lemma_NCdistinct).",
            "VernacExtend",
            "f05572d51181c9202443ce99ec9c621f00191cb7"
        ],
        [
            "assert (Cong B A F D) by (conclude lemma_pointreflectionisometry).",
            "VernacExtend",
            "7896c587bf3546f34d8f0d4bfa9e0f2b9ef22405"
        ],
        [
            "assert (Cong F D B A) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "3f5223f04ae60efaedb371340e19012ad7781124"
        ],
        [
            "assert (Cong A F D B) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "2f7e5fe9d87ee2e9e6323862ca1a73a081e4de11"
        ],
        [
            "assert (Cong A D D A) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "833a2d89143c7187994309d9c3a50fb3547e1d06"
        ],
        [
            "assert (CongA F A D B D A) by (conclude_def CongA ).",
            "VernacExtend",
            "289797c3d4841ec2f81a05db5237a30a9223d9a6"
        ],
        [
            "assert (nCol B D A) by (conclude lemma_NChelper).",
            "VernacExtend",
            "c8de7ae8d76998cc6cd6985bc0b30a6b9ec3d486"
        ],
        [
            "assert (CongA B D A A D B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "215d4e35c02bcc33c569cde1afb1cfe516aa2e35"
        ],
        [
            "assert (CongA F A D A D B) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "c94efaf7fac4dca9467da75910a985b09346bf84"
        ],
        [
            "assert (CongA A D B F A D) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "a95404c795086b1157632c6281a06fb6ca8e74de"
        ],
        [
            "assert (nCol D A B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "a77726b707ec91498afd12ec30dd47ebb6a4ddda"
        ],
        [
            "assert (nCol F A D) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "4e603e707b62afde5018b4d90873a112109248af"
        ],
        [
            "assert (CongA F A D D A F) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "60e9d0523faba32a00eaf271ba6da889797a5d59"
        ],
        [
            "assert (CongA A D B D A F) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "86768957ab5a9fe6c1200652f0b52aaf396c0991"
        ],
        [
            "assert (CongA D A F A D B) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "a3e221fac9ddd9d720e5cd80624a0293eae31883"
        ],
        [
            "assert (nCol A D B) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "7bfdf40824a4ab71cc0cc2a67e3e3cf3ab8da5cf"
        ],
        [
            "assert (CongA A D B B D A) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "3bd05d6832b91b492e10822d335273d46adfdf03"
        ],
        [
            "assert (CongA D A F B D A) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "034ce1a41227995c69cdbaffe074da4c4806d7e5"
        ],
        [
            "assert (TS B A D F) by (conclude_def TS ).",
            "VernacExtend",
            "085eef4a06921981cbe3e9f2ba5719a6ef29b1cc"
        ],
        [
            "assert (TS F A D B) by (conclude lemma_oppositesidesymmetric).",
            "VernacExtend",
            "150357dc9578bae08dc1ab1fa4cb6c611631a09a"
        ],
        [
            "assert (BetS C D B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "67aceef298c22c69e948d0247e420bee6d8584e7"
        ],
        [
            "assert (Par F E C B) by (conclude proposition_27).",
            "VernacExtend",
            "1181c05cc769bdebccc5f8b5146eae5158d00888"
        ],
        [
            "assert (Par E F B C) by (forward_using lemma_parallelflip).",
            "VernacExtend",
            "e08591aba4fcbaaf51122d206a2ed4164dae5057"
        ],
        [
            "assert (Cong D C E A) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "7e081e7242fa97a5f3ad2d680e82014a6415237f"
        ],
        [
            "assert (Cong E A D C) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "2fc670b481f40d2e9e3d17c97c4c825eb8bcfdee"
        ],
        [
            "assert (Cong B D A F) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "0756c9742da5c18ad3c28e4f39c0a978ef1f746c"
        ],
        [
            "assert (Cong A F B D) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "484f2f9044a1800408e942b79e6d87bb320477a2"
        ],
        [
            "assert (Cong M C E M) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "059dee865a3a40ce87854828a0700e3cf73628b1"
        ],
        [
            "assert (Cong E M M C) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "7ed9a24a6ca0d46300acc5f06f4acf7f9c722018"
        ],
        [
            "assert (neq E A) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "8f7fee3eedee25ddd548f0a1db8e30b7d2d248a4"
        ],
        [
            "assert (neq A E) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "0f8af7418d9d94197bb7cd67ee4a3276795e07ba"
        ],
        [
            "assert (eq E E) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "0a1b9ee66843c7930009e2b10ca97e64b288584a"
        ],
        [
            "assert (Out A E E) by (conclude lemma_ray4).",
            "VernacExtend",
            "755ca8396d8b54304ffc9197b835c655dcfcb221"
        ],
        [
            "assert (neq D C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "dac741e71be8778833d3135c1db363ed1412abfc"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (Out D C C) by (conclude lemma_ray4).",
            "VernacExtend",
            "f9394b71e33010eec5d0cafe89f03b004392bfb0"
        ],
        [
            "assert (Cong E M M C) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "173bc4ed9855ca17b315b24dbafb5297847ebb8b"
        ],
        [
            "assert (BetS E M C) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "bf1270a2710fcf818db66692644da02e73a48acd"
        ],
        [
            "assert (Midpoint E M C) by (conclude_def Midpoint ).",
            "VernacExtend",
            "5cd59b5a6d467e955264cd7d9b9e4541277268cc"
        ],
        [
            "assert (~ eq E D).",
            "VernacExtend",
            "3cd3361f5e55f3313d40b37bad7bdc99366390a7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (BetS C M D) by (conclude cn_equalitysub).",
            "VernacExtend",
            "65c9901b60f195434bc8cf1ce2690c5b308cd563"
        ],
        [
            "assert (Col C M D) by (conclude_def Col ).",
            "VernacExtend",
            "5abec8c9b7791669cbc7a630abcd7e70380ed55d"
        ],
        [
            "assert (Col M D C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "af6a538049e32c1e2b0d26ef3b3063de68f70262"
        ],
        [
            "assert (Col A M D) by (conclude_def Col ).",
            "VernacExtend",
            "5cbf9f06349b78b93ae20554643fa89c04fead49"
        ],
        [
            "assert (Col M D A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "ec54459799881f4aa3251a0be1aac95ddc0bf5ca"
        ],
        [
            "assert (neq M D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "974ef6a1ef8c0a5b3fee96cab304158caab92bad"
        ],
        [
            "assert (Col D C A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "04a58b1065af48e703fbe686f4ee09ee29c13254"
        ],
        [
            "assert (Col D C B) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
        ],
        [
            "assert (neq D C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "dac741e71be8778833d3135c1db363ed1412abfc"
        ],
        [
            "assert (Col C A B) by (conclude lemma_collinear4).",
            "VernacExtend",
            "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
        ],
        [
            "assert (Col B C A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "be42e7d5208e775ad19c84b67eecd36d88d09b42"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq E D) by auto.",
            "VernacExtend",
            "673132d72986b4039d46fa4770d15f1ab91d7be1"
        ],
        [
            "assert (neq D A) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "838197a1011d387c4f386edd9c052ec4fb690362"
        ],
        [
            "assert (neq A D) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "a92ee1ba0241d520bce35a627b0053c54c563b2f"
        ],
        [
            "assert (Cong E D C A) by (conclude lemma_pointreflectionisometry).",
            "VernacExtend",
            "33afb7f18651e6f3dd231ebb0868b6c98e5613fc"
        ],
        [
            "assert (Cong A E D C) by (conclude lemma_pointreflectionisometry).",
            "VernacExtend",
            "08fcf3286f327af118dc4ccc719f02806c263583"
        ],
        [
            "assert (Col E A F) by (conclude_def Col ).",
            "VernacExtend",
            "be8fcc3604001ed03afc782b7437ae25b9c0ac48"
        ],
        [
            "assert (Col F A E) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "e92b9888bef719f9aa3026f985fef0e638eebdaf"
        ],
        [
            "assert (Col F A A) by (conclude_def Col ).",
            "VernacExtend",
            "275faf286deb4b75b98f9a3b8e9ca08a9775f1bb"
        ],
        [
            "assert (nCol E A D) by (conclude lemma_NChelper).",
            "VernacExtend",
            "4a9194611f1d7ff7a6752ea33839e56fccd0bbfc"
        ],
        [
            "assert (CongA E A D C D A) by (conclude_def CongA ).",
            "VernacExtend",
            "2a6d6bad53c0a594b2cd8d18f01f6e3256bec874"
        ],
        [
            "assert (nCol C D A) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "828ed7fb044e87146fedeabe1cabfc203ea840dc"
        ],
        [
            "assert (CongA C D A A D C) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "38e60b14114b39e47dfbd5662ab3a7f3f19b738b"
        ],
        [
            "assert (CongA E A D A D C) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "a3ef6efca7f7848c6c25ecea6360141196374c4d"
        ],
        [
            "assert (nCol D A E) by (forward_using lemma_NCorder).",
            "VernacExtend",
            "ff92f5501f253cc107d514fccc0ce439b36c1c91"
        ],
        [
            "assert (CongA D A E E A D) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "67a3a53e5c9e740063d4c1fcde949c4f98c9e8d2"
        ],
        [
            "assert (CongA D A E C D A) by (conclude lemma_equalanglestransitive).",
            "VernacExtend",
            "f43701bce1b947188f7040732a3c86706302e97f"
        ],
        [
            "remove_exists;eauto 20.",
            "VernacExtend",
            "f37ca535b0eee3c4d0059d724d12e9520b26eac9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_31",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Col B D C) by (conclude_def Col ).",
                        "VernacExtend",
                        "1028361474774d74f0661ef3dd761b91c19878a9"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq A D).",
                        "VernacExtend",
                        "496d8b2570fb2aa329649620b3153fa47756f92e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "c87d9b81b7153ddc97bd29fcb64cdc1d8bc037fd"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "be42e7d5208e775ad19c84b67eecd36d88d09b42"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS A M D /\\ Cong M A M D)) by (conclude proposition_10);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "adce9859c71c40fd49a8e5e3db627c95c7909c21"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A M M D) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "895d01fa9150dcb74cb90418afb11b0b8e65d2b8"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B D) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "f7cbdfa50d106ed7c307c363e9c76f670ab0193b"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B B) by (conclude_def Col ).",
                        "VernacExtend",
                        "d87901cda7c272a98225bfd2f414623fea325d88"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C B A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "a4d3eddbdbf0e243199e65bd2fb15e7f1447fc66"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B D A) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "c8de7ae8d76998cc6cd6985bc0b30a6b9ec3d486"
                    ]
                },
                {
                    "command": [
                        "assert (Col B D C) by (conclude_def Col ).",
                        "VernacExtend",
                        "1028361474774d74f0661ef3dd761b91c19878a9"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (Col B D D) by (conclude_def Col ).",
                        "VernacExtend",
                        "71e8162e6290b2addef43eff4aa70833474a320f"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "dac741e71be8778833d3135c1db363ed1412abfc"
                    ]
                },
                {
                    "command": [
                        "assert (neq C D) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "c7e81de516241ce4e74c736518aa3cecf412e158"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C D A) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "a783f7db3155e30c1922668924b4d42f2e4d6712"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A D C) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "48d0dee09ebf8e866241978d112495065019a972"
                    ]
                },
                {
                    "command": [
                        "assert (Col A M D) by (conclude_def Col ).",
                        "VernacExtend",
                        "5cbf9f06349b78b93ae20554643fa89c04fead49"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D M) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "0c98213a19d7b116863022983fe332a6d6bb86d0"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (Col A D A) by (conclude_def Col ).",
                        "VernacExtend",
                        "55d256bdc258444c2f6db57dfce71e5bf2e31d88"
                    ]
                },
                {
                    "command": [
                        "assert (neq A M) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "407201e66570093eecf4511ea06ce7ff3751330d"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A M C) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "a91792e1c8c59da4229ad0bf7e92a51304470339"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C M).",
                        "VernacExtend",
                        "9670b9d232de71193bc77f731e00b5b4b4ba9676"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C M) by (conclude_def Col ).",
                        "VernacExtend",
                        "efe2bcd72e602158cd5f911f753516b5d08f6760"
                    ]
                },
                {
                    "command": [
                        "assert (Col A M C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "0d12327561073237228a6f559bc909c26e5dd5b1"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq M C) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "40ae98e3eb7afd46571b72ffcac7d0f360abbb8e"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E, (BetS C M E /\\ Cong M E M C)) by (conclude lemma_extension);destruct Tf as [E];spliter.",
                        "VernacExtend",
                        "f3f17512751bee94c1f12e4f5f210504e332dee5"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M C M E) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "d80e252cfe7a70d4572299248e4db4b6a559ca3c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C M M E) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "86150a69adf58689fc242d2eb4b64d7bc288017b"
                    ]
                },
                {
                    "command": [
                        "assert (Midpoint C M E) by (conclude_def Midpoint ).",
                        "VernacExtend",
                        "d89d5005a4db2e97a363b2851a55352dd2dac337"
                    ]
                },
                {
                    "command": [
                        "assert (neq A M) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "407201e66570093eecf4511ea06ce7ff3751330d"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A D B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "7bfdf40824a4ab71cc0cc2a67e3e3cf3ab8da5cf"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A M B) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "a30deaaf0d633077e6c7854766e7219a51cee9eb"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B M).",
                        "VernacExtend",
                        "558ae44d9127874dbc5a1887d43a7e206beb061b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B M) by (conclude_def Col ).",
                        "VernacExtend",
                        "639ca0d6869bef40da5fde91bbd7498a1a3a33ec"
                    ]
                },
                {
                    "command": [
                        "assert (Col A M B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "7ca5a0df4cb77b39ed7c65155c7792e412632f81"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq M B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "795095023af8ed74cf302ded1f9e7c631fa6155d"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists F, (BetS B M F /\\ Cong M F M B)) by (conclude lemma_extension);destruct Tf as [F];spliter.",
                        "VernacExtend",
                        "9c1881814c859eda80a2d1e053ab6c744a3368ba"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M F B M) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "aa54dcc9245c8454d6fe7cfd8c1a395b8e163e1d"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B M M F) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "ebefc308c2d97109500092e1711187bc31ee2eb0"
                    ]
                },
                {
                    "command": [
                        "assert (Midpoint B M F) by (conclude_def Midpoint ).",
                        "VernacExtend",
                        "5b1d6cce99886b072900016af52b18d61aaa0b64"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M D M A) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "d4e5530e4c8df59859456ea5de947dfbe2f598f8"
                    ]
                },
                {
                    "command": [
                        "assert (BetS D M A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "ac472cdb78546096ad98f81d0235da2b4dafaac3"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D M M A) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "b56e7b5a29c0218329bae10f23189de6d42fc199"
                    ]
                },
                {
                    "command": [
                        "assert (Midpoint D M A) by (conclude_def Midpoint ).",
                        "VernacExtend",
                        "041299db10833a15966215ce13ec22b3977c539b"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "dac741e71be8778833d3135c1db363ed1412abfc"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "0bb577205eb42d8f9fe7d193058e6055102c5a78"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B D F A) by (conclude lemma_pointreflectionisometry).",
                        "VernacExtend",
                        "a589ca7b71f015bd06322db06c91866984372240"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D C A E) by (conclude lemma_pointreflectionisometry).",
                        "VernacExtend",
                        "11a6194797a19681ee02eea662fd7127097d3d82"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C F E) by (conclude lemma_pointreflectionisometry).",
                        "VernacExtend",
                        "28a8e3a46f03be3d86fc611a5b80a943e3aa1218"
                    ]
                },
                {
                    "command": [
                        "assert (BetS F A E) by (conclude lemma_betweennesspreserved).",
                        "VernacExtend",
                        "777b9cd9a36573a4696d5bb509ec2f4225249066"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E A F) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "e87ca1037242833add682b703a96ca599d8e4e20"
                    ]
                },
                {
                    "command": [
                        "assert (eq F F) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "cd7369e97bff33bc7fe0b8e2ac14b88c5ad7e2e2"
                    ]
                },
                {
                    "command": [
                        "assert (neq A F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "80629ffcb8465e1098f2e62d70dce4a9683f02f1"
                    ]
                },
                {
                    "command": [
                        "assert (Out A F F) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "ef3141479492a223e611ab450b5c0361b4e0ed1d"
                    ]
                },
                {
                    "command": [
                        "assert (eq B B) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "00ae07b3d0c590585c3f543859688f9bdbb4d207"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "9b514e0053ba8f3c49b63d2480a07be55876115a"
                    ]
                },
                {
                    "command": [
                        "assert (Out D B B) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "29e7c133fc2f194d11e13a34ede8e04b15cc3d03"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (neq D A) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "838197a1011d387c4f386edd9c052ec4fb690362"
                    ]
                },
                {
                    "command": [
                        "assert (Out D A A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "9c977f82f89e783eb6a45604e86a10d4fc940a89"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (neq A D) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "a92ee1ba0241d520bce35a627b0053c54c563b2f"
                    ]
                },
                {
                    "command": [
                        "assert (Out A D D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "5bfbfb8c5a7f7d3b2b8ce75cf3745b9f680909dc"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B M A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "b817dfa43a6b88c21947a0ab71d731789da3ed8c"
                    ]
                },
                {
                    "command": [
                        "assert (Col B M F) by (conclude_def Col ).",
                        "VernacExtend",
                        "da15e2be256f482af357f2c126251cb45b7c185f"
                    ]
                },
                {
                    "command": [
                        "assert (eq M M) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "916516fe5c9a8a86b775db55e27d0edb471a111f"
                    ]
                },
                {
                    "command": [
                        "assert (Col B M M) by (conclude_def Col ).",
                        "VernacExtend",
                        "02c402dbf9a738a9e8b979ce0e3efd99d6708804"
                    ]
                },
                {
                    "command": [
                        "assert (neq M F) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "bda6dd2bfb73fdeae87563286a2a0cf51bb4813e"
                    ]
                },
                {
                    "command": [
                        "assert (neq F M) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "7bf09e736b02ee44fde4fb037e35d24926aef7d1"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F M A) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "7c0569d89ec2b900732c60ab5995945d762325e8"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A M F) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "12f46c3a7ab1964ab2c35b0dda22278b323fbed4"
                    ]
                },
                {
                    "command": [
                        "assert (Col A M A) by (conclude_def Col ).",
                        "VernacExtend",
                        "ef2dbc487c97bad86184b84fb901accb10d7fac4"
                    ]
                },
                {
                    "command": [
                        "assert (Col A M D) by (conclude_def Col ).",
                        "VernacExtend",
                        "5cbf9f06349b78b93ae20554643fa89c04fead49"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A D F) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "11656a6a7140a81877f14890bad454709d52760a"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F A D) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "4e603e707b62afde5018b4d90873a112109248af"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D B A F) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "b9291bf672049beeee2c22fc781c519c4de1a14b"
                    ]
                },
                {
                    "command": [
                        "assert (Midpoint A M D) by (conclude_def Midpoint ).",
                        "VernacExtend",
                        "ee5162eba47a08288f9cdb5c6bd7571b8d509712"
                    ]
                },
                {
                    "command": [
                        "assert (neq B A) by (forward_using lemma_NCdistinct).",
                        "VernacExtend",
                        "f05572d51181c9202443ce99ec9c621f00191cb7"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A F D) by (conclude lemma_pointreflectionisometry).",
                        "VernacExtend",
                        "7896c587bf3546f34d8f0d4bfa9e0f2b9ef22405"
                    ]
                },
                {
                    "command": [
                        "assert (Cong F D B A) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "3f5223f04ae60efaedb371340e19012ad7781124"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A F D B) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "2f7e5fe9d87ee2e9e6323862ca1a73a081e4de11"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A D D A) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "833a2d89143c7187994309d9c3a50fb3547e1d06"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F A D B D A) by (conclude_def CongA ).",
                        "VernacExtend",
                        "289797c3d4841ec2f81a05db5237a30a9223d9a6"
                    ]
                },
                {
                    "command": [
                        "assert (nCol B D A) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "c8de7ae8d76998cc6cd6985bc0b30a6b9ec3d486"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B D A A D B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "215d4e35c02bcc33c569cde1afb1cfe516aa2e35"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F A D A D B) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "c94efaf7fac4dca9467da75910a985b09346bf84"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A D B F A D) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "a95404c795086b1157632c6281a06fb6ca8e74de"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D A B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "a77726b707ec91498afd12ec30dd47ebb6a4ddda"
                    ]
                },
                {
                    "command": [
                        "assert (nCol F A D) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "4e603e707b62afde5018b4d90873a112109248af"
                    ]
                },
                {
                    "command": [
                        "assert (CongA F A D D A F) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "60e9d0523faba32a00eaf271ba6da889797a5d59"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A D B D A F) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "86768957ab5a9fe6c1200652f0b52aaf396c0991"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D A F A D B) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "a3e221fac9ddd9d720e5cd80624a0293eae31883"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A D B) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "7bfdf40824a4ab71cc0cc2a67e3e3cf3ab8da5cf"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A D B B D A) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "3bd05d6832b91b492e10822d335273d46adfdf03"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D A F B D A) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "034ce1a41227995c69cdbaffe074da4c4806d7e5"
                    ]
                },
                {
                    "command": [
                        "assert (TS B A D F) by (conclude_def TS ).",
                        "VernacExtend",
                        "085eef4a06921981cbe3e9f2ba5719a6ef29b1cc"
                    ]
                },
                {
                    "command": [
                        "assert (TS F A D B) by (conclude lemma_oppositesidesymmetric).",
                        "VernacExtend",
                        "150357dc9578bae08dc1ab1fa4cb6c611631a09a"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C D B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "67aceef298c22c69e948d0247e420bee6d8584e7"
                    ]
                },
                {
                    "command": [
                        "assert (Par F E C B) by (conclude proposition_27).",
                        "VernacExtend",
                        "1181c05cc769bdebccc5f8b5146eae5158d00888"
                    ]
                },
                {
                    "command": [
                        "assert (Par E F B C) by (forward_using lemma_parallelflip).",
                        "VernacExtend",
                        "e08591aba4fcbaaf51122d206a2ed4164dae5057"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D C E A) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "7e081e7242fa97a5f3ad2d680e82014a6415237f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E A D C) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "2fc670b481f40d2e9e3d17c97c4c825eb8bcfdee"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B D A F) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "0756c9742da5c18ad3c28e4f39c0a978ef1f746c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A F B D) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "484f2f9044a1800408e942b79e6d87bb320477a2"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M C E M) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "059dee865a3a40ce87854828a0700e3cf73628b1"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E M M C) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "7ed9a24a6ca0d46300acc5f06f4acf7f9c722018"
                    ]
                },
                {
                    "command": [
                        "assert (neq E A) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "8f7fee3eedee25ddd548f0a1db8e30b7d2d248a4"
                    ]
                },
                {
                    "command": [
                        "assert (neq A E) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "0f8af7418d9d94197bb7cd67ee4a3276795e07ba"
                    ]
                },
                {
                    "command": [
                        "assert (eq E E) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "0a1b9ee66843c7930009e2b10ca97e64b288584a"
                    ]
                },
                {
                    "command": [
                        "assert (Out A E E) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "755ca8396d8b54304ffc9197b835c655dcfcb221"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "dac741e71be8778833d3135c1db363ed1412abfc"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (Out D C C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "f9394b71e33010eec5d0cafe89f03b004392bfb0"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E M M C) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "173bc4ed9855ca17b315b24dbafb5297847ebb8b"
                    ]
                },
                {
                    "command": [
                        "assert (BetS E M C) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "bf1270a2710fcf818db66692644da02e73a48acd"
                    ]
                },
                {
                    "command": [
                        "assert (Midpoint E M C) by (conclude_def Midpoint ).",
                        "VernacExtend",
                        "5cd59b5a6d467e955264cd7d9b9e4541277268cc"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq E D).",
                        "VernacExtend",
                        "3cd3361f5e55f3313d40b37bad7bdc99366390a7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C M D) by (conclude cn_equalitysub).",
                        "VernacExtend",
                        "65c9901b60f195434bc8cf1ce2690c5b308cd563"
                    ]
                },
                {
                    "command": [
                        "assert (Col C M D) by (conclude_def Col ).",
                        "VernacExtend",
                        "5abec8c9b7791669cbc7a630abcd7e70380ed55d"
                    ]
                },
                {
                    "command": [
                        "assert (Col M D C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "af6a538049e32c1e2b0d26ef3b3063de68f70262"
                    ]
                },
                {
                    "command": [
                        "assert (Col A M D) by (conclude_def Col ).",
                        "VernacExtend",
                        "5cbf9f06349b78b93ae20554643fa89c04fead49"
                    ]
                },
                {
                    "command": [
                        "assert (Col M D A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "ec54459799881f4aa3251a0be1aac95ddc0bf5ca"
                    ]
                },
                {
                    "command": [
                        "assert (neq M D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "974ef6a1ef8c0a5b3fee96cab304158caab92bad"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "04a58b1065af48e703fbe686f4ee09ee29c13254"
                    ]
                },
                {
                    "command": [
                        "assert (Col D C B) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "fa9abfccc0e52f43044b531f947d49f8ce2a54ce"
                    ]
                },
                {
                    "command": [
                        "assert (neq D C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "dac741e71be8778833d3135c1db363ed1412abfc"
                    ]
                },
                {
                    "command": [
                        "assert (Col C A B) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "b285e8e7112dfc3bdac1e5b2c329315e6f2d3c6d"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "be42e7d5208e775ad19c84b67eecd36d88d09b42"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq E D) by auto.",
                        "VernacExtend",
                        "673132d72986b4039d46fa4770d15f1ab91d7be1"
                    ]
                },
                {
                    "command": [
                        "assert (neq D A) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "838197a1011d387c4f386edd9c052ec4fb690362"
                    ]
                },
                {
                    "command": [
                        "assert (neq A D) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "a92ee1ba0241d520bce35a627b0053c54c563b2f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong E D C A) by (conclude lemma_pointreflectionisometry).",
                        "VernacExtend",
                        "33afb7f18651e6f3dd231ebb0868b6c98e5613fc"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A E D C) by (conclude lemma_pointreflectionisometry).",
                        "VernacExtend",
                        "08fcf3286f327af118dc4ccc719f02806c263583"
                    ]
                },
                {
                    "command": [
                        "assert (Col E A F) by (conclude_def Col ).",
                        "VernacExtend",
                        "be8fcc3604001ed03afc782b7437ae25b9c0ac48"
                    ]
                },
                {
                    "command": [
                        "assert (Col F A E) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "e92b9888bef719f9aa3026f985fef0e638eebdaf"
                    ]
                },
                {
                    "command": [
                        "assert (Col F A A) by (conclude_def Col ).",
                        "VernacExtend",
                        "275faf286deb4b75b98f9a3b8e9ca08a9775f1bb"
                    ]
                },
                {
                    "command": [
                        "assert (nCol E A D) by (conclude lemma_NChelper).",
                        "VernacExtend",
                        "4a9194611f1d7ff7a6752ea33839e56fccd0bbfc"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E A D C D A) by (conclude_def CongA ).",
                        "VernacExtend",
                        "2a6d6bad53c0a594b2cd8d18f01f6e3256bec874"
                    ]
                },
                {
                    "command": [
                        "assert (nCol C D A) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "828ed7fb044e87146fedeabe1cabfc203ea840dc"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C D A A D C) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "38e60b14114b39e47dfbd5662ab3a7f3f19b738b"
                    ]
                },
                {
                    "command": [
                        "assert (CongA E A D A D C) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "a3ef6efca7f7848c6c25ecea6360141196374c4d"
                    ]
                },
                {
                    "command": [
                        "assert (nCol D A E) by (forward_using lemma_NCorder).",
                        "VernacExtend",
                        "ff92f5501f253cc107d514fccc0ce439b36c1c91"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D A E E A D) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "67a3a53e5c9e740063d4c1fcde949c4f98c9e8d2"
                    ]
                },
                {
                    "command": [
                        "assert (CongA D A E C D A) by (conclude lemma_equalanglestransitive).",
                        "VernacExtend",
                        "f43701bce1b947188f7040732a3c86706302e97f"
                    ]
                },
                {
                    "command": [
                        "remove_exists;eauto 20.",
                        "VernacExtend",
                        "f37ca535b0eee3c4d0059d724d12e9520b26eac9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}