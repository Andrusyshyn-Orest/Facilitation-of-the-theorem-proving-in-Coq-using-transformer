{
    "filename": "Elements/OriginalProofs/lemma_together.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthancongruence2.",
            "VernacRequire",
            "9ea7bc6d614a484da577fe8b249254ad11cf2676"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthancongruence.",
            "VernacRequire",
            "00b9d54a90df13f5b7010ae28f399946381e76c8"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "8fa44f4771a9528e103d9f2054b77606cde8225f"
        ],
        [
            "Lemma lemma_together : forall A B C D F G P Q a b c, TG A a B b C c -> Cong D F A a -> Cong F G B b -> BetS D F G -> Cong P Q C c -> Lt P Q D G /\\ neq A a /\\ neq B b /\\ neq C c.",
            "VernacStartTheoremProof",
            "0310185a0128f784558af62f0569fd65f5693341"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists R, (BetS A a R /\\ Cong a R B b /\\ Lt C c A R)) by (conclude_def TG );destruct Tf as [R];spliter.",
            "VernacExtend",
            "48e3f038bcb31b1ab6c8a7250e79e0dcb23d53fe"
        ],
        [
            "assert (Cong A a A a) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "c70bb11d2474a4f5f79e7393316b4d4bf329c7d2"
        ],
        [
            "assert (Cong B b a R) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "35a442f7bd226357e9a20909f6b76e3b7d5571e4"
        ],
        [
            "assert (Cong F G a R) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "8045fa11dfda91010082140f7ff27c139160730b"
        ],
        [
            "assert (Cong D G A R) by (conclude cn_sumofparts).",
            "VernacExtend",
            "15242c4ddf517a722701f76dcd39d2bec8da4dc0"
        ],
        [
            "assert (Cong A R D G) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "4f8a9730a6c4811fbc5c06fa0796ed55b50a114a"
        ],
        [
            "assert (Cong C c P Q) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "44a67b0e0e9b4594b0b0ddd17b3a15886cef6049"
        ],
        [
            "assert (Lt P Q A R) by (conclude lemma_lessthancongruence2).",
            "VernacExtend",
            "5b2403534249449386f4937464fe1b1d53ce9b4d"
        ],
        [
            "assert (Lt P Q D G) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "aa91547807d5f013fac1abdca43b09bd152cd601"
        ],
        [
            "assert (neq A a) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "48e4d4b38b32938796c5a51b35f81527da0b9281"
        ],
        [
            "assert (neq a R) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "21f8ec6e6e60aeba602f3b3118488245634158fa"
        ],
        [
            "assert (neq B b) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "38fb80f634ab5649b2c94550687dcfb7c5a4fb2d"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists S, (BetS A S R /\\ Cong A S C c)) by (conclude_def Lt );destruct Tf as [S];spliter.",
            "VernacExtend",
            "b4dab4039f7d212ae78d67f0a523d7fa374341bc"
        ],
        [
            "assert (neq A S) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "1cebf320590a25b27fcab10a18a9c32e85bc04d2"
        ],
        [
            "assert (neq C c) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "fb223cc37fe58d130e16e395cc62539a6bf0ef8b"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_together",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists R, (BetS A a R /\\ Cong a R B b /\\ Lt C c A R)) by (conclude_def TG );destruct Tf as [R];spliter.",
                        "VernacExtend",
                        "48e3f038bcb31b1ab6c8a7250e79e0dcb23d53fe"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A a A a) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "c70bb11d2474a4f5f79e7393316b4d4bf329c7d2"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B b a R) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "35a442f7bd226357e9a20909f6b76e3b7d5571e4"
                    ]
                },
                {
                    "command": [
                        "assert (Cong F G a R) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "8045fa11dfda91010082140f7ff27c139160730b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D G A R) by (conclude cn_sumofparts).",
                        "VernacExtend",
                        "15242c4ddf517a722701f76dcd39d2bec8da4dc0"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A R D G) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "4f8a9730a6c4811fbc5c06fa0796ed55b50a114a"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C c P Q) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "44a67b0e0e9b4594b0b0ddd17b3a15886cef6049"
                    ]
                },
                {
                    "command": [
                        "assert (Lt P Q A R) by (conclude lemma_lessthancongruence2).",
                        "VernacExtend",
                        "5b2403534249449386f4937464fe1b1d53ce9b4d"
                    ]
                },
                {
                    "command": [
                        "assert (Lt P Q D G) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "aa91547807d5f013fac1abdca43b09bd152cd601"
                    ]
                },
                {
                    "command": [
                        "assert (neq A a) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "48e4d4b38b32938796c5a51b35f81527da0b9281"
                    ]
                },
                {
                    "command": [
                        "assert (neq a R) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "21f8ec6e6e60aeba602f3b3118488245634158fa"
                    ]
                },
                {
                    "command": [
                        "assert (neq B b) by (conclude axiom_nocollapse).",
                        "VernacExtend",
                        "38fb80f634ab5649b2c94550687dcfb7c5a4fb2d"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists S, (BetS A S R /\\ Cong A S C c)) by (conclude_def Lt );destruct Tf as [S];spliter.",
                        "VernacExtend",
                        "b4dab4039f7d212ae78d67f0a523d7fa374341bc"
                    ]
                },
                {
                    "command": [
                        "assert (neq A S) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "1cebf320590a25b27fcab10a18a9c32e85bc04d2"
                    ]
                },
                {
                    "command": [
                        "assert (neq C c) by (conclude axiom_nocollapse).",
                        "VernacExtend",
                        "fb223cc37fe58d130e16e395cc62539a6bf0ef8b"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}