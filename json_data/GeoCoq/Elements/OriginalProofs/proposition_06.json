{
    "filename": "Elements/OriginalProofs/proposition_06.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_06a.",
            "VernacRequire",
            "a5f555c73bc8d81c155516486b382f1cb51437a8"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_trichotomy1.",
            "VernacRequire",
            "76416a16164283ab1374b918a987c2c8742633a8"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma proposition_06 : forall A B C, Triangle A B C -> CongA A B C A C B -> Cong A B A C.",
            "VernacStartTheoremProof",
            "694ccddfc0f335ec109cf18a06ce63e37380bfc3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~ Lt A C A B) by (conclude proposition_06a).",
            "VernacExtend",
            "5c4a0fed911fda0080e8606aab22fc922a7566f0"
        ],
        [
            "assert (nCol A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e83b920a984fbfb905afe6317242c70bce914c01"
        ],
        [
            "assert (~ Col A C B).",
            "VernacExtend",
            "3107643230c41d6aa35c76ec632c3401d8b052b1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Triangle A C B) by (conclude_def Triangle ).",
            "VernacExtend",
            "be35450d79b2ec7ec0258c474916f7b9e6560530"
        ],
        [
            "assert (CongA A C B A B C) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "86862e4edfbe4a19badc902c13ef20ef19d03178"
        ],
        [
            "assert (~ Lt A B A C) by (conclude proposition_06a).",
            "VernacExtend",
            "15c77f3020b650ee567241fbcd2b97871e97a0b3"
        ],
        [
            "assert (neq A B) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "9649284df41a2d643c1d265e0d98150c3d8d6a08"
        ],
        [
            "assert (neq A C) by (forward_using lemma_angledistinct).",
            "VernacExtend",
            "fb1bbf8304c14f46b4fe3e830a007c5b66466470"
        ],
        [
            "assert (Cong A B A C) by (conclude lemma_trichotomy1).",
            "VernacExtend",
            "fafabbbfa18e7513db6d021a0c8f7c54c4ec540e"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "proposition_06",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (~ Lt A C A B) by (conclude proposition_06a).",
                        "VernacExtend",
                        "5c4a0fed911fda0080e8606aab22fc922a7566f0"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e83b920a984fbfb905afe6317242c70bce914c01"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A C B).",
                        "VernacExtend",
                        "3107643230c41d6aa35c76ec632c3401d8b052b1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle A C B) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "be35450d79b2ec7ec0258c474916f7b9e6560530"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A C B A B C) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "86862e4edfbe4a19badc902c13ef20ef19d03178"
                    ]
                },
                {
                    "command": [
                        "assert (~ Lt A B A C) by (conclude proposition_06a).",
                        "VernacExtend",
                        "15c77f3020b650ee567241fbcd2b97871e97a0b3"
                    ]
                },
                {
                    "command": [
                        "assert (neq A B) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "9649284df41a2d643c1d265e0d98150c3d8d6a08"
                    ]
                },
                {
                    "command": [
                        "assert (neq A C) by (forward_using lemma_angledistinct).",
                        "VernacExtend",
                        "fb1bbf8304c14f46b4fe3e830a007c5b66466470"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B A C) by (conclude lemma_trichotomy1).",
                        "VernacExtend",
                        "fafabbbfa18e7513db6d021a0c8f7c54c4ec540e"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}