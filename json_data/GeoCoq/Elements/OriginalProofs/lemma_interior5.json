{
    "filename": "Elements/OriginalProofs/lemma_interior5.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_extension.",
            "VernacRequire",
            "7a395274ff58b809e27cefedbbe9b45804acec33"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "bcd71c14b86cc5f40746e4240ceb67f5195dfb04"
        ],
        [
            "Lemma lemma_interior5 : forall A B C D a b c d, BetS A B C -> BetS a b c -> Cong A B a b -> Cong B C b c -> Cong A D a d -> Cong C D c d -> Cong B D b d.",
            "VernacStartTheoremProof",
            "9c732a7ce695315ab25431834c030f66c59c1235"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (neq B C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
        ],
        [
            "assert (neq A C) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "9ccac948939c7ef6427ba87db5086f0baccd3662"
        ],
        [
            "assert (~ eq C A).",
            "VernacExtend",
            "ebea71ace167bc95a91daefa0553fedcde7493fb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq A C) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "2d98fcfb85dab16cbf55345cedeb7159fc95e186"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS C A M /\\ Cong A M B C)) by (conclude lemma_extension);destruct Tf as [M];spliter.",
            "VernacExtend",
            "02c0b72768d72045ce63322fc262a74b4e30fdd7"
        ],
        [
            "assert (Cong A M M A) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "0aff13a39fd8ea5adba8bf10a3f31888803e1ad4"
        ],
        [
            "assert (Cong M A A M) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "290f7a5eecc598b3bb42e322c0f83d5f0187e508"
        ],
        [
            "assert (Cong M A B C) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "d67833410a21dc2a591371227387cc3f96d8cc7e"
        ],
        [
            "assert (neq b c) by (conclude axiom_nocollapse).",
            "VernacExtend",
            "de4702f6d876690f5704ad26002eb6be070701e2"
        ],
        [
            "assert (neq a c) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "00bb95e55506d3c0b39943b54d75d34a9303d33a"
        ],
        [
            "assert (~ eq c a).",
            "VernacExtend",
            "34f4510b8184f5a57075096bf11e85ba00f2d9f2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (eq a c) by (conclude lemma_equalitysymmetric).",
            "VernacExtend",
            "f896561a3811336960583fc09c41d01663de9b5a"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists m, (BetS c a m /\\ Cong a m b c)) by (conclude lemma_extension);destruct Tf as [m];spliter.",
            "VernacExtend",
            "787a69d063380a871cfff9fbab497994b9ab866b"
        ],
        [
            "assert (Cong m a a m) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "ccd6c750949137c387099d3e9777ae01009e1ff4"
        ],
        [
            "assert (Cong m a b c) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "b615f1f77559732e91bfa711cb957f184d7a5fec"
        ],
        [
            "assert (Cong b c m a) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "952b2fd22e7dee83e9fa897d9af4da1aa7517709"
        ],
        [
            "assert (Cong B C m a) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "9d4c686d96cd279985f165c90de65cdb0fa83857"
        ],
        [
            "assert (Cong M A m a) by (conclude lemma_congruencetransitive).",
            "VernacExtend",
            "340bb77d251d9eac6a05b622bd883342fe513016"
        ],
        [
            "assert (Cong A C a c) by (conclude cn_sumofparts).",
            "VernacExtend",
            "cb5d6b70d58f0581be26e70f6d50ed4ac85a8b56"
        ],
        [
            "assert (Cong c a C A) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "b6ac3cc146a78432377d5962f30db271402e6d5f"
        ],
        [
            "assert (Cong C A c a) by (conclude lemma_congruencesymmetric).",
            "VernacExtend",
            "1650d1d85705c3fc5813ab12bbd1da5632fd7bc4"
        ],
        [
            "assert (BetS C B A) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "2f4c35330fe4c7c49c3511750b6abf8c81fa3e01"
        ],
        [
            "assert (BetS B A M) by (conclude lemma_3_6a).",
            "VernacExtend",
            "78a0521db1108d9fac36746524c7794c160b13c6"
        ],
        [
            "assert (BetS c b a) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "af8893ecdf805c89c940733aa54249eba3d68603"
        ],
        [
            "assert (BetS b a m) by (conclude lemma_3_6a).",
            "VernacExtend",
            "64828c4f85868a48be55c925eb2725c46cdfa027"
        ],
        [
            "assert (Cong A M a m) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "c1c0bd76291c3f1d1c93992efd43da9ee31f0e7f"
        ],
        [
            "assert (Cong D M d m) by (conclude axiom_5_line).",
            "VernacExtend",
            "63066f1062bb3146e97d80a05722157403a48b50"
        ],
        [
            "assert (BetS m a b) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "bf7cf4a5ebee3e32804bf8b66b2c1fa533c616db"
        ],
        [
            "assert (BetS M A B) by (conclude axiom_betweennesssymmetry).",
            "VernacExtend",
            "cf235c95f6a7411740c96caef41496fbc2900db5"
        ],
        [
            "assert (Cong M D m d) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "738d60ea45552fa10b4efa82e24da27957d5b518"
        ],
        [
            "assert (Cong D B d b) by (conclude axiom_5_line).",
            "VernacExtend",
            "142ed6623529f28e1f1ef1efd4b60bde29c51824"
        ],
        [
            "assert (Cong B D b d) by (forward_using lemma_congruenceflip).",
            "VernacExtend",
            "51bff3f0e4f5031013bc35ac3988106345bc275a"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_interior5",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (neq B C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "f6fdee308c5859b48d3d33e5ee4e6033c868f322"
                    ]
                },
                {
                    "command": [
                        "assert (neq A C) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "9ccac948939c7ef6427ba87db5086f0baccd3662"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq C A).",
                        "VernacExtend",
                        "ebea71ace167bc95a91daefa0553fedcde7493fb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq A C) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "2d98fcfb85dab16cbf55345cedeb7159fc95e186"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS C A M /\\ Cong A M B C)) by (conclude lemma_extension);destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "02c0b72768d72045ce63322fc262a74b4e30fdd7"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A M M A) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "0aff13a39fd8ea5adba8bf10a3f31888803e1ad4"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M A A M) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "290f7a5eecc598b3bb42e322c0f83d5f0187e508"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M A B C) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "d67833410a21dc2a591371227387cc3f96d8cc7e"
                    ]
                },
                {
                    "command": [
                        "assert (neq b c) by (conclude axiom_nocollapse).",
                        "VernacExtend",
                        "de4702f6d876690f5704ad26002eb6be070701e2"
                    ]
                },
                {
                    "command": [
                        "assert (neq a c) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "00bb95e55506d3c0b39943b54d75d34a9303d33a"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq c a).",
                        "VernacExtend",
                        "34f4510b8184f5a57075096bf11e85ba00f2d9f2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (eq a c) by (conclude lemma_equalitysymmetric).",
                        "VernacExtend",
                        "f896561a3811336960583fc09c41d01663de9b5a"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists m, (BetS c a m /\\ Cong a m b c)) by (conclude lemma_extension);destruct Tf as [m];spliter.",
                        "VernacExtend",
                        "787a69d063380a871cfff9fbab497994b9ab866b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong m a a m) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "ccd6c750949137c387099d3e9777ae01009e1ff4"
                    ]
                },
                {
                    "command": [
                        "assert (Cong m a b c) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "b615f1f77559732e91bfa711cb957f184d7a5fec"
                    ]
                },
                {
                    "command": [
                        "assert (Cong b c m a) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "952b2fd22e7dee83e9fa897d9af4da1aa7517709"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C m a) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "9d4c686d96cd279985f165c90de65cdb0fa83857"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M A m a) by (conclude lemma_congruencetransitive).",
                        "VernacExtend",
                        "340bb77d251d9eac6a05b622bd883342fe513016"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A C a c) by (conclude cn_sumofparts).",
                        "VernacExtend",
                        "cb5d6b70d58f0581be26e70f6d50ed4ac85a8b56"
                    ]
                },
                {
                    "command": [
                        "assert (Cong c a C A) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "b6ac3cc146a78432377d5962f30db271402e6d5f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C A c a) by (conclude lemma_congruencesymmetric).",
                        "VernacExtend",
                        "1650d1d85705c3fc5813ab12bbd1da5632fd7bc4"
                    ]
                },
                {
                    "command": [
                        "assert (BetS C B A) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "2f4c35330fe4c7c49c3511750b6abf8c81fa3e01"
                    ]
                },
                {
                    "command": [
                        "assert (BetS B A M) by (conclude lemma_3_6a).",
                        "VernacExtend",
                        "78a0521db1108d9fac36746524c7794c160b13c6"
                    ]
                },
                {
                    "command": [
                        "assert (BetS c b a) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "af8893ecdf805c89c940733aa54249eba3d68603"
                    ]
                },
                {
                    "command": [
                        "assert (BetS b a m) by (conclude lemma_3_6a).",
                        "VernacExtend",
                        "64828c4f85868a48be55c925eb2725c46cdfa027"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A M a m) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "c1c0bd76291c3f1d1c93992efd43da9ee31f0e7f"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D M d m) by (conclude axiom_5_line).",
                        "VernacExtend",
                        "63066f1062bb3146e97d80a05722157403a48b50"
                    ]
                },
                {
                    "command": [
                        "assert (BetS m a b) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "bf7cf4a5ebee3e32804bf8b66b2c1fa533c616db"
                    ]
                },
                {
                    "command": [
                        "assert (BetS M A B) by (conclude axiom_betweennesssymmetry).",
                        "VernacExtend",
                        "cf235c95f6a7411740c96caef41496fbc2900db5"
                    ]
                },
                {
                    "command": [
                        "assert (Cong M D m d) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "738d60ea45552fa10b4efa82e24da27957d5b518"
                    ]
                },
                {
                    "command": [
                        "assert (Cong D B d b) by (conclude axiom_5_line).",
                        "VernacExtend",
                        "142ed6623529f28e1f1ef1efd4b60bde29c51824"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B D b d) by (forward_using lemma_congruenceflip).",
                        "VernacExtend",
                        "51bff3f0e4f5031013bc35ac3988106345bc275a"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}