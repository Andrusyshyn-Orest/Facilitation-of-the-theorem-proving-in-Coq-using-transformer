{
    "filename": "Elements/OriginalProofs/lemma_legsmallerhypotenuse.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.proposition_19.",
            "VernacRequire",
            "d62f6f8b89b82c68a66c0f086eeb4b9498b4049f"
        ],
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_lessthancongruence2.",
            "VernacRequire",
            "9ea7bc6d614a484da577fe8b249254ad11cf2676"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "8fa44f4771a9528e103d9f2054b77606cde8225f"
        ],
        [
            "Lemma lemma_legsmallerhypotenuse : forall A B C, Per A B C -> Lt A B A C /\\ Lt B C A C.",
            "VernacStartTheoremProof",
            "609b563511842edb849bb8b37c13de0c0fabcd59"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Per C B A) by (conclude lemma_8_2).",
            "VernacExtend",
            "3bc22b960a66ceb679922c391fdd15e68be9557f"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists D, (BetS C B D /\\ Cong C B D B /\\ Cong C A D A /\\ neq B A)) by (conclude_def Per );destruct Tf as [D];spliter.",
            "VernacExtend",
            "f975f6bdfa9bd9528f3b248f9fa96fa8e4071a40"
        ],
        [
            "assert (nCol A B C) by (conclude lemma_rightangleNC).",
            "VernacExtend",
            "f2cdc7cb572e9c7235b56c018ed5cae23c323020"
        ],
        [
            "assert (Triangle A B C) by (conclude_def Triangle ).",
            "VernacExtend",
            "e214dba186dfa4662bfacc313daed8b05f69ce75"
        ],
        [
            "assert (~ Col A C B).",
            "VernacExtend",
            "3107643230c41d6aa35c76ec632c3401d8b052b1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Triangle A C B) by (conclude_def Triangle ).",
            "VernacExtend",
            "be35450d79b2ec7ec0258c474916f7b9e6560530"
        ],
        [
            "assert ((LtA C A B A B D /\\ LtA B C A A B D)) by (conclude proposition_16).",
            "VernacExtend",
            "5ffa82a395f6968b12c1286c3fe205ab4738c91d"
        ],
        [
            "assert (eq A A) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "61d4f27cc63449a4c835629f7da173ce519b7510"
        ],
        [
            "assert (eq C C) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "58ac3652b8294144f672cd30eb3468a526751f38"
        ],
        [
            "assert (eq D D) by (conclude cn_equalityreflexive).",
            "VernacExtend",
            "d0129992dde00ccde6907626e22196fb7717fb0b"
        ],
        [
            "assert (~ eq B C).",
            "VernacExtend",
            "2a4c174d5fcfb07079559ff9be73565058be28f2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (conclude_def Col ).",
            "VernacExtend",
            "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (Out B A A) by (conclude lemma_ray4).",
            "VernacExtend",
            "6c6ec3ac616495dbfa731f8b969ff3f1e02b3fce"
        ],
        [
            "assert (Out B C C) by (conclude lemma_ray4).",
            "VernacExtend",
            "a9badce1d2d93b32a5fe3eae0965bd326aa9fa41"
        ],
        [
            "assert (Out B D D) by (conclude lemma_ray4).",
            "VernacExtend",
            "9dcb0def0987bcfefce142df69b06d620db93897"
        ],
        [
            "assert (Cong B A B A) by (conclude cn_congruencereflexive).",
            "VernacExtend",
            "501dea04bd06be0aa7f4f464411dd482febe3981"
        ],
        [
            "assert (Cong B D B C) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "3025d77d764962a2304cd440dff45330178c46a2"
        ],
        [
            "assert (Cong A D A C) by (forward_using lemma_doublereverse).",
            "VernacExtend",
            "2b0f5564dfea7e3ed2c73405f0b26e8dc776be94"
        ],
        [
            "assert (~ Col A B D).",
            "VernacExtend",
            "ffc0da0a0d65cc00c93dfb4c1e8c861b87b50798"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col C B D) by (conclude_def Col ).",
            "VernacExtend",
            "3210d9112f5393e9f1e443011ab8c12ecd45da46"
        ],
        [
            "assert (Col D B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
        ],
        [
            "assert (Col D B A) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "b7a3a74036f5bb861997341ca7a6a6e1bdd1390c"
        ],
        [
            "assert (neq B D) by (forward_using lemma_betweennotequal).",
            "VernacExtend",
            "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
        ],
        [
            "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
            "VernacExtend",
            "9b514e0053ba8f3c49b63d2480a07be55876115a"
        ],
        [
            "assert (Col B C A) by (conclude lemma_collinear4).",
            "VernacExtend",
            "e17a94df43580136607890c1821435060d263ac2"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA A B D A B C) by (conclude_def CongA ).",
            "VernacExtend",
            "403d10988342934a94e2b3fc4d018f93f77a7fde"
        ],
        [
            "assert (CongA A B C A B D) by (conclude lemma_equalanglessymmetric).",
            "VernacExtend",
            "de697f02167cd33e6930956c50cc0d897887dedc"
        ],
        [
            "assert (LtA B C A A B C) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "608485bcf90c06483775c7287053a228ecfca624"
        ],
        [
            "assert (Lt A B A C) by (conclude proposition_19).",
            "VernacExtend",
            "c0b605e81030067c6231b42f70b2b1b183dbd432"
        ],
        [
            "assert (LtA C A B A B C) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "25c7cf23169f71ac64cc416e9bdbe5513c0afcae"
        ],
        [
            "assert (~ Col B A C).",
            "VernacExtend",
            "119e756c043d3eda79fbabedada4b8a673b1637b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CongA B A C C A B) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "29958e6da91b92f043ea8924dd720051e625e796"
        ],
        [
            "assert (LtA B A C A B C) by (conclude lemma_angleorderrespectscongruence2).",
            "VernacExtend",
            "ae08f0c407f3a415d704de22e5232eca95cce6f3"
        ],
        [
            "assert (~ Col C B A).",
            "VernacExtend",
            "86233fe6d2145a6e93ed7346f858db350e0c062a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B C) by (forward_using lemma_collinearorder).",
            "VernacExtend",
            "115803ade1f97d11f923db51e034b8a1961d4ba9"
        ],
        [
            "contradict.",
            "VernacExtend",
            "90406671bca524c80afc86c1ad59fdd000404b65"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Triangle C B A) by (conclude_def Triangle ).",
            "VernacExtend",
            "1d08a23838d9e06146580f3b18a57a3843cf6e2a"
        ],
        [
            "assert (CongA C B A A B C) by (conclude lemma_ABCequalsCBA).",
            "VernacExtend",
            "944d8975dcf87abfbf9178008fcabb9fcd62f1f9"
        ],
        [
            "assert (LtA B A C C B A) by (conclude lemma_angleorderrespectscongruence).",
            "VernacExtend",
            "15230c2db6c047874a873c2d449f5fd8969feda9"
        ],
        [
            "assert (Lt C B C A) by (conclude proposition_19).",
            "VernacExtend",
            "f6613be6b0ec9fd803b3e47878c696f5426d4af9"
        ],
        [
            "assert (Cong C B B C) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "8cbef651e274a4cca2f2efce0af3c2dbd3990d60"
        ],
        [
            "assert (Lt B C C A) by (conclude lemma_lessthancongruence2).",
            "VernacExtend",
            "06c50cf1289d01c4ef1a0e91e5e0e763ba9c958c"
        ],
        [
            "assert (Cong C A A C) by (conclude cn_equalityreverse).",
            "VernacExtend",
            "e393b8b5748406d365a01394b43179db88d2924f"
        ],
        [
            "assert (Lt B C A C) by (conclude lemma_lessthancongruence).",
            "VernacExtend",
            "5017c9625e4557771e7638490ffd035bf9df9842"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_legsmallerhypotenuse",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Per C B A) by (conclude lemma_8_2).",
                        "VernacExtend",
                        "3bc22b960a66ceb679922c391fdd15e68be9557f"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists D, (BetS C B D /\\ Cong C B D B /\\ Cong C A D A /\\ neq B A)) by (conclude_def Per );destruct Tf as [D];spliter.",
                        "VernacExtend",
                        "f975f6bdfa9bd9528f3b248f9fa96fa8e4071a40"
                    ]
                },
                {
                    "command": [
                        "assert (nCol A B C) by (conclude lemma_rightangleNC).",
                        "VernacExtend",
                        "f2cdc7cb572e9c7235b56c018ed5cae23c323020"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle A B C) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "e214dba186dfa4662bfacc313daed8b05f69ce75"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A C B).",
                        "VernacExtend",
                        "3107643230c41d6aa35c76ec632c3401d8b052b1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle A C B) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "be35450d79b2ec7ec0258c474916f7b9e6560530"
                    ]
                },
                {
                    "command": [
                        "assert ((LtA C A B A B D /\\ LtA B C A A B D)) by (conclude proposition_16).",
                        "VernacExtend",
                        "5ffa82a395f6968b12c1286c3fe205ab4738c91d"
                    ]
                },
                {
                    "command": [
                        "assert (eq A A) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "61d4f27cc63449a4c835629f7da173ce519b7510"
                    ]
                },
                {
                    "command": [
                        "assert (eq C C) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "58ac3652b8294144f672cd30eb3468a526751f38"
                    ]
                },
                {
                    "command": [
                        "assert (eq D D) by (conclude cn_equalityreflexive).",
                        "VernacExtend",
                        "d0129992dde00ccde6907626e22196fb7717fb0b"
                    ]
                },
                {
                    "command": [
                        "assert (~ eq B C).",
                        "VernacExtend",
                        "2a4c174d5fcfb07079559ff9be73565058be28f2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (conclude_def Col ).",
                        "VernacExtend",
                        "f3d4ff9f932d6fc74e273c31f7e3cc76be423f52"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A A) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "6c6ec3ac616495dbfa731f8b969ff3f1e02b3fce"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C C) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "a9badce1d2d93b32a5fe3eae0965bd326aa9fa41"
                    ]
                },
                {
                    "command": [
                        "assert (Out B D D) by (conclude lemma_ray4).",
                        "VernacExtend",
                        "9dcb0def0987bcfefce142df69b06d620db93897"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A B A) by (conclude cn_congruencereflexive).",
                        "VernacExtend",
                        "501dea04bd06be0aa7f4f464411dd482febe3981"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B D B C) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "3025d77d764962a2304cd440dff45330178c46a2"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A D A C) by (forward_using lemma_doublereverse).",
                        "VernacExtend",
                        "2b0f5564dfea7e3ed2c73405f0b26e8dc776be94"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B D).",
                        "VernacExtend",
                        "ffc0da0a0d65cc00c93dfb4c1e8c861b87b50798"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col C B D) by (conclude_def Col ).",
                        "VernacExtend",
                        "3210d9112f5393e9f1e443011ab8c12ecd45da46"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "394b4eea9dc6dfc71264cc3cd7da0141792f4244"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B A) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "b7a3a74036f5bb861997341ca7a6a6e1bdd1390c"
                    ]
                },
                {
                    "command": [
                        "assert (neq B D) by (forward_using lemma_betweennotequal).",
                        "VernacExtend",
                        "d9a8b449c450d5198c0f3b04d0eb411d7c24763b"
                    ]
                },
                {
                    "command": [
                        "assert (neq D B) by (conclude lemma_inequalitysymmetric).",
                        "VernacExtend",
                        "9b514e0053ba8f3c49b63d2480a07be55876115a"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C A) by (conclude lemma_collinear4).",
                        "VernacExtend",
                        "e17a94df43580136607890c1821435060d263ac2"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B D A B C) by (conclude_def CongA ).",
                        "VernacExtend",
                        "403d10988342934a94e2b3fc4d018f93f77a7fde"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A B C A B D) by (conclude lemma_equalanglessymmetric).",
                        "VernacExtend",
                        "de697f02167cd33e6930956c50cc0d897887dedc"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B C A A B C) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "608485bcf90c06483775c7287053a228ecfca624"
                    ]
                },
                {
                    "command": [
                        "assert (Lt A B A C) by (conclude proposition_19).",
                        "VernacExtend",
                        "c0b605e81030067c6231b42f70b2b1b183dbd432"
                    ]
                },
                {
                    "command": [
                        "assert (LtA C A B A B C) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "25c7cf23169f71ac64cc416e9bdbe5513c0afcae"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B A C).",
                        "VernacExtend",
                        "119e756c043d3eda79fbabedada4b8a673b1637b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (CongA B A C C A B) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "29958e6da91b92f043ea8924dd720051e625e796"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B A C A B C) by (conclude lemma_angleorderrespectscongruence2).",
                        "VernacExtend",
                        "ae08f0c407f3a415d704de22e5232eca95cce6f3"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C B A).",
                        "VernacExtend",
                        "86233fe6d2145a6e93ed7346f858db350e0c062a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C) by (forward_using lemma_collinearorder).",
                        "VernacExtend",
                        "115803ade1f97d11f923db51e034b8a1961d4ba9"
                    ]
                },
                {
                    "command": [
                        "contradict.",
                        "VernacExtend",
                        "90406671bca524c80afc86c1ad59fdd000404b65"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Triangle C B A) by (conclude_def Triangle ).",
                        "VernacExtend",
                        "1d08a23838d9e06146580f3b18a57a3843cf6e2a"
                    ]
                },
                {
                    "command": [
                        "assert (CongA C B A A B C) by (conclude lemma_ABCequalsCBA).",
                        "VernacExtend",
                        "944d8975dcf87abfbf9178008fcabb9fcd62f1f9"
                    ]
                },
                {
                    "command": [
                        "assert (LtA B A C C B A) by (conclude lemma_angleorderrespectscongruence).",
                        "VernacExtend",
                        "15230c2db6c047874a873c2d449f5fd8969feda9"
                    ]
                },
                {
                    "command": [
                        "assert (Lt C B C A) by (conclude proposition_19).",
                        "VernacExtend",
                        "f6613be6b0ec9fd803b3e47878c696f5426d4af9"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C B B C) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "8cbef651e274a4cca2f2efce0af3c2dbd3990d60"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B C C A) by (conclude lemma_lessthancongruence2).",
                        "VernacExtend",
                        "06c50cf1289d01c4ef1a0e91e5e0e763ba9c958c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C A A C) by (conclude cn_equalityreverse).",
                        "VernacExtend",
                        "e393b8b5748406d365a01394b43179db88d2924f"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B C A C) by (conclude lemma_lessthancongruence).",
                        "VernacExtend",
                        "5017c9625e4557771e7638490ffd035bf9df9842"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}