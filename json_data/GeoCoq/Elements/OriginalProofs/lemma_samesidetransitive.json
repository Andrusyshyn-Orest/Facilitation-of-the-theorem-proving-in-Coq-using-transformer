{
    "filename": "Elements/OriginalProofs/lemma_samesidetransitive.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Elements.OriginalProofs.lemma_planeseparation.",
            "VernacRequire",
            "dfb172c878e868c4e95a00e2960ea7a0533a4c16"
        ],
        [
            "Section Euclid.",
            "VernacBeginSection",
            "e8e50ec22d132b98ae0c09eb2dc73d111e653cbb"
        ],
        [
            "Context `{Ax1:euclidean_neutral_ruler_compass}.",
            "VernacContext",
            "8fa44f4771a9528e103d9f2054b77606cde8225f"
        ],
        [
            "Lemma lemma_samesidetransitive : forall A B P Q R, OS P Q A B -> OS Q R A B -> OS P R A B.",
            "VernacStartTheoremProof",
            "fad81fda24bb9ebf701a8ca5f88ceb2f8a944b96"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists E F G, (Col A B E /\\ Col A B F /\\ BetS Q E G /\\ BetS R F G /\\ nCol A B Q /\\ nCol A B R)) by (conclude_def OS );destruct Tf as [E[F[G]]];spliter.",
            "VernacExtend",
            "994d529bc0ff558664334ff9e3e35139ec94f8dd"
        ],
        [
            "assert (TS Q A B G) by (conclude_def TS ).",
            "VernacExtend",
            "b0dfd8b7fe0cd9901924f0f46f2f815382502d10"
        ],
        [
            "assert (TS P A B G) by (conclude lemma_planeseparation).",
            "VernacExtend",
            "e3b00ee6b6483a5c5f89f719170b1fc5eecadf4b"
        ],
        [
            "let Tf:=fresh in assert (Tf:exists M, (BetS P M G /\\ Col A B M /\\ nCol A B P)) by (conclude_def TS );destruct Tf as [M];spliter.",
            "VernacExtend",
            "e23273abdbe39efeb1b10304d5b79dedcb55fe38"
        ],
        [
            "assert (OS P R A B) by (conclude_def OS ).",
            "VernacExtend",
            "4c6f1f87571b510bb7978dc5d2b4c0045207d652"
        ],
        [
            "close.",
            "VernacExtend",
            "46b53d211ce6c67d71299973c45589a8146396aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Euclid.",
            "VernacEndSegment",
            "e81693cf20769b179ed48dc8060a53ad2401f040"
        ]
    ],
    "proofs": [
        {
            "name": "lemma_samesidetransitive",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists E F G, (Col A B E /\\ Col A B F /\\ BetS Q E G /\\ BetS R F G /\\ nCol A B Q /\\ nCol A B R)) by (conclude_def OS );destruct Tf as [E[F[G]]];spliter.",
                        "VernacExtend",
                        "994d529bc0ff558664334ff9e3e35139ec94f8dd"
                    ]
                },
                {
                    "command": [
                        "assert (TS Q A B G) by (conclude_def TS ).",
                        "VernacExtend",
                        "b0dfd8b7fe0cd9901924f0f46f2f815382502d10"
                    ]
                },
                {
                    "command": [
                        "assert (TS P A B G) by (conclude lemma_planeseparation).",
                        "VernacExtend",
                        "e3b00ee6b6483a5c5f89f719170b1fc5eecadf4b"
                    ]
                },
                {
                    "command": [
                        "let Tf:=fresh in assert (Tf:exists M, (BetS P M G /\\ Col A B M /\\ nCol A B P)) by (conclude_def TS );destruct Tf as [M];spliter.",
                        "VernacExtend",
                        "e23273abdbe39efeb1b10304d5b79dedcb55fe38"
                    ]
                },
                {
                    "command": [
                        "assert (OS P R A B) by (conclude_def OS ).",
                        "VernacExtend",
                        "4c6f1f87571b510bb7978dc5d2b4c0045207d652"
                    ]
                },
                {
                    "command": [
                        "close.",
                        "VernacExtend",
                        "46b53d211ce6c67d71299973c45589a8146396aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}