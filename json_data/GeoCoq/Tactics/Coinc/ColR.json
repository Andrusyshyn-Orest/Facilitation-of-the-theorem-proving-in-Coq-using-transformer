{
    "filename": "Tactics/Coinc/ColR.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import Recdef.",
            "VernacRequire",
            "8ffa9cbe33b0c9742b324b18d68b10eb03ac2ead"
        ],
        [
            "Require Import NArith.",
            "VernacRequire",
            "94ad0f31c6e8f77c89e55924450f512e031ec933"
        ],
        [
            "Require Import GeoCoq.Utils.sets.",
            "VernacRequire",
            "683b6258c49d18c9e40d121098acf4ce0c5cd444"
        ],
        [
            "Module SSWP := WPropertiesOn SetOfSetsOfPositiveOrderedType SS.",
            "VernacDefineModule",
            "4968b66414f776bab68fee4e0ba108e62b95e075"
        ],
        [
            "Module SSWEqP := WEqPropertiesOn SetOfSetsOfPositiveOrderedType SS.",
            "VernacDefineModule",
            "a7d3aeffccf341ccab874c083289698734b9be14"
        ],
        [
            "Module SPWEqP := WEqPropertiesOn SetOfPairsOfPositiveOrderedType SP.",
            "VernacDefineModule",
            "f57a20dace7fbf3b35c2f8f3e7cf0ef5a6f80411"
        ],
        [
            "Definition pick_line (s : SS.elt) (sp : SP.t) := SP.exists_ (fun p => (S.mem (fstpp p) s) && (S.mem (sndpp p) s)) sp.",
            "VernacDefinition",
            "7f1a4aad361bfde44772c30433ce603e751579f4"
        ],
        [
            "Lemma proper_00 : forall s, Proper ((fun t1 t2 : SetOfPairsOfPositiveOrderedType.t => Pos.eq (fstpp t1) (fstpp t2) /\\ Pos.eq (sndpp t1) (sndpp t2)) ==> eq) (fun p : SP.elt => S.mem (fstpp p) s && S.mem (sndpp p) s).",
            "VernacStartTheoremProof",
            "528172a67a9835a270dae3c0b3ee2b57f0411dce"
        ],
        [
            "intros s x y Hxy.",
            "VernacExtend",
            "2cf35394c69c7ecf050dc4444fd68a29be2ec666"
        ],
        [
            "destruct Hxy as [Hxyfst Hxysnd].",
            "VernacExtend",
            "795b9c18d6465525d8168a2b7bbe63b512fcb679"
        ],
        [
            "rewrite Hxyfst.",
            "VernacExtend",
            "314a079bf2d3b7091d9eec7352301f280ca58050"
        ],
        [
            "rewrite Hxysnd.",
            "VernacExtend",
            "1ba14e4d8227df0ccd22c30ca5050773b3a03f7c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proper_0 : Proper (S.Equal ==> eq ==> eq) pick_line.",
            "VernacStartTheoremProof",
            "6de894c5be077aa455ae2cb5fc45f3cc6bad1d32"
        ],
        [
            "intros x1 y1 HXY1.",
            "VernacExtend",
            "839d87017942d79600eeec0cf6d4a3a8d53be2f0"
        ],
        [
            "intros x2 y2 HXY2.",
            "VernacExtend",
            "72d0f0e4ccac3df1be118fdffeefc22942a18e41"
        ],
        [
            "unfold pick_line; unfold SP.exists_; unfold SP.Raw.exists_.",
            "VernacExtend",
            "9a59dd618b1f46fa5697e2ba37b4970e064f795b"
        ],
        [
            "rewrite HXY2.",
            "VernacExtend",
            "a96429c1e97436c7f5b03605bec3e952de5a89f7"
        ],
        [
            "induction (SP.this y2); try intuition.",
            "VernacExtend",
            "6a2ef9d3eb7490735acca3cb716f1b9e4a57de48"
        ],
        [
            "assert (HEqMem : forall e, S.mem e x1 = S.mem e y1) by (intro; apply SWP.Dec.F.mem_m; intuition).",
            "VernacExtend",
            "c7f18e24076f8be2b4e58b458aae397b2a55bdf2"
        ],
        [
            "assert (HEqAI : (S.mem (fstpp a) x1 && S.mem (sndpp a) x1) = (S.mem (fstpp a) y1 && S.mem (sndpp a) y1)) by (rewrite HEqMem; rewrite HEqMem; intuition).",
            "VernacExtend",
            "03da1b503e99a761f19c8bfd777beb57c0c6c87c"
        ],
        [
            "rewrite HEqAI.",
            "VernacExtend",
            "a958cf8c1336289b400432caec64db74b66a4e6e"
        ],
        [
            "induction (S.mem (fstpp a) y1 && S.mem (sndpp a) y1); intuition.",
            "VernacExtend",
            "eca952868cf1009a07e5dbf73810a925716b4671"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proper_1 : forall s1 sp, Proper (S.Equal ==> eq) (fun s2 : SS.elt => pick_line (S.inter s1 s2) sp).",
            "VernacStartTheoremProof",
            "e6419ad30edfedd89c3a4865c5d906b33e4e9868"
        ],
        [
            "intros s1 sp.",
            "VernacExtend",
            "9ce71080ad4edcffc39d0c11de22bbe0283debcb"
        ],
        [
            "intros x y HXY.",
            "VernacExtend",
            "d54666da0000fd8bd617b0c87941a7c833808d02"
        ],
        [
            "assert (HEqI : S.Equal (S.inter s1 x) (S.inter s1 y)) by (apply SWP.inter_equal_2; assumption).",
            "VernacExtend",
            "0e12dc4abbd1b25f3b7b1fb3a45dfb16b2f66ae2"
        ],
        [
            "apply proper_0; auto.",
            "VernacExtend",
            "204981aa8eb8eb4f01d206a72ec76af8a8adfee2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition exists_witness (f : SS.elt -> bool) (s : SS.t) : option SS.elt := SS.choose (SS.filter f s).",
            "VernacDefinition",
            "f99d3fef0613a4d56fcd4d81c975b5e93b0dc3cf"
        ],
        [
            "Lemma exists_witness_ok : forall e f s, Proper (S.Equal ==> eq) f -> exists_witness f s = Some e -> SS.In e s.",
            "VernacStartTheoremProof",
            "923d5c69f0b91e197eb27eb9bad1f1e735fff3d0"
        ],
        [
            "intros e f s HP H.",
            "VernacExtend",
            "d7e9f08bce61d66800ace0de5491371313df1375"
        ],
        [
            "unfold exists_witness in H.",
            "VernacExtend",
            "459fa409f748633674aff369aeb45f44d99639c4"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_2.",
            "VernacExtend",
            "80188289b4d4e5f1772ae5a93b6f4e37e2065425"
        ],
        [
            "apply SSWEqP.choose_mem_1 in H.",
            "VernacExtend",
            "0a4056de4ac591f1e507854a750a5e35d9ac42a4"
        ],
        [
            "rewrite SSWEqP.filter_mem in H; try assumption.",
            "VernacExtend",
            "eb4e4a44306ec507defbab9f7c603dd055918a73"
        ],
        [
            "apply andb_true_iff in H.",
            "VernacExtend",
            "6be4e13be3cc994beedd2c7e4adabd0a944c1be7"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pick_lines_aux (s1 : SS.elt) (ss : SS.t) (sp : SP.t) : (option (SS.elt * SS.elt)) := match ((exists_witness (fun s2 => let i := S.inter s1 s2 in pick_line i sp)) ss) with | None => None | Some s2 => Some(s1,s2) end.",
            "VernacDefinition",
            "cb1c7f0a8c012ed06500ac14d7022bbc5111284e"
        ],
        [
            "Definition pick_lines (ss : SS.t) (sp : SP.t) : (option (SS.elt * SS.elt)) := match (exists_witness (fun s => match (pick_lines_aux s (SS.remove s ss) sp) with | None => false | _ => true end) ss) with | None => None | Some s1 => pick_lines_aux s1 (SS.remove s1 ss) sp end.",
            "VernacDefinition",
            "7ffeb78356c0150b78a3063667649bf7e74f710e"
        ],
        [
            "Definition eqop (p1 p2 : option SS.elt) := match p1,p2 with | None, None => True | Some s1, Some s2 => True | _, _ => False end.",
            "VernacDefinition",
            "cad54259d96ea5a3ab063320cf581efe1adb12d3"
        ],
        [
            "Lemma proper_2 : forall (f1 f2 : SS.elt -> bool) (s1 s2 : SS.t), Proper (S.Equal ==> eq) f1 -> Proper (S.Equal ==> eq) f2 -> (forall x, f1 x = f2 x) -> SS.Equal s1 s2 -> eqop (exists_witness f1 s1) (exists_witness f2 s2).",
            "VernacStartTheoremProof",
            "a4c7ca2acd028bb13492a571812e05fdec504fa6"
        ],
        [
            "intros f1 f2 s1 s2.",
            "VernacExtend",
            "3b7bce0621dc1f25c8351f1569b67570fbccf8b7"
        ],
        [
            "intros H1 H2 H3 H4.",
            "VernacExtend",
            "02e7de9b75700099689a8ef93869b0d1fd57e14a"
        ],
        [
            "unfold eqop.",
            "VernacExtend",
            "baabe1f8d91fe4c0a6493014348615004ca05458"
        ],
        [
            "unfold exists_witness in *.",
            "VernacExtend",
            "1703644f67a31d0b01cd01accbf275feb679d701"
        ],
        [
            "assert (SS.Equal (SS.filter f1 s1) (SS.filter f2 s2)) by (apply SSWEqP.MP.Dec.F.filter_ext; assumption).",
            "VernacExtend",
            "bcf646321c4bcca4c014df616549e93bdabb9bb7"
        ],
        [
            "case_eq (SS.choose (SS.filter f1 s1)); case_eq (SS.choose (SS.filter f2 s2)).",
            "VernacExtend",
            "036e4dfbb9b9a096f27ef8931666ed74f992807c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros HCN e HCS.",
            "VernacExtend",
            "8338ca6af148978e7c03b3f41a4e8bbfe9e3fc45"
        ],
        [
            "apply SS.choose_spec1 in HCS.",
            "VernacExtend",
            "54a1c90480daef0b98f9b2a1292f9e58f1a4485c"
        ],
        [
            "apply SS.choose_spec2 in HCN.",
            "VernacExtend",
            "83bb49d8b4c55e389ddbb0d7aaff77eb5f56c35b"
        ],
        [
            "rewrite H in HCS.",
            "VernacExtend",
            "c244d326c16b08387f5891d5315ff32d3b03b199"
        ],
        [
            "apply SSWEqP.MP.empty_is_empty_1 in HCN.",
            "VernacExtend",
            "71eb49e317798a7dcf26de582a513976156cd426"
        ],
        [
            "rewrite HCN in HCS.",
            "VernacExtend",
            "31f31c0077552246097645fa68f81b8cc7fbf36c"
        ],
        [
            "rewrite <- SSWEqP.MP.Dec.F.empty_iff.",
            "VernacExtend",
            "5179eefc13cb4c671cf8faa0d4806ea2eef914bc"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "intros e HCS HCN.",
            "VernacExtend",
            "cc15df2a9851ee6b1782d02c1286e0c94189ae2b"
        ],
        [
            "apply SS.choose_spec1 in HCS.",
            "VernacExtend",
            "54a1c90480daef0b98f9b2a1292f9e58f1a4485c"
        ],
        [
            "apply SS.choose_spec2 in HCN.",
            "VernacExtend",
            "83bb49d8b4c55e389ddbb0d7aaff77eb5f56c35b"
        ],
        [
            "rewrite H in HCN.",
            "VernacExtend",
            "9edb71f938de655ffb1d0ac0c5f661588087836a"
        ],
        [
            "apply SSWEqP.MP.empty_is_empty_1 in HCN.",
            "VernacExtend",
            "71eb49e317798a7dcf26de582a513976156cd426"
        ],
        [
            "rewrite HCN in HCS.",
            "VernacExtend",
            "31f31c0077552246097645fa68f81b8cc7fbf36c"
        ],
        [
            "rewrite <- SSWEqP.MP.Dec.F.empty_iff.",
            "VernacExtend",
            "5179eefc13cb4c671cf8faa0d4806ea2eef914bc"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eqopp (p1 p2 : option (SS.elt * SS.elt)) := match p1,p2 with | None, None => True | Some s1, Some s2 => True | _, _ => False end.",
            "VernacDefinition",
            "5de548d23698259f28d922243cf0137050226215"
        ],
        [
            "Lemma proper_3 : Proper (S.Equal ==> SS.Equal ==> eq ==> eqopp) pick_lines_aux.",
            "VernacStartTheoremProof",
            "cfdc01bf5c748864b43c0e9f57e46ae0f43a0593"
        ],
        [
            "intros x1 y1 HXY1.",
            "VernacExtend",
            "839d87017942d79600eeec0cf6d4a3a8d53be2f0"
        ],
        [
            "intros x2 y2 HXY2.",
            "VernacExtend",
            "72d0f0e4ccac3df1be118fdffeefc22942a18e41"
        ],
        [
            "intros x3 y3 HXY3.",
            "VernacExtend",
            "54f000983cd9a32ca7a1cb9a1942bb5c75938ed0"
        ],
        [
            "unfold pick_lines_aux.",
            "VernacExtend",
            "45943184ad2c5712be0d323ef3d62a33134778ad"
        ],
        [
            "rewrite HXY3.",
            "VernacExtend",
            "5b1462afde59f7b21a3eae8d3170a08c32d86132"
        ],
        [
            "assert (eqop (exists_witness (fun s2 : SS.elt => pick_line (S.inter x1 s2) y3) x2) (exists_witness (fun s2 : SS.elt => pick_line (S.inter y1 s2) y3) y2)).",
            "VernacExtend",
            "b3653285a08b49c6fe332248271e501b6bf03fa8"
        ],
        [
            "apply proper_2.",
            "VernacExtend",
            "239500027425fb496c426724925002aaaba1a02e"
        ],
        [
            "apply proper_1.",
            "VernacExtend",
            "9bcf09b899868f8792d91207a527659acd15ca76"
        ],
        [
            "apply proper_1.",
            "VernacExtend",
            "9bcf09b899868f8792d91207a527659acd15ca76"
        ],
        [
            "intro; apply proper_0; try reflexivity.",
            "VernacExtend",
            "981cb9faf6e5f3470365e916d1d28dfb06dfb080"
        ],
        [
            "apply SWP.inter_equal_1; assumption.",
            "VernacExtend",
            "7d6cb983ff6965f434d050800140b1494715793c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "case_eq (exists_witness (fun s2 : SS.elt => pick_line (S.inter y1 s2) y3) y2); case_eq (exists_witness (fun s2 : SS.elt => pick_line (S.inter x1 s2) y3) x2).",
            "VernacExtend",
            "e0bf63f62db774e90aa5bea6dc7d29ad8f9154eb"
        ],
        [
            "simpl; intuition.",
            "VernacExtend",
            "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
        ],
        [
            "intros HCN e HCS.",
            "VernacExtend",
            "8338ca6af148978e7c03b3f41a4e8bbfe9e3fc45"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite HCS in H; rewrite HCN in H.",
            "VernacExtend",
            "a1c2c5fe4336f6255ec49ed40a5c6f168fbd79c1"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros e HCS HCN.",
            "VernacExtend",
            "cc15df2a9851ee6b1782d02c1286e0c94189ae2b"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite HCS in H; rewrite HCN in H.",
            "VernacExtend",
            "a1c2c5fe4336f6255ec49ed40a5c6f168fbd79c1"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pick_lines_ok_1 : forall s1 s2 ss sp, pick_lines ss sp = Some(s1,s2) -> SS.In s1 ss.",
            "VernacStartTheoremProof",
            "2e8a20d19e6c95d67fb689bbdac943db95665ba2"
        ],
        [
            "intros s1 s2 ss sp H.",
            "VernacExtend",
            "576376b9f26258a0e021b54acae009f9cd078652"
        ],
        [
            "unfold pick_lines in H.",
            "VernacExtend",
            "ad86f66bca02ae441bf753727e66bee90e6d6314"
        ],
        [
            "case_eq (exists_witness (fun s : SS.elt => match pick_lines_aux s (SS.remove s ss) sp with | Some _ => true | None => false end) ss).",
            "VernacExtend",
            "489d391982c05984da70a7cb718823693f2f5c87"
        ],
        [
            "intros e1 HEW1.",
            "VernacExtend",
            "2a567fdfa1687036465e1fef611850045d37fc9f"
        ],
        [
            "rewrite HEW1 in H.",
            "VernacExtend",
            "675a71248c7e01878edf2823776d4e708c05ea35"
        ],
        [
            "unfold pick_lines_aux in H.",
            "VernacExtend",
            "208f0ac9a9886cb1abbc88e2dd64a7ec7a9378d4"
        ],
        [
            "case_eq (exists_witness (fun s2 : SS.elt => pick_line (S.inter e1 s2) sp) (SS.remove e1 ss)).",
            "VernacExtend",
            "59241d7ddba44864251c5d5123e75581d4c245c2"
        ],
        [
            "intros e2 HEW2.",
            "VernacExtend",
            "1fc16878958b87d1f6f17c6498177d00d77d2623"
        ],
        [
            "rewrite HEW2 in H.",
            "VernacExtend",
            "eb15a01b423c775fe31cb25516074627e7cc25f3"
        ],
        [
            "assert (HEq1 : e1 = s1) by (injection H; intros; assumption).",
            "VernacExtend",
            "eca0a22fbf0e00fb9e046c8d9e079db5eb02db8d"
        ],
        [
            "rewrite HEq1 in *.",
            "VernacExtend",
            "37c5421f284fa2ad1c4d42b884307839417831b3"
        ],
        [
            "assert (HEq2 : e2 = s2) by (injection H; intros; assumption).",
            "VernacExtend",
            "10cc392df03719c33e189136ddd05b3b090309f3"
        ],
        [
            "rewrite HEq2 in *.",
            "VernacExtend",
            "901b7385eb26cebf2c5c7d2cdf91d7a0df36bf69"
        ],
        [
            "apply exists_witness_ok with (fun s : SS.elt => match pick_lines_aux s (SS.remove s ss) sp with | Some _ => true | None => false end).",
            "VernacExtend",
            "6e455cb36cc422cd31f563aa30da8b18eb97f499"
        ],
        [
            "intros x y HXY.",
            "VernacExtend",
            "d54666da0000fd8bd617b0c87941a7c833808d02"
        ],
        [
            "assert (SS.Equal (SS.remove x ss) (SS.remove y ss)) by (apply SSWP.Dec.F.remove_m; try assumption; reflexivity).",
            "VernacExtend",
            "0ffa093fb04731b954184d9445abadd14c4f3509"
        ],
        [
            "assert (eqopp (pick_lines_aux x (SS.remove x ss) sp) (pick_lines_aux y (SS.remove y ss) sp)).",
            "VernacExtend",
            "0106dec90f67275419e6a47bd9aec3da7544c313"
        ],
        [
            "apply proper_3; auto.",
            "VernacExtend",
            "72ff1a76e8dac8d02bab8bb3de6534e0e170e67d"
        ],
        [
            "case_eq (pick_lines_aux x (SS.remove x ss) sp); intros; case_eq (pick_lines_aux y (SS.remove y ss) sp); intros.",
            "VernacExtend",
            "11664672325453e8a02ae5c9d730255ccbfc7e60"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite H2 in H1; rewrite H3 in H1.",
            "VernacExtend",
            "d60d017c158b623d3de57a4a7472debbb0bafae4"
        ],
        [
            "unfold eqop in H1; simpl in H1.",
            "VernacExtend",
            "a5f5b655078facd7f0685ddfdae397d40e5c349d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite H2 in H1; rewrite H3 in H1.",
            "VernacExtend",
            "d60d017c158b623d3de57a4a7472debbb0bafae4"
        ],
        [
            "unfold eqop in H1; simpl in H1.",
            "VernacExtend",
            "a5f5b655078facd7f0685ddfdae397d40e5c349d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro HEW2.",
            "VernacExtend",
            "d765abbe0b296e489e225764f0cf4941b2608cbc"
        ],
        [
            "rewrite HEW2 in H.",
            "VernacExtend",
            "eb15a01b423c775fe31cb25516074627e7cc25f3"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "intro HEW.",
            "VernacExtend",
            "75beebc8353c6e7b1940af049fb3ad7d4a61baf5"
        ],
        [
            "rewrite HEW in H.",
            "VernacExtend",
            "fac42e5535f2f796d1d2c954dc42cd01dd34d6e7"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pick_lines_ok_2 : forall s1 s2 ss sp, pick_lines ss sp = Some(s1,s2) -> SS.In s2 (SS.remove s1 ss).",
            "VernacStartTheoremProof",
            "7d387cf3ade1092f465b5fd950c2ca85877033ea"
        ],
        [
            "intros s1 s2 ss sp H.",
            "VernacExtend",
            "576376b9f26258a0e021b54acae009f9cd078652"
        ],
        [
            "unfold pick_lines in H.",
            "VernacExtend",
            "ad86f66bca02ae441bf753727e66bee90e6d6314"
        ],
        [
            "case_eq (exists_witness (fun s : SS.elt => match pick_lines_aux s (SS.remove s ss) sp with | Some _ => true | None => false end) ss).",
            "VernacExtend",
            "489d391982c05984da70a7cb718823693f2f5c87"
        ],
        [
            "intros e1 HEW1.",
            "VernacExtend",
            "2a567fdfa1687036465e1fef611850045d37fc9f"
        ],
        [
            "rewrite HEW1 in H.",
            "VernacExtend",
            "675a71248c7e01878edf2823776d4e708c05ea35"
        ],
        [
            "unfold pick_lines_aux in H.",
            "VernacExtend",
            "208f0ac9a9886cb1abbc88e2dd64a7ec7a9378d4"
        ],
        [
            "case_eq (exists_witness (fun s2 : SS.elt => pick_line (S.inter e1 s2) sp) (SS.remove e1 ss)).",
            "VernacExtend",
            "59241d7ddba44864251c5d5123e75581d4c245c2"
        ],
        [
            "intros e2 HEW2.",
            "VernacExtend",
            "1fc16878958b87d1f6f17c6498177d00d77d2623"
        ],
        [
            "rewrite HEW2 in H.",
            "VernacExtend",
            "eb15a01b423c775fe31cb25516074627e7cc25f3"
        ],
        [
            "assert (HEq1 : e1 = s1) by (injection H; intros; assumption).",
            "VernacExtend",
            "eca0a22fbf0e00fb9e046c8d9e079db5eb02db8d"
        ],
        [
            "rewrite HEq1 in *.",
            "VernacExtend",
            "37c5421f284fa2ad1c4d42b884307839417831b3"
        ],
        [
            "assert (HEq2 : e2 = s2) by (injection H; intros; assumption).",
            "VernacExtend",
            "10cc392df03719c33e189136ddd05b3b090309f3"
        ],
        [
            "rewrite HEq2 in *.",
            "VernacExtend",
            "901b7385eb26cebf2c5c7d2cdf91d7a0df36bf69"
        ],
        [
            "apply exists_witness_ok with (fun s2 : SS.elt => pick_line (S.inter s1 s2) sp).",
            "VernacExtend",
            "4db4f266d2b358383559880a32f824f994209f96"
        ],
        [
            "intros x y HXY.",
            "VernacExtend",
            "d54666da0000fd8bd617b0c87941a7c833808d02"
        ],
        [
            "apply proper_1; assumption.",
            "VernacExtend",
            "0769e46a4af2e2ad3ea97622de5c8d069d48437f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro HEW2.",
            "VernacExtend",
            "d765abbe0b296e489e225764f0cf4941b2608cbc"
        ],
        [
            "rewrite HEW2 in H.",
            "VernacExtend",
            "eb15a01b423c775fe31cb25516074627e7cc25f3"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "intro HEW.",
            "VernacExtend",
            "75beebc8353c6e7b1940af049fb3ad7d4a61baf5"
        ],
        [
            "rewrite HEW in H.",
            "VernacExtend",
            "fac42e5535f2f796d1d2c954dc42cd01dd34d6e7"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Function identify_lines (ss : SS.t) (sp : SP.t) {measure SS.cardinal ss} : SS.t := let lines := pick_lines ss sp in match lines with |None => ss |Some (s1,s2) => let auxsetofsets := SS.remove s2 (SS.remove s1 ss) in let auxset := S.union s1 s2 in let newss := SS.add auxset auxsetofsets in identify_lines newss sp end.",
            "VernacExtend",
            "57124aef0b9bf1a70c3e79dec0092eb2f555b87f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (S(SS.cardinal (SS.remove s1 ss)) = SS.cardinal ss).",
            "VernacExtend",
            "512a8cb70b8cece637bbd9d79fe400a16186bb69"
        ],
        [
            "apply SSWP.remove_cardinal_1.",
            "VernacExtend",
            "d3fb399c6dc800565080f6ddf28445ae3aaf00d7"
        ],
        [
            "apply pick_lines_ok_1 with s2 sp.",
            "VernacExtend",
            "b9afcac71eb6813c7c2971030b8c212ddc53352d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (S(S(SS.cardinal (SS.remove s2 (SS.remove s1 ss)))) = S(SS.cardinal (SS.remove s1 ss))).",
            "VernacExtend",
            "40a70da9bf3a73cb3132dd3b585d310b33ceaa5f"
        ],
        [
            "apply eq_S.",
            "VernacExtend",
            "8ef0b219ea0189c2d80bb55d03c4c9f24beca469"
        ],
        [
            "apply SSWP.remove_cardinal_1.",
            "VernacExtend",
            "d3fb399c6dc800565080f6ddf28445ae3aaf00d7"
        ],
        [
            "apply pick_lines_ok_2 with sp.",
            "VernacExtend",
            "1873bdf4dacf4a441f143b797d0892d432d14389"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (HR1 : S(S(SS.cardinal (SS.remove s2 (SS.remove s1 ss)))) = SS.cardinal ss).",
            "VernacExtend",
            "6ddf214d5df1f14c80b31dd5baefeb6a786b1217"
        ],
        [
            "transitivity (S(SS.cardinal (SS.remove s1 ss))); assumption.",
            "VernacExtend",
            "2c3fb6bc531e6d3df65b59af87dca82ccbd4e91a"
        ],
        [
            "elim (SSWP.In_dec (S.union s1 s2) (SS.remove s2 (SS.remove s1 ss))); intro HDec.",
            "VernacExtend",
            "8dddb5e44aea6caead8ae3d15ef4e3e31ff0e627"
        ],
        [
            "assert (HR2 : SS.cardinal (SS.add (S.union s1 s2) (SS.remove s2 (SS.remove s1 ss))) = SS.cardinal (SS.remove s2 (SS.remove s1 ss))).",
            "VernacExtend",
            "2f285606a5b6ca7472c026ea2fc71ae84a1d84a0"
        ],
        [
            "apply SSWP.add_cardinal_1; assumption.",
            "VernacExtend",
            "bd051711223beec788d3db4fda21c45f77e8d292"
        ],
        [
            "rewrite HR2.",
            "VernacExtend",
            "ffdd15b9ffd74def816cfaea7dddac1b290743a8"
        ],
        [
            "rewrite <- HR1.",
            "VernacExtend",
            "162c9dc20d9b6d43afcfffae0c8dbb00d1133297"
        ],
        [
            "apply le_S;apply le_n.",
            "VernacExtend",
            "f668231be5e47dbadfd8dc6d21bc7e5b062fec36"
        ],
        [
            "assert (HR2 : SS.cardinal (SS.add (S.union s1 s2) (SS.remove s2 (SS.remove s1 ss))) = S( SS.cardinal (SS.remove s2 (SS.remove s1 ss)))).",
            "VernacExtend",
            "06136665d964e4e3a8e9a3af54334d9d88538572"
        ],
        [
            "apply SSWP.add_cardinal_2; assumption.",
            "VernacExtend",
            "c2d31a8fa4a1b4dcda0b34809325584a05256433"
        ],
        [
            "rewrite HR2.",
            "VernacExtend",
            "ffdd15b9ffd74def816cfaea7dddac1b290743a8"
        ],
        [
            "rewrite <- HR1.",
            "VernacExtend",
            "162c9dc20d9b6d43afcfffae0c8dbb00d1133297"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition test_col (ss : SS.t) (sp : SP.t) p1 p2 p3 : bool := let newss := identify_lines ss sp in SS.exists_ (fun s => S.mem p1 s && S.mem p2 s && S.mem p3 s) newss.",
            "VernacDefinition",
            "07f704dc543e167e4c2733109fc6086b9e26268c"
        ],
        [
            "Section Col_refl.",
            "VernacBeginSection",
            "50ef2b1d982ef6aa166c5dce0fd2a9315953a1f0"
        ],
        [
            "Context `{CT:Col_theory}.",
            "VernacContext",
            "6734886508f51b57d035a91dbf14a812ed490abd"
        ],
        [
            "Lemma CTcol_permutation_5 : forall A B C : COLTpoint, CTCol A B C -> CTCol A C B.",
            "VernacStartTheoremProof",
            "85cf7594355658cf6a94d4aaa93c68a1efe365f9"
        ],
        [
            "apply CTcol_permutation_2.",
            "VernacExtend",
            "a6c316221adf98f0bd6a61bb28b8527820467611"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CTcol_permutation_2 : forall A B C : COLTpoint, CTCol A B C -> CTCol C A B.",
            "VernacStartTheoremProof",
            "c4e04a4533f081d8567579c5f87def63b657cbdb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply CTcol_permutation_1.",
            "VernacExtend",
            "5c5937a25dadf4d721b21a2beddcd98968b43d57"
        ],
        [
            "apply CTcol_permutation_1.",
            "VernacExtend",
            "5c5937a25dadf4d721b21a2beddcd98968b43d57"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CTcol_permutation_3 : forall A B C : COLTpoint, CTCol A B C -> CTCol C B A.",
            "VernacStartTheoremProof",
            "9db36acb21457dd498b9e649cd128a534410b1de"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply CTcol_permutation_5.",
            "VernacExtend",
            "f60704dbed680ac52c9c7a9ad0020e49d0e382b2"
        ],
        [
            "apply CTcol_permutation_2.",
            "VernacExtend",
            "a6c316221adf98f0bd6a61bb28b8527820467611"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CTcol_permutation_4 : forall A B C : COLTpoint, CTCol A B C -> CTCol B A C.",
            "VernacStartTheoremProof",
            "190835b43c40bb9c8151817a8d24193355ee063f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply CTcol_permutation_5.",
            "VernacExtend",
            "f60704dbed680ac52c9c7a9ad0020e49d0e382b2"
        ],
        [
            "apply CTcol_permutation_1.",
            "VernacExtend",
            "5c5937a25dadf4d721b21a2beddcd98968b43d57"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CTcol_trivial_1 : forall A B : COLTpoint, CTCol A A B.",
            "VernacStartTheoremProof",
            "c8d9b73efe73ade5ece83f517f99be779928ce50"
        ],
        [
            "apply CTcol_trivial.",
            "VernacExtend",
            "5c24648afbd9f3f61d4a1faf1719078d16f102c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CTcol_trivial_2 : forall A B : COLTpoint, CTCol A B B.",
            "VernacStartTheoremProof",
            "bd0809a550d17d30d99722e521eed995a3d477a2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply CTcol_permutation_2.",
            "VernacExtend",
            "a6c316221adf98f0bd6a61bb28b8527820467611"
        ],
        [
            "apply CTcol_trivial_1.",
            "VernacExtend",
            "1e54140daadb2e90cdbb1c8da62cdf86a6d9f28d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ss_ok (ss : SS.t) (interp: positive -> COLTpoint) := forall s, SS.mem s ss = true -> forall p1 p2 p3, S.mem p1 s && S.mem p2 s && S.mem p3 s = true -> CTCol (interp p1) (interp p2) (interp p3).",
            "VernacDefinition",
            "67f5ae928ecae7e8b0ffe1607cedd3b7fbdb4df0"
        ],
        [
            "Definition sp_ok (sp : SP.t) (interp: positive -> COLTpoint) := forall p, SP.mem p sp = true -> interp (fstpp p) <> interp (sndpp p).",
            "VernacDefinition",
            "077d99f0111527abe41afacd6a3bd3e9a80ac5fc"
        ],
        [
            "Lemma identify_lines_ok : forall ss sp interp, ss_ok ss interp -> sp_ok sp interp -> ss_ok (identify_lines ss sp) interp.",
            "VernacStartTheoremProof",
            "5d298fa68ada6f56e654bc9dbbfcf2dba0b39001"
        ],
        [
            "intros ss sp interp HSS HSP.",
            "VernacExtend",
            "7a38e58622d287cb1227cbd5ba9c7a423c05806e"
        ],
        [
            "apply (let P interp ss sp newss := ss_ok ss interp -> sp_ok sp interp -> ss_ok newss interp in identify_lines_ind (P interp)); try assumption.",
            "VernacExtend",
            "2e67bb3871b4c4775aca9a013418bc733d06447a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "clear HSS; clear HSP; clear ss; clear sp.",
            "VernacExtend",
            "169060500e81e21fc5addd566be3d3f49486d57d"
        ],
        [
            "intros ss sp suitablepairofsets s1 s2 Hs1s2 auxsetofsets auxset newss H HSS HSP.",
            "VernacExtend",
            "0b65b180a9b30af5ceaba6d5c55667aeaeb0e964"
        ],
        [
            "assert (Hs1 := Hs1s2).",
            "VernacExtend",
            "1d076d52efd1bda2306d2b1f7185f7c789b68ff9"
        ],
        [
            "assert (Hs2 := Hs1s2).",
            "VernacExtend",
            "c0f3eb5889fb11059657441feda89d7e37be0f22"
        ],
        [
            "apply pick_lines_ok_1 in Hs1.",
            "VernacExtend",
            "59b0b5b97f0b3590f09e0a9cc92f5faf8109f5b1"
        ],
        [
            "apply pick_lines_ok_2 in Hs2.",
            "VernacExtend",
            "30744e65514b1b6d0a2163513ece444738540387"
        ],
        [
            "apply SSWEqP.MP.Dec.F.remove_3 in Hs2.",
            "VernacExtend",
            "3985d9154a90d7757821032512480f524c36a6d5"
        ],
        [
            "apply H; try assumption; clear H.",
            "VernacExtend",
            "a7ec549376a2150d1b6ea67dee838f43a974bac6"
        ],
        [
            "intros s Hmem p1 p2 p3 Hmemp.",
            "VernacExtend",
            "a034ccea1d7dc1274ea0ad1cb472f15956ad234e"
        ],
        [
            "do 2 (rewrite andb_true_iff in Hmemp).",
            "VernacExtend",
            "25c77afdbaa7aa858b928176572ec2bd941a54d2"
        ],
        [
            "destruct Hmemp as [[Hmemp1 Hmemp2] Hmemp3].",
            "VernacExtend",
            "a5e14155e1f607aab45a27840756a3bff44393e0"
        ],
        [
            "unfold newss in Hmem; clear newss.",
            "VernacExtend",
            "b36b9e0370bb94dd1f2ca5cc3402954aab4d6686"
        ],
        [
            "elim (SS.E.eq_dec auxset s); intro HEq.",
            "VernacExtend",
            "b2c761d42425bed6131f9d60eabfe8ba3958a43f"
        ],
        [
            "rewrite <- HEq in *; clear HEq; clear s.",
            "VernacExtend",
            "790b35bcb6548f81362fe541dd8ff18303f04ea4"
        ],
        [
            "unfold suitablepairofsets in Hs1s2; clear suitablepairofsets.",
            "VernacExtend",
            "c3df149f0c0dcaa54e197dbf77c9fb8b52477f4b"
        ],
        [
            "unfold pick_lines in Hs1s2.",
            "VernacExtend",
            "6323cb5a6da8c9f750a02b0b676d910e2ffafd53"
        ],
        [
            "case_eq (exists_witness (fun s : SS.elt => match pick_lines_aux s (SS.remove s ss) sp with | Some _ => true | None => false end) ss); try (intro HEW; rewrite HEW in *; discriminate).",
            "VernacExtend",
            "f56a989bc3d15729e40b31d8933a1788ca3c4f38"
        ],
        [
            "intros e1 HEW; rewrite HEW in *; clear HEW.",
            "VernacExtend",
            "3671673a853db03ae6104b5472244a9ac1b5428e"
        ],
        [
            "unfold pick_lines_aux in *.",
            "VernacExtend",
            "48bef9d0960d2423e0e641a6edf1506fab5d5dcf"
        ],
        [
            "case_eq (exists_witness (fun s2 : SS.elt => pick_line (S.inter e1 s2) sp) (SS.remove e1 ss)); try (intro HEW; rewrite HEW in *; discriminate).",
            "VernacExtend",
            "41b261ad866c5e31b7e499eea50315c9cd868cd9"
        ],
        [
            "intros e2 HEW; rewrite HEW in *.",
            "VernacExtend",
            "47be0ca085b3027620cbf091b5fec956f599a204"
        ],
        [
            "injection Hs1s2; intros He2s2 He1s1.",
            "VernacExtend",
            "01d70efc2a12e414c6d05cf09dc847427b726603"
        ],
        [
            "rewrite He2s2 in *; rewrite He1s1 in *; clear He2s2; clear He1s1; clear Hs1s2; clear e2; clear e1.",
            "VernacExtend",
            "c9eaffffd66a902b494837fcc475e003ef42cced"
        ],
        [
            "case_eq (pick_line (S.inter s1 s2) sp).",
            "VernacExtend",
            "aad4a904613a6f8b08b527648bdea2ba16cd74f8"
        ],
        [
            "clear HEW; intro HEW.",
            "VernacExtend",
            "4f60ba4d217be0dfefacfe1a21742d9df52cd035"
        ],
        [
            "unfold pick_line in HEW.",
            "VernacExtend",
            "d8866680e856c148af334d08c6985c569b2eec5e"
        ],
        [
            "apply SPWEqP.exists_mem_4 in HEW; try (apply proper_00).",
            "VernacExtend",
            "ded8789f522316222a96bf819a6076a33a213530"
        ],
        [
            "destruct HEW as [x [HmemSP HmemS]].",
            "VernacExtend",
            "7b43f0819d6d6c2ab24c1bdb401cfffcbe755987"
        ],
        [
            "rewrite andb_true_iff in HmemS; destruct HmemS as [Hmemfsts Hmemsnds].",
            "VernacExtend",
            "cd17fcc02638fa7d2a594292614cc74203ee3362"
        ],
        [
            "apply HSP in HmemSP.",
            "VernacExtend",
            "aa5cc6bccdbb265dc9d69bf798e352de26e07b53"
        ],
        [
            "apply SWP.Dec.F.mem_2 in Hmemfsts.",
            "VernacExtend",
            "39d111ac32c61b57d39373bb8160f4509523844e"
        ],
        [
            "apply S.inter_spec in Hmemfsts.",
            "VernacExtend",
            "7d035e8c5a44a77e818f3c6440c4afe176485bfa"
        ],
        [
            "destruct Hmemfsts as [Hfss1 Hfss2].",
            "VernacExtend",
            "24e0e96692d1f018e8d87f4b196102adf1702779"
        ],
        [
            "apply SWP.Dec.F.mem_2 in Hmemsnds.",
            "VernacExtend",
            "12a121dd946087201782174801dfd4135b513c55"
        ],
        [
            "apply S.inter_spec in Hmemsnds.",
            "VernacExtend",
            "c288022f911bf3959fbf45d57cf3c9fe38688ae9"
        ],
        [
            "destruct Hmemsnds as [Hsss1 Hsss2].",
            "VernacExtend",
            "3a95e59d7fac1e2d4f98148a052fef5595907b04"
        ],
        [
            "unfold auxset in *.",
            "VernacExtend",
            "9deb312f7c053e8bbfd0d0476880f2302f133ad1"
        ],
        [
            "apply CTcol3 with (interp (fstpp(x))) (interp (sndpp(x))); try assumption.",
            "VernacExtend",
            "b34497e5c325660d171cc5915dd17f274ee76ce5"
        ],
        [
            "apply SWP.Dec.F.mem_2 in Hmemp1.",
            "VernacExtend",
            "d5621ca8f81aaac80e2c3f4f03686d14e8a07a68"
        ],
        [
            "apply SWP.Dec.F.union_1 in Hmemp1.",
            "VernacExtend",
            "9b054ee57555f862440c1f5b3bb0ed6f31365774"
        ],
        [
            "elim (Hmemp1); intro HInp1.",
            "VernacExtend",
            "735d17cb3847895ee04a8cdf0b61b40bd8e56ae3"
        ],
        [
            "apply HSS with s1.",
            "VernacExtend",
            "aa0747b1801e7a73790ced9227704535f66d98d4"
        ],
        [
            "apply SSWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "18102d051746f18971220fc3f43b28d1e794104d"
        ],
        [
            "do 2 (rewrite andb_true_iff).",
            "VernacExtend",
            "6f40f827a55f5eb0822d63ebf783f716e085882e"
        ],
        [
            "repeat split; apply SWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1f478a0ffad66403f5347354bf87977a77d1ddb1"
        ],
        [
            "apply HSS with s2.",
            "VernacExtend",
            "55683a937a5a9e72b862249e7d63c324edc21df7"
        ],
        [
            "apply SSWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "18102d051746f18971220fc3f43b28d1e794104d"
        ],
        [
            "do 2 (rewrite andb_true_iff).",
            "VernacExtend",
            "6f40f827a55f5eb0822d63ebf783f716e085882e"
        ],
        [
            "repeat split; apply SWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1f478a0ffad66403f5347354bf87977a77d1ddb1"
        ],
        [
            "apply SWP.Dec.F.mem_2 in Hmemp2.",
            "VernacExtend",
            "582a42384e404cd201bc3dcf0fbe2299e8b8ce86"
        ],
        [
            "apply SWP.Dec.F.union_1 in Hmemp2.",
            "VernacExtend",
            "2ab21760fe5ed2a7d82d241d953f79c4f29899ab"
        ],
        [
            "elim (Hmemp2); intro HInp2.",
            "VernacExtend",
            "1e3cc986b151b641b6d360075b11eb103ffdb26d"
        ],
        [
            "apply HSS with s1.",
            "VernacExtend",
            "aa0747b1801e7a73790ced9227704535f66d98d4"
        ],
        [
            "apply SSWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "18102d051746f18971220fc3f43b28d1e794104d"
        ],
        [
            "do 2 (rewrite andb_true_iff).",
            "VernacExtend",
            "6f40f827a55f5eb0822d63ebf783f716e085882e"
        ],
        [
            "repeat split; apply SWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1f478a0ffad66403f5347354bf87977a77d1ddb1"
        ],
        [
            "apply HSS with s2.",
            "VernacExtend",
            "55683a937a5a9e72b862249e7d63c324edc21df7"
        ],
        [
            "apply SSWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "18102d051746f18971220fc3f43b28d1e794104d"
        ],
        [
            "do 2 (rewrite andb_true_iff).",
            "VernacExtend",
            "6f40f827a55f5eb0822d63ebf783f716e085882e"
        ],
        [
            "repeat split; apply SWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1f478a0ffad66403f5347354bf87977a77d1ddb1"
        ],
        [
            "apply SWP.Dec.F.mem_2 in Hmemp3.",
            "VernacExtend",
            "962c5a272956e475f9613413df9729794d3643f9"
        ],
        [
            "apply SWP.Dec.F.union_1 in Hmemp3.",
            "VernacExtend",
            "5b51ca3e35edbbb4992ad3dd6f563eb71e3d2a7f"
        ],
        [
            "elim (Hmemp3); intro HInp3.",
            "VernacExtend",
            "7af26c5b182c2bade46e72c8ac75ce766dc7bc50"
        ],
        [
            "apply HSS with s1.",
            "VernacExtend",
            "aa0747b1801e7a73790ced9227704535f66d98d4"
        ],
        [
            "apply SSWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "18102d051746f18971220fc3f43b28d1e794104d"
        ],
        [
            "do 2 (rewrite andb_true_iff).",
            "VernacExtend",
            "6f40f827a55f5eb0822d63ebf783f716e085882e"
        ],
        [
            "repeat split; apply SWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1f478a0ffad66403f5347354bf87977a77d1ddb1"
        ],
        [
            "apply HSS with s2.",
            "VernacExtend",
            "55683a937a5a9e72b862249e7d63c324edc21df7"
        ],
        [
            "apply SSWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "18102d051746f18971220fc3f43b28d1e794104d"
        ],
        [
            "do 2 (rewrite andb_true_iff).",
            "VernacExtend",
            "6f40f827a55f5eb0822d63ebf783f716e085882e"
        ],
        [
            "repeat split; apply SWP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1f478a0ffad66403f5347354bf87977a77d1ddb1"
        ],
        [
            "intro HEW2; unfold exists_witness in *; apply SS.choose_spec1 in HEW.",
            "VernacExtend",
            "9f01c140321c5a5428f83a46f45f2110c6b12faf"
        ],
        [
            "apply SSWEqP.MP.Dec.F.filter_2 in HEW; try apply proper_1.",
            "VernacExtend",
            "aeb74612cff293b177182ba4c28f09cbeb1e9258"
        ],
        [
            "rewrite HEW2 in *; discriminate.",
            "VernacExtend",
            "8faefd49d2b473b32298731166ef1a6f84e2dba4"
        ],
        [
            "rewrite SSWP.Dec.F.add_neq_b in Hmem; try assumption.",
            "VernacExtend",
            "abdc2fe773563f21bf6c4c23c98ddd627dee9b1d"
        ],
        [
            "apply HSS with s.",
            "VernacExtend",
            "1b3a35f0918adfc81aa20767006923cabcbfd0c5"
        ],
        [
            "unfold auxsetofsets in *.",
            "VernacExtend",
            "bca999ab88df92629ac7e40a7beacbdf85adf2b3"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_2 in Hmem.",
            "VernacExtend",
            "4ea1c0bf685aa2b8dedb99d475f45de4b5496a5a"
        ],
        [
            "do 2 (apply SSWEqP.MP.Dec.F.remove_3 in Hmem).",
            "VernacExtend",
            "a2d63db9c289f4a45d0f5717fdbf31327a76ac92"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1.",
            "VernacExtend",
            "fb831ce8c5315b134cfbeda745acfebb053443cf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "do 2 (rewrite andb_true_iff).",
            "VernacExtend",
            "6f40f827a55f5eb0822d63ebf783f716e085882e"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma test_col_ok : forall ss sp interp p1 p2 p3, ss_ok ss interp -> sp_ok sp interp -> test_col ss sp p1 p2 p3 = true -> CTCol (interp p1) (interp p2) (interp p3).",
            "VernacStartTheoremProof",
            "ebe57b8744dd0374b706316a715c51a89397b8ae"
        ],
        [
            "intros ss sp interp p1 p2 p3 HSS HSP HTC.",
            "VernacExtend",
            "1ab045377a19f3c9b4a0782c0849a4ea33d88d6d"
        ],
        [
            "unfold test_col in *.",
            "VernacExtend",
            "6ea4d2dbdbda98c488393e154d2b680071154cce"
        ],
        [
            "assert (HSS2 : ss_ok (identify_lines ss sp) interp) by (apply identify_lines_ok; assumption).",
            "VernacExtend",
            "b6e25d9ba95cc16b405df1fa2ea1b9106cc1bd10"
        ],
        [
            "unfold ss_ok in HSS2.",
            "VernacExtend",
            "204a6dd5fd023bd6313de89aeae9a30eddd0053e"
        ],
        [
            "apply SSWEqP.MP.Dec.F.exists_2 in HTC.",
            "VernacExtend",
            "cd006ef68fda57ea980ba7098b94a726e0ade89f"
        ],
        [
            "unfold SS.Exists in HTC.",
            "VernacExtend",
            "ec920acf4d8cbbe710154d4e05e47f9343108f43"
        ],
        [
            "destruct HTC as [s [HIn Hmem]].",
            "VernacExtend",
            "4a7b50894af394d75d0e271f4fd78848280d916b"
        ],
        [
            "apply HSS2 with s.",
            "VernacExtend",
            "bd88746dbf37c30a3c64f49e6c0b46aafef16cfe"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1.",
            "VernacExtend",
            "fb831ce8c5315b134cfbeda745acfebb053443cf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros x y Hxy.",
            "VernacExtend",
            "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
        ],
        [
            "assert (HmemEq : forall p, S.mem p x = S.mem p y) by (intro; apply SWP.Dec.F.mem_m; auto).",
            "VernacExtend",
            "9abeca18e7c036ef8bd16107b7100978a4125500"
        ],
        [
            "do 3 (rewrite HmemEq); reflexivity.",
            "VernacExtend",
            "b60cb983e08e36ecfa3385b6d543ea62ded305e2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ss_ok_empty : forall interp, ss_ok SS.empty interp.",
            "VernacStartTheoremProof",
            "f148356eaeac53f23f4b44a45831245bd5bc7698"
        ],
        [
            "intros interp ss Hmem1 p1 p2 p3 Hmem2.",
            "VernacExtend",
            "1d778cce35526f66a90cdd36783efa8044c70a64"
        ],
        [
            "rewrite SSWEqP.MP.Dec.F.empty_b in Hmem1.",
            "VernacExtend",
            "3bd4795da9e066cda7bb69aa70d0e37fac66b0e2"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sp_ok_empty : forall interp, sp_ok SP.empty interp.",
            "VernacStartTheoremProof",
            "4d724ed8afe9a8518b6ec5ce782fa9f27528b44b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sp_ok.",
            "VernacExtend",
            "4064042813c4c530bb8bbcca6ae9cdc475e09611"
        ],
        [
            "intros p Hp.",
            "VernacExtend",
            "cf737bd4e185c03175335af1ca6ae52da34cba56"
        ],
        [
            "rewrite SPWEqP.MP.Dec.F.empty_b in Hp.",
            "VernacExtend",
            "1b5b8fb11b2c2881e7c456d0790c87fb7aff7e46"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma collect_cols : forall (A B C : COLTpoint) (HCol : CTCol A B C) pa pb pc ss (interp : positive -> COLTpoint), interp pa = A -> interp pb = B -> interp pc = C -> ss_ok ss interp -> ss_ok (SS.add (S.add pa (S.add pb (S.add pc S.empty))) ss) interp.",
            "VernacStartTheoremProof",
            "6885c6c6adbbdc1e39d44fc2d0ac11fa1a076e75"
        ],
        [
            "intros A B C HCol pa pb pc ss interp HA HB HC HSS.",
            "VernacExtend",
            "3fcbbda1e1d31295c2d5c2aa4983971fd78ad184"
        ],
        [
            "unfold ss_ok.",
            "VernacExtend",
            "8b3f387759ffd21aaf87d3780206a5d7e605ad5e"
        ],
        [
            "intros s Hs.",
            "VernacExtend",
            "260fb9c070371bcc61b105a76ad6e9ca0d4ab0f1"
        ],
        [
            "intros p1 p2 p3 Hmem.",
            "VernacExtend",
            "18f8858ba22ddb49d0aba0d690d589bd2261e548"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_2 in Hs.",
            "VernacExtend",
            "05db75943d6076f2dff931feaee57239262da7b2"
        ],
        [
            "apply SSWEqP.MP.Dec.F.add_iff in Hs.",
            "VernacExtend",
            "366b613f20a3f563268332c002057f2598446c57"
        ],
        [
            "do 2 (rewrite andb_true_iff in Hmem).",
            "VernacExtend",
            "85fd40b998255f672b7ab6f5d0ea243e72e40b8e"
        ],
        [
            "destruct Hmem as [[Hmem1 Hmem2] Hmem3].",
            "VernacExtend",
            "a6b64fa74bddd4fd3f54330e2734a52da55f2508"
        ],
        [
            "elim Hs; intro HsE.",
            "VernacExtend",
            "406e4fcf31456b631df9b6c491907766392fb61e"
        ],
        [
            "assert (HmemR : forall p, S.mem p (S.add pa (S.add pb (S.add pc S.empty))) = S.mem p s) by (intros; apply SWP.Dec.F.mem_m; auto).",
            "VernacExtend",
            "19762c510037f75e8f4009f40413c29eb42c24fa"
        ],
        [
            "rewrite <- HmemR in Hmem1.",
            "VernacExtend",
            "89e1b8afcef5d11d64c94f792080ebea1b04f391"
        ],
        [
            "rewrite <- HmemR in Hmem2.",
            "VernacExtend",
            "15a5969330e39ba9bc9f47f0cb3b9d379fae8713"
        ],
        [
            "rewrite <- HmemR in Hmem3.",
            "VernacExtend",
            "4245e57be44ce285e1bdd9cb28429ac79cfc3da6"
        ],
        [
            "clear HmemR.",
            "VernacExtend",
            "10db05c8ad87c622918c11280c9d4d61f010ae25"
        ],
        [
            "elim (Pos.eq_dec pa p1); intro Hpap1.",
            "VernacExtend",
            "79fd953469953454cdf555f141f878e0b9c85a06"
        ],
        [
            "rewrite Hpap1 in *; rewrite HA.",
            "VernacExtend",
            "ad30d48eeef1b90ad6cf54389fc9b3815e930772"
        ],
        [
            "elim (Pos.eq_dec p1 p2); intro Hp1p2.",
            "VernacExtend",
            "280c20f0d3cfb550acb69ecce48ac1c9cf2467be"
        ],
        [
            "rewrite Hp1p2 in *; rewrite HA.",
            "VernacExtend",
            "bf65f728012d4e2e21d54849903f975199dbb1d6"
        ],
        [
            "apply CTcol_trivial_1.",
            "VernacExtend",
            "1e54140daadb2e90cdbb1c8da62cdf86a6d9f28d"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
            "VernacExtend",
            "6b936e427488a7be4b3501b586bf7a778934fb1d"
        ],
        [
            "elim (Pos.eq_dec pb p2); intro Hpbp2.",
            "VernacExtend",
            "942019b93e6c653f2e560299adaad2aac9f89ac1"
        ],
        [
            "rewrite Hpbp2 in *; rewrite HB.",
            "VernacExtend",
            "60928c03ed48a3d3636a5c72beb1b59c33f95c2a"
        ],
        [
            "elim (Pos.eq_dec p3 p1); intro Hp3p1; elim (Pos.eq_dec p3 p2); intro Hp3p2.",
            "VernacExtend",
            "8b56b7ad171896b74ac968f7dced3042e7bbc062"
        ],
        [
            "rewrite Hp3p2; rewrite HB; apply CTcol_trivial_2.",
            "VernacExtend",
            "06f2031f9561771560421e060d19388ed96c42a1"
        ],
        [
            "rewrite Hp3p1; rewrite HA; apply CTcol_permutation_1; apply CTcol_trivial_1.",
            "VernacExtend",
            "86f6b3f80b64ab0523d449ef1e6684e5b3ee4888"
        ],
        [
            "rewrite Hp3p2; rewrite HB; apply CTcol_trivial_2.",
            "VernacExtend",
            "06f2031f9561771560421e060d19388ed96c42a1"
        ],
        [
            "do 2 (rewrite SWP.Dec.F.add_neq_b in Hmem3).",
            "VernacExtend",
            "2ef2416ece8a76088919fceb3a91336ea8fc1c7c"
        ],
        [
            "rewrite <- SWP.singleton_equal_add in Hmem3.",
            "VernacExtend",
            "af8a00f660f5c2b429b102df1603652767a54b3d"
        ],
        [
            "apply SWP.Dec.F.mem_iff in Hmem3.",
            "VernacExtend",
            "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
        ],
        [
            "apply SWP.Dec.F.singleton_1 in Hmem3.",
            "VernacExtend",
            "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
        ],
        [
            "rewrite <- Hmem3; rewrite HC; assumption.",
            "VernacExtend",
            "33e5248da499bc0f08af2293d7e6d15ddd719ea5"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
            "VernacExtend",
            "6b936e427488a7be4b3501b586bf7a778934fb1d"
        ],
        [
            "rewrite <- SWP.singleton_equal_add in Hmem2.",
            "VernacExtend",
            "e29dea6abb2de31ec702adbe3b7d079f2122970d"
        ],
        [
            "apply SWP.Dec.F.mem_iff in Hmem2.",
            "VernacExtend",
            "6e5cd9999a6542cf114e539307682213f16aa35e"
        ],
        [
            "apply SWP.Dec.F.singleton_1 in Hmem2.",
            "VernacExtend",
            "3835215b03038a32acffa3d2be1c36e6fcccb8d6"
        ],
        [
            "rewrite <- Hmem2 in *; rewrite HC.",
            "VernacExtend",
            "7dd17fd2d824f8cf5c649b433ffe77d58bbb7f6e"
        ],
        [
            "elim (Pos.eq_dec p3 p1); intro Hp3p1; elim (Pos.eq_dec p3 p2); intro Hp3p2.",
            "VernacExtend",
            "8b56b7ad171896b74ac968f7dced3042e7bbc062"
        ],
        [
            "rewrite Hp3p2 in *; rewrite Hmem2 in *; rewrite HC; apply CTcol_trivial_2.",
            "VernacExtend",
            "f83664d8ec6c09df33aae02f2653f705fada94f4"
        ],
        [
            "rewrite Hp3p1 in *; rewrite HA; apply CTcol_permutation_1; apply CTcol_trivial_1.",
            "VernacExtend",
            "b652364a101ac07a6c4d5f048301871c6204e1f2"
        ],
        [
            "rewrite Hp3p2 in *; rewrite Hmem2 in *; rewrite HC; apply CTcol_trivial_2.",
            "VernacExtend",
            "f83664d8ec6c09df33aae02f2653f705fada94f4"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem3.",
            "VernacExtend",
            "06805e495c0f24b0e17c674cac7b300a4ef5fe5a"
        ],
        [
            "elim (Pos.eq_dec p3 pb); intro Hp3pb.",
            "VernacExtend",
            "1b8b520d66e70176f4fee2af6f9940c19e5a5f3d"
        ],
        [
            "rewrite Hp3pb in *; rewrite HB; apply CTcol_permutation_5; assumption.",
            "VernacExtend",
            "d7b93c0ee184f364b4bf404c2b412ce4b56e9233"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem3.",
            "VernacExtend",
            "06805e495c0f24b0e17c674cac7b300a4ef5fe5a"
        ],
        [
            "rewrite <- SWP.singleton_equal_add in Hmem3.",
            "VernacExtend",
            "af8a00f660f5c2b429b102df1603652767a54b3d"
        ],
        [
            "apply SWP.Dec.F.mem_iff in Hmem3.",
            "VernacExtend",
            "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
        ],
        [
            "apply SWP.Dec.F.singleton_1 in Hmem3.",
            "VernacExtend",
            "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
        ],
        [
            "rewrite Hmem3 in *; contradiction.",
            "VernacExtend",
            "8cdef52ada3b8b50b356710758863247279a3d21"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem1.",
            "VernacExtend",
            "ee0b8cd80620e7940a2d1a48dfbfa20a290a6fdc"
        ],
        [
            "elim (Pos.eq_dec p1 pb); intro Hp1pb.",
            "VernacExtend",
            "3348647545180dbdd65a1d4614b6f39cf3bf819b"
        ],
        [
            "rewrite Hp1pb in *; rewrite HB.",
            "VernacExtend",
            "1149d295288a05303f83fa8b898f4e14b1b0209d"
        ],
        [
            "elim (Pos.eq_dec pa p2); intro Hpap2.",
            "VernacExtend",
            "4a3162ae4a6709f02345f924a2516a07cde8326d"
        ],
        [
            "rewrite Hpap2 in *; rewrite HA.",
            "VernacExtend",
            "1eaac515c23092f3c635db0d86fd116dabe99dab"
        ],
        [
            "elim (Pos.eq_dec p3 p2); intro Hp3p2; elim (Pos.eq_dec p3 pb); intro Hp3pb.",
            "VernacExtend",
            "574bee072988c93e849178d53605244871d8dc7f"
        ],
        [
            "rewrite Hp3pb; rewrite HB; apply CTcol_permutation_1; apply CTcol_trivial_1.",
            "VernacExtend",
            "37f8c58899f2ce9fe9cbc95354bf0911e963e5ba"
        ],
        [
            "rewrite Hp3p2; rewrite HA; apply CTcol_trivial_2.",
            "VernacExtend",
            "06e492bd27e84f7685384905355020ea25a69ce3"
        ],
        [
            "rewrite Hp3pb; rewrite HB; apply CTcol_permutation_1; apply CTcol_trivial_1.",
            "VernacExtend",
            "37f8c58899f2ce9fe9cbc95354bf0911e963e5ba"
        ],
        [
            "do 2 (rewrite SWP.Dec.F.add_neq_b in Hmem3).",
            "VernacExtend",
            "2ef2416ece8a76088919fceb3a91336ea8fc1c7c"
        ],
        [
            "rewrite <- SWP.singleton_equal_add in Hmem3.",
            "VernacExtend",
            "af8a00f660f5c2b429b102df1603652767a54b3d"
        ],
        [
            "apply SWP.Dec.F.mem_iff in Hmem3.",
            "VernacExtend",
            "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
        ],
        [
            "apply SWP.Dec.F.singleton_1 in Hmem3.",
            "VernacExtend",
            "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
        ],
        [
            "rewrite <- Hmem3; rewrite HC; apply CTcol_permutation_4; assumption.",
            "VernacExtend",
            "3056c5b5fe01af3c0706c41998b926b728a1900e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
            "VernacExtend",
            "6b936e427488a7be4b3501b586bf7a778934fb1d"
        ],
        [
            "elim (Pos.eq_dec p2 pb); intro Hp2pb.",
            "VernacExtend",
            "0469e0038ee7b756efa9ee67b4894de1d0ad55e6"
        ],
        [
            "rewrite Hp2pb; rewrite HB; apply CTcol_trivial_1.",
            "VernacExtend",
            "1e6aa65283d432a64bfa217f835b18de6b50bf18"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
            "VernacExtend",
            "6b936e427488a7be4b3501b586bf7a778934fb1d"
        ],
        [
            "rewrite <- SWP.singleton_equal_add in Hmem2.",
            "VernacExtend",
            "e29dea6abb2de31ec702adbe3b7d079f2122970d"
        ],
        [
            "apply SWP.Dec.F.mem_iff in Hmem2.",
            "VernacExtend",
            "6e5cd9999a6542cf114e539307682213f16aa35e"
        ],
        [
            "apply SWP.Dec.F.singleton_1 in Hmem2.",
            "VernacExtend",
            "3835215b03038a32acffa3d2be1c36e6fcccb8d6"
        ],
        [
            "rewrite <- Hmem2 in *; rewrite HC.",
            "VernacExtend",
            "7dd17fd2d824f8cf5c649b433ffe77d58bbb7f6e"
        ],
        [
            "elim (Pos.eq_dec p3 p1); intro Hp3p1; elim (Pos.eq_dec p3 p2); intro Hp3p2.",
            "VernacExtend",
            "8b56b7ad171896b74ac968f7dced3042e7bbc062"
        ],
        [
            "rewrite Hp3p2 in *; rewrite Hmem2 in *; rewrite HC; apply CTcol_trivial_2.",
            "VernacExtend",
            "f83664d8ec6c09df33aae02f2653f705fada94f4"
        ],
        [
            "rewrite Hp3p1 in *; rewrite Hp1pb; rewrite HB; apply CTcol_permutation_1; apply CTcol_trivial_1.",
            "VernacExtend",
            "2dcd806268241c72e97405f5d2dc7b5729a1b7c8"
        ],
        [
            "rewrite Hp3p2 in *; rewrite Hmem2 in *; rewrite HC; apply CTcol_trivial_2.",
            "VernacExtend",
            "f83664d8ec6c09df33aae02f2653f705fada94f4"
        ],
        [
            "elim (Pos.eq_dec p3 pa); intro Hp3pa.",
            "VernacExtend",
            "4b918b8a82f89dc7cef3fdcdd30d7b13787f45a7"
        ],
        [
            "rewrite Hp3pa; rewrite HA; apply CTcol_permutation_1; assumption.",
            "VernacExtend",
            "6022749e950fd6dd3b3ebf0fc876258767f70553"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem3.",
            "VernacExtend",
            "06805e495c0f24b0e17c674cac7b300a4ef5fe5a"
        ],
        [
            "elim (Pos.eq_dec p3 pb); intro Hp3pb.",
            "VernacExtend",
            "1b8b520d66e70176f4fee2af6f9940c19e5a5f3d"
        ],
        [
            "rewrite Hp3pb in *; rewrite HB; apply CTcol_permutation_5; apply CTcol_trivial_1.",
            "VernacExtend",
            "29726e1a2fda990bfd8ba98bed10217973e562dd"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem3.",
            "VernacExtend",
            "06805e495c0f24b0e17c674cac7b300a4ef5fe5a"
        ],
        [
            "rewrite <- SWP.singleton_equal_add in Hmem3.",
            "VernacExtend",
            "af8a00f660f5c2b429b102df1603652767a54b3d"
        ],
        [
            "apply SWP.Dec.F.mem_iff in Hmem3.",
            "VernacExtend",
            "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
        ],
        [
            "apply SWP.Dec.F.singleton_1 in Hmem3.",
            "VernacExtend",
            "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
        ],
        [
            "rewrite Hmem3 in *; contradiction.",
            "VernacExtend",
            "8cdef52ada3b8b50b356710758863247279a3d21"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem1.",
            "VernacExtend",
            "ee0b8cd80620e7940a2d1a48dfbfa20a290a6fdc"
        ],
        [
            "rewrite <- SWP.singleton_equal_add in Hmem1.",
            "VernacExtend",
            "5180cb70a0c6844391b053dbbe3e43237abb41c6"
        ],
        [
            "apply SWP.Dec.F.mem_iff in Hmem1.",
            "VernacExtend",
            "c3b077c9780fc7b3cc22e48769b90730cab9297f"
        ],
        [
            "apply SWP.Dec.F.singleton_1 in Hmem1.",
            "VernacExtend",
            "3323a14410e45e4e272230dd7a071c57d161a7fd"
        ],
        [
            "rewrite <- Hmem1 in *; rewrite HC.",
            "VernacExtend",
            "9d0542cc2bcb1f11945b072c600e0824a480dc28"
        ],
        [
            "elim (Pos.eq_dec pa p2); intro Hpap2.",
            "VernacExtend",
            "4a3162ae4a6709f02345f924a2516a07cde8326d"
        ],
        [
            "rewrite Hpap2 in *; rewrite HA.",
            "VernacExtend",
            "1eaac515c23092f3c635db0d86fd116dabe99dab"
        ],
        [
            "elim (Pos.eq_dec p3 p2); intro Hp3p2; elim (Pos.eq_dec p3 pb); intro Hp3pb.",
            "VernacExtend",
            "574bee072988c93e849178d53605244871d8dc7f"
        ],
        [
            "rewrite Hp3pb; rewrite HB; apply CTcol_permutation_2; assumption.",
            "VernacExtend",
            "84fbffa09880400fa266487e47f55f08986ff798"
        ],
        [
            "rewrite Hp3p2; rewrite HA; apply CTcol_trivial_2.",
            "VernacExtend",
            "06e492bd27e84f7685384905355020ea25a69ce3"
        ],
        [
            "rewrite Hp3pb; rewrite HB; apply CTcol_permutation_2; assumption.",
            "VernacExtend",
            "84fbffa09880400fa266487e47f55f08986ff798"
        ],
        [
            "do 2 (rewrite SWP.Dec.F.add_neq_b in Hmem3).",
            "VernacExtend",
            "2ef2416ece8a76088919fceb3a91336ea8fc1c7c"
        ],
        [
            "rewrite <- SWP.singleton_equal_add in Hmem3.",
            "VernacExtend",
            "af8a00f660f5c2b429b102df1603652767a54b3d"
        ],
        [
            "apply SWP.Dec.F.mem_iff in Hmem3.",
            "VernacExtend",
            "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
        ],
        [
            "apply SWP.Dec.F.singleton_1 in Hmem3.",
            "VernacExtend",
            "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
        ],
        [
            "rewrite <- Hmem3; rewrite HC; apply CTcol_permutation_1; apply CTcol_trivial_1.",
            "VernacExtend",
            "bce95a8e595d6ce0ebbf1cf46674899c8d4e7aa7"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
            "VernacExtend",
            "6b936e427488a7be4b3501b586bf7a778934fb1d"
        ],
        [
            "elim (Pos.eq_dec p2 pb); intro Hp2pb.",
            "VernacExtend",
            "0469e0038ee7b756efa9ee67b4894de1d0ad55e6"
        ],
        [
            "rewrite Hp2pb; rewrite HB.",
            "VernacExtend",
            "74266f53d3682adcc1e09438c209d5b5072eefb2"
        ],
        [
            "elim (Pos.eq_dec p3 pa); intro Hp3pa; elim (Pos.eq_dec p3 pb); intro Hp3pb.",
            "VernacExtend",
            "55062c0f7c9dcfdb01ec480818bccaa28623a269"
        ],
        [
            "rewrite Hp3pa; rewrite HA; apply CTcol_permutation_3; assumption.",
            "VernacExtend",
            "5294ee41104f781979ca37264e4ee13ee5d5a61f"
        ],
        [
            "rewrite Hp3pa; rewrite HA; apply CTcol_permutation_3; assumption.",
            "VernacExtend",
            "5294ee41104f781979ca37264e4ee13ee5d5a61f"
        ],
        [
            "rewrite Hp3pb; rewrite HB; apply CTcol_trivial_2.",
            "VernacExtend",
            "68aee59d96d465d35747791dae023888032e1fd7"
        ],
        [
            "do 2 (rewrite SWP.Dec.F.add_neq_b in Hmem3).",
            "VernacExtend",
            "2ef2416ece8a76088919fceb3a91336ea8fc1c7c"
        ],
        [
            "rewrite <- SWP.singleton_equal_add in Hmem3.",
            "VernacExtend",
            "af8a00f660f5c2b429b102df1603652767a54b3d"
        ],
        [
            "apply SWP.Dec.F.mem_iff in Hmem3.",
            "VernacExtend",
            "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
        ],
        [
            "apply SWP.Dec.F.singleton_1 in Hmem3.",
            "VernacExtend",
            "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
        ],
        [
            "rewrite <- Hmem3 in *; rewrite HC; apply CTcol_permutation_1; apply CTcol_trivial_1.",
            "VernacExtend",
            "240ff9f87b2098443b34cb6aa921b27e42362832"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
            "VernacExtend",
            "6b936e427488a7be4b3501b586bf7a778934fb1d"
        ],
        [
            "rewrite <- SWP.singleton_equal_add in Hmem2.",
            "VernacExtend",
            "e29dea6abb2de31ec702adbe3b7d079f2122970d"
        ],
        [
            "apply SWP.Dec.F.mem_iff in Hmem2.",
            "VernacExtend",
            "6e5cd9999a6542cf114e539307682213f16aa35e"
        ],
        [
            "apply SWP.Dec.F.singleton_1 in Hmem2.",
            "VernacExtend",
            "3835215b03038a32acffa3d2be1c36e6fcccb8d6"
        ],
        [
            "rewrite <- Hmem2 in *; rewrite HC; apply CTcol_trivial_1.",
            "VernacExtend",
            "15b38c2358e98cff908dfc36282de374149e054e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold ss_ok in *.",
            "VernacExtend",
            "8c95b3d4846821d0152888cbab122090545bdf8f"
        ],
        [
            "apply HSS with s.",
            "VernacExtend",
            "1b3a35f0918adfc81aa20767006923cabcbfd0c5"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1.",
            "VernacExtend",
            "fb831ce8c5315b134cfbeda745acfebb053443cf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite Hmem1; rewrite Hmem2; rewrite Hmem3; reflexivity.",
            "VernacExtend",
            "6378c403c6a3a8145d8e3878832789ffa311cf01"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma collect_diffs : forall (A B : COLTpoint) (H : A <> B) pa pb sp (interp : positive -> COLTpoint), interp pa = A -> interp pb = B -> sp_ok sp interp -> sp_ok (SP.add (pa, pb) sp) interp.",
            "VernacStartTheoremProof",
            "465ab33535c8ce4272e643e8971d7ce7ae594827"
        ],
        [
            "intros A B HDiff pa pb sp interp HA HB HSP.",
            "VernacExtend",
            "b3e358083fd0f20e8e8914758ecd361e22b0cd93"
        ],
        [
            "unfold sp_ok.",
            "VernacExtend",
            "4064042813c4c530bb8bbcca6ae9cdc475e09611"
        ],
        [
            "intros p Hp.",
            "VernacExtend",
            "cf737bd4e185c03175335af1ca6ae52da34cba56"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_2 in Hp.",
            "VernacExtend",
            "e9400b1fd4b603a5082d762c6d6857e69c09163c"
        ],
        [
            "apply SPWEqP.MP.Dec.F.add_iff in Hp.",
            "VernacExtend",
            "11790e17091d67297202bdcdb43404a0645d3262"
        ],
        [
            "elim Hp; intro HpE.",
            "VernacExtend",
            "4b827224a0e014e6bf3eb1653b8f60d2f45eb60e"
        ],
        [
            "destruct HpE as [HEq1 HEq2].",
            "VernacExtend",
            "cb0ac84575f708ba702470780d4998cd59c4ea9b"
        ],
        [
            "destruct p as [fstp sndp].",
            "VernacExtend",
            "54d69d602269dfaa18b7f46b7ce1404701e4968c"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "elim (Pos.min_spec pa pb); intro Hmin1; elim (Pos.min_spec fstp sndp); intro Hmin2; destruct Hmin1 as [Hpapb1 Hmin1]; destruct Hmin2 as [Hfpsp1 Hmin2]; elim (Pos.max_spec pa pb); intro Hmax1; elim (Pos.max_spec fstp sndp); intro Hmax2; destruct Hmax1 as [Hpapb2 Hmax1]; destruct Hmax2 as [Hfpsp2 Hmax2].",
            "VernacExtend",
            "9df0952f931d02aaab23327ab4d3d7bbf3874395"
        ],
        [
            "rewrite Hmin1 in *; rewrite Hmin2 in *; rewrite Hmax1 in *;rewrite Hmax2 in *.",
            "VernacExtend",
            "e4a84a9e96a3b3b1117708331d2b53e117da7edc"
        ],
        [
            "rewrite <- HEq1; rewrite <- HEq2; rewrite HA in *; rewrite HB in *; assumption.",
            "VernacExtend",
            "cf7caa68228fc6fc6a8dbb1c35056a689d778afb"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hfpsp1; rewrite Pos.ltb_antisym in Hfpsp1; rewrite negb_true_iff in Hfpsp1; rewrite Pos.leb_nle in Hfpsp1; contradiction.",
            "VernacExtend",
            "c9c92f35da082517c9ee50903ba21ed0442f10e8"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hpapb1; rewrite Pos.ltb_antisym in Hpapb1; rewrite negb_true_iff in Hpapb1; rewrite Pos.leb_nle in Hpapb1; contradiction.",
            "VernacExtend",
            "455c055d54112eb081369c49572f03fd4c8dfdd5"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hfpsp1; rewrite Pos.ltb_antisym in Hfpsp1; rewrite negb_true_iff in Hfpsp1; rewrite Pos.leb_nle in Hfpsp1; contradiction.",
            "VernacExtend",
            "c9c92f35da082517c9ee50903ba21ed0442f10e8"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hfpsp2; rewrite Pos.ltb_antisym in Hfpsp2; rewrite negb_true_iff in Hfpsp2; rewrite Pos.leb_nle in Hfpsp2; contradiction.",
            "VernacExtend",
            "a714166ab0ed6001667c0b56b46d17388430bbe5"
        ],
        [
            "rewrite Hmin1 in *; rewrite Hmin2 in *; rewrite Hmax1 in *;rewrite Hmax2 in *.",
            "VernacExtend",
            "e4a84a9e96a3b3b1117708331d2b53e117da7edc"
        ],
        [
            "rewrite <- HEq1; rewrite <- HEq2; rewrite HA in *; rewrite HB in *; assumption.",
            "VernacExtend",
            "cf7caa68228fc6fc6a8dbb1c35056a689d778afb"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hfpsp2; rewrite Pos.ltb_antisym in Hfpsp2; rewrite negb_true_iff in Hfpsp2; rewrite Pos.leb_nle in Hfpsp2; contradiction.",
            "VernacExtend",
            "a714166ab0ed6001667c0b56b46d17388430bbe5"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hpapb1; rewrite Pos.ltb_antisym in Hpapb1; rewrite negb_true_iff in Hpapb1; rewrite Pos.leb_nle in Hpapb1; contradiction.",
            "VernacExtend",
            "455c055d54112eb081369c49572f03fd4c8dfdd5"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hpapb2; rewrite Pos.ltb_antisym in Hpapb2; rewrite negb_true_iff in Hpapb2; rewrite Pos.leb_nle in Hpapb2; contradiction.",
            "VernacExtend",
            "68ce996b0f48510ba8fc8b79b5d7973dbe3b4fd2"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hpapb2; rewrite Pos.ltb_antisym in Hpapb2; rewrite negb_true_iff in Hpapb2; rewrite Pos.leb_nle in Hpapb2; contradiction.",
            "VernacExtend",
            "68ce996b0f48510ba8fc8b79b5d7973dbe3b4fd2"
        ],
        [
            "rewrite Hmin1 in *; rewrite Hmin2 in *; rewrite Hmax1 in *;rewrite Hmax2 in *.",
            "VernacExtend",
            "e4a84a9e96a3b3b1117708331d2b53e117da7edc"
        ],
        [
            "rewrite <- HEq1; rewrite <- HEq2; rewrite HA in *; rewrite HB in *; intuition.",
            "VernacExtend",
            "29e6a348bc5b3a5477fc55eabcb36d9a8c0afddf"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hfpsp1; rewrite Pos.ltb_antisym in Hfpsp1; rewrite negb_true_iff in Hfpsp1; rewrite Pos.leb_nle in Hfpsp1; contradiction.",
            "VernacExtend",
            "c9c92f35da082517c9ee50903ba21ed0442f10e8"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hpapb2; rewrite Pos.ltb_antisym in Hpapb2; rewrite negb_true_iff in Hpapb2; rewrite Pos.leb_nle in Hpapb2; contradiction.",
            "VernacExtend",
            "68ce996b0f48510ba8fc8b79b5d7973dbe3b4fd2"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hpapb2; rewrite Pos.ltb_antisym in Hpapb2; rewrite negb_true_iff in Hpapb2; rewrite Pos.leb_nle in Hpapb2; contradiction.",
            "VernacExtend",
            "68ce996b0f48510ba8fc8b79b5d7973dbe3b4fd2"
        ],
        [
            "rewrite <- Pos.ltb_lt in Hfpsp2; rewrite Pos.ltb_antisym in Hfpsp2; rewrite negb_true_iff in Hfpsp2; rewrite Pos.leb_nle in Hfpsp2; contradiction.",
            "VernacExtend",
            "a714166ab0ed6001667c0b56b46d17388430bbe5"
        ],
        [
            "rewrite Hmin1 in *; rewrite Hmin2 in *; rewrite Hmax1 in *;rewrite Hmax2 in *.",
            "VernacExtend",
            "e4a84a9e96a3b3b1117708331d2b53e117da7edc"
        ],
        [
            "rewrite <- HEq1; rewrite <- HEq2; rewrite HA in *; rewrite HB in *; intuition.",
            "VernacExtend",
            "29e6a348bc5b3a5477fc55eabcb36d9a8c0afddf"
        ],
        [
            "unfold sp_ok in *.",
            "VernacExtend",
            "8b0ed8abe406c352e6771a82c61998d3faab4a3a"
        ],
        [
            "apply HSP.",
            "VernacExtend",
            "32afde016c1197e0c02b0ef119abb995bd0a2f2f"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1.",
            "VernacExtend",
            "14123951ceca0420c88a6e3a8aeca4a2cae5a476"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition list_assoc_inv := (fix list_assoc_inv_rec (A:Type) (B:Set) (eq_dec:forall e1 e2:B, {e1 = e2} + {e1 <> e2}) (lst : list (prodT A B)) {struct lst} : B -> A -> A := fun (key:B) (default:A) => match lst with | nil => default | cons (pairT v e) l => match eq_dec e key with | left _ => v | right _ => list_assoc_inv_rec A B eq_dec l key default end end).",
            "VernacDefinition",
            "b1695451fbc01fc5badcfbf2ad2b3662826bfdec"
        ],
        [
            "Lemma positive_dec : forall (p1 p2:positive), {p1=p2}+{~p1=p2}.",
            "VernacStartTheoremProof",
            "dde6075226b6df59fd701ed72f708db2097a4495"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition interp (lvar : list (COLTpoint * positive)) (Default : COLTpoint) : positive -> COLTpoint := fun p => list_assoc_inv COLTpoint positive positive_dec lvar p Default.",
            "VernacDefinition",
            "3b30a3776ceb5766c655e6ea0f06d3d1257b6768"
        ],
        [
            "Definition eq_tagged (lvar : list (COLTpoint * positive)) := lvar = lvar.",
            "VernacDefinition",
            "a3bbdbfd20f55f46b012342b209107f38c52baa4"
        ],
        [
            "Lemma eq_eq_tagged : forall lvar, lvar = lvar -> eq_tagged lvar.",
            "VernacStartTheoremProof",
            "8ec4e9832d88c9fcddf39de0f962a7f68be4ccf5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition partition_ss e ss := SS.partition (fun s => S.mem e s) ss.",
            "VernacDefinition",
            "3a75ed3c086f3a068d6f8850a437d4f3585b38e0"
        ],
        [
            "Definition fst_ss (pair : SS.t * SS.t) := match pair with |(a,b) => a end.",
            "VernacDefinition",
            "ee1e89b856358ca6eea6bdaf324cd48d3e6a7ff6"
        ],
        [
            "Definition snd_ss (pair : SS.t * SS.t) := match pair with |(a,b) => b end.",
            "VernacDefinition",
            "1a2b581a62f4f71e6c6a48cd5ab88dab06a38931"
        ],
        [
            "Definition subst_in_set p1 p2 s := S.add p1 (S.remove p2 s).",
            "VernacDefinition",
            "d09a049fddfd6c10cbe4298cf2a794556d198c0d"
        ],
        [
            "Definition subst_in_ss_aux p1 p2 := (fun s ss => SS.add (subst_in_set p1 p2 s) ss).",
            "VernacDefinition",
            "bd479b475789a989865545f8bb665e2d3aa95296"
        ],
        [
            "Definition subst_in_ss p1 p2 ss := let pair := partition_ss p2 ss in let fss := fst_ss(pair) in let sss := snd_ss(pair) in let newfss := SS.fold (subst_in_ss_aux p1 p2) fss SS.empty in SS.union newfss sss.",
            "VernacDefinition",
            "5c77903725f96d939c85cc1bc69c5cb9642fa5e8"
        ],
        [
            "Lemma proper_4 : forall p, Proper (S.Equal ==> eq) (fun s : SS.elt => S.mem p s).",
            "VernacStartTheoremProof",
            "7174ada3dd22e99fda6e0604147918d5485efdaa"
        ],
        [
            "intros p x y Hxy.",
            "VernacExtend",
            "58982029c7d1027c48a0351562281e9a31a3330f"
        ],
        [
            "apply SWP.Dec.F.mem_m; intuition.",
            "VernacExtend",
            "f71a787db9a03ab3842830316cfbc7d3d21a3f97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proper_5 : forall p, Proper (S.Equal ==> eq) (fun s : SS.elt => negb (S.mem p s)).",
            "VernacStartTheoremProof",
            "e2b0b1447a6ab7d817235af2a3e437b0ff74687c"
        ],
        [
            "intros p x y Hxy.",
            "VernacExtend",
            "58982029c7d1027c48a0351562281e9a31a3330f"
        ],
        [
            "apply negb_sym.",
            "VernacExtend",
            "685a942c4b467861de44f575038e1a93204cb9a4"
        ],
        [
            "rewrite negb_involutive.",
            "VernacExtend",
            "26794076710129c6559391372636b9da5e2f9672"
        ],
        [
            "apply SWP.Dec.F.mem_m; intuition.",
            "VernacExtend",
            "f71a787db9a03ab3842830316cfbc7d3d21a3f97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subst_ss_ok : forall (A B : COLTpoint) (H : A = B) pa pb ss (interp : positive -> COLTpoint), interp pa = A -> interp pb = B -> ss_ok ss interp -> ss_ok (subst_in_ss pa pb ss) interp.",
            "VernacStartTheoremProof",
            "63ced1822a7e9fb3be73dd6b2f2c89a027a61948"
        ],
        [
            "intros A B H pa pb ss interp HA HB HSS.",
            "VernacExtend",
            "fa1974a206585351d68f00657709105ddae116c8"
        ],
        [
            "unfold subst_in_ss.",
            "VernacExtend",
            "385d91c81b58a26ec55ea01cf802b02071728b25"
        ],
        [
            "unfold ss_ok.",
            "VernacExtend",
            "8b3f387759ffd21aaf87d3780206a5d7e605ad5e"
        ],
        [
            "intros s Hs.",
            "VernacExtend",
            "260fb9c070371bcc61b105a76ad6e9ca0d4ab0f1"
        ],
        [
            "intros p1 p2 p3 Hmem.",
            "VernacExtend",
            "18f8858ba22ddb49d0aba0d690d589bd2261e548"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_2 in Hs.",
            "VernacExtend",
            "05db75943d6076f2dff931feaee57239262da7b2"
        ],
        [
            "rewrite SSWEqP.MP.Dec.F.union_iff in Hs.",
            "VernacExtend",
            "64d0f611c133a23c67ec3dee568c5254c39cff39"
        ],
        [
            "elim Hs; intro HIn; clear Hs.",
            "VernacExtend",
            "8ccdfe7096e18a9f216298ae232a888187e25b81"
        ],
        [
            "assert (HSSF : ss_ok (fst_ss (partition_ss pb ss)) interp).",
            "VernacExtend",
            "1a037b37f412d52be72d6dfcb9e4bcc39a62585a"
        ],
        [
            "clear Hmem; clear p1; clear p2; clear p3.",
            "VernacExtend",
            "ed8b004eb7b25736f8233ac8f00965d124c1bd73"
        ],
        [
            "intros s' Hs'.",
            "VernacExtend",
            "3deadcc30608da9a6aff57f4af0e4fa25bf0814d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_2 in Hs'.",
            "VernacExtend",
            "9f1b5a4aa67d65feb6f955d624cb5e564a52656e"
        ],
        [
            "unfold partition in Hs'.",
            "VernacExtend",
            "8f23a393cf03e9312767424229b6ae7059ad968d"
        ],
        [
            "apply SS.partition_spec1 in Hs'; try apply proper_4.",
            "VernacExtend",
            "f3afbda4a4a0709a179e4beb3165ebdbad7723c8"
        ],
        [
            "apply SSWEqP.MP.Dec.F.filter_1 in Hs'; try apply proper_4.",
            "VernacExtend",
            "ac2c95a9d55f66293c70ae96a8962929d2e4c7b9"
        ],
        [
            "unfold ss_ok in HSS.",
            "VernacExtend",
            "0c6f6735f17e5226ced7397bdd7b7242c8c9ee11"
        ],
        [
            "apply HSS with s'; try assumption.",
            "VernacExtend",
            "a9c6fd2fc0a955d9feea733775679d279a605023"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "assert (HSSF' : ss_ok (SS.fold (subst_in_ss_aux pa pb) (fst_ss (partition_ss pb ss)) SS.empty) interp).",
            "VernacExtend",
            "81ee863a0471d10954e4b9bab1b0e975aeda88ee"
        ],
        [
            "apply SSWEqP.MP.fold_rec_nodep; try apply ss_ok_empty.",
            "VernacExtend",
            "b446823ac54bc3949b5106fcf17fe0b257784600"
        ],
        [
            "intros x a HIn1 HSSa.",
            "VernacExtend",
            "175e1ba80f5b0509c6eb74d42c5d05639a17b903"
        ],
        [
            "clear Hmem; clear p1; clear p2; clear p3.",
            "VernacExtend",
            "ed8b004eb7b25736f8233ac8f00965d124c1bd73"
        ],
        [
            "intros s' Hs'.",
            "VernacExtend",
            "3deadcc30608da9a6aff57f4af0e4fa25bf0814d"
        ],
        [
            "intros p1 p2 p3 Hmem.",
            "VernacExtend",
            "18f8858ba22ddb49d0aba0d690d589bd2261e548"
        ],
        [
            "unfold subst_in_ss_aux in *.",
            "VernacExtend",
            "ce4049e5486956d5ab801a10e5fdb158297e2c86"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_2 in Hs'.",
            "VernacExtend",
            "9f1b5a4aa67d65feb6f955d624cb5e564a52656e"
        ],
        [
            "rewrite SSWEqP.MP.Dec.F.add_iff in Hs'.",
            "VernacExtend",
            "f446a85faa49f7b8a9567105bad38beb90f81040"
        ],
        [
            "elim Hs'; intro HIn2; clear Hs'.",
            "VernacExtend",
            "95d8baf16fa1f23f8c966d8b9a74c05fb90d1bbd"
        ],
        [
            "unfold subst_in_set in HIn2.",
            "VernacExtend",
            "b5a04e9aceded6e4e459fb5f08ee52ce40dc88e8"
        ],
        [
            "clear HIn; clear s; assert (HEq := HIn2); clear HIn2; assert (HIn := HIn1); clear HIn1.",
            "VernacExtend",
            "1be196557b56de92ec2a67e5b5f7915017bf5efc"
        ],
        [
            "elim (Pos.eq_dec pb p1); intro Hp1; elim (Pos.eq_dec pb p2); intro Hp2; elim (Pos.eq_dec pb p3); intro Hp3.",
            "VernacExtend",
            "8368388151700a456754b5008746767d580ba2e1"
        ],
        [
            "do 2 subst.",
            "VernacExtend",
            "f6d14ed963e1d0d70544d4b2707b5ccc57c971ff"
        ],
        [
            "apply CTcol_trivial_1.",
            "VernacExtend",
            "1e54140daadb2e90cdbb1c8da62cdf86a6d9f28d"
        ],
        [
            "do 2 subst.",
            "VernacExtend",
            "f6d14ed963e1d0d70544d4b2707b5ccc57c971ff"
        ],
        [
            "apply CTcol_trivial_1.",
            "VernacExtend",
            "1e54140daadb2e90cdbb1c8da62cdf86a6d9f28d"
        ],
        [
            "do 2 subst.",
            "VernacExtend",
            "f6d14ed963e1d0d70544d4b2707b5ccc57c971ff"
        ],
        [
            "apply CTcol_permutation_4; apply CTcol_trivial_2.",
            "VernacExtend",
            "9fe296512312a154cdea640981b270f029a61611"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "do 2 (rewrite andb_true_iff in Hmem).",
            "VernacExtend",
            "85fd40b998255f672b7ab6f5d0ea243e72e40b8e"
        ],
        [
            "destruct Hmem as [[Hmem1' Hmem2'] Hmem3'].",
            "VernacExtend",
            "cb4ed78412492b25520237d0a50142b96fdbdc2f"
        ],
        [
            "assert (Hmem1 : S.mem p1 x = true).",
            "VernacExtend",
            "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
        ],
        [
            "unfold partition in HIn.",
            "VernacExtend",
            "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
        ],
        [
            "apply SS.partition_spec1 in HIn; try apply proper_4.",
            "VernacExtend",
            "06f37bc7a625ae9a00aa2079b832da2f01c33884"
        ],
        [
            "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
            "VernacExtend",
            "a7c9013642ed49e0dfd76562445c749cf771d8fe"
        ],
        [
            "elim (Pos.eq_dec pa p2); intro Hpap2.",
            "VernacExtend",
            "4a3162ae4a6709f02345f924a2516a07cde8326d"
        ],
        [
            "subst; rewrite HB; apply CTcol_trivial_1.",
            "VernacExtend",
            "73a7671cb6afe5424ebfaa791a4b1bff6ae417ef"
        ],
        [
            "assert (Hmem2 : S.mem p2 x = true).",
            "VernacExtend",
            "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
        ],
        [
            "rewrite <- HEq in Hmem2'.",
            "VernacExtend",
            "695f18d9676847d06f13d7413633555db45dfbeb"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2'; try assumption.",
            "VernacExtend",
            "ba5833f2cc92e8dfc40ffd14b6653de0ff8f9d2b"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem2'; assumption.",
            "VernacExtend",
            "520899af16582b69ca428a5d019d345edffc99ab"
        ],
        [
            "elim (Pos.eq_dec pa p3); intro Hpap3.",
            "VernacExtend",
            "6e6d2ba68fe891315980f78c694d40011391df9c"
        ],
        [
            "subst; rewrite HB; apply CTcol_permutation_4; apply CTcol_trivial_2.",
            "VernacExtend",
            "9cd339c1e6ab8d50badf8dc2f142c9d27c51f7fc"
        ],
        [
            "assert (Hmem3 : S.mem p3 x = true).",
            "VernacExtend",
            "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
        ],
        [
            "rewrite <- HEq in Hmem3'.",
            "VernacExtend",
            "a05e74eb04f449f2caeea586c2136d3b90967362"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem3'; try assumption.",
            "VernacExtend",
            "9ca07e63d252d2b971ea9d2dc871845bd1e5805a"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem3'; assumption.",
            "VernacExtend",
            "0712d60d6dc23329f028cfb4919de0b6f841062e"
        ],
        [
            "unfold ss_ok in HSSF.",
            "VernacExtend",
            "6c7889413aaf4461862ae95e71e2fd145390edd3"
        ],
        [
            "apply HSSF with x.",
            "VernacExtend",
            "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "do 2 (rewrite andb_true_iff); repeat split; assumption.",
            "VernacExtend",
            "5d181b3410061ca9e43fb7a168714c6e5551d29e"
        ],
        [
            "do 2 subst.",
            "VernacExtend",
            "f6d14ed963e1d0d70544d4b2707b5ccc57c971ff"
        ],
        [
            "apply CTcol_trivial_2.",
            "VernacExtend",
            "04e191cd40a1775a60b021f8fa1e20e5b082bea7"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "do 2 (rewrite andb_true_iff in Hmem).",
            "VernacExtend",
            "85fd40b998255f672b7ab6f5d0ea243e72e40b8e"
        ],
        [
            "destruct Hmem as [[Hmem1' Hmem2'] Hmem3'].",
            "VernacExtend",
            "cb4ed78412492b25520237d0a50142b96fdbdc2f"
        ],
        [
            "assert (Hmem2 : S.mem p2 x = true).",
            "VernacExtend",
            "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
        ],
        [
            "unfold partition in HIn.",
            "VernacExtend",
            "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
        ],
        [
            "apply SS.partition_spec1 in HIn; try apply proper_4.",
            "VernacExtend",
            "06f37bc7a625ae9a00aa2079b832da2f01c33884"
        ],
        [
            "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
            "VernacExtend",
            "a7c9013642ed49e0dfd76562445c749cf771d8fe"
        ],
        [
            "elim (Pos.eq_dec pa p1); intro Hpap1.",
            "VernacExtend",
            "79fd953469953454cdf555f141f878e0b9c85a06"
        ],
        [
            "subst; rewrite HB; apply CTcol_trivial_1.",
            "VernacExtend",
            "73a7671cb6afe5424ebfaa791a4b1bff6ae417ef"
        ],
        [
            "assert (Hmem1 : S.mem p1 x = true).",
            "VernacExtend",
            "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
        ],
        [
            "rewrite <- HEq in Hmem1'.",
            "VernacExtend",
            "8c9dd938ea5509b505abd1a20a5993907e307814"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem1'; try assumption.",
            "VernacExtend",
            "f164e2341f39233a5ad449154bd2a8370122eed7"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem1'; assumption.",
            "VernacExtend",
            "681492acb6561aeaf7c2e96426ff17c2bce9d369"
        ],
        [
            "elim (Pos.eq_dec pa p3); intro Hpap3.",
            "VernacExtend",
            "6e6d2ba68fe891315980f78c694d40011391df9c"
        ],
        [
            "subst; rewrite HB; apply CTcol_trivial_2.",
            "VernacExtend",
            "44082df67d284f1e9652dfc9bea65c3b1a190248"
        ],
        [
            "assert (Hmem3 : S.mem p3 x = true).",
            "VernacExtend",
            "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
        ],
        [
            "rewrite <- HEq in Hmem3'.",
            "VernacExtend",
            "a05e74eb04f449f2caeea586c2136d3b90967362"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem3'; try assumption.",
            "VernacExtend",
            "9ca07e63d252d2b971ea9d2dc871845bd1e5805a"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem3'; assumption.",
            "VernacExtend",
            "0712d60d6dc23329f028cfb4919de0b6f841062e"
        ],
        [
            "unfold ss_ok in HSSF.",
            "VernacExtend",
            "6c7889413aaf4461862ae95e71e2fd145390edd3"
        ],
        [
            "apply HSSF with x.",
            "VernacExtend",
            "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "do 2 (rewrite andb_true_iff); repeat split; assumption.",
            "VernacExtend",
            "5d181b3410061ca9e43fb7a168714c6e5551d29e"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "do 2 (rewrite andb_true_iff in Hmem).",
            "VernacExtend",
            "85fd40b998255f672b7ab6f5d0ea243e72e40b8e"
        ],
        [
            "destruct Hmem as [[Hmem1' Hmem2'] Hmem3'].",
            "VernacExtend",
            "cb4ed78412492b25520237d0a50142b96fdbdc2f"
        ],
        [
            "assert (Hmem3 : S.mem p3 x = true).",
            "VernacExtend",
            "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
        ],
        [
            "unfold partition in HIn.",
            "VernacExtend",
            "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
        ],
        [
            "apply SS.partition_spec1 in HIn; try apply proper_4.",
            "VernacExtend",
            "06f37bc7a625ae9a00aa2079b832da2f01c33884"
        ],
        [
            "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
            "VernacExtend",
            "a7c9013642ed49e0dfd76562445c749cf771d8fe"
        ],
        [
            "elim (Pos.eq_dec pa p1); intro Hpap1.",
            "VernacExtend",
            "79fd953469953454cdf555f141f878e0b9c85a06"
        ],
        [
            "subst; rewrite HB; apply CTcol_permutation_4; apply CTcol_trivial_2.",
            "VernacExtend",
            "9cd339c1e6ab8d50badf8dc2f142c9d27c51f7fc"
        ],
        [
            "assert (Hmem1 : S.mem p1 x = true).",
            "VernacExtend",
            "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
        ],
        [
            "rewrite <- HEq in Hmem1'.",
            "VernacExtend",
            "8c9dd938ea5509b505abd1a20a5993907e307814"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem1'; try assumption.",
            "VernacExtend",
            "f164e2341f39233a5ad449154bd2a8370122eed7"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem1'; assumption.",
            "VernacExtend",
            "681492acb6561aeaf7c2e96426ff17c2bce9d369"
        ],
        [
            "elim (Pos.eq_dec pa p2); intro Hpap2.",
            "VernacExtend",
            "4a3162ae4a6709f02345f924a2516a07cde8326d"
        ],
        [
            "subst; rewrite HB; apply CTcol_trivial_2.",
            "VernacExtend",
            "44082df67d284f1e9652dfc9bea65c3b1a190248"
        ],
        [
            "assert (Hmem2 : S.mem p2 x = true).",
            "VernacExtend",
            "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
        ],
        [
            "rewrite <- HEq in Hmem2'.",
            "VernacExtend",
            "695f18d9676847d06f13d7413633555db45dfbeb"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2'; try assumption.",
            "VernacExtend",
            "ba5833f2cc92e8dfc40ffd14b6653de0ff8f9d2b"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem2'; assumption.",
            "VernacExtend",
            "520899af16582b69ca428a5d019d345edffc99ab"
        ],
        [
            "unfold ss_ok in HSSF.",
            "VernacExtend",
            "6c7889413aaf4461862ae95e71e2fd145390edd3"
        ],
        [
            "apply HSSF with x.",
            "VernacExtend",
            "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "do 2 (rewrite andb_true_iff); repeat split; assumption.",
            "VernacExtend",
            "5d181b3410061ca9e43fb7a168714c6e5551d29e"
        ],
        [
            "do 2 (rewrite andb_true_iff in Hmem).",
            "VernacExtend",
            "85fd40b998255f672b7ab6f5d0ea243e72e40b8e"
        ],
        [
            "destruct Hmem as [[Hmem1' Hmem2'] Hmem3'].",
            "VernacExtend",
            "cb4ed78412492b25520237d0a50142b96fdbdc2f"
        ],
        [
            "elim (Pos.eq_dec pa p1); intro Hpap1; elim (Pos.eq_dec pa p2); intro Hpap2; elim (Pos.eq_dec pa p3); intro Hpap3.",
            "VernacExtend",
            "f1b786f62eb105e8cd0dbcce31833a3a37f2d8d1"
        ],
        [
            "do 2 subst; apply CTcol_trivial_1.",
            "VernacExtend",
            "084784bf9b222dfe3247fd8d0060f29c2321c05e"
        ],
        [
            "do 2 subst; apply CTcol_trivial_1.",
            "VernacExtend",
            "084784bf9b222dfe3247fd8d0060f29c2321c05e"
        ],
        [
            "do 2 subst; apply CTcol_permutation_4; apply CTcol_trivial_2.",
            "VernacExtend",
            "5cb26038d4f506794e900040df855475285d909f"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (Hmem1 : S.mem pb x = true).",
            "VernacExtend",
            "d854b6e2227048fa302957866f3addbe1a70a818"
        ],
        [
            "unfold partition in HIn.",
            "VernacExtend",
            "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
        ],
        [
            "apply SS.partition_spec1 in HIn; try apply proper_4.",
            "VernacExtend",
            "06f37bc7a625ae9a00aa2079b832da2f01c33884"
        ],
        [
            "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
            "VernacExtend",
            "a7c9013642ed49e0dfd76562445c749cf771d8fe"
        ],
        [
            "assert (Hmem2 : S.mem p2 x = true).",
            "VernacExtend",
            "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
        ],
        [
            "rewrite <- HEq in Hmem2'.",
            "VernacExtend",
            "695f18d9676847d06f13d7413633555db45dfbeb"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2'; try assumption.",
            "VernacExtend",
            "ba5833f2cc92e8dfc40ffd14b6653de0ff8f9d2b"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem2'; assumption.",
            "VernacExtend",
            "520899af16582b69ca428a5d019d345edffc99ab"
        ],
        [
            "assert (Hmem3 : S.mem p3 x = true).",
            "VernacExtend",
            "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
        ],
        [
            "rewrite <- HEq in Hmem3'.",
            "VernacExtend",
            "a05e74eb04f449f2caeea586c2136d3b90967362"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem3'; try assumption.",
            "VernacExtend",
            "9ca07e63d252d2b971ea9d2dc871845bd1e5805a"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem3'; assumption.",
            "VernacExtend",
            "0712d60d6dc23329f028cfb4919de0b6f841062e"
        ],
        [
            "rewrite <- HB.",
            "VernacExtend",
            "da54ab0bf36ea428dcdfb8f782f98549d1196250"
        ],
        [
            "unfold ss_ok in HSSF.",
            "VernacExtend",
            "6c7889413aaf4461862ae95e71e2fd145390edd3"
        ],
        [
            "apply HSSF with x.",
            "VernacExtend",
            "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "do 2 (rewrite andb_true_iff); repeat split; assumption.",
            "VernacExtend",
            "5d181b3410061ca9e43fb7a168714c6e5551d29e"
        ],
        [
            "do 2 subst; apply CTcol_trivial_2.",
            "VernacExtend",
            "fc815a6c54affc7debb9512763c2de567d2caca3"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (Hmem2 : S.mem pb x = true).",
            "VernacExtend",
            "b864a532b4c1e8615e86b8bd79a5badcc660f113"
        ],
        [
            "unfold partition in HIn.",
            "VernacExtend",
            "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
        ],
        [
            "apply SS.partition_spec1 in HIn; try apply proper_4.",
            "VernacExtend",
            "06f37bc7a625ae9a00aa2079b832da2f01c33884"
        ],
        [
            "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
            "VernacExtend",
            "a7c9013642ed49e0dfd76562445c749cf771d8fe"
        ],
        [
            "assert (Hmem1 : S.mem p1 x = true).",
            "VernacExtend",
            "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
        ],
        [
            "rewrite <- HEq in Hmem1'.",
            "VernacExtend",
            "8c9dd938ea5509b505abd1a20a5993907e307814"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem1'; try assumption.",
            "VernacExtend",
            "f164e2341f39233a5ad449154bd2a8370122eed7"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem1'; assumption.",
            "VernacExtend",
            "681492acb6561aeaf7c2e96426ff17c2bce9d369"
        ],
        [
            "assert (Hmem3 : S.mem p3 x = true).",
            "VernacExtend",
            "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
        ],
        [
            "rewrite <- HEq in Hmem3'.",
            "VernacExtend",
            "a05e74eb04f449f2caeea586c2136d3b90967362"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem3'; try assumption.",
            "VernacExtend",
            "9ca07e63d252d2b971ea9d2dc871845bd1e5805a"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem3'; assumption.",
            "VernacExtend",
            "0712d60d6dc23329f028cfb4919de0b6f841062e"
        ],
        [
            "rewrite <- HB.",
            "VernacExtend",
            "da54ab0bf36ea428dcdfb8f782f98549d1196250"
        ],
        [
            "unfold ss_ok in HSSF.",
            "VernacExtend",
            "6c7889413aaf4461862ae95e71e2fd145390edd3"
        ],
        [
            "apply HSSF with x.",
            "VernacExtend",
            "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "do 2 (rewrite andb_true_iff); repeat split; assumption.",
            "VernacExtend",
            "5d181b3410061ca9e43fb7a168714c6e5551d29e"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (Hmem3 : S.mem pb x = true).",
            "VernacExtend",
            "76b01d5667b5f1c55cc634b01904ffc9e8a0273a"
        ],
        [
            "unfold partition in HIn.",
            "VernacExtend",
            "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
        ],
        [
            "apply SS.partition_spec1 in HIn; try apply proper_4.",
            "VernacExtend",
            "06f37bc7a625ae9a00aa2079b832da2f01c33884"
        ],
        [
            "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
            "VernacExtend",
            "a7c9013642ed49e0dfd76562445c749cf771d8fe"
        ],
        [
            "assert (Hmem1 : S.mem p1 x = true).",
            "VernacExtend",
            "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
        ],
        [
            "rewrite <- HEq in Hmem1'.",
            "VernacExtend",
            "8c9dd938ea5509b505abd1a20a5993907e307814"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem1'; try assumption.",
            "VernacExtend",
            "f164e2341f39233a5ad449154bd2a8370122eed7"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem1'; assumption.",
            "VernacExtend",
            "681492acb6561aeaf7c2e96426ff17c2bce9d369"
        ],
        [
            "assert (Hmem2 : S.mem p2 x = true).",
            "VernacExtend",
            "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
        ],
        [
            "rewrite <- HEq in Hmem2'.",
            "VernacExtend",
            "695f18d9676847d06f13d7413633555db45dfbeb"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2'; try assumption.",
            "VernacExtend",
            "ba5833f2cc92e8dfc40ffd14b6653de0ff8f9d2b"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem2'; assumption.",
            "VernacExtend",
            "520899af16582b69ca428a5d019d345edffc99ab"
        ],
        [
            "rewrite <- HB.",
            "VernacExtend",
            "da54ab0bf36ea428dcdfb8f782f98549d1196250"
        ],
        [
            "unfold ss_ok in HSSF.",
            "VernacExtend",
            "6c7889413aaf4461862ae95e71e2fd145390edd3"
        ],
        [
            "apply HSSF with x.",
            "VernacExtend",
            "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "do 2 (rewrite andb_true_iff); repeat split; assumption.",
            "VernacExtend",
            "5d181b3410061ca9e43fb7a168714c6e5551d29e"
        ],
        [
            "assert (Hmem1 : S.mem p1 x = true).",
            "VernacExtend",
            "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
        ],
        [
            "rewrite <- HEq in Hmem1'.",
            "VernacExtend",
            "8c9dd938ea5509b505abd1a20a5993907e307814"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem1'; try assumption.",
            "VernacExtend",
            "f164e2341f39233a5ad449154bd2a8370122eed7"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem1'; assumption.",
            "VernacExtend",
            "681492acb6561aeaf7c2e96426ff17c2bce9d369"
        ],
        [
            "assert (Hmem2 : S.mem p2 x = true).",
            "VernacExtend",
            "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
        ],
        [
            "rewrite <- HEq in Hmem2'.",
            "VernacExtend",
            "695f18d9676847d06f13d7413633555db45dfbeb"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem2'; try assumption.",
            "VernacExtend",
            "ba5833f2cc92e8dfc40ffd14b6653de0ff8f9d2b"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem2'; assumption.",
            "VernacExtend",
            "520899af16582b69ca428a5d019d345edffc99ab"
        ],
        [
            "assert (Hmem3 : S.mem p3 x = true).",
            "VernacExtend",
            "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
        ],
        [
            "rewrite <- HEq in Hmem3'.",
            "VernacExtend",
            "a05e74eb04f449f2caeea586c2136d3b90967362"
        ],
        [
            "rewrite SWP.Dec.F.add_neq_b in Hmem3'; try assumption.",
            "VernacExtend",
            "9ca07e63d252d2b971ea9d2dc871845bd1e5805a"
        ],
        [
            "rewrite SWP.Dec.F.remove_neq_b in Hmem3'; assumption.",
            "VernacExtend",
            "0712d60d6dc23329f028cfb4919de0b6f841062e"
        ],
        [
            "unfold ss_ok in HSSF.",
            "VernacExtend",
            "6c7889413aaf4461862ae95e71e2fd145390edd3"
        ],
        [
            "apply HSSF with x.",
            "VernacExtend",
            "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "do 2 (rewrite andb_true_iff); repeat split; assumption.",
            "VernacExtend",
            "5d181b3410061ca9e43fb7a168714c6e5551d29e"
        ],
        [
            "unfold ss_ok in HSSa.",
            "VernacExtend",
            "5506597d803892f065c51c21ea869aa50aa90098"
        ],
        [
            "apply HSSa with s'; try assumption.",
            "VernacExtend",
            "483073a871efc01933db69a8dea5c55ebba51814"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "clear HSSF; assert (HSSF := HSSF'); clear HSSF'.",
            "VernacExtend",
            "6d2f8ac0e462908f69cabeb9b2de7a40cfa9e5c3"
        ],
        [
            "unfold ss_ok in HSSF.",
            "VernacExtend",
            "6c7889413aaf4461862ae95e71e2fd145390edd3"
        ],
        [
            "apply HSSF with s; try assumption.",
            "VernacExtend",
            "bbb931199e153c8186c8087bccf446a4fcd1789e"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "assert (HSSS : ss_ok (snd_ss (partition_ss pb ss)) interp).",
            "VernacExtend",
            "6fbb011829e002b4b8a935ff0100f4cf9d24024b"
        ],
        [
            "clear Hmem; clear p1; clear p2; clear p3.",
            "VernacExtend",
            "ed8b004eb7b25736f8233ac8f00965d124c1bd73"
        ],
        [
            "intros s' Hs'.",
            "VernacExtend",
            "3deadcc30608da9a6aff57f4af0e4fa25bf0814d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_2 in Hs'.",
            "VernacExtend",
            "9f1b5a4aa67d65feb6f955d624cb5e564a52656e"
        ],
        [
            "unfold partition in Hs'.",
            "VernacExtend",
            "8f23a393cf03e9312767424229b6ae7059ad968d"
        ],
        [
            "apply SS.partition_spec2 in Hs'; try apply proper_4.",
            "VernacExtend",
            "8a48ad989e9a52b91f4273c8eda68c63baadf331"
        ],
        [
            "apply SSWEqP.MP.Dec.F.filter_1 in Hs'; try apply proper_5.",
            "VernacExtend",
            "17fca7cfc698b5f67e7aa1c133b908b5178aa0cc"
        ],
        [
            "unfold ss_ok in HSS.",
            "VernacExtend",
            "0c6f6735f17e5226ced7397bdd7b7242c8c9ee11"
        ],
        [
            "apply HSS with s'; try assumption.",
            "VernacExtend",
            "a9c6fd2fc0a955d9feea733775679d279a605023"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "unfold ss_ok in HSSS.",
            "VernacExtend",
            "fdc1cc8671bafe9b053a240f69a56b02785f9916"
        ],
        [
            "apply HSSS with s; try assumption.",
            "VernacExtend",
            "7fad1c7bf1321435ac993a0dddbe6a3256b9b66f"
        ],
        [
            "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition partition_sp_1 p sp := SP.partition (fun e => Pos.eqb (fstpp e) p || Pos.eqb (sndpp e) p) sp.",
            "VernacDefinition",
            "7133eb24d5ba582b91b9040fded0d65a8848e02a"
        ],
        [
            "Definition partition_sp_2 p sp := SP.partition (fun e => Pos.eqb (fstpp e) p) sp.",
            "VernacDefinition",
            "8ea76982cd24c62911ee35ba07e47e11d81fda9f"
        ],
        [
            "Definition fst_sp (pair : SP.t * SP.t) := match pair with |(a,b) => a end.",
            "VernacDefinition",
            "fb419be09e26e6f89f6b7bb8d9ef0beeb74507d7"
        ],
        [
            "Definition snd_sp (pair : SP.t * SP.t) := match pair with |(a,b) => b end.",
            "VernacDefinition",
            "a3d7534e9a15c2040c6addf33705bc98f766c9b3"
        ],
        [
            "Definition new_pair_1 pair (pos : positive) := (pos, sndpp(pair)).",
            "VernacDefinition",
            "95d002baf41c6f8c23f10af0b79a2e152eb72cb5"
        ],
        [
            "Definition new_pair_2 pair (pos : positive) := (fstpp(pair), pos).",
            "VernacDefinition",
            "4c0a6b4d3d70e230ed36b067ebe279d27f98a618"
        ],
        [
            "Definition subst_in_sp_aux_1 := (fun pos pair sp => SP.add (new_pair_1 pair pos) sp).",
            "VernacDefinition",
            "493ac6514aff20212c0ba98293de8d6eab9a752f"
        ],
        [
            "Definition subst_in_sp_aux_2 := (fun pos pair sp => SP.add (new_pair_2 pair pos) sp).",
            "VernacDefinition",
            "07854eca2cde28c83cbd0c41fa8ba3c67805fe23"
        ],
        [
            "Definition subst_in_sp p1 p2 sp := let pair_1 := partition_sp_1 p2 sp in let sp_to_modify := fst_sp(pair_1) in let sp_to_keep := snd_sp(pair_1) in let pair_2 := partition_sp_2 p2 sp_to_modify in let sp_to_modify_f := fst_sp(pair_2) in let sp_to_modify_s := snd_sp(pair_2) in let newsp_to_modify_f := SP.fold (subst_in_sp_aux_1 p1) sp_to_modify_f SP.empty in let newsp_to_modify_s := SP.fold (subst_in_sp_aux_2 p1) sp_to_modify_s SP.empty in SP.union (SP.union newsp_to_modify_f newsp_to_modify_s) sp_to_keep.",
            "VernacDefinition",
            "facb67c82cb48b08146f4678616c1cb543da6461"
        ],
        [
            "Lemma proper_6 : forall p, Proper ((fun t1 t2 : SetOfPairsOfPositiveOrderedType.t => Pos.eq (fstpp t1) (fstpp t2) /\\ Pos.eq (sndpp t1) (sndpp t2)) ==> eq) (fun e : SP.elt => (fstpp e =? p)%positive || (sndpp e =? p)%positive).",
            "VernacStartTheoremProof",
            "172d06566a16b92597cb9904e8bb5e1a03db85ab"
        ],
        [
            "intros p x y Hxy.",
            "VernacExtend",
            "58982029c7d1027c48a0351562281e9a31a3330f"
        ],
        [
            "destruct Hxy as [Hxyf Hxys].",
            "VernacExtend",
            "a23ca5383e55f028d233d8b68b05f2fc0ec6b690"
        ],
        [
            "rewrite Hxyf; rewrite Hxys.",
            "VernacExtend",
            "2d74648f5d92f95f2793ff51436ff84b8bac5d33"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proper_7 : forall p, Proper ((fun t1 t2 : SetOfPairsOfPositiveOrderedType.t => Pos.eq (fstpp t1) (fstpp t2) /\\ Pos.eq (sndpp t1) (sndpp t2)) ==> eq) (fun x : SP.elt => negb ((fstpp x =? p)%positive || (sndpp x =? p)%positive)).",
            "VernacStartTheoremProof",
            "851e8eb57d0a4bd7f6e124ad6c9b57f0f6e6ce90"
        ],
        [
            "intros p x y Hxy.",
            "VernacExtend",
            "58982029c7d1027c48a0351562281e9a31a3330f"
        ],
        [
            "destruct Hxy as [Hxyf Hxys].",
            "VernacExtend",
            "a23ca5383e55f028d233d8b68b05f2fc0ec6b690"
        ],
        [
            "rewrite Hxyf; rewrite Hxys.",
            "VernacExtend",
            "2d74648f5d92f95f2793ff51436ff84b8bac5d33"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proper_8 : forall p, Proper ((fun t1 t2 : SetOfPairsOfPositiveOrderedType.t => Pos.eq (fstpp t1) (fstpp t2) /\\ Pos.eq (sndpp t1) (sndpp t2)) ==> eq) (fun e : SP.elt => (fstpp e =? p)%positive).",
            "VernacStartTheoremProof",
            "c4d2563cc54943144e48147158c3713f4e0ac9bb"
        ],
        [
            "intros p x y Hxy.",
            "VernacExtend",
            "58982029c7d1027c48a0351562281e9a31a3330f"
        ],
        [
            "destruct Hxy as [Hxyf Hxys].",
            "VernacExtend",
            "a23ca5383e55f028d233d8b68b05f2fc0ec6b690"
        ],
        [
            "rewrite Hxyf.",
            "VernacExtend",
            "aa6148dd89b9d4bb378d64655cc5110db122ad76"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proper_9 : forall p, Proper ((fun t1 t2 : SetOfPairsOfPositiveOrderedType.t => Pos.eq (fstpp t1) (fstpp t2) /\\ Pos.eq (sndpp t1) (sndpp t2)) ==> eq) (fun x : SP.elt => negb (fstpp x =? p)%positive).",
            "VernacStartTheoremProof",
            "aded970640b65023de2b18a27ef2232a13d27c1b"
        ],
        [
            "intros p x y Hxy.",
            "VernacExtend",
            "58982029c7d1027c48a0351562281e9a31a3330f"
        ],
        [
            "destruct Hxy as [Hxyf Hxys].",
            "VernacExtend",
            "a23ca5383e55f028d233d8b68b05f2fc0ec6b690"
        ],
        [
            "rewrite Hxyf.",
            "VernacExtend",
            "aa6148dd89b9d4bb378d64655cc5110db122ad76"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subst_sp_ok : forall (A B : COLTpoint) (H : A = B) pa pb sp (interp : positive -> COLTpoint), interp pa = A -> interp pb = B -> sp_ok sp interp -> sp_ok (subst_in_sp pa pb sp) interp.",
            "VernacStartTheoremProof",
            "f2902852092102639401a2e56babc7bbb4638b40"
        ],
        [
            "intros A B H pa pb sp interp HA HB HSP.",
            "VernacExtend",
            "1f0b7432365db393dbddf5b180327dcca87c93ba"
        ],
        [
            "unfold subst_in_sp.",
            "VernacExtend",
            "ad75e1e5f915cc135bc4ae1e247c49834d7aa9b4"
        ],
        [
            "unfold sp_ok.",
            "VernacExtend",
            "4064042813c4c530bb8bbcca6ae9cdc475e09611"
        ],
        [
            "intros p Hp.",
            "VernacExtend",
            "cf737bd4e185c03175335af1ca6ae52da34cba56"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_2 in Hp.",
            "VernacExtend",
            "e9400b1fd4b603a5082d762c6d6857e69c09163c"
        ],
        [
            "do 2 rewrite SPWEqP.MP.Dec.F.union_iff in Hp.",
            "VernacExtend",
            "8a26e834956f81b7351ccf283ed04cbb98fce7eb"
        ],
        [
            "elim Hp; intro HInAux; clear Hp.",
            "VernacExtend",
            "0faf5d302d0d31bb140c93ec93d6830dadcecb2c"
        ],
        [
            "assert (HSPM : sp_ok (fst_sp (partition_sp_1 pb sp)) interp).",
            "VernacExtend",
            "7ada2cff9b40a45667c253eabf258c0cf27dc663"
        ],
        [
            "intros p' Hp'.",
            "VernacExtend",
            "d44cbe44f23a82fddbe700c6789b711bf23981fd"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
            "VernacExtend",
            "bd0d45784d30adf12495773f93ff771720f0b3ac"
        ],
        [
            "unfold partition_sp_1 in Hp'.",
            "VernacExtend",
            "b90c7100f70c8b06570e013f9432a1f36aca9739"
        ],
        [
            "apply SP.partition_spec1 in Hp'; try apply proper_6.",
            "VernacExtend",
            "2fcb5c7b49c5503a0b1f0033be3a8f76855b3ddd"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_1 in Hp'; try apply proper_6.",
            "VernacExtend",
            "d7fed07cdc2426fc74107c2a16d934e9083ae590"
        ],
        [
            "unfold sp_ok in HSP.",
            "VernacExtend",
            "21b83342a14424d3a051b335fed250b0e9dd0187"
        ],
        [
            "apply HSP; try assumption.",
            "VernacExtend",
            "08cfdf823931beaa23603fd914575874b73389d3"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
        ],
        [
            "clear HSP.",
            "VernacExtend",
            "3879f53d61248ee1341ae690be862be474cf56bc"
        ],
        [
            "elim HInAux; intro HIn; clear HInAux.",
            "VernacExtend",
            "a9839f60ab92ad5a68974d1ab1be6c3fe56d5357"
        ],
        [
            "assert (HSPF : sp_ok (fst_sp (partition_sp_2 pb (fst_sp (partition_sp_1 pb sp)))) interp).",
            "VernacExtend",
            "6c8b924c7ffdf9a4dac04a35e2ad55c19a0a6d44"
        ],
        [
            "intros p' Hp'.",
            "VernacExtend",
            "d44cbe44f23a82fddbe700c6789b711bf23981fd"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
            "VernacExtend",
            "bd0d45784d30adf12495773f93ff771720f0b3ac"
        ],
        [
            "unfold partition_sp_1 in Hp'.",
            "VernacExtend",
            "b90c7100f70c8b06570e013f9432a1f36aca9739"
        ],
        [
            "apply SP.partition_spec1 in Hp'; try apply proper_8.",
            "VernacExtend",
            "7fb3dbd3f6f6a87b9df2f684d731a5515739c3f3"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_1 in Hp'; try apply proper_8.",
            "VernacExtend",
            "04a0c66e552b6c6d834e6df2384f82deb76edd7b"
        ],
        [
            "unfold sp_ok in HSPM.",
            "VernacExtend",
            "538f6bf5c06de4fd94c3fd1533789c62ad3accc6"
        ],
        [
            "apply HSPM; try assumption.",
            "VernacExtend",
            "381444f401e80649da9fc604c35f22241990bb39"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
        ],
        [
            "clear HSPM.",
            "VernacExtend",
            "3636e00fcd15c960fd3c68003980a2498ea889c4"
        ],
        [
            "assert (HSPF' : sp_ok (SP.fold (subst_in_sp_aux_1 pa) (fst_sp (partition_sp_2 pb (fst_sp (partition_sp_1 pb sp)))) SP.empty) interp).",
            "VernacExtend",
            "2637822e34a7a469100100e710383336fa6837b2"
        ],
        [
            "apply SPWEqP.MP.fold_rec_nodep; try apply sp_ok_empty.",
            "VernacExtend",
            "48264abecdc6a8f704dee6a9461c4882a0f08d17"
        ],
        [
            "clear HIn.",
            "VernacExtend",
            "1d48772959529fd575bde9f6388854cba83cb7e0"
        ],
        [
            "intros x a HInRec HSPRec.",
            "VernacExtend",
            "ae04372b3d5268016389725a1743ca0a92d5f7e7"
        ],
        [
            "intros p' Hp'.",
            "VernacExtend",
            "d44cbe44f23a82fddbe700c6789b711bf23981fd"
        ],
        [
            "unfold subst_in_sp_aux_1 in *.",
            "VernacExtend",
            "6fca745491ea62384748816fcbcda96d989d841b"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
            "VernacExtend",
            "bd0d45784d30adf12495773f93ff771720f0b3ac"
        ],
        [
            "rewrite SPWEqP.MP.Dec.F.add_iff in Hp'.",
            "VernacExtend",
            "bfdfe5376c9ac6ef988a6ae217e9940ef2b14a03"
        ],
        [
            "elim Hp'; intro HIn; clear Hp'.",
            "VernacExtend",
            "1689145593bba289608cebc7312da8feff7ad922"
        ],
        [
            "destruct HIn as [HEq1 HEq2].",
            "VernacExtend",
            "6daf06da13423befd478c7ccd216417d57a53803"
        ],
        [
            "rewrite <- HEq1; rewrite <- HEq2.",
            "VernacExtend",
            "3bee1ae0c146641b1c77377224fce5fd9c2fd843"
        ],
        [
            "unfold new_pair_1.",
            "VernacExtend",
            "5a4419ec5f6b9386d6ec17e62a74bac34e900b9c"
        ],
        [
            "clear HSPRec; clear a.",
            "VernacExtend",
            "d51b5b72a5a60fd4216b323e9ed61db75fe966a6"
        ],
        [
            "elim (Pos.min_spec pa (sndpp(x))); intro Hmin.",
            "VernacExtend",
            "df89997dcb65dabe2c60a331cdfd2a951f60729b"
        ],
        [
            "destruct Hmin as [HLt Hmin].",
            "VernacExtend",
            "79e8a1fddc3ec618881f184f51938c9a1c68479e"
        ],
        [
            "assert (Hmax : Pos.max pa (sndpp(x)) = (sndpp(x))) by (apply Pos.max_r; apply Pos.lt_le_incl; assumption).",
            "VernacExtend",
            "b16d3d001282003d5b8e4d807fc658e7f2f38a07"
        ],
        [
            "assert (HF : fstpp(pa, sndpp(x)) = pa) by (unfold fstpp; assumption).",
            "VernacExtend",
            "ac04c4164a3a3952ac85de5ab6e38180a935511d"
        ],
        [
            "assert (HS : sndpp(pa, sndpp(x)) = sndpp(x)) by (unfold sndpp; assumption).",
            "VernacExtend",
            "f4b6acb18459dbaf909bad699e6da91032bbb237"
        ],
        [
            "rewrite HF; rewrite HS.",
            "VernacExtend",
            "ee3bde2ba1b796917e290410b3f25d55a22a08ae"
        ],
        [
            "assert (Hpb : fstpp(x) = pb).",
            "VernacExtend",
            "e52fda7c49f27b56a70deb76b7d16a2d49aaf377"
        ],
        [
            "unfold partition_sp_2 in HInRec.",
            "VernacExtend",
            "f7f58445c859c0fd81a45956e3c07868390655c4"
        ],
        [
            "apply SP.partition_spec1 in HInRec; try apply proper_8.",
            "VernacExtend",
            "24da1138b98374d734036216fe838b473128d4b4"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_2 in HInRec; try apply proper_8.",
            "VernacExtend",
            "6d53c9648a2cebf4c0e640a4b55bbd77e77aacd1"
        ],
        [
            "apply Ndec.Peqb_complete.",
            "VernacExtend",
            "2195172d6452a85b5ac4faff2cdf92593d7de358"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro HEq4.",
            "VernacExtend",
            "7be3df6d1c773f50f088b1f059acfe7a07644070"
        ],
        [
            "unfold sp_ok in HSPF.",
            "VernacExtend",
            "10fd94590d88075bd1a1cf0b65808aa14c4da07f"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1 in HInRec.",
            "VernacExtend",
            "63fb6174a2f9ae5adc29901fa0187f8e9b0cb886"
        ],
        [
            "apply (HSPF x) in HInRec.",
            "VernacExtend",
            "5817a26ad64e114c567be40d13d768d079d52013"
        ],
        [
            "apply HInRec.",
            "VernacExtend",
            "a2e759c69ac985c67b8b6f29cc0a9aca204e288d"
        ],
        [
            "rewrite Hpb; rewrite <- HEq4; rewrite HA; rewrite HB; rewrite H; reflexivity.",
            "VernacExtend",
            "5456b682c9807bc670cacf723cc545d6b1b3169d"
        ],
        [
            "destruct Hmin as [HLe Hmin].",
            "VernacExtend",
            "354c02d4f633b5d709524a10f1c4c7d4355bbc2d"
        ],
        [
            "assert (Hmax : Pos.max pa (sndpp(x)) = pa) by (apply Pos.max_l; assumption).",
            "VernacExtend",
            "5468535630274d32c47aff281cdef01b4323cf9d"
        ],
        [
            "assert (HF : fstpp(pa, sndpp(x)) = sndpp(x)) by (unfold fstpp; assumption).",
            "VernacExtend",
            "874bebbeaa841bfd508d35ead4a07f4197906fa7"
        ],
        [
            "assert (HS : sndpp(pa, sndpp(x)) = pa) by (unfold sndpp; assumption).",
            "VernacExtend",
            "96d0c0df3121b5677c7b0b08856e87b0c134fab7"
        ],
        [
            "rewrite HF; rewrite HS.",
            "VernacExtend",
            "ee3bde2ba1b796917e290410b3f25d55a22a08ae"
        ],
        [
            "assert (Hpb : fstpp(x) = pb).",
            "VernacExtend",
            "e52fda7c49f27b56a70deb76b7d16a2d49aaf377"
        ],
        [
            "unfold partition_sp_2 in HInRec.",
            "VernacExtend",
            "f7f58445c859c0fd81a45956e3c07868390655c4"
        ],
        [
            "apply SP.partition_spec1 in HInRec; try apply proper_8.",
            "VernacExtend",
            "24da1138b98374d734036216fe838b473128d4b4"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_2 in HInRec; try apply proper_8.",
            "VernacExtend",
            "6d53c9648a2cebf4c0e640a4b55bbd77e77aacd1"
        ],
        [
            "apply Ndec.Peqb_complete.",
            "VernacExtend",
            "2195172d6452a85b5ac4faff2cdf92593d7de358"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro HEq4.",
            "VernacExtend",
            "7be3df6d1c773f50f088b1f059acfe7a07644070"
        ],
        [
            "unfold sp_ok in HSPF.",
            "VernacExtend",
            "10fd94590d88075bd1a1cf0b65808aa14c4da07f"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1 in HInRec.",
            "VernacExtend",
            "63fb6174a2f9ae5adc29901fa0187f8e9b0cb886"
        ],
        [
            "apply (HSPF x) in HInRec.",
            "VernacExtend",
            "5817a26ad64e114c567be40d13d768d079d52013"
        ],
        [
            "apply HInRec.",
            "VernacExtend",
            "a2e759c69ac985c67b8b6f29cc0a9aca204e288d"
        ],
        [
            "rewrite Hpb; rewrite HEq4; rewrite HA; rewrite HB; rewrite H; reflexivity.",
            "VernacExtend",
            "fe801916ff3ebc201d54f33a8a01cc2320528699"
        ],
        [
            "unfold sp_ok in HSPRec.",
            "VernacExtend",
            "dfc91ee4bb83eb9691b20184f0fffbbea0990c63"
        ],
        [
            "apply HSPRec.",
            "VernacExtend",
            "0977ac206c87cadf000e78af8c062fc2287c359e"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
        ],
        [
            "clear HSPF; assert (HSPF := HSPF'); clear HSPF'.",
            "VernacExtend",
            "c95c968101bbb48cb9b1a45842b140297960260f"
        ],
        [
            "unfold sp_ok in HSPF.",
            "VernacExtend",
            "10fd94590d88075bd1a1cf0b65808aa14c4da07f"
        ],
        [
            "apply HSPF.",
            "VernacExtend",
            "f00d3bfa2d47e92b48f8528a720a9a7cb380aa75"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
        ],
        [
            "assert (HSPS : sp_ok (snd_sp (partition_sp_2 pb (fst_sp (partition_sp_1 pb sp)))) interp).",
            "VernacExtend",
            "5ab6d810a3ecaf73a7a3da2bc8c4041a9158189e"
        ],
        [
            "intros p' Hp'.",
            "VernacExtend",
            "d44cbe44f23a82fddbe700c6789b711bf23981fd"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
            "VernacExtend",
            "bd0d45784d30adf12495773f93ff771720f0b3ac"
        ],
        [
            "unfold partition_sp_1 in Hp'.",
            "VernacExtend",
            "b90c7100f70c8b06570e013f9432a1f36aca9739"
        ],
        [
            "apply SP.partition_spec2 in Hp'; try apply proper_8.",
            "VernacExtend",
            "f4870e6eb9b62de4cec54d723585fc5fb3cf7e8c"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_1 in Hp'; try apply proper_9.",
            "VernacExtend",
            "4085f7c9f6d2061006308ecd4af562bab0fbe387"
        ],
        [
            "unfold sp_ok in HSPM.",
            "VernacExtend",
            "538f6bf5c06de4fd94c3fd1533789c62ad3accc6"
        ],
        [
            "apply HSPM; try assumption.",
            "VernacExtend",
            "381444f401e80649da9fc604c35f22241990bb39"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
        ],
        [
            "clear HSPM.",
            "VernacExtend",
            "3636e00fcd15c960fd3c68003980a2498ea889c4"
        ],
        [
            "assert (HSPS' : sp_ok (SP.fold (subst_in_sp_aux_2 pa) (snd_sp (partition_sp_2 pb (fst_sp (partition_sp_1 pb sp)))) SP.empty) interp).",
            "VernacExtend",
            "4883d44d6c1fa16402c94ae93a0e8e6ec48195a4"
        ],
        [
            "apply SPWEqP.MP.fold_rec_nodep; try apply sp_ok_empty.",
            "VernacExtend",
            "48264abecdc6a8f704dee6a9461c4882a0f08d17"
        ],
        [
            "clear HIn.",
            "VernacExtend",
            "1d48772959529fd575bde9f6388854cba83cb7e0"
        ],
        [
            "intros x a HInRec HSPRec.",
            "VernacExtend",
            "ae04372b3d5268016389725a1743ca0a92d5f7e7"
        ],
        [
            "intros p' Hp'.",
            "VernacExtend",
            "d44cbe44f23a82fddbe700c6789b711bf23981fd"
        ],
        [
            "unfold subst_in_sp_aux_2 in *.",
            "VernacExtend",
            "26ff046b4e6ad3fdb6777185e59a8d30717de979"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
            "VernacExtend",
            "bd0d45784d30adf12495773f93ff771720f0b3ac"
        ],
        [
            "rewrite SPWEqP.MP.Dec.F.add_iff in Hp'.",
            "VernacExtend",
            "bfdfe5376c9ac6ef988a6ae217e9940ef2b14a03"
        ],
        [
            "elim Hp'; intro HIn; clear Hp'.",
            "VernacExtend",
            "1689145593bba289608cebc7312da8feff7ad922"
        ],
        [
            "destruct HIn as [HEq1 HEq2].",
            "VernacExtend",
            "6daf06da13423befd478c7ccd216417d57a53803"
        ],
        [
            "rewrite <- HEq1; rewrite <- HEq2.",
            "VernacExtend",
            "3bee1ae0c146641b1c77377224fce5fd9c2fd843"
        ],
        [
            "unfold new_pair_2.",
            "VernacExtend",
            "d6d984c88c8012f677abbcd9bad3a40e291147d0"
        ],
        [
            "clear HSPRec; clear a.",
            "VernacExtend",
            "d51b5b72a5a60fd4216b323e9ed61db75fe966a6"
        ],
        [
            "elim (Pos.min_spec (fstpp(x)) pa); intro Hmin.",
            "VernacExtend",
            "e54683c395464ea3af0f5f8158c21e8dcc5b52dc"
        ],
        [
            "destruct Hmin as [HLt Hmin].",
            "VernacExtend",
            "79e8a1fddc3ec618881f184f51938c9a1c68479e"
        ],
        [
            "assert (Hmax : Pos.max (fstpp(x)) pa = pa) by (apply Pos.max_r; apply Pos.lt_le_incl; assumption).",
            "VernacExtend",
            "4cc143c9a58c72eec0865570150f4d61b2d6db79"
        ],
        [
            "assert (HF : fstpp(fstpp(x), pa) = fstpp(x)) by (unfold fstpp; assumption).",
            "VernacExtend",
            "8c39658d48acb02dc562ec2946112119fd8ba3f2"
        ],
        [
            "assert (HS : sndpp(fstpp(x), pa) = pa) by (unfold sndpp; assumption).",
            "VernacExtend",
            "fa629fca80f6907edbea28b021ea465d579e1bbf"
        ],
        [
            "rewrite HF; rewrite HS.",
            "VernacExtend",
            "ee3bde2ba1b796917e290410b3f25d55a22a08ae"
        ],
        [
            "assert (Hpb : sndpp(x) = pb).",
            "VernacExtend",
            "33ad2b308279920eee31ca0fad7b9463d5fd9a95"
        ],
        [
            "assert (HIn : SP.In x (fst_sp (partition_sp_1 pb sp))).",
            "VernacExtend",
            "acb2ad8bceff19dc0783b4dae8044181ae6540ff"
        ],
        [
            "unfold partition_sp_2 in HInRec.",
            "VernacExtend",
            "f7f58445c859c0fd81a45956e3c07868390655c4"
        ],
        [
            "apply SP.partition_spec2 in HInRec; try apply proper_8.",
            "VernacExtend",
            "559e9c37ff6c6f1dd09bd7f6d13b85eb2302e0ec"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_1 in HInRec; try apply proper_9.",
            "VernacExtend",
            "9aa06175a956e5a65a4c7b5cb97a42a4ef50edce"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold partition_sp_2 in HInRec.",
            "VernacExtend",
            "f7f58445c859c0fd81a45956e3c07868390655c4"
        ],
        [
            "apply SP.partition_spec2 in HInRec; try apply proper_8.",
            "VernacExtend",
            "559e9c37ff6c6f1dd09bd7f6d13b85eb2302e0ec"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_2 in HInRec; try apply proper_9.",
            "VernacExtend",
            "ebea96c215cd6acebaa8cf9290648b1751edaa51"
        ],
        [
            "unfold partition_sp_1 in HIn.",
            "VernacExtend",
            "b1fddebce864199bb3aa0c3bbca492d370830420"
        ],
        [
            "apply SP.partition_spec1 in HIn; try apply proper_6.",
            "VernacExtend",
            "f3a5ee699186361fbaccfaa439ace0574a3b6b7c"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_2 in HIn; try apply proper_6.",
            "VernacExtend",
            "80e15299f5b30390c1414be692d6fe21452b12b5"
        ],
        [
            "apply orb_true_iff in HIn.",
            "VernacExtend",
            "088e1aaf2af973af4433ab014a71f2ebbae35888"
        ],
        [
            "elim HIn; intro HEqb; clear HIn.",
            "VernacExtend",
            "7783e18e79480f990c42c6561cbd98b2e3db2bf2"
        ],
        [
            "apply Peqb_true_eq in HEqb.",
            "VernacExtend",
            "27abc4a706f89b86fb6b691c4eabbddc9e68363f"
        ],
        [
            "apply negb_true_iff in HInRec.",
            "VernacExtend",
            "646e916fa95c45aa88c7af0594e1758fd93d080e"
        ],
        [
            "apply Pos.eqb_neq in HInRec.",
            "VernacExtend",
            "57175e680069d0c074e16f1ca80be1c8bdaae3b9"
        ],
        [
            "rewrite HEqb in HInRec.",
            "VernacExtend",
            "0d362ac8f412bc095da21af205497671798bf2d4"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply Peqb_true_eq in HEqb.",
            "VernacExtend",
            "27abc4a706f89b86fb6b691c4eabbddc9e68363f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro HEq4.",
            "VernacExtend",
            "7be3df6d1c773f50f088b1f059acfe7a07644070"
        ],
        [
            "unfold sp_ok in HSPS.",
            "VernacExtend",
            "793759c1534bc34038a160befa9bc8d31e0c57eb"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1 in HInRec.",
            "VernacExtend",
            "63fb6174a2f9ae5adc29901fa0187f8e9b0cb886"
        ],
        [
            "apply (HSPS x) in HInRec.",
            "VernacExtend",
            "5d6e44ba973184564c985cee174b0f442a6f55ac"
        ],
        [
            "apply HInRec.",
            "VernacExtend",
            "a2e759c69ac985c67b8b6f29cc0a9aca204e288d"
        ],
        [
            "rewrite Hpb; rewrite HEq4; rewrite HA; rewrite HB; rewrite H; reflexivity.",
            "VernacExtend",
            "fe801916ff3ebc201d54f33a8a01cc2320528699"
        ],
        [
            "destruct Hmin as [HLe Hmin].",
            "VernacExtend",
            "354c02d4f633b5d709524a10f1c4c7d4355bbc2d"
        ],
        [
            "assert (Hmax : Pos.max (fstpp(x)) pa = fstpp(x)) by (apply Pos.max_l; assumption).",
            "VernacExtend",
            "db511693db047e740fd3e9745979ce350acb90cc"
        ],
        [
            "assert (HF : fstpp(fstpp(x), pa) = pa) by (unfold fstpp; assumption).",
            "VernacExtend",
            "90b06a103e1dfce27f071d565ac1ec2c3f170dbc"
        ],
        [
            "assert (HS : sndpp(fstpp(x), pa) = fstpp(x)) by (unfold sndpp; assumption).",
            "VernacExtend",
            "f980d77550ed50c11e7176a6f527dcf5344ad11d"
        ],
        [
            "rewrite HF; rewrite HS.",
            "VernacExtend",
            "ee3bde2ba1b796917e290410b3f25d55a22a08ae"
        ],
        [
            "assert (Hpb : sndpp(x) = pb).",
            "VernacExtend",
            "33ad2b308279920eee31ca0fad7b9463d5fd9a95"
        ],
        [
            "assert (HIn : SP.In x (fst_sp (partition_sp_1 pb sp))).",
            "VernacExtend",
            "acb2ad8bceff19dc0783b4dae8044181ae6540ff"
        ],
        [
            "unfold partition_sp_2 in HInRec.",
            "VernacExtend",
            "f7f58445c859c0fd81a45956e3c07868390655c4"
        ],
        [
            "apply SP.partition_spec2 in HInRec; try apply proper_8.",
            "VernacExtend",
            "559e9c37ff6c6f1dd09bd7f6d13b85eb2302e0ec"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_1 in HInRec; try apply proper_9.",
            "VernacExtend",
            "9aa06175a956e5a65a4c7b5cb97a42a4ef50edce"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold partition_sp_2 in HInRec.",
            "VernacExtend",
            "f7f58445c859c0fd81a45956e3c07868390655c4"
        ],
        [
            "apply SP.partition_spec2 in HInRec; try apply proper_8.",
            "VernacExtend",
            "559e9c37ff6c6f1dd09bd7f6d13b85eb2302e0ec"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_2 in HInRec; try apply proper_9.",
            "VernacExtend",
            "ebea96c215cd6acebaa8cf9290648b1751edaa51"
        ],
        [
            "unfold partition_sp_1 in HIn.",
            "VernacExtend",
            "b1fddebce864199bb3aa0c3bbca492d370830420"
        ],
        [
            "apply SP.partition_spec1 in HIn; try apply proper_6.",
            "VernacExtend",
            "f3a5ee699186361fbaccfaa439ace0574a3b6b7c"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_2 in HIn; try apply proper_6.",
            "VernacExtend",
            "80e15299f5b30390c1414be692d6fe21452b12b5"
        ],
        [
            "apply orb_true_iff in HIn.",
            "VernacExtend",
            "088e1aaf2af973af4433ab014a71f2ebbae35888"
        ],
        [
            "elim HIn; intro HEqb; clear HIn.",
            "VernacExtend",
            "7783e18e79480f990c42c6561cbd98b2e3db2bf2"
        ],
        [
            "apply Peqb_true_eq in HEqb.",
            "VernacExtend",
            "27abc4a706f89b86fb6b691c4eabbddc9e68363f"
        ],
        [
            "apply negb_true_iff in HInRec.",
            "VernacExtend",
            "646e916fa95c45aa88c7af0594e1758fd93d080e"
        ],
        [
            "apply Pos.eqb_neq in HInRec.",
            "VernacExtend",
            "57175e680069d0c074e16f1ca80be1c8bdaae3b9"
        ],
        [
            "rewrite HEqb in HInRec.",
            "VernacExtend",
            "0d362ac8f412bc095da21af205497671798bf2d4"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply Peqb_true_eq in HEqb.",
            "VernacExtend",
            "27abc4a706f89b86fb6b691c4eabbddc9e68363f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro HEq4.",
            "VernacExtend",
            "7be3df6d1c773f50f088b1f059acfe7a07644070"
        ],
        [
            "unfold sp_ok in HSPS.",
            "VernacExtend",
            "793759c1534bc34038a160befa9bc8d31e0c57eb"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1 in HInRec.",
            "VernacExtend",
            "63fb6174a2f9ae5adc29901fa0187f8e9b0cb886"
        ],
        [
            "apply (HSPS x) in HInRec.",
            "VernacExtend",
            "5d6e44ba973184564c985cee174b0f442a6f55ac"
        ],
        [
            "apply HInRec.",
            "VernacExtend",
            "a2e759c69ac985c67b8b6f29cc0a9aca204e288d"
        ],
        [
            "rewrite Hpb; rewrite <- HEq4; rewrite HA; rewrite HB; rewrite H; reflexivity.",
            "VernacExtend",
            "5456b682c9807bc670cacf723cc545d6b1b3169d"
        ],
        [
            "unfold sp_ok in HSPRec.",
            "VernacExtend",
            "dfc91ee4bb83eb9691b20184f0fffbbea0990c63"
        ],
        [
            "apply HSPRec.",
            "VernacExtend",
            "0977ac206c87cadf000e78af8c062fc2287c359e"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
        ],
        [
            "clear HSPS; assert (HSPS := HSPS'); clear HSPS'.",
            "VernacExtend",
            "76a5f018acb8b37751c401c235b6a43b6c2461ad"
        ],
        [
            "unfold sp_ok in HSPS.",
            "VernacExtend",
            "793759c1534bc34038a160befa9bc8d31e0c57eb"
        ],
        [
            "apply HSPS.",
            "VernacExtend",
            "920f991279990f5e33c8698919d57e3b9f50832a"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
        ],
        [
            "assert (HIn := HInAux); clear HInAux.",
            "VernacExtend",
            "560e1a973ce26b4e4deb2ecec839cec71fe19c35"
        ],
        [
            "assert (HSPK : sp_ok (snd_sp (partition_sp_1 pb sp)) interp).",
            "VernacExtend",
            "30ca8c97e650f917347b22985f28675ca5ce708b"
        ],
        [
            "intros p' Hp'.",
            "VernacExtend",
            "d44cbe44f23a82fddbe700c6789b711bf23981fd"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
            "VernacExtend",
            "bd0d45784d30adf12495773f93ff771720f0b3ac"
        ],
        [
            "unfold partition_sp_1 in Hp'.",
            "VernacExtend",
            "b90c7100f70c8b06570e013f9432a1f36aca9739"
        ],
        [
            "apply SP.partition_spec2 in Hp'; try apply proper_6.",
            "VernacExtend",
            "10f3e6dbc8075048593b9ff277457aa0db1f1180"
        ],
        [
            "apply SPWEqP.MP.Dec.F.filter_1 in Hp'; try apply proper_7.",
            "VernacExtend",
            "6eeb479ec5fc55c5601f433734ac2e69f1d43600"
        ],
        [
            "unfold sp_ok in HSP.",
            "VernacExtend",
            "21b83342a14424d3a051b335fed250b0e9dd0187"
        ],
        [
            "apply HSP; try assumption.",
            "VernacExtend",
            "08cfdf823931beaa23603fd914575874b73389d3"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
        ],
        [
            "unfold sp_ok in HSPK.",
            "VernacExtend",
            "ad73bd89c517ac060c25cd3090e24fb2751ac871"
        ],
        [
            "apply HSPK; try assumption.",
            "VernacExtend",
            "9a3c2cabf733f79f9405ee6cc9924b88d3c457ae"
        ],
        [
            "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
            "VernacExtend",
            "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Col_refl.",
            "VernacEndSegment",
            "eb487205be810545b5fb7f8b945340e144214a82"
        ]
    ],
    "proofs": [
        {
            "name": "proper_00",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros s x y Hxy.",
                        "VernacExtend",
                        "2cf35394c69c7ecf050dc4444fd68a29be2ec666"
                    ]
                },
                {
                    "command": [
                        "destruct Hxy as [Hxyfst Hxysnd].",
                        "VernacExtend",
                        "795b9c18d6465525d8168a2b7bbe63b512fcb679"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxyfst.",
                        "VernacExtend",
                        "314a079bf2d3b7091d9eec7352301f280ca58050"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxysnd.",
                        "VernacExtend",
                        "1ba14e4d8227df0ccd22c30ca5050773b3a03f7c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proper_0",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros x1 y1 HXY1.",
                        "VernacExtend",
                        "839d87017942d79600eeec0cf6d4a3a8d53be2f0"
                    ]
                },
                {
                    "command": [
                        "intros x2 y2 HXY2.",
                        "VernacExtend",
                        "72d0f0e4ccac3df1be118fdffeefc22942a18e41"
                    ]
                },
                {
                    "command": [
                        "unfold pick_line; unfold SP.exists_; unfold SP.Raw.exists_.",
                        "VernacExtend",
                        "9a59dd618b1f46fa5697e2ba37b4970e064f795b"
                    ]
                },
                {
                    "command": [
                        "rewrite HXY2.",
                        "VernacExtend",
                        "a96429c1e97436c7f5b03605bec3e952de5a89f7"
                    ]
                },
                {
                    "command": [
                        "induction (SP.this y2); try intuition.",
                        "VernacExtend",
                        "6a2ef9d3eb7490735acca3cb716f1b9e4a57de48"
                    ]
                },
                {
                    "command": [
                        "assert (HEqMem : forall e, S.mem e x1 = S.mem e y1) by (intro; apply SWP.Dec.F.mem_m; intuition).",
                        "VernacExtend",
                        "c7f18e24076f8be2b4e58b458aae397b2a55bdf2"
                    ]
                },
                {
                    "command": [
                        "assert (HEqAI : (S.mem (fstpp a) x1 && S.mem (sndpp a) x1) = (S.mem (fstpp a) y1 && S.mem (sndpp a) y1)) by (rewrite HEqMem; rewrite HEqMem; intuition).",
                        "VernacExtend",
                        "03da1b503e99a761f19c8bfd777beb57c0c6c87c"
                    ]
                },
                {
                    "command": [
                        "rewrite HEqAI.",
                        "VernacExtend",
                        "a958cf8c1336289b400432caec64db74b66a4e6e"
                    ]
                },
                {
                    "command": [
                        "induction (S.mem (fstpp a) y1 && S.mem (sndpp a) y1); intuition.",
                        "VernacExtend",
                        "eca952868cf1009a07e5dbf73810a925716b4671"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proper_1",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros s1 sp.",
                        "VernacExtend",
                        "9ce71080ad4edcffc39d0c11de22bbe0283debcb"
                    ]
                },
                {
                    "command": [
                        "intros x y HXY.",
                        "VernacExtend",
                        "d54666da0000fd8bd617b0c87941a7c833808d02"
                    ]
                },
                {
                    "command": [
                        "assert (HEqI : S.Equal (S.inter s1 x) (S.inter s1 y)) by (apply SWP.inter_equal_2; assumption).",
                        "VernacExtend",
                        "0e12dc4abbd1b25f3b7b1fb3a45dfb16b2f66ae2"
                    ]
                },
                {
                    "command": [
                        "apply proper_0; auto.",
                        "VernacExtend",
                        "204981aa8eb8eb4f01d206a72ec76af8a8adfee2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_witness_ok",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros e f s HP H.",
                        "VernacExtend",
                        "d7e9f08bce61d66800ace0de5491371313df1375"
                    ]
                },
                {
                    "command": [
                        "unfold exists_witness in H.",
                        "VernacExtend",
                        "459fa409f748633674aff369aeb45f44d99639c4"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_2.",
                        "VernacExtend",
                        "80188289b4d4e5f1772ae5a93b6f4e37e2065425"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.choose_mem_1 in H.",
                        "VernacExtend",
                        "0a4056de4ac591f1e507854a750a5e35d9ac42a4"
                    ]
                },
                {
                    "command": [
                        "rewrite SSWEqP.filter_mem in H; try assumption.",
                        "VernacExtend",
                        "eb4e4a44306ec507defbab9f7c603dd055918a73"
                    ]
                },
                {
                    "command": [
                        "apply andb_true_iff in H.",
                        "VernacExtend",
                        "6be4e13be3cc994beedd2c7e4adabd0a944c1be7"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proper_3",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros x1 y1 HXY1.",
                        "VernacExtend",
                        "839d87017942d79600eeec0cf6d4a3a8d53be2f0"
                    ]
                },
                {
                    "command": [
                        "intros x2 y2 HXY2.",
                        "VernacExtend",
                        "72d0f0e4ccac3df1be118fdffeefc22942a18e41"
                    ]
                },
                {
                    "command": [
                        "intros x3 y3 HXY3.",
                        "VernacExtend",
                        "54f000983cd9a32ca7a1cb9a1942bb5c75938ed0"
                    ]
                },
                {
                    "command": [
                        "unfold pick_lines_aux.",
                        "VernacExtend",
                        "45943184ad2c5712be0d323ef3d62a33134778ad"
                    ]
                },
                {
                    "command": [
                        "rewrite HXY3.",
                        "VernacExtend",
                        "5b1462afde59f7b21a3eae8d3170a08c32d86132"
                    ]
                },
                {
                    "command": [
                        "assert (eqop (exists_witness (fun s2 : SS.elt => pick_line (S.inter x1 s2) y3) x2) (exists_witness (fun s2 : SS.elt => pick_line (S.inter y1 s2) y3) y2)).",
                        "VernacExtend",
                        "b3653285a08b49c6fe332248271e501b6bf03fa8"
                    ]
                },
                {
                    "command": [
                        "apply proper_2.",
                        "VernacExtend",
                        "239500027425fb496c426724925002aaaba1a02e"
                    ]
                },
                {
                    "command": [
                        "apply proper_1.",
                        "VernacExtend",
                        "9bcf09b899868f8792d91207a527659acd15ca76"
                    ]
                },
                {
                    "command": [
                        "apply proper_1.",
                        "VernacExtend",
                        "9bcf09b899868f8792d91207a527659acd15ca76"
                    ]
                },
                {
                    "command": [
                        "intro; apply proper_0; try reflexivity.",
                        "VernacExtend",
                        "981cb9faf6e5f3470365e916d1d28dfb06dfb080"
                    ]
                },
                {
                    "command": [
                        "apply SWP.inter_equal_1; assumption.",
                        "VernacExtend",
                        "7d6cb983ff6965f434d050800140b1494715793c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "case_eq (exists_witness (fun s2 : SS.elt => pick_line (S.inter y1 s2) y3) y2); case_eq (exists_witness (fun s2 : SS.elt => pick_line (S.inter x1 s2) y3) x2).",
                        "VernacExtend",
                        "e0bf63f62db774e90aa5bea6dc7d29ad8f9154eb"
                    ]
                },
                {
                    "command": [
                        "simpl; intuition.",
                        "VernacExtend",
                        "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
                    ]
                },
                {
                    "command": [
                        "intros HCN e HCS.",
                        "VernacExtend",
                        "8338ca6af148978e7c03b3f41a4e8bbfe9e3fc45"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "rewrite HCS in H; rewrite HCN in H.",
                        "VernacExtend",
                        "a1c2c5fe4336f6255ec49ed40a5c6f168fbd79c1"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros e HCS HCN.",
                        "VernacExtend",
                        "cc15df2a9851ee6b1782d02c1286e0c94189ae2b"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "rewrite HCS in H; rewrite HCN in H.",
                        "VernacExtend",
                        "a1c2c5fe4336f6255ec49ed40a5c6f168fbd79c1"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pick_lines_ok_1",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 ss sp H.",
                        "VernacExtend",
                        "576376b9f26258a0e021b54acae009f9cd078652"
                    ]
                },
                {
                    "command": [
                        "unfold pick_lines in H.",
                        "VernacExtend",
                        "ad86f66bca02ae441bf753727e66bee90e6d6314"
                    ]
                },
                {
                    "command": [
                        "case_eq (exists_witness (fun s : SS.elt => match pick_lines_aux s (SS.remove s ss) sp with | Some _ => true | None => false end) ss).",
                        "VernacExtend",
                        "489d391982c05984da70a7cb718823693f2f5c87"
                    ]
                },
                {
                    "command": [
                        "intros e1 HEW1.",
                        "VernacExtend",
                        "2a567fdfa1687036465e1fef611850045d37fc9f"
                    ]
                },
                {
                    "command": [
                        "rewrite HEW1 in H.",
                        "VernacExtend",
                        "675a71248c7e01878edf2823776d4e708c05ea35"
                    ]
                },
                {
                    "command": [
                        "unfold pick_lines_aux in H.",
                        "VernacExtend",
                        "208f0ac9a9886cb1abbc88e2dd64a7ec7a9378d4"
                    ]
                },
                {
                    "command": [
                        "case_eq (exists_witness (fun s2 : SS.elt => pick_line (S.inter e1 s2) sp) (SS.remove e1 ss)).",
                        "VernacExtend",
                        "59241d7ddba44864251c5d5123e75581d4c245c2"
                    ]
                },
                {
                    "command": [
                        "intros e2 HEW2.",
                        "VernacExtend",
                        "1fc16878958b87d1f6f17c6498177d00d77d2623"
                    ]
                },
                {
                    "command": [
                        "rewrite HEW2 in H.",
                        "VernacExtend",
                        "eb15a01b423c775fe31cb25516074627e7cc25f3"
                    ]
                },
                {
                    "command": [
                        "assert (HEq1 : e1 = s1) by (injection H; intros; assumption).",
                        "VernacExtend",
                        "eca0a22fbf0e00fb9e046c8d9e079db5eb02db8d"
                    ]
                },
                {
                    "command": [
                        "rewrite HEq1 in *.",
                        "VernacExtend",
                        "37c5421f284fa2ad1c4d42b884307839417831b3"
                    ]
                },
                {
                    "command": [
                        "assert (HEq2 : e2 = s2) by (injection H; intros; assumption).",
                        "VernacExtend",
                        "10cc392df03719c33e189136ddd05b3b090309f3"
                    ]
                },
                {
                    "command": [
                        "rewrite HEq2 in *.",
                        "VernacExtend",
                        "901b7385eb26cebf2c5c7d2cdf91d7a0df36bf69"
                    ]
                },
                {
                    "command": [
                        "apply exists_witness_ok with (fun s : SS.elt => match pick_lines_aux s (SS.remove s ss) sp with | Some _ => true | None => false end).",
                        "VernacExtend",
                        "6e455cb36cc422cd31f563aa30da8b18eb97f499"
                    ]
                },
                {
                    "command": [
                        "intros x y HXY.",
                        "VernacExtend",
                        "d54666da0000fd8bd617b0c87941a7c833808d02"
                    ]
                },
                {
                    "command": [
                        "assert (SS.Equal (SS.remove x ss) (SS.remove y ss)) by (apply SSWP.Dec.F.remove_m; try assumption; reflexivity).",
                        "VernacExtend",
                        "0ffa093fb04731b954184d9445abadd14c4f3509"
                    ]
                },
                {
                    "command": [
                        "assert (eqopp (pick_lines_aux x (SS.remove x ss) sp) (pick_lines_aux y (SS.remove y ss) sp)).",
                        "VernacExtend",
                        "0106dec90f67275419e6a47bd9aec3da7544c313"
                    ]
                },
                {
                    "command": [
                        "apply proper_3; auto.",
                        "VernacExtend",
                        "72ff1a76e8dac8d02bab8bb3de6534e0e170e67d"
                    ]
                },
                {
                    "command": [
                        "case_eq (pick_lines_aux x (SS.remove x ss) sp); intros; case_eq (pick_lines_aux y (SS.remove y ss) sp); intros.",
                        "VernacExtend",
                        "11664672325453e8a02ae5c9d730255ccbfc7e60"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H1; rewrite H3 in H1.",
                        "VernacExtend",
                        "d60d017c158b623d3de57a4a7472debbb0bafae4"
                    ]
                },
                {
                    "command": [
                        "unfold eqop in H1; simpl in H1.",
                        "VernacExtend",
                        "a5f5b655078facd7f0685ddfdae397d40e5c349d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H1; rewrite H3 in H1.",
                        "VernacExtend",
                        "d60d017c158b623d3de57a4a7472debbb0bafae4"
                    ]
                },
                {
                    "command": [
                        "unfold eqop in H1; simpl in H1.",
                        "VernacExtend",
                        "a5f5b655078facd7f0685ddfdae397d40e5c349d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro HEW2.",
                        "VernacExtend",
                        "d765abbe0b296e489e225764f0cf4941b2608cbc"
                    ]
                },
                {
                    "command": [
                        "rewrite HEW2 in H.",
                        "VernacExtend",
                        "eb15a01b423c775fe31cb25516074627e7cc25f3"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "intro HEW.",
                        "VernacExtend",
                        "75beebc8353c6e7b1940af049fb3ad7d4a61baf5"
                    ]
                },
                {
                    "command": [
                        "rewrite HEW in H.",
                        "VernacExtend",
                        "fac42e5535f2f796d1d2c954dc42cd01dd34d6e7"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pick_lines_ok_2",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 ss sp H.",
                        "VernacExtend",
                        "576376b9f26258a0e021b54acae009f9cd078652"
                    ]
                },
                {
                    "command": [
                        "unfold pick_lines in H.",
                        "VernacExtend",
                        "ad86f66bca02ae441bf753727e66bee90e6d6314"
                    ]
                },
                {
                    "command": [
                        "case_eq (exists_witness (fun s : SS.elt => match pick_lines_aux s (SS.remove s ss) sp with | Some _ => true | None => false end) ss).",
                        "VernacExtend",
                        "489d391982c05984da70a7cb718823693f2f5c87"
                    ]
                },
                {
                    "command": [
                        "intros e1 HEW1.",
                        "VernacExtend",
                        "2a567fdfa1687036465e1fef611850045d37fc9f"
                    ]
                },
                {
                    "command": [
                        "rewrite HEW1 in H.",
                        "VernacExtend",
                        "675a71248c7e01878edf2823776d4e708c05ea35"
                    ]
                },
                {
                    "command": [
                        "unfold pick_lines_aux in H.",
                        "VernacExtend",
                        "208f0ac9a9886cb1abbc88e2dd64a7ec7a9378d4"
                    ]
                },
                {
                    "command": [
                        "case_eq (exists_witness (fun s2 : SS.elt => pick_line (S.inter e1 s2) sp) (SS.remove e1 ss)).",
                        "VernacExtend",
                        "59241d7ddba44864251c5d5123e75581d4c245c2"
                    ]
                },
                {
                    "command": [
                        "intros e2 HEW2.",
                        "VernacExtend",
                        "1fc16878958b87d1f6f17c6498177d00d77d2623"
                    ]
                },
                {
                    "command": [
                        "rewrite HEW2 in H.",
                        "VernacExtend",
                        "eb15a01b423c775fe31cb25516074627e7cc25f3"
                    ]
                },
                {
                    "command": [
                        "assert (HEq1 : e1 = s1) by (injection H; intros; assumption).",
                        "VernacExtend",
                        "eca0a22fbf0e00fb9e046c8d9e079db5eb02db8d"
                    ]
                },
                {
                    "command": [
                        "rewrite HEq1 in *.",
                        "VernacExtend",
                        "37c5421f284fa2ad1c4d42b884307839417831b3"
                    ]
                },
                {
                    "command": [
                        "assert (HEq2 : e2 = s2) by (injection H; intros; assumption).",
                        "VernacExtend",
                        "10cc392df03719c33e189136ddd05b3b090309f3"
                    ]
                },
                {
                    "command": [
                        "rewrite HEq2 in *.",
                        "VernacExtend",
                        "901b7385eb26cebf2c5c7d2cdf91d7a0df36bf69"
                    ]
                },
                {
                    "command": [
                        "apply exists_witness_ok with (fun s2 : SS.elt => pick_line (S.inter s1 s2) sp).",
                        "VernacExtend",
                        "4db4f266d2b358383559880a32f824f994209f96"
                    ]
                },
                {
                    "command": [
                        "intros x y HXY.",
                        "VernacExtend",
                        "d54666da0000fd8bd617b0c87941a7c833808d02"
                    ]
                },
                {
                    "command": [
                        "apply proper_1; assumption.",
                        "VernacExtend",
                        "0769e46a4af2e2ad3ea97622de5c8d069d48437f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro HEW2.",
                        "VernacExtend",
                        "d765abbe0b296e489e225764f0cf4941b2608cbc"
                    ]
                },
                {
                    "command": [
                        "rewrite HEW2 in H.",
                        "VernacExtend",
                        "eb15a01b423c775fe31cb25516074627e7cc25f3"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "intro HEW.",
                        "VernacExtend",
                        "75beebc8353c6e7b1940af049fb3ad7d4a61baf5"
                    ]
                },
                {
                    "command": [
                        "rewrite HEW in H.",
                        "VernacExtend",
                        "fac42e5535f2f796d1d2c954dc42cd01dd34d6e7"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "identify_lines_tcc",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (S(SS.cardinal (SS.remove s1 ss)) = SS.cardinal ss).",
                        "VernacExtend",
                        "512a8cb70b8cece637bbd9d79fe400a16186bb69"
                    ]
                },
                {
                    "command": [
                        "apply SSWP.remove_cardinal_1.",
                        "VernacExtend",
                        "d3fb399c6dc800565080f6ddf28445ae3aaf00d7"
                    ]
                },
                {
                    "command": [
                        "apply pick_lines_ok_1 with s2 sp.",
                        "VernacExtend",
                        "b9afcac71eb6813c7c2971030b8c212ddc53352d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (S(S(SS.cardinal (SS.remove s2 (SS.remove s1 ss)))) = S(SS.cardinal (SS.remove s1 ss))).",
                        "VernacExtend",
                        "40a70da9bf3a73cb3132dd3b585d310b33ceaa5f"
                    ]
                },
                {
                    "command": [
                        "apply eq_S.",
                        "VernacExtend",
                        "8ef0b219ea0189c2d80bb55d03c4c9f24beca469"
                    ]
                },
                {
                    "command": [
                        "apply SSWP.remove_cardinal_1.",
                        "VernacExtend",
                        "d3fb399c6dc800565080f6ddf28445ae3aaf00d7"
                    ]
                },
                {
                    "command": [
                        "apply pick_lines_ok_2 with sp.",
                        "VernacExtend",
                        "1873bdf4dacf4a441f143b797d0892d432d14389"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (HR1 : S(S(SS.cardinal (SS.remove s2 (SS.remove s1 ss)))) = SS.cardinal ss).",
                        "VernacExtend",
                        "6ddf214d5df1f14c80b31dd5baefeb6a786b1217"
                    ]
                },
                {
                    "command": [
                        "transitivity (S(SS.cardinal (SS.remove s1 ss))); assumption.",
                        "VernacExtend",
                        "2c3fb6bc531e6d3df65b59af87dca82ccbd4e91a"
                    ]
                },
                {
                    "command": [
                        "elim (SSWP.In_dec (S.union s1 s2) (SS.remove s2 (SS.remove s1 ss))); intro HDec.",
                        "VernacExtend",
                        "8dddb5e44aea6caead8ae3d15ef4e3e31ff0e627"
                    ]
                },
                {
                    "command": [
                        "assert (HR2 : SS.cardinal (SS.add (S.union s1 s2) (SS.remove s2 (SS.remove s1 ss))) = SS.cardinal (SS.remove s2 (SS.remove s1 ss))).",
                        "VernacExtend",
                        "2f285606a5b6ca7472c026ea2fc71ae84a1d84a0"
                    ]
                },
                {
                    "command": [
                        "apply SSWP.add_cardinal_1; assumption.",
                        "VernacExtend",
                        "bd051711223beec788d3db4fda21c45f77e8d292"
                    ]
                },
                {
                    "command": [
                        "rewrite HR2.",
                        "VernacExtend",
                        "ffdd15b9ffd74def816cfaea7dddac1b290743a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HR1.",
                        "VernacExtend",
                        "162c9dc20d9b6d43afcfffae0c8dbb00d1133297"
                    ]
                },
                {
                    "command": [
                        "apply le_S;apply le_n.",
                        "VernacExtend",
                        "f668231be5e47dbadfd8dc6d21bc7e5b062fec36"
                    ]
                },
                {
                    "command": [
                        "assert (HR2 : SS.cardinal (SS.add (S.union s1 s2) (SS.remove s2 (SS.remove s1 ss))) = S( SS.cardinal (SS.remove s2 (SS.remove s1 ss)))).",
                        "VernacExtend",
                        "06136665d964e4e3a8e9a3af54334d9d88538572"
                    ]
                },
                {
                    "command": [
                        "apply SSWP.add_cardinal_2; assumption.",
                        "VernacExtend",
                        "c2d31a8fa4a1b4dcda0b34809325584a05256433"
                    ]
                },
                {
                    "command": [
                        "rewrite HR2.",
                        "VernacExtend",
                        "ffdd15b9ffd74def816cfaea7dddac1b290743a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HR1.",
                        "VernacExtend",
                        "162c9dc20d9b6d43afcfffae0c8dbb00d1133297"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "CTcol_permutation_5",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "apply CTcol_permutation_2.",
                        "VernacExtend",
                        "a6c316221adf98f0bd6a61bb28b8527820467611"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CTcol_permutation_2",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_permutation_1.",
                        "VernacExtend",
                        "5c5937a25dadf4d721b21a2beddcd98968b43d57"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_permutation_1.",
                        "VernacExtend",
                        "5c5937a25dadf4d721b21a2beddcd98968b43d57"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CTcol_permutation_3",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_permutation_5.",
                        "VernacExtend",
                        "f60704dbed680ac52c9c7a9ad0020e49d0e382b2"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_permutation_2.",
                        "VernacExtend",
                        "a6c316221adf98f0bd6a61bb28b8527820467611"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CTcol_permutation_4",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_permutation_5.",
                        "VernacExtend",
                        "f60704dbed680ac52c9c7a9ad0020e49d0e382b2"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_permutation_1.",
                        "VernacExtend",
                        "5c5937a25dadf4d721b21a2beddcd98968b43d57"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CTcol_trivial_1",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "apply CTcol_trivial.",
                        "VernacExtend",
                        "5c24648afbd9f3f61d4a1faf1719078d16f102c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CTcol_trivial_2",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_permutation_2.",
                        "VernacExtend",
                        "a6c316221adf98f0bd6a61bb28b8527820467611"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_trivial_1.",
                        "VernacExtend",
                        "1e54140daadb2e90cdbb1c8da62cdf86a6d9f28d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "identify_lines_ok",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "intros ss sp interp HSS HSP.",
                        "VernacExtend",
                        "7a38e58622d287cb1227cbd5ba9c7a423c05806e"
                    ]
                },
                {
                    "command": [
                        "apply (let P interp ss sp newss := ss_ok ss interp -> sp_ok sp interp -> ss_ok newss interp in identify_lines_ind (P interp)); try assumption.",
                        "VernacExtend",
                        "2e67bb3871b4c4775aca9a013418bc733d06447a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "clear HSS; clear HSP; clear ss; clear sp.",
                        "VernacExtend",
                        "169060500e81e21fc5addd566be3d3f49486d57d"
                    ]
                },
                {
                    "command": [
                        "intros ss sp suitablepairofsets s1 s2 Hs1s2 auxsetofsets auxset newss H HSS HSP.",
                        "VernacExtend",
                        "0b65b180a9b30af5ceaba6d5c55667aeaeb0e964"
                    ]
                },
                {
                    "command": [
                        "assert (Hs1 := Hs1s2).",
                        "VernacExtend",
                        "1d076d52efd1bda2306d2b1f7185f7c789b68ff9"
                    ]
                },
                {
                    "command": [
                        "assert (Hs2 := Hs1s2).",
                        "VernacExtend",
                        "c0f3eb5889fb11059657441feda89d7e37be0f22"
                    ]
                },
                {
                    "command": [
                        "apply pick_lines_ok_1 in Hs1.",
                        "VernacExtend",
                        "59b0b5b97f0b3590f09e0a9cc92f5faf8109f5b1"
                    ]
                },
                {
                    "command": [
                        "apply pick_lines_ok_2 in Hs2.",
                        "VernacExtend",
                        "30744e65514b1b6d0a2163513ece444738540387"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.remove_3 in Hs2.",
                        "VernacExtend",
                        "3985d9154a90d7757821032512480f524c36a6d5"
                    ]
                },
                {
                    "command": [
                        "apply H; try assumption; clear H.",
                        "VernacExtend",
                        "a7ec549376a2150d1b6ea67dee838f43a974bac6"
                    ]
                },
                {
                    "command": [
                        "intros s Hmem p1 p2 p3 Hmemp.",
                        "VernacExtend",
                        "a034ccea1d7dc1274ea0ad1cb472f15956ad234e"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff in Hmemp).",
                        "VernacExtend",
                        "25c77afdbaa7aa858b928176572ec2bd941a54d2"
                    ]
                },
                {
                    "command": [
                        "destruct Hmemp as [[Hmemp1 Hmemp2] Hmemp3].",
                        "VernacExtend",
                        "a5e14155e1f607aab45a27840756a3bff44393e0"
                    ]
                },
                {
                    "command": [
                        "unfold newss in Hmem; clear newss.",
                        "VernacExtend",
                        "b36b9e0370bb94dd1f2ca5cc3402954aab4d6686"
                    ]
                },
                {
                    "command": [
                        "elim (SS.E.eq_dec auxset s); intro HEq.",
                        "VernacExtend",
                        "b2c761d42425bed6131f9d60eabfe8ba3958a43f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in *; clear HEq; clear s.",
                        "VernacExtend",
                        "790b35bcb6548f81362fe541dd8ff18303f04ea4"
                    ]
                },
                {
                    "command": [
                        "unfold suitablepairofsets in Hs1s2; clear suitablepairofsets.",
                        "VernacExtend",
                        "c3df149f0c0dcaa54e197dbf77c9fb8b52477f4b"
                    ]
                },
                {
                    "command": [
                        "unfold pick_lines in Hs1s2.",
                        "VernacExtend",
                        "6323cb5a6da8c9f750a02b0b676d910e2ffafd53"
                    ]
                },
                {
                    "command": [
                        "case_eq (exists_witness (fun s : SS.elt => match pick_lines_aux s (SS.remove s ss) sp with | Some _ => true | None => false end) ss); try (intro HEW; rewrite HEW in *; discriminate).",
                        "VernacExtend",
                        "f56a989bc3d15729e40b31d8933a1788ca3c4f38"
                    ]
                },
                {
                    "command": [
                        "intros e1 HEW; rewrite HEW in *; clear HEW.",
                        "VernacExtend",
                        "3671673a853db03ae6104b5472244a9ac1b5428e"
                    ]
                },
                {
                    "command": [
                        "unfold pick_lines_aux in *.",
                        "VernacExtend",
                        "48bef9d0960d2423e0e641a6edf1506fab5d5dcf"
                    ]
                },
                {
                    "command": [
                        "case_eq (exists_witness (fun s2 : SS.elt => pick_line (S.inter e1 s2) sp) (SS.remove e1 ss)); try (intro HEW; rewrite HEW in *; discriminate).",
                        "VernacExtend",
                        "41b261ad866c5e31b7e499eea50315c9cd868cd9"
                    ]
                },
                {
                    "command": [
                        "intros e2 HEW; rewrite HEW in *.",
                        "VernacExtend",
                        "47be0ca085b3027620cbf091b5fec956f599a204"
                    ]
                },
                {
                    "command": [
                        "injection Hs1s2; intros He2s2 He1s1.",
                        "VernacExtend",
                        "01d70efc2a12e414c6d05cf09dc847427b726603"
                    ]
                },
                {
                    "command": [
                        "rewrite He2s2 in *; rewrite He1s1 in *; clear He2s2; clear He1s1; clear Hs1s2; clear e2; clear e1.",
                        "VernacExtend",
                        "c9eaffffd66a902b494837fcc475e003ef42cced"
                    ]
                },
                {
                    "command": [
                        "case_eq (pick_line (S.inter s1 s2) sp).",
                        "VernacExtend",
                        "aad4a904613a6f8b08b527648bdea2ba16cd74f8"
                    ]
                },
                {
                    "command": [
                        "clear HEW; intro HEW.",
                        "VernacExtend",
                        "4f60ba4d217be0dfefacfe1a21742d9df52cd035"
                    ]
                },
                {
                    "command": [
                        "unfold pick_line in HEW.",
                        "VernacExtend",
                        "d8866680e856c148af334d08c6985c569b2eec5e"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.exists_mem_4 in HEW; try (apply proper_00).",
                        "VernacExtend",
                        "ded8789f522316222a96bf819a6076a33a213530"
                    ]
                },
                {
                    "command": [
                        "destruct HEW as [x [HmemSP HmemS]].",
                        "VernacExtend",
                        "7b43f0819d6d6c2ab24c1bdb401cfffcbe755987"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in HmemS; destruct HmemS as [Hmemfsts Hmemsnds].",
                        "VernacExtend",
                        "cd17fcc02638fa7d2a594292614cc74203ee3362"
                    ]
                },
                {
                    "command": [
                        "apply HSP in HmemSP.",
                        "VernacExtend",
                        "aa5cc6bccdbb265dc9d69bf798e352de26e07b53"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_2 in Hmemfsts.",
                        "VernacExtend",
                        "39d111ac32c61b57d39373bb8160f4509523844e"
                    ]
                },
                {
                    "command": [
                        "apply S.inter_spec in Hmemfsts.",
                        "VernacExtend",
                        "7d035e8c5a44a77e818f3c6440c4afe176485bfa"
                    ]
                },
                {
                    "command": [
                        "destruct Hmemfsts as [Hfss1 Hfss2].",
                        "VernacExtend",
                        "24e0e96692d1f018e8d87f4b196102adf1702779"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_2 in Hmemsnds.",
                        "VernacExtend",
                        "12a121dd946087201782174801dfd4135b513c55"
                    ]
                },
                {
                    "command": [
                        "apply S.inter_spec in Hmemsnds.",
                        "VernacExtend",
                        "c288022f911bf3959fbf45d57cf3c9fe38688ae9"
                    ]
                },
                {
                    "command": [
                        "destruct Hmemsnds as [Hsss1 Hsss2].",
                        "VernacExtend",
                        "3a95e59d7fac1e2d4f98148a052fef5595907b04"
                    ]
                },
                {
                    "command": [
                        "unfold auxset in *.",
                        "VernacExtend",
                        "9deb312f7c053e8bbfd0d0476880f2302f133ad1"
                    ]
                },
                {
                    "command": [
                        "apply CTcol3 with (interp (fstpp(x))) (interp (sndpp(x))); try assumption.",
                        "VernacExtend",
                        "b34497e5c325660d171cc5915dd17f274ee76ce5"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_2 in Hmemp1.",
                        "VernacExtend",
                        "d5621ca8f81aaac80e2c3f4f03686d14e8a07a68"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.union_1 in Hmemp1.",
                        "VernacExtend",
                        "9b054ee57555f862440c1f5b3bb0ed6f31365774"
                    ]
                },
                {
                    "command": [
                        "elim (Hmemp1); intro HInp1.",
                        "VernacExtend",
                        "735d17cb3847895ee04a8cdf0b61b40bd8e56ae3"
                    ]
                },
                {
                    "command": [
                        "apply HSS with s1.",
                        "VernacExtend",
                        "aa0747b1801e7a73790ced9227704535f66d98d4"
                    ]
                },
                {
                    "command": [
                        "apply SSWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "18102d051746f18971220fc3f43b28d1e794104d"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff).",
                        "VernacExtend",
                        "6f40f827a55f5eb0822d63ebf783f716e085882e"
                    ]
                },
                {
                    "command": [
                        "repeat split; apply SWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1f478a0ffad66403f5347354bf87977a77d1ddb1"
                    ]
                },
                {
                    "command": [
                        "apply HSS with s2.",
                        "VernacExtend",
                        "55683a937a5a9e72b862249e7d63c324edc21df7"
                    ]
                },
                {
                    "command": [
                        "apply SSWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "18102d051746f18971220fc3f43b28d1e794104d"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff).",
                        "VernacExtend",
                        "6f40f827a55f5eb0822d63ebf783f716e085882e"
                    ]
                },
                {
                    "command": [
                        "repeat split; apply SWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1f478a0ffad66403f5347354bf87977a77d1ddb1"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_2 in Hmemp2.",
                        "VernacExtend",
                        "582a42384e404cd201bc3dcf0fbe2299e8b8ce86"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.union_1 in Hmemp2.",
                        "VernacExtend",
                        "2ab21760fe5ed2a7d82d241d953f79c4f29899ab"
                    ]
                },
                {
                    "command": [
                        "elim (Hmemp2); intro HInp2.",
                        "VernacExtend",
                        "1e3cc986b151b641b6d360075b11eb103ffdb26d"
                    ]
                },
                {
                    "command": [
                        "apply HSS with s1.",
                        "VernacExtend",
                        "aa0747b1801e7a73790ced9227704535f66d98d4"
                    ]
                },
                {
                    "command": [
                        "apply SSWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "18102d051746f18971220fc3f43b28d1e794104d"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff).",
                        "VernacExtend",
                        "6f40f827a55f5eb0822d63ebf783f716e085882e"
                    ]
                },
                {
                    "command": [
                        "repeat split; apply SWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1f478a0ffad66403f5347354bf87977a77d1ddb1"
                    ]
                },
                {
                    "command": [
                        "apply HSS with s2.",
                        "VernacExtend",
                        "55683a937a5a9e72b862249e7d63c324edc21df7"
                    ]
                },
                {
                    "command": [
                        "apply SSWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "18102d051746f18971220fc3f43b28d1e794104d"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff).",
                        "VernacExtend",
                        "6f40f827a55f5eb0822d63ebf783f716e085882e"
                    ]
                },
                {
                    "command": [
                        "repeat split; apply SWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1f478a0ffad66403f5347354bf87977a77d1ddb1"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_2 in Hmemp3.",
                        "VernacExtend",
                        "962c5a272956e475f9613413df9729794d3643f9"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.union_1 in Hmemp3.",
                        "VernacExtend",
                        "5b51ca3e35edbbb4992ad3dd6f563eb71e3d2a7f"
                    ]
                },
                {
                    "command": [
                        "elim (Hmemp3); intro HInp3.",
                        "VernacExtend",
                        "7af26c5b182c2bade46e72c8ac75ce766dc7bc50"
                    ]
                },
                {
                    "command": [
                        "apply HSS with s1.",
                        "VernacExtend",
                        "aa0747b1801e7a73790ced9227704535f66d98d4"
                    ]
                },
                {
                    "command": [
                        "apply SSWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "18102d051746f18971220fc3f43b28d1e794104d"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff).",
                        "VernacExtend",
                        "6f40f827a55f5eb0822d63ebf783f716e085882e"
                    ]
                },
                {
                    "command": [
                        "repeat split; apply SWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1f478a0ffad66403f5347354bf87977a77d1ddb1"
                    ]
                },
                {
                    "command": [
                        "apply HSS with s2.",
                        "VernacExtend",
                        "55683a937a5a9e72b862249e7d63c324edc21df7"
                    ]
                },
                {
                    "command": [
                        "apply SSWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "18102d051746f18971220fc3f43b28d1e794104d"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff).",
                        "VernacExtend",
                        "6f40f827a55f5eb0822d63ebf783f716e085882e"
                    ]
                },
                {
                    "command": [
                        "repeat split; apply SWP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1f478a0ffad66403f5347354bf87977a77d1ddb1"
                    ]
                },
                {
                    "command": [
                        "intro HEW2; unfold exists_witness in *; apply SS.choose_spec1 in HEW.",
                        "VernacExtend",
                        "9f01c140321c5a5428f83a46f45f2110c6b12faf"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.filter_2 in HEW; try apply proper_1.",
                        "VernacExtend",
                        "aeb74612cff293b177182ba4c28f09cbeb1e9258"
                    ]
                },
                {
                    "command": [
                        "rewrite HEW2 in *; discriminate.",
                        "VernacExtend",
                        "8faefd49d2b473b32298731166ef1a6f84e2dba4"
                    ]
                },
                {
                    "command": [
                        "rewrite SSWP.Dec.F.add_neq_b in Hmem; try assumption.",
                        "VernacExtend",
                        "abdc2fe773563f21bf6c4c23c98ddd627dee9b1d"
                    ]
                },
                {
                    "command": [
                        "apply HSS with s.",
                        "VernacExtend",
                        "1b3a35f0918adfc81aa20767006923cabcbfd0c5"
                    ]
                },
                {
                    "command": [
                        "unfold auxsetofsets in *.",
                        "VernacExtend",
                        "bca999ab88df92629ac7e40a7beacbdf85adf2b3"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_2 in Hmem.",
                        "VernacExtend",
                        "4ea1c0bf685aa2b8dedb99d475f45de4b5496a5a"
                    ]
                },
                {
                    "command": [
                        "do 2 (apply SSWEqP.MP.Dec.F.remove_3 in Hmem).",
                        "VernacExtend",
                        "a2d63db9c289f4a45d0f5717fdbf31327a76ac92"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1.",
                        "VernacExtend",
                        "fb831ce8c5315b134cfbeda745acfebb053443cf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff).",
                        "VernacExtend",
                        "6f40f827a55f5eb0822d63ebf783f716e085882e"
                    ]
                },
                {
                    "command": [
                        "repeat split; assumption.",
                        "VernacExtend",
                        "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test_col_ok",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "intros ss sp interp p1 p2 p3 HSS HSP HTC.",
                        "VernacExtend",
                        "1ab045377a19f3c9b4a0782c0849a4ea33d88d6d"
                    ]
                },
                {
                    "command": [
                        "unfold test_col in *.",
                        "VernacExtend",
                        "6ea4d2dbdbda98c488393e154d2b680071154cce"
                    ]
                },
                {
                    "command": [
                        "assert (HSS2 : ss_ok (identify_lines ss sp) interp) by (apply identify_lines_ok; assumption).",
                        "VernacExtend",
                        "b6e25d9ba95cc16b405df1fa2ea1b9106cc1bd10"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSS2.",
                        "VernacExtend",
                        "204a6dd5fd023bd6313de89aeae9a30eddd0053e"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.exists_2 in HTC.",
                        "VernacExtend",
                        "cd006ef68fda57ea980ba7098b94a726e0ade89f"
                    ]
                },
                {
                    "command": [
                        "unfold SS.Exists in HTC.",
                        "VernacExtend",
                        "ec920acf4d8cbbe710154d4e05e47f9343108f43"
                    ]
                },
                {
                    "command": [
                        "destruct HTC as [s [HIn Hmem]].",
                        "VernacExtend",
                        "4a7b50894af394d75d0e271f4fd78848280d916b"
                    ]
                },
                {
                    "command": [
                        "apply HSS2 with s.",
                        "VernacExtend",
                        "bd88746dbf37c30a3c64f49e6c0b46aafef16cfe"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1.",
                        "VernacExtend",
                        "fb831ce8c5315b134cfbeda745acfebb053443cf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros x y Hxy.",
                        "VernacExtend",
                        "44bac6ec66dd54c6c1d048cac4ab63f977af73cf"
                    ]
                },
                {
                    "command": [
                        "assert (HmemEq : forall p, S.mem p x = S.mem p y) by (intro; apply SWP.Dec.F.mem_m; auto).",
                        "VernacExtend",
                        "9abeca18e7c036ef8bd16107b7100978a4125500"
                    ]
                },
                {
                    "command": [
                        "do 3 (rewrite HmemEq); reflexivity.",
                        "VernacExtend",
                        "b60cb983e08e36ecfa3385b6d543ea62ded305e2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ss_ok_empty",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "intros interp ss Hmem1 p1 p2 p3 Hmem2.",
                        "VernacExtend",
                        "1d778cce35526f66a90cdd36783efa8044c70a64"
                    ]
                },
                {
                    "command": [
                        "rewrite SSWEqP.MP.Dec.F.empty_b in Hmem1.",
                        "VernacExtend",
                        "3bd4795da9e066cda7bb69aa70d0e37fac66b0e2"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sp_ok_empty",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok.",
                        "VernacExtend",
                        "4064042813c4c530bb8bbcca6ae9cdc475e09611"
                    ]
                },
                {
                    "command": [
                        "intros p Hp.",
                        "VernacExtend",
                        "cf737bd4e185c03175335af1ca6ae52da34cba56"
                    ]
                },
                {
                    "command": [
                        "rewrite SPWEqP.MP.Dec.F.empty_b in Hp.",
                        "VernacExtend",
                        "1b5b8fb11b2c2881e7c456d0790c87fb7aff7e46"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "collect_cols",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "intros A B C HCol pa pb pc ss interp HA HB HC HSS.",
                        "VernacExtend",
                        "3fcbbda1e1d31295c2d5c2aa4983971fd78ad184"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok.",
                        "VernacExtend",
                        "8b3f387759ffd21aaf87d3780206a5d7e605ad5e"
                    ]
                },
                {
                    "command": [
                        "intros s Hs.",
                        "VernacExtend",
                        "260fb9c070371bcc61b105a76ad6e9ca0d4ab0f1"
                    ]
                },
                {
                    "command": [
                        "intros p1 p2 p3 Hmem.",
                        "VernacExtend",
                        "18f8858ba22ddb49d0aba0d690d589bd2261e548"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_2 in Hs.",
                        "VernacExtend",
                        "05db75943d6076f2dff931feaee57239262da7b2"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.add_iff in Hs.",
                        "VernacExtend",
                        "366b613f20a3f563268332c002057f2598446c57"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff in Hmem).",
                        "VernacExtend",
                        "85fd40b998255f672b7ab6f5d0ea243e72e40b8e"
                    ]
                },
                {
                    "command": [
                        "destruct Hmem as [[Hmem1 Hmem2] Hmem3].",
                        "VernacExtend",
                        "a6b64fa74bddd4fd3f54330e2734a52da55f2508"
                    ]
                },
                {
                    "command": [
                        "elim Hs; intro HsE.",
                        "VernacExtend",
                        "406e4fcf31456b631df9b6c491907766392fb61e"
                    ]
                },
                {
                    "command": [
                        "assert (HmemR : forall p, S.mem p (S.add pa (S.add pb (S.add pc S.empty))) = S.mem p s) by (intros; apply SWP.Dec.F.mem_m; auto).",
                        "VernacExtend",
                        "19762c510037f75e8f4009f40413c29eb42c24fa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HmemR in Hmem1.",
                        "VernacExtend",
                        "89e1b8afcef5d11d64c94f792080ebea1b04f391"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HmemR in Hmem2.",
                        "VernacExtend",
                        "15a5969330e39ba9bc9f47f0cb3b9d379fae8713"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HmemR in Hmem3.",
                        "VernacExtend",
                        "4245e57be44ce285e1bdd9cb28429ac79cfc3da6"
                    ]
                },
                {
                    "command": [
                        "clear HmemR.",
                        "VernacExtend",
                        "10db05c8ad87c622918c11280c9d4d61f010ae25"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pa p1); intro Hpap1.",
                        "VernacExtend",
                        "79fd953469953454cdf555f141f878e0b9c85a06"
                    ]
                },
                {
                    "command": [
                        "rewrite Hpap1 in *; rewrite HA.",
                        "VernacExtend",
                        "ad30d48eeef1b90ad6cf54389fc9b3815e930772"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p1 p2); intro Hp1p2.",
                        "VernacExtend",
                        "280c20f0d3cfb550acb69ecce48ac1c9cf2467be"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp1p2 in *; rewrite HA.",
                        "VernacExtend",
                        "bf65f728012d4e2e21d54849903f975199dbb1d6"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_trivial_1.",
                        "VernacExtend",
                        "1e54140daadb2e90cdbb1c8da62cdf86a6d9f28d"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
                        "VernacExtend",
                        "6b936e427488a7be4b3501b586bf7a778934fb1d"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pb p2); intro Hpbp2.",
                        "VernacExtend",
                        "942019b93e6c653f2e560299adaad2aac9f89ac1"
                    ]
                },
                {
                    "command": [
                        "rewrite Hpbp2 in *; rewrite HB.",
                        "VernacExtend",
                        "60928c03ed48a3d3636a5c72beb1b59c33f95c2a"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p3 p1); intro Hp3p1; elim (Pos.eq_dec p3 p2); intro Hp3p2.",
                        "VernacExtend",
                        "8b56b7ad171896b74ac968f7dced3042e7bbc062"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p2; rewrite HB; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "06f2031f9561771560421e060d19388ed96c42a1"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p1; rewrite HA; apply CTcol_permutation_1; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "86f6b3f80b64ab0523d449ef1e6684e5b3ee4888"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p2; rewrite HB; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "06f2031f9561771560421e060d19388ed96c42a1"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite SWP.Dec.F.add_neq_b in Hmem3).",
                        "VernacExtend",
                        "2ef2416ece8a76088919fceb3a91336ea8fc1c7c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- SWP.singleton_equal_add in Hmem3.",
                        "VernacExtend",
                        "af8a00f660f5c2b429b102df1603652767a54b3d"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_iff in Hmem3.",
                        "VernacExtend",
                        "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.singleton_1 in Hmem3.",
                        "VernacExtend",
                        "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hmem3; rewrite HC; assumption.",
                        "VernacExtend",
                        "33e5248da499bc0f08af2293d7e6d15ddd719ea5"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
                        "VernacExtend",
                        "6b936e427488a7be4b3501b586bf7a778934fb1d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- SWP.singleton_equal_add in Hmem2.",
                        "VernacExtend",
                        "e29dea6abb2de31ec702adbe3b7d079f2122970d"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_iff in Hmem2.",
                        "VernacExtend",
                        "6e5cd9999a6542cf114e539307682213f16aa35e"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.singleton_1 in Hmem2.",
                        "VernacExtend",
                        "3835215b03038a32acffa3d2be1c36e6fcccb8d6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hmem2 in *; rewrite HC.",
                        "VernacExtend",
                        "7dd17fd2d824f8cf5c649b433ffe77d58bbb7f6e"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p3 p1); intro Hp3p1; elim (Pos.eq_dec p3 p2); intro Hp3p2.",
                        "VernacExtend",
                        "8b56b7ad171896b74ac968f7dced3042e7bbc062"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p2 in *; rewrite Hmem2 in *; rewrite HC; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "f83664d8ec6c09df33aae02f2653f705fada94f4"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p1 in *; rewrite HA; apply CTcol_permutation_1; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "b652364a101ac07a6c4d5f048301871c6204e1f2"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p2 in *; rewrite Hmem2 in *; rewrite HC; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "f83664d8ec6c09df33aae02f2653f705fada94f4"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem3.",
                        "VernacExtend",
                        "06805e495c0f24b0e17c674cac7b300a4ef5fe5a"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p3 pb); intro Hp3pb.",
                        "VernacExtend",
                        "1b8b520d66e70176f4fee2af6f9940c19e5a5f3d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3pb in *; rewrite HB; apply CTcol_permutation_5; assumption.",
                        "VernacExtend",
                        "d7b93c0ee184f364b4bf404c2b412ce4b56e9233"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem3.",
                        "VernacExtend",
                        "06805e495c0f24b0e17c674cac7b300a4ef5fe5a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- SWP.singleton_equal_add in Hmem3.",
                        "VernacExtend",
                        "af8a00f660f5c2b429b102df1603652767a54b3d"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_iff in Hmem3.",
                        "VernacExtend",
                        "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.singleton_1 in Hmem3.",
                        "VernacExtend",
                        "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
                    ]
                },
                {
                    "command": [
                        "rewrite Hmem3 in *; contradiction.",
                        "VernacExtend",
                        "8cdef52ada3b8b50b356710758863247279a3d21"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem1.",
                        "VernacExtend",
                        "ee0b8cd80620e7940a2d1a48dfbfa20a290a6fdc"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p1 pb); intro Hp1pb.",
                        "VernacExtend",
                        "3348647545180dbdd65a1d4614b6f39cf3bf819b"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp1pb in *; rewrite HB.",
                        "VernacExtend",
                        "1149d295288a05303f83fa8b898f4e14b1b0209d"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pa p2); intro Hpap2.",
                        "VernacExtend",
                        "4a3162ae4a6709f02345f924a2516a07cde8326d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hpap2 in *; rewrite HA.",
                        "VernacExtend",
                        "1eaac515c23092f3c635db0d86fd116dabe99dab"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p3 p2); intro Hp3p2; elim (Pos.eq_dec p3 pb); intro Hp3pb.",
                        "VernacExtend",
                        "574bee072988c93e849178d53605244871d8dc7f"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3pb; rewrite HB; apply CTcol_permutation_1; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "37f8c58899f2ce9fe9cbc95354bf0911e963e5ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p2; rewrite HA; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "06e492bd27e84f7685384905355020ea25a69ce3"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3pb; rewrite HB; apply CTcol_permutation_1; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "37f8c58899f2ce9fe9cbc95354bf0911e963e5ba"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite SWP.Dec.F.add_neq_b in Hmem3).",
                        "VernacExtend",
                        "2ef2416ece8a76088919fceb3a91336ea8fc1c7c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- SWP.singleton_equal_add in Hmem3.",
                        "VernacExtend",
                        "af8a00f660f5c2b429b102df1603652767a54b3d"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_iff in Hmem3.",
                        "VernacExtend",
                        "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.singleton_1 in Hmem3.",
                        "VernacExtend",
                        "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hmem3; rewrite HC; apply CTcol_permutation_4; assumption.",
                        "VernacExtend",
                        "3056c5b5fe01af3c0706c41998b926b728a1900e"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
                        "VernacExtend",
                        "6b936e427488a7be4b3501b586bf7a778934fb1d"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p2 pb); intro Hp2pb.",
                        "VernacExtend",
                        "0469e0038ee7b756efa9ee67b4894de1d0ad55e6"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp2pb; rewrite HB; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "1e6aa65283d432a64bfa217f835b18de6b50bf18"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
                        "VernacExtend",
                        "6b936e427488a7be4b3501b586bf7a778934fb1d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- SWP.singleton_equal_add in Hmem2.",
                        "VernacExtend",
                        "e29dea6abb2de31ec702adbe3b7d079f2122970d"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_iff in Hmem2.",
                        "VernacExtend",
                        "6e5cd9999a6542cf114e539307682213f16aa35e"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.singleton_1 in Hmem2.",
                        "VernacExtend",
                        "3835215b03038a32acffa3d2be1c36e6fcccb8d6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hmem2 in *; rewrite HC.",
                        "VernacExtend",
                        "7dd17fd2d824f8cf5c649b433ffe77d58bbb7f6e"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p3 p1); intro Hp3p1; elim (Pos.eq_dec p3 p2); intro Hp3p2.",
                        "VernacExtend",
                        "8b56b7ad171896b74ac968f7dced3042e7bbc062"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p2 in *; rewrite Hmem2 in *; rewrite HC; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "f83664d8ec6c09df33aae02f2653f705fada94f4"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p1 in *; rewrite Hp1pb; rewrite HB; apply CTcol_permutation_1; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "2dcd806268241c72e97405f5d2dc7b5729a1b7c8"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p2 in *; rewrite Hmem2 in *; rewrite HC; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "f83664d8ec6c09df33aae02f2653f705fada94f4"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p3 pa); intro Hp3pa.",
                        "VernacExtend",
                        "4b918b8a82f89dc7cef3fdcdd30d7b13787f45a7"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3pa; rewrite HA; apply CTcol_permutation_1; assumption.",
                        "VernacExtend",
                        "6022749e950fd6dd3b3ebf0fc876258767f70553"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem3.",
                        "VernacExtend",
                        "06805e495c0f24b0e17c674cac7b300a4ef5fe5a"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p3 pb); intro Hp3pb.",
                        "VernacExtend",
                        "1b8b520d66e70176f4fee2af6f9940c19e5a5f3d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3pb in *; rewrite HB; apply CTcol_permutation_5; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "29726e1a2fda990bfd8ba98bed10217973e562dd"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem3.",
                        "VernacExtend",
                        "06805e495c0f24b0e17c674cac7b300a4ef5fe5a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- SWP.singleton_equal_add in Hmem3.",
                        "VernacExtend",
                        "af8a00f660f5c2b429b102df1603652767a54b3d"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_iff in Hmem3.",
                        "VernacExtend",
                        "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.singleton_1 in Hmem3.",
                        "VernacExtend",
                        "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
                    ]
                },
                {
                    "command": [
                        "rewrite Hmem3 in *; contradiction.",
                        "VernacExtend",
                        "8cdef52ada3b8b50b356710758863247279a3d21"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem1.",
                        "VernacExtend",
                        "ee0b8cd80620e7940a2d1a48dfbfa20a290a6fdc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- SWP.singleton_equal_add in Hmem1.",
                        "VernacExtend",
                        "5180cb70a0c6844391b053dbbe3e43237abb41c6"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_iff in Hmem1.",
                        "VernacExtend",
                        "c3b077c9780fc7b3cc22e48769b90730cab9297f"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.singleton_1 in Hmem1.",
                        "VernacExtend",
                        "3323a14410e45e4e272230dd7a071c57d161a7fd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hmem1 in *; rewrite HC.",
                        "VernacExtend",
                        "9d0542cc2bcb1f11945b072c600e0824a480dc28"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pa p2); intro Hpap2.",
                        "VernacExtend",
                        "4a3162ae4a6709f02345f924a2516a07cde8326d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hpap2 in *; rewrite HA.",
                        "VernacExtend",
                        "1eaac515c23092f3c635db0d86fd116dabe99dab"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p3 p2); intro Hp3p2; elim (Pos.eq_dec p3 pb); intro Hp3pb.",
                        "VernacExtend",
                        "574bee072988c93e849178d53605244871d8dc7f"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3pb; rewrite HB; apply CTcol_permutation_2; assumption.",
                        "VernacExtend",
                        "84fbffa09880400fa266487e47f55f08986ff798"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3p2; rewrite HA; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "06e492bd27e84f7685384905355020ea25a69ce3"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3pb; rewrite HB; apply CTcol_permutation_2; assumption.",
                        "VernacExtend",
                        "84fbffa09880400fa266487e47f55f08986ff798"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite SWP.Dec.F.add_neq_b in Hmem3).",
                        "VernacExtend",
                        "2ef2416ece8a76088919fceb3a91336ea8fc1c7c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- SWP.singleton_equal_add in Hmem3.",
                        "VernacExtend",
                        "af8a00f660f5c2b429b102df1603652767a54b3d"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_iff in Hmem3.",
                        "VernacExtend",
                        "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.singleton_1 in Hmem3.",
                        "VernacExtend",
                        "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hmem3; rewrite HC; apply CTcol_permutation_1; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "bce95a8e595d6ce0ebbf1cf46674899c8d4e7aa7"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
                        "VernacExtend",
                        "6b936e427488a7be4b3501b586bf7a778934fb1d"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p2 pb); intro Hp2pb.",
                        "VernacExtend",
                        "0469e0038ee7b756efa9ee67b4894de1d0ad55e6"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp2pb; rewrite HB.",
                        "VernacExtend",
                        "74266f53d3682adcc1e09438c209d5b5072eefb2"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec p3 pa); intro Hp3pa; elim (Pos.eq_dec p3 pb); intro Hp3pb.",
                        "VernacExtend",
                        "55062c0f7c9dcfdb01ec480818bccaa28623a269"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3pa; rewrite HA; apply CTcol_permutation_3; assumption.",
                        "VernacExtend",
                        "5294ee41104f781979ca37264e4ee13ee5d5a61f"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3pa; rewrite HA; apply CTcol_permutation_3; assumption.",
                        "VernacExtend",
                        "5294ee41104f781979ca37264e4ee13ee5d5a61f"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp3pb; rewrite HB; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "68aee59d96d465d35747791dae023888032e1fd7"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite SWP.Dec.F.add_neq_b in Hmem3).",
                        "VernacExtend",
                        "2ef2416ece8a76088919fceb3a91336ea8fc1c7c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- SWP.singleton_equal_add in Hmem3.",
                        "VernacExtend",
                        "af8a00f660f5c2b429b102df1603652767a54b3d"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_iff in Hmem3.",
                        "VernacExtend",
                        "8f24d313cf60c80b6c46dc5289072d53e6e8f617"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.singleton_1 in Hmem3.",
                        "VernacExtend",
                        "0c85c539f194ecc3ea41f231f8c77539a0b7a56c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hmem3 in *; rewrite HC; apply CTcol_permutation_1; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "240ff9f87b2098443b34cb6aa921b27e42362832"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2.",
                        "VernacExtend",
                        "6b936e427488a7be4b3501b586bf7a778934fb1d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- SWP.singleton_equal_add in Hmem2.",
                        "VernacExtend",
                        "e29dea6abb2de31ec702adbe3b7d079f2122970d"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_iff in Hmem2.",
                        "VernacExtend",
                        "6e5cd9999a6542cf114e539307682213f16aa35e"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.singleton_1 in Hmem2.",
                        "VernacExtend",
                        "3835215b03038a32acffa3d2be1c36e6fcccb8d6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hmem2 in *; rewrite HC; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "15b38c2358e98cff908dfc36282de374149e054e"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in *.",
                        "VernacExtend",
                        "8c95b3d4846821d0152888cbab122090545bdf8f"
                    ]
                },
                {
                    "command": [
                        "apply HSS with s.",
                        "VernacExtend",
                        "1b3a35f0918adfc81aa20767006923cabcbfd0c5"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1.",
                        "VernacExtend",
                        "fb831ce8c5315b134cfbeda745acfebb053443cf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite Hmem1; rewrite Hmem2; rewrite Hmem3; reflexivity.",
                        "VernacExtend",
                        "6378c403c6a3a8145d8e3878832789ffa311cf01"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "collect_diffs",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "intros A B HDiff pa pb sp interp HA HB HSP.",
                        "VernacExtend",
                        "b3e358083fd0f20e8e8914758ecd361e22b0cd93"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok.",
                        "VernacExtend",
                        "4064042813c4c530bb8bbcca6ae9cdc475e09611"
                    ]
                },
                {
                    "command": [
                        "intros p Hp.",
                        "VernacExtend",
                        "cf737bd4e185c03175335af1ca6ae52da34cba56"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_2 in Hp.",
                        "VernacExtend",
                        "e9400b1fd4b603a5082d762c6d6857e69c09163c"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.add_iff in Hp.",
                        "VernacExtend",
                        "11790e17091d67297202bdcdb43404a0645d3262"
                    ]
                },
                {
                    "command": [
                        "elim Hp; intro HpE.",
                        "VernacExtend",
                        "4b827224a0e014e6bf3eb1653b8f60d2f45eb60e"
                    ]
                },
                {
                    "command": [
                        "destruct HpE as [HEq1 HEq2].",
                        "VernacExtend",
                        "cb0ac84575f708ba702470780d4998cd59c4ea9b"
                    ]
                },
                {
                    "command": [
                        "destruct p as [fstp sndp].",
                        "VernacExtend",
                        "54d69d602269dfaa18b7f46b7ce1404701e4968c"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.min_spec pa pb); intro Hmin1; elim (Pos.min_spec fstp sndp); intro Hmin2; destruct Hmin1 as [Hpapb1 Hmin1]; destruct Hmin2 as [Hfpsp1 Hmin2]; elim (Pos.max_spec pa pb); intro Hmax1; elim (Pos.max_spec fstp sndp); intro Hmax2; destruct Hmax1 as [Hpapb2 Hmax1]; destruct Hmax2 as [Hfpsp2 Hmax2].",
                        "VernacExtend",
                        "9df0952f931d02aaab23327ab4d3d7bbf3874395"
                    ]
                },
                {
                    "command": [
                        "rewrite Hmin1 in *; rewrite Hmin2 in *; rewrite Hmax1 in *;rewrite Hmax2 in *.",
                        "VernacExtend",
                        "e4a84a9e96a3b3b1117708331d2b53e117da7edc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq1; rewrite <- HEq2; rewrite HA in *; rewrite HB in *; assumption.",
                        "VernacExtend",
                        "cf7caa68228fc6fc6a8dbb1c35056a689d778afb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hfpsp1; rewrite Pos.ltb_antisym in Hfpsp1; rewrite negb_true_iff in Hfpsp1; rewrite Pos.leb_nle in Hfpsp1; contradiction.",
                        "VernacExtend",
                        "c9c92f35da082517c9ee50903ba21ed0442f10e8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hpapb1; rewrite Pos.ltb_antisym in Hpapb1; rewrite negb_true_iff in Hpapb1; rewrite Pos.leb_nle in Hpapb1; contradiction.",
                        "VernacExtend",
                        "455c055d54112eb081369c49572f03fd4c8dfdd5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hfpsp1; rewrite Pos.ltb_antisym in Hfpsp1; rewrite negb_true_iff in Hfpsp1; rewrite Pos.leb_nle in Hfpsp1; contradiction.",
                        "VernacExtend",
                        "c9c92f35da082517c9ee50903ba21ed0442f10e8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hfpsp2; rewrite Pos.ltb_antisym in Hfpsp2; rewrite negb_true_iff in Hfpsp2; rewrite Pos.leb_nle in Hfpsp2; contradiction.",
                        "VernacExtend",
                        "a714166ab0ed6001667c0b56b46d17388430bbe5"
                    ]
                },
                {
                    "command": [
                        "rewrite Hmin1 in *; rewrite Hmin2 in *; rewrite Hmax1 in *;rewrite Hmax2 in *.",
                        "VernacExtend",
                        "e4a84a9e96a3b3b1117708331d2b53e117da7edc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq1; rewrite <- HEq2; rewrite HA in *; rewrite HB in *; assumption.",
                        "VernacExtend",
                        "cf7caa68228fc6fc6a8dbb1c35056a689d778afb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hfpsp2; rewrite Pos.ltb_antisym in Hfpsp2; rewrite negb_true_iff in Hfpsp2; rewrite Pos.leb_nle in Hfpsp2; contradiction.",
                        "VernacExtend",
                        "a714166ab0ed6001667c0b56b46d17388430bbe5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hpapb1; rewrite Pos.ltb_antisym in Hpapb1; rewrite negb_true_iff in Hpapb1; rewrite Pos.leb_nle in Hpapb1; contradiction.",
                        "VernacExtend",
                        "455c055d54112eb081369c49572f03fd4c8dfdd5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hpapb2; rewrite Pos.ltb_antisym in Hpapb2; rewrite negb_true_iff in Hpapb2; rewrite Pos.leb_nle in Hpapb2; contradiction.",
                        "VernacExtend",
                        "68ce996b0f48510ba8fc8b79b5d7973dbe3b4fd2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hpapb2; rewrite Pos.ltb_antisym in Hpapb2; rewrite negb_true_iff in Hpapb2; rewrite Pos.leb_nle in Hpapb2; contradiction.",
                        "VernacExtend",
                        "68ce996b0f48510ba8fc8b79b5d7973dbe3b4fd2"
                    ]
                },
                {
                    "command": [
                        "rewrite Hmin1 in *; rewrite Hmin2 in *; rewrite Hmax1 in *;rewrite Hmax2 in *.",
                        "VernacExtend",
                        "e4a84a9e96a3b3b1117708331d2b53e117da7edc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq1; rewrite <- HEq2; rewrite HA in *; rewrite HB in *; intuition.",
                        "VernacExtend",
                        "29e6a348bc5b3a5477fc55eabcb36d9a8c0afddf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hfpsp1; rewrite Pos.ltb_antisym in Hfpsp1; rewrite negb_true_iff in Hfpsp1; rewrite Pos.leb_nle in Hfpsp1; contradiction.",
                        "VernacExtend",
                        "c9c92f35da082517c9ee50903ba21ed0442f10e8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hpapb2; rewrite Pos.ltb_antisym in Hpapb2; rewrite negb_true_iff in Hpapb2; rewrite Pos.leb_nle in Hpapb2; contradiction.",
                        "VernacExtend",
                        "68ce996b0f48510ba8fc8b79b5d7973dbe3b4fd2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hpapb2; rewrite Pos.ltb_antisym in Hpapb2; rewrite negb_true_iff in Hpapb2; rewrite Pos.leb_nle in Hpapb2; contradiction.",
                        "VernacExtend",
                        "68ce996b0f48510ba8fc8b79b5d7973dbe3b4fd2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.ltb_lt in Hfpsp2; rewrite Pos.ltb_antisym in Hfpsp2; rewrite negb_true_iff in Hfpsp2; rewrite Pos.leb_nle in Hfpsp2; contradiction.",
                        "VernacExtend",
                        "a714166ab0ed6001667c0b56b46d17388430bbe5"
                    ]
                },
                {
                    "command": [
                        "rewrite Hmin1 in *; rewrite Hmin2 in *; rewrite Hmax1 in *;rewrite Hmax2 in *.",
                        "VernacExtend",
                        "e4a84a9e96a3b3b1117708331d2b53e117da7edc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq1; rewrite <- HEq2; rewrite HA in *; rewrite HB in *; intuition.",
                        "VernacExtend",
                        "29e6a348bc5b3a5477fc55eabcb36d9a8c0afddf"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in *.",
                        "VernacExtend",
                        "8b0ed8abe406c352e6771a82c61998d3faab4a3a"
                    ]
                },
                {
                    "command": [
                        "apply HSP.",
                        "VernacExtend",
                        "32afde016c1197e0c02b0ef119abb995bd0a2f2f"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1.",
                        "VernacExtend",
                        "14123951ceca0420c88a6e3a8aeca4a2cae5a476"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "positive_dec",
            "line_nb": 521,
            "steps": [
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eq_eq_tagged",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proper_4",
            "line_nb": 535,
            "steps": [
                {
                    "command": [
                        "intros p x y Hxy.",
                        "VernacExtend",
                        "58982029c7d1027c48a0351562281e9a31a3330f"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_m; intuition.",
                        "VernacExtend",
                        "f71a787db9a03ab3842830316cfbc7d3d21a3f97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proper_5",
            "line_nb": 539,
            "steps": [
                {
                    "command": [
                        "intros p x y Hxy.",
                        "VernacExtend",
                        "58982029c7d1027c48a0351562281e9a31a3330f"
                    ]
                },
                {
                    "command": [
                        "apply negb_sym.",
                        "VernacExtend",
                        "685a942c4b467861de44f575038e1a93204cb9a4"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_involutive.",
                        "VernacExtend",
                        "26794076710129c6559391372636b9da5e2f9672"
                    ]
                },
                {
                    "command": [
                        "apply SWP.Dec.F.mem_m; intuition.",
                        "VernacExtend",
                        "f71a787db9a03ab3842830316cfbc7d3d21a3f97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_ss_ok",
            "line_nb": 545,
            "steps": [
                {
                    "command": [
                        "intros A B H pa pb ss interp HA HB HSS.",
                        "VernacExtend",
                        "fa1974a206585351d68f00657709105ddae116c8"
                    ]
                },
                {
                    "command": [
                        "unfold subst_in_ss.",
                        "VernacExtend",
                        "385d91c81b58a26ec55ea01cf802b02071728b25"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok.",
                        "VernacExtend",
                        "8b3f387759ffd21aaf87d3780206a5d7e605ad5e"
                    ]
                },
                {
                    "command": [
                        "intros s Hs.",
                        "VernacExtend",
                        "260fb9c070371bcc61b105a76ad6e9ca0d4ab0f1"
                    ]
                },
                {
                    "command": [
                        "intros p1 p2 p3 Hmem.",
                        "VernacExtend",
                        "18f8858ba22ddb49d0aba0d690d589bd2261e548"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_2 in Hs.",
                        "VernacExtend",
                        "05db75943d6076f2dff931feaee57239262da7b2"
                    ]
                },
                {
                    "command": [
                        "rewrite SSWEqP.MP.Dec.F.union_iff in Hs.",
                        "VernacExtend",
                        "64d0f611c133a23c67ec3dee568c5254c39cff39"
                    ]
                },
                {
                    "command": [
                        "elim Hs; intro HIn; clear Hs.",
                        "VernacExtend",
                        "8ccdfe7096e18a9f216298ae232a888187e25b81"
                    ]
                },
                {
                    "command": [
                        "assert (HSSF : ss_ok (fst_ss (partition_ss pb ss)) interp).",
                        "VernacExtend",
                        "1a037b37f412d52be72d6dfcb9e4bcc39a62585a"
                    ]
                },
                {
                    "command": [
                        "clear Hmem; clear p1; clear p2; clear p3.",
                        "VernacExtend",
                        "ed8b004eb7b25736f8233ac8f00965d124c1bd73"
                    ]
                },
                {
                    "command": [
                        "intros s' Hs'.",
                        "VernacExtend",
                        "3deadcc30608da9a6aff57f4af0e4fa25bf0814d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_2 in Hs'.",
                        "VernacExtend",
                        "9f1b5a4aa67d65feb6f955d624cb5e564a52656e"
                    ]
                },
                {
                    "command": [
                        "unfold partition in Hs'.",
                        "VernacExtend",
                        "8f23a393cf03e9312767424229b6ae7059ad968d"
                    ]
                },
                {
                    "command": [
                        "apply SS.partition_spec1 in Hs'; try apply proper_4.",
                        "VernacExtend",
                        "f3afbda4a4a0709a179e4beb3165ebdbad7723c8"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.filter_1 in Hs'; try apply proper_4.",
                        "VernacExtend",
                        "ac2c95a9d55f66293c70ae96a8962929d2e4c7b9"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSS.",
                        "VernacExtend",
                        "0c6f6735f17e5226ced7397bdd7b7242c8c9ee11"
                    ]
                },
                {
                    "command": [
                        "apply HSS with s'; try assumption.",
                        "VernacExtend",
                        "a9c6fd2fc0a955d9feea733775679d279a605023"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "assert (HSSF' : ss_ok (SS.fold (subst_in_ss_aux pa pb) (fst_ss (partition_ss pb ss)) SS.empty) interp).",
                        "VernacExtend",
                        "81ee863a0471d10954e4b9bab1b0e975aeda88ee"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.fold_rec_nodep; try apply ss_ok_empty.",
                        "VernacExtend",
                        "b446823ac54bc3949b5106fcf17fe0b257784600"
                    ]
                },
                {
                    "command": [
                        "intros x a HIn1 HSSa.",
                        "VernacExtend",
                        "175e1ba80f5b0509c6eb74d42c5d05639a17b903"
                    ]
                },
                {
                    "command": [
                        "clear Hmem; clear p1; clear p2; clear p3.",
                        "VernacExtend",
                        "ed8b004eb7b25736f8233ac8f00965d124c1bd73"
                    ]
                },
                {
                    "command": [
                        "intros s' Hs'.",
                        "VernacExtend",
                        "3deadcc30608da9a6aff57f4af0e4fa25bf0814d"
                    ]
                },
                {
                    "command": [
                        "intros p1 p2 p3 Hmem.",
                        "VernacExtend",
                        "18f8858ba22ddb49d0aba0d690d589bd2261e548"
                    ]
                },
                {
                    "command": [
                        "unfold subst_in_ss_aux in *.",
                        "VernacExtend",
                        "ce4049e5486956d5ab801a10e5fdb158297e2c86"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_2 in Hs'.",
                        "VernacExtend",
                        "9f1b5a4aa67d65feb6f955d624cb5e564a52656e"
                    ]
                },
                {
                    "command": [
                        "rewrite SSWEqP.MP.Dec.F.add_iff in Hs'.",
                        "VernacExtend",
                        "f446a85faa49f7b8a9567105bad38beb90f81040"
                    ]
                },
                {
                    "command": [
                        "elim Hs'; intro HIn2; clear Hs'.",
                        "VernacExtend",
                        "95d8baf16fa1f23f8c966d8b9a74c05fb90d1bbd"
                    ]
                },
                {
                    "command": [
                        "unfold subst_in_set in HIn2.",
                        "VernacExtend",
                        "b5a04e9aceded6e4e459fb5f08ee52ce40dc88e8"
                    ]
                },
                {
                    "command": [
                        "clear HIn; clear s; assert (HEq := HIn2); clear HIn2; assert (HIn := HIn1); clear HIn1.",
                        "VernacExtend",
                        "1be196557b56de92ec2a67e5b5f7915017bf5efc"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pb p1); intro Hp1; elim (Pos.eq_dec pb p2); intro Hp2; elim (Pos.eq_dec pb p3); intro Hp3.",
                        "VernacExtend",
                        "8368388151700a456754b5008746767d580ba2e1"
                    ]
                },
                {
                    "command": [
                        "do 2 subst.",
                        "VernacExtend",
                        "f6d14ed963e1d0d70544d4b2707b5ccc57c971ff"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_trivial_1.",
                        "VernacExtend",
                        "1e54140daadb2e90cdbb1c8da62cdf86a6d9f28d"
                    ]
                },
                {
                    "command": [
                        "do 2 subst.",
                        "VernacExtend",
                        "f6d14ed963e1d0d70544d4b2707b5ccc57c971ff"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_trivial_1.",
                        "VernacExtend",
                        "1e54140daadb2e90cdbb1c8da62cdf86a6d9f28d"
                    ]
                },
                {
                    "command": [
                        "do 2 subst.",
                        "VernacExtend",
                        "f6d14ed963e1d0d70544d4b2707b5ccc57c971ff"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_permutation_4; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "9fe296512312a154cdea640981b270f029a61611"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff in Hmem).",
                        "VernacExtend",
                        "85fd40b998255f672b7ab6f5d0ea243e72e40b8e"
                    ]
                },
                {
                    "command": [
                        "destruct Hmem as [[Hmem1' Hmem2'] Hmem3'].",
                        "VernacExtend",
                        "cb4ed78412492b25520237d0a50142b96fdbdc2f"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem1 : S.mem p1 x = true).",
                        "VernacExtend",
                        "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
                    ]
                },
                {
                    "command": [
                        "unfold partition in HIn.",
                        "VernacExtend",
                        "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
                    ]
                },
                {
                    "command": [
                        "apply SS.partition_spec1 in HIn; try apply proper_4.",
                        "VernacExtend",
                        "06f37bc7a625ae9a00aa2079b832da2f01c33884"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
                        "VernacExtend",
                        "a7c9013642ed49e0dfd76562445c749cf771d8fe"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pa p2); intro Hpap2.",
                        "VernacExtend",
                        "4a3162ae4a6709f02345f924a2516a07cde8326d"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite HB; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "73a7671cb6afe5424ebfaa791a4b1bff6ae417ef"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem2 : S.mem p2 x = true).",
                        "VernacExtend",
                        "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem2'.",
                        "VernacExtend",
                        "695f18d9676847d06f13d7413633555db45dfbeb"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2'; try assumption.",
                        "VernacExtend",
                        "ba5833f2cc92e8dfc40ffd14b6653de0ff8f9d2b"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem2'; assumption.",
                        "VernacExtend",
                        "520899af16582b69ca428a5d019d345edffc99ab"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pa p3); intro Hpap3.",
                        "VernacExtend",
                        "6e6d2ba68fe891315980f78c694d40011391df9c"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite HB; apply CTcol_permutation_4; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "9cd339c1e6ab8d50badf8dc2f142c9d27c51f7fc"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem3 : S.mem p3 x = true).",
                        "VernacExtend",
                        "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem3'.",
                        "VernacExtend",
                        "a05e74eb04f449f2caeea586c2136d3b90967362"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem3'; try assumption.",
                        "VernacExtend",
                        "9ca07e63d252d2b971ea9d2dc871845bd1e5805a"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem3'; assumption.",
                        "VernacExtend",
                        "0712d60d6dc23329f028cfb4919de0b6f841062e"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSSF.",
                        "VernacExtend",
                        "6c7889413aaf4461862ae95e71e2fd145390edd3"
                    ]
                },
                {
                    "command": [
                        "apply HSSF with x.",
                        "VernacExtend",
                        "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff); repeat split; assumption.",
                        "VernacExtend",
                        "5d181b3410061ca9e43fb7a168714c6e5551d29e"
                    ]
                },
                {
                    "command": [
                        "do 2 subst.",
                        "VernacExtend",
                        "f6d14ed963e1d0d70544d4b2707b5ccc57c971ff"
                    ]
                },
                {
                    "command": [
                        "apply CTcol_trivial_2.",
                        "VernacExtend",
                        "04e191cd40a1775a60b021f8fa1e20e5b082bea7"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff in Hmem).",
                        "VernacExtend",
                        "85fd40b998255f672b7ab6f5d0ea243e72e40b8e"
                    ]
                },
                {
                    "command": [
                        "destruct Hmem as [[Hmem1' Hmem2'] Hmem3'].",
                        "VernacExtend",
                        "cb4ed78412492b25520237d0a50142b96fdbdc2f"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem2 : S.mem p2 x = true).",
                        "VernacExtend",
                        "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
                    ]
                },
                {
                    "command": [
                        "unfold partition in HIn.",
                        "VernacExtend",
                        "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
                    ]
                },
                {
                    "command": [
                        "apply SS.partition_spec1 in HIn; try apply proper_4.",
                        "VernacExtend",
                        "06f37bc7a625ae9a00aa2079b832da2f01c33884"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
                        "VernacExtend",
                        "a7c9013642ed49e0dfd76562445c749cf771d8fe"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pa p1); intro Hpap1.",
                        "VernacExtend",
                        "79fd953469953454cdf555f141f878e0b9c85a06"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite HB; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "73a7671cb6afe5424ebfaa791a4b1bff6ae417ef"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem1 : S.mem p1 x = true).",
                        "VernacExtend",
                        "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem1'.",
                        "VernacExtend",
                        "8c9dd938ea5509b505abd1a20a5993907e307814"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem1'; try assumption.",
                        "VernacExtend",
                        "f164e2341f39233a5ad449154bd2a8370122eed7"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem1'; assumption.",
                        "VernacExtend",
                        "681492acb6561aeaf7c2e96426ff17c2bce9d369"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pa p3); intro Hpap3.",
                        "VernacExtend",
                        "6e6d2ba68fe891315980f78c694d40011391df9c"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite HB; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "44082df67d284f1e9652dfc9bea65c3b1a190248"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem3 : S.mem p3 x = true).",
                        "VernacExtend",
                        "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem3'.",
                        "VernacExtend",
                        "a05e74eb04f449f2caeea586c2136d3b90967362"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem3'; try assumption.",
                        "VernacExtend",
                        "9ca07e63d252d2b971ea9d2dc871845bd1e5805a"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem3'; assumption.",
                        "VernacExtend",
                        "0712d60d6dc23329f028cfb4919de0b6f841062e"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSSF.",
                        "VernacExtend",
                        "6c7889413aaf4461862ae95e71e2fd145390edd3"
                    ]
                },
                {
                    "command": [
                        "apply HSSF with x.",
                        "VernacExtend",
                        "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff); repeat split; assumption.",
                        "VernacExtend",
                        "5d181b3410061ca9e43fb7a168714c6e5551d29e"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff in Hmem).",
                        "VernacExtend",
                        "85fd40b998255f672b7ab6f5d0ea243e72e40b8e"
                    ]
                },
                {
                    "command": [
                        "destruct Hmem as [[Hmem1' Hmem2'] Hmem3'].",
                        "VernacExtend",
                        "cb4ed78412492b25520237d0a50142b96fdbdc2f"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem3 : S.mem p3 x = true).",
                        "VernacExtend",
                        "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
                    ]
                },
                {
                    "command": [
                        "unfold partition in HIn.",
                        "VernacExtend",
                        "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
                    ]
                },
                {
                    "command": [
                        "apply SS.partition_spec1 in HIn; try apply proper_4.",
                        "VernacExtend",
                        "06f37bc7a625ae9a00aa2079b832da2f01c33884"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
                        "VernacExtend",
                        "a7c9013642ed49e0dfd76562445c749cf771d8fe"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pa p1); intro Hpap1.",
                        "VernacExtend",
                        "79fd953469953454cdf555f141f878e0b9c85a06"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite HB; apply CTcol_permutation_4; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "9cd339c1e6ab8d50badf8dc2f142c9d27c51f7fc"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem1 : S.mem p1 x = true).",
                        "VernacExtend",
                        "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem1'.",
                        "VernacExtend",
                        "8c9dd938ea5509b505abd1a20a5993907e307814"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem1'; try assumption.",
                        "VernacExtend",
                        "f164e2341f39233a5ad449154bd2a8370122eed7"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem1'; assumption.",
                        "VernacExtend",
                        "681492acb6561aeaf7c2e96426ff17c2bce9d369"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pa p2); intro Hpap2.",
                        "VernacExtend",
                        "4a3162ae4a6709f02345f924a2516a07cde8326d"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite HB; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "44082df67d284f1e9652dfc9bea65c3b1a190248"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem2 : S.mem p2 x = true).",
                        "VernacExtend",
                        "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem2'.",
                        "VernacExtend",
                        "695f18d9676847d06f13d7413633555db45dfbeb"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2'; try assumption.",
                        "VernacExtend",
                        "ba5833f2cc92e8dfc40ffd14b6653de0ff8f9d2b"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem2'; assumption.",
                        "VernacExtend",
                        "520899af16582b69ca428a5d019d345edffc99ab"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSSF.",
                        "VernacExtend",
                        "6c7889413aaf4461862ae95e71e2fd145390edd3"
                    ]
                },
                {
                    "command": [
                        "apply HSSF with x.",
                        "VernacExtend",
                        "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff); repeat split; assumption.",
                        "VernacExtend",
                        "5d181b3410061ca9e43fb7a168714c6e5551d29e"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff in Hmem).",
                        "VernacExtend",
                        "85fd40b998255f672b7ab6f5d0ea243e72e40b8e"
                    ]
                },
                {
                    "command": [
                        "destruct Hmem as [[Hmem1' Hmem2'] Hmem3'].",
                        "VernacExtend",
                        "cb4ed78412492b25520237d0a50142b96fdbdc2f"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.eq_dec pa p1); intro Hpap1; elim (Pos.eq_dec pa p2); intro Hpap2; elim (Pos.eq_dec pa p3); intro Hpap3.",
                        "VernacExtend",
                        "f1b786f62eb105e8cd0dbcce31833a3a37f2d8d1"
                    ]
                },
                {
                    "command": [
                        "do 2 subst; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "084784bf9b222dfe3247fd8d0060f29c2321c05e"
                    ]
                },
                {
                    "command": [
                        "do 2 subst; apply CTcol_trivial_1.",
                        "VernacExtend",
                        "084784bf9b222dfe3247fd8d0060f29c2321c05e"
                    ]
                },
                {
                    "command": [
                        "do 2 subst; apply CTcol_permutation_4; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "5cb26038d4f506794e900040df855475285d909f"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem1 : S.mem pb x = true).",
                        "VernacExtend",
                        "d854b6e2227048fa302957866f3addbe1a70a818"
                    ]
                },
                {
                    "command": [
                        "unfold partition in HIn.",
                        "VernacExtend",
                        "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
                    ]
                },
                {
                    "command": [
                        "apply SS.partition_spec1 in HIn; try apply proper_4.",
                        "VernacExtend",
                        "06f37bc7a625ae9a00aa2079b832da2f01c33884"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
                        "VernacExtend",
                        "a7c9013642ed49e0dfd76562445c749cf771d8fe"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem2 : S.mem p2 x = true).",
                        "VernacExtend",
                        "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem2'.",
                        "VernacExtend",
                        "695f18d9676847d06f13d7413633555db45dfbeb"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2'; try assumption.",
                        "VernacExtend",
                        "ba5833f2cc92e8dfc40ffd14b6653de0ff8f9d2b"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem2'; assumption.",
                        "VernacExtend",
                        "520899af16582b69ca428a5d019d345edffc99ab"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem3 : S.mem p3 x = true).",
                        "VernacExtend",
                        "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem3'.",
                        "VernacExtend",
                        "a05e74eb04f449f2caeea586c2136d3b90967362"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem3'; try assumption.",
                        "VernacExtend",
                        "9ca07e63d252d2b971ea9d2dc871845bd1e5805a"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem3'; assumption.",
                        "VernacExtend",
                        "0712d60d6dc23329f028cfb4919de0b6f841062e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HB.",
                        "VernacExtend",
                        "da54ab0bf36ea428dcdfb8f782f98549d1196250"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSSF.",
                        "VernacExtend",
                        "6c7889413aaf4461862ae95e71e2fd145390edd3"
                    ]
                },
                {
                    "command": [
                        "apply HSSF with x.",
                        "VernacExtend",
                        "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff); repeat split; assumption.",
                        "VernacExtend",
                        "5d181b3410061ca9e43fb7a168714c6e5551d29e"
                    ]
                },
                {
                    "command": [
                        "do 2 subst; apply CTcol_trivial_2.",
                        "VernacExtend",
                        "fc815a6c54affc7debb9512763c2de567d2caca3"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem2 : S.mem pb x = true).",
                        "VernacExtend",
                        "b864a532b4c1e8615e86b8bd79a5badcc660f113"
                    ]
                },
                {
                    "command": [
                        "unfold partition in HIn.",
                        "VernacExtend",
                        "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
                    ]
                },
                {
                    "command": [
                        "apply SS.partition_spec1 in HIn; try apply proper_4.",
                        "VernacExtend",
                        "06f37bc7a625ae9a00aa2079b832da2f01c33884"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
                        "VernacExtend",
                        "a7c9013642ed49e0dfd76562445c749cf771d8fe"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem1 : S.mem p1 x = true).",
                        "VernacExtend",
                        "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem1'.",
                        "VernacExtend",
                        "8c9dd938ea5509b505abd1a20a5993907e307814"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem1'; try assumption.",
                        "VernacExtend",
                        "f164e2341f39233a5ad449154bd2a8370122eed7"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem1'; assumption.",
                        "VernacExtend",
                        "681492acb6561aeaf7c2e96426ff17c2bce9d369"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem3 : S.mem p3 x = true).",
                        "VernacExtend",
                        "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem3'.",
                        "VernacExtend",
                        "a05e74eb04f449f2caeea586c2136d3b90967362"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem3'; try assumption.",
                        "VernacExtend",
                        "9ca07e63d252d2b971ea9d2dc871845bd1e5805a"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem3'; assumption.",
                        "VernacExtend",
                        "0712d60d6dc23329f028cfb4919de0b6f841062e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HB.",
                        "VernacExtend",
                        "da54ab0bf36ea428dcdfb8f782f98549d1196250"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSSF.",
                        "VernacExtend",
                        "6c7889413aaf4461862ae95e71e2fd145390edd3"
                    ]
                },
                {
                    "command": [
                        "apply HSSF with x.",
                        "VernacExtend",
                        "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff); repeat split; assumption.",
                        "VernacExtend",
                        "5d181b3410061ca9e43fb7a168714c6e5551d29e"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem3 : S.mem pb x = true).",
                        "VernacExtend",
                        "76b01d5667b5f1c55cc634b01904ffc9e8a0273a"
                    ]
                },
                {
                    "command": [
                        "unfold partition in HIn.",
                        "VernacExtend",
                        "00c4b5637a2b8c94e297cee648b8c07b7f3a1ca5"
                    ]
                },
                {
                    "command": [
                        "apply SS.partition_spec1 in HIn; try apply proper_4.",
                        "VernacExtend",
                        "06f37bc7a625ae9a00aa2079b832da2f01c33884"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.filter_2 in HIn; try assumption; apply proper_4.",
                        "VernacExtend",
                        "a7c9013642ed49e0dfd76562445c749cf771d8fe"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem1 : S.mem p1 x = true).",
                        "VernacExtend",
                        "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem1'.",
                        "VernacExtend",
                        "8c9dd938ea5509b505abd1a20a5993907e307814"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem1'; try assumption.",
                        "VernacExtend",
                        "f164e2341f39233a5ad449154bd2a8370122eed7"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem1'; assumption.",
                        "VernacExtend",
                        "681492acb6561aeaf7c2e96426ff17c2bce9d369"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem2 : S.mem p2 x = true).",
                        "VernacExtend",
                        "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem2'.",
                        "VernacExtend",
                        "695f18d9676847d06f13d7413633555db45dfbeb"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2'; try assumption.",
                        "VernacExtend",
                        "ba5833f2cc92e8dfc40ffd14b6653de0ff8f9d2b"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem2'; assumption.",
                        "VernacExtend",
                        "520899af16582b69ca428a5d019d345edffc99ab"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HB.",
                        "VernacExtend",
                        "da54ab0bf36ea428dcdfb8f782f98549d1196250"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSSF.",
                        "VernacExtend",
                        "6c7889413aaf4461862ae95e71e2fd145390edd3"
                    ]
                },
                {
                    "command": [
                        "apply HSSF with x.",
                        "VernacExtend",
                        "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff); repeat split; assumption.",
                        "VernacExtend",
                        "5d181b3410061ca9e43fb7a168714c6e5551d29e"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem1 : S.mem p1 x = true).",
                        "VernacExtend",
                        "71db6b3e7f8f11523f0e42fe2110d81e247c2b48"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem1'.",
                        "VernacExtend",
                        "8c9dd938ea5509b505abd1a20a5993907e307814"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem1'; try assumption.",
                        "VernacExtend",
                        "f164e2341f39233a5ad449154bd2a8370122eed7"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem1'; assumption.",
                        "VernacExtend",
                        "681492acb6561aeaf7c2e96426ff17c2bce9d369"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem2 : S.mem p2 x = true).",
                        "VernacExtend",
                        "0abf7ae9787422716f3da91ccb4fdd785cd8676a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem2'.",
                        "VernacExtend",
                        "695f18d9676847d06f13d7413633555db45dfbeb"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem2'; try assumption.",
                        "VernacExtend",
                        "ba5833f2cc92e8dfc40ffd14b6653de0ff8f9d2b"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem2'; assumption.",
                        "VernacExtend",
                        "520899af16582b69ca428a5d019d345edffc99ab"
                    ]
                },
                {
                    "command": [
                        "assert (Hmem3 : S.mem p3 x = true).",
                        "VernacExtend",
                        "56e2a8428f4ff3aa91922e2ebd9291be60cd5570"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq in Hmem3'.",
                        "VernacExtend",
                        "a05e74eb04f449f2caeea586c2136d3b90967362"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.add_neq_b in Hmem3'; try assumption.",
                        "VernacExtend",
                        "9ca07e63d252d2b971ea9d2dc871845bd1e5805a"
                    ]
                },
                {
                    "command": [
                        "rewrite SWP.Dec.F.remove_neq_b in Hmem3'; assumption.",
                        "VernacExtend",
                        "0712d60d6dc23329f028cfb4919de0b6f841062e"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSSF.",
                        "VernacExtend",
                        "6c7889413aaf4461862ae95e71e2fd145390edd3"
                    ]
                },
                {
                    "command": [
                        "apply HSSF with x.",
                        "VernacExtend",
                        "f7b60896d68ecfba740f7dc181d589fbf5a3d7cc"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite andb_true_iff); repeat split; assumption.",
                        "VernacExtend",
                        "5d181b3410061ca9e43fb7a168714c6e5551d29e"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSSa.",
                        "VernacExtend",
                        "5506597d803892f065c51c21ea869aa50aa90098"
                    ]
                },
                {
                    "command": [
                        "apply HSSa with s'; try assumption.",
                        "VernacExtend",
                        "483073a871efc01933db69a8dea5c55ebba51814"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "clear HSSF; assert (HSSF := HSSF'); clear HSSF'.",
                        "VernacExtend",
                        "6d2f8ac0e462908f69cabeb9b2de7a40cfa9e5c3"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSSF.",
                        "VernacExtend",
                        "6c7889413aaf4461862ae95e71e2fd145390edd3"
                    ]
                },
                {
                    "command": [
                        "apply HSSF with s; try assumption.",
                        "VernacExtend",
                        "bbb931199e153c8186c8087bccf446a4fcd1789e"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "assert (HSSS : ss_ok (snd_ss (partition_ss pb ss)) interp).",
                        "VernacExtend",
                        "6fbb011829e002b4b8a935ff0100f4cf9d24024b"
                    ]
                },
                {
                    "command": [
                        "clear Hmem; clear p1; clear p2; clear p3.",
                        "VernacExtend",
                        "ed8b004eb7b25736f8233ac8f00965d124c1bd73"
                    ]
                },
                {
                    "command": [
                        "intros s' Hs'.",
                        "VernacExtend",
                        "3deadcc30608da9a6aff57f4af0e4fa25bf0814d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_2 in Hs'.",
                        "VernacExtend",
                        "9f1b5a4aa67d65feb6f955d624cb5e564a52656e"
                    ]
                },
                {
                    "command": [
                        "unfold partition in Hs'.",
                        "VernacExtend",
                        "8f23a393cf03e9312767424229b6ae7059ad968d"
                    ]
                },
                {
                    "command": [
                        "apply SS.partition_spec2 in Hs'; try apply proper_4.",
                        "VernacExtend",
                        "8a48ad989e9a52b91f4273c8eda68c63baadf331"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.filter_1 in Hs'; try apply proper_5.",
                        "VernacExtend",
                        "17fca7cfc698b5f67e7aa1c133b908b5178aa0cc"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSS.",
                        "VernacExtend",
                        "0c6f6735f17e5226ced7397bdd7b7242c8c9ee11"
                    ]
                },
                {
                    "command": [
                        "apply HSS with s'; try assumption.",
                        "VernacExtend",
                        "a9c6fd2fc0a955d9feea733775679d279a605023"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "unfold ss_ok in HSSS.",
                        "VernacExtend",
                        "fdc1cc8671bafe9b053a240f69a56b02785f9916"
                    ]
                },
                {
                    "command": [
                        "apply HSSS with s; try assumption.",
                        "VernacExtend",
                        "7fad1c7bf1321435ac993a0dddbe6a3256b9b66f"
                    ]
                },
                {
                    "command": [
                        "apply SSWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "1384be09bdae5e6a6a9b9a52a4a0818cf5817db8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proper_6",
            "line_nb": 763,
            "steps": [
                {
                    "command": [
                        "intros p x y Hxy.",
                        "VernacExtend",
                        "58982029c7d1027c48a0351562281e9a31a3330f"
                    ]
                },
                {
                    "command": [
                        "destruct Hxy as [Hxyf Hxys].",
                        "VernacExtend",
                        "a23ca5383e55f028d233d8b68b05f2fc0ec6b690"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxyf; rewrite Hxys.",
                        "VernacExtend",
                        "2d74648f5d92f95f2793ff51436ff84b8bac5d33"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proper_7",
            "line_nb": 769,
            "steps": [
                {
                    "command": [
                        "intros p x y Hxy.",
                        "VernacExtend",
                        "58982029c7d1027c48a0351562281e9a31a3330f"
                    ]
                },
                {
                    "command": [
                        "destruct Hxy as [Hxyf Hxys].",
                        "VernacExtend",
                        "a23ca5383e55f028d233d8b68b05f2fc0ec6b690"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxyf; rewrite Hxys.",
                        "VernacExtend",
                        "2d74648f5d92f95f2793ff51436ff84b8bac5d33"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proper_8",
            "line_nb": 775,
            "steps": [
                {
                    "command": [
                        "intros p x y Hxy.",
                        "VernacExtend",
                        "58982029c7d1027c48a0351562281e9a31a3330f"
                    ]
                },
                {
                    "command": [
                        "destruct Hxy as [Hxyf Hxys].",
                        "VernacExtend",
                        "a23ca5383e55f028d233d8b68b05f2fc0ec6b690"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxyf.",
                        "VernacExtend",
                        "aa6148dd89b9d4bb378d64655cc5110db122ad76"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proper_9",
            "line_nb": 781,
            "steps": [
                {
                    "command": [
                        "intros p x y Hxy.",
                        "VernacExtend",
                        "58982029c7d1027c48a0351562281e9a31a3330f"
                    ]
                },
                {
                    "command": [
                        "destruct Hxy as [Hxyf Hxys].",
                        "VernacExtend",
                        "a23ca5383e55f028d233d8b68b05f2fc0ec6b690"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxyf.",
                        "VernacExtend",
                        "aa6148dd89b9d4bb378d64655cc5110db122ad76"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_sp_ok",
            "line_nb": 787,
            "steps": [
                {
                    "command": [
                        "intros A B H pa pb sp interp HA HB HSP.",
                        "VernacExtend",
                        "1f0b7432365db393dbddf5b180327dcca87c93ba"
                    ]
                },
                {
                    "command": [
                        "unfold subst_in_sp.",
                        "VernacExtend",
                        "ad75e1e5f915cc135bc4ae1e247c49834d7aa9b4"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok.",
                        "VernacExtend",
                        "4064042813c4c530bb8bbcca6ae9cdc475e09611"
                    ]
                },
                {
                    "command": [
                        "intros p Hp.",
                        "VernacExtend",
                        "cf737bd4e185c03175335af1ca6ae52da34cba56"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_2 in Hp.",
                        "VernacExtend",
                        "e9400b1fd4b603a5082d762c6d6857e69c09163c"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite SPWEqP.MP.Dec.F.union_iff in Hp.",
                        "VernacExtend",
                        "8a26e834956f81b7351ccf283ed04cbb98fce7eb"
                    ]
                },
                {
                    "command": [
                        "elim Hp; intro HInAux; clear Hp.",
                        "VernacExtend",
                        "0faf5d302d0d31bb140c93ec93d6830dadcecb2c"
                    ]
                },
                {
                    "command": [
                        "assert (HSPM : sp_ok (fst_sp (partition_sp_1 pb sp)) interp).",
                        "VernacExtend",
                        "7ada2cff9b40a45667c253eabf258c0cf27dc663"
                    ]
                },
                {
                    "command": [
                        "intros p' Hp'.",
                        "VernacExtend",
                        "d44cbe44f23a82fddbe700c6789b711bf23981fd"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
                        "VernacExtend",
                        "bd0d45784d30adf12495773f93ff771720f0b3ac"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_1 in Hp'.",
                        "VernacExtend",
                        "b90c7100f70c8b06570e013f9432a1f36aca9739"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec1 in Hp'; try apply proper_6.",
                        "VernacExtend",
                        "2fcb5c7b49c5503a0b1f0033be3a8f76855b3ddd"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_1 in Hp'; try apply proper_6.",
                        "VernacExtend",
                        "d7fed07cdc2426fc74107c2a16d934e9083ae590"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSP.",
                        "VernacExtend",
                        "21b83342a14424d3a051b335fed250b0e9dd0187"
                    ]
                },
                {
                    "command": [
                        "apply HSP; try assumption.",
                        "VernacExtend",
                        "08cfdf823931beaa23603fd914575874b73389d3"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
                    ]
                },
                {
                    "command": [
                        "clear HSP.",
                        "VernacExtend",
                        "3879f53d61248ee1341ae690be862be474cf56bc"
                    ]
                },
                {
                    "command": [
                        "elim HInAux; intro HIn; clear HInAux.",
                        "VernacExtend",
                        "a9839f60ab92ad5a68974d1ab1be6c3fe56d5357"
                    ]
                },
                {
                    "command": [
                        "assert (HSPF : sp_ok (fst_sp (partition_sp_2 pb (fst_sp (partition_sp_1 pb sp)))) interp).",
                        "VernacExtend",
                        "6c8b924c7ffdf9a4dac04a35e2ad55c19a0a6d44"
                    ]
                },
                {
                    "command": [
                        "intros p' Hp'.",
                        "VernacExtend",
                        "d44cbe44f23a82fddbe700c6789b711bf23981fd"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
                        "VernacExtend",
                        "bd0d45784d30adf12495773f93ff771720f0b3ac"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_1 in Hp'.",
                        "VernacExtend",
                        "b90c7100f70c8b06570e013f9432a1f36aca9739"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec1 in Hp'; try apply proper_8.",
                        "VernacExtend",
                        "7fb3dbd3f6f6a87b9df2f684d731a5515739c3f3"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_1 in Hp'; try apply proper_8.",
                        "VernacExtend",
                        "04a0c66e552b6c6d834e6df2384f82deb76edd7b"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPM.",
                        "VernacExtend",
                        "538f6bf5c06de4fd94c3fd1533789c62ad3accc6"
                    ]
                },
                {
                    "command": [
                        "apply HSPM; try assumption.",
                        "VernacExtend",
                        "381444f401e80649da9fc604c35f22241990bb39"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
                    ]
                },
                {
                    "command": [
                        "clear HSPM.",
                        "VernacExtend",
                        "3636e00fcd15c960fd3c68003980a2498ea889c4"
                    ]
                },
                {
                    "command": [
                        "assert (HSPF' : sp_ok (SP.fold (subst_in_sp_aux_1 pa) (fst_sp (partition_sp_2 pb (fst_sp (partition_sp_1 pb sp)))) SP.empty) interp).",
                        "VernacExtend",
                        "2637822e34a7a469100100e710383336fa6837b2"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.fold_rec_nodep; try apply sp_ok_empty.",
                        "VernacExtend",
                        "48264abecdc6a8f704dee6a9461c4882a0f08d17"
                    ]
                },
                {
                    "command": [
                        "clear HIn.",
                        "VernacExtend",
                        "1d48772959529fd575bde9f6388854cba83cb7e0"
                    ]
                },
                {
                    "command": [
                        "intros x a HInRec HSPRec.",
                        "VernacExtend",
                        "ae04372b3d5268016389725a1743ca0a92d5f7e7"
                    ]
                },
                {
                    "command": [
                        "intros p' Hp'.",
                        "VernacExtend",
                        "d44cbe44f23a82fddbe700c6789b711bf23981fd"
                    ]
                },
                {
                    "command": [
                        "unfold subst_in_sp_aux_1 in *.",
                        "VernacExtend",
                        "6fca745491ea62384748816fcbcda96d989d841b"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
                        "VernacExtend",
                        "bd0d45784d30adf12495773f93ff771720f0b3ac"
                    ]
                },
                {
                    "command": [
                        "rewrite SPWEqP.MP.Dec.F.add_iff in Hp'.",
                        "VernacExtend",
                        "bfdfe5376c9ac6ef988a6ae217e9940ef2b14a03"
                    ]
                },
                {
                    "command": [
                        "elim Hp'; intro HIn; clear Hp'.",
                        "VernacExtend",
                        "1689145593bba289608cebc7312da8feff7ad922"
                    ]
                },
                {
                    "command": [
                        "destruct HIn as [HEq1 HEq2].",
                        "VernacExtend",
                        "6daf06da13423befd478c7ccd216417d57a53803"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq1; rewrite <- HEq2.",
                        "VernacExtend",
                        "3bee1ae0c146641b1c77377224fce5fd9c2fd843"
                    ]
                },
                {
                    "command": [
                        "unfold new_pair_1.",
                        "VernacExtend",
                        "5a4419ec5f6b9386d6ec17e62a74bac34e900b9c"
                    ]
                },
                {
                    "command": [
                        "clear HSPRec; clear a.",
                        "VernacExtend",
                        "d51b5b72a5a60fd4216b323e9ed61db75fe966a6"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.min_spec pa (sndpp(x))); intro Hmin.",
                        "VernacExtend",
                        "df89997dcb65dabe2c60a331cdfd2a951f60729b"
                    ]
                },
                {
                    "command": [
                        "destruct Hmin as [HLt Hmin].",
                        "VernacExtend",
                        "79e8a1fddc3ec618881f184f51938c9a1c68479e"
                    ]
                },
                {
                    "command": [
                        "assert (Hmax : Pos.max pa (sndpp(x)) = (sndpp(x))) by (apply Pos.max_r; apply Pos.lt_le_incl; assumption).",
                        "VernacExtend",
                        "b16d3d001282003d5b8e4d807fc658e7f2f38a07"
                    ]
                },
                {
                    "command": [
                        "assert (HF : fstpp(pa, sndpp(x)) = pa) by (unfold fstpp; assumption).",
                        "VernacExtend",
                        "ac04c4164a3a3952ac85de5ab6e38180a935511d"
                    ]
                },
                {
                    "command": [
                        "assert (HS : sndpp(pa, sndpp(x)) = sndpp(x)) by (unfold sndpp; assumption).",
                        "VernacExtend",
                        "f4b6acb18459dbaf909bad699e6da91032bbb237"
                    ]
                },
                {
                    "command": [
                        "rewrite HF; rewrite HS.",
                        "VernacExtend",
                        "ee3bde2ba1b796917e290410b3f25d55a22a08ae"
                    ]
                },
                {
                    "command": [
                        "assert (Hpb : fstpp(x) = pb).",
                        "VernacExtend",
                        "e52fda7c49f27b56a70deb76b7d16a2d49aaf377"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_2 in HInRec.",
                        "VernacExtend",
                        "f7f58445c859c0fd81a45956e3c07868390655c4"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec1 in HInRec; try apply proper_8.",
                        "VernacExtend",
                        "24da1138b98374d734036216fe838b473128d4b4"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_2 in HInRec; try apply proper_8.",
                        "VernacExtend",
                        "6d53c9648a2cebf4c0e640a4b55bbd77e77aacd1"
                    ]
                },
                {
                    "command": [
                        "apply Ndec.Peqb_complete.",
                        "VernacExtend",
                        "2195172d6452a85b5ac4faff2cdf92593d7de358"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro HEq4.",
                        "VernacExtend",
                        "7be3df6d1c773f50f088b1f059acfe7a07644070"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPF.",
                        "VernacExtend",
                        "10fd94590d88075bd1a1cf0b65808aa14c4da07f"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1 in HInRec.",
                        "VernacExtend",
                        "63fb6174a2f9ae5adc29901fa0187f8e9b0cb886"
                    ]
                },
                {
                    "command": [
                        "apply (HSPF x) in HInRec.",
                        "VernacExtend",
                        "5817a26ad64e114c567be40d13d768d079d52013"
                    ]
                },
                {
                    "command": [
                        "apply HInRec.",
                        "VernacExtend",
                        "a2e759c69ac985c67b8b6f29cc0a9aca204e288d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hpb; rewrite <- HEq4; rewrite HA; rewrite HB; rewrite H; reflexivity.",
                        "VernacExtend",
                        "5456b682c9807bc670cacf723cc545d6b1b3169d"
                    ]
                },
                {
                    "command": [
                        "destruct Hmin as [HLe Hmin].",
                        "VernacExtend",
                        "354c02d4f633b5d709524a10f1c4c7d4355bbc2d"
                    ]
                },
                {
                    "command": [
                        "assert (Hmax : Pos.max pa (sndpp(x)) = pa) by (apply Pos.max_l; assumption).",
                        "VernacExtend",
                        "5468535630274d32c47aff281cdef01b4323cf9d"
                    ]
                },
                {
                    "command": [
                        "assert (HF : fstpp(pa, sndpp(x)) = sndpp(x)) by (unfold fstpp; assumption).",
                        "VernacExtend",
                        "874bebbeaa841bfd508d35ead4a07f4197906fa7"
                    ]
                },
                {
                    "command": [
                        "assert (HS : sndpp(pa, sndpp(x)) = pa) by (unfold sndpp; assumption).",
                        "VernacExtend",
                        "96d0c0df3121b5677c7b0b08856e87b0c134fab7"
                    ]
                },
                {
                    "command": [
                        "rewrite HF; rewrite HS.",
                        "VernacExtend",
                        "ee3bde2ba1b796917e290410b3f25d55a22a08ae"
                    ]
                },
                {
                    "command": [
                        "assert (Hpb : fstpp(x) = pb).",
                        "VernacExtend",
                        "e52fda7c49f27b56a70deb76b7d16a2d49aaf377"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_2 in HInRec.",
                        "VernacExtend",
                        "f7f58445c859c0fd81a45956e3c07868390655c4"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec1 in HInRec; try apply proper_8.",
                        "VernacExtend",
                        "24da1138b98374d734036216fe838b473128d4b4"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_2 in HInRec; try apply proper_8.",
                        "VernacExtend",
                        "6d53c9648a2cebf4c0e640a4b55bbd77e77aacd1"
                    ]
                },
                {
                    "command": [
                        "apply Ndec.Peqb_complete.",
                        "VernacExtend",
                        "2195172d6452a85b5ac4faff2cdf92593d7de358"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro HEq4.",
                        "VernacExtend",
                        "7be3df6d1c773f50f088b1f059acfe7a07644070"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPF.",
                        "VernacExtend",
                        "10fd94590d88075bd1a1cf0b65808aa14c4da07f"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1 in HInRec.",
                        "VernacExtend",
                        "63fb6174a2f9ae5adc29901fa0187f8e9b0cb886"
                    ]
                },
                {
                    "command": [
                        "apply (HSPF x) in HInRec.",
                        "VernacExtend",
                        "5817a26ad64e114c567be40d13d768d079d52013"
                    ]
                },
                {
                    "command": [
                        "apply HInRec.",
                        "VernacExtend",
                        "a2e759c69ac985c67b8b6f29cc0a9aca204e288d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hpb; rewrite HEq4; rewrite HA; rewrite HB; rewrite H; reflexivity.",
                        "VernacExtend",
                        "fe801916ff3ebc201d54f33a8a01cc2320528699"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPRec.",
                        "VernacExtend",
                        "dfc91ee4bb83eb9691b20184f0fffbbea0990c63"
                    ]
                },
                {
                    "command": [
                        "apply HSPRec.",
                        "VernacExtend",
                        "0977ac206c87cadf000e78af8c062fc2287c359e"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
                    ]
                },
                {
                    "command": [
                        "clear HSPF; assert (HSPF := HSPF'); clear HSPF'.",
                        "VernacExtend",
                        "c95c968101bbb48cb9b1a45842b140297960260f"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPF.",
                        "VernacExtend",
                        "10fd94590d88075bd1a1cf0b65808aa14c4da07f"
                    ]
                },
                {
                    "command": [
                        "apply HSPF.",
                        "VernacExtend",
                        "f00d3bfa2d47e92b48f8528a720a9a7cb380aa75"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
                    ]
                },
                {
                    "command": [
                        "assert (HSPS : sp_ok (snd_sp (partition_sp_2 pb (fst_sp (partition_sp_1 pb sp)))) interp).",
                        "VernacExtend",
                        "5ab6d810a3ecaf73a7a3da2bc8c4041a9158189e"
                    ]
                },
                {
                    "command": [
                        "intros p' Hp'.",
                        "VernacExtend",
                        "d44cbe44f23a82fddbe700c6789b711bf23981fd"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
                        "VernacExtend",
                        "bd0d45784d30adf12495773f93ff771720f0b3ac"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_1 in Hp'.",
                        "VernacExtend",
                        "b90c7100f70c8b06570e013f9432a1f36aca9739"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec2 in Hp'; try apply proper_8.",
                        "VernacExtend",
                        "f4870e6eb9b62de4cec54d723585fc5fb3cf7e8c"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_1 in Hp'; try apply proper_9.",
                        "VernacExtend",
                        "4085f7c9f6d2061006308ecd4af562bab0fbe387"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPM.",
                        "VernacExtend",
                        "538f6bf5c06de4fd94c3fd1533789c62ad3accc6"
                    ]
                },
                {
                    "command": [
                        "apply HSPM; try assumption.",
                        "VernacExtend",
                        "381444f401e80649da9fc604c35f22241990bb39"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
                    ]
                },
                {
                    "command": [
                        "clear HSPM.",
                        "VernacExtend",
                        "3636e00fcd15c960fd3c68003980a2498ea889c4"
                    ]
                },
                {
                    "command": [
                        "assert (HSPS' : sp_ok (SP.fold (subst_in_sp_aux_2 pa) (snd_sp (partition_sp_2 pb (fst_sp (partition_sp_1 pb sp)))) SP.empty) interp).",
                        "VernacExtend",
                        "4883d44d6c1fa16402c94ae93a0e8e6ec48195a4"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.fold_rec_nodep; try apply sp_ok_empty.",
                        "VernacExtend",
                        "48264abecdc6a8f704dee6a9461c4882a0f08d17"
                    ]
                },
                {
                    "command": [
                        "clear HIn.",
                        "VernacExtend",
                        "1d48772959529fd575bde9f6388854cba83cb7e0"
                    ]
                },
                {
                    "command": [
                        "intros x a HInRec HSPRec.",
                        "VernacExtend",
                        "ae04372b3d5268016389725a1743ca0a92d5f7e7"
                    ]
                },
                {
                    "command": [
                        "intros p' Hp'.",
                        "VernacExtend",
                        "d44cbe44f23a82fddbe700c6789b711bf23981fd"
                    ]
                },
                {
                    "command": [
                        "unfold subst_in_sp_aux_2 in *.",
                        "VernacExtend",
                        "26ff046b4e6ad3fdb6777185e59a8d30717de979"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
                        "VernacExtend",
                        "bd0d45784d30adf12495773f93ff771720f0b3ac"
                    ]
                },
                {
                    "command": [
                        "rewrite SPWEqP.MP.Dec.F.add_iff in Hp'.",
                        "VernacExtend",
                        "bfdfe5376c9ac6ef988a6ae217e9940ef2b14a03"
                    ]
                },
                {
                    "command": [
                        "elim Hp'; intro HIn; clear Hp'.",
                        "VernacExtend",
                        "1689145593bba289608cebc7312da8feff7ad922"
                    ]
                },
                {
                    "command": [
                        "destruct HIn as [HEq1 HEq2].",
                        "VernacExtend",
                        "6daf06da13423befd478c7ccd216417d57a53803"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HEq1; rewrite <- HEq2.",
                        "VernacExtend",
                        "3bee1ae0c146641b1c77377224fce5fd9c2fd843"
                    ]
                },
                {
                    "command": [
                        "unfold new_pair_2.",
                        "VernacExtend",
                        "d6d984c88c8012f677abbcd9bad3a40e291147d0"
                    ]
                },
                {
                    "command": [
                        "clear HSPRec; clear a.",
                        "VernacExtend",
                        "d51b5b72a5a60fd4216b323e9ed61db75fe966a6"
                    ]
                },
                {
                    "command": [
                        "elim (Pos.min_spec (fstpp(x)) pa); intro Hmin.",
                        "VernacExtend",
                        "e54683c395464ea3af0f5f8158c21e8dcc5b52dc"
                    ]
                },
                {
                    "command": [
                        "destruct Hmin as [HLt Hmin].",
                        "VernacExtend",
                        "79e8a1fddc3ec618881f184f51938c9a1c68479e"
                    ]
                },
                {
                    "command": [
                        "assert (Hmax : Pos.max (fstpp(x)) pa = pa) by (apply Pos.max_r; apply Pos.lt_le_incl; assumption).",
                        "VernacExtend",
                        "4cc143c9a58c72eec0865570150f4d61b2d6db79"
                    ]
                },
                {
                    "command": [
                        "assert (HF : fstpp(fstpp(x), pa) = fstpp(x)) by (unfold fstpp; assumption).",
                        "VernacExtend",
                        "8c39658d48acb02dc562ec2946112119fd8ba3f2"
                    ]
                },
                {
                    "command": [
                        "assert (HS : sndpp(fstpp(x), pa) = pa) by (unfold sndpp; assumption).",
                        "VernacExtend",
                        "fa629fca80f6907edbea28b021ea465d579e1bbf"
                    ]
                },
                {
                    "command": [
                        "rewrite HF; rewrite HS.",
                        "VernacExtend",
                        "ee3bde2ba1b796917e290410b3f25d55a22a08ae"
                    ]
                },
                {
                    "command": [
                        "assert (Hpb : sndpp(x) = pb).",
                        "VernacExtend",
                        "33ad2b308279920eee31ca0fad7b9463d5fd9a95"
                    ]
                },
                {
                    "command": [
                        "assert (HIn : SP.In x (fst_sp (partition_sp_1 pb sp))).",
                        "VernacExtend",
                        "acb2ad8bceff19dc0783b4dae8044181ae6540ff"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_2 in HInRec.",
                        "VernacExtend",
                        "f7f58445c859c0fd81a45956e3c07868390655c4"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec2 in HInRec; try apply proper_8.",
                        "VernacExtend",
                        "559e9c37ff6c6f1dd09bd7f6d13b85eb2302e0ec"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_1 in HInRec; try apply proper_9.",
                        "VernacExtend",
                        "9aa06175a956e5a65a4c7b5cb97a42a4ef50edce"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_2 in HInRec.",
                        "VernacExtend",
                        "f7f58445c859c0fd81a45956e3c07868390655c4"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec2 in HInRec; try apply proper_8.",
                        "VernacExtend",
                        "559e9c37ff6c6f1dd09bd7f6d13b85eb2302e0ec"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_2 in HInRec; try apply proper_9.",
                        "VernacExtend",
                        "ebea96c215cd6acebaa8cf9290648b1751edaa51"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_1 in HIn.",
                        "VernacExtend",
                        "b1fddebce864199bb3aa0c3bbca492d370830420"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec1 in HIn; try apply proper_6.",
                        "VernacExtend",
                        "f3a5ee699186361fbaccfaa439ace0574a3b6b7c"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_2 in HIn; try apply proper_6.",
                        "VernacExtend",
                        "80e15299f5b30390c1414be692d6fe21452b12b5"
                    ]
                },
                {
                    "command": [
                        "apply orb_true_iff in HIn.",
                        "VernacExtend",
                        "088e1aaf2af973af4433ab014a71f2ebbae35888"
                    ]
                },
                {
                    "command": [
                        "elim HIn; intro HEqb; clear HIn.",
                        "VernacExtend",
                        "7783e18e79480f990c42c6561cbd98b2e3db2bf2"
                    ]
                },
                {
                    "command": [
                        "apply Peqb_true_eq in HEqb.",
                        "VernacExtend",
                        "27abc4a706f89b86fb6b691c4eabbddc9e68363f"
                    ]
                },
                {
                    "command": [
                        "apply negb_true_iff in HInRec.",
                        "VernacExtend",
                        "646e916fa95c45aa88c7af0594e1758fd93d080e"
                    ]
                },
                {
                    "command": [
                        "apply Pos.eqb_neq in HInRec.",
                        "VernacExtend",
                        "57175e680069d0c074e16f1ca80be1c8bdaae3b9"
                    ]
                },
                {
                    "command": [
                        "rewrite HEqb in HInRec.",
                        "VernacExtend",
                        "0d362ac8f412bc095da21af205497671798bf2d4"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply Peqb_true_eq in HEqb.",
                        "VernacExtend",
                        "27abc4a706f89b86fb6b691c4eabbddc9e68363f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro HEq4.",
                        "VernacExtend",
                        "7be3df6d1c773f50f088b1f059acfe7a07644070"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPS.",
                        "VernacExtend",
                        "793759c1534bc34038a160befa9bc8d31e0c57eb"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1 in HInRec.",
                        "VernacExtend",
                        "63fb6174a2f9ae5adc29901fa0187f8e9b0cb886"
                    ]
                },
                {
                    "command": [
                        "apply (HSPS x) in HInRec.",
                        "VernacExtend",
                        "5d6e44ba973184564c985cee174b0f442a6f55ac"
                    ]
                },
                {
                    "command": [
                        "apply HInRec.",
                        "VernacExtend",
                        "a2e759c69ac985c67b8b6f29cc0a9aca204e288d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hpb; rewrite HEq4; rewrite HA; rewrite HB; rewrite H; reflexivity.",
                        "VernacExtend",
                        "fe801916ff3ebc201d54f33a8a01cc2320528699"
                    ]
                },
                {
                    "command": [
                        "destruct Hmin as [HLe Hmin].",
                        "VernacExtend",
                        "354c02d4f633b5d709524a10f1c4c7d4355bbc2d"
                    ]
                },
                {
                    "command": [
                        "assert (Hmax : Pos.max (fstpp(x)) pa = fstpp(x)) by (apply Pos.max_l; assumption).",
                        "VernacExtend",
                        "db511693db047e740fd3e9745979ce350acb90cc"
                    ]
                },
                {
                    "command": [
                        "assert (HF : fstpp(fstpp(x), pa) = pa) by (unfold fstpp; assumption).",
                        "VernacExtend",
                        "90b06a103e1dfce27f071d565ac1ec2c3f170dbc"
                    ]
                },
                {
                    "command": [
                        "assert (HS : sndpp(fstpp(x), pa) = fstpp(x)) by (unfold sndpp; assumption).",
                        "VernacExtend",
                        "f980d77550ed50c11e7176a6f527dcf5344ad11d"
                    ]
                },
                {
                    "command": [
                        "rewrite HF; rewrite HS.",
                        "VernacExtend",
                        "ee3bde2ba1b796917e290410b3f25d55a22a08ae"
                    ]
                },
                {
                    "command": [
                        "assert (Hpb : sndpp(x) = pb).",
                        "VernacExtend",
                        "33ad2b308279920eee31ca0fad7b9463d5fd9a95"
                    ]
                },
                {
                    "command": [
                        "assert (HIn : SP.In x (fst_sp (partition_sp_1 pb sp))).",
                        "VernacExtend",
                        "acb2ad8bceff19dc0783b4dae8044181ae6540ff"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_2 in HInRec.",
                        "VernacExtend",
                        "f7f58445c859c0fd81a45956e3c07868390655c4"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec2 in HInRec; try apply proper_8.",
                        "VernacExtend",
                        "559e9c37ff6c6f1dd09bd7f6d13b85eb2302e0ec"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_1 in HInRec; try apply proper_9.",
                        "VernacExtend",
                        "9aa06175a956e5a65a4c7b5cb97a42a4ef50edce"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_2 in HInRec.",
                        "VernacExtend",
                        "f7f58445c859c0fd81a45956e3c07868390655c4"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec2 in HInRec; try apply proper_8.",
                        "VernacExtend",
                        "559e9c37ff6c6f1dd09bd7f6d13b85eb2302e0ec"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_2 in HInRec; try apply proper_9.",
                        "VernacExtend",
                        "ebea96c215cd6acebaa8cf9290648b1751edaa51"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_1 in HIn.",
                        "VernacExtend",
                        "b1fddebce864199bb3aa0c3bbca492d370830420"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec1 in HIn; try apply proper_6.",
                        "VernacExtend",
                        "f3a5ee699186361fbaccfaa439ace0574a3b6b7c"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_2 in HIn; try apply proper_6.",
                        "VernacExtend",
                        "80e15299f5b30390c1414be692d6fe21452b12b5"
                    ]
                },
                {
                    "command": [
                        "apply orb_true_iff in HIn.",
                        "VernacExtend",
                        "088e1aaf2af973af4433ab014a71f2ebbae35888"
                    ]
                },
                {
                    "command": [
                        "elim HIn; intro HEqb; clear HIn.",
                        "VernacExtend",
                        "7783e18e79480f990c42c6561cbd98b2e3db2bf2"
                    ]
                },
                {
                    "command": [
                        "apply Peqb_true_eq in HEqb.",
                        "VernacExtend",
                        "27abc4a706f89b86fb6b691c4eabbddc9e68363f"
                    ]
                },
                {
                    "command": [
                        "apply negb_true_iff in HInRec.",
                        "VernacExtend",
                        "646e916fa95c45aa88c7af0594e1758fd93d080e"
                    ]
                },
                {
                    "command": [
                        "apply Pos.eqb_neq in HInRec.",
                        "VernacExtend",
                        "57175e680069d0c074e16f1ca80be1c8bdaae3b9"
                    ]
                },
                {
                    "command": [
                        "rewrite HEqb in HInRec.",
                        "VernacExtend",
                        "0d362ac8f412bc095da21af205497671798bf2d4"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply Peqb_true_eq in HEqb.",
                        "VernacExtend",
                        "27abc4a706f89b86fb6b691c4eabbddc9e68363f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro HEq4.",
                        "VernacExtend",
                        "7be3df6d1c773f50f088b1f059acfe7a07644070"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPS.",
                        "VernacExtend",
                        "793759c1534bc34038a160befa9bc8d31e0c57eb"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1 in HInRec.",
                        "VernacExtend",
                        "63fb6174a2f9ae5adc29901fa0187f8e9b0cb886"
                    ]
                },
                {
                    "command": [
                        "apply (HSPS x) in HInRec.",
                        "VernacExtend",
                        "5d6e44ba973184564c985cee174b0f442a6f55ac"
                    ]
                },
                {
                    "command": [
                        "apply HInRec.",
                        "VernacExtend",
                        "a2e759c69ac985c67b8b6f29cc0a9aca204e288d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hpb; rewrite <- HEq4; rewrite HA; rewrite HB; rewrite H; reflexivity.",
                        "VernacExtend",
                        "5456b682c9807bc670cacf723cc545d6b1b3169d"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPRec.",
                        "VernacExtend",
                        "dfc91ee4bb83eb9691b20184f0fffbbea0990c63"
                    ]
                },
                {
                    "command": [
                        "apply HSPRec.",
                        "VernacExtend",
                        "0977ac206c87cadf000e78af8c062fc2287c359e"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
                    ]
                },
                {
                    "command": [
                        "clear HSPS; assert (HSPS := HSPS'); clear HSPS'.",
                        "VernacExtend",
                        "76a5f018acb8b37751c401c235b6a43b6c2461ad"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPS.",
                        "VernacExtend",
                        "793759c1534bc34038a160befa9bc8d31e0c57eb"
                    ]
                },
                {
                    "command": [
                        "apply HSPS.",
                        "VernacExtend",
                        "920f991279990f5e33c8698919d57e3b9f50832a"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
                    ]
                },
                {
                    "command": [
                        "assert (HIn := HInAux); clear HInAux.",
                        "VernacExtend",
                        "560e1a973ce26b4e4deb2ecec839cec71fe19c35"
                    ]
                },
                {
                    "command": [
                        "assert (HSPK : sp_ok (snd_sp (partition_sp_1 pb sp)) interp).",
                        "VernacExtend",
                        "30ca8c97e650f917347b22985f28675ca5ce708b"
                    ]
                },
                {
                    "command": [
                        "intros p' Hp'.",
                        "VernacExtend",
                        "d44cbe44f23a82fddbe700c6789b711bf23981fd"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_2 in Hp'.",
                        "VernacExtend",
                        "bd0d45784d30adf12495773f93ff771720f0b3ac"
                    ]
                },
                {
                    "command": [
                        "unfold partition_sp_1 in Hp'.",
                        "VernacExtend",
                        "b90c7100f70c8b06570e013f9432a1f36aca9739"
                    ]
                },
                {
                    "command": [
                        "apply SP.partition_spec2 in Hp'; try apply proper_6.",
                        "VernacExtend",
                        "10f3e6dbc8075048593b9ff277457aa0db1f1180"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.filter_1 in Hp'; try apply proper_7.",
                        "VernacExtend",
                        "6eeb479ec5fc55c5601f433734ac2e69f1d43600"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSP.",
                        "VernacExtend",
                        "21b83342a14424d3a051b335fed250b0e9dd0187"
                    ]
                },
                {
                    "command": [
                        "apply HSP; try assumption.",
                        "VernacExtend",
                        "08cfdf823931beaa23603fd914575874b73389d3"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
                    ]
                },
                {
                    "command": [
                        "unfold sp_ok in HSPK.",
                        "VernacExtend",
                        "ad73bd89c517ac060c25cd3090e24fb2751ac871"
                    ]
                },
                {
                    "command": [
                        "apply HSPK; try assumption.",
                        "VernacExtend",
                        "9a3c2cabf733f79f9405ee6cc9924b88d3c457ae"
                    ]
                },
                {
                    "command": [
                        "apply SPWEqP.MP.Dec.F.mem_1; assumption.",
                        "VernacExtend",
                        "f4002d22d5556c21ab4d77b44e36cc567b96ee44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}