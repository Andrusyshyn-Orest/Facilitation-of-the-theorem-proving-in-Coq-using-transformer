{
    "filename": "Tactics/Coinc/Permutations.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Utils.arity.",
            "VernacRequire",
            "b34ccf9f73ee0f3947fd453a9566342b73aa2d09"
        ],
        [
            "Require Import GeoCoq.Tactics.Coinc.tactics_axioms.",
            "VernacRequire",
            "dae2d8a3c01ff4efcaaa8aa25b7ed65c5e8f9c06"
        ],
        [
            "Section Permutations.",
            "VernacBeginSection",
            "aeb232520775f45999659a461017ae9ce8c86217"
        ],
        [
            "Context `{COT : Coinc_theory}.",
            "VernacContext",
            "0e36917f6f4b0f9b0f88c049c8af9e0089cb4391"
        ],
        [
            "Lemma PermWdOK : forall (cp1 cp2 : cartesianPower COINCpoint (S (S n))), app wd cp1 -> Permutation.Permutation (CPToList cp1) (CPToList cp2) -> app wd cp2.",
            "VernacStartTheoremProof",
            "aaeabf9130a47a1c5bdc52e09ce0172cc8f90b0c"
        ],
        [
            "intros cp1 cp2 Happ HPerm.",
            "VernacExtend",
            "6869e5b0dbc64a7a27d281f749dfcb67c1d4d8fc"
        ],
        [
            "apply PermOK with cp1; try assumption; clear HPerm; clear Happ; clear cp2; clear cp1.",
            "VernacExtend",
            "10439613e48abae68d141d87b132c9d046c474b4"
        ],
        [
            "intros A X Happ; apply app_n_1_app with A X; try (apply wd_perm_1; apply app_app_1_n with (consHeadCP A X); try assumption).",
            "VernacExtend",
            "e8f6b81148ddaa40ba50488af03adebf7af862ed"
        ],
        [
            "simpl; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "apply consHeadCPTl.",
            "VernacExtend",
            "9a8818f104f89ec8c3cdcf7f2caba24c83d576f4"
        ],
        [
            "apply consTailCPAbl.",
            "VernacExtend",
            "4ba0c00ed010c5dd51813b058a29c8430b9f2b2a"
        ],
        [
            "apply consTailCPLast.",
            "VernacExtend",
            "fa80d918b5e14f01036bd09ed64c3eb4a771cf25"
        ],
        [
            "intros A B X Happ; apply app_2_n_app_default with B A X X; try (apply wd_perm_2; apply app_app_2_n_default with X (consHeadCP A (consHeadCP B X)); try assumption).",
            "VernacExtend",
            "f47091db334c98a00ba625cd4dca744270b372d5"
        ],
        [
            "simpl; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "rewrite consHeadCPTl; rewrite consHeadCPHd; reflexivity.",
            "VernacExtend",
            "f6c6290c09f2537c73df9b561a5bfa6f86d780b5"
        ],
        [
            "rewrite consHeadCPTl; apply consTailCPTlD.",
            "VernacExtend",
            "df84c359a3a88437012355f65bf883233c83ea90"
        ],
        [
            "simpl; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "rewrite consHeadCPTl; rewrite consHeadCPHd; reflexivity.",
            "VernacExtend",
            "f6c6290c09f2537c73df9b561a5bfa6f86d780b5"
        ],
        [
            "rewrite consHeadCPTl; apply consTailCPTlD.",
            "VernacExtend",
            "df84c359a3a88437012355f65bf883233c83ea90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PermCoincOK : forall (cp1 cp2 : cartesianPower COINCpoint (S (S (S n)))), app coinc cp1 -> Permutation.Permutation (CPToList cp1) (CPToList cp2) -> app coinc cp2.",
            "VernacStartTheoremProof",
            "6c03011abd9a934dd7b69464e148f01902ee9a07"
        ],
        [
            "intros cp1 cp2 Happ HPerm.",
            "VernacExtend",
            "6869e5b0dbc64a7a27d281f749dfcb67c1d4d8fc"
        ],
        [
            "apply PermOK with cp1; try assumption; clear HPerm; clear Happ; clear cp2; clear cp1.",
            "VernacExtend",
            "10439613e48abae68d141d87b132c9d046c474b4"
        ],
        [
            "intros A X Happ; apply app_n_1_app with A X; try (apply coinc_perm_1; apply app_app_1_n with (consHeadCP A X); try assumption).",
            "VernacExtend",
            "d88587309af79eed8e7668dc2831e741269548af"
        ],
        [
            "simpl; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "apply consHeadCPTl.",
            "VernacExtend",
            "9a8818f104f89ec8c3cdcf7f2caba24c83d576f4"
        ],
        [
            "apply consTailCPAbl.",
            "VernacExtend",
            "4ba0c00ed010c5dd51813b058a29c8430b9f2b2a"
        ],
        [
            "apply consTailCPLast.",
            "VernacExtend",
            "fa80d918b5e14f01036bd09ed64c3eb4a771cf25"
        ],
        [
            "intros A B X Happ; apply app_2_n_app with B A X; try (apply coinc_perm_2; apply app_app_2_n with (consHeadCP A (consHeadCP B X)); try assumption).",
            "VernacExtend",
            "695695251be933a3183f8a50b5686f7b2651fc7a"
        ],
        [
            "simpl; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "simpl; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "apply consHeadCPTl.",
            "VernacExtend",
            "9a8818f104f89ec8c3cdcf7f2caba24c83d576f4"
        ],
        [
            "simpl; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "simpl; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "apply consHeadCPTl.",
            "VernacExtend",
            "9a8818f104f89ec8c3cdcf7f2caba24c83d576f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Permutations.",
            "VernacEndSegment",
            "d480c32534d68c74b54296a7bb5e4b3f24f6751d"
        ]
    ],
    "proofs": [
        {
            "name": "PermWdOK",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros cp1 cp2 Happ HPerm.",
                        "VernacExtend",
                        "6869e5b0dbc64a7a27d281f749dfcb67c1d4d8fc"
                    ]
                },
                {
                    "command": [
                        "apply PermOK with cp1; try assumption; clear HPerm; clear Happ; clear cp2; clear cp1.",
                        "VernacExtend",
                        "10439613e48abae68d141d87b132c9d046c474b4"
                    ]
                },
                {
                    "command": [
                        "intros A X Happ; apply app_n_1_app with A X; try (apply wd_perm_1; apply app_app_1_n with (consHeadCP A X); try assumption).",
                        "VernacExtend",
                        "e8f6b81148ddaa40ba50488af03adebf7af862ed"
                    ]
                },
                {
                    "command": [
                        "simpl; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "apply consHeadCPTl.",
                        "VernacExtend",
                        "9a8818f104f89ec8c3cdcf7f2caba24c83d576f4"
                    ]
                },
                {
                    "command": [
                        "apply consTailCPAbl.",
                        "VernacExtend",
                        "4ba0c00ed010c5dd51813b058a29c8430b9f2b2a"
                    ]
                },
                {
                    "command": [
                        "apply consTailCPLast.",
                        "VernacExtend",
                        "fa80d918b5e14f01036bd09ed64c3eb4a771cf25"
                    ]
                },
                {
                    "command": [
                        "intros A B X Happ; apply app_2_n_app_default with B A X X; try (apply wd_perm_2; apply app_app_2_n_default with X (consHeadCP A (consHeadCP B X)); try assumption).",
                        "VernacExtend",
                        "f47091db334c98a00ba625cd4dca744270b372d5"
                    ]
                },
                {
                    "command": [
                        "simpl; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "rewrite consHeadCPTl; rewrite consHeadCPHd; reflexivity.",
                        "VernacExtend",
                        "f6c6290c09f2537c73df9b561a5bfa6f86d780b5"
                    ]
                },
                {
                    "command": [
                        "rewrite consHeadCPTl; apply consTailCPTlD.",
                        "VernacExtend",
                        "df84c359a3a88437012355f65bf883233c83ea90"
                    ]
                },
                {
                    "command": [
                        "simpl; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "rewrite consHeadCPTl; rewrite consHeadCPHd; reflexivity.",
                        "VernacExtend",
                        "f6c6290c09f2537c73df9b561a5bfa6f86d780b5"
                    ]
                },
                {
                    "command": [
                        "rewrite consHeadCPTl; apply consTailCPTlD.",
                        "VernacExtend",
                        "df84c359a3a88437012355f65bf883233c83ea90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PermCoincOK",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros cp1 cp2 Happ HPerm.",
                        "VernacExtend",
                        "6869e5b0dbc64a7a27d281f749dfcb67c1d4d8fc"
                    ]
                },
                {
                    "command": [
                        "apply PermOK with cp1; try assumption; clear HPerm; clear Happ; clear cp2; clear cp1.",
                        "VernacExtend",
                        "10439613e48abae68d141d87b132c9d046c474b4"
                    ]
                },
                {
                    "command": [
                        "intros A X Happ; apply app_n_1_app with A X; try (apply coinc_perm_1; apply app_app_1_n with (consHeadCP A X); try assumption).",
                        "VernacExtend",
                        "d88587309af79eed8e7668dc2831e741269548af"
                    ]
                },
                {
                    "command": [
                        "simpl; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "apply consHeadCPTl.",
                        "VernacExtend",
                        "9a8818f104f89ec8c3cdcf7f2caba24c83d576f4"
                    ]
                },
                {
                    "command": [
                        "apply consTailCPAbl.",
                        "VernacExtend",
                        "4ba0c00ed010c5dd51813b058a29c8430b9f2b2a"
                    ]
                },
                {
                    "command": [
                        "apply consTailCPLast.",
                        "VernacExtend",
                        "fa80d918b5e14f01036bd09ed64c3eb4a771cf25"
                    ]
                },
                {
                    "command": [
                        "intros A B X Happ; apply app_2_n_app with B A X; try (apply coinc_perm_2; apply app_app_2_n with (consHeadCP A (consHeadCP B X)); try assumption).",
                        "VernacExtend",
                        "695695251be933a3183f8a50b5686f7b2651fc7a"
                    ]
                },
                {
                    "command": [
                        "simpl; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "simpl; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "apply consHeadCPTl.",
                        "VernacExtend",
                        "9a8818f104f89ec8c3cdcf7f2caba24c83d576f4"
                    ]
                },
                {
                    "command": [
                        "simpl; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "simpl; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "apply consHeadCPTl.",
                        "VernacExtend",
                        "9a8818f104f89ec8c3cdcf7f2caba24c83d576f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}