{
    "filename": "Highschool/gravityCenter.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Annexes.midpoint_theorems.",
            "VernacRequire",
            "4f1ca5a986929d4b5b2085546b9505025d6934c5"
        ],
        [
            "Require Export GeoCoq.Highschool.varignon.",
            "VernacRequire",
            "32cf7894842a31fee9fc2b17f3b348596d040ac4"
        ],
        [
            "Section GravityCenter.",
            "VernacBeginSection",
            "7e111247535a278bbdfcc36dd2d522f5075dd03f"
        ],
        [
            "Context `{TE:Tarski_euclidean}.",
            "VernacContext",
            "9fd335af20abfff76684a72421eb66bd4501d389"
        ],
        [
            "Lemma intersection_two_medians_exist : forall A B C I J, ~Col A B C -> Midpoint I B C -> Midpoint J A C -> exists G, Col G A I /\\ Col G B J.",
            "VernacStartTheoremProof",
            "a4465b54618e5d69fda20a213c03d5d9ae3b76c2"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_bets.",
            "VernacExtend",
            "9f11de834d80cd23de9799f11c91aacfc3dc0559"
        ],
        [
            "elim (inner_pasch A B C J I)...",
            "VernacExtend",
            "00e9b45e207934d128b9850eec5ceea2c40b1157"
        ],
        [
            "intro G;intros.",
            "VernacExtend",
            "f4719201f8ce6407d6ce6765c1f7ba95963d8750"
        ],
        [
            "exists G.",
            "VernacExtend",
            "25a75f6ba4faab55e411f45974fce72cd605a38b"
        ],
        [
            "spliter;assert_cols;split...",
            "VernacExtend",
            "de36fbe80cfd28dea50e683f16e00655b7fbdcb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intersection_two_medians_exist_unique : forall A B C I J, ~Col A B C -> Midpoint I B C -> Midpoint J A C -> exists! G, Col G A I /\\ Col G B J.",
            "VernacStartTheoremProof",
            "2f39ccd939402293e39d9e07f298f4956f734c72"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (intersection_two_medians_exist A B C I J H H0 H1); intros G HG; spliter.",
            "VernacExtend",
            "d343f081067559de64648c4e179d330b48640415"
        ],
        [
            "exists G.",
            "VernacExtend",
            "25a75f6ba4faab55e411f45974fce72cd605a38b"
        ],
        [
            "unfold unique.",
            "VernacExtend",
            "9aca0558aae7cfdaed3b7738b9e92bfc17f94a1d"
        ],
        [
            "assert_all.",
            "VernacExtend",
            "c951d32149d7d05950a856585b6d8e8668d9450c"
        ],
        [
            "repeat split...",
            "VernacExtend",
            "0321435bc7cb77f3f3ae66f45e4ed580fdab4f58"
        ],
        [
            "intros G' HG'; spliter.",
            "VernacExtend",
            "b4c7f99aee995aeae04ed3f7a96dc67202ba2d13"
        ],
        [
            "apply l6_21 with A I B J...",
            "VernacExtend",
            "67aa17cad40daf0c3772953147b948e95b30f47a"
        ],
        [
            "intro; search_contradiction.",
            "VernacExtend",
            "9e0aef704aa5f729773c9893b1a58303a4460426"
        ],
        [
            "show_distinct' B J...",
            "VernacExtend",
            "f26437d7815ef68be7afac3a46cc7876efa6b0c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_gravity_center G A B C := ~ Col A B C /\\ exists I, exists J, Midpoint I B C /\\ Midpoint J A C /\\ Col G A I /\\ Col G B J.",
            "VernacDefinition",
            "a74c568d58069d8bd895b8ce87782dfdc15960bb"
        ],
        [
            "Lemma is_gravity_center_coplanar : forall A B C G, is_gravity_center G A B C -> Coplanar G A B C.",
            "VernacStartTheoremProof",
            "b31e9cc855089f6137502de6c9151f4afd7f0d84"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [HNCol [I [J]]]; spliter.",
            "VernacExtend",
            "f005dd8d6c56f1e1996415babfe28b75945e995c"
        ],
        [
            "exists I; left; split; Col.",
            "VernacExtend",
            "bb878ea09f75ced7c405025d1bf5dd586dd04cc6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_exist_unique : forall A B C, ~ Col A B C -> exists! G, is_gravity_center G A B C.",
            "VernacStartTheoremProof",
            "a92aa100ca947f688d5fd67fb44c46d9d89d87fb"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "Name I the midpoint of B and C.",
            "VernacExtend",
            "42eeb56f3beeb363befc63287d1902e082a9b928"
        ],
        [
            "Name J the midpoint of A and C.",
            "VernacExtend",
            "0f357925f6e6aae13fe33caf1dfaa24cf89d6350"
        ],
        [
            "elim (intersection_two_medians_exist A B C I J H H1 H4); intros G HG; spliter.",
            "VernacExtend",
            "00ff4eed2d5b5bddaec07384bfd40999cf338afe"
        ],
        [
            "exists G; unfold unique; unfold is_gravity_center; repeat split...",
            "VernacExtend",
            "4750e2d378b8ffdeee15bd1bfb3f8f8f0bc71fd8"
        ],
        [
            "exists I; exists J; do 3 (split; finish).",
            "VernacExtend",
            "a1dfa5249d7fcfac8fd19a35637973fbd057c7a5"
        ],
        [
            "intros G' HG'; spliter; decompose [ex and] H8;clear H8.",
            "VernacExtend",
            "aa45f70d83767fde437b6f104139c6f8aa379f18"
        ],
        [
            "assert_all.",
            "VernacExtend",
            "c951d32149d7d05950a856585b6d8e8668d9450c"
        ],
        [
            "apply l6_21 with A x B x0...",
            "VernacExtend",
            "65169a0e50f5f0333e37c67275e921495dcd3e4a"
        ],
        [
            "intro;search_contradiction.",
            "VernacExtend",
            "9e0aef704aa5f729773c9893b1a58303a4460426"
        ],
        [
            "show_distinct' B x0...",
            "VernacExtend",
            "3ced9954fca928b69935c04d2193a642a53cdd53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac intersection_medians G A B C I J H1 H2 H3 := let T := fresh in assert(T:= intersection_two_medians_exist A B C I J H1 H2 H3); ex_and T G.",
            "VernacExtend",
            "e236916c3dc0cec4e287e0c316f4f9de2e0ce94b"
        ],
        [
            "Tactic Notation \"Name\" ident(G) \"the\" \"intersection\" \"of\" \"the\" \"medians\" \"(\" ident(A) ident(I) \")\" \"which\" \"is\" \"a\" \"median\" \"since\" ident(H2) \"and\" \"(\" ident(B) ident(J) \")\" \"which\" \"is\" \"a\" \"median\" \"since\" ident(H3) \"of\" \"the\" \"non-flat\" \"triangle\" ident(A) ident(B) ident(C) ident(H1) := intersection_medians G A B C I J H1 H2 H3.",
            "VernacExtend",
            "450126b7c2e66c467c7ea01a6a87bb4cf6e4c61c"
        ],
        [
            "Lemma three_medians_intersect: forall A B C I J K, ~Col A B C -> Midpoint I B C -> Midpoint J A C -> Midpoint K A B -> exists G, Col G A I /\\ Col G B J /\\Col G C K.",
            "VernacStartTheoremProof",
            "84b1feb6b2dddc9a9057f8473dd7f94a26093331"
        ],
        [
            "Proof with assert_all.",
            "VernacProof",
            "b8b94bca80478ee8b9250541b6c48c69020831d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "Name G the intersection of the medians (A I) which is a median since H0 and (B J) which is a median since H1 of the non-flat triangle A B C H.",
            "VernacExtend",
            "279c6a5c0269492e33cbc6e283de916cdafbe0ac"
        ],
        [
            "exists G; repeat split; try assumption.",
            "VernacExtend",
            "ca8780a8d2525aaf65f97fcf252d3955eea09b62"
        ],
        [
            "Name D the symmetric of C wrt G.",
            "VernacExtend",
            "b6dbdefa7e68a7317981f19fadc824b5a8e19ff5"
        ],
        [
            "assert_all.",
            "VernacExtend",
            "c951d32149d7d05950a856585b6d8e8668d9450c"
        ],
        [
            "show_distinct' A D.",
            "VernacExtend",
            "8e1a7cc13ada89b2822491bbf301e8f343b8de0b"
        ],
        [
            "permutation_intro_in_hyps.",
            "VernacExtend",
            "000c04c724bb2cca01d903be6c37ef03600040aa"
        ],
        [
            "assert (Par A D J G) by (apply (triangle_mid_par A D C G J H13 H14 H1)).",
            "VernacExtend",
            "8d0ec84b314bc805f6ecc7b82b52641c819bd8ac"
        ],
        [
            "show_distinct' B G.",
            "VernacExtend",
            "c99e5be11169779068894a78193760961d6aa417"
        ],
        [
            "assert (Par G B A D) by (perm_apply (par_col_par A D G J B)).",
            "VernacExtend",
            "9def08fd8d9b8b5e317ac83d141e494c3a7db76d"
        ],
        [
            "show_distinct' B D.",
            "VernacExtend",
            "4b4401d0b0e2769b1edb97abeff7c084f7e17ebf"
        ],
        [
            "assert (Par B D I G) by (apply (triangle_mid_par B D C G I H104 H14 H0)).",
            "VernacExtend",
            "b05217c4e86f4d37f0a34af8f3fa2f1c0a2bb6e0"
        ],
        [
            "show_distinct' A G.",
            "VernacExtend",
            "69586e13da39f429dc26723b4a3b688898918d1e"
        ],
        [
            "assert (Par G A D B) by (perm_apply (par_col_par B D G I A))...",
            "VernacExtend",
            "2ce44a75fcab69627ce5d69320f9f1c04a83afbd"
        ],
        [
            "show_distinct' D G.",
            "VernacExtend",
            "1493888c473b54c4f40a11590b5a71cda315a2a1"
        ],
        [
            "assert (~ Col G A D) by (intro; search_contradiction).",
            "VernacExtend",
            "cb9aed25accdb532bb3f1643292ff88bd18bb056"
        ],
        [
            "assert (Parallelogram G A D B) by (apply (par_2_plg G A D B); finish).",
            "VernacExtend",
            "85a7ab2a0a1b00144202c264ebd5c858a00088b6"
        ],
        [
            "Name Z the intersection of the diagonals (G D) and (A B) of the parallelogram H17...",
            "VernacExtend",
            "0b96eeacad446b99c33c69936403ef5040d54765"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_col : forall A B C G I, is_gravity_center G A B C -> Midpoint I A B -> Col G I C.",
            "VernacStartTheoremProof",
            "7c106f99eb5c0d5b86b65b066eec7de5a61a2693"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold is_gravity_center in *.",
            "VernacExtend",
            "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "destruct H1 as [J [K [Ha [Hb [Hc Hd]]]]].",
            "VernacExtend",
            "0de96149d6164d2725c3b1eb87f831d158eb2054"
        ],
        [
            "elim (three_medians_intersect A B C J K I H);try assumption.",
            "VernacExtend",
            "b935a3b29ec7a1c7be29ec2f9212e2fbfbc97a43"
        ],
        [
            "intro G';intros.",
            "VernacExtend",
            "b39d76cb31a03b128e88cfc562cf06d39d67e66c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (T:=is_gravity_center_exist_unique A B C H).",
            "VernacExtend",
            "55df3aa7a5b5a91ec03c6f52e055186ed0f1f146"
        ],
        [
            "elim T.",
            "VernacExtend",
            "2bd7baedd7ffc8c623041dbcfaa024e03b63f4c4"
        ],
        [
            "intros G''.",
            "VernacExtend",
            "0d97c149898442582e3f24bbdbe7e9b996bb18ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold unique in *.",
            "VernacExtend",
            "27e4554a342dcca328111165a505cf7b87f2bd4f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (G''=G).",
            "VernacExtend",
            "98528e2810bf0cb9ca639eb017bc3de2d620cd82"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "unfold is_gravity_center.",
            "VernacExtend",
            "d03fce84246ccad7c047c546d5236691eb1d67bd"
        ],
        [
            "split;auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "exists J.",
            "VernacExtend",
            "110449f02277e238f0f6e4467d4f4571cdae879e"
        ],
        [
            "exists K;auto.",
            "VernacExtend",
            "ec2f14fd00fd5d7ea437a21d6bc8f6129a1adf29"
        ],
        [
            "assert (G''=G').",
            "VernacExtend",
            "7736c467e4085fe5abe7d16e2fc8c7c81c2ce205"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "unfold is_gravity_center.",
            "VernacExtend",
            "d03fce84246ccad7c047c546d5236691eb1d67bd"
        ],
        [
            "split;auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "exists J.",
            "VernacExtend",
            "110449f02277e238f0f6e4467d4f4571cdae879e"
        ],
        [
            "exists K;auto.",
            "VernacExtend",
            "ec2f14fd00fd5d7ea437a21d6bc8f6129a1adf29"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_diff_1 : forall A B C G, is_gravity_center G A B C -> G<>A.",
            "VernacStartTheoremProof",
            "78cc33dd6148927ae1fef2f796025a4577281f67"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold is_gravity_center in *.",
            "VernacExtend",
            "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "decompose [ex and] H1.",
            "VernacExtend",
            "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_diff_2 : forall A B C G, is_gravity_center G A B C -> G<>B.",
            "VernacStartTheoremProof",
            "234ebed9277281090b19ece35dda885bd5a7c187"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold is_gravity_center in *.",
            "VernacExtend",
            "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "decompose [ex and] H1.",
            "VernacExtend",
            "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_diff_3 : forall A B C G, is_gravity_center G A B C -> G<>C.",
            "VernacStartTheoremProof",
            "3eb1070e7cb9aa13d6b51ed6122cebb9b4702d68"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold is_gravity_center in *.",
            "VernacExtend",
            "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "decompose [ex and] H1.",
            "VernacExtend",
            "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_third : forall A B C G G' A', is_gravity_center G A B C -> Midpoint G' A G -> Midpoint A' B C -> Midpoint G A' G'.",
            "VernacStartTheoremProof",
            "f41df34176ce1fa439abcfec1c219f30be1c640a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Name C' the midpoint of A and B.",
            "VernacExtend",
            "06b3ce92b0281205452ef3487932fe5960fce688"
        ],
        [
            "assert (Col G C' C) by (apply is_gravity_center_col with A B; Col).",
            "VernacExtend",
            "4362b54c2dc247c34da815c8d2433d68bf287bbf"
        ],
        [
            "unfold is_gravity_center in *.",
            "VernacExtend",
            "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "destruct H4 as [A'' [B' HIJ]].",
            "VernacExtend",
            "d75f7b49e211ce0be068c92cb45342f06c0ec1c8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "Name G'' the midpoint of C and G.",
            "VernacExtend",
            "8123cf071cec82e3e00a5c5f50a5509024be457a"
        ],
        [
            "assert (HPar : Parallelogram C' A' G'' G').",
            "VernacExtend",
            "921ab2654adc89d8927634ea79bcfe83744e915f"
        ],
        [
            "apply (varignon' A B C G C' A' G'' G'); finish.",
            "VernacExtend",
            "25d8abd44e4f3470a86cb9bc4ace32cbe46cf9a4"
        ],
        [
            "apply parallelogram_to_plg in HPar.",
            "VernacExtend",
            "b55b959a6f4c7b0f1402993d892d1657ad303876"
        ],
        [
            "destruct HPar as [HDiff [I [HCol1 HCol2]]].",
            "VernacExtend",
            "079daff0dfe191f1fe3448c21d5fe0a9e91bc32a"
        ],
        [
            "assert (G = I); try (treat_equalities; unfold Midpoint in *; spliter; eCong).",
            "VernacExtend",
            "566547fece524c40e854aed04676ec2fbbeed50a"
        ],
        [
            "show_distinct G A; assert_diffs; try (apply H; assert_cols; ColR).",
            "VernacExtend",
            "e00f03dbd243005b661f664be074765d8d66cc6c"
        ],
        [
            "assert_diffs; assert_cols.",
            "VernacExtend",
            "daed323d5c97f802f084681e47067a5a6a2189f2"
        ],
        [
            "assert (~ Col A C G) by (intro; apply H; ColR).",
            "VernacExtend",
            "b126653461cfa35a83c21bf016152deeb1c1a607"
        ],
        [
            "elim HDiff; clear HDiff; intro; show_distinct A' G'; show_distinct C' G''; Col; assert_diffs; assert_cols; try (apply H; ColR); apply l6_21 with A G C G; assert_diffs; Col; ColR.",
            "VernacExtend",
            "7a24bebe2778151ad99e3daa2782627c64e88a91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_third_reci : forall A B C G A' A'', Midpoint A' B C -> Midpoint A'' A G -> Midpoint G A' A'' -> ~ Col A B C -> is_gravity_center G A B C.",
            "VernacStartTheoremProof",
            "d7b38ea24222cdff7018d1013abbdb3d1d634309"
        ],
        [
            "intros A B C G A' A'' HMid1 HMid2 HMid3 HNC.",
            "VernacExtend",
            "d8f68b517283da8ac1e91e239850a25eecd240b3"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "Name B' the midpoint of A and C.",
            "VernacExtend",
            "63b97f8a58440e27e7166deb147f79fa9cb85465"
        ],
        [
            "Name C' the midpoint of A and B.",
            "VernacExtend",
            "06b3ce92b0281205452ef3487932fe5960fce688"
        ],
        [
            "exists A'; exists B'; split; Col; try split; Col; split; try (assert (A <> G) by (intro; treat_equalities; assert_cols; Col); assert_diffs; assert_cols; ColR).",
            "VernacExtend",
            "b18aae242d55f919ed24940a97779620ea249702"
        ],
        [
            "Name B'' the midpoint of B and G.",
            "VernacExtend",
            "eca868d23d950021cca35f2f65118939d55f0d28"
        ],
        [
            "assert (HB' := symmetric_point_construction B'' G).",
            "VernacExtend",
            "b31ca9e03b59e524a522cd2dc62b3aa1c3f8f18a"
        ],
        [
            "destruct HB' as [B''' HB'].",
            "VernacExtend",
            "dea0060ee270e07455d1ebacbc0be20677fa0566"
        ],
        [
            "assert (HPar1 : Par B A A' B').",
            "VernacExtend",
            "1e4bfb75536d65ca69afa5198eee25befe9d190d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply triangle_mid_par with C; assert_diffs; try split; unfold Midpoint in *; spliter; Between; Cong.",
            "VernacExtend",
            "9f01836781268046d3e726e76273f0d8c6964489"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HCong1 : Cong A C' A' B').",
            "VernacExtend",
            "ee321fc46f680055d1e6de3a24013de042280fad"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H := triangle_mid_par_cong A B C A' B' C'); destruct H as [Hc1 [Hc2 [Hc3 [H Hc4]]]]; assert_diffs; Cong.",
            "VernacExtend",
            "84c347d8817fb1c06960e1508fe991ce96864972"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HPar2 : Par A B A'' B'').",
            "VernacExtend",
            "b73fca95247d7fb8b6715743cfcd018af30cbc43"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply triangle_mid_par with G; assert_diffs; try split; unfold Midpoint in *; spliter; Between; Cong.",
            "VernacExtend",
            "5a4e718154f35a2488a56c61abe5dc3cdede8f2b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HCong2 : Cong A C' A'' B'').",
            "VernacExtend",
            "c379df4344c92f63da7e816a13b7736b4cdce2bb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H := triangle_mid_par_cong A B G B'' A'' C'); destruct H as [Hc1 [Hc2 [Hc3 [H Hc4]]]]; assert_diffs; Cong; intro; treat_equalities; assert_cols; Col.",
            "VernacExtend",
            "7117ef819d9216353f27481f823fb81f4f2d1ca1"
        ],
        [
            "assert_diffs; apply HNC; ColR.",
            "VernacExtend",
            "2e77321997ab109bc1bfa6477806baade64b93bb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HPar3 : Par A'' B'' A' B''').",
            "VernacExtend",
            "f5fadaf4d5eacbb674cdc5fe5bfe658e47d2e637"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply plg_par_1; try (intro; treat_equalities; Col; assert_diffs; assert_cols; apply HNC; ColR).",
            "VernacExtend",
            "9c18e4e20c16be7504918d7ec8ceff15583cbaeb"
        ],
        [
            "apply mid_plg_1 with G; try (intro; treat_equalities; assert_cols; Col); unfold Midpoint in *; spliter; split; Between; Cong.",
            "VernacExtend",
            "e466a31c4f89c83249cd4cfb813087273aee5ea9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong3 : Cong A'' B'' A' B''').",
            "VernacExtend",
            "7b51566820708768708a61f7995c0b22ad245667"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply plg_cong_1.",
            "VernacExtend",
            "816208d196669621764245a32128e3b19ddb9835"
        ],
        [
            "apply mid_plg_1 with G; try (intro; treat_equalities; assert_cols; Col); unfold Midpoint in *; spliter; split; Between; Cong.",
            "VernacExtend",
            "e466a31c4f89c83249cd4cfb813087273aee5ea9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HCol : Col A' B' B''').",
            "VernacExtend",
            "7e97be7d69a6560c30d8ae962bef36281706890f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H := parallel_uniqueness A B A' B' A' B''' A'); destruct H as [HCol1 HCol2]; Col; Par.",
            "VernacExtend",
            "888e3589e29eae240c20eee0a1822e600281d98d"
        ],
        [
            "apply par_trans with A'' B''; Par.",
            "VernacExtend",
            "c3fa3e50927209d4511b48cf2bfa5746eb918130"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HElim := l7_20 A' B' B'''); elim HElim; clear HElim; try intro HElim; Col; eCong.",
            "VernacExtend",
            "bdef682f8ed8c324d744aff918ef4890501caa7d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "treat_equalities; assert_diffs; assert_cols.",
            "VernacExtend",
            "9cf6e2e7476a2b1c3b89bb9f274b8ef8e13f4f94"
        ],
        [
            "assert (G <> B'') by (intro; treat_equalities; Col); ColR.",
            "VernacExtend",
            "81ca2071eeed972508960af74fc40152215fc076"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HFalse : OS A' B'' A'' B''').",
            "VernacExtend",
            "9b7f0424c4cd872aad5595df5746165eb480236e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply one_side_transitivity with G.",
            "VernacExtend",
            "8f3af518b8fa9d87b060918a736b0a80750c58a5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assert (HH1 : A' <> B'') by (intro; treat_equalities; Col).",
            "VernacExtend",
            "f247cc3934b09f1159c75a1d383bb1d84f2fcb2e"
        ],
        [
            "assert (HH2 : Col A' B'' A') by Col.",
            "VernacExtend",
            "fbc47d91170e044581ac35b4958a848f503728e3"
        ],
        [
            "assert (HH3 : Col G A'' A') by (assert_cols; Col).",
            "VernacExtend",
            "d5f8b628fae0ea7e1db85e2b8132e2827da12138"
        ],
        [
            "assert (HH := l9_19 A' B'' G A'' A' HH2 HH3); rewrite HH.",
            "VernacExtend",
            "0eda9d82149f82ec50bf93b499a011fbdad96d8a"
        ],
        [
            "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
            "VernacExtend",
            "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
        ],
        [
            "show_distinct G A''; treat_equalities; Col.",
            "VernacExtend",
            "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
        ],
        [
            "show_distinct G B''; treat_equalities; Col.",
            "VernacExtend",
            "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
        ],
        [
            "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
            "VernacExtend",
            "37a070a92792f8679bd38394298d44420368875b"
        ],
        [
            "split; try (intro; apply HABG; ColR).",
            "VernacExtend",
            "17122db18dd9f56ee54f4590a790f05600631ea3"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "01b3cd8501768c8f448dff8ba87cd76831c074fa"
        ],
        [
            "unfold Midpoint in *; spliter; Between.",
            "VernacExtend",
            "c6ed6b4f71fed8386bea5daa9b7acfc1e8dd9ccd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HH1 : A' <> B'') by (intro; treat_equalities; Col).",
            "VernacExtend",
            "f247cc3934b09f1159c75a1d383bb1d84f2fcb2e"
        ],
        [
            "assert (HH2 : Col A' B'' B'') by Col.",
            "VernacExtend",
            "66e966f3c6b53eafa47308f6f349186aa94a4b61"
        ],
        [
            "assert (HH3 : Col G B''' B'') by (assert_cols; Col).",
            "VernacExtend",
            "fc013a44e9ad8bac4d88ecae0a65f2a76003c290"
        ],
        [
            "assert (HH := l9_19 A' B'' G B''' B'' HH2 HH3); rewrite HH.",
            "VernacExtend",
            "f33b0fb54c857ae6bca9e8cb239b69195da4fb12"
        ],
        [
            "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
            "VernacExtend",
            "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
        ],
        [
            "show_distinct G A''; treat_equalities; Col.",
            "VernacExtend",
            "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
        ],
        [
            "show_distinct G B''; treat_equalities; Col.",
            "VernacExtend",
            "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
        ],
        [
            "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
            "VernacExtend",
            "37a070a92792f8679bd38394298d44420368875b"
        ],
        [
            "split; try (intro; apply HABG; ColR).",
            "VernacExtend",
            "17122db18dd9f56ee54f4590a790f05600631ea3"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "01b3cd8501768c8f448dff8ba87cd76831c074fa"
        ],
        [
            "unfold Midpoint in *; spliter; Between.",
            "VernacExtend",
            "c6ed6b4f71fed8386bea5daa9b7acfc1e8dd9ccd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l9_9_bis in HFalse; exfalso; apply HFalse; clear HFalse.",
            "VernacExtend",
            "f82784fcdef576e229745b21c0e7c0710a557d0e"
        ],
        [
            "apply l9_8_2 with B'.",
            "VernacExtend",
            "ccc02fbd78c6f7a78c2564767b64ee6666401ddf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (A' <> B'') by (intro; treat_equalities; Col).",
            "VernacExtend",
            "eb3b6c55c0a6116260a4d342f8cba6f198e022e6"
        ],
        [
            "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
            "VernacExtend",
            "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
        ],
        [
            "show_distinct G A''; treat_equalities; Col.",
            "VernacExtend",
            "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
        ],
        [
            "show_distinct G B''; treat_equalities; Col.",
            "VernacExtend",
            "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
        ],
        [
            "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
            "VernacExtend",
            "37a070a92792f8679bd38394298d44420368875b"
        ],
        [
            "split; try (intro; apply HABG; ColR).",
            "VernacExtend",
            "17122db18dd9f56ee54f4590a790f05600631ea3"
        ],
        [
            "split; try (intro; apply HABG; ColR).",
            "VernacExtend",
            "17122db18dd9f56ee54f4590a790f05600631ea3"
        ],
        [
            "exists A'; unfold Midpoint in *; spliter; split; Col; Between.",
            "VernacExtend",
            "f06df91bf1a84341e7fa0238ffb28bd748f52efb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply one_side_transitivity with A.",
            "VernacExtend",
            "776f4028f3ad688982f04689232a3ff893ef58b3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply one_side_symmetry; apply l9_17 with C; try (unfold Midpoint in *; spliter; assumption).",
            "VernacExtend",
            "172dd10f24425ca1f40d0bbf3b68b65d8c4c0aad"
        ],
        [
            "apply one_side_transitivity with G.",
            "VernacExtend",
            "8f3af518b8fa9d87b060918a736b0a80750c58a5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
            "VernacExtend",
            "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
        ],
        [
            "show_distinct G A''; treat_equalities; Col.",
            "VernacExtend",
            "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
        ],
        [
            "show_distinct G B''; treat_equalities; Col.",
            "VernacExtend",
            "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
        ],
        [
            "assert (HH1 : A' <> B'') by (intro; treat_equalities; Col).",
            "VernacExtend",
            "f247cc3934b09f1159c75a1d383bb1d84f2fcb2e"
        ],
        [
            "assert (HH2 : Col A' B'' A') by Col.",
            "VernacExtend",
            "fbc47d91170e044581ac35b4958a848f503728e3"
        ],
        [
            "assert (HH3 : Col G A A') by ColR.",
            "VernacExtend",
            "73906eb765b13e5e3c1488a1b40bda4038b44ec5"
        ],
        [
            "assert (HH := l9_19 A' B'' G A A' HH2 HH3); rewrite HH.",
            "VernacExtend",
            "dae575b0d97418fdb5ae86fa919fdd7f16cff841"
        ],
        [
            "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
            "VernacExtend",
            "37a070a92792f8679bd38394298d44420368875b"
        ],
        [
            "split; try (intro; apply HABG; ColR).",
            "VernacExtend",
            "17122db18dd9f56ee54f4590a790f05600631ea3"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "01b3cd8501768c8f448dff8ba87cd76831c074fa"
        ],
        [
            "unfold Midpoint in *; spliter; eBetween.",
            "VernacExtend",
            "54ecf73e0842dd56b2a124b87d2f4e4b29e16807"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists B; split.",
            "VernacExtend",
            "1a9242f8aa36b8afd756390c958fc165828472be"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (A' <> B'') by (intro; treat_equalities; Col).",
            "VernacExtend",
            "eb3b6c55c0a6116260a4d342f8cba6f198e022e6"
        ],
        [
            "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
            "VernacExtend",
            "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
        ],
        [
            "show_distinct G A''; treat_equalities; Col.",
            "VernacExtend",
            "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
        ],
        [
            "show_distinct G B''; treat_equalities; Col.",
            "VernacExtend",
            "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
        ],
        [
            "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
            "VernacExtend",
            "37a070a92792f8679bd38394298d44420368875b"
        ],
        [
            "split; try (intro; apply HABG; ColR).",
            "VernacExtend",
            "17122db18dd9f56ee54f4590a790f05600631ea3"
        ],
        [
            "split; try (intro; apply HABG; ColR).",
            "VernacExtend",
            "17122db18dd9f56ee54f4590a790f05600631ea3"
        ],
        [
            "exists B''; unfold Midpoint in *; spliter; split; Col; Between.",
            "VernacExtend",
            "71ac3b49a60926d2b8be1f1aeb30e5416515e667"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (A' <> B'') by (intro; treat_equalities; Col).",
            "VernacExtend",
            "eb3b6c55c0a6116260a4d342f8cba6f198e022e6"
        ],
        [
            "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
            "VernacExtend",
            "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
        ],
        [
            "show_distinct G A''; treat_equalities; Col.",
            "VernacExtend",
            "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
        ],
        [
            "show_distinct G B''; treat_equalities; Col.",
            "VernacExtend",
            "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
        ],
        [
            "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
            "VernacExtend",
            "37a070a92792f8679bd38394298d44420368875b"
        ],
        [
            "split; try (intro; apply HABG; ColR).",
            "VernacExtend",
            "17122db18dd9f56ee54f4590a790f05600631ea3"
        ],
        [
            "split; try (intro; apply HABG; ColR).",
            "VernacExtend",
            "17122db18dd9f56ee54f4590a790f05600631ea3"
        ],
        [
            "exists A'; unfold Midpoint in *; spliter; split; Col; Between.",
            "VernacExtend",
            "f06df91bf1a84341e7fa0238ffb28bd748f52efb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
            "VernacExtend",
            "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
        ],
        [
            "show_distinct G A''; treat_equalities; Col.",
            "VernacExtend",
            "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
        ],
        [
            "show_distinct G B''; treat_equalities; Col.",
            "VernacExtend",
            "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
        ],
        [
            "assert (HH1 : A' <> B'') by (intro; treat_equalities; Col).",
            "VernacExtend",
            "f247cc3934b09f1159c75a1d383bb1d84f2fcb2e"
        ],
        [
            "assert (HH2 : Col A' B'' A') by Col.",
            "VernacExtend",
            "fbc47d91170e044581ac35b4958a848f503728e3"
        ],
        [
            "assert (HH3 : Col A A'' A') by ColR.",
            "VernacExtend",
            "c91d0ba34e71619c4402d952e470021427049b7e"
        ],
        [
            "assert (HH := l9_19 A' B'' A A'' A' HH2 HH3); rewrite HH.",
            "VernacExtend",
            "c5319628ac2cf711e9f8c04edb8eddff4e2adf9d"
        ],
        [
            "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
            "VernacExtend",
            "37a070a92792f8679bd38394298d44420368875b"
        ],
        [
            "show_distinct A A'; Col.",
            "VernacExtend",
            "982cd2ca5b6c4525a1e88d4a07f344e7eb9144e0"
        ],
        [
            "split; try (intro; apply HABG; ColR).",
            "VernacExtend",
            "17122db18dd9f56ee54f4590a790f05600631ea3"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "01b3cd8501768c8f448dff8ba87cd76831c074fa"
        ],
        [
            "unfold Midpoint in *; spliter; eBetween.",
            "VernacExtend",
            "54ecf73e0842dd56b2a124b87d2f4e4b29e16807"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_perm : forall A B C G, is_gravity_center G A B C -> is_gravity_center G A B C /\\ is_gravity_center G A C B /\\ is_gravity_center G B A C /\\ is_gravity_center G B C A /\\ is_gravity_center G C A B /\\ is_gravity_center G C B A.",
            "VernacStartTheoremProof",
            "a82f83717f0b8ef12078693b2b0a111ce7019d04"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Name I the midpoint of A and B.",
            "VernacExtend",
            "07b4f0418f3799f7b3bf09246613e90f151898d9"
        ],
        [
            "assert (Col G I C) by (apply is_gravity_center_col with A B;finish).",
            "VernacExtend",
            "39672bb98f12a6f459186474e2df3de546474421"
        ],
        [
            "unfold is_gravity_center in *.",
            "VernacExtend",
            "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "destruct H2 as [J [K [Ha [Hb [Hc Hd]]]]].",
            "VernacExtend",
            "f1b27fa59087900d52767a9218e143207ef86b08"
        ],
        [
            "repeat split;Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "exists J; exists K;repeat (split;finish).",
            "VernacExtend",
            "11229098a4fa9052d79b6a754110617f39a87847"
        ],
        [
            "exists J; exists I;repeat (split;finish).",
            "VernacExtend",
            "acd739aecb895bd5015cc272c284ca04b80e5fb1"
        ],
        [
            "exists K; exists J;repeat (split;finish).",
            "VernacExtend",
            "8bd4771a2fb88fd80ab28ee4519ff5f3bef87c15"
        ],
        [
            "exists K; exists I;repeat (split;finish).",
            "VernacExtend",
            "6b8f57cf9388f90c2da0158ff9a3707a632720a0"
        ],
        [
            "exists I; exists J;repeat (split;finish).",
            "VernacExtend",
            "081ab6841a71ae52dfe18b6a710c11d04eec3773"
        ],
        [
            "exists I; exists K;repeat (split;finish).",
            "VernacExtend",
            "bdcba85c26a33f26de37dec3fd837e881f89b116"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_perm_1 : forall A B C G, is_gravity_center G A B C -> is_gravity_center G A C B.",
            "VernacStartTheoremProof",
            "7c0058e5ec7ef5568567993340d662f081146511"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_gravity_center_perm in H;intuition.",
            "VernacExtend",
            "d26c74083ac08848dbe6e8301fd180adc41e4c1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_perm_2 : forall A B C G, is_gravity_center G A B C -> is_gravity_center G B A C.",
            "VernacStartTheoremProof",
            "fc5911bd07a0e35c96c7f855ead7a39464ff303b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_gravity_center_perm in H;intuition.",
            "VernacExtend",
            "d26c74083ac08848dbe6e8301fd180adc41e4c1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_perm_3 : forall A B C G, is_gravity_center G A B C -> is_gravity_center G B C A.",
            "VernacStartTheoremProof",
            "e285833ca67cf204ff0cb20cdbf5e07c30f9b855"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_gravity_center_perm in H;intuition.",
            "VernacExtend",
            "d26c74083ac08848dbe6e8301fd180adc41e4c1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_perm_4 : forall A B C G, is_gravity_center G A B C -> is_gravity_center G C A B.",
            "VernacStartTheoremProof",
            "4a89729255f0039fbb2498286e61a42f135c1cef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_gravity_center_perm in H;intuition.",
            "VernacExtend",
            "d26c74083ac08848dbe6e8301fd180adc41e4c1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_perm_5 : forall A B C G, is_gravity_center G A B C -> is_gravity_center G C B A.",
            "VernacStartTheoremProof",
            "5fd6d17c1635e496385d1ec221fadc74528f672f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_gravity_center_perm in H;intuition.",
            "VernacExtend",
            "d26c74083ac08848dbe6e8301fd180adc41e4c1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gravity_center_cases : forall A B C G, is_gravity_center G A B C \\/ is_gravity_center G A C B \\/ is_gravity_center G B A C \\/ is_gravity_center G B C A \\/ is_gravity_center G C A B \\/ is_gravity_center G C B A -> is_gravity_center G A B C.",
            "VernacStartTheoremProof",
            "14c096fc36381c52e70d12dbca9df711dac0a956"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [or] H;clear H.",
            "VernacExtend",
            "f7fbbca16028654502a72ab32e09258e584d5a2c"
        ],
        [
            "apply is_gravity_center_perm in H0;intuition.",
            "VernacExtend",
            "e29aa1ec8c930fd3aac572d37f35ecceb8728ae3"
        ],
        [
            "apply is_gravity_center_perm in H1;intuition.",
            "VernacExtend",
            "35bfee93f7596a9d135076fad6edf56e17623d28"
        ],
        [
            "apply is_gravity_center_perm in H0;intuition.",
            "VernacExtend",
            "e29aa1ec8c930fd3aac572d37f35ecceb8728ae3"
        ],
        [
            "apply is_gravity_center_perm in H1;intuition.",
            "VernacExtend",
            "35bfee93f7596a9d135076fad6edf56e17623d28"
        ],
        [
            "apply is_gravity_center_perm in H0;intuition.",
            "VernacExtend",
            "e29aa1ec8c930fd3aac572d37f35ecceb8728ae3"
        ],
        [
            "apply is_gravity_center_perm in H0;intuition.",
            "VernacExtend",
            "e29aa1ec8c930fd3aac572d37f35ecceb8728ae3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GravityCenter.",
            "VernacEndSegment",
            "95683dd36d5cf08f53e4de4bfdd8d35025fa6584"
        ],
        [
            "Hint Resolve is_gravity_center_coplanar : cop.",
            "VernacHints",
            "dc0a2b066385dacbf270d0cb8542e9ad57eba26d"
        ],
        [
            "Hint Resolve is_gravity_center_perm_1 is_gravity_center_perm_2 is_gravity_center_perm_3 is_gravity_center_perm_4 is_gravity_center_perm_5 : gravitycenter.",
            "VernacHints",
            "6e72ef578140c8002564d0178ce74f8bbadc20b1"
        ],
        [
            "Ltac permutation_intro_in_goal := match goal with | |- Par ?A ?B ?C ?D => apply Par_cases | |- Par_strict ?A ?B ?C ?D => apply Par_strict_cases | |- Perp ?A ?B ?C ?D => apply Perp_cases | |- Perp_at ?X ?A ?B ?C ?D => apply Perp_in_cases | |- Per ?A ?B ?C => apply Per_cases | |- Midpoint ?A ?B ?C => apply Mid_cases | |- ~ Col ?A ?B ?C => apply NCol_cases | |- Col ?A ?B ?C => apply Col_cases | |- Bet ?A ?B ?C => apply Bet_cases | |- Cong ?A ?B ?C ?D => apply Cong_cases | |- is_gravity_center ?G ?A ?B ?C => apply is_gravity_center_cases end.",
            "VernacExtend",
            "67234872301248b402a81ea2b5f6d7a02882ee5f"
        ],
        [
            "Ltac Gravitycenter := auto with gravitycenter.",
            "VernacExtend",
            "d0ff62a79b1ac0f6bff488f61b064125fcba6960"
        ],
        [
            "Ltac sfinish := repeat match goal with | |- Bet ?A ?B ?C => Between; eBetween | |- Col ?A ?B ?C => Col;ColR | |- ~ Col ?A ?B ?C => Col | |- ~ Col ?A ?B ?C => intro;search_contradiction | |- Par ?A ?B ?C ?D => Par | |- Par_strict ?A ?B ?C ?D => Par | |- Perp ?A ?B ?C ?D => Perp | |- Perp_at ?A ?B ?C ?D ?E => Perp | |- Per ?A ?B ?C => Perp | |- Cong ?A ?B ?C ?D => Cong;eCong | |- is_gravity_center ?G ?A ?B ?C => Gravitycenter | |- Midpoint ?A ?B ?C => Midpoint | |- ?A<>?B => apply swap_diff;assumption | |- ?A<>?B => intro;treat_equalities; solve [search_contradiction] | |- ?G1 /\\ ?G2 => split | |- _ => try assumption end.",
            "VernacExtend",
            "8b3fb5c2f73e58d603e58d3a5f01bfeb554b2385"
        ],
        [
            "Ltac perm_apply t := permutation_intro_in_goal; try_or ltac:(apply t;solve [finish]).",
            "VernacExtend",
            "76511e426ac3c911da7e483250a0dd23aac645a7"
        ]
    ],
    "proofs": [
        {
            "name": "is_gravity_center_coplanar",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [HNCol [I [J]]]; spliter.",
                        "VernacExtend",
                        "f005dd8d6c56f1e1996415babfe28b75945e995c"
                    ]
                },
                {
                    "command": [
                        "exists I; left; split; Col.",
                        "VernacExtend",
                        "bb878ea09f75ced7c405025d1bf5dd586dd04cc6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_col",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold is_gravity_center in *.",
                        "VernacExtend",
                        "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [J [K [Ha [Hb [Hc Hd]]]]].",
                        "VernacExtend",
                        "0de96149d6164d2725c3b1eb87f831d158eb2054"
                    ]
                },
                {
                    "command": [
                        "elim (three_medians_intersect A B C J K I H);try assumption.",
                        "VernacExtend",
                        "b935a3b29ec7a1c7be29ec2f9212e2fbfbc97a43"
                    ]
                },
                {
                    "command": [
                        "intro G';intros.",
                        "VernacExtend",
                        "b39d76cb31a03b128e88cfc562cf06d39d67e66c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (T:=is_gravity_center_exist_unique A B C H).",
                        "VernacExtend",
                        "55df3aa7a5b5a91ec03c6f52e055186ed0f1f146"
                    ]
                },
                {
                    "command": [
                        "elim T.",
                        "VernacExtend",
                        "2bd7baedd7ffc8c623041dbcfaa024e03b63f4c4"
                    ]
                },
                {
                    "command": [
                        "intros G''.",
                        "VernacExtend",
                        "0d97c149898442582e3f24bbdbe7e9b996bb18ea"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold unique in *.",
                        "VernacExtend",
                        "27e4554a342dcca328111165a505cf7b87f2bd4f"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (G''=G).",
                        "VernacExtend",
                        "98528e2810bf0cb9ca639eb017bc3de2d620cd82"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "unfold is_gravity_center.",
                        "VernacExtend",
                        "d03fce84246ccad7c047c546d5236691eb1d67bd"
                    ]
                },
                {
                    "command": [
                        "split;auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "exists J.",
                        "VernacExtend",
                        "110449f02277e238f0f6e4467d4f4571cdae879e"
                    ]
                },
                {
                    "command": [
                        "exists K;auto.",
                        "VernacExtend",
                        "ec2f14fd00fd5d7ea437a21d6bc8f6129a1adf29"
                    ]
                },
                {
                    "command": [
                        "assert (G''=G').",
                        "VernacExtend",
                        "7736c467e4085fe5abe7d16e2fc8c7c81c2ce205"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "unfold is_gravity_center.",
                        "VernacExtend",
                        "d03fce84246ccad7c047c546d5236691eb1d67bd"
                    ]
                },
                {
                    "command": [
                        "split;auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "exists J.",
                        "VernacExtend",
                        "110449f02277e238f0f6e4467d4f4571cdae879e"
                    ]
                },
                {
                    "command": [
                        "exists K;auto.",
                        "VernacExtend",
                        "ec2f14fd00fd5d7ea437a21d6bc8f6129a1adf29"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_diff_1",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold is_gravity_center in *.",
                        "VernacExtend",
                        "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H1.",
                        "VernacExtend",
                        "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_diff_2",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold is_gravity_center in *.",
                        "VernacExtend",
                        "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H1.",
                        "VernacExtend",
                        "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_diff_3",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold is_gravity_center in *.",
                        "VernacExtend",
                        "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H1.",
                        "VernacExtend",
                        "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_third",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "Name C' the midpoint of A and B.",
                        "VernacExtend",
                        "06b3ce92b0281205452ef3487932fe5960fce688"
                    ]
                },
                {
                    "command": [
                        "assert (Col G C' C) by (apply is_gravity_center_col with A B; Col).",
                        "VernacExtend",
                        "4362b54c2dc247c34da815c8d2433d68bf287bbf"
                    ]
                },
                {
                    "command": [
                        "unfold is_gravity_center in *.",
                        "VernacExtend",
                        "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "destruct H4 as [A'' [B' HIJ]].",
                        "VernacExtend",
                        "d75f7b49e211ce0be068c92cb45342f06c0ec1c8"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "Name G'' the midpoint of C and G.",
                        "VernacExtend",
                        "8123cf071cec82e3e00a5c5f50a5509024be457a"
                    ]
                },
                {
                    "command": [
                        "assert (HPar : Parallelogram C' A' G'' G').",
                        "VernacExtend",
                        "921ab2654adc89d8927634ea79bcfe83744e915f"
                    ]
                },
                {
                    "command": [
                        "apply (varignon' A B C G C' A' G'' G'); finish.",
                        "VernacExtend",
                        "25d8abd44e4f3470a86cb9bc4ace32cbe46cf9a4"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg in HPar.",
                        "VernacExtend",
                        "b55b959a6f4c7b0f1402993d892d1657ad303876"
                    ]
                },
                {
                    "command": [
                        "destruct HPar as [HDiff [I [HCol1 HCol2]]].",
                        "VernacExtend",
                        "079daff0dfe191f1fe3448c21d5fe0a9e91bc32a"
                    ]
                },
                {
                    "command": [
                        "assert (G = I); try (treat_equalities; unfold Midpoint in *; spliter; eCong).",
                        "VernacExtend",
                        "566547fece524c40e854aed04676ec2fbbeed50a"
                    ]
                },
                {
                    "command": [
                        "show_distinct G A; assert_diffs; try (apply H; assert_cols; ColR).",
                        "VernacExtend",
                        "e00f03dbd243005b661f664be074765d8d66cc6c"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols.",
                        "VernacExtend",
                        "daed323d5c97f802f084681e47067a5a6a2189f2"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A C G) by (intro; apply H; ColR).",
                        "VernacExtend",
                        "b126653461cfa35a83c21bf016152deeb1c1a607"
                    ]
                },
                {
                    "command": [
                        "elim HDiff; clear HDiff; intro; show_distinct A' G'; show_distinct C' G''; Col; assert_diffs; assert_cols; try (apply H; ColR); apply l6_21 with A G C G; assert_diffs; Col; ColR.",
                        "VernacExtend",
                        "7a24bebe2778151ad99e3daa2782627c64e88a91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_third_reci",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "intros A B C G A' A'' HMid1 HMid2 HMid3 HNC.",
                        "VernacExtend",
                        "d8f68b517283da8ac1e91e239850a25eecd240b3"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "Name B' the midpoint of A and C.",
                        "VernacExtend",
                        "63b97f8a58440e27e7166deb147f79fa9cb85465"
                    ]
                },
                {
                    "command": [
                        "Name C' the midpoint of A and B.",
                        "VernacExtend",
                        "06b3ce92b0281205452ef3487932fe5960fce688"
                    ]
                },
                {
                    "command": [
                        "exists A'; exists B'; split; Col; try split; Col; split; try (assert (A <> G) by (intro; treat_equalities; assert_cols; Col); assert_diffs; assert_cols; ColR).",
                        "VernacExtend",
                        "b18aae242d55f919ed24940a97779620ea249702"
                    ]
                },
                {
                    "command": [
                        "Name B'' the midpoint of B and G.",
                        "VernacExtend",
                        "eca868d23d950021cca35f2f65118939d55f0d28"
                    ]
                },
                {
                    "command": [
                        "assert (HB' := symmetric_point_construction B'' G).",
                        "VernacExtend",
                        "b31ca9e03b59e524a522cd2dc62b3aa1c3f8f18a"
                    ]
                },
                {
                    "command": [
                        "destruct HB' as [B''' HB'].",
                        "VernacExtend",
                        "dea0060ee270e07455d1ebacbc0be20677fa0566"
                    ]
                },
                {
                    "command": [
                        "assert (HPar1 : Par B A A' B').",
                        "VernacExtend",
                        "1e4bfb75536d65ca69afa5198eee25befe9d190d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply triangle_mid_par with C; assert_diffs; try split; unfold Midpoint in *; spliter; Between; Cong.",
                        "VernacExtend",
                        "9f01836781268046d3e726e76273f0d8c6964489"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HCong1 : Cong A C' A' B').",
                        "VernacExtend",
                        "ee321fc46f680055d1e6de3a24013de042280fad"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H := triangle_mid_par_cong A B C A' B' C'); destruct H as [Hc1 [Hc2 [Hc3 [H Hc4]]]]; assert_diffs; Cong.",
                        "VernacExtend",
                        "84c347d8817fb1c06960e1508fe991ce96864972"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HPar2 : Par A B A'' B'').",
                        "VernacExtend",
                        "b73fca95247d7fb8b6715743cfcd018af30cbc43"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply triangle_mid_par with G; assert_diffs; try split; unfold Midpoint in *; spliter; Between; Cong.",
                        "VernacExtend",
                        "5a4e718154f35a2488a56c61abe5dc3cdede8f2b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HCong2 : Cong A C' A'' B'').",
                        "VernacExtend",
                        "c379df4344c92f63da7e816a13b7736b4cdce2bb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H := triangle_mid_par_cong A B G B'' A'' C'); destruct H as [Hc1 [Hc2 [Hc3 [H Hc4]]]]; assert_diffs; Cong; intro; treat_equalities; assert_cols; Col.",
                        "VernacExtend",
                        "7117ef819d9216353f27481f823fb81f4f2d1ca1"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply HNC; ColR.",
                        "VernacExtend",
                        "2e77321997ab109bc1bfa6477806baade64b93bb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HPar3 : Par A'' B'' A' B''').",
                        "VernacExtend",
                        "f5fadaf4d5eacbb674cdc5fe5bfe658e47d2e637"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply plg_par_1; try (intro; treat_equalities; Col; assert_diffs; assert_cols; apply HNC; ColR).",
                        "VernacExtend",
                        "9c18e4e20c16be7504918d7ec8ceff15583cbaeb"
                    ]
                },
                {
                    "command": [
                        "apply mid_plg_1 with G; try (intro; treat_equalities; assert_cols; Col); unfold Midpoint in *; spliter; split; Between; Cong.",
                        "VernacExtend",
                        "e466a31c4f89c83249cd4cfb813087273aee5ea9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Cong3 : Cong A'' B'' A' B''').",
                        "VernacExtend",
                        "7b51566820708768708a61f7995c0b22ad245667"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply plg_cong_1.",
                        "VernacExtend",
                        "816208d196669621764245a32128e3b19ddb9835"
                    ]
                },
                {
                    "command": [
                        "apply mid_plg_1 with G; try (intro; treat_equalities; assert_cols; Col); unfold Midpoint in *; spliter; split; Between; Cong.",
                        "VernacExtend",
                        "e466a31c4f89c83249cd4cfb813087273aee5ea9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HCol : Col A' B' B''').",
                        "VernacExtend",
                        "7e97be7d69a6560c30d8ae962bef36281706890f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H := parallel_uniqueness A B A' B' A' B''' A'); destruct H as [HCol1 HCol2]; Col; Par.",
                        "VernacExtend",
                        "888e3589e29eae240c20eee0a1822e600281d98d"
                    ]
                },
                {
                    "command": [
                        "apply par_trans with A'' B''; Par.",
                        "VernacExtend",
                        "c3fa3e50927209d4511b48cf2bfa5746eb918130"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HElim := l7_20 A' B' B'''); elim HElim; clear HElim; try intro HElim; Col; eCong.",
                        "VernacExtend",
                        "bdef682f8ed8c324d744aff918ef4890501caa7d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; assert_diffs; assert_cols.",
                        "VernacExtend",
                        "9cf6e2e7476a2b1c3b89bb9f274b8ef8e13f4f94"
                    ]
                },
                {
                    "command": [
                        "assert (G <> B'') by (intro; treat_equalities; Col); ColR.",
                        "VernacExtend",
                        "81ca2071eeed972508960af74fc40152215fc076"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HFalse : OS A' B'' A'' B''').",
                        "VernacExtend",
                        "9b7f0424c4cd872aad5595df5746165eb480236e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with G.",
                        "VernacExtend",
                        "8f3af518b8fa9d87b060918a736b0a80750c58a5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply one_side_symmetry.",
                        "VernacExtend",
                        "e5557f90c70cace73e26d7184e8ac12051fe7563"
                    ]
                },
                {
                    "command": [
                        "assert (HH1 : A' <> B'') by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "f247cc3934b09f1159c75a1d383bb1d84f2fcb2e"
                    ]
                },
                {
                    "command": [
                        "assert (HH2 : Col A' B'' A') by Col.",
                        "VernacExtend",
                        "fbc47d91170e044581ac35b4958a848f503728e3"
                    ]
                },
                {
                    "command": [
                        "assert (HH3 : Col G A'' A') by (assert_cols; Col).",
                        "VernacExtend",
                        "d5f8b628fae0ea7e1db85e2b8132e2827da12138"
                    ]
                },
                {
                    "command": [
                        "assert (HH := l9_19 A' B'' G A'' A' HH2 HH3); rewrite HH.",
                        "VernacExtend",
                        "0eda9d82149f82ec50bf93b499a011fbdad96d8a"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
                        "VernacExtend",
                        "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
                    ]
                },
                {
                    "command": [
                        "show_distinct G A''; treat_equalities; Col.",
                        "VernacExtend",
                        "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
                    ]
                },
                {
                    "command": [
                        "show_distinct G B''; treat_equalities; Col.",
                        "VernacExtend",
                        "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "37a070a92792f8679bd38394298d44420368875b"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HABG; ColR).",
                        "VernacExtend",
                        "17122db18dd9f56ee54f4590a790f05600631ea3"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "01b3cd8501768c8f448dff8ba87cd76831c074fa"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *; spliter; Between.",
                        "VernacExtend",
                        "c6ed6b4f71fed8386bea5daa9b7acfc1e8dd9ccd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HH1 : A' <> B'') by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "f247cc3934b09f1159c75a1d383bb1d84f2fcb2e"
                    ]
                },
                {
                    "command": [
                        "assert (HH2 : Col A' B'' B'') by Col.",
                        "VernacExtend",
                        "66e966f3c6b53eafa47308f6f349186aa94a4b61"
                    ]
                },
                {
                    "command": [
                        "assert (HH3 : Col G B''' B'') by (assert_cols; Col).",
                        "VernacExtend",
                        "fc013a44e9ad8bac4d88ecae0a65f2a76003c290"
                    ]
                },
                {
                    "command": [
                        "assert (HH := l9_19 A' B'' G B''' B'' HH2 HH3); rewrite HH.",
                        "VernacExtend",
                        "f33b0fb54c857ae6bca9e8cb239b69195da4fb12"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
                        "VernacExtend",
                        "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
                    ]
                },
                {
                    "command": [
                        "show_distinct G A''; treat_equalities; Col.",
                        "VernacExtend",
                        "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
                    ]
                },
                {
                    "command": [
                        "show_distinct G B''; treat_equalities; Col.",
                        "VernacExtend",
                        "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "37a070a92792f8679bd38394298d44420368875b"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HABG; ColR).",
                        "VernacExtend",
                        "17122db18dd9f56ee54f4590a790f05600631ea3"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "01b3cd8501768c8f448dff8ba87cd76831c074fa"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *; spliter; Between.",
                        "VernacExtend",
                        "c6ed6b4f71fed8386bea5daa9b7acfc1e8dd9ccd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply l9_9_bis in HFalse; exfalso; apply HFalse; clear HFalse.",
                        "VernacExtend",
                        "f82784fcdef576e229745b21c0e7c0710a557d0e"
                    ]
                },
                {
                    "command": [
                        "apply l9_8_2 with B'.",
                        "VernacExtend",
                        "ccc02fbd78c6f7a78c2564767b64ee6666401ddf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (A' <> B'') by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "eb3b6c55c0a6116260a4d342f8cba6f198e022e6"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
                        "VernacExtend",
                        "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
                    ]
                },
                {
                    "command": [
                        "show_distinct G A''; treat_equalities; Col.",
                        "VernacExtend",
                        "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
                    ]
                },
                {
                    "command": [
                        "show_distinct G B''; treat_equalities; Col.",
                        "VernacExtend",
                        "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "37a070a92792f8679bd38394298d44420368875b"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HABG; ColR).",
                        "VernacExtend",
                        "17122db18dd9f56ee54f4590a790f05600631ea3"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HABG; ColR).",
                        "VernacExtend",
                        "17122db18dd9f56ee54f4590a790f05600631ea3"
                    ]
                },
                {
                    "command": [
                        "exists A'; unfold Midpoint in *; spliter; split; Col; Between.",
                        "VernacExtend",
                        "f06df91bf1a84341e7fa0238ffb28bd748f52efb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with A.",
                        "VernacExtend",
                        "776f4028f3ad688982f04689232a3ff893ef58b3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply one_side_symmetry; apply l9_17 with C; try (unfold Midpoint in *; spliter; assumption).",
                        "VernacExtend",
                        "172dd10f24425ca1f40d0bbf3b68b65d8c4c0aad"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with G.",
                        "VernacExtend",
                        "8f3af518b8fa9d87b060918a736b0a80750c58a5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply one_side_symmetry.",
                        "VernacExtend",
                        "e5557f90c70cace73e26d7184e8ac12051fe7563"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
                        "VernacExtend",
                        "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
                    ]
                },
                {
                    "command": [
                        "show_distinct G A''; treat_equalities; Col.",
                        "VernacExtend",
                        "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
                    ]
                },
                {
                    "command": [
                        "show_distinct G B''; treat_equalities; Col.",
                        "VernacExtend",
                        "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
                    ]
                },
                {
                    "command": [
                        "assert (HH1 : A' <> B'') by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "f247cc3934b09f1159c75a1d383bb1d84f2fcb2e"
                    ]
                },
                {
                    "command": [
                        "assert (HH2 : Col A' B'' A') by Col.",
                        "VernacExtend",
                        "fbc47d91170e044581ac35b4958a848f503728e3"
                    ]
                },
                {
                    "command": [
                        "assert (HH3 : Col G A A') by ColR.",
                        "VernacExtend",
                        "73906eb765b13e5e3c1488a1b40bda4038b44ec5"
                    ]
                },
                {
                    "command": [
                        "assert (HH := l9_19 A' B'' G A A' HH2 HH3); rewrite HH.",
                        "VernacExtend",
                        "dae575b0d97418fdb5ae86fa919fdd7f16cff841"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "37a070a92792f8679bd38394298d44420368875b"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HABG; ColR).",
                        "VernacExtend",
                        "17122db18dd9f56ee54f4590a790f05600631ea3"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "01b3cd8501768c8f448dff8ba87cd76831c074fa"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *; spliter; eBetween.",
                        "VernacExtend",
                        "54ecf73e0842dd56b2a124b87d2f4e4b29e16807"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists B; split.",
                        "VernacExtend",
                        "1a9242f8aa36b8afd756390c958fc165828472be"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (A' <> B'') by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "eb3b6c55c0a6116260a4d342f8cba6f198e022e6"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
                        "VernacExtend",
                        "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
                    ]
                },
                {
                    "command": [
                        "show_distinct G A''; treat_equalities; Col.",
                        "VernacExtend",
                        "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
                    ]
                },
                {
                    "command": [
                        "show_distinct G B''; treat_equalities; Col.",
                        "VernacExtend",
                        "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "37a070a92792f8679bd38394298d44420368875b"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HABG; ColR).",
                        "VernacExtend",
                        "17122db18dd9f56ee54f4590a790f05600631ea3"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HABG; ColR).",
                        "VernacExtend",
                        "17122db18dd9f56ee54f4590a790f05600631ea3"
                    ]
                },
                {
                    "command": [
                        "exists B''; unfold Midpoint in *; spliter; split; Col; Between.",
                        "VernacExtend",
                        "71ac3b49a60926d2b8be1f1aeb30e5416515e667"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (A' <> B'') by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "eb3b6c55c0a6116260a4d342f8cba6f198e022e6"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
                        "VernacExtend",
                        "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
                    ]
                },
                {
                    "command": [
                        "show_distinct G A''; treat_equalities; Col.",
                        "VernacExtend",
                        "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
                    ]
                },
                {
                    "command": [
                        "show_distinct G B''; treat_equalities; Col.",
                        "VernacExtend",
                        "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "37a070a92792f8679bd38394298d44420368875b"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HABG; ColR).",
                        "VernacExtend",
                        "17122db18dd9f56ee54f4590a790f05600631ea3"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HABG; ColR).",
                        "VernacExtend",
                        "17122db18dd9f56ee54f4590a790f05600631ea3"
                    ]
                },
                {
                    "command": [
                        "exists A'; unfold Midpoint in *; spliter; split; Col; Between.",
                        "VernacExtend",
                        "f06df91bf1a84341e7fa0238ffb28bd748f52efb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; show_distinct G A'; treat_equalities; Col.",
                        "VernacExtend",
                        "cd760ae61a4dcd1bbf678756ab0b8fb547da27f9"
                    ]
                },
                {
                    "command": [
                        "show_distinct G A''; treat_equalities; Col.",
                        "VernacExtend",
                        "6d5ed2f359a71e7888f34c78e5b4469bf506f5fd"
                    ]
                },
                {
                    "command": [
                        "show_distinct G B''; treat_equalities; Col.",
                        "VernacExtend",
                        "00efbbbe03f9d1650c20cc1d15e137daa969a50f"
                    ]
                },
                {
                    "command": [
                        "assert (HH1 : A' <> B'') by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "f247cc3934b09f1159c75a1d383bb1d84f2fcb2e"
                    ]
                },
                {
                    "command": [
                        "assert (HH2 : Col A' B'' A') by Col.",
                        "VernacExtend",
                        "fbc47d91170e044581ac35b4958a848f503728e3"
                    ]
                },
                {
                    "command": [
                        "assert (HH3 : Col A A'' A') by ColR.",
                        "VernacExtend",
                        "c91d0ba34e71619c4402d952e470021427049b7e"
                    ]
                },
                {
                    "command": [
                        "assert (HH := l9_19 A' B'' A A'' A' HH2 HH3); rewrite HH.",
                        "VernacExtend",
                        "c5319628ac2cf711e9f8c04edb8eddff4e2adf9d"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; assert_cols; assert (HABG : ~ Col A B G) by (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "37a070a92792f8679bd38394298d44420368875b"
                    ]
                },
                {
                    "command": [
                        "show_distinct A A'; Col.",
                        "VernacExtend",
                        "982cd2ca5b6c4525a1e88d4a07f344e7eb9144e0"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HABG; ColR).",
                        "VernacExtend",
                        "17122db18dd9f56ee54f4590a790f05600631ea3"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "01b3cd8501768c8f448dff8ba87cd76831c074fa"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *; spliter; eBetween.",
                        "VernacExtend",
                        "54ecf73e0842dd56b2a124b87d2f4e4b29e16807"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_perm",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "Name I the midpoint of A and B.",
                        "VernacExtend",
                        "07b4f0418f3799f7b3bf09246613e90f151898d9"
                    ]
                },
                {
                    "command": [
                        "assert (Col G I C) by (apply is_gravity_center_col with A B;finish).",
                        "VernacExtend",
                        "39672bb98f12a6f459186474e2df3de546474421"
                    ]
                },
                {
                    "command": [
                        "unfold is_gravity_center in *.",
                        "VernacExtend",
                        "87f5f816e2cf1f805d1e49c53ecda8d39e48a9c8"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [J [K [Ha [Hb [Hc Hd]]]]].",
                        "VernacExtend",
                        "f1b27fa59087900d52767a9218e143207ef86b08"
                    ]
                },
                {
                    "command": [
                        "repeat split;Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "exists J; exists K;repeat (split;finish).",
                        "VernacExtend",
                        "11229098a4fa9052d79b6a754110617f39a87847"
                    ]
                },
                {
                    "command": [
                        "exists J; exists I;repeat (split;finish).",
                        "VernacExtend",
                        "acd739aecb895bd5015cc272c284ca04b80e5fb1"
                    ]
                },
                {
                    "command": [
                        "exists K; exists J;repeat (split;finish).",
                        "VernacExtend",
                        "8bd4771a2fb88fd80ab28ee4519ff5f3bef87c15"
                    ]
                },
                {
                    "command": [
                        "exists K; exists I;repeat (split;finish).",
                        "VernacExtend",
                        "6b8f57cf9388f90c2da0158ff9a3707a632720a0"
                    ]
                },
                {
                    "command": [
                        "exists I; exists J;repeat (split;finish).",
                        "VernacExtend",
                        "081ab6841a71ae52dfe18b6a710c11d04eec3773"
                    ]
                },
                {
                    "command": [
                        "exists I; exists K;repeat (split;finish).",
                        "VernacExtend",
                        "bdcba85c26a33f26de37dec3fd837e881f89b116"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_perm_1",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H;intuition.",
                        "VernacExtend",
                        "d26c74083ac08848dbe6e8301fd180adc41e4c1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_perm_2",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H;intuition.",
                        "VernacExtend",
                        "d26c74083ac08848dbe6e8301fd180adc41e4c1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_perm_3",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H;intuition.",
                        "VernacExtend",
                        "d26c74083ac08848dbe6e8301fd180adc41e4c1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_perm_4",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H;intuition.",
                        "VernacExtend",
                        "d26c74083ac08848dbe6e8301fd180adc41e4c1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_perm_5",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H;intuition.",
                        "VernacExtend",
                        "d26c74083ac08848dbe6e8301fd180adc41e4c1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gravity_center_cases",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [or] H;clear H.",
                        "VernacExtend",
                        "f7fbbca16028654502a72ab32e09258e584d5a2c"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H0;intuition.",
                        "VernacExtend",
                        "e29aa1ec8c930fd3aac572d37f35ecceb8728ae3"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H1;intuition.",
                        "VernacExtend",
                        "35bfee93f7596a9d135076fad6edf56e17623d28"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H0;intuition.",
                        "VernacExtend",
                        "e29aa1ec8c930fd3aac572d37f35ecceb8728ae3"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H1;intuition.",
                        "VernacExtend",
                        "35bfee93f7596a9d135076fad6edf56e17623d28"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H0;intuition.",
                        "VernacExtend",
                        "e29aa1ec8c930fd3aac572d37f35ecceb8728ae3"
                    ]
                },
                {
                    "command": [
                        "apply is_gravity_center_perm in H0;intuition.",
                        "VernacExtend",
                        "e29aa1ec8c930fd3aac572d37f35ecceb8728ae3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}