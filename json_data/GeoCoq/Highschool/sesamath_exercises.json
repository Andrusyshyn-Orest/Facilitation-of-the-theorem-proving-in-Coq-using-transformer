{
    "filename": "Highschool/sesamath_exercises.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Highschool.triangles.",
            "VernacRequire",
            "18d148aa98cd3621609b1309dd2dc62f8e471b6e"
        ],
        [
            "Require Export GeoCoq.Highschool.circumcenter.",
            "VernacRequire",
            "740b315f5c923b540a329a6010f73426d892465a"
        ],
        [
            "Require Export GeoCoq.Highschool.gravityCenter.",
            "VernacRequire",
            "0e892188feb19db690fc7b1a792bd640b542d07a"
        ],
        [
            "Section Exercices.",
            "VernacBeginSection",
            "883b40eb84976a0eadf94f0be306183122ca011a"
        ],
        [
            "Context `{TE:Tarski_euclidean}.",
            "VernacContext",
            "9fd335af20abfff76684a72421eb66bd4501d389"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex35 : forall G A Z F E R, ~ Col G A Z -> Per G A Z -> Midpoint F A Z -> Midpoint E G Z -> Midpoint R G A -> Rectangle F E R A.",
            "VernacStartTheoremProof",
            "1de7246ad2494abba6e7c3ac7c4a8b2624580381"
        ],
        [
            "intros G A Z F E R HnCol HPER HM1 HM2 HM3.",
            "VernacExtend",
            "68160383e04c9a387e3d1113e65ec8078a65ca9f"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert (Par A Z E R) by (perm_apply (triangle_mid_par Z A G R E);finish).",
            "VernacExtend",
            "acf4236b6e17fad2344fe477b09d63360f9b81f2"
        ],
        [
            "assert (Par A G F E) by perm_apply (triangle_mid_par A G Z E F).",
            "VernacExtend",
            "5bcf7341e2d12ea2f75fdab66f31ecfd6cf18e7b"
        ],
        [
            "assert (Par A F E R) by (apply par_col_par_2 with Z;finish).",
            "VernacExtend",
            "8b6b1df00ad3c9d2310b01afed66b23214b4c4c9"
        ],
        [
            "assert (Par A R E F) by (apply par_col_par_2 with G;finish;Par).",
            "VernacExtend",
            "d1e9dcd6fbac342d4c4fa860a6a25c0340fa03d4"
        ],
        [
            "assert (~Col A R F) by (intro;apply HnCol;ColR).",
            "VernacExtend",
            "481710cbf708e7d4f45371d65ddb0c0ca549737f"
        ],
        [
            "assert (Par_strict A R E F) by (apply par_not_col_strict with F;finish).",
            "VernacExtend",
            "1ddd3e357d2b83bf23d55ba6b51e2dcea3bad2ea"
        ],
        [
            "assert (Plg F E R A) by (apply pars_par_plg;finish;Par).",
            "VernacExtend",
            "4a631b2413027460c0439a435695fd1049a588c9"
        ],
        [
            "assert (Per F A R) by (apply col_col_per_per with Z G;finish).",
            "VernacExtend",
            "d1ac8710c34dbe0df8d22bb665577cfe1d227fea"
        ],
        [
            "apply (plg_per_rect);auto.",
            "VernacExtend",
            "ae23d5f84cb7f4997bbdf983bb75bf6858631453"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex36_aux : forall A B C I J K, ~ Col A B C -> Midpoint I A B -> Midpoint J A C -> Midpoint K B C -> Plg I J K B.",
            "VernacStartTheoremProof",
            "b5e17a2edce44aba2d21f5c171b358cebfa41952"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (Par A B J K) by (perm_apply (triangle_mid_par B A C J K);finish).",
            "VernacExtend",
            "f008c51cac611610b806d29f0d94430bb767cae6"
        ],
        [
            "assert (Par B I J K) by (apply par_col_par_2 with A;finish).",
            "VernacExtend",
            "28711218feefdc3c13471a9a994f258b6ef296aa"
        ],
        [
            "assert (Par B C I J) by (perm_apply (triangle_mid_par B C A J I);finish).",
            "VernacExtend",
            "dc489d7a6a6b9d12f1483e411d04a2d059e5593f"
        ],
        [
            "assert (Par B K I J) by (apply par_col_par_2 with C;finish).",
            "VernacExtend",
            "1f56ce87ca82fc90087cf5614ba54e1be19aa530"
        ],
        [
            "assert (~ Col B K J) by (intro;apply H;ColR).",
            "VernacExtend",
            "839eb50138f07d422266f835c4eadb4f26aee754"
        ],
        [
            "assert (Par_strict B K I J) by (apply par_not_col_strict with J;finish).",
            "VernacExtend",
            "017e30ae9811a0b93ba0c9418a37f4a79d559088"
        ],
        [
            "assert (Plg I J K B) by (apply pars_par_plg;finish).",
            "VernacExtend",
            "b44720e186aa6d591f363b4d049411ddfed3785b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex36 : forall A B C H I J, isosceles B A C -> Perp A H B C -> Col B H C -> Midpoint I A B -> Midpoint J A C -> Rhombus A I H J.",
            "VernacStartTheoremProof",
            "d63ecc71bb8f9ff22d8f5f9d81199aa4aad4c9de"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert (~ Col B A C /\\ B <> H /\\ C <> H /\\ Midpoint H B C /\\ CongA H A B H A C) by (apply (isosceles_foot__midpoint_conga B A C );finish).",
            "VernacExtend",
            "a58edea8bb8c2d774646160479a9e2746d5145c7"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Plg A I H J).",
            "VernacExtend",
            "257e58afb07eec71526548026a7f78999899b2ee"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Plg J H I A).",
            "VernacExtend",
            "b2aaa9742736d31919a038d81547402d40000840"
        ],
        [
            "apply (sesamath_4ieme_G2_ex36_aux C A B J H I);finish.",
            "VernacExtend",
            "7d61a51d9cd507546eba7f67e94eb42b18cc9828"
        ],
        [
            "apply parallelogram_to_plg.",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "apply plg_to_parallelogram in H14.",
            "VernacExtend",
            "3c0dedf510ae649ad2fb5b6c493caa18ef922a89"
        ],
        [
            "apply Plg_perm in H14.",
            "VernacExtend",
            "a1264e3b1788013903c876c71591e0abaeb032ec"
        ],
        [
            "spliter;auto.",
            "VernacExtend",
            "c2cac3bb1b1323a9bafc5ba97aed0b93f6b14d28"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Par I J B C) by (perm_apply (triangle_mid_par B C A J I);finish).",
            "VernacExtend",
            "668ce9fa6937d67e0950c739542dd2d975ebb9a3"
        ],
        [
            "assert (Perp A H I J) by (perm_apply (cop_par_perp__perp B C I J A H)).",
            "VernacExtend",
            "cf475e2397a72f626c6e4037f413a0ded7a46319"
        ],
        [
            "apply perp_rmb;finish.",
            "VernacExtend",
            "93b2aa24153adf5b70999fcfc648044ae30c05ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex37 : forall S E L I M A O, ~Col S E L -> Midpoint I L S -> Midpoint M S E -> Midpoint A E L -> Perp_bisect A O L E -> Coplanar S E L O -> Perp A O I M.",
            "VernacStartTheoremProof",
            "d8b40da99df0000e1c17728d5688b8583e38c87f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert (Par L E I M) by (perm_apply (triangle_mid_par L E S M I);finish).",
            "VernacExtend",
            "51d13952c7482ef4a41d26313fc46b7609562ed9"
        ],
        [
            "assert (Perp A O L E) by(apply(perp_bisect_perp A O L E);finish).",
            "VernacExtend",
            "4976cc8365304fc0e8918bacfc23213e73a6fb9f"
        ],
        [
            "assert (Perp I M O A).",
            "VernacExtend",
            "5527da9fae95e50528bc7c62ce502931a4bc2fd4"
        ],
        [
            "apply(cop_par_perp__perp L E I M O A);Perp.",
            "VernacExtend",
            "03f3a52cf6b0538fa15c526ba35e6ae015c86bc2"
        ],
        [
            "apply coplanar_pseudo_trans with S E L; Cop.",
            "VernacExtend",
            "4e3345a641fde464c6f8118e96903aae21a34f19"
        ],
        [
            "assert (Perp A O I M);finish.",
            "VernacExtend",
            "d510211e05c0877d8acfdda6a3d88d38ed9c7029"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex38 : forall E A U M N L, ~ Col E A U -> Midpoint N E A -> Midpoint M E U -> Midpoint L U A -> exists O : Tpoint, Col O E L /\\ Midpoint O M N.",
            "VernacStartTheoremProof",
            "5007ac24ca12fc245a525f718292c72b3def3f14"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert( ~Col U E A);finish.",
            "VernacExtend",
            "0ae98d47b4211eb85353b7b15af98aa6ab85d32c"
        ],
        [
            "assert (Plg M L N E) by (apply (sesamath_4ieme_G2_ex36_aux U E A M L N);finish).",
            "VernacExtend",
            "a8021512b93d728df7feccf5fd75f1af955a58cf"
        ],
        [
            "assert (Parallelogram M L N E) by (apply(plg_to_parallelogram M L N E);finish).",
            "VernacExtend",
            "8d27efc5b4ae0f25c8095ccab50d23fc32fd4565"
        ],
        [
            "assert (exists X, Midpoint X M N /\\ Midpoint X L E) by (apply plg_mid;finish).",
            "VernacExtend",
            "5d445a3d26941e735d3b1a8fc280af77b185ef90"
        ],
        [
            "destruct H18 as [X [HX HX2]].",
            "VernacExtend",
            "99f12728e77a589f47aabcd1a701d1aaddf5fd67"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "assert_cols;split;finish.",
            "VernacExtend",
            "63b0b3b2f344f2e4de62c84848e3ddf4852ba91f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex39: forall S C T H A, ~Col A C T -> is_circumcenter S C T A-> Midpoint S C T -> Col C H A -> Perp S H A C -> Midpoint H A C.",
            "VernacStartTheoremProof",
            "7095230f7c993d544be83ecc6678685a7bc8f3d5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert (Cong C S T S /\\ Cong T S A S /\\ Cong A S C S) by ( apply(circumcenter_cong S C T A);finish).",
            "VernacExtend",
            "4481f366b0c43203a1616c387801d0cc866cecf6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Per C A T) by (perm_apply(midpoint_thales S C T A);finish).",
            "VernacExtend",
            "3d95337b69c87e658da3a47cf0107628031393eb"
        ],
        [
            "assert(Perp T A A C) by (perm_apply(per_perp T A C);finish).",
            "VernacExtend",
            "9a75402677c9dc14559144900e5891373c369d24"
        ],
        [
            "assert(Par S H T A) by (perm_apply(l12_9 S H T A A C);finish).",
            "VernacExtend",
            "d7024bc7a074b779ed6f623cfc8e320daf9b093c"
        ],
        [
            "assert(Midpoint H A C) by (perm_apply(triangle_par_mid A T C S H);finish).",
            "VernacExtend",
            "345b795624d5adc4a24d3e71173e999e35d53256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex40 : forall A B C M R N S T, ~Col A B C -> Bet C R B -> Midpoint M A B -> Midpoint N A C -> Midpoint S B R -> Midpoint T R C -> Par M S N T /\\ Parallelogram M S T N.",
            "VernacStartTheoremProof",
            "9ebe5c2d1530829128a008012ef5be6e3d067d3d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert_all_diffs_by_contradiction.",
            "VernacExtend",
            "828df9d95ed8845abc382faae4d2c3b6486ff885"
        ],
        [
            "assert (Par A R M S) by (perm_apply (triangle_mid_par A R B S M);finish).",
            "VernacExtend",
            "7094443be4e4f1cc4ec5d135ef8c64121f83b777"
        ],
        [
            "assert (Par A R N T) by (perm_apply (triangle_mid_par A R C T N);finish).",
            "VernacExtend",
            "6a68a75a5d0b50b6927919f3653ec8cf48930764"
        ],
        [
            "assert(Par M S N T) by (perm_apply(par_trans M S A R);finish).",
            "VernacExtend",
            "12943ecea02feaba577e831e07cff003cbbe5272"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Par C B N M) by (perm_apply (triangle_mid_par B C A N M);finish).",
            "VernacExtend",
            "f6603551aee103a9d441e40efc6246768541202b"
        ],
        [
            "destruct (eq_dec_points R B).",
            "VernacExtend",
            "690d46d1297b1ad8bef67cbf0d88ed2630225754"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert(Plg M N T S) by(apply(sesamath_4ieme_G2_ex36_aux A S C M N T);finish).",
            "VernacExtend",
            "45980f8e52c9088a438d7ce40688d583944e12b4"
        ],
        [
            "assert(Parallelogram M N T S) by(apply(plg_to_parallelogram M N T S);finish).",
            "VernacExtend",
            "b875aed5121d231662f89fc173c26f83385676b5"
        ],
        [
            "apply(Plg_perm M N T S);finish.",
            "VernacExtend",
            "eb88e4a776413cfb60dd55e0fa59cc858aa92298"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (eq_dec_points R C).",
            "VernacExtend",
            "7b86d967db0e7ca874d63e0c0bf68f420681565a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert(Plg N M S T) by(apply(sesamath_4ieme_G2_ex36_aux A T B N M S);finish).",
            "VernacExtend",
            "74ae71af52ee39bd4367a4cf217fbd2f9abb0fe0"
        ],
        [
            "assert(Parallelogram N M S T) by(apply(plg_to_parallelogram N M S T);finish).",
            "VernacExtend",
            "97f76aeb6e7de39e1e71742fed4f681931c6d8b5"
        ],
        [
            "apply(Plg_perm N M S T);finish.",
            "VernacExtend",
            "ce11dc524adee7d0674b6032323cee5696656157"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert_all_diffs_by_contradiction.",
            "VernacExtend",
            "828df9d95ed8845abc382faae4d2c3b6486ff885"
        ],
        [
            "assert(Par M N B R) by(apply(par_col_par M N B C R);finish).",
            "VernacExtend",
            "d4d984b9300d93b5ef41ae35c38eee4bc160d2aa"
        ],
        [
            "assert(Par M N R S) by(apply(par_col_par M N R B S);finish).",
            "VernacExtend",
            "69485a3e40ad868100b4b95c33283c7d47cb4eea"
        ],
        [
            "assert(Par M N S T) by(apply(par_col_par M N S R T);finish;ColR).",
            "VernacExtend",
            "7c3e8e3a24a66a217343459ab67c0f2015f7ac19"
        ],
        [
            "assert (~Col M S T) by (intro;apply H;ColR).",
            "VernacExtend",
            "70f5af8c339a438985607942b70670f04e8a7d05"
        ],
        [
            "apply(par_2_plg);finish.",
            "VernacExtend",
            "4e4b6e5cbb9934dd29c52a1b63465dc61c63c50b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex41 : forall (T L H O E S A: Tpoint) (a b : Tpoint ->Tpoint ->Tpoint -> Prop), ~ Col T L H -> Midpoint E T L -> Midpoint O T H -> A <> T -> A <> O -> A <> E -> A <> S -> Bet T A S -> Bet O A E -> Bet H S L -> S <> H -> S <> L -> CongA S A E T S H /\\ Midpoint A T S.",
            "VernacStartTheoremProof",
            "7e97756d6f67e281493a7f3eac476839d0d4b2c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert(OS H L T T) by (apply(one_side_reflexivity H L T);finish).",
            "VernacExtend",
            "d096b97cc7bc7afd342191ee8f1ac6ddfaefdf40"
        ],
        [
            "assert(OS H S T T) by(apply(col_one_side H L S T T);finish).",
            "VernacExtend",
            "7452e066d2235e28552e038acd4d7fe05bbbdf30"
        ],
        [
            "assert(~ Col H S T) by(apply(one_side_not_col123 H S T T);finish).",
            "VernacExtend",
            "a621bea709c73b75643b06418a15e4b822a34a23"
        ],
        [
            "assert( OS T S H H) by(apply(one_side_reflexivity T S H);finish).",
            "VernacExtend",
            "cb7c64440f37c260b6690c0533dc7eaa74598e2c"
        ],
        [
            "assert(OS T A H H) by(apply(col_one_side T S A H H);finish).",
            "VernacExtend",
            "8ff214184d8ef8fda4ea6b7e023427b8c6f8346a"
        ],
        [
            "assert(Bet T O H) by(apply(midpoint_bet T O H);finish).",
            "VernacExtend",
            "638a773bb33ecdeedfef1079d4289ee34b3a1d8b"
        ],
        [
            "assert(Out T O H) by(apply(bet_out T O H);finish).",
            "VernacExtend",
            "9da37635b6c2d5ef64a33e9345330c4c023d1855"
        ],
        [
            "assert(Out T H O) by(apply(l6_6 T O H);finish).",
            "VernacExtend",
            "75f2be28a1f455e2dacc8df35cf779b77399da32"
        ],
        [
            "assert(OS T A H O) by(apply(out_out_one_side T A H H O);finish).",
            "VernacExtend",
            "dde3945266bbee4323e7b685186e6067c8301723"
        ],
        [
            "assert(OS T A O H) by(apply(one_side_symmetry T A H O);finish).",
            "VernacExtend",
            "196e69064d967605f3aa8026cb264ffd49770f4c"
        ],
        [
            "assert(Par H L O E) by(apply(triangle_mid_par H L T E O);finish).",
            "VernacExtend",
            "fc1add392e1c7c3aef5b3466d003628301b17fd7"
        ],
        [
            "assert(Par H L O A) by(apply(par_col_par H L O E A);finish).",
            "VernacExtend",
            "a8a34cc310c50298e9cc08670719ed28ddf9cac8"
        ],
        [
            "assert(Par H S O A) by(apply(par_col_par_2 H L O A S);finish).",
            "VernacExtend",
            "1b81b64c30a79074ad1a24d69ab0c5e2c05f8357"
        ],
        [
            "assert(Out T A S) by(apply(bet_out T A S);finish).",
            "VernacExtend",
            "7ecc35e45f238bef0180204b253a30c38c20ee2f"
        ],
        [
            "assert(CongA O A T H S T) by(apply(l12_22_a A O S H T);finish).",
            "VernacExtend",
            "f74b80937d97a5642a82bf297c273966929c58ed"
        ],
        [
            "assert(CongA O A T E A S) by(apply(l11_14 O A T E S);finish).",
            "VernacExtend",
            "e3c74759653363c6d89a84f0190478b8e80cc3da"
        ],
        [
            "assert(CongA H S T E A S) by(apply(conga_trans H S T O A T E A S);finish).",
            "VernacExtend",
            "60c9f77d5c66b7a88a0059dfe67d45e9058e1129"
        ],
        [
            "assert(Midpoint A S T) by(apply(triangle_par_mid S H T O A);finish).",
            "VernacExtend",
            "346b40ec77256fd8f7f9f254495c2a703f0cde38"
        ],
        [
            "split;finish.",
            "VernacExtend",
            "7489c8ff4f7a14fca71a58e3ee5bfe180dd0a379"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex42 : forall A B C I K L J G, ~Col A B C -> is_gravity_center G A B C -> Midpoint I A C -> Midpoint J A B -> Midpoint K B G -> Midpoint L C G -> Parallelogram I J K L.",
            "VernacStartTheoremProof",
            "fcb51c1884ee5b22e152e05939d2c367773e3446"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert (G<>A) by (apply(is_gravity_center_diff_1 A B C G);finish).",
            "VernacExtend",
            "192928227b56cde6378775f71d74155bd35b4ecd"
        ],
        [
            "assert (Par B C K L) by(apply(triangle_mid_par B C G L K);finish).",
            "VernacExtend",
            "eb6ac4c30f021ac04b53c1bba1e249355699597e"
        ],
        [
            "assert (G<>C) by (apply(is_gravity_center_diff_3 A B C G);finish).",
            "VernacExtend",
            "5116ccaa4ce636d94e3de67ebbb6a3c469d99c87"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (Midpoint J B A) by(apply(l7_2 J A B);finish).",
            "VernacExtend",
            "fb60c2e54f074d8eb6c3a289881fd08733b5b9af"
        ],
        [
            "assert(is_gravity_center G C B A) by(apply(is_gravity_center_perm_5 A B C G);finish).",
            "VernacExtend",
            "738916b3f350ece875bd4c20a4b0d2904bbba227"
        ],
        [
            "assert(Midpoint G J L) by(apply(is_gravity_center_third C B A G L J);finish).",
            "VernacExtend",
            "0f1c933341797c001ecfaf6102d6875c42ad4b91"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(Parallelogram I L K J) by(apply(varignon.varignon_aux_aux A C G B I L K J);finish).",
            "VernacExtend",
            "971fee7e0ef8e71722b8813f55c385d606d8d117"
        ],
        [
            "apply(Plg_perm I L K J);finish.",
            "VernacExtend",
            "ac7ec67851869cf694e45e1c5d6130362c5de0c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex44_1 : forall A B C D I J E F, Parallelogram_strict A B C D -> Midpoint I A D -> Midpoint J B C -> Bet A E C -> Bet I E B -> Bet A F C -> Bet D F J -> Parallelogram B J D I.",
            "VernacStartTheoremProof",
            "16da7f8281f6d88119b73a573fdfa5bf6802c445"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert_ncols.",
            "VernacExtend",
            "25397c4b0e8909418c476d0819dc9f002d068408"
        ],
        [
            "apply (Parallelogram_strict_Parallelogram A B C D) in H.",
            "VernacExtend",
            "160f2d3d2821a2ff369b7454f4e535072748ce55"
        ],
        [
            "assert(Par A D B C) by (apply(plg_par_2 A B C D);finish).",
            "VernacExtend",
            "c0228f0a0ac829dd2c0547676722a277829f239d"
        ],
        [
            "assert(Cong A D B C) by (apply(plg_cong_2 A B C D);finish).",
            "VernacExtend",
            "ff8c6e75d0faf969b7e2d4d9c7553cbca592d4b7"
        ],
        [
            "assert(Cong D I B J) by (apply(cong_cong_half_2 A I D C J B);finish).",
            "VernacExtend",
            "922fa111cb0c91c221b7301de1572a4165f439fb"
        ],
        [
            "assert(Par A D B J) by (apply(par_col_par A D B C);finish).",
            "VernacExtend",
            "8da4e249827abf3c4f1a5f697539aaff4b2ea0f4"
        ],
        [
            "assert(Par D I B J) by (apply(par_col_par_2 D A B J);finish).",
            "VernacExtend",
            "6316fd3f47d6cf964d2ce79fe00657922bf202d3"
        ],
        [
            "assert(exists M : Tpoint, Midpoint M A C /\\ Midpoint M B D) by (apply(plg_mid A B C D);finish).",
            "VernacExtend",
            "68279e35cedf69f92bf859f59f988393c5ac008f"
        ],
        [
            "destruct H31.",
            "VernacExtend",
            "cdf789ce118021262e94ffbd3444fe15b19fb651"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Par D C I x) by(apply(triangle_mid_par D C A x I);finish).",
            "VernacExtend",
            "dd5da4191622ea47b17a16389f550b0db0039514"
        ],
        [
            "assert(Par A B x J) by(apply(triangle_mid_par A B C J x);finish).",
            "VernacExtend",
            "a2c935f12db2af1ffe6cbcdcd8d5e374db421409"
        ],
        [
            "assert(Par A B C D) by (apply(plg_par_1 A B C D);finish).",
            "VernacExtend",
            "9f89db6c548b713f06999705efb0de66b19e56fe"
        ],
        [
            "assert(Par D C x J) by(apply(par_trans D C A B x J);finish).",
            "VernacExtend",
            "e34fcd188ffbdbaa6b46425c48432ea7bd8ae166"
        ],
        [
            "assert(Par x J I x) by(apply(par_trans x J D C I x);finish).",
            "VernacExtend",
            "3d8170f469ddc776720865a5267afe6b45e1a3b0"
        ],
        [
            "assert(Col x J I) by (apply (par_id x J I);finish).",
            "VernacExtend",
            "580aca991f653cbe0bd085aa2c522f562f4aae21"
        ],
        [
            "show_distinct I J.",
            "VernacExtend",
            "36245fd1b25d08e41ebe4723dd654cc692a76a79"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert(~Par A D C B).",
            "VernacExtend",
            "25b5e70b9c299b0f27edbcf332eab3b2562069da"
        ],
        [
            "(apply(inter_uniqueness_not_par A D C B I);finish).",
            "VernacExtend",
            "11cd0d441d9cc278407eb8ac30e42dc9360945c8"
        ],
        [
            "assert (Par A D C B);finish.",
            "VernacExtend",
            "e8b6bcb83bd2da66464063e17dc547e6710e2a27"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (midpoint_existence A B) as [x0 Hx0].",
            "VernacExtend",
            "f85f8f77a22c4019456b68f0522d697bf722747d"
        ],
        [
            "destruct (midpoint_existence D C) as [x1 Hx1].",
            "VernacExtend",
            "edbc18967091e0da4c8a5cf62a68c0318e553d36"
        ],
        [
            "assert(Par A B J x /\\ Cong A x0 J x) by(apply(triangle_mid_par_cong_1 C A B x0 J x);finish).",
            "VernacExtend",
            "bcf71a06375e74bedebbec51a186a670d4f86911"
        ],
        [
            "assert(Par B A I x /\\ Cong B x0 I x) by(apply(triangle_mid_par_cong_1 D B A x0 I x);finish).",
            "VernacExtend",
            "fdc490335a82f801f02703bf2b52f1c0ed3a821c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong A x0 I x) by(apply(cong_transitivity A x0 x0 B I x);finish).",
            "VernacExtend",
            "cb580f3e736c04382e7eba4b7cd9606af0575c39"
        ],
        [
            "assert( Cong I x J x) by(apply(cong_transitivity I x A x0 J x);finish).",
            "VernacExtend",
            "337b20f070b637305544ef630ad05b67c686cdda"
        ],
        [
            "assert(Midpoint x I J) by(apply(l7_20_bis x I J);finish).",
            "VernacExtend",
            "175d8a203f1214e0e7421c63735a97c8f1f92cd3"
        ],
        [
            "apply (mid_plg B J D I x);finish.",
            "VernacExtend",
            "35f12d0abe67518c222ad73594d50366012c1562"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex45 : forall A B C I K J M G, ~ Col A B C -> Midpoint I B C -> Col I A M -> Midpoint A I M -> Midpoint J A I -> Par J K A C -> Col K I C -> Col G C A /\\ Col G M K -> Midpoint K I C /\\ Par A K M C /\\ is_gravity_center G C M I.",
            "VernacStartTheoremProof",
            "f731dcdfbcb8fab0df20ad2563f27b0d9dd369e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert (~ Col C I A) by (intro;apply H;ColR).",
            "VernacExtend",
            "d13840686324d3c029977d2d969947fd110e09ba"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert(Midpoint K C I).",
            "VernacExtend",
            "23e32dd3a8231220c98eb1f8f4ac0203032a3cad"
        ],
        [
            "(apply(triangle_par_mid C A I J K);finish).",
            "VernacExtend",
            "a8d897c0341b1e4298abb7ed41193b10c746084a"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "destruct (eq_dec_points I M).",
            "VernacExtend",
            "65a43c0ef1b7257418125f89ac1fba5583b7e1dd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col I M C) by (intro;apply H14;ColR).",
            "VernacExtend",
            "63b9fc311b94e7ad140adf8d37fd76e6589ddd78"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(Midpoint K C I).",
            "VernacExtend",
            "23e32dd3a8231220c98eb1f8f4ac0203032a3cad"
        ],
        [
            "(apply(triangle_par_mid C A I J K);finish).",
            "VernacExtend",
            "a8d897c0341b1e4298abb7ed41193b10c746084a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert(Par M C A K) by(apply(triangle_mid_par M C I K A);finish).",
            "VernacExtend",
            "34909abd03f0a032de7eeb92e7f5fa71af337300"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "exists.",
            "VernacExtend",
            "ca3f16ef7f9021f6fe41a48307c510fb8e0753d1"
        ],
        [
            "assert(~ Col C M I);finish.",
            "VernacExtend",
            "53853adff4d0acb94d02312b7ea128e4d7426d6b"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists K.",
            "VernacExtend",
            "2dc1e6da73c976a83199227f5cfa700ddad2c35f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert(Midpoint A M I);finish.",
            "VernacExtend",
            "5cbd6ee16e6d3f6db07b43961ba12f997234c1c4"
        ],
        [
            "repeat split;finish.",
            "VernacExtend",
            "266c72449c644693452ceb961ccb5e75e6b1f622"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sesamath_4ieme_G2_ex47 : forall A B C A' B' C', ~Col A C C' -> ~Col A A' C'-> Col B' A' C' -> Midpoint B A C-> Par A A' B B' -> Par A A' C C' -> Midpoint B' A' C'.",
            "VernacStartTheoremProof",
            "99cdb63b091a7443754740a496c4fd7852d9e6a0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "destruct (midpoint_existence A C') as [x Hx].",
            "VernacExtend",
            "50149b7a50c080e79bccf66419c1b496ed01d9ea"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert(Par B B' A A');finish.",
            "VernacExtend",
            "132d576d9eac0ff657560209fb7e21e0ef8b1d3a"
        ],
        [
            "assert(Par B B' C C') by(apply(par_trans B B' A A' C C');finish;Par).",
            "VernacExtend",
            "4bcde426bd4eaed4c8c83fa0719ec93aa1db953b"
        ],
        [
            "assert(Par C C' B x) by(apply(triangle_mid_par C C' A x B);finish).",
            "VernacExtend",
            "ea697d1effe556b32c2031a31a8391a587ffe993"
        ],
        [
            "assert(Par B B' B x) by(apply(par_trans B B' C C' B x);finish).",
            "VernacExtend",
            "1ea4267e8605cd453f9cf8af84f3d59b9cad8a4c"
        ],
        [
            "assert(Col B B' x) by(apply(par_id B B' x);finish).",
            "VernacExtend",
            "18007eb47c685552610411a0439c2b0a4b2f5e93"
        ],
        [
            "assert( Par A A' B x) by(apply(par_trans A A' B B' B x);finish).",
            "VernacExtend",
            "e7df8841983dc4c4279db22863d48f4451a0b26b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(x=B'\\/x<>B') by(apply(eq_dec_points x B');finish).",
            "VernacExtend",
            "e0582f2539bb4714dc92a08d98a05733b6b5c9bf"
        ],
        [
            "destruct H14.",
            "VernacExtend",
            "9345df2e4b88d9e4f308942c392756c17c4f8a03"
        ],
        [
            "destruct H14.",
            "VernacExtend",
            "9345df2e4b88d9e4f308942c392756c17c4f8a03"
        ],
        [
            "assert(Col A C' A') by(apply(l6_16_1 C' x A' A);finish;Par).",
            "VernacExtend",
            "84d19cb69619f1d593bc7e62099b5a33798d6f24"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "assert(Col A A' C');finish.",
            "VernacExtend",
            "4cc0db246796122e5cafe69b859428b9fca6da33"
        ],
        [
            "assert(Par B x B' B);finish.",
            "VernacExtend",
            "a39758394bc0e904851e02de0c6b1b410b239085"
        ],
        [
            "assert(Par B x B' x) by(apply(par_col_par B x B' B x);finish).",
            "VernacExtend",
            "2d896f428a1bfc9979f449ada8019bedf8c01beb"
        ],
        [
            "assert( Par A A' B' x) by(apply(par_trans A A' B x B' x);finish).",
            "VernacExtend",
            "8b5a093959b4f34e931873d90cd10e3e4cc923cd"
        ],
        [
            "assert(Midpoint B' A' C') by(apply(triangle_par_mid A' A C' x B');finish).",
            "VernacExtend",
            "dd94ab99c25ae908665ab37f133525e9c626639b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Exercices.",
            "VernacEndSegment",
            "b61a728c1acc22a8c52c5b506eaa57f697705cd1"
        ]
    ],
    "proofs": [
        {
            "name": "sesamath_4ieme_G2_ex35",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros G A Z F E R HnCol HPER HM1 HM2 HM3.",
                        "VernacExtend",
                        "68160383e04c9a387e3d1113e65ec8078a65ca9f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert (Par A Z E R) by (perm_apply (triangle_mid_par Z A G R E);finish).",
                        "VernacExtend",
                        "acf4236b6e17fad2344fe477b09d63360f9b81f2"
                    ]
                },
                {
                    "command": [
                        "assert (Par A G F E) by perm_apply (triangle_mid_par A G Z E F).",
                        "VernacExtend",
                        "5bcf7341e2d12ea2f75fdab66f31ecfd6cf18e7b"
                    ]
                },
                {
                    "command": [
                        "assert (Par A F E R) by (apply par_col_par_2 with Z;finish).",
                        "VernacExtend",
                        "8b6b1df00ad3c9d2310b01afed66b23214b4c4c9"
                    ]
                },
                {
                    "command": [
                        "assert (Par A R E F) by (apply par_col_par_2 with G;finish;Par).",
                        "VernacExtend",
                        "d1e9dcd6fbac342d4c4fa860a6a25c0340fa03d4"
                    ]
                },
                {
                    "command": [
                        "assert (~Col A R F) by (intro;apply HnCol;ColR).",
                        "VernacExtend",
                        "481710cbf708e7d4f45371d65ddb0c0ca549737f"
                    ]
                },
                {
                    "command": [
                        "assert (Par_strict A R E F) by (apply par_not_col_strict with F;finish).",
                        "VernacExtend",
                        "1ddd3e357d2b83bf23d55ba6b51e2dcea3bad2ea"
                    ]
                },
                {
                    "command": [
                        "assert (Plg F E R A) by (apply pars_par_plg;finish;Par).",
                        "VernacExtend",
                        "4a631b2413027460c0439a435695fd1049a588c9"
                    ]
                },
                {
                    "command": [
                        "assert (Per F A R) by (apply col_col_per_per with Z G;finish).",
                        "VernacExtend",
                        "d1ac8710c34dbe0df8d22bb665577cfe1d227fea"
                    ]
                },
                {
                    "command": [
                        "apply (plg_per_rect);auto.",
                        "VernacExtend",
                        "ae23d5f84cb7f4997bbdf983bb75bf6858631453"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex36_aux",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B J K) by (perm_apply (triangle_mid_par B A C J K);finish).",
                        "VernacExtend",
                        "f008c51cac611610b806d29f0d94430bb767cae6"
                    ]
                },
                {
                    "command": [
                        "assert (Par B I J K) by (apply par_col_par_2 with A;finish).",
                        "VernacExtend",
                        "28711218feefdc3c13471a9a994f258b6ef296aa"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C I J) by (perm_apply (triangle_mid_par B C A J I);finish).",
                        "VernacExtend",
                        "dc489d7a6a6b9d12f1483e411d04a2d059e5593f"
                    ]
                },
                {
                    "command": [
                        "assert (Par B K I J) by (apply par_col_par_2 with C;finish).",
                        "VernacExtend",
                        "1f56ce87ca82fc90087cf5614ba54e1be19aa530"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B K J) by (intro;apply H;ColR).",
                        "VernacExtend",
                        "839eb50138f07d422266f835c4eadb4f26aee754"
                    ]
                },
                {
                    "command": [
                        "assert (Par_strict B K I J) by (apply par_not_col_strict with J;finish).",
                        "VernacExtend",
                        "017e30ae9811a0b93ba0c9418a37f4a79d559088"
                    ]
                },
                {
                    "command": [
                        "assert (Plg I J K B) by (apply pars_par_plg;finish).",
                        "VernacExtend",
                        "b44720e186aa6d591f363b4d049411ddfed3785b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex36",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B A C /\\ B <> H /\\ C <> H /\\ Midpoint H B C /\\ CongA H A B H A C) by (apply (isosceles_foot__midpoint_conga B A C );finish).",
                        "VernacExtend",
                        "a58edea8bb8c2d774646160479a9e2746d5145c7"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (Plg A I H J).",
                        "VernacExtend",
                        "257e58afb07eec71526548026a7f78999899b2ee"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Plg J H I A).",
                        "VernacExtend",
                        "b2aaa9742736d31919a038d81547402d40000840"
                    ]
                },
                {
                    "command": [
                        "apply (sesamath_4ieme_G2_ex36_aux C A B J H I);finish.",
                        "VernacExtend",
                        "7d61a51d9cd507546eba7f67e94eb42b18cc9828"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg.",
                        "VernacExtend",
                        "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
                    ]
                },
                {
                    "command": [
                        "apply plg_to_parallelogram in H14.",
                        "VernacExtend",
                        "3c0dedf510ae649ad2fb5b6c493caa18ef922a89"
                    ]
                },
                {
                    "command": [
                        "apply Plg_perm in H14.",
                        "VernacExtend",
                        "a1264e3b1788013903c876c71591e0abaeb032ec"
                    ]
                },
                {
                    "command": [
                        "spliter;auto.",
                        "VernacExtend",
                        "c2cac3bb1b1323a9bafc5ba97aed0b93f6b14d28"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Par I J B C) by (perm_apply (triangle_mid_par B C A J I);finish).",
                        "VernacExtend",
                        "668ce9fa6937d67e0950c739542dd2d975ebb9a3"
                    ]
                },
                {
                    "command": [
                        "assert (Perp A H I J) by (perm_apply (cop_par_perp__perp B C I J A H)).",
                        "VernacExtend",
                        "cf475e2397a72f626c6e4037f413a0ded7a46319"
                    ]
                },
                {
                    "command": [
                        "apply perp_rmb;finish.",
                        "VernacExtend",
                        "93b2aa24153adf5b70999fcfc648044ae30c05ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex37",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert (Par L E I M) by (perm_apply (triangle_mid_par L E S M I);finish).",
                        "VernacExtend",
                        "51d13952c7482ef4a41d26313fc46b7609562ed9"
                    ]
                },
                {
                    "command": [
                        "assert (Perp A O L E) by(apply(perp_bisect_perp A O L E);finish).",
                        "VernacExtend",
                        "4976cc8365304fc0e8918bacfc23213e73a6fb9f"
                    ]
                },
                {
                    "command": [
                        "assert (Perp I M O A).",
                        "VernacExtend",
                        "5527da9fae95e50528bc7c62ce502931a4bc2fd4"
                    ]
                },
                {
                    "command": [
                        "apply(cop_par_perp__perp L E I M O A);Perp.",
                        "VernacExtend",
                        "03f3a52cf6b0538fa15c526ba35e6ae015c86bc2"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with S E L; Cop.",
                        "VernacExtend",
                        "4e3345a641fde464c6f8118e96903aae21a34f19"
                    ]
                },
                {
                    "command": [
                        "assert (Perp A O I M);finish.",
                        "VernacExtend",
                        "d510211e05c0877d8acfdda6a3d88d38ed9c7029"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex38",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert( ~Col U E A);finish.",
                        "VernacExtend",
                        "0ae98d47b4211eb85353b7b15af98aa6ab85d32c"
                    ]
                },
                {
                    "command": [
                        "assert (Plg M L N E) by (apply (sesamath_4ieme_G2_ex36_aux U E A M L N);finish).",
                        "VernacExtend",
                        "a8021512b93d728df7feccf5fd75f1af955a58cf"
                    ]
                },
                {
                    "command": [
                        "assert (Parallelogram M L N E) by (apply(plg_to_parallelogram M L N E);finish).",
                        "VernacExtend",
                        "8d27efc5b4ae0f25c8095ccab50d23fc32fd4565"
                    ]
                },
                {
                    "command": [
                        "assert (exists X, Midpoint X M N /\\ Midpoint X L E) by (apply plg_mid;finish).",
                        "VernacExtend",
                        "5d445a3d26941e735d3b1a8fc280af77b185ef90"
                    ]
                },
                {
                    "command": [
                        "destruct H18 as [X [HX HX2]].",
                        "VernacExtend",
                        "99f12728e77a589f47aabcd1a701d1aaddf5fd67"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "assert_cols;split;finish.",
                        "VernacExtend",
                        "63b0b3b2f344f2e4de62c84848e3ddf4852ba91f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex39",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C S T S /\\ Cong T S A S /\\ Cong A S C S) by ( apply(circumcenter_cong S C T A);finish).",
                        "VernacExtend",
                        "4481f366b0c43203a1616c387801d0cc866cecf6"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(Per C A T) by (perm_apply(midpoint_thales S C T A);finish).",
                        "VernacExtend",
                        "3d95337b69c87e658da3a47cf0107628031393eb"
                    ]
                },
                {
                    "command": [
                        "assert(Perp T A A C) by (perm_apply(per_perp T A C);finish).",
                        "VernacExtend",
                        "9a75402677c9dc14559144900e5891373c369d24"
                    ]
                },
                {
                    "command": [
                        "assert(Par S H T A) by (perm_apply(l12_9 S H T A A C);finish).",
                        "VernacExtend",
                        "d7024bc7a074b779ed6f623cfc8e320daf9b093c"
                    ]
                },
                {
                    "command": [
                        "assert(Midpoint H A C) by (perm_apply(triangle_par_mid A T C S H);finish).",
                        "VernacExtend",
                        "345b795624d5adc4a24d3e71173e999e35d53256"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex40",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert_all_diffs_by_contradiction.",
                        "VernacExtend",
                        "828df9d95ed8845abc382faae4d2c3b6486ff885"
                    ]
                },
                {
                    "command": [
                        "assert (Par A R M S) by (perm_apply (triangle_mid_par A R B S M);finish).",
                        "VernacExtend",
                        "7094443be4e4f1cc4ec5d135ef8c64121f83b777"
                    ]
                },
                {
                    "command": [
                        "assert (Par A R N T) by (perm_apply (triangle_mid_par A R C T N);finish).",
                        "VernacExtend",
                        "6a68a75a5d0b50b6927919f3653ec8cf48930764"
                    ]
                },
                {
                    "command": [
                        "assert(Par M S N T) by (perm_apply(par_trans M S A R);finish).",
                        "VernacExtend",
                        "12943ecea02feaba577e831e07cff003cbbe5272"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(Par C B N M) by (perm_apply (triangle_mid_par B C A N M);finish).",
                        "VernacExtend",
                        "f6603551aee103a9d441e40efc6246768541202b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points R B).",
                        "VernacExtend",
                        "690d46d1297b1ad8bef67cbf0d88ed2630225754"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "assert(Plg M N T S) by(apply(sesamath_4ieme_G2_ex36_aux A S C M N T);finish).",
                        "VernacExtend",
                        "45980f8e52c9088a438d7ce40688d583944e12b4"
                    ]
                },
                {
                    "command": [
                        "assert(Parallelogram M N T S) by(apply(plg_to_parallelogram M N T S);finish).",
                        "VernacExtend",
                        "b875aed5121d231662f89fc173c26f83385676b5"
                    ]
                },
                {
                    "command": [
                        "apply(Plg_perm M N T S);finish.",
                        "VernacExtend",
                        "eb88e4a776413cfb60dd55e0fa59cc858aa92298"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points R C).",
                        "VernacExtend",
                        "7b86d967db0e7ca874d63e0c0bf68f420681565a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "assert(Plg N M S T) by(apply(sesamath_4ieme_G2_ex36_aux A T B N M S);finish).",
                        "VernacExtend",
                        "74ae71af52ee39bd4367a4cf217fbd2f9abb0fe0"
                    ]
                },
                {
                    "command": [
                        "assert(Parallelogram N M S T) by(apply(plg_to_parallelogram N M S T);finish).",
                        "VernacExtend",
                        "97f76aeb6e7de39e1e71742fed4f681931c6d8b5"
                    ]
                },
                {
                    "command": [
                        "apply(Plg_perm N M S T);finish.",
                        "VernacExtend",
                        "ce11dc524adee7d0674b6032323cee5696656157"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert_all_diffs_by_contradiction.",
                        "VernacExtend",
                        "828df9d95ed8845abc382faae4d2c3b6486ff885"
                    ]
                },
                {
                    "command": [
                        "assert(Par M N B R) by(apply(par_col_par M N B C R);finish).",
                        "VernacExtend",
                        "d4d984b9300d93b5ef41ae35c38eee4bc160d2aa"
                    ]
                },
                {
                    "command": [
                        "assert(Par M N R S) by(apply(par_col_par M N R B S);finish).",
                        "VernacExtend",
                        "69485a3e40ad868100b4b95c33283c7d47cb4eea"
                    ]
                },
                {
                    "command": [
                        "assert(Par M N S T) by(apply(par_col_par M N S R T);finish;ColR).",
                        "VernacExtend",
                        "7c3e8e3a24a66a217343459ab67c0f2015f7ac19"
                    ]
                },
                {
                    "command": [
                        "assert (~Col M S T) by (intro;apply H;ColR).",
                        "VernacExtend",
                        "70f5af8c339a438985607942b70670f04e8a7d05"
                    ]
                },
                {
                    "command": [
                        "apply(par_2_plg);finish.",
                        "VernacExtend",
                        "4e4b6e5cbb9934dd29c52a1b63465dc61c63c50b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex41",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert(OS H L T T) by (apply(one_side_reflexivity H L T);finish).",
                        "VernacExtend",
                        "d096b97cc7bc7afd342191ee8f1ac6ddfaefdf40"
                    ]
                },
                {
                    "command": [
                        "assert(OS H S T T) by(apply(col_one_side H L S T T);finish).",
                        "VernacExtend",
                        "7452e066d2235e28552e038acd4d7fe05bbbdf30"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col H S T) by(apply(one_side_not_col123 H S T T);finish).",
                        "VernacExtend",
                        "a621bea709c73b75643b06418a15e4b822a34a23"
                    ]
                },
                {
                    "command": [
                        "assert( OS T S H H) by(apply(one_side_reflexivity T S H);finish).",
                        "VernacExtend",
                        "cb7c64440f37c260b6690c0533dc7eaa74598e2c"
                    ]
                },
                {
                    "command": [
                        "assert(OS T A H H) by(apply(col_one_side T S A H H);finish).",
                        "VernacExtend",
                        "8ff214184d8ef8fda4ea6b7e023427b8c6f8346a"
                    ]
                },
                {
                    "command": [
                        "assert(Bet T O H) by(apply(midpoint_bet T O H);finish).",
                        "VernacExtend",
                        "638a773bb33ecdeedfef1079d4289ee34b3a1d8b"
                    ]
                },
                {
                    "command": [
                        "assert(Out T O H) by(apply(bet_out T O H);finish).",
                        "VernacExtend",
                        "9da37635b6c2d5ef64a33e9345330c4c023d1855"
                    ]
                },
                {
                    "command": [
                        "assert(Out T H O) by(apply(l6_6 T O H);finish).",
                        "VernacExtend",
                        "75f2be28a1f455e2dacc8df35cf779b77399da32"
                    ]
                },
                {
                    "command": [
                        "assert(OS T A H O) by(apply(out_out_one_side T A H H O);finish).",
                        "VernacExtend",
                        "dde3945266bbee4323e7b685186e6067c8301723"
                    ]
                },
                {
                    "command": [
                        "assert(OS T A O H) by(apply(one_side_symmetry T A H O);finish).",
                        "VernacExtend",
                        "196e69064d967605f3aa8026cb264ffd49770f4c"
                    ]
                },
                {
                    "command": [
                        "assert(Par H L O E) by(apply(triangle_mid_par H L T E O);finish).",
                        "VernacExtend",
                        "fc1add392e1c7c3aef5b3466d003628301b17fd7"
                    ]
                },
                {
                    "command": [
                        "assert(Par H L O A) by(apply(par_col_par H L O E A);finish).",
                        "VernacExtend",
                        "a8a34cc310c50298e9cc08670719ed28ddf9cac8"
                    ]
                },
                {
                    "command": [
                        "assert(Par H S O A) by(apply(par_col_par_2 H L O A S);finish).",
                        "VernacExtend",
                        "1b81b64c30a79074ad1a24d69ab0c5e2c05f8357"
                    ]
                },
                {
                    "command": [
                        "assert(Out T A S) by(apply(bet_out T A S);finish).",
                        "VernacExtend",
                        "7ecc35e45f238bef0180204b253a30c38c20ee2f"
                    ]
                },
                {
                    "command": [
                        "assert(CongA O A T H S T) by(apply(l12_22_a A O S H T);finish).",
                        "VernacExtend",
                        "f74b80937d97a5642a82bf297c273966929c58ed"
                    ]
                },
                {
                    "command": [
                        "assert(CongA O A T E A S) by(apply(l11_14 O A T E S);finish).",
                        "VernacExtend",
                        "e3c74759653363c6d89a84f0190478b8e80cc3da"
                    ]
                },
                {
                    "command": [
                        "assert(CongA H S T E A S) by(apply(conga_trans H S T O A T E A S);finish).",
                        "VernacExtend",
                        "60c9f77d5c66b7a88a0059dfe67d45e9058e1129"
                    ]
                },
                {
                    "command": [
                        "assert(Midpoint A S T) by(apply(triangle_par_mid S H T O A);finish).",
                        "VernacExtend",
                        "346b40ec77256fd8f7f9f254495c2a703f0cde38"
                    ]
                },
                {
                    "command": [
                        "split;finish.",
                        "VernacExtend",
                        "7489c8ff4f7a14fca71a58e3ee5bfe180dd0a379"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex42",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert (G<>A) by (apply(is_gravity_center_diff_1 A B C G);finish).",
                        "VernacExtend",
                        "192928227b56cde6378775f71d74155bd35b4ecd"
                    ]
                },
                {
                    "command": [
                        "assert (Par B C K L) by(apply(triangle_mid_par B C G L K);finish).",
                        "VernacExtend",
                        "eb6ac4c30f021ac04b53c1bba1e249355699597e"
                    ]
                },
                {
                    "command": [
                        "assert (G<>C) by (apply(is_gravity_center_diff_3 A B C G);finish).",
                        "VernacExtend",
                        "5116ccaa4ce636d94e3de67ebbb6a3c469d99c87"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (Midpoint J B A) by(apply(l7_2 J A B);finish).",
                        "VernacExtend",
                        "fb60c2e54f074d8eb6c3a289881fd08733b5b9af"
                    ]
                },
                {
                    "command": [
                        "assert(is_gravity_center G C B A) by(apply(is_gravity_center_perm_5 A B C G);finish).",
                        "VernacExtend",
                        "738916b3f350ece875bd4c20a4b0d2904bbba227"
                    ]
                },
                {
                    "command": [
                        "assert(Midpoint G J L) by(apply(is_gravity_center_third C B A G L J);finish).",
                        "VernacExtend",
                        "0f1c933341797c001ecfaf6102d6875c42ad4b91"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(Parallelogram I L K J) by(apply(varignon.varignon_aux_aux A C G B I L K J);finish).",
                        "VernacExtend",
                        "971fee7e0ef8e71722b8813f55c385d606d8d117"
                    ]
                },
                {
                    "command": [
                        "apply(Plg_perm I L K J);finish.",
                        "VernacExtend",
                        "ac7ec67851869cf694e45e1c5d6130362c5de0c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex44_1",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert_ncols.",
                        "VernacExtend",
                        "25397c4b0e8909418c476d0819dc9f002d068408"
                    ]
                },
                {
                    "command": [
                        "apply (Parallelogram_strict_Parallelogram A B C D) in H.",
                        "VernacExtend",
                        "160f2d3d2821a2ff369b7454f4e535072748ce55"
                    ]
                },
                {
                    "command": [
                        "assert(Par A D B C) by (apply(plg_par_2 A B C D);finish).",
                        "VernacExtend",
                        "c0228f0a0ac829dd2c0547676722a277829f239d"
                    ]
                },
                {
                    "command": [
                        "assert(Cong A D B C) by (apply(plg_cong_2 A B C D);finish).",
                        "VernacExtend",
                        "ff8c6e75d0faf969b7e2d4d9c7553cbca592d4b7"
                    ]
                },
                {
                    "command": [
                        "assert(Cong D I B J) by (apply(cong_cong_half_2 A I D C J B);finish).",
                        "VernacExtend",
                        "922fa111cb0c91c221b7301de1572a4165f439fb"
                    ]
                },
                {
                    "command": [
                        "assert(Par A D B J) by (apply(par_col_par A D B C);finish).",
                        "VernacExtend",
                        "8da4e249827abf3c4f1a5f697539aaff4b2ea0f4"
                    ]
                },
                {
                    "command": [
                        "assert(Par D I B J) by (apply(par_col_par_2 D A B J);finish).",
                        "VernacExtend",
                        "6316fd3f47d6cf964d2ce79fe00657922bf202d3"
                    ]
                },
                {
                    "command": [
                        "assert(exists M : Tpoint, Midpoint M A C /\\ Midpoint M B D) by (apply(plg_mid A B C D);finish).",
                        "VernacExtend",
                        "68279e35cedf69f92bf859f59f988393c5ac008f"
                    ]
                },
                {
                    "command": [
                        "destruct H31.",
                        "VernacExtend",
                        "cdf789ce118021262e94ffbd3444fe15b19fb651"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(Par D C I x) by(apply(triangle_mid_par D C A x I);finish).",
                        "VernacExtend",
                        "dd5da4191622ea47b17a16389f550b0db0039514"
                    ]
                },
                {
                    "command": [
                        "assert(Par A B x J) by(apply(triangle_mid_par A B C J x);finish).",
                        "VernacExtend",
                        "a2c935f12db2af1ffe6cbcdcd8d5e374db421409"
                    ]
                },
                {
                    "command": [
                        "assert(Par A B C D) by (apply(plg_par_1 A B C D);finish).",
                        "VernacExtend",
                        "9f89db6c548b713f06999705efb0de66b19e56fe"
                    ]
                },
                {
                    "command": [
                        "assert(Par D C x J) by(apply(par_trans D C A B x J);finish).",
                        "VernacExtend",
                        "e34fcd188ffbdbaa6b46425c48432ea7bd8ae166"
                    ]
                },
                {
                    "command": [
                        "assert(Par x J I x) by(apply(par_trans x J D C I x);finish).",
                        "VernacExtend",
                        "3d8170f469ddc776720865a5267afe6b45e1a3b0"
                    ]
                },
                {
                    "command": [
                        "assert(Col x J I) by (apply (par_id x J I);finish).",
                        "VernacExtend",
                        "580aca991f653cbe0bd085aa2c522f562f4aae21"
                    ]
                },
                {
                    "command": [
                        "show_distinct I J.",
                        "VernacExtend",
                        "36245fd1b25d08e41ebe4723dd654cc692a76a79"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert(~Par A D C B).",
                        "VernacExtend",
                        "25b5e70b9c299b0f27edbcf332eab3b2562069da"
                    ]
                },
                {
                    "command": [
                        "(apply(inter_uniqueness_not_par A D C B I);finish).",
                        "VernacExtend",
                        "11cd0d441d9cc278407eb8ac30e42dc9360945c8"
                    ]
                },
                {
                    "command": [
                        "assert (Par A D C B);finish.",
                        "VernacExtend",
                        "e8b6bcb83bd2da66464063e17dc547e6710e2a27"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence A B) as [x0 Hx0].",
                        "VernacExtend",
                        "f85f8f77a22c4019456b68f0522d697bf722747d"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence D C) as [x1 Hx1].",
                        "VernacExtend",
                        "edbc18967091e0da4c8a5cf62a68c0318e553d36"
                    ]
                },
                {
                    "command": [
                        "assert(Par A B J x /\\ Cong A x0 J x) by(apply(triangle_mid_par_cong_1 C A B x0 J x);finish).",
                        "VernacExtend",
                        "bcf71a06375e74bedebbec51a186a670d4f86911"
                    ]
                },
                {
                    "command": [
                        "assert(Par B A I x /\\ Cong B x0 I x) by(apply(triangle_mid_par_cong_1 D B A x0 I x);finish).",
                        "VernacExtend",
                        "fdc490335a82f801f02703bf2b52f1c0ed3a821c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(Cong A x0 I x) by(apply(cong_transitivity A x0 x0 B I x);finish).",
                        "VernacExtend",
                        "cb580f3e736c04382e7eba4b7cd9606af0575c39"
                    ]
                },
                {
                    "command": [
                        "assert( Cong I x J x) by(apply(cong_transitivity I x A x0 J x);finish).",
                        "VernacExtend",
                        "337b20f070b637305544ef630ad05b67c686cdda"
                    ]
                },
                {
                    "command": [
                        "assert(Midpoint x I J) by(apply(l7_20_bis x I J);finish).",
                        "VernacExtend",
                        "175d8a203f1214e0e7421c63735a97c8f1f92cd3"
                    ]
                },
                {
                    "command": [
                        "apply (mid_plg B J D I x);finish.",
                        "VernacExtend",
                        "35f12d0abe67518c222ad73594d50366012c1562"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex45",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C I A) by (intro;apply H;ColR).",
                        "VernacExtend",
                        "d13840686324d3c029977d2d969947fd110e09ba"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assert(Midpoint K C I).",
                        "VernacExtend",
                        "23e32dd3a8231220c98eb1f8f4ac0203032a3cad"
                    ]
                },
                {
                    "command": [
                        "(apply(triangle_par_mid C A I J K);finish).",
                        "VernacExtend",
                        "a8d897c0341b1e4298abb7ed41193b10c746084a"
                    ]
                },
                {
                    "command": [
                        "finish.",
                        "VernacExtend",
                        "0eb65e2600b0e543719211fd4fd520bb87987cf1"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points I M).",
                        "VernacExtend",
                        "65a43c0ef1b7257418125f89ac1fba5583b7e1dd"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col I M C) by (intro;apply H14;ColR).",
                        "VernacExtend",
                        "63b9fc311b94e7ad140adf8d37fd76e6589ddd78"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(Midpoint K C I).",
                        "VernacExtend",
                        "23e32dd3a8231220c98eb1f8f4ac0203032a3cad"
                    ]
                },
                {
                    "command": [
                        "(apply(triangle_par_mid C A I J K);finish).",
                        "VernacExtend",
                        "a8d897c0341b1e4298abb7ed41193b10c746084a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assert(Par M C A K) by(apply(triangle_mid_par M C I K A);finish).",
                        "VernacExtend",
                        "34909abd03f0a032de7eeb92e7f5fa71af337300"
                    ]
                },
                {
                    "command": [
                        "Par.",
                        "VernacExtend",
                        "204d3bc48478a206fd337c12d856085317b90ede"
                    ]
                },
                {
                    "command": [
                        "exists.",
                        "VernacExtend",
                        "ca3f16ef7f9021f6fe41a48307c510fb8e0753d1"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col C M I);finish.",
                        "VernacExtend",
                        "53853adff4d0acb94d02312b7ea128e4d7426d6b"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "exists K.",
                        "VernacExtend",
                        "2dc1e6da73c976a83199227f5cfa700ddad2c35f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assert(Midpoint A M I);finish.",
                        "VernacExtend",
                        "5cbd6ee16e6d3f6db07b43961ba12f997234c1c4"
                    ]
                },
                {
                    "command": [
                        "repeat split;finish.",
                        "VernacExtend",
                        "266c72449c644693452ceb961ccb5e75e6b1f622"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sesamath_4ieme_G2_ex47",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence A C') as [x Hx].",
                        "VernacExtend",
                        "50149b7a50c080e79bccf66419c1b496ed01d9ea"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "assert(Par B B' A A');finish.",
                        "VernacExtend",
                        "132d576d9eac0ff657560209fb7e21e0ef8b1d3a"
                    ]
                },
                {
                    "command": [
                        "assert(Par B B' C C') by(apply(par_trans B B' A A' C C');finish;Par).",
                        "VernacExtend",
                        "4bcde426bd4eaed4c8c83fa0719ec93aa1db953b"
                    ]
                },
                {
                    "command": [
                        "assert(Par C C' B x) by(apply(triangle_mid_par C C' A x B);finish).",
                        "VernacExtend",
                        "ea697d1effe556b32c2031a31a8391a587ffe993"
                    ]
                },
                {
                    "command": [
                        "assert(Par B B' B x) by(apply(par_trans B B' C C' B x);finish).",
                        "VernacExtend",
                        "1ea4267e8605cd453f9cf8af84f3d59b9cad8a4c"
                    ]
                },
                {
                    "command": [
                        "assert(Col B B' x) by(apply(par_id B B' x);finish).",
                        "VernacExtend",
                        "18007eb47c685552610411a0439c2b0a4b2f5e93"
                    ]
                },
                {
                    "command": [
                        "assert( Par A A' B x) by(apply(par_trans A A' B B' B x);finish).",
                        "VernacExtend",
                        "e7df8841983dc4c4279db22863d48f4451a0b26b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(x=B'\\/x<>B') by(apply(eq_dec_points x B');finish).",
                        "VernacExtend",
                        "e0582f2539bb4714dc92a08d98a05733b6b5c9bf"
                    ]
                },
                {
                    "command": [
                        "destruct H14.",
                        "VernacExtend",
                        "9345df2e4b88d9e4f308942c392756c17c4f8a03"
                    ]
                },
                {
                    "command": [
                        "destruct H14.",
                        "VernacExtend",
                        "9345df2e4b88d9e4f308942c392756c17c4f8a03"
                    ]
                },
                {
                    "command": [
                        "assert(Col A C' A') by(apply(l6_16_1 C' x A' A);finish;Par).",
                        "VernacExtend",
                        "84d19cb69619f1d593bc7e62099b5a33798d6f24"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "assert(Col A A' C');finish.",
                        "VernacExtend",
                        "4cc0db246796122e5cafe69b859428b9fca6da33"
                    ]
                },
                {
                    "command": [
                        "assert(Par B x B' B);finish.",
                        "VernacExtend",
                        "a39758394bc0e904851e02de0c6b1b410b239085"
                    ]
                },
                {
                    "command": [
                        "assert(Par B x B' x) by(apply(par_col_par B x B' B x);finish).",
                        "VernacExtend",
                        "2d896f428a1bfc9979f449ada8019bedf8c01beb"
                    ]
                },
                {
                    "command": [
                        "assert( Par A A' B' x) by(apply(par_trans A A' B x B' x);finish).",
                        "VernacExtend",
                        "8b5a093959b4f34e931873d90cd10e3e4cc923cd"
                    ]
                },
                {
                    "command": [
                        "assert(Midpoint B' A' C') by(apply(triangle_par_mid A' A C' x B');finish).",
                        "VernacExtend",
                        "dd94ab99c25ae908665ab37f133525e9c626639b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}