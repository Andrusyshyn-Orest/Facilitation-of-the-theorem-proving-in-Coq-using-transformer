{
    "filename": "Tarski_dev/Annexes/midpoint_theorems.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Annexes.quadrilaterals_inter_dec.",
            "VernacRequire",
            "876174e69471c3cd786a078c13b636f18666cada"
        ],
        [
            "Ltac assert_all := treat_equalities; assert_cols_perm; assert_diffs; assert_congs_perm.",
            "VernacExtend",
            "5b0764e3a83ebaccf8a79c3fc895ce2ffaaba167"
        ],
        [
            "Section TriangleMidpointsTheorems.",
            "VernacBeginSection",
            "fe69598ac622c22908dc4c16b10f72c767989f25"
        ],
        [
            "Context `{TE:Tarski_euclidean}.",
            "VernacContext",
            "9fd335af20abfff76684a72421eb66bd4501d389"
        ],
        [
            "Lemma col_permut132 : forall A B C, Col A B C -> Col A C B.",
            "VernacStartTheoremProof",
            "5b4d204f3f707d2e1eb1b6f11461b9bf5b95e1b1"
        ],
        [
            "exact col_permutation_5.",
            "VernacExtend",
            "7bb99cb22c28a563546bb43ee24300c3a59817c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_permut213 : forall A B C, Col A B C -> Col B A C.",
            "VernacStartTheoremProof",
            "3be48adfff4292d7a6a98696054740b8a03727eb"
        ],
        [
            "exact col_permutation_4.",
            "VernacExtend",
            "1d6aa546351509c862cc134e2565fbf5cb8ac694"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_permut231 : forall A B C, Col A B C -> Col B C A.",
            "VernacStartTheoremProof",
            "ff5cd0439c1a644552c8a0b49a036daa71c82e33"
        ],
        [
            "exact col_permutation_1.",
            "VernacExtend",
            "1b43ee0abe1ad5e63f299b73649ddc51005f3f3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_permut312 : forall A B C, Col A B C -> Col C A B.",
            "VernacStartTheoremProof",
            "48f3c7a0b1c1cfec339e68c886819fa166f7f981"
        ],
        [
            "exact col_permutation_2.",
            "VernacExtend",
            "d4bebd0595bd7ff59196d4d04048b91a2aaff502"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_permut321 : forall A B C, Col A B C -> Col C B A.",
            "VernacStartTheoremProof",
            "1c4c94338133e79b9b0d3d8ba266ff4479167861"
        ],
        [
            "exact col_permutation_3.",
            "VernacExtend",
            "5ac054945d2fe70cbd1c312390a7bdfb8837d817"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col123_124__col134 : forall P Q A B, P <> Q -> Col P Q A -> Col P Q B -> Col P A B.",
            "VernacStartTheoremProof",
            "3217ff2e0b42f846b31ad3024e5d5b21f78658fe"
        ],
        [
            "exact col_transitivity_1.",
            "VernacExtend",
            "c70aedee5d08808b666d1fd420726c12cd945c51"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col123_124__col234 : forall P Q A B, P <> Q -> Col P Q A -> Col P Q B -> Col Q A B.",
            "VernacStartTheoremProof",
            "cfbf2301e788bea24482affbc28786675fc41c0e"
        ],
        [
            "exact col_transitivity_2.",
            "VernacExtend",
            "5fb75679dbe6d02e2c0c71dcc9a7dafdcd64c9f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_strict : forall A B C P Q, ~Col A B C -> Midpoint P B C -> Midpoint Q A C -> Par_strict A B Q P.",
            "VernacStartTheoremProof",
            "b7acb8625b9951fadf29feff1d3c8985bded64cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Name x the symmetric of P wrt Q.",
            "VernacExtend",
            "aa9b8247cbe28c9ed9e762b686b62dd86df50824"
        ],
        [
            "assert_all.",
            "VernacExtend",
            "c951d32149d7d05950a856585b6d8e8668d9450c"
        ],
        [
            "assert (~ Col A P C) by (intro; search_contradiction).",
            "VernacExtend",
            "2e21b9b295ce8cafeb885b8aa3a384537efe5af2"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (Parallelogram_strict A P C x) by (apply mid_plgs with Q;finish).",
            "VernacExtend",
            "67a4e0531d26ec14669827dcd770a3f88aa15d5b"
        ],
        [
            "assert (Cong A x B P) by (assert_paras_perm; assert_pars_perm; assert_all; eCong).",
            "VernacExtend",
            "16b4eecc5e1789ddca039c7b4928cd38df5ee934"
        ],
        [
            "assert (Par A x B P) by (assert_paras_perm; assert_pars_perm; apply par_col2_par with P C; finish).",
            "VernacExtend",
            "726f1f70a0a9c3aae293617e6d13af4ab073bf6c"
        ],
        [
            "assert (HElim : Parallelogram A x B P \\/ Parallelogram A x P B) by (apply par_cong_plg_2; assumption).",
            "VernacExtend",
            "b7414cccd1dd212ff1471d17eee13ee6ff703e5a"
        ],
        [
            "induction HElim.",
            "VernacExtend",
            "de2252f6b2c805dcc464e2949b91de4c73abfa1c"
        ],
        [
            "assert_paras_perm; assert_pars_perm.",
            "VernacExtend",
            "f895acfc36773075043552ea3a12b922288a3104"
        ],
        [
            "Name M the intersection of the diagonals (A B) and (x P) of the parallelogram H15.",
            "VernacExtend",
            "c8b87b29e2e3ea1588a73b8487420041c463419e"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "search_contradiction.",
            "VernacExtend",
            "f2504dcfd25e5d9e8a9adeadccfad86ff74b7baa"
        ],
        [
            "apply par_strict_col2_par_strict with x P; try solve[assert_paras_perm; assert_pars_perm; assert_all; Col].",
            "VernacExtend",
            "4c2e9852ec80464dbc48e2048b00fd1da11b9ba0"
        ],
        [
            "apply ncol123_plg__pars1423; auto; intro; apply H.",
            "VernacExtend",
            "4d73c1d8ba9e091b1e11296fd595bd53dd2af1e2"
        ],
        [
            "assert (P <> x) by (intro; treat_equalities; Col).",
            "VernacExtend",
            "7944f7f362999bfacdc23f8e7d5d5edfc72dc9dd"
        ],
        [
            "apply col_permut231; apply col123_124__col234 with P; [| |apply col_permut231]; auto.",
            "VernacExtend",
            "fe08cacc680db93fd0f1994c594eff85f41b73c4"
        ],
        [
            "apply col_permut231; apply col123_124__col134 with Q; auto.",
            "VernacExtend",
            "43eb5ded3771f685e680393170ce3db82a509be9"
        ],
        [
            "apply col_permut231; apply col123_124__col134 with x; [|apply col_permut321|apply col_permut132]; auto.",
            "VernacExtend",
            "9cfc68619ad5e99766d4c22da9a67ba86a339fc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_strict_cong_aux : forall A B C P Q R, ~Col A B C -> Midpoint P B C -> Midpoint Q A C -> Midpoint R A B -> Par_strict A B Q P /\\ Cong A R P Q /\\ Cong B R P Q .",
            "VernacStartTheoremProof",
            "93b6ded4a5f1a87e714869c1daf4d4a728f54d89"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Name x the symmetric of P wrt Q.",
            "VernacExtend",
            "aa9b8247cbe28c9ed9e762b686b62dd86df50824"
        ],
        [
            "assert_all.",
            "VernacExtend",
            "c951d32149d7d05950a856585b6d8e8668d9450c"
        ],
        [
            "assert (~ Col A P C) by (intro; search_contradiction).",
            "VernacExtend",
            "2e21b9b295ce8cafeb885b8aa3a384537efe5af2"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (Parallelogram_strict A P C x) by (apply mid_plgs with Q;finish).",
            "VernacExtend",
            "67a4e0531d26ec14669827dcd770a3f88aa15d5b"
        ],
        [
            "assert_all.",
            "VernacExtend",
            "c951d32149d7d05950a856585b6d8e8668d9450c"
        ],
        [
            "assert_paras_perm.",
            "VernacExtend",
            "2f278c7c78514bf85590356a6bb68c5eeb210b39"
        ],
        [
            "assert_pars_perm.",
            "VernacExtend",
            "b685f50e6d121be1a17d3ac88c641b649d44a1c1"
        ],
        [
            "assert (Cong A x B P) by eCong.",
            "VernacExtend",
            "23c32469c03724c0d4da777ec6a2567f0195bde3"
        ],
        [
            "assert (Par A x B P) by (apply par_col2_par with P C; finish).",
            "VernacExtend",
            "09f55edc3e87365cef8dd2aacaa5fa654f4c6c2a"
        ],
        [
            "assert (HElim : Parallelogram A x B P \\/ Parallelogram A x P B) by (apply par_cong_plg_2; assumption).",
            "VernacExtend",
            "b7414cccd1dd212ff1471d17eee13ee6ff703e5a"
        ],
        [
            "induction HElim.",
            "VernacExtend",
            "de2252f6b2c805dcc464e2949b91de4c73abfa1c"
        ],
        [
            "Name M the intersection of the diagonals (A B) and (x P) of the parallelogram H23.",
            "VernacExtend",
            "8f8c3de1efd42f13412fb3c39c86a0ab9582d17b"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "search_contradiction.",
            "VernacExtend",
            "f2504dcfd25e5d9e8a9adeadccfad86ff74b7baa"
        ],
        [
            "assert_paras_perm.",
            "VernacExtend",
            "2f278c7c78514bf85590356a6bb68c5eeb210b39"
        ],
        [
            "assert_pars_perm.",
            "VernacExtend",
            "b685f50e6d121be1a17d3ac88c641b649d44a1c1"
        ],
        [
            "assert (Par P Q A B) by (assert_diffs; apply par_col_par_2 with x; finish).",
            "VernacExtend",
            "ece3bf597d98810a025a07270fd6f523e38dc341"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply par_not_col_strict with x...",
            "VernacExtend",
            "dc72555bbea531532d15f27c77edfb4337bc2eed"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert_cols_perm.",
            "VernacExtend",
            "0d06d8c6cc15eea1bb837efb27299ccb05aed468"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assert_congs_perm;split;eCong.",
            "VernacExtend",
            "56f57a1c7b437d59dde11ea0f8320a94ca78770f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_par_mid : forall A B C P Q, ~ Col A B C -> Midpoint P B C -> Par A B Q P -> Col Q A C -> Midpoint Q A C.",
            "VernacStartTheoremProof",
            "1ff9bacdee3f3f70c76197ed4672b15f58426c8a"
        ],
        [
            "assert (H:=playfair_s_postulate_implies_midpoint_converse_postulate); unfold midpoint_converse_postulate in H; intros; apply H with B P; Col.",
            "VernacExtend",
            "82a19eea3b04d1fe19e74018b34b5b96a7a5c0f3"
        ],
        [
            "unfold playfair_s_postulate.",
            "VernacExtend",
            "cb2b84f1e26bea4fb855c4995bc5bef4e07afeeb"
        ],
        [
            "apply parallel_uniqueness.",
            "VernacExtend",
            "6b5420b96ff883b4e318426ce6876c6d0412eed1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_strict_cong_1 : forall A B C P Q R, ~Col A B C -> Midpoint P B C -> Midpoint Q A C -> Midpoint R A B -> Par_strict A B Q P /\\ Cong A R P Q.",
            "VernacStartTheoremProof",
            "c29d9500bbbe0315f69497229d14b01f358ce777"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Par_strict A B Q P /\\ Cong A R P Q /\\ Cong B R P Q) by (apply triangle_mid_par_strict_cong_aux with C; assumption).",
            "VernacExtend",
            "1be597facd3a4a86b1787055455d1c30ec82081a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_strict_cong_2 : forall A B C P Q R, ~Col A B C -> Midpoint P B C -> Midpoint Q A C -> Midpoint R A B -> Par_strict A B Q P /\\ Cong B R P Q.",
            "VernacStartTheoremProof",
            "f142219c78fc1cfd67629bd15451d6543e3c1978"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Par_strict A B Q P /\\ Cong A R P Q /\\ Cong B R P Q) by (apply triangle_mid_par_strict_cong_aux with C; assumption).",
            "VernacExtend",
            "1be597facd3a4a86b1787055455d1c30ec82081a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_strict_cong_simp : forall A B C P Q, ~ Col A B C -> Midpoint P B C -> Midpoint Q A C -> Par_strict A B Q P.",
            "VernacStartTheoremProof",
            "2fff390eafb06dd3170b2008dfc78979b6e3e12a"
        ],
        [
            "apply triangle_mid_par.",
            "VernacExtend",
            "e463316af328ab611fc0734b50d067ee9afdc0e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_strict_cong : forall A B C P Q R, ~Col A B C -> Midpoint P B C -> Midpoint Q A C -> Midpoint R A B -> Par_strict A B Q P /\\ Par_strict A C P R /\\ Par_strict B C Q R /\\ Cong A R P Q /\\ Cong B R P Q /\\ Cong A Q P R /\\ Cong C Q P R /\\ Cong B P Q R /\\ Cong C P Q R.",
            "VernacStartTheoremProof",
            "f914dfc37d1cbf889b13ccb2c891cf2f7c9bd1bb"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "permutation_intro_in_hyps.",
            "VernacExtend",
            "000c04c724bb2cca01d903be6c37ef03600040aa"
        ],
        [
            "assert (Par_strict A B Q P /\\ Cong A R P Q /\\ Cong B R P Q) by (apply triangle_mid_par_strict_cong_aux with C; assumption).",
            "VernacExtend",
            "1be597facd3a4a86b1787055455d1c30ec82081a"
        ],
        [
            "assert (Par_strict A C R P /\\ Cong A Q P R /\\ Cong C Q P R) by (apply triangle_mid_par_strict_cong_aux with B; Col).",
            "VernacExtend",
            "69f7c45e94cdc99d230ab54b4633ff755b823058"
        ],
        [
            "assert (Par_strict C B Q R /\\ Cong C P R Q /\\ Cong B P R Q) by (apply triangle_mid_par_strict_cong_aux with A; Col).",
            "VernacExtend",
            "0613df93c4c9559ac29ed0ff280d719a40aef0d1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "repeat split...",
            "VernacExtend",
            "0321435bc7cb77f3f3ae66f45e4ed580fdab4f58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_flat_cong_aux : forall A B C P Q R, B <> A -> Col A B C -> Midpoint P B C -> Midpoint Q A C -> Midpoint R A B -> Par A B Q P /\\ Cong A R P Q /\\ Cong B R P Q.",
            "VernacStartTheoremProof",
            "94f3c6e676dfa14bce7a6b425f9cd62a289d4dcd"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (eq_dec_points A C); intro.",
            "VernacExtend",
            "c39e55933d1ac392cfb052e631383b40f686333c"
        ],
        [
            "assert_all.",
            "VernacExtend",
            "c951d32149d7d05950a856585b6d8e8668d9450c"
        ],
        [
            "split; try eCong.",
            "VernacExtend",
            "22fbe58b46d0ec192e10a648bffb1620e8f7781b"
        ],
        [
            "perm_apply (col_par)...",
            "VernacExtend",
            "20a69f5c6aacaeb48dfc4cf8f268d1da3e7a70ad"
        ],
        [
            "elim (eq_dec_points B C); intro.",
            "VernacExtend",
            "d6b2ddd3e024b270e2c4646a7734cd8e7cf30c96"
        ],
        [
            "assert_all.",
            "VernacExtend",
            "c951d32149d7d05950a856585b6d8e8668d9450c"
        ],
        [
            "split; try eCong.",
            "VernacExtend",
            "22fbe58b46d0ec192e10a648bffb1620e8f7781b"
        ],
        [
            "perm_apply (col_par)...",
            "VernacExtend",
            "20a69f5c6aacaeb48dfc4cf8f268d1da3e7a70ad"
        ],
        [
            "elim (eq_dec_points A P); intro.",
            "VernacExtend",
            "8f144d0456ff0ad8eae445a1c8eb8a939d989a4a"
        ],
        [
            "assert_all.",
            "VernacExtend",
            "c951d32149d7d05950a856585b6d8e8668d9450c"
        ],
        [
            "assert (Col A B Q) by ColR.",
            "VernacExtend",
            "4d16882f5574ebb4c4070c74db678d744ffd1287"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "perm_apply (col_par).",
            "VernacExtend",
            "9d6fc42fe28b9297747e1f6e0f3dcb0a41aa938e"
        ],
        [
            "assert_congs_perm.",
            "VernacExtend",
            "8c6812acf12bb64f145256b928e11d6446048a66"
        ],
        [
            "split; eCong.",
            "VernacExtend",
            "fe3ff1ae252dd86545968696e63887c933d7044d"
        ],
        [
            "Name x the symmetric of P wrt Q.",
            "VernacExtend",
            "aa9b8247cbe28c9ed9e762b686b62dd86df50824"
        ],
        [
            "elim (eq_dec_points P x); intro.",
            "VernacExtend",
            "9299c58da142bba7922c0540cac8cf021016d36f"
        ],
        [
            "treat_equalities; intuition.",
            "VernacExtend",
            "f53281d353df22ef04776a73fed27eaf145b9ab5"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert (Parallelogram A P C x) by (apply mid_plg_1 with Q;finish).",
            "VernacExtend",
            "3155f046fbb07c0d1a70998f6f7525f9bf455c96"
        ],
        [
            "assert_all.",
            "VernacExtend",
            "c951d32149d7d05950a856585b6d8e8668d9450c"
        ],
        [
            "assert_pars_perm.",
            "VernacExtend",
            "b685f50e6d121be1a17d3ac88c641b649d44a1c1"
        ],
        [
            "assert (Cong A x B P) by eCong.",
            "VernacExtend",
            "23c32469c03724c0d4da777ec6a2567f0195bde3"
        ],
        [
            "assert (Par A x B P) by (apply par_col2_par with P C; finish).",
            "VernacExtend",
            "09f55edc3e87365cef8dd2aacaa5fa654f4c6c2a"
        ],
        [
            "assert (HElim : Parallelogram A x B P \\/ Parallelogram A x P B) by (apply par_cong_plg_2; assumption).",
            "VernacExtend",
            "b7414cccd1dd212ff1471d17eee13ee6ff703e5a"
        ],
        [
            "induction HElim.",
            "VernacExtend",
            "de2252f6b2c805dcc464e2949b91de4c73abfa1c"
        ],
        [
            "Name M the intersection of the diagonals (A B) and (x P) of the parallelogram H19.",
            "VernacExtend",
            "5a6de9112fe3e6735fce52cc65aab2d42ecd4e57"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "search_contradiction.",
            "VernacExtend",
            "f2504dcfd25e5d9e8a9adeadccfad86ff74b7baa"
        ],
        [
            "assert_paras_perm.",
            "VernacExtend",
            "2f278c7c78514bf85590356a6bb68c5eeb210b39"
        ],
        [
            "assert_pars_perm.",
            "VernacExtend",
            "b685f50e6d121be1a17d3ac88c641b649d44a1c1"
        ],
        [
            "assert (Par P Q A B) by (apply par_col_par_2 with x; finish).",
            "VernacExtend",
            "feb528d20a7942cc1644329c477922889ed5fa6e"
        ],
        [
            "assert_congs_perm.",
            "VernacExtend",
            "8c6812acf12bb64f145256b928e11d6446048a66"
        ],
        [
            "repeat split; try eCong...",
            "VernacExtend",
            "dc964896b5d4a79a1b65ab288e5d75c37f6a8527"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_flat_cong_1 : forall A B C P Q R, B <> A -> Col A B C -> Midpoint P B C -> Midpoint Q A C -> Midpoint R A B -> Par A B Q P /\\ Cong A R P Q.",
            "VernacStartTheoremProof",
            "f81d80d21dabe9a0b3ec2623e890f3f7961a1960"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Par A B Q P /\\ Cong A R P Q /\\ Cong B R P Q) by (apply triangle_mid_par_flat_cong_aux with C; assumption).",
            "VernacExtend",
            "9da8bceb0af189b7a5de5ba2deefaecfc0c8b0d3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_flat_cong_2 : forall A B C P Q R, B <> A -> Col A B C -> Midpoint P B C -> Midpoint Q A C -> Midpoint R A B -> Par A B Q P /\\ Cong B R P Q.",
            "VernacStartTheoremProof",
            "cca8383e3472c08a1de1031a373cfdf00ac6e140"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Par A B Q P /\\ Cong A R P Q /\\ Cong B R P Q) by (apply triangle_mid_par_flat_cong_aux with C; assumption).",
            "VernacExtend",
            "9da8bceb0af189b7a5de5ba2deefaecfc0c8b0d3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_flat_cong : forall A B C P Q R, B <> A -> C <> A -> C <> B -> Col A B C -> Midpoint P B C -> Midpoint Q A C -> Midpoint R A B -> Par A B Q P /\\ Par A C P R /\\ Par B C Q R /\\ Cong A R P Q /\\ Cong B R P Q /\\ Cong A Q P R /\\ Cong C Q P R /\\ Cong B P Q R /\\ Cong C P Q R.",
            "VernacStartTheoremProof",
            "400349a601b78b1e9a6810f662288bfab1d5d6ea"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "permutation_intro_in_hyps.",
            "VernacExtend",
            "000c04c724bb2cca01d903be6c37ef03600040aa"
        ],
        [
            "assert (Par A B Q P /\\ Cong A R P Q /\\ Cong B R P Q) by (apply triangle_mid_par_flat_cong_aux with C; assumption).",
            "VernacExtend",
            "9da8bceb0af189b7a5de5ba2deefaecfc0c8b0d3"
        ],
        [
            "assert (Par A C R P /\\ Cong A Q P R /\\ Cong C Q P R) by (apply triangle_mid_par_flat_cong_aux with B; Col).",
            "VernacExtend",
            "4777978176869ac72a00d62d529c05ff4fd4ae89"
        ],
        [
            "assert (Par C B Q R /\\ Cong C P R Q /\\ Cong B P R Q) by (apply triangle_mid_par_flat_cong_aux with A; Col).",
            "VernacExtend",
            "e37a2d37dd9fca8d5013035d72d5b2806dd27072"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split...",
            "VernacExtend",
            "0321435bc7cb77f3f3ae66f45e4ed580fdab4f58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_flat : forall A B C P Q, B <> A -> Col A B C -> Midpoint P B C -> Midpoint Q A C -> Par A B Q P.",
            "VernacStartTheoremProof",
            "6a101a77cbde24b63f2cd6665969518fa9951166"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (midpoint_existence A B); intro R; intro.",
            "VernacExtend",
            "667f3a1e6631474a3a6243616546f8c88685d776"
        ],
        [
            "assert (HTMT := triangle_mid_par_flat_cong_aux A B C P Q R H H0 H1 H2 H3); spliter.",
            "VernacExtend",
            "7c70884d256dedf6c1c20d09fadc45ea73862011"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par : forall A B C P Q, A <> B -> Midpoint P B C -> Midpoint Q A C -> Par A B Q P.",
            "VernacStartTheoremProof",
            "c590c670fc93006e40d36f2dc650e888ba89dfc3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (col_dec A B C); intro.",
            "VernacExtend",
            "020950acb800cc1e6a6d204d473d22f3efbdf3fd"
        ],
        [
            "apply triangle_mid_par_flat with C; finish.",
            "VernacExtend",
            "2024a9a21552ec39d749b6e02fcac5da49592c06"
        ],
        [
            "apply par_strict_par; apply triangle_mid_par_strict with C; assumption.",
            "VernacExtend",
            "27c06500cc6ca8c245941451825511de503765fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_cong : forall A B C P Q R, B <> A -> C <> A -> C <> B -> Midpoint P B C -> Midpoint Q A C -> Midpoint R A B -> Par A B Q P /\\ Par A C P R /\\ Par B C Q R /\\ Cong A R P Q /\\ Cong B R P Q /\\ Cong A Q P R /\\ Cong C Q P R /\\ Cong B P Q R /\\ Cong C P Q R.",
            "VernacStartTheoremProof",
            "c4c65e524385a3fb8364bcefdbf02580ee7eab33"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (col_dec A B C); intro.",
            "VernacExtend",
            "020950acb800cc1e6a6d204d473d22f3efbdf3fd"
        ],
        [
            "apply triangle_mid_par_flat_cong; assumption.",
            "VernacExtend",
            "731e5a6ff39c41de147d06d63abe37524f1c42c4"
        ],
        [
            "assert (HTMT := triangle_mid_par_strict_cong A B C P Q R H5 H2 H3 H4); spliter.",
            "VernacExtend",
            "cbf13ff4ce7af5b454a05da820d0bafb160e86ed"
        ],
        [
            "repeat split; try apply par_strict_par; assumption.",
            "VernacExtend",
            "33d2b76dceb913b879138cd7edbe8c4fa6d916e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_mid_par_cong_1 : forall A B C P Q R, C <> B -> Midpoint P B C -> Midpoint Q A C -> Midpoint R A B -> Par B C Q R /\\ Cong B P Q R .",
            "VernacStartTheoremProof",
            "c5fbfa8121dd6f9fa2e4e04666b8f562cf4169bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "perm_apply (triangle_mid_par B C A Q R);finish.",
            "VernacExtend",
            "78507db7c4ff83d0f9d40bf3062b58e4af205836"
        ],
        [
            "induction (col_dec A B C).",
            "VernacExtend",
            "a308b0a7aa87a8d722d63307a143a32131516309"
        ],
        [
            "assert (Par C B Q R /\\ Cong B P R Q).",
            "VernacExtend",
            "4e0e10fc24d95134538c469647f12815c2008175"
        ],
        [
            "apply (triangle_mid_par_flat_cong_2 C B A R Q P);finish.",
            "VernacExtend",
            "28d7a15e6961f7cb0e19b99747d9e289a286eab5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "assert (HTMT := triangle_mid_par_strict_cong A B C P Q R H3 H0 H1 H2); spliter.",
            "VernacExtend",
            "d0fcb4358ec14d88d8a0febbf2e7fc75402266c0"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TriangleMidpointsTheorems.",
            "VernacEndSegment",
            "7ef9934147d49502db128d5e51756b4af926a9ff"
        ]
    ],
    "proofs": [
        {
            "name": "col_permut132",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "exact col_permutation_5.",
                        "VernacExtend",
                        "7bb99cb22c28a563546bb43ee24300c3a59817c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_permut213",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "exact col_permutation_4.",
                        "VernacExtend",
                        "1d6aa546351509c862cc134e2565fbf5cb8ac694"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_permut231",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "exact col_permutation_1.",
                        "VernacExtend",
                        "1b43ee0abe1ad5e63f299b73649ddc51005f3f3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_permut312",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "exact col_permutation_2.",
                        "VernacExtend",
                        "d4bebd0595bd7ff59196d4d04048b91a2aaff502"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_permut321",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "exact col_permutation_3.",
                        "VernacExtend",
                        "5ac054945d2fe70cbd1c312390a7bdfb8837d817"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col123_124__col134",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "exact col_transitivity_1.",
                        "VernacExtend",
                        "c70aedee5d08808b666d1fd420726c12cd945c51"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col123_124__col234",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "exact col_transitivity_2.",
                        "VernacExtend",
                        "5fb75679dbe6d02e2c0c71dcc9a7dafdcd64c9f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_mid_par_strict",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "Name x the symmetric of P wrt Q.",
                        "VernacExtend",
                        "aa9b8247cbe28c9ed9e762b686b62dd86df50824"
                    ]
                },
                {
                    "command": [
                        "assert_all.",
                        "VernacExtend",
                        "c951d32149d7d05950a856585b6d8e8668d9450c"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A P C) by (intro; search_contradiction).",
                        "VernacExtend",
                        "2e21b9b295ce8cafeb885b8aa3a384537efe5af2"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (Parallelogram_strict A P C x) by (apply mid_plgs with Q;finish).",
                        "VernacExtend",
                        "67a4e0531d26ec14669827dcd770a3f88aa15d5b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A x B P) by (assert_paras_perm; assert_pars_perm; assert_all; eCong).",
                        "VernacExtend",
                        "16b4eecc5e1789ddca039c7b4928cd38df5ee934"
                    ]
                },
                {
                    "command": [
                        "assert (Par A x B P) by (assert_paras_perm; assert_pars_perm; apply par_col2_par with P C; finish).",
                        "VernacExtend",
                        "726f1f70a0a9c3aae293617e6d13af4ab073bf6c"
                    ]
                },
                {
                    "command": [
                        "assert (HElim : Parallelogram A x B P \\/ Parallelogram A x P B) by (apply par_cong_plg_2; assumption).",
                        "VernacExtend",
                        "b7414cccd1dd212ff1471d17eee13ee6ff703e5a"
                    ]
                },
                {
                    "command": [
                        "induction HElim.",
                        "VernacExtend",
                        "de2252f6b2c805dcc464e2949b91de4c73abfa1c"
                    ]
                },
                {
                    "command": [
                        "assert_paras_perm; assert_pars_perm.",
                        "VernacExtend",
                        "f895acfc36773075043552ea3a12b922288a3104"
                    ]
                },
                {
                    "command": [
                        "Name M the intersection of the diagonals (A B) and (x P) of the parallelogram H15.",
                        "VernacExtend",
                        "c8b87b29e2e3ea1588a73b8487420041c463419e"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "search_contradiction.",
                        "VernacExtend",
                        "f2504dcfd25e5d9e8a9adeadccfad86ff74b7baa"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_col2_par_strict with x P; try solve[assert_paras_perm; assert_pars_perm; assert_all; Col].",
                        "VernacExtend",
                        "4c2e9852ec80464dbc48e2048b00fd1da11b9ba0"
                    ]
                },
                {
                    "command": [
                        "apply ncol123_plg__pars1423; auto; intro; apply H.",
                        "VernacExtend",
                        "4d73c1d8ba9e091b1e11296fd595bd53dd2af1e2"
                    ]
                },
                {
                    "command": [
                        "assert (P <> x) by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "7944f7f362999bfacdc23f8e7d5d5edfc72dc9dd"
                    ]
                },
                {
                    "command": [
                        "apply col_permut231; apply col123_124__col234 with P; [| |apply col_permut231]; auto.",
                        "VernacExtend",
                        "fe08cacc680db93fd0f1994c594eff85f41b73c4"
                    ]
                },
                {
                    "command": [
                        "apply col_permut231; apply col123_124__col134 with Q; auto.",
                        "VernacExtend",
                        "43eb5ded3771f685e680393170ce3db82a509be9"
                    ]
                },
                {
                    "command": [
                        "apply col_permut231; apply col123_124__col134 with x; [|apply col_permut321|apply col_permut132]; auto.",
                        "VernacExtend",
                        "9cfc68619ad5e99766d4c22da9a67ba86a339fc7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_par_mid",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "assert (H:=playfair_s_postulate_implies_midpoint_converse_postulate); unfold midpoint_converse_postulate in H; intros; apply H with B P; Col.",
                        "VernacExtend",
                        "82a19eea3b04d1fe19e74018b34b5b96a7a5c0f3"
                    ]
                },
                {
                    "command": [
                        "unfold playfair_s_postulate.",
                        "VernacExtend",
                        "cb2b84f1e26bea4fb855c4995bc5bef4e07afeeb"
                    ]
                },
                {
                    "command": [
                        "apply parallel_uniqueness.",
                        "VernacExtend",
                        "6b5420b96ff883b4e318426ce6876c6d0412eed1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_mid_par_strict_cong_1",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Par_strict A B Q P /\\ Cong A R P Q /\\ Cong B R P Q) by (apply triangle_mid_par_strict_cong_aux with C; assumption).",
                        "VernacExtend",
                        "1be597facd3a4a86b1787055455d1c30ec82081a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_mid_par_strict_cong_2",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Par_strict A B Q P /\\ Cong A R P Q /\\ Cong B R P Q) by (apply triangle_mid_par_strict_cong_aux with C; assumption).",
                        "VernacExtend",
                        "1be597facd3a4a86b1787055455d1c30ec82081a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_mid_par_strict_cong_simp",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "apply triangle_mid_par.",
                        "VernacExtend",
                        "e463316af328ab611fc0734b50d067ee9afdc0e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_mid_par_flat_cong_1",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B Q P /\\ Cong A R P Q /\\ Cong B R P Q) by (apply triangle_mid_par_flat_cong_aux with C; assumption).",
                        "VernacExtend",
                        "9da8bceb0af189b7a5de5ba2deefaecfc0c8b0d3"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_mid_par_flat_cong_2",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B Q P /\\ Cong A R P Q /\\ Cong B R P Q) by (apply triangle_mid_par_flat_cong_aux with C; assumption).",
                        "VernacExtend",
                        "9da8bceb0af189b7a5de5ba2deefaecfc0c8b0d3"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_mid_par_flat",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (midpoint_existence A B); intro R; intro.",
                        "VernacExtend",
                        "667f3a1e6631474a3a6243616546f8c88685d776"
                    ]
                },
                {
                    "command": [
                        "assert (HTMT := triangle_mid_par_flat_cong_aux A B C P Q R H H0 H1 H2 H3); spliter.",
                        "VernacExtend",
                        "7c70884d256dedf6c1c20d09fadc45ea73862011"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_mid_par",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (col_dec A B C); intro.",
                        "VernacExtend",
                        "020950acb800cc1e6a6d204d473d22f3efbdf3fd"
                    ]
                },
                {
                    "command": [
                        "apply triangle_mid_par_flat with C; finish.",
                        "VernacExtend",
                        "2024a9a21552ec39d749b6e02fcac5da49592c06"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_par; apply triangle_mid_par_strict with C; assumption.",
                        "VernacExtend",
                        "27c06500cc6ca8c245941451825511de503765fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_mid_par_cong",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (col_dec A B C); intro.",
                        "VernacExtend",
                        "020950acb800cc1e6a6d204d473d22f3efbdf3fd"
                    ]
                },
                {
                    "command": [
                        "apply triangle_mid_par_flat_cong; assumption.",
                        "VernacExtend",
                        "731e5a6ff39c41de147d06d63abe37524f1c42c4"
                    ]
                },
                {
                    "command": [
                        "assert (HTMT := triangle_mid_par_strict_cong A B C P Q R H5 H2 H3 H4); spliter.",
                        "VernacExtend",
                        "cbf13ff4ce7af5b454a05da820d0bafb160e86ed"
                    ]
                },
                {
                    "command": [
                        "repeat split; try apply par_strict_par; assumption.",
                        "VernacExtend",
                        "33d2b76dceb913b879138cd7edbe8c4fa6d916e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_mid_par_cong_1",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "perm_apply (triangle_mid_par B C A Q R);finish.",
                        "VernacExtend",
                        "78507db7c4ff83d0f9d40bf3062b58e4af205836"
                    ]
                },
                {
                    "command": [
                        "induction (col_dec A B C).",
                        "VernacExtend",
                        "a308b0a7aa87a8d722d63307a143a32131516309"
                    ]
                },
                {
                    "command": [
                        "assert (Par C B Q R /\\ Cong B P R Q).",
                        "VernacExtend",
                        "4e0e10fc24d95134538c469647f12815c2008175"
                    ]
                },
                {
                    "command": [
                        "apply (triangle_mid_par_flat_cong_2 C B A R Q P);finish.",
                        "VernacExtend",
                        "28d7a15e6961f7cb0e19b99747d9e289a286eab5"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "finish.",
                        "VernacExtend",
                        "0eb65e2600b0e543719211fd4fd520bb87987cf1"
                    ]
                },
                {
                    "command": [
                        "assert (HTMT := triangle_mid_par_strict_cong A B C P Q R H3 H0 H1 H2); spliter.",
                        "VernacExtend",
                        "d0fcb4358ec14d88d8a0febbf2e7fc75402266c0"
                    ]
                },
                {
                    "command": [
                        "finish.",
                        "VernacExtend",
                        "0eb65e2600b0e543719211fd4fd520bb87987cf1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}